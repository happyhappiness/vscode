<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5536_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit_list<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">collect_parents<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">commit<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">head_commit<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
					   <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">head_subsumed<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
					   <parameter><decl><type><name pos:line="3" pos:column="44">int<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">argc<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="54">const<pos:position pos:line="3" pos:column="59"/></specifier> <name pos:line="3" pos:column="60">char<pos:position pos:line="3" pos:column="64"/></name> <modifier pos:line="3" pos:column="65">*<pos:position pos:line="3" pos:column="66"/></modifier><modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">argv<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
					   <parameter><decl><type><name><name pos:line="4" pos:column="44">struct<pos:position pos:line="4" pos:column="50"/></name> <name pos:line="4" pos:column="51">strbuf<pos:position pos:line="4" pos:column="57"/></name></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">merge_msg<pos:position pos:line="4" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="69"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit_list<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">remoteheads<pos:position pos:line="7" pos:column="40"/></name> <init pos:line="7" pos:column="41">= <expr><name pos:line="7" pos:column="43">NULL<pos:position pos:line="7" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit_list<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier><modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">remotes<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="41">remoteheads<pos:position pos:line="8" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">merge_names<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><name pos:line="9" pos:column="37">STRBUF_INIT<pos:position pos:line="9" pos:column="48"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="51">autogen<pos:position pos:line="9" pos:column="58"/></name> <init pos:line="9" pos:column="59">= <expr><name pos:line="9" pos:column="61">NULL<pos:position pos:line="9" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="66"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">merge_msg<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&amp;&amp;<pos:position pos:line="11" pos:column="33"/></operator> <operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><operator pos:line="11" pos:column="27">!<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">have_message<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">||<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">shortlog_len<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">)<pos:position pos:line="11" pos:column="57"/></operator></expr>)<pos:position pos:line="11" pos:column="58"/></condition><then pos:line="11" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">autogen<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="28">merge_names<pos:position pos:line="12" pos:column="39"/></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">head_commit<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">remotes<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="27">&amp;<pos:position pos:line="15" pos:column="32"/></operator><call><name pos:line="15" pos:column="28">commit_list_insert<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">head_commit<pos:position pos:line="15" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="60">remotes<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call><operator pos:line="15" pos:column="68">-&gt;<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="70">next<pos:position pos:line="15" pos:column="74"/></name></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">argc<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="21">1<pos:position pos:line="17" pos:column="22"/></literal> <operator pos:line="17" pos:column="23">&amp;&amp;<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="26">!<pos:position pos:line="17" pos:column="27"/></operator><call><name pos:line="17" pos:column="27">strcmp<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">argv<pos:position pos:line="17" pos:column="38"/></name><index pos:line="17" pos:column="38">[<expr><literal type="number" pos:line="17" pos:column="39">0<pos:position pos:line="17" pos:column="40"/></literal></expr>]<pos:position pos:line="17" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="43">"FETCH_HEAD"<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="57"/></condition><then pos:line="17" pos:column="57"> <block pos:line="17" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">handle_fetch_head<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">remotes<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">autogen<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">remoteheads<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <call><name pos:line="19" pos:column="31">reduce_parents<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">head_commit<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">head_subsumed<pos:position pos:line="19" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="74">remoteheads<pos:position pos:line="19" pos:column="85"/></name></expr></argument>)<pos:position pos:line="19" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="87"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
		<for pos:line="21" pos:column="17">for <control pos:line="21" pos:column="21">(<init><expr><name pos:line="21" pos:column="22">i<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></init> <condition><expr><name pos:line="21" pos:column="29">i<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">&lt;<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="33">argc<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></condition> <incr><expr><name pos:line="21" pos:column="39">i<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">++<pos:position pos:line="21" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="43"/></control> <block pos:line="21" pos:column="44">{
			<decl_stmt><decl><type><name><name pos:line="22" pos:column="25">struct<pos:position pos:line="22" pos:column="31"/></name> <name pos:line="22" pos:column="32">commit<pos:position pos:line="22" pos:column="38"/></name></name> <modifier pos:line="22" pos:column="39">*<pos:position pos:line="22" pos:column="40"/></modifier></type><name pos:line="22" pos:column="40">commit<pos:position pos:line="22" pos:column="46"/></name> <init pos:line="22" pos:column="47">= <expr><call><name pos:line="22" pos:column="49">get_merge_parent<pos:position pos:line="22" pos:column="65"/></name><argument_list pos:line="22" pos:column="65">(<argument><expr><name><name pos:line="22" pos:column="66">argv<pos:position pos:line="22" pos:column="70"/></name><index pos:line="22" pos:column="70">[<expr><name pos:line="22" pos:column="71">i<pos:position pos:line="22" pos:column="72"/></name></expr>]<pos:position pos:line="22" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="75"/></decl_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><operator pos:line="23" pos:column="29">!<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">commit<pos:position pos:line="23" pos:column="36"/></name></expr>)<pos:position pos:line="23" pos:column="37"/></condition><then pos:line="23" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="33">help_unknown_ref<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name><name pos:line="24" pos:column="50">argv<pos:position pos:line="24" pos:column="54"/></name><index pos:line="24" pos:column="54">[<expr><name pos:line="24" pos:column="55">i<pos:position pos:line="24" pos:column="56"/></name></expr>]<pos:position pos:line="24" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="59">"merge"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>,
						 <argument><expr><literal type="string" pos:line="25" pos:column="50">"not something we can merge"<pos:position pos:line="25" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="26" pos:column="25">remotes<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><call><name pos:line="26" pos:column="36">commit_list_insert<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><name pos:line="26" pos:column="55">commit<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">remotes<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call><operator pos:line="26" pos:column="71">-&gt;<pos:position pos:line="26" pos:column="76"/></operator><name pos:line="26" pos:column="73">next<pos:position pos:line="26" pos:column="77"/></name></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="28" pos:column="17">remoteheads<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">reduce_parents<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name pos:line="28" pos:column="46">head_commit<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">head_subsumed<pos:position pos:line="28" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="74">remoteheads<pos:position pos:line="28" pos:column="85"/></name></expr></argument>)<pos:position pos:line="28" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="87"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">autogen<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
			<decl_stmt><decl><type><name><name pos:line="30" pos:column="25">struct<pos:position pos:line="30" pos:column="31"/></name> <name pos:line="30" pos:column="32">commit_list<pos:position pos:line="30" pos:column="43"/></name></name> <modifier pos:line="30" pos:column="44">*<pos:position pos:line="30" pos:column="45"/></modifier></type><name pos:line="30" pos:column="45">p<pos:position pos:line="30" pos:column="46"/></name></decl>;<pos:position pos:line="30" pos:column="47"/></decl_stmt>
			<for pos:line="31" pos:column="25">for <control pos:line="31" pos:column="29">(<init><expr><name pos:line="31" pos:column="30">p<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">remoteheads<pos:position pos:line="31" pos:column="45"/></name></expr>;<pos:position pos:line="31" pos:column="46"/></init> <condition><expr><name pos:line="31" pos:column="47">p<pos:position pos:line="31" pos:column="48"/></name></expr>;<pos:position pos:line="31" pos:column="49"/></condition> <incr><expr><name pos:line="31" pos:column="50">p<pos:position pos:line="31" pos:column="51"/></name> <operator pos:line="31" pos:column="52">=<pos:position pos:line="31" pos:column="53"/></operator> <name><name pos:line="31" pos:column="54">p<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">next<pos:position pos:line="31" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="31" pos:column="62"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="33">merge_name<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><call><name pos:line="32" pos:column="44">merge_remote_util<pos:position pos:line="32" pos:column="61"/></name><argument_list pos:line="32" pos:column="61">(<argument><expr><name><name pos:line="32" pos:column="62">p<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">-&gt;<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="65">item<pos:position pos:line="32" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call><operator pos:line="32" pos:column="70">-&gt;<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="72">name<pos:position pos:line="32" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="78">autogen<pos:position pos:line="32" pos:column="85"/></name></expr></argument>)<pos:position pos:line="32" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="87"/></expr_stmt></block></for>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">autogen<pos:position pos:line="36" pos:column="20"/></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21"> <block pos:line="36" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">prepare_merge_message<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">autogen<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">merge_msg<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">strbuf_release<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">autogen<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">remoteheads<pos:position pos:line="41" pos:column="27"/></name></expr>;<pos:position pos:line="41" pos:column="28"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2534_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">untracked_cache<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">read_untracked_extension<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">data<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">unsigned<pos:position pos:line="1" pos:column="76"/></name> <name pos:line="1" pos:column="77">long<pos:position pos:line="1" pos:column="81"/></name></type> <name pos:line="1" pos:column="82">sz<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">untracked_cache<pos:position pos:line="3" pos:column="31"/></name></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">uc<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">read_data<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">rd<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">unsigned<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">next<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">data<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="44">end<pos:position pos:line="5" pos:column="47"/></name> <init pos:line="5" pos:column="48">= <expr><operator pos:line="5" pos:column="50">(<pos:position pos:line="5" pos:column="51"/></operator><specifier pos:line="5" pos:column="51">const<pos:position pos:line="5" pos:column="56"/></specifier> <name pos:line="5" pos:column="57">unsigned<pos:position pos:line="5" pos:column="65"/></name> <name pos:line="5" pos:column="66">char<pos:position pos:line="5" pos:column="70"/></name> <operator pos:line="5" pos:column="71">*<pos:position pos:line="5" pos:column="72"/></operator><operator pos:line="5" pos:column="72">)<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="73">data<pos:position pos:line="5" pos:column="77"/></name> <operator pos:line="5" pos:column="78">+<pos:position pos:line="5" pos:column="79"/></operator> <name pos:line="5" pos:column="80">sz<pos:position pos:line="5" pos:column="82"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="83"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ident<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ident_len<pos:position pos:line="7" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="24">len<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">exclude_per_dir<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">sz<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&lt;=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="19">1<pos:position pos:line="10" pos:column="20"/></literal> <operator pos:line="10" pos:column="21">||<pos:position pos:line="10" pos:column="23"/></operator> <name><name pos:line="10" pos:column="24">end<pos:position pos:line="10" pos:column="27"/></name><index pos:line="10" pos:column="27">[<expr><operator pos:line="10" pos:column="28">-<pos:position pos:line="10" pos:column="29"/></operator><literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal></expr>]<pos:position pos:line="10" pos:column="31"/></index></name> <operator pos:line="10" pos:column="32">!=<pos:position pos:line="10" pos:column="34"/></operator> <literal type="char" pos:line="10" pos:column="35">'\0'<pos:position pos:line="10" pos:column="39"/></literal></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">end<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">--<pos:position pos:line="12" pos:column="14"/></operator></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">ident_len<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">decode_varint<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="36">next<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">next<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">+<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">ident_len<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">&gt;<pos:position pos:line="15" pos:column="34"/></operator> <name pos:line="15" pos:column="32">end<pos:position pos:line="15" pos:column="35"/></name></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">ident<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator><specifier pos:line="17" pos:column="18">const<pos:position pos:line="17" pos:column="23"/></specifier> <name pos:line="17" pos:column="24">char<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="30">)<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">next<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">next<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">+=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">ident_len<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">next<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">+<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">ouc_size<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="number" pos:line="20" pos:column="29">0<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call> <operator pos:line="20" pos:column="32">&gt;<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="34">end<pos:position pos:line="20" pos:column="37"/></name></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">uc<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">xcalloc<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><literal type="number" pos:line="23" pos:column="22">1<pos:position pos:line="23" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="25">sizeof<argument_list pos:line="23" pos:column="31">(<argument><expr><operator pos:line="23" pos:column="32">*<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">uc<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_init<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name><name pos:line="24" pos:column="22">uc<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">ident<pos:position pos:line="24" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">ident_len<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strbuf_add<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><operator pos:line="25" pos:column="20">&amp;<pos:position pos:line="25" pos:column="25"/></operator><name><name pos:line="25" pos:column="21">uc<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">ident<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">ident<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">ident_len<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">load_sha1_stat<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name><name pos:line="26" pos:column="25">uc<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">ss_info_exclude<pos:position pos:line="26" pos:column="44"/></name></name></expr></argument>,
		       <argument><expr><name pos:line="27" pos:column="24">next<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">+<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="31">ouc_offset<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">info_exclude_stat<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr></argument>,
		       <argument><expr><name pos:line="28" pos:column="24">next<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">+<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">ouc_offset<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">info_exclude_sha1<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">load_sha1_stat<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">&amp;<pos:position pos:line="29" pos:column="29"/></operator><name><name pos:line="29" pos:column="25">uc<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">ss_excludes_file<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>,
		       <argument><expr><name pos:line="30" pos:column="24">next<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">+<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">ouc_offset<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">excludes_file_stat<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr></argument>,
		       <argument><expr><name pos:line="31" pos:column="24">next<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">+<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">ouc_offset<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">excludes_file_sha1<pos:position pos:line="31" pos:column="60"/></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">uc<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">dir_flags<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">get_be32<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">next<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">+<pos:position pos:line="32" pos:column="40"/></operator> <call><name pos:line="32" pos:column="41">ouc_offset<pos:position pos:line="32" pos:column="51"/></name><argument_list pos:line="32" pos:column="51">(<argument><expr><name pos:line="32" pos:column="52">dir_flags<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="33" pos:column="9">exclude_per_dir<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <operator pos:line="33" pos:column="27">(<pos:position pos:line="33" pos:column="28"/></operator><specifier pos:line="33" pos:column="28">const<pos:position pos:line="33" pos:column="33"/></specifier> <name pos:line="33" pos:column="34">char<pos:position pos:line="33" pos:column="38"/></name> <operator pos:line="33" pos:column="39">*<pos:position pos:line="33" pos:column="40"/></operator><operator pos:line="33" pos:column="40">)<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">next<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">+<pos:position pos:line="33" pos:column="47"/></operator> <call><name pos:line="33" pos:column="48">ouc_offset<pos:position pos:line="33" pos:column="58"/></name><argument_list pos:line="33" pos:column="58">(<argument><expr><name pos:line="33" pos:column="59">exclude_per_dir<pos:position pos:line="33" pos:column="74"/></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">uc<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">exclude_per_dir<pos:position pos:line="34" pos:column="28"/></name></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <call><name pos:line="34" pos:column="31">xstrdup<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><name pos:line="34" pos:column="39">exclude_per_dir<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
	<comment type="block" pos:line="35" pos:column="9">/* NUL after exclude_per_dir is covered by sizeof(*ouc) */</comment>
	<expr_stmt><expr><name pos:line="36" pos:column="9">next<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">+=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">ouc_size<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><call><name pos:line="36" pos:column="26">strlen<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">exclude_per_dir<pos:position pos:line="36" pos:column="48"/></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">next<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">&gt;=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="21">end<pos:position pos:line="37" pos:column="24"/></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25">
		<block type="pseudo"><goto pos:line="38" pos:column="17">goto <name pos:line="38" pos:column="22">done2<pos:position pos:line="38" pos:column="27"/></name>;<pos:position pos:line="38" pos:column="28"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">len<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">decode_varint<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><operator pos:line="40" pos:column="29">&amp;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="30">next<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">next<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">&gt;<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="20">end<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">||<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">len<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">==<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">0<pos:position pos:line="41" pos:column="35"/></literal></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36">
		<block type="pseudo"><goto pos:line="42" pos:column="17">goto <name pos:line="42" pos:column="22">done2<pos:position pos:line="42" pos:column="27"/></name>;<pos:position pos:line="42" pos:column="28"/></goto></block></then></if>

	<expr_stmt><expr><name><name pos:line="44" pos:column="9">rd<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">valid<pos:position pos:line="44" pos:column="17"/></name></name>      <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <call><name pos:line="44" pos:column="25">ewah_new<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">()<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">rd<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">.<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">check_only<pos:position pos:line="45" pos:column="22"/></name></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <call><name pos:line="45" pos:column="25">ewah_new<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">()<pos:position pos:line="45" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">rd<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">.<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="12">sha1_valid<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <call><name pos:line="46" pos:column="25">ewah_new<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">()<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">rd<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">.<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">data<pos:position pos:line="47" pos:column="16"/></name></name>	      <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">next<pos:position pos:line="47" pos:column="29"/></name></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">rd<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">.<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">end<pos:position pos:line="48" pos:column="15"/></name></name>	      <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="25">end<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">rd<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">.<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="12">index<pos:position pos:line="49" pos:column="17"/></name></name>      <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <literal type="number" pos:line="49" pos:column="25">0<pos:position pos:line="49" pos:column="26"/></literal></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">ALLOC_ARRAY<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name><name pos:line="50" pos:column="21">rd<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">ucd<pos:position pos:line="50" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="29">len<pos:position pos:line="50" pos:column="32"/></name></expr></argument>)<pos:position pos:line="50" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><call><name pos:line="52" pos:column="13">read_one_dir<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><operator pos:line="52" pos:column="26">&amp;<pos:position pos:line="52" pos:column="31"/></operator><name><name pos:line="52" pos:column="27">uc<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">root<pos:position pos:line="52" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="37">&amp;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="38">rd<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call> <operator pos:line="52" pos:column="42">||<pos:position pos:line="52" pos:column="44"/></operator> <name><name pos:line="52" pos:column="45">rd<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">.<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">index<pos:position pos:line="52" pos:column="53"/></name></name> <operator pos:line="52" pos:column="54">!=<pos:position pos:line="52" pos:column="56"/></operator> <name pos:line="52" pos:column="57">len<pos:position pos:line="52" pos:column="60"/></name></expr>)<pos:position pos:line="52" pos:column="61"/></condition><then pos:line="52" pos:column="61">
		<block type="pseudo"><goto pos:line="53" pos:column="17">goto <name pos:line="53" pos:column="22">done<pos:position pos:line="53" pos:column="26"/></name>;<pos:position pos:line="53" pos:column="27"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="55" pos:column="9">next<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <name><name pos:line="55" pos:column="16">rd<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">.<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">data<pos:position pos:line="55" pos:column="23"/></name></name></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="56" pos:column="9">len<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">ewah_read_mmap<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name><name pos:line="56" pos:column="30">rd<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">.<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">valid<pos:position pos:line="56" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="40">next<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">end<pos:position pos:line="56" pos:column="49"/></name> <operator pos:line="56" pos:column="50">-<pos:position pos:line="56" pos:column="51"/></operator> <name pos:line="56" pos:column="52">next<pos:position pos:line="56" pos:column="56"/></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="58"/></expr_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">len<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&lt;<pos:position pos:line="57" pos:column="21"/></operator> <literal type="number" pos:line="57" pos:column="19">0<pos:position pos:line="57" pos:column="20"/></literal></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21">
		<block type="pseudo"><goto pos:line="58" pos:column="17">goto <name pos:line="58" pos:column="22">done<pos:position pos:line="58" pos:column="26"/></name>;<pos:position pos:line="58" pos:column="27"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="60" pos:column="9">next<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">+=<pos:position pos:line="60" pos:column="16"/></operator> <name pos:line="60" pos:column="17">len<pos:position pos:line="60" pos:column="20"/></name></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">len<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <call><name pos:line="61" pos:column="15">ewah_read_mmap<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name><name pos:line="61" pos:column="30">rd<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">.<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="33">check_only<pos:position pos:line="61" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="45">next<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="51">end<pos:position pos:line="61" pos:column="54"/></name> <operator pos:line="61" pos:column="55">-<pos:position pos:line="61" pos:column="56"/></operator> <name pos:line="61" pos:column="57">next<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">len<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">&lt;<pos:position pos:line="62" pos:column="21"/></operator> <literal type="number" pos:line="62" pos:column="19">0<pos:position pos:line="62" pos:column="20"/></literal></expr>)<pos:position pos:line="62" pos:column="21"/></condition><then pos:line="62" pos:column="21">
		<block type="pseudo"><goto pos:line="63" pos:column="17">goto <name pos:line="63" pos:column="22">done<pos:position pos:line="63" pos:column="26"/></name>;<pos:position pos:line="63" pos:column="27"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="65" pos:column="9">next<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">+=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">len<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="66" pos:column="9">len<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <call><name pos:line="66" pos:column="15">ewah_read_mmap<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name><name pos:line="66" pos:column="30">rd<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">.<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="33">sha1_valid<pos:position pos:line="66" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="45">next<pos:position pos:line="66" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="51">end<pos:position pos:line="66" pos:column="54"/></name> <operator pos:line="66" pos:column="55">-<pos:position pos:line="66" pos:column="56"/></operator> <name pos:line="66" pos:column="57">next<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="63"/></expr_stmt>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">len<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">&lt;<pos:position pos:line="67" pos:column="21"/></operator> <literal type="number" pos:line="67" pos:column="19">0<pos:position pos:line="67" pos:column="20"/></literal></expr>)<pos:position pos:line="67" pos:column="21"/></condition><then pos:line="67" pos:column="21">
		<block type="pseudo"><goto pos:line="68" pos:column="17">goto <name pos:line="68" pos:column="22">done<pos:position pos:line="68" pos:column="26"/></name>;<pos:position pos:line="68" pos:column="27"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="70" pos:column="9">ewah_each_bit<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name><name pos:line="70" pos:column="23">rd<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">.<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="26">check_only<pos:position pos:line="70" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="38">set_check_only<pos:position pos:line="70" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="54">&amp;<pos:position pos:line="70" pos:column="59"/></operator><name pos:line="70" pos:column="55">rd<pos:position pos:line="70" pos:column="57"/></name></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="71" pos:column="9">rd<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">.<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="12">data<pos:position pos:line="71" pos:column="16"/></name></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <name pos:line="71" pos:column="19">next<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">+<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">len<pos:position pos:line="71" pos:column="29"/></name></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">ewah_each_bit<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><name><name pos:line="72" pos:column="23">rd<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">.<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">valid<pos:position pos:line="72" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="33">read_stat<pos:position pos:line="72" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="44">&amp;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="45">rd<pos:position pos:line="72" pos:column="47"/></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="73" pos:column="9">ewah_each_bit<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name><name pos:line="73" pos:column="23">rd<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">.<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="26">sha1_valid<pos:position pos:line="73" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="38">read_sha1<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="49">&amp;<pos:position pos:line="73" pos:column="54"/></operator><name pos:line="73" pos:column="50">rd<pos:position pos:line="73" pos:column="52"/></name></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name pos:line="74" pos:column="9">next<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <name><name pos:line="74" pos:column="16">rd<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">.<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="19">data<pos:position pos:line="74" pos:column="23"/></name></name></expr>;<pos:position pos:line="74" pos:column="24"/></expr_stmt>

<label><name pos:line="76" pos:column="1">done<pos:position pos:line="76" pos:column="5"/></name>:<pos:position pos:line="76" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">free<pos:position pos:line="77" pos:column="13"/></name><argument_list pos:line="77" pos:column="13">(<argument><expr><name><name pos:line="77" pos:column="14">rd<pos:position pos:line="77" pos:column="16"/></name><operator pos:line="77" pos:column="16">.<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="17">ucd<pos:position pos:line="77" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="78" pos:column="9">ewah_free<pos:position pos:line="78" pos:column="18"/></name><argument_list pos:line="78" pos:column="18">(<argument><expr><name><name pos:line="78" pos:column="19">rd<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">.<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="22">valid<pos:position pos:line="78" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">ewah_free<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><name><name pos:line="79" pos:column="19">rd<pos:position pos:line="79" pos:column="21"/></name><operator pos:line="79" pos:column="21">.<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="22">check_only<pos:position pos:line="79" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">ewah_free<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name><name pos:line="80" pos:column="19">rd<pos:position pos:line="80" pos:column="21"/></name><operator pos:line="80" pos:column="21">.<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">sha1_valid<pos:position pos:line="80" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="34"/></expr_stmt>
<label><name pos:line="81" pos:column="1">done2<pos:position pos:line="81" pos:column="6"/></name>:<pos:position pos:line="81" pos:column="7"/></label>
	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">next<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">!=<pos:position pos:line="82" pos:column="20"/></operator> <name pos:line="82" pos:column="21">end<pos:position pos:line="82" pos:column="24"/></name></expr>)<pos:position pos:line="82" pos:column="25"/></condition><then pos:line="82" pos:column="25"> <block pos:line="82" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="83" pos:column="17">free_untracked_cache<pos:position pos:line="83" pos:column="37"/></name><argument_list pos:line="83" pos:column="37">(<argument><expr><name pos:line="83" pos:column="38">uc<pos:position pos:line="83" pos:column="40"/></name></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="84" pos:column="17">uc<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <name pos:line="84" pos:column="22">NULL<pos:position pos:line="84" pos:column="26"/></name></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>
	<return pos:line="86" pos:column="9">return <expr><name pos:line="86" pos:column="16">uc<pos:position pos:line="86" pos:column="18"/></name></expr>;<pos:position pos:line="86" pos:column="19"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

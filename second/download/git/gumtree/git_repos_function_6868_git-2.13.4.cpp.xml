<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6868_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">check_subexp_limits<pos:position pos:line="3" pos:column="20"/></name> <parameter_list pos:line="3" pos:column="21">(<parameter><decl><type><specifier pos:line="3" pos:column="22">const<pos:position pos:line="3" pos:column="27"/></specifier> <name pos:line="3" pos:column="28">re_dfa_t<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">dfa<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="43">re_node_set<pos:position pos:line="3" pos:column="54"/></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">dest_nodes<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
		     <parameter><decl><type><specifier pos:line="4" pos:column="22">const<pos:position pos:line="4" pos:column="27"/></specifier> <name pos:line="4" pos:column="28">re_node_set<pos:position pos:line="4" pos:column="39"/></name> <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type><name pos:line="4" pos:column="41">candidates<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="53">re_node_set<pos:position pos:line="4" pos:column="64"/></name> <modifier pos:line="4" pos:column="65">*<pos:position pos:line="4" pos:column="66"/></modifier></type><name pos:line="4" pos:column="66">limits<pos:position pos:line="4" pos:column="72"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="5" pos:column="22">struct<pos:position pos:line="5" pos:column="28"/></name> <name pos:line="5" pos:column="29">re_backref_cache_entry<pos:position pos:line="5" pos:column="51"/></name></name> <modifier pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></modifier></type><name pos:line="5" pos:column="53">bkref_ents<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="65">int<pos:position pos:line="5" pos:column="68"/></name></type> <name pos:line="5" pos:column="69">str_idx<pos:position pos:line="5" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="77"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">reg_errcode_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">err<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">node_idx<pos:position pos:line="8" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="17">lim_idx<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">lim_idx<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name pos:line="10" pos:column="21">lim_idx<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&lt;<pos:position pos:line="10" pos:column="33"/></operator> <name><name pos:line="10" pos:column="31">limits<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">nelem<pos:position pos:line="10" pos:column="44"/></name></name></expr>;<pos:position pos:line="10" pos:column="45"/></condition> <incr><expr><operator pos:line="10" pos:column="46">++<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">lim_idx<pos:position pos:line="10" pos:column="55"/></name></expr></incr>)<pos:position pos:line="10" pos:column="56"/></control>
    <block pos:line="11" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="12" pos:column="7">int<pos:position pos:line="12" pos:column="10"/></name></type> <name pos:line="12" pos:column="11">subexp_idx<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="13" pos:column="7">struct<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">re_backref_cache_entry<pos:position pos:line="13" pos:column="36"/></name></name> <modifier pos:line="13" pos:column="37">*<pos:position pos:line="13" pos:column="38"/></modifier></type><name pos:line="13" pos:column="38">ent<pos:position pos:line="13" pos:column="41"/></name></decl>;<pos:position pos:line="13" pos:column="42"/></decl_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">ent<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">bkref_ents<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">+<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="26">limits<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">elems<pos:position pos:line="14" pos:column="39"/></name><index pos:line="14" pos:column="39">[<expr><name pos:line="14" pos:column="40">lim_idx<pos:position pos:line="14" pos:column="47"/></name></expr>]<pos:position pos:line="14" pos:column="48"/></index></name></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>

      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">str_idx<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;=<pos:position pos:line="16" pos:column="24"/></operator> <name><name pos:line="16" pos:column="22">ent<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">subexp_from<pos:position pos:line="16" pos:column="38"/></name></name> <operator pos:line="16" pos:column="39">||<pos:position pos:line="16" pos:column="41"/></operator> <name><name pos:line="16" pos:column="42">ent<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">str_idx<pos:position pos:line="16" pos:column="54"/></name></name> <operator pos:line="16" pos:column="55">&lt;<pos:position pos:line="16" pos:column="59"/></operator> <name pos:line="16" pos:column="57">str_idx<pos:position pos:line="16" pos:column="64"/></name></expr>)<pos:position pos:line="16" pos:column="65"/></condition><then pos:line="16" pos:column="65">
	<block type="pseudo"><continue pos:line="17" pos:column="9">continue;<pos:position pos:line="17" pos:column="18"/></continue></block></then></if> <comment type="block" pos:line="17" pos:column="19">/* This is unrelated limitation.  */</comment>

      <expr_stmt><expr><name pos:line="19" pos:column="7">subexp_idx<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name><name pos:line="19" pos:column="20">dfa<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">nodes<pos:position pos:line="19" pos:column="30"/></name><index pos:line="19" pos:column="30">[<expr><name><name pos:line="19" pos:column="31">ent<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">node<pos:position pos:line="19" pos:column="40"/></name></name></expr>]<pos:position pos:line="19" pos:column="41"/></index></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name><name pos:line="19" pos:column="42">opr<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">idx<pos:position pos:line="19" pos:column="49"/></name></name></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><name><name pos:line="20" pos:column="11">ent<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">subexp_to<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">==<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">str_idx<pos:position pos:line="20" pos:column="36"/></name></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
	<block pos:line="21" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="22" pos:column="11">int<pos:position pos:line="22" pos:column="14"/></name></type> <name pos:line="22" pos:column="15">ops_node<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><operator pos:line="22" pos:column="26">-<pos:position pos:line="22" pos:column="27"/></operator><literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="29"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="23" pos:column="11">int<pos:position pos:line="23" pos:column="14"/></name></type> <name pos:line="23" pos:column="15">cls_node<pos:position pos:line="23" pos:column="23"/></name> <init pos:line="23" pos:column="24">= <expr><operator pos:line="23" pos:column="26">-<pos:position pos:line="23" pos:column="27"/></operator><literal type="number" pos:line="23" pos:column="27">1<pos:position pos:line="23" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="29"/></decl_stmt>
	  <for pos:line="24" pos:column="11">for <control pos:line="24" pos:column="15">(<init><expr><name pos:line="24" pos:column="16">node_idx<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></init> <condition><expr><name pos:line="24" pos:column="30">node_idx<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">&lt;<pos:position pos:line="24" pos:column="43"/></operator> <name><name pos:line="24" pos:column="41">dest_nodes<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">nelem<pos:position pos:line="24" pos:column="58"/></name></name></expr>;<pos:position pos:line="24" pos:column="59"/></condition> <incr><expr><operator pos:line="24" pos:column="60">++<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="62">node_idx<pos:position pos:line="24" pos:column="70"/></name></expr></incr>)<pos:position pos:line="24" pos:column="71"/></control>
	    <block pos:line="25" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="26" pos:column="15">int<pos:position pos:line="26" pos:column="18"/></name></type> <name pos:line="26" pos:column="19">node<pos:position pos:line="26" pos:column="23"/></name> <init pos:line="26" pos:column="24">= <expr><name><name pos:line="26" pos:column="26">dest_nodes<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">elems<pos:position pos:line="26" pos:column="43"/></name><index pos:line="26" pos:column="43">[<expr><name pos:line="26" pos:column="44">node_idx<pos:position pos:line="26" pos:column="52"/></name></expr>]<pos:position pos:line="26" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="26" pos:column="54"/></decl_stmt>
	      <decl_stmt><decl><type><name pos:line="27" pos:column="15">re_token_type_t<pos:position pos:line="27" pos:column="30"/></name></type> <name pos:line="27" pos:column="31">type<pos:position pos:line="27" pos:column="35"/></name> <init pos:line="27" pos:column="36">= <expr><name><name pos:line="27" pos:column="38">dfa<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">nodes<pos:position pos:line="27" pos:column="48"/></name><index pos:line="27" pos:column="48">[<expr><name pos:line="27" pos:column="49">node<pos:position pos:line="27" pos:column="53"/></name></expr>]<pos:position pos:line="27" pos:column="54"/></index></name><operator pos:line="27" pos:column="54">.<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="55">type<pos:position pos:line="27" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="60"/></decl_stmt>
	      <if pos:line="28" pos:column="15">if <condition pos:line="28" pos:column="18">(<expr><name pos:line="28" pos:column="19">type<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">==<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">OP_OPEN_SUBEXP<pos:position pos:line="28" pos:column="41"/></name>
		  <operator pos:line="29" pos:column="19">&amp;&amp;<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="22">subexp_idx<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">==<pos:position pos:line="29" pos:column="35"/></operator> <name><name pos:line="29" pos:column="36">dfa<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">nodes<pos:position pos:line="29" pos:column="46"/></name><index pos:line="29" pos:column="46">[<expr><name pos:line="29" pos:column="47">node<pos:position pos:line="29" pos:column="51"/></name></expr>]<pos:position pos:line="29" pos:column="52"/></index></name><operator pos:line="29" pos:column="52">.<pos:position pos:line="29" pos:column="53"/></operator><name><name pos:line="29" pos:column="53">opr<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">.<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="57">idx<pos:position pos:line="29" pos:column="60"/></name></name></expr>)<pos:position pos:line="29" pos:column="61"/></condition><then pos:line="29" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">ops_node<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">node<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt></block></then>
	      <elseif pos:line="31" pos:column="15">else <if pos:line="31" pos:column="20">if <condition pos:line="31" pos:column="23">(<expr><name pos:line="31" pos:column="24">type<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">==<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">OP_CLOSE_SUBEXP<pos:position pos:line="31" pos:column="47"/></name>
		       <operator pos:line="32" pos:column="24">&amp;&amp;<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="27">subexp_idx<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">==<pos:position pos:line="32" pos:column="40"/></operator> <name><name pos:line="32" pos:column="41">dfa<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">nodes<pos:position pos:line="32" pos:column="51"/></name><index pos:line="32" pos:column="51">[<expr><name pos:line="32" pos:column="52">node<pos:position pos:line="32" pos:column="56"/></name></expr>]<pos:position pos:line="32" pos:column="57"/></index></name><operator pos:line="32" pos:column="57">.<pos:position pos:line="32" pos:column="58"/></operator><name><name pos:line="32" pos:column="58">opr<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">.<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="62">idx<pos:position pos:line="32" pos:column="65"/></name></name></expr>)<pos:position pos:line="32" pos:column="66"/></condition><then pos:line="32" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">cls_node<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">node<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt></block></then></if></elseif></if>
	    }<pos:position pos:line="34" pos:column="14"/></block></for>

	  <comment type="block" pos:line="36" pos:column="11">/* Check the limitation of the open subexpression.  */</comment>
	  <comment type="block" pos:line="37" pos:column="11">/* Note that (ent-&gt;subexp_to = str_idx != ent-&gt;subexp_from).  */</comment>
	  <if pos:line="38" pos:column="11">if <condition pos:line="38" pos:column="14">(<expr><name pos:line="38" pos:column="15">ops_node<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">&gt;=<pos:position pos:line="38" pos:column="29"/></operator> <literal type="number" pos:line="38" pos:column="27">0<pos:position pos:line="38" pos:column="28"/></literal></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
	    <block pos:line="39" pos:column="13">{
	      <expr_stmt><expr><name pos:line="40" pos:column="15">err<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">sub_epsilon_src_nodes<pos:position pos:line="40" pos:column="42"/></name> <argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">dfa<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">ops_node<pos:position pos:line="40" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="59">dest_nodes<pos:position pos:line="40" pos:column="69"/></name></expr></argument>,
					   <argument><expr><name pos:line="41" pos:column="44">candidates<pos:position pos:line="41" pos:column="54"/></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
	      <if pos:line="42" pos:column="15">if <condition pos:line="42" pos:column="18">(<expr><call><name pos:line="42" pos:column="19">BE<pos:position pos:line="42" pos:column="21"/></name> <argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">err<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">!=<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">REG_NOERROR<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="43">0<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46">
		<block type="pseudo"><return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">err<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></return></block></then></if>
	    }<pos:position pos:line="44" pos:column="14"/></block></then></if>

	  <comment type="block" pos:line="46" pos:column="11">/* Check the limitation of the close subexpression.  */</comment>
	  <if pos:line="47" pos:column="11">if <condition pos:line="47" pos:column="14">(<expr><name pos:line="47" pos:column="15">cls_node<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">&gt;=<pos:position pos:line="47" pos:column="29"/></operator> <literal type="number" pos:line="47" pos:column="27">0<pos:position pos:line="47" pos:column="28"/></literal></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29">
	    <block type="pseudo"><for pos:line="48" pos:column="13">for <control pos:line="48" pos:column="17">(<init><expr><name pos:line="48" pos:column="18">node_idx<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <literal type="number" pos:line="48" pos:column="29">0<pos:position pos:line="48" pos:column="30"/></literal></expr>;<pos:position pos:line="48" pos:column="31"/></init> <condition><expr><name pos:line="48" pos:column="32">node_idx<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">&lt;<pos:position pos:line="48" pos:column="45"/></operator> <name><name pos:line="48" pos:column="43">dest_nodes<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">-&gt;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="55">nelem<pos:position pos:line="48" pos:column="60"/></name></name></expr>;<pos:position pos:line="48" pos:column="61"/></condition> <incr><expr><operator pos:line="48" pos:column="62">++<pos:position pos:line="48" pos:column="64"/></operator><name pos:line="48" pos:column="64">node_idx<pos:position pos:line="48" pos:column="72"/></name></expr></incr>)<pos:position pos:line="48" pos:column="73"/></control>
	      <block pos:line="49" pos:column="15">{
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">int<pos:position pos:line="50" pos:column="20"/></name></type> <name pos:line="50" pos:column="21">node<pos:position pos:line="50" pos:column="25"/></name> <init pos:line="50" pos:column="26">= <expr><name><name pos:line="50" pos:column="28">dest_nodes<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">elems<pos:position pos:line="50" pos:column="45"/></name><index pos:line="50" pos:column="45">[<expr><name pos:line="50" pos:column="46">node_idx<pos:position pos:line="50" pos:column="54"/></name></expr>]<pos:position pos:line="50" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="50" pos:column="56"/></decl_stmt>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">!<pos:position pos:line="51" pos:column="22"/></operator><call><name pos:line="51" pos:column="22">re_node_set_contains<pos:position pos:line="51" pos:column="42"/></name> <argument_list pos:line="51" pos:column="43">(<argument><expr><name><name pos:line="51" pos:column="44">dfa<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">inveclosures<pos:position pos:line="51" pos:column="61"/></name></name> <operator pos:line="51" pos:column="62">+<pos:position pos:line="51" pos:column="63"/></operator> <name pos:line="51" pos:column="64">node<pos:position pos:line="51" pos:column="68"/></name></expr></argument>,
					   <argument><expr><name pos:line="52" pos:column="44">cls_node<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call>
		    <operator pos:line="53" pos:column="21">&amp;&amp;<pos:position pos:line="53" pos:column="31"/></operator> <operator pos:line="53" pos:column="24">!<pos:position pos:line="53" pos:column="25"/></operator><call><name pos:line="53" pos:column="25">re_node_set_contains<pos:position pos:line="53" pos:column="45"/></name> <argument_list pos:line="53" pos:column="46">(<argument><expr><name><name pos:line="53" pos:column="47">dfa<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">-&gt;<pos:position pos:line="53" pos:column="55"/></operator><name pos:line="53" pos:column="52">eclosures<pos:position pos:line="53" pos:column="61"/></name></name> <operator pos:line="53" pos:column="62">+<pos:position pos:line="53" pos:column="63"/></operator> <name pos:line="53" pos:column="64">node<pos:position pos:line="53" pos:column="68"/></name></expr></argument>,
					      <argument><expr><name pos:line="54" pos:column="47">cls_node<pos:position pos:line="54" pos:column="55"/></name></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="57"/></condition><then pos:line="54" pos:column="57">
		  <block pos:line="55" pos:column="19">{
		    <comment type="block" pos:line="56" pos:column="21">/* It is against this limitation.
		       Remove it form the current sifted state.  */</comment>
		    <expr_stmt><expr><name pos:line="58" pos:column="21">err<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">=<pos:position pos:line="58" pos:column="26"/></operator> <call><name pos:line="58" pos:column="27">sub_epsilon_src_nodes<pos:position pos:line="58" pos:column="48"/></name> <argument_list pos:line="58" pos:column="49">(<argument><expr><name pos:line="58" pos:column="50">dfa<pos:position pos:line="58" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="55">node<pos:position pos:line="58" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">dest_nodes<pos:position pos:line="58" pos:column="71"/></name></expr></argument>,
						 <argument><expr><name pos:line="59" pos:column="50">candidates<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>
		    <if pos:line="60" pos:column="21">if <condition pos:line="60" pos:column="24">(<expr><call><name pos:line="60" pos:column="25">BE<pos:position pos:line="60" pos:column="27"/></name> <argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">err<pos:position pos:line="60" pos:column="32"/></name> <operator pos:line="60" pos:column="33">!=<pos:position pos:line="60" pos:column="35"/></operator> <name pos:line="60" pos:column="36">REG_NOERROR<pos:position pos:line="60" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="49">0<pos:position pos:line="60" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="52"/></condition><then pos:line="60" pos:column="52">
		      <block type="pseudo"><return pos:line="61" pos:column="23">return <expr><name pos:line="61" pos:column="30">err<pos:position pos:line="61" pos:column="33"/></name></expr>;<pos:position pos:line="61" pos:column="34"/></return></block></then></if>
		    <expr_stmt><expr><operator pos:line="62" pos:column="21">--<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="23">node_idx<pos:position pos:line="62" pos:column="31"/></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
		  }<pos:position pos:line="63" pos:column="20"/></block></then></if>
	      }<pos:position pos:line="64" pos:column="16"/></block></for></block></then></if>
	}<pos:position pos:line="65" pos:column="10"/></block></then>
      <else pos:line="66" pos:column="7">else <comment type="block" pos:line="66" pos:column="12">/* (ent-&gt;subexp_to != str_idx)  */</comment>
	<block pos:line="67" pos:column="9">{
	  <for pos:line="68" pos:column="11">for <control pos:line="68" pos:column="15">(<init><expr><name pos:line="68" pos:column="16">node_idx<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">=<pos:position pos:line="68" pos:column="26"/></operator> <literal type="number" pos:line="68" pos:column="27">0<pos:position pos:line="68" pos:column="28"/></literal></expr>;<pos:position pos:line="68" pos:column="29"/></init> <condition><expr><name pos:line="68" pos:column="30">node_idx<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">&lt;<pos:position pos:line="68" pos:column="43"/></operator> <name><name pos:line="68" pos:column="41">dest_nodes<pos:position pos:line="68" pos:column="51"/></name><operator pos:line="68" pos:column="51">-&gt;<pos:position pos:line="68" pos:column="56"/></operator><name pos:line="68" pos:column="53">nelem<pos:position pos:line="68" pos:column="58"/></name></name></expr>;<pos:position pos:line="68" pos:column="59"/></condition> <incr><expr><operator pos:line="68" pos:column="60">++<pos:position pos:line="68" pos:column="62"/></operator><name pos:line="68" pos:column="62">node_idx<pos:position pos:line="68" pos:column="70"/></name></expr></incr>)<pos:position pos:line="68" pos:column="71"/></control>
	    <block pos:line="69" pos:column="13">{
	      <decl_stmt><decl><type><name pos:line="70" pos:column="15">int<pos:position pos:line="70" pos:column="18"/></name></type> <name pos:line="70" pos:column="19">node<pos:position pos:line="70" pos:column="23"/></name> <init pos:line="70" pos:column="24">= <expr><name><name pos:line="70" pos:column="26">dest_nodes<pos:position pos:line="70" pos:column="36"/></name><operator pos:line="70" pos:column="36">-&gt;<pos:position pos:line="70" pos:column="41"/></operator><name pos:line="70" pos:column="38">elems<pos:position pos:line="70" pos:column="43"/></name><index pos:line="70" pos:column="43">[<expr><name pos:line="70" pos:column="44">node_idx<pos:position pos:line="70" pos:column="52"/></name></expr>]<pos:position pos:line="70" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="70" pos:column="54"/></decl_stmt>
	      <decl_stmt><decl><type><name pos:line="71" pos:column="15">re_token_type_t<pos:position pos:line="71" pos:column="30"/></name></type> <name pos:line="71" pos:column="31">type<pos:position pos:line="71" pos:column="35"/></name> <init pos:line="71" pos:column="36">= <expr><name><name pos:line="71" pos:column="38">dfa<pos:position pos:line="71" pos:column="41"/></name><operator pos:line="71" pos:column="41">-&gt;<pos:position pos:line="71" pos:column="46"/></operator><name pos:line="71" pos:column="43">nodes<pos:position pos:line="71" pos:column="48"/></name><index pos:line="71" pos:column="48">[<expr><name pos:line="71" pos:column="49">node<pos:position pos:line="71" pos:column="53"/></name></expr>]<pos:position pos:line="71" pos:column="54"/></index></name><operator pos:line="71" pos:column="54">.<pos:position pos:line="71" pos:column="55"/></operator><name pos:line="71" pos:column="55">type<pos:position pos:line="71" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="71" pos:column="60"/></decl_stmt>
	      <if pos:line="72" pos:column="15">if <condition pos:line="72" pos:column="18">(<expr><name pos:line="72" pos:column="19">type<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">==<pos:position pos:line="72" pos:column="26"/></operator> <name pos:line="72" pos:column="27">OP_CLOSE_SUBEXP<pos:position pos:line="72" pos:column="42"/></name> <operator pos:line="72" pos:column="43">||<pos:position pos:line="72" pos:column="45"/></operator> <name pos:line="72" pos:column="46">type<pos:position pos:line="72" pos:column="50"/></name> <operator pos:line="72" pos:column="51">==<pos:position pos:line="72" pos:column="53"/></operator> <name pos:line="72" pos:column="54">OP_OPEN_SUBEXP<pos:position pos:line="72" pos:column="68"/></name></expr>)<pos:position pos:line="72" pos:column="69"/></condition><then pos:line="72" pos:column="69">
		<block pos:line="73" pos:column="17">{
		  <if pos:line="74" pos:column="19">if <condition pos:line="74" pos:column="22">(<expr><name pos:line="74" pos:column="23">subexp_idx<pos:position pos:line="74" pos:column="33"/></name> <operator pos:line="74" pos:column="34">!=<pos:position pos:line="74" pos:column="36"/></operator> <name><name pos:line="74" pos:column="37">dfa<pos:position pos:line="74" pos:column="40"/></name><operator pos:line="74" pos:column="40">-&gt;<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="42">nodes<pos:position pos:line="74" pos:column="47"/></name><index pos:line="74" pos:column="47">[<expr><name pos:line="74" pos:column="48">node<pos:position pos:line="74" pos:column="52"/></name></expr>]<pos:position pos:line="74" pos:column="53"/></index></name><operator pos:line="74" pos:column="53">.<pos:position pos:line="74" pos:column="54"/></operator><name><name pos:line="74" pos:column="54">opr<pos:position pos:line="74" pos:column="57"/></name><operator pos:line="74" pos:column="57">.<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="58">idx<pos:position pos:line="74" pos:column="61"/></name></name></expr>)<pos:position pos:line="74" pos:column="62"/></condition><then pos:line="74" pos:column="62">
		    <block type="pseudo"><continue pos:line="75" pos:column="21">continue;<pos:position pos:line="75" pos:column="30"/></continue></block></then></if>
		  <comment type="block" pos:line="76" pos:column="19">/* It is against this limitation.
		     Remove it form the current sifted state.  */</comment>
		  <expr_stmt><expr><name pos:line="78" pos:column="19">err<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <call><name pos:line="78" pos:column="25">sub_epsilon_src_nodes<pos:position pos:line="78" pos:column="46"/></name> <argument_list pos:line="78" pos:column="47">(<argument><expr><name pos:line="78" pos:column="48">dfa<pos:position pos:line="78" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="53">node<pos:position pos:line="78" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="59">dest_nodes<pos:position pos:line="78" pos:column="69"/></name></expr></argument>,
					       <argument><expr><name pos:line="79" pos:column="48">candidates<pos:position pos:line="79" pos:column="58"/></name></expr></argument>)<pos:position pos:line="79" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="60"/></expr_stmt>
		  <if pos:line="80" pos:column="19">if <condition pos:line="80" pos:column="22">(<expr><call><name pos:line="80" pos:column="23">BE<pos:position pos:line="80" pos:column="25"/></name> <argument_list pos:line="80" pos:column="26">(<argument><expr><name pos:line="80" pos:column="27">err<pos:position pos:line="80" pos:column="30"/></name> <operator pos:line="80" pos:column="31">!=<pos:position pos:line="80" pos:column="33"/></operator> <name pos:line="80" pos:column="34">REG_NOERROR<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="47">0<pos:position pos:line="80" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="50"/></condition><then pos:line="80" pos:column="50">
		    <block type="pseudo"><return pos:line="81" pos:column="21">return <expr><name pos:line="81" pos:column="28">err<pos:position pos:line="81" pos:column="31"/></name></expr>;<pos:position pos:line="81" pos:column="32"/></return></block></then></if>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
	    }<pos:position pos:line="83" pos:column="14"/></block></for>
	}<pos:position pos:line="84" pos:column="10"/></block></else></if>
    }<pos:position pos:line="85" pos:column="6"/></block></for>
  <return pos:line="86" pos:column="3">return <expr><name pos:line="86" pos:column="10">REG_NOERROR<pos:position pos:line="86" pos:column="21"/></name></expr>;<pos:position pos:line="86" pos:column="22"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

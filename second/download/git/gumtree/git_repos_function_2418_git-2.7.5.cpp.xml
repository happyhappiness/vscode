<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2418_git-2.7.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">unable_to_lock_message<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">path<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">err<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">strbuf<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">buf<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">err<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">==<pos:position pos:line="3" pos:column="19"/></operator> <name pos:line="3" pos:column="20">EEXIST<pos:position pos:line="3" pos:column="26"/></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27"> <block pos:line="3" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">strbuf_addf<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">buf<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="34">"Unable to create '%s.lock': %s.\n\n"<pos:position pos:line="4" pos:column="71"/></literal>
		    <literal type="string" pos:line="5" pos:column="21">"If no other git process is currently running, this probably means a\n"<pos:position pos:line="5" pos:column="92"/></literal>
		    <literal type="string" pos:line="6" pos:column="21">"git process crashed in this repository earlier. Make sure no other git\n"<pos:position pos:line="6" pos:column="95"/></literal>
		    <literal type="string" pos:line="7" pos:column="21">"process is running and remove the file manually to continue."<pos:position pos:line="7" pos:column="83"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="8" pos:column="29">absolute_path<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">path<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="50">strerror<pos:position pos:line="8" pos:column="58"/></name><argument_list pos:line="8" pos:column="58">(<argument><expr><name pos:line="8" pos:column="59">err<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then> <else pos:line="9" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addf<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">buf<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"Unable to create '%s.lock': %s"<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="11" pos:column="29">absolute_path<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">path<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="50">strerror<pos:position pos:line="11" pos:column="58"/></name><argument_list pos:line="11" pos:column="58">(<argument><expr><name pos:line="11" pos:column="59">err<pos:position pos:line="11" pos:column="62"/></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt></block></else></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

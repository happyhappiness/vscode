<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3554_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_short_sha1<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">name<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">len<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">unsigned<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">sha1<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">unsigned<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">flags<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">hex_pfx<pos:position pos:line="5" pos:column="21"/></name><index pos:line="5" pos:column="21">[<expr><literal type="number" pos:line="5" pos:column="22">40<pos:position pos:line="5" pos:column="24"/></literal></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">bin_pfx<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[<expr><literal type="number" pos:line="6" pos:column="31">20<pos:position pos:line="6" pos:column="33"/></literal></expr>]<pos:position pos:line="6" pos:column="34"/></index></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">disambiguate_state<pos:position pos:line="7" pos:column="34"/></name></name></type> <name pos:line="7" pos:column="35">ds<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">quietly<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><operator pos:line="8" pos:column="23">!<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">!<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">flags<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="34">GET_SHA1_QUIETLY<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">)<pos:position pos:line="8" pos:column="51"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name> <argument_list type="generic" pos:line="10" pos:column="17">&lt; <argument><expr><name pos:line="10" pos:column="19">MINIMUM_ABBREV<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">||<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">len<pos:position pos:line="10" pos:column="40"/></name></expr></argument> &gt;<pos:position pos:line="10" pos:column="45"/></argument_list></name> <literal type="number" pos:line="10" pos:column="43">40<pos:position pos:line="10" pos:column="45"/></literal></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">prepare_prefixes<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">name<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">len<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">bin_pfx<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">hex_pfx<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call> <operator pos:line="12" pos:column="59">&lt;<pos:position pos:line="12" pos:column="63"/></operator> <literal type="number" pos:line="12" pos:column="61">0<pos:position pos:line="12" pos:column="62"/></literal></expr>)<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">prepare_alt_odb<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">()<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">&amp;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="17">ds<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="24">sizeof<argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">ds<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">flags<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="21">GET_SHA1_COMMIT<pos:position pos:line="18" pos:column="36"/></name></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">ds<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">fn<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">disambiguate_commit_only<pos:position pos:line="19" pos:column="49"/></name></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt></block></then>
	<elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><name pos:line="20" pos:column="18">flags<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">&amp;<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="26">GET_SHA1_COMMITTISH<pos:position pos:line="20" pos:column="45"/></name></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">ds<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">fn<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">disambiguate_committish_only<pos:position pos:line="21" pos:column="53"/></name></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><name pos:line="22" pos:column="18">flags<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="26">GET_SHA1_TREE<pos:position pos:line="22" pos:column="39"/></name></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">ds<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">fn<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">disambiguate_tree_only<pos:position pos:line="23" pos:column="47"/></name></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><name pos:line="24" pos:column="18">flags<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="26">GET_SHA1_TREEISH<pos:position pos:line="24" pos:column="42"/></name></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="17">ds<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">fn<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">disambiguate_treeish_only<pos:position pos:line="25" pos:column="50"/></name></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="26" pos:column="9">else <if pos:line="26" pos:column="14">if <condition pos:line="26" pos:column="17">(<expr><name pos:line="26" pos:column="18">flags<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="26">GET_SHA1_BLOB<pos:position pos:line="26" pos:column="39"/></name></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="17">ds<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">fn<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">disambiguate_blob_only<pos:position pos:line="27" pos:column="47"/></name></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">find_short_object_filename<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">len<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">hex_pfx<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="50">&amp;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="51">ds<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">find_short_packed_object<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">len<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">bin_pfx<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="49">ds<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">finish_object_disambiguation<pos:position pos:line="31" pos:column="46"/></name><argument_list pos:line="31" pos:column="46">(<argument><expr><operator pos:line="31" pos:column="47">&amp;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="48">ds<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">sha1<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">quietly<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&amp;&amp;<pos:position pos:line="33" pos:column="32"/></operator> <operator pos:line="33" pos:column="25">(<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">status<pos:position pos:line="33" pos:column="32"/></name> <operator pos:line="33" pos:column="33">==<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="36">SHORT_NAME_AMBIGUOUS<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">)<pos:position pos:line="33" pos:column="57"/></operator></expr>)<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><call><name pos:line="34" pos:column="24">error<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><literal type="string" pos:line="34" pos:column="30">"short SHA1 %.*s is ambiguous."<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">len<pos:position pos:line="34" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="68">hex_pfx<pos:position pos:line="34" pos:column="75"/></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></return></block></then></if>
	<return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">status<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6851_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">FORCEINLINE<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">long<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">win32_getcurrentthreadid<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name pos:line="1" pos:column="50">void<pos:position pos:line="1" pos:column="54"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <block pos:line="1" pos:column="56">{
<cpp:ifdef pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">ifdef<pos:position pos:line="2" pos:column="7"/></cpp:directive> <name pos:line="2" pos:column="8">_MSC_VER<pos:position pos:line="2" pos:column="16"/></name></cpp:ifdef>
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><call><name pos:line="3" pos:column="5">defined<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">_M_IX86<pos:position pos:line="3" pos:column="20"/></name></expr></argument>)<pos:position pos:line="3" pos:column="21"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">threadstruct<pos:position pos:line="4" pos:column="21"/></name><init pos:line="4" pos:column="21">=<expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">long<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><operator pos:line="4" pos:column="29">)<pos:position pos:line="4" pos:column="30"/></operator><call><name pos:line="4" pos:column="30">__readfsdword<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><literal type="number" pos:line="4" pos:column="44">0x18<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">threadid<pos:position pos:line="5" pos:column="16"/></name><init pos:line="5" pos:column="16">=<expr><name><name pos:line="5" pos:column="17">threadstruct<pos:position pos:line="5" pos:column="29"/></name><index pos:line="5" pos:column="29">[<expr><literal type="number" pos:line="5" pos:column="30">0x24<pos:position pos:line="5" pos:column="34"/></literal><operator pos:line="5" pos:column="34">/<pos:position pos:line="5" pos:column="35"/></operator><sizeof pos:line="5" pos:column="35">sizeof<argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">long<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></sizeof></expr>]<pos:position pos:line="5" pos:column="48"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
  <return pos:line="6" pos:column="3">return <expr><name pos:line="6" pos:column="10">threadid<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return>
<cpp:elif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">elif<pos:position pos:line="7" pos:column="6"/></cpp:directive> <expr><call><name pos:line="7" pos:column="7">defined<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">_M_X64<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr></cpp:elif>
  <comment type="block" pos:line="8" pos:column="3">/* todo */</comment>
  <return pos:line="9" pos:column="3">return <expr><call><name pos:line="9" pos:column="10">GetCurrentThreadId<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">()<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></return>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
  <return pos:line="11" pos:column="3">return <expr><call><name pos:line="11" pos:column="10">GetCurrentThreadId<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">()<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></return>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
  <return pos:line="14" pos:column="3">return <expr><call><name pos:line="14" pos:column="10">GetCurrentThreadId<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">()<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></return>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_624.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_and_refresh_cache<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">replay_opts<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">opts<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">lock_file<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">index_lock<pos:position pos:line="3" pos:column="43"/></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">index_fd<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name pos:line="4" pos:column="24">hold_locked_index<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><operator pos:line="4" pos:column="42">&amp;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="43">index_lock<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="55">0<pos:position pos:line="4" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">read_index_preload<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><operator pos:line="5" pos:column="32">&amp;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="33">the_index<pos:position pos:line="5" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="44">NULL<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call> <operator pos:line="5" pos:column="50">&lt;<pos:position pos:line="5" pos:column="54"/></operator> <literal type="number" pos:line="5" pos:column="52">0<pos:position pos:line="5" pos:column="53"/></literal></expr>)<pos:position pos:line="5" pos:column="54"/></condition><then pos:line="5" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><call><name pos:line="6" pos:column="21">_<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><literal type="string" pos:line="6" pos:column="23">"git %s: failed to read the index"<pos:position pos:line="6" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="60">action_name<pos:position pos:line="6" pos:column="71"/></name><argument_list pos:line="6" pos:column="71">(<argument><expr><name pos:line="6" pos:column="72">opts<pos:position pos:line="6" pos:column="76"/></name></expr></argument>)<pos:position pos:line="6" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="79"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">refresh_index<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="24">the_index<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">REFRESH_QUIET<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">|<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">REFRESH_UNMERGED<pos:position pos:line="7" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="67">NULL<pos:position pos:line="7" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="73">NULL<pos:position pos:line="7" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="79">NULL<pos:position pos:line="7" pos:column="83"/></name></expr></argument>)<pos:position pos:line="7" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="85"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">the_index<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">cache_changed<pos:position pos:line="8" pos:column="36"/></name></name> <operator pos:line="8" pos:column="37">&amp;&amp;<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="40">index_fd<pos:position pos:line="8" pos:column="48"/></name> <operator pos:line="8" pos:column="49">&gt;=<pos:position pos:line="8" pos:column="54"/></operator> <literal type="number" pos:line="8" pos:column="52">0<pos:position pos:line="8" pos:column="53"/></literal></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54"> <block pos:line="8" pos:column="55">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">write_locked_index<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><operator pos:line="9" pos:column="40">&amp;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="41">the_index<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="52">&amp;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="53">index_lock<pos:position pos:line="9" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="65">COMMIT_LOCK<pos:position pos:line="9" pos:column="76"/></name></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="78"/></condition><then pos:line="9" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><call><name pos:line="10" pos:column="29">_<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"git %s: failed to refresh the index"<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="71">action_name<pos:position pos:line="10" pos:column="82"/></name><argument_list pos:line="10" pos:column="82">(<argument><expr><name pos:line="10" pos:column="83">opts<pos:position pos:line="10" pos:column="87"/></name></expr></argument>)<pos:position pos:line="10" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="90"/></expr_stmt></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">rollback_lock_file<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="29">index_lock<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

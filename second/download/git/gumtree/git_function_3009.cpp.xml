<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3009.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">svndump_init_fd<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">in_fd<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">back_fd<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if<condition pos:line="3" pos:column="11">(<expr><call><name pos:line="3" pos:column="12">buffer_fdinit<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><operator pos:line="3" pos:column="26">&amp;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="27">input<pos:position pos:line="3" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="34">xdup<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">in_fd<pos:position pos:line="3" pos:column="44"/></name></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><call><name pos:line="4" pos:column="24">error<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><literal type="string" pos:line="4" pos:column="30">"cannot open fd %d: %s"<pos:position pos:line="4" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="55">in_fd<pos:position pos:line="4" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="62">strerror<pos:position pos:line="4" pos:column="70"/></name><argument_list pos:line="4" pos:column="70">(<argument><expr><name pos:line="4" pos:column="71">errno<pos:position pos:line="4" pos:column="76"/></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="79"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">init<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><call><name pos:line="5" pos:column="14">xdup<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">back_fd<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
	<return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_390_git-2.13.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">index_name_is_other<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">index_state<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">istate<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">name<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">namelen<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">namelen<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&amp;&amp;<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="24">name<pos:position pos:line="5" pos:column="28"/></name><index pos:line="5" pos:column="28">[<expr><name pos:line="5" pos:column="29">namelen<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">-<pos:position pos:line="5" pos:column="38"/></operator> <literal type="number" pos:line="5" pos:column="39">1<pos:position pos:line="5" pos:column="40"/></literal></expr>]<pos:position pos:line="5" pos:column="41"/></index></name> <operator pos:line="5" pos:column="42">==<pos:position pos:line="5" pos:column="44"/></operator> <literal type="char" pos:line="5" pos:column="45">'/'<pos:position pos:line="5" pos:column="48"/></literal></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">namelen<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">--<pos:position pos:line="6" pos:column="26"/></operator></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="7" pos:column="9">pos<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">index_name_pos<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">istate<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">name<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">namelen<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal> <operator pos:line="8" pos:column="15">&lt;=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="18">pos<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>	<comment type="block" pos:line="9" pos:column="33">/* exact match */</comment>
	<expr_stmt><expr><name pos:line="10" pos:column="9">pos<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <operator pos:line="10" pos:column="15">-<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">pos<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">-<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">1<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">pos<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;<pos:position pos:line="11" pos:column="21"/></operator> <name><name pos:line="11" pos:column="19">istate<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">cache_nr<pos:position pos:line="11" pos:column="35"/></name></name></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <block pos:line="11" pos:column="37">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">cache_entry<pos:position pos:line="12" pos:column="35"/></name></name> <modifier pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></modifier></type><name pos:line="12" pos:column="37">ce<pos:position pos:line="12" pos:column="39"/></name> <init pos:line="12" pos:column="40">= <expr><name><name pos:line="12" pos:column="42">istate<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">cache<pos:position pos:line="12" pos:column="55"/></name><index pos:line="12" pos:column="55">[<expr><name pos:line="12" pos:column="56">pos<pos:position pos:line="12" pos:column="59"/></name></expr>]<pos:position pos:line="12" pos:column="60"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="61"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">ce_namelen<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">ce<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">namelen<pos:position pos:line="13" pos:column="46"/></name> <operator pos:line="13" pos:column="47">&amp;&amp;<pos:position pos:line="13" pos:column="57"/></operator>
		    <operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">memcmp<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">ce<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">name<pos:position pos:line="14" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">name<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">namelen<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="35">/* Yup, this one exists unmerged */</comment>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

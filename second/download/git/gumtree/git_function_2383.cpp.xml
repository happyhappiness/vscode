<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2383.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_info<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">hdr<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name><name pos:line="6" pos:column="21">header<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[<expr><name pos:line="6" pos:column="28">i<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></expr>;<pos:position pos:line="6" pos:column="31"/></condition> <incr><expr><name pos:line="6" pos:column="32">i<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">++<pos:position pos:line="6" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="36"/></control> <block pos:line="6" pos:column="37">{
		<comment type="block" pos:line="7" pos:column="17">/* only print inbody headers if we output a patch file */</comment>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">patch_lines<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">&amp;&amp;<pos:position pos:line="8" pos:column="43"/></operator> <name><name pos:line="8" pos:column="36">s_hdr_data<pos:position pos:line="8" pos:column="46"/></name><index pos:line="8" pos:column="46">[<expr><name pos:line="8" pos:column="47">i<pos:position pos:line="8" pos:column="48"/></name></expr>]<pos:position pos:line="8" pos:column="49"/></index></name></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">hdr<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name><name pos:line="9" pos:column="31">s_hdr_data<pos:position pos:line="9" pos:column="41"/></name><index pos:line="9" pos:column="41">[<expr><name pos:line="9" pos:column="42">i<pos:position pos:line="9" pos:column="43"/></name></expr>]<pos:position pos:line="9" pos:column="44"/></index></name></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt></block></then>
		<elseif pos:line="10" pos:column="17">else <if pos:line="10" pos:column="22">if <condition pos:line="10" pos:column="25">(<expr><name><name pos:line="10" pos:column="26">p_hdr_data<pos:position pos:line="10" pos:column="36"/></name><index pos:line="10" pos:column="36">[<expr><name pos:line="10" pos:column="37">i<pos:position pos:line="10" pos:column="38"/></name></expr>]<pos:position pos:line="10" pos:column="39"/></index></name></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">hdr<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <name><name pos:line="11" pos:column="31">p_hdr_data<pos:position pos:line="11" pos:column="41"/></name><index pos:line="11" pos:column="41">[<expr><name pos:line="11" pos:column="42">i<pos:position pos:line="11" pos:column="43"/></name></expr>]<pos:position pos:line="11" pos:column="44"/></index></name></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<else pos:line="12" pos:column="17">else
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></else></if>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><call><name pos:line="15" pos:column="22">strcmp<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">header<pos:position pos:line="15" pos:column="35"/></name><index pos:line="15" pos:column="35">[<expr><name pos:line="15" pos:column="36">i<pos:position pos:line="15" pos:column="37"/></name></expr>]<pos:position pos:line="15" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="40">"Subject"<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51"> <block pos:line="15" pos:column="52">{
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><operator pos:line="16" pos:column="29">!<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">keep_subject<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="17" pos:column="33">cleanup_subject<pos:position pos:line="17" pos:column="48"/></name><argument_list pos:line="17" pos:column="48">(<argument><expr><name pos:line="17" pos:column="49">hdr<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="18" pos:column="33">cleanup_space<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">hdr<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">output_header_lines<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><name pos:line="20" pos:column="45">fout<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="51">"Subject"<pos:position pos:line="20" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">hdr<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <elseif pos:line="21" pos:column="19">else <if pos:line="21" pos:column="24">if <condition pos:line="21" pos:column="27">(<expr><operator pos:line="21" pos:column="28">!<pos:position pos:line="21" pos:column="29"/></operator><call><name pos:line="21" pos:column="29">strcmp<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name><name pos:line="21" pos:column="36">header<pos:position pos:line="21" pos:column="42"/></name><index pos:line="21" pos:column="42">[<expr><name pos:line="21" pos:column="43">i<pos:position pos:line="21" pos:column="44"/></name></expr>]<pos:position pos:line="21" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="47">"From"<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="55"/></condition><then pos:line="21" pos:column="55"> <block pos:line="21" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">cleanup_space<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">hdr<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">handle_from<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">hdr<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">fprintf<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">fout<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="39">"Author: %s\n"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="55">name<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">.<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="60">buf<pos:position pos:line="24" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">fprintf<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">fout<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"Email: %s\n"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="54">email<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">.<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">buf<pos:position pos:line="25" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if></elseif> <else pos:line="26" pos:column="19">else <block pos:line="26" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">cleanup_space<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">hdr<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">fprintf<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">fout<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"%s: %s\n"<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="51">header<pos:position pos:line="28" pos:column="57"/></name><index pos:line="28" pos:column="57">[<expr><name pos:line="28" pos:column="58">i<pos:position pos:line="28" pos:column="59"/></name></expr>]<pos:position pos:line="28" pos:column="60"/></index></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="62">hdr<pos:position pos:line="28" pos:column="65"/></name><operator pos:line="28" pos:column="65">-&gt;<pos:position pos:line="28" pos:column="70"/></operator><name pos:line="28" pos:column="67">buf<pos:position pos:line="28" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></else></if>
	}<pos:position pos:line="30" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">fprintf<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">fout<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"\n"<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

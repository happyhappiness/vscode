<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_729_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">matches<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">key<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">value<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcmp<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">key<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="25">store<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">.<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">key<pos:position pos:line="3" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="36"/></condition><then pos:line="3" pos:column="36">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="4" pos:column="27">/* not ours */</comment>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">store<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">value_regex<pos:position pos:line="5" pos:column="31"/></name></name></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="6" pos:column="27">/* always matches */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">store<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">value_regex<pos:position pos:line="7" pos:column="30"/></name></name> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">CONFIG_REGEX_NONE<pos:position pos:line="7" pos:column="51"/></name></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="8" pos:column="27">/* never matches */</comment>

	<return pos:line="10" pos:column="9">return <expr><name><name pos:line="10" pos:column="16">store<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">do_not_match<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">^<pos:position pos:line="10" pos:column="36"/></operator>
		<operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">value<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&amp;&amp;<pos:position pos:line="11" pos:column="34"/></operator> <operator pos:line="11" pos:column="27">!<pos:position pos:line="11" pos:column="28"/></operator><call><name pos:line="11" pos:column="28">regexec<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name><name pos:line="11" pos:column="36">store<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">value_regex<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">value<pos:position pos:line="11" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="62">0<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="65">NULL<pos:position pos:line="11" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="71">0<pos:position pos:line="11" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call><operator pos:line="11" pos:column="73">)<pos:position pos:line="11" pos:column="74"/></operator></expr>;<pos:position pos:line="11" pos:column="75"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

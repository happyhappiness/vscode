<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_463.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">append_one_rev<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">av<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_id<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">revkey<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">get_sha1<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">av<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="27">revkey<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">.<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">hash<pos:position pos:line="4" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <block pos:line="4" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">append_ref<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">av<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="32">&amp;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="33">revkey<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="41">0<pos:position pos:line="5" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>
		<return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strchr<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">av<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="24">'*'<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call> <operator pos:line="8" pos:column="29">||<pos:position pos:line="8" pos:column="31"/></operator> <call><name pos:line="8" pos:column="32">strchr<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">av<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="43">'?'<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call> <operator pos:line="8" pos:column="48">||<pos:position pos:line="8" pos:column="50"/></operator> <call><name pos:line="8" pos:column="51">strchr<pos:position pos:line="8" pos:column="57"/></name><argument_list pos:line="8" pos:column="57">(<argument><expr><name pos:line="8" pos:column="58">av<pos:position pos:line="8" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="62">'['<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="67"/></condition><then pos:line="8" pos:column="67"> <block pos:line="8" pos:column="68">{
		<comment type="block" pos:line="9" pos:column="17">/* glob style match */</comment>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">saved_matches<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><name pos:line="10" pos:column="37">ref_name_cnt<pos:position pos:line="10" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>

		<expr_stmt><expr><name pos:line="12" pos:column="17">match_ref_pattern<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">=<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="37">av<pos:position pos:line="12" pos:column="39"/></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">match_ref_slash<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <call><name pos:line="13" pos:column="35">count_slash<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">av<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">for_each_ref<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">append_matching_ref<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">NULL<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">saved_matches<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">==<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="38">ref_name_cnt<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">&amp;&amp;<pos:position pos:line="15" pos:column="61"/></operator>
		    <name pos:line="16" pos:column="21">ref_name_cnt<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">&lt;<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="36">MAX_REVS<pos:position pos:line="16" pos:column="44"/></name></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">error<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"no matching refs with %s"<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">av<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">saved_matches<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">+<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal> <operator pos:line="18" pos:column="39">&lt;<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="41">ref_name_cnt<pos:position pos:line="18" pos:column="53"/></name></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">sort_ref_range<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">saved_matches<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">ref_name_cnt<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt></block></then></if>
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">die<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><literal type="string" pos:line="22" pos:column="13">"bad sha1 reference %s"<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">av<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

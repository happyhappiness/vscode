<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1483_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">sha1_get_pack_name<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">unsigned<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">sha1<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">name<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">base<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">which<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <name pos:line="4" pos:column="22">char<pos:position pos:line="4" pos:column="26"/></name></type> <name><name pos:line="4" pos:column="27">hex<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[]<pos:position pos:line="4" pos:column="32"/></index></name> <init pos:line="4" pos:column="33">= <expr><literal type="string" pos:line="4" pos:column="35">"0123456789abcdef"<pos:position pos:line="4" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">base<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <block pos:line="8" pos:column="21">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">sha1_file_directory<pos:position pos:line="9" pos:column="48"/></name> <init pos:line="9" pos:column="49">= <expr><call><name pos:line="9" pos:column="51">get_object_directory<pos:position pos:line="9" pos:column="71"/></name><argument_list pos:line="9" pos:column="71">()<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="74"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">len<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><call><name pos:line="10" pos:column="27">strlen<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">sha1_file_directory<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">base<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">xmalloc<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">len<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">+<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="39">60<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">sprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">base<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"%s/pack/pack-1234567890123456789012345678901234567890.%s"<pos:position pos:line="12" pos:column="90"/></literal></expr></argument>,
			<argument><expr><name pos:line="13" pos:column="25">sha1_file_directory<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">which<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">name<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">base<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">+<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">len<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">+<pos:position pos:line="14" pos:column="38"/></operator> <literal type="number" pos:line="14" pos:column="39">11<pos:position pos:line="14" pos:column="41"/></literal></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">buf<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">name<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="25">20<pos:position pos:line="19" pos:column="27"/></literal></expr>;<pos:position pos:line="19" pos:column="28"/></condition> <incr><expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">++<pos:position pos:line="19" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="33"/></control> <block pos:line="19" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">unsigned<pos:position pos:line="20" pos:column="25"/></name> <name pos:line="20" pos:column="26">int<pos:position pos:line="20" pos:column="29"/></name></type> <name pos:line="20" pos:column="30">val<pos:position pos:line="20" pos:column="33"/></name> <init pos:line="20" pos:column="34">= <expr><operator pos:line="20" pos:column="36">*<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">sha1<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">++<pos:position pos:line="20" pos:column="43"/></operator></expr></init></decl>;<pos:position pos:line="20" pos:column="44"/></decl_stmt>
		<expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">buf<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">++<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name><name pos:line="21" pos:column="26">hex<pos:position pos:line="21" pos:column="29"/></name><index pos:line="21" pos:column="29">[<expr><name pos:line="21" pos:column="30">val<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">&gt;&gt;<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="37">4<pos:position pos:line="21" pos:column="38"/></literal></expr>]<pos:position pos:line="21" pos:column="39"/></index></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">buf<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">++<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <name><name pos:line="22" pos:column="26">hex<pos:position pos:line="22" pos:column="29"/></name><index pos:line="22" pos:column="29">[<expr><name pos:line="22" pos:column="30">val<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator> <literal type="number" pos:line="22" pos:column="36">0xf<pos:position pos:line="22" pos:column="39"/></literal></expr>]<pos:position pos:line="22" pos:column="40"/></index></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>

	<return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">base<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_24_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ai_name<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">addrinfo<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ai<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">addr<pos:position pos:line="3" pos:column="25"/></name><index pos:line="3" pos:column="25">[<expr><name pos:line="3" pos:column="26">NI_MAXHOST<pos:position pos:line="3" pos:column="36"/></name></expr>]<pos:position pos:line="3" pos:column="37"/></index></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">getnameinfo<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name><name pos:line="4" pos:column="25">ai<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">ai_addr<pos:position pos:line="4" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="38">ai<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">ai_addrlen<pos:position pos:line="4" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="54">addr<pos:position pos:line="4" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="60">sizeof<argument_list pos:line="4" pos:column="66">(<argument><expr><name pos:line="4" pos:column="67">addr<pos:position pos:line="4" pos:column="71"/></name></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="4" pos:column="74">NULL<pos:position pos:line="4" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="80">0<pos:position pos:line="4" pos:column="81"/></literal></expr></argument>,
			<argument><expr><name pos:line="5" pos:column="25">NI_NUMERICHOST<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call> <operator pos:line="5" pos:column="41">!=<pos:position pos:line="5" pos:column="43"/></operator> <literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">xsnprintf<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">addr<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="33">sizeof<argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">addr<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="47">"(unknown)"<pos:position pos:line="6" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></expr_stmt></block></then></if>

	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">addr<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

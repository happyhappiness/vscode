<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1415_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">store_tree<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">tree_entry<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">root<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">tree_content<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">t<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">j<pos:position pos:line="4" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="28">del<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">last_object<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">lo<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><block pos:line="5" pos:column="33">{ <expr><name pos:line="5" pos:column="35">STRBUF_INIT<pos:position pos:line="5" pos:column="46"/></name></expr>, <expr><literal type="number" pos:line="5" pos:column="48">0<pos:position pos:line="5" pos:column="49"/></literal></expr>, <expr><literal type="number" pos:line="5" pos:column="51">0<pos:position pos:line="5" pos:column="52"/></literal></expr>, <comment type="block" pos:line="5" pos:column="54">/* no_swap */</comment> <expr><literal type="number" pos:line="5" pos:column="68">1<pos:position pos:line="5" pos:column="69"/></literal></expr> }<pos:position pos:line="5" pos:column="71"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">object_entry<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">le<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name pos:line="6" pos:column="35">NULL<pos:position pos:line="6" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">is_null_sha1<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name><name pos:line="8" pos:column="27">root<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">versions<pos:position pos:line="8" pos:column="41"/></name><index pos:line="8" pos:column="41">[<expr><literal type="number" pos:line="8" pos:column="42">1<pos:position pos:line="8" pos:column="43"/></literal></expr>]<pos:position pos:line="8" pos:column="44"/></index></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">sha1<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">root<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">tree<pos:position pos:line="11" pos:column="24"/></name></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">load_tree<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">root<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">t<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name><name pos:line="13" pos:column="13">root<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">tree<pos:position pos:line="13" pos:column="23"/></name></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="25">t<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">entry_count<pos:position pos:line="15" pos:column="39"/></name></name></expr>;<pos:position pos:line="15" pos:column="40"/></condition> <incr><expr><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">++<pos:position pos:line="15" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="45"/></control> <block pos:line="15" pos:column="46">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">t<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">entries<pos:position pos:line="16" pos:column="31"/></name><index pos:line="16" pos:column="31">[<expr><name pos:line="16" pos:column="32">i<pos:position pos:line="16" pos:column="33"/></name></expr>]<pos:position pos:line="16" pos:column="34"/></index></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">tree<pos:position pos:line="16" pos:column="40"/></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">store_tree<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name><name pos:line="17" pos:column="36">t<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">entries<pos:position pos:line="17" pos:column="46"/></name><index pos:line="17" pos:column="46">[<expr><name pos:line="17" pos:column="47">i<pos:position pos:line="17" pos:column="48"/></name></expr>]<pos:position pos:line="17" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name><name pos:line="20" pos:column="15">root<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">versions<pos:position pos:line="20" pos:column="29"/></name><index pos:line="20" pos:column="29">[<expr><literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>]<pos:position pos:line="20" pos:column="32"/></index></name><operator pos:line="20" pos:column="32">.<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">mode<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">&amp;<pos:position pos:line="20" pos:column="43"/></operator> <name pos:line="20" pos:column="40">NO_DELTA<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">)<pos:position pos:line="20" pos:column="49"/></operator></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">le<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">find_object<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name><name pos:line="21" pos:column="34">root<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">versions<pos:position pos:line="21" pos:column="48"/></name><index pos:line="21" pos:column="48">[<expr><literal type="number" pos:line="21" pos:column="49">0<pos:position pos:line="21" pos:column="50"/></literal></expr>]<pos:position pos:line="21" pos:column="51"/></index></name><operator pos:line="21" pos:column="51">.<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">sha1<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">S_ISDIR<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name><name pos:line="22" pos:column="21">root<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">versions<pos:position pos:line="22" pos:column="35"/></name><index pos:line="22" pos:column="35">[<expr><literal type="number" pos:line="22" pos:column="36">0<pos:position pos:line="22" pos:column="37"/></literal></expr>]<pos:position pos:line="22" pos:column="38"/></index></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">mode<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call> <operator pos:line="22" pos:column="45">&amp;&amp;<pos:position pos:line="22" pos:column="55"/></operator> <name pos:line="22" pos:column="48">le<pos:position pos:line="22" pos:column="50"/></name> <operator pos:line="22" pos:column="51">&amp;&amp;<pos:position pos:line="22" pos:column="61"/></operator> <name><name pos:line="22" pos:column="54">le<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">pack_id<pos:position pos:line="22" pos:column="65"/></name></name> <operator pos:line="22" pos:column="66">==<pos:position pos:line="22" pos:column="68"/></operator> <name pos:line="22" pos:column="69">pack_id<pos:position pos:line="22" pos:column="76"/></name></expr>)<pos:position pos:line="22" pos:column="77"/></condition><then pos:line="22" pos:column="77"> <block pos:line="22" pos:column="78">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">mktree<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">t<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="30">&amp;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="31">old_tree<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">lo<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">data<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">old_tree<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">lo<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">offset<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <name><name pos:line="25" pos:column="29">le<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">idx<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">offset<pos:position pos:line="25" pos:column="43"/></name></name></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">lo<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">depth<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name><name pos:line="26" pos:column="28">t<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">delta_depth<pos:position pos:line="26" pos:column="42"/></name></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">mktree<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">t<pos:position pos:line="29" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="19">1<pos:position pos:line="29" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="22">&amp;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="23">new_tree<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">store_object<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">OBJ_TREE<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="32">&amp;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="33">new_tree<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="43">&amp;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="44">lo<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="48">root<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">-&gt;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="54">versions<pos:position pos:line="30" pos:column="62"/></name><index pos:line="30" pos:column="62">[<expr><literal type="number" pos:line="30" pos:column="63">1<pos:position pos:line="30" pos:column="64"/></literal></expr>]<pos:position pos:line="30" pos:column="65"/></index></name><operator pos:line="30" pos:column="65">.<pos:position pos:line="30" pos:column="66"/></operator><name pos:line="30" pos:column="66">sha1<pos:position pos:line="30" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="72">0<pos:position pos:line="30" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="32" pos:column="9">t<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">delta_depth<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <name><name pos:line="32" pos:column="26">lo<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">.<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">depth<pos:position pos:line="32" pos:column="34"/></name></name></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr><operator pos:line="33" pos:column="19">,<pos:position pos:line="33" pos:column="20"/></operator> <expr><name pos:line="33" pos:column="21">j<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr><operator pos:line="33" pos:column="26">,<pos:position pos:line="33" pos:column="27"/></operator> <expr><name pos:line="33" pos:column="28">del<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr>;<pos:position pos:line="33" pos:column="36"/></init> <condition><expr><name pos:line="33" pos:column="37">i<pos:position pos:line="33" pos:column="38"/></name> <operator pos:line="33" pos:column="39">&lt;<pos:position pos:line="33" pos:column="43"/></operator> <name><name pos:line="33" pos:column="41">t<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">-&gt;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="44">entry_count<pos:position pos:line="33" pos:column="55"/></name></name></expr>;<pos:position pos:line="33" pos:column="56"/></condition> <incr><expr><name pos:line="33" pos:column="57">i<pos:position pos:line="33" pos:column="58"/></name><operator pos:line="33" pos:column="58">++<pos:position pos:line="33" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="61"/></control> <block pos:line="33" pos:column="62">{
		<decl_stmt><decl><type><name><name pos:line="34" pos:column="17">struct<pos:position pos:line="34" pos:column="23"/></name> <name pos:line="34" pos:column="24">tree_entry<pos:position pos:line="34" pos:column="34"/></name></name> <modifier pos:line="34" pos:column="35">*<pos:position pos:line="34" pos:column="36"/></modifier></type><name pos:line="34" pos:column="36">e<pos:position pos:line="34" pos:column="37"/></name> <init pos:line="34" pos:column="38">= <expr><name><name pos:line="34" pos:column="40">t<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">entries<pos:position pos:line="34" pos:column="50"/></name><index pos:line="34" pos:column="50">[<expr><name pos:line="34" pos:column="51">i<pos:position pos:line="34" pos:column="52"/></name></expr>]<pos:position pos:line="34" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="34" pos:column="54"/></decl_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">e<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">versions<pos:position pos:line="35" pos:column="32"/></name><index pos:line="35" pos:column="32">[<expr><literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr>]<pos:position pos:line="35" pos:column="35"/></index></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">mode<pos:position pos:line="35" pos:column="40"/></name></expr>)<pos:position pos:line="35" pos:column="41"/></condition><then pos:line="35" pos:column="41"> <block pos:line="35" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="36" pos:column="25">e<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">versions<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><literal type="number" pos:line="36" pos:column="37">0<pos:position pos:line="36" pos:column="38"/></literal></expr>]<pos:position pos:line="36" pos:column="39"/></index></name><operator pos:line="36" pos:column="39">.<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">mode<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">=<pos:position pos:line="36" pos:column="46"/></operator> <name><name pos:line="36" pos:column="47">e<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">versions<pos:position pos:line="36" pos:column="58"/></name><index pos:line="36" pos:column="58">[<expr><literal type="number" pos:line="36" pos:column="59">1<pos:position pos:line="36" pos:column="60"/></literal></expr>]<pos:position pos:line="36" pos:column="61"/></index></name><operator pos:line="36" pos:column="61">.<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="62">mode<pos:position pos:line="36" pos:column="66"/></name></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">hashcpy<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">e<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">versions<pos:position pos:line="37" pos:column="44"/></name><index pos:line="37" pos:column="44">[<expr><literal type="number" pos:line="37" pos:column="45">0<pos:position pos:line="37" pos:column="46"/></literal></expr>]<pos:position pos:line="37" pos:column="47"/></index></name><operator pos:line="37" pos:column="47">.<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="48">sha1<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="54">e<pos:position pos:line="37" pos:column="55"/></name><operator pos:line="37" pos:column="55">-&gt;<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="57">versions<pos:position pos:line="37" pos:column="65"/></name><index pos:line="37" pos:column="65">[<expr><literal type="number" pos:line="37" pos:column="66">1<pos:position pos:line="37" pos:column="67"/></literal></expr>]<pos:position pos:line="37" pos:column="68"/></index></name><operator pos:line="37" pos:column="68">.<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="69">sha1<pos:position pos:line="37" pos:column="73"/></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="38" pos:column="25">t<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">-&gt;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="28">entries<pos:position pos:line="38" pos:column="35"/></name><index pos:line="38" pos:column="35">[<expr><name pos:line="38" pos:column="36">j<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">++<pos:position pos:line="38" pos:column="39"/></operator></expr>]<pos:position pos:line="38" pos:column="40"/></index></name> <operator pos:line="38" pos:column="41">=<pos:position pos:line="38" pos:column="42"/></operator> <name pos:line="38" pos:column="43">e<pos:position pos:line="38" pos:column="44"/></name></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then> <else pos:line="39" pos:column="19">else <block pos:line="39" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">release_tree_entry<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">e<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">del<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">++<pos:position pos:line="41" pos:column="30"/></operator></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></else></if>
	}<pos:position pos:line="43" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">t<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">entry_count<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">-=<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">del<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

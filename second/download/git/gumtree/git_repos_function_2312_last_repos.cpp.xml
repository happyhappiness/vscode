<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2312_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">for_each_loose_file_in_objdir<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">path<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">each_loose_object_fn<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">obj_cb<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="3" pos:column="35">each_loose_cruft_fn<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">cruft_cb<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="4" pos:column="35">each_loose_subdir_fn<pos:position pos:line="4" pos:column="55"/></name></type> <name pos:line="4" pos:column="56">subdir_cb<pos:position pos:line="4" pos:column="65"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="5" pos:column="35">void<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier></type><name pos:line="5" pos:column="41">data<pos:position pos:line="5" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="46"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">STRBUF_INIT<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">r<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_addstr<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">path<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">r<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">for_each_loose_file_in_objdir_buf<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="48">buf<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">obj_cb<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="61">cruft_cb<pos:position pos:line="11" pos:column="69"/></name></expr></argument>,
					      <argument><expr><name pos:line="12" pos:column="47">subdir_cb<pos:position pos:line="12" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="58">data<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_release<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">buf<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">r<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3410_git-2.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">read_ref_at<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">refname<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">unsigned<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">flags<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">timestamp_t<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">at_time<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="79">int<pos:position pos:line="1" pos:column="82"/></name></type> <name pos:line="1" pos:column="83">cnt<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">unsigned<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">sha1<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">msg<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">timestamp_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">cutoff_time<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="43">int<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">cutoff_tz<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">int<pos:position pos:line="3" pos:column="62"/></name> <modifier pos:line="3" pos:column="63">*<pos:position pos:line="3" pos:column="64"/></modifier></type><name pos:line="3" pos:column="64">cutoff_cnt<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="75"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">read_ref_at_cb<pos:position pos:line="5" pos:column="30"/></name></name></type> <name pos:line="5" pos:column="31">cb<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">cb<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="24">sizeof<argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">cb<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">cb<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">refname<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">refname<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">cb<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">at_time<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">at_time<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">cb<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">cnt<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">cnt<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">cb<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">msg<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">msg<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">cb<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">cutoff_time<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">cutoff_time<pos:position pos:line="12" pos:column="37"/></name></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">cb<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">cutoff_tz<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">cutoff_tz<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">cb<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">cutoff_cnt<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">cutoff_cnt<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">cb<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">sha1<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">sha1<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">for_each_reflog_ent_reverse<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">refname<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">read_ref_at_ent<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="63">&amp;<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="64">cb<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name><name pos:line="19" pos:column="14">cb<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">reccnt<pos:position pos:line="19" pos:column="23"/></name></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">flags<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="29">GET_SHA1_QUIETLY<pos:position pos:line="20" pos:column="45"/></name></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">exit<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><literal type="number" pos:line="21" pos:column="30">128<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">die<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"Log for %s is empty."<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">refname<pos:position pos:line="23" pos:column="60"/></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">cb<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">found_it<pos:position pos:line="25" pos:column="24"/></name></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">for_each_reflog_ent<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">refname<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">read_ref_at_ent_oldest<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="62">&amp;<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="63">cb<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt>

	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3934_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">push_update_ref_status<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">strbuf<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">ref<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">ref<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="3" pos:column="36">struct<pos:position pos:line="3" pos:column="42"/></name> <name pos:line="3" pos:column="43">ref<pos:position pos:line="3" pos:column="46"/></name></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">remote_refs<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">refname<pos:position pos:line="5" pos:column="22"/></name></decl>, <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="25">msg<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">forced<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">starts_with<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name><name pos:line="8" pos:column="25">buf<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">buf<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"ok "<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42"> <block pos:line="8" pos:column="43">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">status<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">REF_STATUS_OK<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">refname<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">buf<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">buf<pos:position pos:line="10" pos:column="35"/></name></name> <operator pos:line="10" pos:column="36">+<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="38">3<pos:position pos:line="10" pos:column="39"/></literal></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then> <elseif pos:line="11" pos:column="11">else <if pos:line="11" pos:column="16">if <condition pos:line="11" pos:column="19">(<expr><call><name pos:line="11" pos:column="20">starts_with<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">buf<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">buf<pos:position pos:line="11" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="42">"error "<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52"> <block pos:line="11" pos:column="53">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">status<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">REF_STATUS_REMOTE_REJECT<pos:position pos:line="12" pos:column="50"/></name></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">refname<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name><name pos:line="13" pos:column="27">buf<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">buf<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">+<pos:position pos:line="13" pos:column="37"/></operator> <literal type="number" pos:line="13" pos:column="38">6<pos:position pos:line="13" pos:column="39"/></literal></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif> <else pos:line="14" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"expected ok/error, helper said '%s'"<pos:position pos:line="15" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="60">buf<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">-&gt;<pos:position pos:line="15" pos:column="68"/></operator><name pos:line="15" pos:column="65">buf<pos:position pos:line="15" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">msg<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">strchr<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">refname<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="31">' '<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">msg<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block pos:line="18" pos:column="18">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">strbuf<pos:position pos:line="19" pos:column="30"/></name></name></type> <name pos:line="19" pos:column="31">msg_buf<pos:position pos:line="19" pos:column="38"/></name> <init pos:line="19" pos:column="39">= <expr><name pos:line="19" pos:column="41">STRBUF_INIT<pos:position pos:line="19" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="20" pos:column="17">const<pos:position pos:line="20" pos:column="22"/></specifier> <name pos:line="20" pos:column="23">char<pos:position pos:line="20" pos:column="27"/></name> <modifier pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></modifier></type><name pos:line="20" pos:column="29">end<pos:position pos:line="20" pos:column="32"/></name></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>

		<expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">msg<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">++<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="char" pos:line="22" pos:column="26">'\0'<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">unquote_c_style<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="39">msg_buf<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">msg<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="53">&amp;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="54">end<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">msg<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">strbuf_detach<pos:position pos:line="24" pos:column="44"/></name><argument_list pos:line="24" pos:column="44">(<argument><expr><operator pos:line="24" pos:column="45">&amp;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="46">msg_buf<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">NULL<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt></block></then>
		<else pos:line="25" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">msg<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">xstrdup<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">msg<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_release<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><operator pos:line="27" pos:column="32">&amp;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="33">msg_buf<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">strcmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">msg<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="34">"no match"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46"> <block pos:line="29" pos:column="47">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">status<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">=<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">REF_STATUS_NONE<pos:position pos:line="30" pos:column="49"/></name></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">free<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">msg<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">msg<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">NULL<pos:position pos:line="32" pos:column="35"/></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then>
		<elseif pos:line="34" pos:column="17">else <if pos:line="34" pos:column="22">if <condition pos:line="34" pos:column="25">(<expr><operator pos:line="34" pos:column="26">!<pos:position pos:line="34" pos:column="27"/></operator><call><name pos:line="34" pos:column="27">strcmp<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">msg<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">"up to date"<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="53"/></condition><then pos:line="34" pos:column="53"> <block pos:line="34" pos:column="54">{
			<expr_stmt><expr><name pos:line="35" pos:column="25">status<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="34">REF_STATUS_UPTODATE<pos:position pos:line="35" pos:column="53"/></name></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">free<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">msg<pos:position pos:line="36" pos:column="33"/></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="37" pos:column="25">msg<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="31">NULL<pos:position pos:line="37" pos:column="35"/></name></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="39" pos:column="17">else <if pos:line="39" pos:column="22">if <condition pos:line="39" pos:column="25">(<expr><operator pos:line="39" pos:column="26">!<pos:position pos:line="39" pos:column="27"/></operator><call><name pos:line="39" pos:column="27">strcmp<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name pos:line="39" pos:column="34">msg<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="39">"non-fast forward"<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="59"/></condition><then pos:line="39" pos:column="59"> <block pos:line="39" pos:column="60">{
			<expr_stmt><expr><name pos:line="40" pos:column="25">status<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">REF_STATUS_REJECT_NONFASTFORWARD<pos:position pos:line="40" pos:column="66"/></name></expr>;<pos:position pos:line="40" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">free<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">msg<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">msg<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <name pos:line="42" pos:column="31">NULL<pos:position pos:line="42" pos:column="35"/></name></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="44" pos:column="17">else <if pos:line="44" pos:column="22">if <condition pos:line="44" pos:column="25">(<expr><operator pos:line="44" pos:column="26">!<pos:position pos:line="44" pos:column="27"/></operator><call><name pos:line="44" pos:column="27">strcmp<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">msg<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="39">"already exists"<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <block pos:line="44" pos:column="58">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">status<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">=<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">REF_STATUS_REJECT_ALREADY_EXISTS<pos:position pos:line="45" pos:column="66"/></name></expr>;<pos:position pos:line="45" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">free<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">msg<pos:position pos:line="46" pos:column="33"/></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">msg<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">=<pos:position pos:line="47" pos:column="30"/></operator> <name pos:line="47" pos:column="31">NULL<pos:position pos:line="47" pos:column="35"/></name></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><operator pos:line="49" pos:column="26">!<pos:position pos:line="49" pos:column="27"/></operator><call><name pos:line="49" pos:column="27">strcmp<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">msg<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="39">"fetch first"<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="54"/></condition><then pos:line="49" pos:column="54"> <block pos:line="49" pos:column="55">{
			<expr_stmt><expr><name pos:line="50" pos:column="25">status<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="34">REF_STATUS_REJECT_FETCH_FIRST<pos:position pos:line="50" pos:column="63"/></name></expr>;<pos:position pos:line="50" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">free<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">msg<pos:position pos:line="51" pos:column="33"/></name></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="52" pos:column="25">msg<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <name pos:line="52" pos:column="31">NULL<pos:position pos:line="52" pos:column="35"/></name></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="54" pos:column="17">else <if pos:line="54" pos:column="22">if <condition pos:line="54" pos:column="25">(<expr><operator pos:line="54" pos:column="26">!<pos:position pos:line="54" pos:column="27"/></operator><call><name pos:line="54" pos:column="27">strcmp<pos:position pos:line="54" pos:column="33"/></name><argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">msg<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="39">"needs force"<pos:position pos:line="54" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="54"/></condition><then pos:line="54" pos:column="54"> <block pos:line="54" pos:column="55">{
			<expr_stmt><expr><name pos:line="55" pos:column="25">status<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <name pos:line="55" pos:column="34">REF_STATUS_REJECT_NEEDS_FORCE<pos:position pos:line="55" pos:column="63"/></name></expr>;<pos:position pos:line="55" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">free<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">msg<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">msg<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="31">NULL<pos:position pos:line="57" pos:column="35"/></name></expr>;<pos:position pos:line="57" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="59" pos:column="17">else <if pos:line="59" pos:column="22">if <condition pos:line="59" pos:column="25">(<expr><operator pos:line="59" pos:column="26">!<pos:position pos:line="59" pos:column="27"/></operator><call><name pos:line="59" pos:column="27">strcmp<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">msg<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="39">"stale info"<pos:position pos:line="59" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53"> <block pos:line="59" pos:column="54">{
			<expr_stmt><expr><name pos:line="60" pos:column="25">status<pos:position pos:line="60" pos:column="31"/></name> <operator pos:line="60" pos:column="32">=<pos:position pos:line="60" pos:column="33"/></operator> <name pos:line="60" pos:column="34">REF_STATUS_REJECT_STALE<pos:position pos:line="60" pos:column="57"/></name></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">free<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">msg<pos:position pos:line="61" pos:column="33"/></name></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="62" pos:column="25">msg<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <name pos:line="62" pos:column="31">NULL<pos:position pos:line="62" pos:column="35"/></name></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="64" pos:column="17">else <if pos:line="64" pos:column="22">if <condition pos:line="64" pos:column="25">(<expr><operator pos:line="64" pos:column="26">!<pos:position pos:line="64" pos:column="27"/></operator><call><name pos:line="64" pos:column="27">strcmp<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">msg<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="39">"forced update"<pos:position pos:line="64" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="56"/></condition><then pos:line="64" pos:column="56"> <block pos:line="64" pos:column="57">{
			<expr_stmt><expr><name pos:line="65" pos:column="25">forced<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">=<pos:position pos:line="65" pos:column="33"/></operator> <literal type="number" pos:line="65" pos:column="34">1<pos:position pos:line="65" pos:column="35"/></literal></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">free<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">msg<pos:position pos:line="66" pos:column="33"/></name></expr></argument>)<pos:position pos:line="66" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="67" pos:column="25">msg<pos:position pos:line="67" pos:column="28"/></name> <operator pos:line="67" pos:column="29">=<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="31">NULL<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>

	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">*<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">ref<pos:position pos:line="71" pos:column="17"/></name></expr>)<pos:position pos:line="71" pos:column="18"/></condition><then pos:line="71" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="72" pos:column="17">*<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">ref<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <call><name pos:line="72" pos:column="24">find_ref_by_name<pos:position pos:line="72" pos:column="40"/></name><argument_list pos:line="72" pos:column="40">(<argument><expr><operator pos:line="72" pos:column="41">*<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="42">ref<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">refname<pos:position pos:line="72" pos:column="54"/></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt></block></then></if>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><operator pos:line="73" pos:column="13">!<pos:position pos:line="73" pos:column="14"/></operator><operator pos:line="73" pos:column="14">*<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="15">ref<pos:position pos:line="73" pos:column="18"/></name></expr>)<pos:position pos:line="73" pos:column="19"/></condition><then pos:line="73" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="17">*<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">ref<pos:position pos:line="74" pos:column="21"/></name> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <call><name pos:line="74" pos:column="24">find_ref_by_name<pos:position pos:line="74" pos:column="40"/></name><argument_list pos:line="74" pos:column="40">(<argument><expr><name pos:line="74" pos:column="41">remote_refs<pos:position pos:line="74" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="54">refname<pos:position pos:line="74" pos:column="61"/></name></expr></argument>)<pos:position pos:line="74" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="63"/></expr_stmt></block></then></if>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><operator pos:line="75" pos:column="13">!<pos:position pos:line="75" pos:column="14"/></operator><operator pos:line="75" pos:column="14">*<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="15">ref<pos:position pos:line="75" pos:column="18"/></name></expr>)<pos:position pos:line="75" pos:column="19"/></condition><then pos:line="75" pos:column="19"> <block pos:line="75" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">warning<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><literal type="string" pos:line="76" pos:column="25">"helper reported unexpected status of %s"<pos:position pos:line="76" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="68">refname<pos:position pos:line="76" pos:column="75"/></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
		<return pos:line="77" pos:column="17">return <expr><literal type="number" pos:line="77" pos:column="24">1<pos:position pos:line="77" pos:column="25"/></literal></expr>;<pos:position pos:line="77" pos:column="26"/></return>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name><operator pos:line="80" pos:column="13">(<pos:position pos:line="80" pos:column="14"/></operator><operator pos:line="80" pos:column="14">*<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">ref<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">)<pos:position pos:line="80" pos:column="19"/></operator><operator pos:line="80" pos:column="19">-&gt;<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="21">status<pos:position pos:line="80" pos:column="27"/></name></name> <operator pos:line="80" pos:column="28">!=<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="31">REF_STATUS_NONE<pos:position pos:line="80" pos:column="46"/></name></expr>)<pos:position pos:line="80" pos:column="47"/></condition><then pos:line="80" pos:column="47"> <block pos:line="80" pos:column="48">{
		<comment type="block" pos:line="81" pos:column="17">/*
		 * Earlier, the ref was marked not to be pushed, so ignore the ref
		 * status reported by the remote helper if the latter is 'no match'.
		 */</comment>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name pos:line="85" pos:column="21">status<pos:position pos:line="85" pos:column="27"/></name> <operator pos:line="85" pos:column="28">==<pos:position pos:line="85" pos:column="30"/></operator> <name pos:line="85" pos:column="31">REF_STATUS_NONE<pos:position pos:line="85" pos:column="46"/></name></expr>)<pos:position pos:line="85" pos:column="47"/></condition><then pos:line="85" pos:column="47">
			<block type="pseudo"><return pos:line="86" pos:column="25">return <expr><literal type="number" pos:line="86" pos:column="32">1<pos:position pos:line="86" pos:column="33"/></literal></expr>;<pos:position pos:line="86" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><operator pos:line="89" pos:column="9">(<pos:position pos:line="89" pos:column="10"/></operator><operator pos:line="89" pos:column="10">*<pos:position pos:line="89" pos:column="11"/></operator><name pos:line="89" pos:column="11">ref<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">)<pos:position pos:line="89" pos:column="15"/></operator><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">status<pos:position pos:line="89" pos:column="23"/></name></name> <operator pos:line="89" pos:column="24">=<pos:position pos:line="89" pos:column="25"/></operator> <name pos:line="89" pos:column="26">status<pos:position pos:line="89" pos:column="32"/></name></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><operator pos:line="90" pos:column="9">(<pos:position pos:line="90" pos:column="10"/></operator><operator pos:line="90" pos:column="10">*<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">ref<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">)<pos:position pos:line="90" pos:column="15"/></operator><operator pos:line="90" pos:column="15">-&gt;<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="17">forced_update<pos:position pos:line="90" pos:column="30"/></name></name> <operator pos:line="90" pos:column="31">|=<pos:position pos:line="90" pos:column="33"/></operator> <name pos:line="90" pos:column="34">forced<pos:position pos:line="90" pos:column="40"/></name></expr>;<pos:position pos:line="90" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><operator pos:line="91" pos:column="9">(<pos:position pos:line="91" pos:column="10"/></operator><operator pos:line="91" pos:column="10">*<pos:position pos:line="91" pos:column="11"/></operator><name pos:line="91" pos:column="11">ref<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">)<pos:position pos:line="91" pos:column="15"/></operator><operator pos:line="91" pos:column="15">-&gt;<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="17">remote_status<pos:position pos:line="91" pos:column="30"/></name></name> <operator pos:line="91" pos:column="31">=<pos:position pos:line="91" pos:column="32"/></operator> <name pos:line="91" pos:column="33">msg<pos:position pos:line="91" pos:column="36"/></name></expr>;<pos:position pos:line="91" pos:column="37"/></expr_stmt>
	<return pos:line="92" pos:column="9">return <expr><operator pos:line="92" pos:column="16">!<pos:position pos:line="92" pos:column="17"/></operator><operator pos:line="92" pos:column="17">(<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="18">status<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">==<pos:position pos:line="92" pos:column="27"/></operator> <name pos:line="92" pos:column="28">REF_STATUS_OK<pos:position pos:line="92" pos:column="41"/></name><operator pos:line="92" pos:column="41">)<pos:position pos:line="92" pos:column="42"/></operator></expr>;<pos:position pos:line="92" pos:column="43"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

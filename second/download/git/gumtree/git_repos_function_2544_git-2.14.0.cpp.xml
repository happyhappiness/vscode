<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2544_git-2.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">diff_tree_oid<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">object_id<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">old_oid<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">object_id<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">new_oid<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="3" pos:column="19">const<pos:position pos:line="3" pos:column="24"/></specifier> <name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">base_str<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="41">struct<pos:position pos:line="3" pos:column="47"/></name> <name pos:line="3" pos:column="48">diff_options<pos:position pos:line="3" pos:column="60"/></name></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">opt<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">base<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">retval<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_init<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="22">base<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">PATH_MAX<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strbuf_addstr<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="24">base<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">base_str<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">retval<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">ll_diff_tree_oid<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">old_oid<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">new_oid<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="53">&amp;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="54">base<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">opt<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><operator pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">base_str<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">&amp;&amp;<pos:position pos:line="12" pos:column="34"/></operator> <call><name pos:line="12" pos:column="27">DIFF_OPT_TST<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">opt<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">FOLLOW_RENAMES<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call> <operator pos:line="12" pos:column="61">&amp;&amp;<pos:position pos:line="12" pos:column="71"/></operator> <call><name pos:line="12" pos:column="64">diff_might_be_rename<pos:position pos:line="12" pos:column="84"/></name><argument_list pos:line="12" pos:column="84">()<pos:position pos:line="12" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="87"/></condition><then pos:line="12" pos:column="87">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">try_to_follow_renames<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">old_oid<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">new_oid<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="57">&amp;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="58">base<pos:position pos:line="13" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="64">opt<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_release<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">base<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>

	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">retval<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

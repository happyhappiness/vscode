<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6279_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">try_delta<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">unpacked<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">trg<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">unpacked<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">src<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		     <parameter><decl><type><name pos:line="2" pos:column="22">unsigned<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">max_depth<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">unsigned<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">long<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">mem_usage<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_entry<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">trg_entry<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name><name pos:line="4" pos:column="42">trg<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">entry<pos:position pos:line="4" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_entry<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">src_entry<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><name><name pos:line="5" pos:column="42">src<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">entry<pos:position pos:line="5" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">trg_size<pos:position pos:line="6" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="33">src_size<pos:position pos:line="6" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="43">delta_size<pos:position pos:line="6" pos:column="53"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="55">sizediff<pos:position pos:line="6" pos:column="63"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="65">max_size<pos:position pos:line="6" pos:column="73"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="75">sz<pos:position pos:line="6" pos:column="77"/></name></decl>;<pos:position pos:line="6" pos:column="78"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">ref_depth<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">enum<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">object_type<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">type<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">void<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">delta_buf<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* Don't bother doing diffs between different types */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">trg_entry<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">type<pos:position pos:line="12" pos:column="28"/></name></name> <operator pos:line="12" pos:column="29">!=<pos:position pos:line="12" pos:column="31"/></operator> <name><name pos:line="12" pos:column="32">src_entry<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">type<pos:position pos:line="12" pos:column="47"/></name></name></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/*
	 * We do not bother to try a delta that we discarded on an
	 * earlier try, but only when reusing delta data.  Note that
	 * src_entry that is marked as the preferred_base should always
	 * be considered, as even if we produce a suboptimal delta against
	 * it, we will still save the transfer cost, as we already know
	 * the other side has it and we won't send src_entry at all.
	 */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">reuse_delta<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&amp;&amp;<pos:position pos:line="23" pos:column="35"/></operator> <name><name pos:line="23" pos:column="28">trg_entry<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">in_pack<pos:position pos:line="23" pos:column="46"/></name></name> <operator pos:line="23" pos:column="47">&amp;&amp;<pos:position pos:line="23" pos:column="57"/></operator>
	    <name><name pos:line="24" pos:column="13">trg_entry<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">in_pack<pos:position pos:line="24" pos:column="31"/></name></name> <operator pos:line="24" pos:column="32">==<pos:position pos:line="24" pos:column="34"/></operator> <name><name pos:line="24" pos:column="35">src_entry<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">in_pack<pos:position pos:line="24" pos:column="53"/></name></name> <operator pos:line="24" pos:column="54">&amp;&amp;<pos:position pos:line="24" pos:column="64"/></operator>
	    <operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">src_entry<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">preferred_base<pos:position pos:line="25" pos:column="39"/></name></name> <operator pos:line="25" pos:column="40">&amp;&amp;<pos:position pos:line="25" pos:column="50"/></operator>
	    <name><name pos:line="26" pos:column="13">trg_entry<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">in_pack_type<pos:position pos:line="26" pos:column="36"/></name></name> <operator pos:line="26" pos:column="37">!=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">OBJ_REF_DELTA<pos:position pos:line="26" pos:column="53"/></name> <operator pos:line="26" pos:column="54">&amp;&amp;<pos:position pos:line="26" pos:column="64"/></operator>
	    <name><name pos:line="27" pos:column="13">trg_entry<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">in_pack_type<pos:position pos:line="27" pos:column="36"/></name></name> <operator pos:line="27" pos:column="37">!=<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="40">OBJ_OFS_DELTA<pos:position pos:line="27" pos:column="53"/></name></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54">
		<block type="pseudo"><return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="30" pos:column="9">/* Let's not bust the allowed depth. */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">src<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">depth<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">&gt;=<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="27">max_depth<pos:position pos:line="31" pos:column="36"/></name></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="34" pos:column="9">/* Now some size filtering heuristics. */</comment>
	<expr_stmt><expr><name pos:line="35" pos:column="9">trg_size<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name><name pos:line="35" pos:column="20">trg_entry<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">size<pos:position pos:line="35" pos:column="35"/></name></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">trg_entry<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">delta<pos:position pos:line="36" pos:column="30"/></name></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31"> <block pos:line="36" pos:column="32">{
		<expr_stmt><expr><name pos:line="37" pos:column="17">max_size<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">trg_size<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">/<pos:position pos:line="37" pos:column="37"/></operator><literal type="number" pos:line="37" pos:column="37">2<pos:position pos:line="37" pos:column="38"/></literal> <operator pos:line="37" pos:column="39">-<pos:position pos:line="37" pos:column="40"/></operator> <literal type="number" pos:line="37" pos:column="41">20<pos:position pos:line="37" pos:column="43"/></literal></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">ref_depth<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">1<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then> <else pos:line="39" pos:column="11">else <block pos:line="39" pos:column="16">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">max_size<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name><name pos:line="40" pos:column="28">trg_entry<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">delta_size<pos:position pos:line="40" pos:column="49"/></name></name></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">ref_depth<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name><name pos:line="41" pos:column="29">trg<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">depth<pos:position pos:line="41" pos:column="39"/></name></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="43" pos:column="9">max_size<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <operator pos:line="43" pos:column="20">(<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">uint64_t<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">)<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">max_size<pos:position pos:line="43" pos:column="38"/></name> <operator pos:line="43" pos:column="39">*<pos:position pos:line="43" pos:column="40"/></operator> <operator pos:line="43" pos:column="41">(<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="42">max_depth<pos:position pos:line="43" pos:column="51"/></name> <operator pos:line="43" pos:column="52">-<pos:position pos:line="43" pos:column="53"/></operator> <name><name pos:line="43" pos:column="54">src<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">depth<pos:position pos:line="43" pos:column="64"/></name></name><operator pos:line="43" pos:column="64">)<pos:position pos:line="43" pos:column="65"/></operator> <operator pos:line="43" pos:column="66">/<pos:position pos:line="43" pos:column="67"/></operator>
						<operator pos:line="44" pos:column="49">(<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">max_depth<pos:position pos:line="44" pos:column="59"/></name> <operator pos:line="44" pos:column="60">-<pos:position pos:line="44" pos:column="61"/></operator> <name pos:line="44" pos:column="62">ref_depth<pos:position pos:line="44" pos:column="71"/></name> <operator pos:line="44" pos:column="72">+<pos:position pos:line="44" pos:column="73"/></operator> <literal type="number" pos:line="44" pos:column="74">1<pos:position pos:line="44" pos:column="75"/></literal><operator pos:line="44" pos:column="75">)<pos:position pos:line="44" pos:column="76"/></operator></expr>;<pos:position pos:line="44" pos:column="77"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">max_size<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">==<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="25">0<pos:position pos:line="45" pos:column="26"/></literal></expr>)<pos:position pos:line="45" pos:column="27"/></condition><then pos:line="45" pos:column="27">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="47" pos:column="9">src_size<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name><name pos:line="47" pos:column="20">src_entry<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">-&gt;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="31">size<pos:position pos:line="47" pos:column="35"/></name></name></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">sizediff<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <ternary><condition><expr><name pos:line="48" pos:column="20">src_size<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">&lt;<pos:position pos:line="48" pos:column="33"/></operator> <name pos:line="48" pos:column="31">trg_size<pos:position pos:line="48" pos:column="39"/></name></expr> ?<pos:position pos:line="48" pos:column="41"/></condition><then pos:line="48" pos:column="41"> <expr><name pos:line="48" pos:column="42">trg_size<pos:position pos:line="48" pos:column="50"/></name> <operator pos:line="48" pos:column="51">-<pos:position pos:line="48" pos:column="52"/></operator> <name pos:line="48" pos:column="53">src_size<pos:position pos:line="48" pos:column="61"/></name></expr> <pos:position pos:line="48" pos:column="62"/></then><else pos:line="48" pos:column="62">: <expr><literal type="number" pos:line="48" pos:column="64">0<pos:position pos:line="48" pos:column="65"/></literal></expr></else></ternary></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">sizediff<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">&gt;=<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="25">max_size<pos:position pos:line="49" pos:column="33"/></name></expr>)<pos:position pos:line="49" pos:column="34"/></condition><then pos:line="49" pos:column="34">
		<block type="pseudo"><return pos:line="50" pos:column="17">return <expr><literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></return></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">trg_size<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">&lt;<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="24">src_size<pos:position pos:line="51" pos:column="32"/></name> <operator pos:line="51" pos:column="33">/<pos:position pos:line="51" pos:column="34"/></operator> <literal type="number" pos:line="51" pos:column="35">32<pos:position pos:line="51" pos:column="37"/></literal></expr>)<pos:position pos:line="51" pos:column="38"/></condition><then pos:line="51" pos:column="38">
		<block type="pseudo"><return pos:line="52" pos:column="17">return <expr><literal type="number" pos:line="52" pos:column="24">0<pos:position pos:line="52" pos:column="25"/></literal></expr>;<pos:position pos:line="52" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="54" pos:column="9">/* Load data if not already done */</comment>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><name><name pos:line="55" pos:column="14">trg<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">data<pos:position pos:line="55" pos:column="23"/></name></name></expr>)<pos:position pos:line="55" pos:column="24"/></condition><then pos:line="55" pos:column="24"> <block pos:line="55" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">read_lock<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">()<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="57" pos:column="17">trg<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">data<pos:position pos:line="57" pos:column="26"/></name></name> <operator pos:line="57" pos:column="27">=<pos:position pos:line="57" pos:column="28"/></operator> <call><name pos:line="57" pos:column="29">read_sha1_file<pos:position pos:line="57" pos:column="43"/></name><argument_list pos:line="57" pos:column="43">(<argument><expr><name><name pos:line="57" pos:column="44">trg_entry<pos:position pos:line="57" pos:column="53"/></name><operator pos:line="57" pos:column="53">-&gt;<pos:position pos:line="57" pos:column="58"/></operator><name pos:line="57" pos:column="55">idx<pos:position pos:line="57" pos:column="58"/></name><operator pos:line="57" pos:column="58">.<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="59">oid<pos:position pos:line="57" pos:column="62"/></name><operator pos:line="57" pos:column="62">.<pos:position pos:line="57" pos:column="63"/></operator><name pos:line="57" pos:column="63">hash<pos:position pos:line="57" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="69">&amp;<pos:position pos:line="57" pos:column="74"/></operator><name pos:line="57" pos:column="70">type<pos:position pos:line="57" pos:column="74"/></name></expr></argument>,
					   <argument><expr><operator pos:line="58" pos:column="44">&amp;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="45">sz<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">read_unlock<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">()<pos:position pos:line="59" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">!<pos:position pos:line="60" pos:column="22"/></operator><name><name pos:line="60" pos:column="22">trg<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">data<pos:position pos:line="60" pos:column="31"/></name></name></expr>)<pos:position pos:line="60" pos:column="32"/></condition><then pos:line="60" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="25">die<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><literal type="string" pos:line="61" pos:column="29">"object %s cannot be read"<pos:position pos:line="61" pos:column="55"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="62" pos:column="29">oid_to_hex<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><operator pos:line="62" pos:column="40">&amp;<pos:position pos:line="62" pos:column="45"/></operator><name><name pos:line="62" pos:column="41">trg_entry<pos:position pos:line="62" pos:column="50"/></name><operator pos:line="62" pos:column="50">-&gt;<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="52">idx<pos:position pos:line="62" pos:column="55"/></name><operator pos:line="62" pos:column="55">.<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="56">oid<pos:position pos:line="62" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt></block></then></if>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">sz<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">!=<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">trg_size<pos:position pos:line="63" pos:column="35"/></name></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">die<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><literal type="string" pos:line="64" pos:column="29">"object %s inconsistent object length (%lu vs %lu)"<pos:position pos:line="64" pos:column="80"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="65" pos:column="29">oid_to_hex<pos:position pos:line="65" pos:column="39"/></name><argument_list pos:line="65" pos:column="39">(<argument><expr><operator pos:line="65" pos:column="40">&amp;<pos:position pos:line="65" pos:column="45"/></operator><name><name pos:line="65" pos:column="41">trg_entry<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">-&gt;<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="52">idx<pos:position pos:line="65" pos:column="55"/></name><operator pos:line="65" pos:column="55">.<pos:position pos:line="65" pos:column="56"/></operator><name pos:line="65" pos:column="56">oid<pos:position pos:line="65" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="62">sz<pos:position pos:line="65" pos:column="64"/></name></expr></argument>,
			    <argument><expr><name pos:line="66" pos:column="29">trg_size<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="67" pos:column="17">*<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">mem_usage<pos:position pos:line="67" pos:column="27"/></name> <operator pos:line="67" pos:column="28">+=<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="31">sz<pos:position pos:line="67" pos:column="33"/></name></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><name><name pos:line="69" pos:column="14">src<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">-&gt;<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="19">data<pos:position pos:line="69" pos:column="23"/></name></name></expr>)<pos:position pos:line="69" pos:column="24"/></condition><then pos:line="69" pos:column="24"> <block pos:line="69" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">read_lock<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">()<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="71" pos:column="17">src<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">-&gt;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="22">data<pos:position pos:line="71" pos:column="26"/></name></name> <operator pos:line="71" pos:column="27">=<pos:position pos:line="71" pos:column="28"/></operator> <call><name pos:line="71" pos:column="29">read_sha1_file<pos:position pos:line="71" pos:column="43"/></name><argument_list pos:line="71" pos:column="43">(<argument><expr><name><name pos:line="71" pos:column="44">src_entry<pos:position pos:line="71" pos:column="53"/></name><operator pos:line="71" pos:column="53">-&gt;<pos:position pos:line="71" pos:column="58"/></operator><name pos:line="71" pos:column="55">idx<pos:position pos:line="71" pos:column="58"/></name><operator pos:line="71" pos:column="58">.<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="59">oid<pos:position pos:line="71" pos:column="62"/></name><operator pos:line="71" pos:column="62">.<pos:position pos:line="71" pos:column="63"/></operator><name pos:line="71" pos:column="63">hash<pos:position pos:line="71" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="69">&amp;<pos:position pos:line="71" pos:column="74"/></operator><name pos:line="71" pos:column="70">type<pos:position pos:line="71" pos:column="74"/></name></expr></argument>,
					   <argument><expr><operator pos:line="72" pos:column="44">&amp;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="45">sz<pos:position pos:line="72" pos:column="47"/></name></expr></argument>)<pos:position pos:line="72" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">read_unlock<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">()<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><operator pos:line="74" pos:column="21">!<pos:position pos:line="74" pos:column="22"/></operator><name><name pos:line="74" pos:column="22">src<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">-&gt;<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="27">data<pos:position pos:line="74" pos:column="31"/></name></name></expr>)<pos:position pos:line="74" pos:column="32"/></condition><then pos:line="74" pos:column="32"> <block pos:line="74" pos:column="33">{
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name><name pos:line="75" pos:column="29">src_entry<pos:position pos:line="75" pos:column="38"/></name><operator pos:line="75" pos:column="38">-&gt;<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="40">preferred_base<pos:position pos:line="75" pos:column="54"/></name></name></expr>)<pos:position pos:line="75" pos:column="55"/></condition><then pos:line="75" pos:column="55"> <block pos:line="75" pos:column="56">{
				<decl_stmt><decl><specifier pos:line="76" pos:column="33">static<pos:position pos:line="76" pos:column="39"/></specifier> <type><name pos:line="76" pos:column="40">int<pos:position pos:line="76" pos:column="43"/></name></type> <name pos:line="76" pos:column="44">warned<pos:position pos:line="76" pos:column="50"/></name> <init pos:line="76" pos:column="51">= <expr><literal type="number" pos:line="76" pos:column="53">0<pos:position pos:line="76" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="76" pos:column="55"/></decl_stmt>
				<if pos:line="77" pos:column="33">if <condition pos:line="77" pos:column="36">(<expr><operator pos:line="77" pos:column="37">!<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="38">warned<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">++<pos:position pos:line="77" pos:column="46"/></operator></expr>)<pos:position pos:line="77" pos:column="47"/></condition><then pos:line="77" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="41">warning<pos:position pos:line="78" pos:column="48"/></name><argument_list pos:line="78" pos:column="48">(<argument><expr><literal type="string" pos:line="78" pos:column="49">"object %s cannot be read"<pos:position pos:line="78" pos:column="75"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="79" pos:column="49">oid_to_hex<pos:position pos:line="79" pos:column="59"/></name><argument_list pos:line="79" pos:column="59">(<argument><expr><operator pos:line="79" pos:column="60">&amp;<pos:position pos:line="79" pos:column="65"/></operator><name><name pos:line="79" pos:column="61">src_entry<pos:position pos:line="79" pos:column="70"/></name><operator pos:line="79" pos:column="70">-&gt;<pos:position pos:line="79" pos:column="75"/></operator><name pos:line="79" pos:column="72">idx<pos:position pos:line="79" pos:column="75"/></name><operator pos:line="79" pos:column="75">.<pos:position pos:line="79" pos:column="76"/></operator><name pos:line="79" pos:column="76">oid<pos:position pos:line="79" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="82"/></expr_stmt></block></then></if>
				<comment type="block" pos:line="80" pos:column="33">/*
				 * Those objects are not included in the
				 * resulting pack.  Be resilient and ignore
				 * them if they can't be read, in case the
				 * pack could be created nevertheless.
				 */</comment>
				<return pos:line="86" pos:column="33">return <expr><literal type="number" pos:line="86" pos:column="40">0<pos:position pos:line="86" pos:column="41"/></literal></expr>;<pos:position pos:line="86" pos:column="42"/></return>
			}<pos:position pos:line="87" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">die<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><literal type="string" pos:line="88" pos:column="29">"object %s cannot be read"<pos:position pos:line="88" pos:column="55"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="89" pos:column="29">oid_to_hex<pos:position pos:line="89" pos:column="39"/></name><argument_list pos:line="89" pos:column="39">(<argument><expr><operator pos:line="89" pos:column="40">&amp;<pos:position pos:line="89" pos:column="45"/></operator><name><name pos:line="89" pos:column="41">src_entry<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">-&gt;<pos:position pos:line="89" pos:column="55"/></operator><name pos:line="89" pos:column="52">idx<pos:position pos:line="89" pos:column="55"/></name><operator pos:line="89" pos:column="55">.<pos:position pos:line="89" pos:column="56"/></operator><name pos:line="89" pos:column="56">oid<pos:position pos:line="89" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name pos:line="91" pos:column="21">sz<pos:position pos:line="91" pos:column="23"/></name> <operator pos:line="91" pos:column="24">!=<pos:position pos:line="91" pos:column="26"/></operator> <name pos:line="91" pos:column="27">src_size<pos:position pos:line="91" pos:column="35"/></name></expr>)<pos:position pos:line="91" pos:column="36"/></condition><then pos:line="91" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="25">die<pos:position pos:line="92" pos:column="28"/></name><argument_list pos:line="92" pos:column="28">(<argument><expr><literal type="string" pos:line="92" pos:column="29">"object %s inconsistent object length (%lu vs %lu)"<pos:position pos:line="92" pos:column="80"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="93" pos:column="29">oid_to_hex<pos:position pos:line="93" pos:column="39"/></name><argument_list pos:line="93" pos:column="39">(<argument><expr><operator pos:line="93" pos:column="40">&amp;<pos:position pos:line="93" pos:column="45"/></operator><name><name pos:line="93" pos:column="41">src_entry<pos:position pos:line="93" pos:column="50"/></name><operator pos:line="93" pos:column="50">-&gt;<pos:position pos:line="93" pos:column="55"/></operator><name pos:line="93" pos:column="52">idx<pos:position pos:line="93" pos:column="55"/></name><operator pos:line="93" pos:column="55">.<pos:position pos:line="93" pos:column="56"/></operator><name pos:line="93" pos:column="56">oid<pos:position pos:line="93" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="62">sz<pos:position pos:line="93" pos:column="64"/></name></expr></argument>,
			    <argument><expr><name pos:line="94" pos:column="29">src_size<pos:position pos:line="94" pos:column="37"/></name></expr></argument>)<pos:position pos:line="94" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="95" pos:column="17">*<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="18">mem_usage<pos:position pos:line="95" pos:column="27"/></name> <operator pos:line="95" pos:column="28">+=<pos:position pos:line="95" pos:column="30"/></operator> <name pos:line="95" pos:column="31">sz<pos:position pos:line="95" pos:column="33"/></name></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="96" pos:column="10"/></block></then></if>
	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><operator pos:line="97" pos:column="13">!<pos:position pos:line="97" pos:column="14"/></operator><name><name pos:line="97" pos:column="14">src<pos:position pos:line="97" pos:column="17"/></name><operator pos:line="97" pos:column="17">-&gt;<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="19">index<pos:position pos:line="97" pos:column="24"/></name></name></expr>)<pos:position pos:line="97" pos:column="25"/></condition><then pos:line="97" pos:column="25"> <block pos:line="97" pos:column="26">{
		<expr_stmt><expr><name><name pos:line="98" pos:column="17">src<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">-&gt;<pos:position pos:line="98" pos:column="25"/></operator><name pos:line="98" pos:column="22">index<pos:position pos:line="98" pos:column="27"/></name></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <call><name pos:line="98" pos:column="30">create_delta_index<pos:position pos:line="98" pos:column="48"/></name><argument_list pos:line="98" pos:column="48">(<argument><expr><name><name pos:line="98" pos:column="49">src<pos:position pos:line="98" pos:column="52"/></name><operator pos:line="98" pos:column="52">-&gt;<pos:position pos:line="98" pos:column="57"/></operator><name pos:line="98" pos:column="54">data<pos:position pos:line="98" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="60">src_size<pos:position pos:line="98" pos:column="68"/></name></expr></argument>)<pos:position pos:line="98" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="70"/></expr_stmt>
		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><operator pos:line="99" pos:column="21">!<pos:position pos:line="99" pos:column="22"/></operator><name><name pos:line="99" pos:column="22">src<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">-&gt;<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="27">index<pos:position pos:line="99" pos:column="32"/></name></name></expr>)<pos:position pos:line="99" pos:column="33"/></condition><then pos:line="99" pos:column="33"> <block pos:line="99" pos:column="34">{
			<decl_stmt><decl><specifier pos:line="100" pos:column="25">static<pos:position pos:line="100" pos:column="31"/></specifier> <type><name pos:line="100" pos:column="32">int<pos:position pos:line="100" pos:column="35"/></name></type> <name pos:line="100" pos:column="36">warned<pos:position pos:line="100" pos:column="42"/></name> <init pos:line="100" pos:column="43">= <expr><literal type="number" pos:line="100" pos:column="45">0<pos:position pos:line="100" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="100" pos:column="47"/></decl_stmt>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><operator pos:line="101" pos:column="29">!<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="30">warned<pos:position pos:line="101" pos:column="36"/></name><operator pos:line="101" pos:column="36">++<pos:position pos:line="101" pos:column="38"/></operator></expr>)<pos:position pos:line="101" pos:column="39"/></condition><then pos:line="101" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="33">warning<pos:position pos:line="102" pos:column="40"/></name><argument_list pos:line="102" pos:column="40">(<argument><expr><literal type="string" pos:line="102" pos:column="41">"suboptimal pack - out of memory"<pos:position pos:line="102" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="76"/></expr_stmt></block></then></if>
			<return pos:line="103" pos:column="25">return <expr><literal type="number" pos:line="103" pos:column="32">0<pos:position pos:line="103" pos:column="33"/></literal></expr>;<pos:position pos:line="103" pos:column="34"/></return>
		}<pos:position pos:line="104" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="105" pos:column="17">*<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="18">mem_usage<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">+=<pos:position pos:line="105" pos:column="30"/></operator> <call><name pos:line="105" pos:column="31">sizeof_delta_index<pos:position pos:line="105" pos:column="49"/></name><argument_list pos:line="105" pos:column="49">(<argument><expr><name><name pos:line="105" pos:column="50">src<pos:position pos:line="105" pos:column="53"/></name><operator pos:line="105" pos:column="53">-&gt;<pos:position pos:line="105" pos:column="58"/></operator><name pos:line="105" pos:column="55">index<pos:position pos:line="105" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="106" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="108" pos:column="9">delta_buf<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">=<pos:position pos:line="108" pos:column="20"/></operator> <call><name pos:line="108" pos:column="21">create_delta<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name><name pos:line="108" pos:column="34">src<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">index<pos:position pos:line="108" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="46">trg<pos:position pos:line="108" pos:column="49"/></name><operator pos:line="108" pos:column="49">-&gt;<pos:position pos:line="108" pos:column="54"/></operator><name pos:line="108" pos:column="51">data<pos:position pos:line="108" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="57">trg_size<pos:position pos:line="108" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="67">&amp;<pos:position pos:line="108" pos:column="72"/></operator><name pos:line="108" pos:column="68">delta_size<pos:position pos:line="108" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="80">max_size<pos:position pos:line="108" pos:column="88"/></name></expr></argument>)<pos:position pos:line="108" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="90"/></expr_stmt>
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">!<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">delta_buf<pos:position pos:line="109" pos:column="23"/></name></expr>)<pos:position pos:line="109" pos:column="24"/></condition><then pos:line="109" pos:column="24">
		<block type="pseudo"><return pos:line="110" pos:column="17">return <expr><literal type="number" pos:line="110" pos:column="24">0<pos:position pos:line="110" pos:column="25"/></literal></expr>;<pos:position pos:line="110" pos:column="26"/></return></block></then></if>

	<if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name><name pos:line="112" pos:column="13">trg_entry<pos:position pos:line="112" pos:column="22"/></name><operator pos:line="112" pos:column="22">-&gt;<pos:position pos:line="112" pos:column="27"/></operator><name pos:line="112" pos:column="24">delta<pos:position pos:line="112" pos:column="29"/></name></name></expr>)<pos:position pos:line="112" pos:column="30"/></condition><then pos:line="112" pos:column="30"> <block pos:line="112" pos:column="31">{
		<comment type="block" pos:line="113" pos:column="17">/* Prefer only shallower same-sized deltas. */</comment>
		<if pos:line="114" pos:column="17">if <condition pos:line="114" pos:column="20">(<expr><name pos:line="114" pos:column="21">delta_size<pos:position pos:line="114" pos:column="31"/></name> <operator pos:line="114" pos:column="32">==<pos:position pos:line="114" pos:column="34"/></operator> <name><name pos:line="114" pos:column="35">trg_entry<pos:position pos:line="114" pos:column="44"/></name><operator pos:line="114" pos:column="44">-&gt;<pos:position pos:line="114" pos:column="49"/></operator><name pos:line="114" pos:column="46">delta_size<pos:position pos:line="114" pos:column="56"/></name></name> <operator pos:line="114" pos:column="57">&amp;&amp;<pos:position pos:line="114" pos:column="67"/></operator>
		    <name><name pos:line="115" pos:column="21">src<pos:position pos:line="115" pos:column="24"/></name><operator pos:line="115" pos:column="24">-&gt;<pos:position pos:line="115" pos:column="29"/></operator><name pos:line="115" pos:column="26">depth<pos:position pos:line="115" pos:column="31"/></name></name> <operator pos:line="115" pos:column="32">+<pos:position pos:line="115" pos:column="33"/></operator> <literal type="number" pos:line="115" pos:column="34">1<pos:position pos:line="115" pos:column="35"/></literal> <operator pos:line="115" pos:column="36">&gt;=<pos:position pos:line="115" pos:column="41"/></operator> <name><name pos:line="115" pos:column="39">trg<pos:position pos:line="115" pos:column="42"/></name><operator pos:line="115" pos:column="42">-&gt;<pos:position pos:line="115" pos:column="47"/></operator><name pos:line="115" pos:column="44">depth<pos:position pos:line="115" pos:column="49"/></name></name></expr>)<pos:position pos:line="115" pos:column="50"/></condition><then pos:line="115" pos:column="50"> <block pos:line="115" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="116" pos:column="25">free<pos:position pos:line="116" pos:column="29"/></name><argument_list pos:line="116" pos:column="29">(<argument><expr><name pos:line="116" pos:column="30">delta_buf<pos:position pos:line="116" pos:column="39"/></name></expr></argument>)<pos:position pos:line="116" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="41"/></expr_stmt>
			<return pos:line="117" pos:column="25">return <expr><literal type="number" pos:line="117" pos:column="32">0<pos:position pos:line="117" pos:column="33"/></literal></expr>;<pos:position pos:line="117" pos:column="34"/></return>
		}<pos:position pos:line="118" pos:column="18"/></block></then></if>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="121" pos:column="9">/*
	 * Handle memory allocation outside of the cache
	 * accounting lock.  Compiler will optimize the strangeness
	 * away when NO_PTHREADS is defined.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">free<pos:position pos:line="126" pos:column="13"/></name><argument_list pos:line="126" pos:column="13">(<argument><expr><name><name pos:line="126" pos:column="14">trg_entry<pos:position pos:line="126" pos:column="23"/></name><operator pos:line="126" pos:column="23">-&gt;<pos:position pos:line="126" pos:column="28"/></operator><name pos:line="126" pos:column="25">delta_data<pos:position pos:line="126" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="127" pos:column="9">cache_lock<pos:position pos:line="127" pos:column="19"/></name><argument_list pos:line="127" pos:column="19">()<pos:position pos:line="127" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="22"/></expr_stmt>
	<if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name><name pos:line="128" pos:column="13">trg_entry<pos:position pos:line="128" pos:column="22"/></name><operator pos:line="128" pos:column="22">-&gt;<pos:position pos:line="128" pos:column="27"/></operator><name pos:line="128" pos:column="24">delta_data<pos:position pos:line="128" pos:column="34"/></name></name></expr>)<pos:position pos:line="128" pos:column="35"/></condition><then pos:line="128" pos:column="35"> <block pos:line="128" pos:column="36">{
		<expr_stmt><expr><name pos:line="129" pos:column="17">delta_cache_size<pos:position pos:line="129" pos:column="33"/></name> <operator pos:line="129" pos:column="34">-=<pos:position pos:line="129" pos:column="36"/></operator> <name><name pos:line="129" pos:column="37">trg_entry<pos:position pos:line="129" pos:column="46"/></name><operator pos:line="129" pos:column="46">-&gt;<pos:position pos:line="129" pos:column="51"/></operator><name pos:line="129" pos:column="48">delta_size<pos:position pos:line="129" pos:column="58"/></name></name></expr>;<pos:position pos:line="129" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="130" pos:column="17">trg_entry<pos:position pos:line="130" pos:column="26"/></name><operator pos:line="130" pos:column="26">-&gt;<pos:position pos:line="130" pos:column="31"/></operator><name pos:line="130" pos:column="28">delta_data<pos:position pos:line="130" pos:column="38"/></name></name> <operator pos:line="130" pos:column="39">=<pos:position pos:line="130" pos:column="40"/></operator> <name pos:line="130" pos:column="41">NULL<pos:position pos:line="130" pos:column="45"/></name></expr>;<pos:position pos:line="130" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="131" pos:column="10"/></block></then></if>
	<if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><call><name pos:line="132" pos:column="13">delta_cacheable<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><name pos:line="132" pos:column="29">src_size<pos:position pos:line="132" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="39">trg_size<pos:position pos:line="132" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="49">delta_size<pos:position pos:line="132" pos:column="59"/></name></expr></argument>)<pos:position pos:line="132" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="61"/></condition><then pos:line="132" pos:column="61"> <block pos:line="132" pos:column="62">{
		<expr_stmt><expr><name pos:line="133" pos:column="17">delta_cache_size<pos:position pos:line="133" pos:column="33"/></name> <operator pos:line="133" pos:column="34">+=<pos:position pos:line="133" pos:column="36"/></operator> <name pos:line="133" pos:column="37">delta_size<pos:position pos:line="133" pos:column="47"/></name></expr>;<pos:position pos:line="133" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="134" pos:column="17">cache_unlock<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">()<pos:position pos:line="134" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="135" pos:column="17">trg_entry<pos:position pos:line="135" pos:column="26"/></name><operator pos:line="135" pos:column="26">-&gt;<pos:position pos:line="135" pos:column="31"/></operator><name pos:line="135" pos:column="28">delta_data<pos:position pos:line="135" pos:column="38"/></name></name> <operator pos:line="135" pos:column="39">=<pos:position pos:line="135" pos:column="40"/></operator> <call><name pos:line="135" pos:column="41">xrealloc<pos:position pos:line="135" pos:column="49"/></name><argument_list pos:line="135" pos:column="49">(<argument><expr><name pos:line="135" pos:column="50">delta_buf<pos:position pos:line="135" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="61">delta_size<pos:position pos:line="135" pos:column="71"/></name></expr></argument>)<pos:position pos:line="135" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="136" pos:column="10"/></block></then> <else pos:line="136" pos:column="11">else <block pos:line="136" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="137" pos:column="17">cache_unlock<pos:position pos:line="137" pos:column="29"/></name><argument_list pos:line="137" pos:column="29">()<pos:position pos:line="137" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="138" pos:column="17">free<pos:position pos:line="138" pos:column="21"/></name><argument_list pos:line="138" pos:column="21">(<argument><expr><name pos:line="138" pos:column="22">delta_buf<pos:position pos:line="138" pos:column="31"/></name></expr></argument>)<pos:position pos:line="138" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="139" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="141" pos:column="9">trg_entry<pos:position pos:line="141" pos:column="18"/></name><operator pos:line="141" pos:column="18">-&gt;<pos:position pos:line="141" pos:column="23"/></operator><name pos:line="141" pos:column="20">delta<pos:position pos:line="141" pos:column="25"/></name></name> <operator pos:line="141" pos:column="26">=<pos:position pos:line="141" pos:column="27"/></operator> <name pos:line="141" pos:column="28">src_entry<pos:position pos:line="141" pos:column="37"/></name></expr>;<pos:position pos:line="141" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="142" pos:column="9">trg_entry<pos:position pos:line="142" pos:column="18"/></name><operator pos:line="142" pos:column="18">-&gt;<pos:position pos:line="142" pos:column="23"/></operator><name pos:line="142" pos:column="20">delta_size<pos:position pos:line="142" pos:column="30"/></name></name> <operator pos:line="142" pos:column="31">=<pos:position pos:line="142" pos:column="32"/></operator> <name pos:line="142" pos:column="33">delta_size<pos:position pos:line="142" pos:column="43"/></name></expr>;<pos:position pos:line="142" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="143" pos:column="9">trg<pos:position pos:line="143" pos:column="12"/></name><operator pos:line="143" pos:column="12">-&gt;<pos:position pos:line="143" pos:column="17"/></operator><name pos:line="143" pos:column="14">depth<pos:position pos:line="143" pos:column="19"/></name></name> <operator pos:line="143" pos:column="20">=<pos:position pos:line="143" pos:column="21"/></operator> <name><name pos:line="143" pos:column="22">src<pos:position pos:line="143" pos:column="25"/></name><operator pos:line="143" pos:column="25">-&gt;<pos:position pos:line="143" pos:column="30"/></operator><name pos:line="143" pos:column="27">depth<pos:position pos:line="143" pos:column="32"/></name></name> <operator pos:line="143" pos:column="33">+<pos:position pos:line="143" pos:column="34"/></operator> <literal type="number" pos:line="143" pos:column="35">1<pos:position pos:line="143" pos:column="36"/></literal></expr>;<pos:position pos:line="143" pos:column="37"/></expr_stmt>

	<return pos:line="145" pos:column="9">return <expr><literal type="number" pos:line="145" pos:column="16">1<pos:position pos:line="145" pos:column="17"/></literal></expr>;<pos:position pos:line="145" pos:column="18"/></return>
}<pos:position pos:line="146" pos:column="2"/></block></function></unit>

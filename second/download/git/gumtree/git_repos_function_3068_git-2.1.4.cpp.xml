<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3068_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nfsnprintf<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">buf<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">blen<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">fmt<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="61">...<pos:position pos:line="1" pos:column="64"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">va_list<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">va<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">va_start<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">va<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="22">fmt<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">blen<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&lt;=<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal> <operator pos:line="7" pos:column="23">||<pos:position pos:line="7" pos:column="25"/></operator> <call pos:line="7" pos:column="26">(<name pos:line="7" pos:column="27">unsigned<pos:position pos:line="7" pos:column="35"/></name>)<argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">ret<pos:position pos:line="7" pos:column="40"/></name> <operator pos:line="7" pos:column="41">=<pos:position pos:line="7" pos:column="42"/></operator> <call><name pos:line="7" pos:column="43">vsnprintf<pos:position pos:line="7" pos:column="52"/></name><argument_list pos:line="7" pos:column="52">(<argument><expr><name pos:line="7" pos:column="53">buf<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">blen<pos:position pos:line="7" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="64">fmt<pos:position pos:line="7" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="69">va<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call> <operator pos:line="7" pos:column="74">&gt;=<pos:position pos:line="7" pos:column="79"/></operator> <operator pos:line="7" pos:column="77">(<pos:position pos:line="7" pos:column="78"/></operator><name pos:line="7" pos:column="78">unsigned<pos:position pos:line="7" pos:column="86"/></name><operator pos:line="7" pos:column="86">)<pos:position pos:line="7" pos:column="87"/></operator><name pos:line="7" pos:column="87">blen<pos:position pos:line="7" pos:column="91"/></name></expr>)<pos:position pos:line="7" pos:column="92"/></condition><then pos:line="7" pos:column="92">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">die<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><literal type="string" pos:line="8" pos:column="21">"Fatal: buffer too small. Please report a bug."<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">va_end<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">va<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">ret<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1182_git-2.4.10.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">relative_path<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">in<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">prefix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">strbuf<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">sb<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">in_len<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><ternary><condition><expr><name pos:line="4" pos:column="22">in<pos:position pos:line="4" pos:column="24"/></name></expr> ?<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <expr><call><name pos:line="4" pos:column="27">strlen<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">in<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr> <pos:position pos:line="4" pos:column="38"/></then><else pos:line="4" pos:column="38">: <expr><literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">prefix_len<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><ternary><condition><expr><name pos:line="5" pos:column="26">prefix<pos:position pos:line="5" pos:column="32"/></name></expr> ?<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <expr><call><name pos:line="5" pos:column="35">strlen<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">prefix<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="50"/></then><else pos:line="5" pos:column="50">: <expr><literal type="number" pos:line="5" pos:column="52">0<pos:position pos:line="5" pos:column="53"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">in_off<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">prefix_off<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">j<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">in_len<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="string" pos:line="11" pos:column="24">"./"<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><operator pos:line="12" pos:column="18">!<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">prefix_len<pos:position pos:line="12" pos:column="29"/></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">in<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if></elseif></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">have_same_root<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">in<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">prefix<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
		<comment type="block" pos:line="16" pos:column="17">/* bypass dos_drive, for "c:" is identical to "C:" */</comment>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">has_dos_drive_prefix<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">in<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46"> <block pos:line="17" pos:column="47">{
			<expr_stmt><expr><name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <literal type="number" pos:line="18" pos:column="29">2<pos:position pos:line="18" pos:column="30"/></literal></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">j<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">2<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else <block pos:line="21" pos:column="16">{
		<return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">in<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>

	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">i<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&lt;<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="20">prefix_len<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">&amp;&amp;<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="34">j<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">&lt;<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="38">in_len<pos:position pos:line="25" pos:column="44"/></name> <operator pos:line="25" pos:column="45">&amp;&amp;<pos:position pos:line="25" pos:column="55"/></operator> <name><name pos:line="25" pos:column="48">prefix<pos:position pos:line="25" pos:column="54"/></name><index pos:line="25" pos:column="54">[<expr><name pos:line="25" pos:column="55">i<pos:position pos:line="25" pos:column="56"/></name></expr>]<pos:position pos:line="25" pos:column="57"/></index></name> <operator pos:line="25" pos:column="58">==<pos:position pos:line="25" pos:column="60"/></operator> <name><name pos:line="25" pos:column="61">in<pos:position pos:line="25" pos:column="63"/></name><index pos:line="25" pos:column="63">[<expr><name pos:line="25" pos:column="64">j<pos:position pos:line="25" pos:column="65"/></name></expr>]<pos:position pos:line="25" pos:column="66"/></index></name></expr>)<pos:position pos:line="25" pos:column="67"/></condition> <block pos:line="25" pos:column="68">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">is_dir_sep<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name><name pos:line="26" pos:column="32">prefix<pos:position pos:line="26" pos:column="38"/></name><index pos:line="26" pos:column="38">[<expr><name pos:line="26" pos:column="39">i<pos:position pos:line="26" pos:column="40"/></name></expr>]<pos:position pos:line="26" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
			<while pos:line="27" pos:column="25">while <condition pos:line="27" pos:column="31">(<expr><call><name pos:line="27" pos:column="32">is_dir_sep<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name><name pos:line="27" pos:column="43">prefix<pos:position pos:line="27" pos:column="49"/></name><index pos:line="27" pos:column="49">[<expr><name pos:line="27" pos:column="50">i<pos:position pos:line="27" pos:column="51"/></name></expr>]<pos:position pos:line="27" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="54"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">i<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">++<pos:position pos:line="28" pos:column="36"/></operator></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt></block></while>
			<while pos:line="29" pos:column="25">while <condition pos:line="29" pos:column="31">(<expr><call><name pos:line="29" pos:column="32">is_dir_sep<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name><name pos:line="29" pos:column="43">in<pos:position pos:line="29" pos:column="45"/></name><index pos:line="29" pos:column="45">[<expr><name pos:line="29" pos:column="46">j<pos:position pos:line="29" pos:column="47"/></name></expr>]<pos:position pos:line="29" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="50"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="33">j<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">++<pos:position pos:line="30" pos:column="36"/></operator></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="31" pos:column="25">prefix_off<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="38">i<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">in_off<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="34">j<pos:position pos:line="32" pos:column="35"/></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then> <else pos:line="33" pos:column="19">else <block pos:line="33" pos:column="24">{
			<expr_stmt><expr><name pos:line="34" pos:column="25">i<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">++<pos:position pos:line="34" pos:column="28"/></operator></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
			<expr_stmt><expr><name pos:line="35" pos:column="25">j<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">++<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>
	}<pos:position pos:line="37" pos:column="10"/></block></while>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(
	    <comment type="block" pos:line="40" pos:column="13">/* "prefix" seems like prefix of "in" */</comment>
	    <expr><name pos:line="41" pos:column="13">i<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">&gt;=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="18">prefix_len<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">&amp;&amp;<pos:position pos:line="41" pos:column="39"/></operator>
	    <comment type="block" pos:line="42" pos:column="13">/*
	     * but "/foo" is not a prefix of "/foobar"
	     * (i.e. prefix not end with '/')
	     */</comment>
	    <name pos:line="46" pos:column="13">prefix_off<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">&lt;<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="26">prefix_len<pos:position pos:line="46" pos:column="36"/></name></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37"> <block pos:line="46" pos:column="38">{
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">j<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">&gt;=<pos:position pos:line="47" pos:column="28"/></operator> <name pos:line="47" pos:column="26">in_len<pos:position pos:line="47" pos:column="32"/></name></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33"> <block pos:line="47" pos:column="34">{
			<comment type="block" pos:line="48" pos:column="25">/* in="/a/b", prefix="/a/b" */</comment>
			<expr_stmt><expr><name pos:line="49" pos:column="25">in_off<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <name pos:line="49" pos:column="34">in_len<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></then> <elseif pos:line="50" pos:column="19">else <if pos:line="50" pos:column="24">if <condition pos:line="50" pos:column="27">(<expr><call><name pos:line="50" pos:column="28">is_dir_sep<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name><name pos:line="50" pos:column="39">in<pos:position pos:line="50" pos:column="41"/></name><index pos:line="50" pos:column="41">[<expr><name pos:line="50" pos:column="42">j<pos:position pos:line="50" pos:column="43"/></name></expr>]<pos:position pos:line="50" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="46"/></condition><then pos:line="50" pos:column="46"> <block pos:line="50" pos:column="47">{
			<comment type="block" pos:line="51" pos:column="25">/* in="/a/b/c", prefix="/a/b" */</comment>
			<while pos:line="52" pos:column="25">while <condition pos:line="52" pos:column="31">(<expr><call><name pos:line="52" pos:column="32">is_dir_sep<pos:position pos:line="52" pos:column="42"/></name><argument_list pos:line="52" pos:column="42">(<argument><expr><name><name pos:line="52" pos:column="43">in<pos:position pos:line="52" pos:column="45"/></name><index pos:line="52" pos:column="45">[<expr><name pos:line="52" pos:column="46">j<pos:position pos:line="52" pos:column="47"/></name></expr>]<pos:position pos:line="52" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="50"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="33">j<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">++<pos:position pos:line="53" pos:column="36"/></operator></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="54" pos:column="25">in_off<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="34">j<pos:position pos:line="54" pos:column="35"/></name></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if></elseif> <else pos:line="55" pos:column="19">else <block pos:line="55" pos:column="24">{
			<comment type="block" pos:line="56" pos:column="25">/* in="/a/bbb/c", prefix="/a/b" */</comment>
			<expr_stmt><expr><name pos:line="57" pos:column="25">i<pos:position pos:line="57" pos:column="26"/></name> <operator pos:line="57" pos:column="27">=<pos:position pos:line="57" pos:column="28"/></operator> <name pos:line="57" pos:column="29">prefix_off<pos:position pos:line="57" pos:column="39"/></name></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></else></if>
	}<pos:position pos:line="59" pos:column="10"/></block></then> <elseif pos:line="59" pos:column="11">else <if pos:line="59" pos:column="16">if <condition pos:line="59" pos:column="19">(
		   <comment type="block" pos:line="60" pos:column="20">/* "in" is short than "prefix" */</comment>
		   <expr><name pos:line="61" pos:column="20">j<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">&gt;=<pos:position pos:line="61" pos:column="27"/></operator> <name pos:line="61" pos:column="25">in_len<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">&amp;&amp;<pos:position pos:line="61" pos:column="42"/></operator>
		   <comment type="block" pos:line="62" pos:column="20">/* "in" not end with '/' */</comment>
		   <name pos:line="63" pos:column="20">in_off<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">&lt;<pos:position pos:line="63" pos:column="31"/></operator> <name pos:line="63" pos:column="29">in_len<pos:position pos:line="63" pos:column="35"/></name></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36"> <block pos:line="63" pos:column="37">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><call><name pos:line="64" pos:column="21">is_dir_sep<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name><name pos:line="64" pos:column="32">prefix<pos:position pos:line="64" pos:column="38"/></name><index pos:line="64" pos:column="38">[<expr><name pos:line="64" pos:column="39">i<pos:position pos:line="64" pos:column="40"/></name></expr>]<pos:position pos:line="64" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="43"/></condition><then pos:line="64" pos:column="43"> <block pos:line="64" pos:column="44">{
			<comment type="block" pos:line="65" pos:column="25">/* in="/a/b", prefix="/a/b/c/" */</comment>
			<while pos:line="66" pos:column="25">while <condition pos:line="66" pos:column="31">(<expr><call><name pos:line="66" pos:column="32">is_dir_sep<pos:position pos:line="66" pos:column="42"/></name><argument_list pos:line="66" pos:column="42">(<argument><expr><name><name pos:line="66" pos:column="43">prefix<pos:position pos:line="66" pos:column="49"/></name><index pos:line="66" pos:column="49">[<expr><name pos:line="66" pos:column="50">i<pos:position pos:line="66" pos:column="51"/></name></expr>]<pos:position pos:line="66" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="54"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="33">i<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">++<pos:position pos:line="67" pos:column="36"/></operator></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="68" pos:column="25">in_off<pos:position pos:line="68" pos:column="31"/></name> <operator pos:line="68" pos:column="32">=<pos:position pos:line="68" pos:column="33"/></operator> <name pos:line="68" pos:column="34">in_len<pos:position pos:line="68" pos:column="40"/></name></expr>;<pos:position pos:line="68" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="69" pos:column="18"/></block></then></if>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><name pos:line="71" pos:column="9">in<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">+=<pos:position pos:line="71" pos:column="14"/></operator> <name pos:line="71" pos:column="15">in_off<pos:position pos:line="71" pos:column="21"/></name></expr>;<pos:position pos:line="71" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="72" pos:column="9">in_len<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">-=<pos:position pos:line="72" pos:column="18"/></operator> <name pos:line="72" pos:column="19">in_off<pos:position pos:line="72" pos:column="25"/></name></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>

	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">i<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">&gt;=<pos:position pos:line="74" pos:column="20"/></operator> <name pos:line="74" pos:column="18">prefix_len<pos:position pos:line="74" pos:column="28"/></name></expr>)<pos:position pos:line="74" pos:column="29"/></condition><then pos:line="74" pos:column="29"> <block pos:line="74" pos:column="30">{
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><operator pos:line="75" pos:column="21">!<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">in_len<pos:position pos:line="75" pos:column="28"/></name></expr>)<pos:position pos:line="75" pos:column="29"/></condition><then pos:line="75" pos:column="29">
			<block type="pseudo"><return pos:line="76" pos:column="25">return <expr><literal type="string" pos:line="76" pos:column="32">"./"<pos:position pos:line="76" pos:column="36"/></literal></expr>;<pos:position pos:line="76" pos:column="37"/></return></block></then>
		<else pos:line="77" pos:column="17">else
			<block type="pseudo"><return pos:line="78" pos:column="25">return <expr><name pos:line="78" pos:column="32">in<pos:position pos:line="78" pos:column="34"/></name></expr>;<pos:position pos:line="78" pos:column="35"/></return></block></else></if>
	}<pos:position pos:line="79" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="81" pos:column="9">strbuf_reset<pos:position pos:line="81" pos:column="21"/></name><argument_list pos:line="81" pos:column="21">(<argument><expr><name pos:line="81" pos:column="22">sb<pos:position pos:line="81" pos:column="24"/></name></expr></argument>)<pos:position pos:line="81" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">strbuf_grow<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><name pos:line="82" pos:column="21">sb<pos:position pos:line="82" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="25">in_len<pos:position pos:line="82" pos:column="31"/></name></expr></argument>)<pos:position pos:line="82" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>

	<while pos:line="84" pos:column="9">while <condition pos:line="84" pos:column="15">(<expr><name pos:line="84" pos:column="16">i<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">&lt;<pos:position pos:line="84" pos:column="22"/></operator> <name pos:line="84" pos:column="20">prefix_len<pos:position pos:line="84" pos:column="30"/></name></expr>)<pos:position pos:line="84" pos:column="31"/></condition> <block pos:line="84" pos:column="32">{
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><call><name pos:line="85" pos:column="21">is_dir_sep<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><name><name pos:line="85" pos:column="32">prefix<pos:position pos:line="85" pos:column="38"/></name><index pos:line="85" pos:column="38">[<expr><name pos:line="85" pos:column="39">i<pos:position pos:line="85" pos:column="40"/></name></expr>]<pos:position pos:line="85" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="43"/></condition><then pos:line="85" pos:column="43"> <block pos:line="85" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="86" pos:column="25">strbuf_addstr<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">sb<pos:position pos:line="86" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="43">"../"<pos:position pos:line="86" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="50"/></expr_stmt>
			<while pos:line="87" pos:column="25">while <condition pos:line="87" pos:column="31">(<expr><call><name pos:line="87" pos:column="32">is_dir_sep<pos:position pos:line="87" pos:column="42"/></name><argument_list pos:line="87" pos:column="42">(<argument><expr><name><name pos:line="87" pos:column="43">prefix<pos:position pos:line="87" pos:column="49"/></name><index pos:line="87" pos:column="49">[<expr><name pos:line="87" pos:column="50">i<pos:position pos:line="87" pos:column="51"/></name></expr>]<pos:position pos:line="87" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="54"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="33">i<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">++<pos:position pos:line="88" pos:column="36"/></operator></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt></block></while>
			<continue pos:line="89" pos:column="25">continue;<pos:position pos:line="89" pos:column="34"/></continue>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="91" pos:column="17">i<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">++<pos:position pos:line="91" pos:column="20"/></operator></expr>;<pos:position pos:line="91" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="92" pos:column="10"/></block></while>
	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator><call><name pos:line="93" pos:column="14">is_dir_sep<pos:position pos:line="93" pos:column="24"/></name><argument_list pos:line="93" pos:column="24">(<argument><expr><name><name pos:line="93" pos:column="25">prefix<pos:position pos:line="93" pos:column="31"/></name><index pos:line="93" pos:column="31">[<expr><name pos:line="93" pos:column="32">prefix_len<pos:position pos:line="93" pos:column="42"/></name> <operator pos:line="93" pos:column="43">-<pos:position pos:line="93" pos:column="44"/></operator> <literal type="number" pos:line="93" pos:column="45">1<pos:position pos:line="93" pos:column="46"/></literal></expr>]<pos:position pos:line="93" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="93" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="49"/></condition><then pos:line="93" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="17">strbuf_addstr<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">sb<pos:position pos:line="94" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="35">"../"<pos:position pos:line="94" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="42"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="96" pos:column="9">strbuf_addstr<pos:position pos:line="96" pos:column="22"/></name><argument_list pos:line="96" pos:column="22">(<argument><expr><name pos:line="96" pos:column="23">sb<pos:position pos:line="96" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="27">in<pos:position pos:line="96" pos:column="29"/></name></expr></argument>)<pos:position pos:line="96" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>

	<return pos:line="98" pos:column="9">return <expr><name><name pos:line="98" pos:column="16">sb<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">-&gt;<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="20">buf<pos:position pos:line="98" pos:column="23"/></name></name></expr>;<pos:position pos:line="98" pos:column="24"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

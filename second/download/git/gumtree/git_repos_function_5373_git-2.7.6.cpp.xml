<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5373_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_reupdate<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">ac<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">av<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
		       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">prefix<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">prefix_length<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/* Read HEAD and run update-index on paths that are
	 * merged and already different between index and HEAD.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">pos<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">has_head<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">1<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">pathspec<pos:position pos:line="9" pos:column="24"/></name></name></type> <name pos:line="9" pos:column="25">pathspec<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">parse_pathspec<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="25">pathspec<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>,
		       <argument><expr><name pos:line="12" pos:column="24">PATHSPEC_PREFER_CWD<pos:position pos:line="12" pos:column="43"/></name></expr></argument>,
		       <argument><expr><name pos:line="13" pos:column="24">prefix<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">av<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">+<pos:position pos:line="13" pos:column="36"/></operator> <literal type="number" pos:line="13" pos:column="37">1<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">read_ref<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="string" pos:line="15" pos:column="22">"HEAD"<pos:position pos:line="15" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">head_sha1<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41">
		<comment type="block" pos:line="16" pos:column="17">/* If there is no HEAD, that means it is an initial
		 * commit.  Update everything in the index.
		 */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">has_head<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt></block></then></if>
 <label><name pos:line="20" pos:column="2">redo<pos:position pos:line="20" pos:column="6"/></name>:<pos:position pos:line="20" pos:column="7"/></label>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">pos<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></init> <condition><expr><name pos:line="21" pos:column="23">pos<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">&lt;<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="29">active_nr<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></condition> <incr><expr><name pos:line="21" pos:column="40">pos<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">++<pos:position pos:line="21" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="46"/></control> <block pos:line="21" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name><name pos:line="22" pos:column="23">struct<pos:position pos:line="22" pos:column="29"/></name> <name pos:line="22" pos:column="30">cache_entry<pos:position pos:line="22" pos:column="41"/></name></name> <modifier pos:line="22" pos:column="42">*<pos:position pos:line="22" pos:column="43"/></modifier></type><name pos:line="22" pos:column="43">ce<pos:position pos:line="22" pos:column="45"/></name> <init pos:line="22" pos:column="46">= <expr><name><name pos:line="22" pos:column="48">active_cache<pos:position pos:line="22" pos:column="60"/></name><index pos:line="22" pos:column="60">[<expr><name pos:line="22" pos:column="61">pos<pos:position pos:line="22" pos:column="64"/></name></expr>]<pos:position pos:line="22" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="22" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">cache_entry<pos:position pos:line="23" pos:column="35"/></name></name> <modifier pos:line="23" pos:column="36">*<pos:position pos:line="23" pos:column="37"/></modifier></type><name pos:line="23" pos:column="37">old<pos:position pos:line="23" pos:column="40"/></name> <init pos:line="23" pos:column="41">= <expr><name pos:line="23" pos:column="43">NULL<pos:position pos:line="23" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">save_nr<pos:position pos:line="24" pos:column="28"/></name></decl>;<pos:position pos:line="24" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">path<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">ce_stage<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">ce<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call> <operator pos:line="27" pos:column="34">||<pos:position pos:line="27" pos:column="36"/></operator> <operator pos:line="27" pos:column="37">!<pos:position pos:line="27" pos:column="38"/></operator><call><name pos:line="27" pos:column="38">ce_path_match<pos:position pos:line="27" pos:column="51"/></name><argument_list pos:line="27" pos:column="51">(<argument><expr><name pos:line="27" pos:column="52">ce<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="56">&amp;<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="57">pathspec<pos:position pos:line="27" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="67">NULL<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="73"/></condition><then pos:line="27" pos:column="73">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">has_head<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">old<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">read_one_ent<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">NULL<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">head_sha1<pos:position pos:line="30" pos:column="59"/></name></expr></argument>,
					   <argument><expr><name><name pos:line="31" pos:column="44">ce<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">name<pos:position pos:line="31" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="54">ce_namelen<pos:position pos:line="31" pos:column="64"/></name><argument_list pos:line="31" pos:column="64">(<argument><expr><name pos:line="31" pos:column="65">ce<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="70">0<pos:position pos:line="31" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">old<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">&amp;&amp;<pos:position pos:line="32" pos:column="35"/></operator> <name><name pos:line="32" pos:column="28">ce<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">-&gt;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="32">ce_mode<pos:position pos:line="32" pos:column="39"/></name></name> <operator pos:line="32" pos:column="40">==<pos:position pos:line="32" pos:column="42"/></operator> <name><name pos:line="32" pos:column="43">old<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">ce_mode<pos:position pos:line="32" pos:column="55"/></name></name> <operator pos:line="32" pos:column="56">&amp;&amp;<pos:position pos:line="32" pos:column="66"/></operator>
		    <operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><call><name pos:line="33" pos:column="22">hashcmp<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name><name pos:line="33" pos:column="30">ce<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">sha1<pos:position pos:line="33" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="40">old<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">sha1<pos:position pos:line="33" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">free<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">old<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
			<continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue> <comment type="block" pos:line="35" pos:column="35">/* unchanged */</comment>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="37" pos:column="17">/* Be careful.  The working tree may not have the
		 * path anymore, in which case, under 'allow_remove',
		 * or worse yet 'allow_replace', active_nr may decrease.
		 */</comment>
		<expr_stmt><expr><name pos:line="41" pos:column="17">save_nr<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">active_nr<pos:position pos:line="41" pos:column="36"/></name></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">path<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <call><name pos:line="42" pos:column="24">xstrdup<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name><name pos:line="42" pos:column="32">ce<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">name<pos:position pos:line="42" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">update_one<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">path<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">free<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">path<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">free<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">old<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">save_nr<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">!=<pos:position pos:line="46" pos:column="31"/></operator> <name pos:line="46" pos:column="32">active_nr<pos:position pos:line="46" pos:column="41"/></name></expr>)<pos:position pos:line="46" pos:column="42"/></condition><then pos:line="46" pos:column="42">
			<block type="pseudo"><goto pos:line="47" pos:column="25">goto <name pos:line="47" pos:column="30">redo<pos:position pos:line="47" pos:column="34"/></name>;<pos:position pos:line="47" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">free_pathspec<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><operator pos:line="49" pos:column="23">&amp;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="24">pathspec<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
	<return pos:line="50" pos:column="9">return <expr><literal type="number" pos:line="50" pos:column="16">0<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

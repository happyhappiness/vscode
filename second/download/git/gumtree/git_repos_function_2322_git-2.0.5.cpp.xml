<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2322_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">prio_queue_reverse<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">prio_queue<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">queue<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">j<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">queue<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">compare<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">!=<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="31">NULL<pos:position pos:line="5" pos:column="35"/></name></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"BUG: prio_queue_reverse() on non-LIFO queue"<pos:position pos:line="6" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt></block></then></if>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;=<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">j<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">=<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name><name pos:line="7" pos:column="32">queue<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">nr<pos:position pos:line="7" pos:column="41"/></name></name> <operator pos:line="7" pos:column="42">-<pos:position pos:line="7" pos:column="43"/></operator> <literal type="number" pos:line="7" pos:column="44">1<pos:position pos:line="7" pos:column="45"/></literal><operator pos:line="7" pos:column="45">)<pos:position pos:line="7" pos:column="46"/></operator> <operator pos:line="7" pos:column="47">-<pos:position pos:line="7" pos:column="48"/></operator> <name pos:line="7" pos:column="49">i<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator></expr>;<pos:position pos:line="7" pos:column="52"/></condition> <incr><expr><name pos:line="7" pos:column="53">i<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">++<pos:position pos:line="7" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="57"/></control> <block pos:line="7" pos:column="58">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">commit<pos:position pos:line="8" pos:column="30"/></name></name> <modifier pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></modifier></type><name pos:line="8" pos:column="32">swap<pos:position pos:line="8" pos:column="36"/></name> <init pos:line="8" pos:column="37">= <expr><name><name pos:line="8" pos:column="39">queue<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">array<pos:position pos:line="8" pos:column="51"/></name><index pos:line="8" pos:column="51">[<expr><name pos:line="8" pos:column="52">i<pos:position pos:line="8" pos:column="53"/></name></expr>]<pos:position pos:line="8" pos:column="54"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">queue<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">array<pos:position pos:line="9" pos:column="29"/></name><index pos:line="9" pos:column="29">[<expr><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name></expr>]<pos:position pos:line="9" pos:column="32"/></index></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <name><name pos:line="9" pos:column="35">queue<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">array<pos:position pos:line="9" pos:column="47"/></name><index pos:line="9" pos:column="47">[<expr><name pos:line="9" pos:column="48">j<pos:position pos:line="9" pos:column="49"/></name></expr>]<pos:position pos:line="9" pos:column="50"/></index></name></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">queue<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">array<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><name pos:line="10" pos:column="30">j<pos:position pos:line="10" pos:column="31"/></name></expr>]<pos:position pos:line="10" pos:column="32"/></index></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">swap<pos:position pos:line="10" pos:column="39"/></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

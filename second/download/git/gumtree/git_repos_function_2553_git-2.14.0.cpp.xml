<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2553_git-2.14.0.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">skip_range_arg<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">arg<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">arg<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">==<pos:position pos:line="3" pos:column="20"/></operator> <literal type="char" pos:line="3" pos:column="21">':'<pos:position pos:line="3" pos:column="24"/></literal> <operator pos:line="3" pos:column="25">||<pos:position pos:line="3" pos:column="27"/></operator> <operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><operator pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">arg<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">==<pos:position pos:line="3" pos:column="36"/></operator> <literal type="char" pos:line="3" pos:column="37">'^'<pos:position pos:line="3" pos:column="40"/></literal> <operator pos:line="3" pos:column="41">&amp;&amp;<pos:position pos:line="3" pos:column="51"/></operator> <operator pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></operator><operator pos:line="3" pos:column="45">(<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">arg<pos:position pos:line="3" pos:column="49"/></name> <operator pos:line="3" pos:column="50">+<pos:position pos:line="3" pos:column="51"/></operator> <literal type="number" pos:line="3" pos:column="52">1<pos:position pos:line="3" pos:column="53"/></literal><operator pos:line="3" pos:column="53">)<pos:position pos:line="3" pos:column="54"/></operator> <operator pos:line="3" pos:column="55">==<pos:position pos:line="3" pos:column="57"/></operator> <literal type="char" pos:line="3" pos:column="58">':'<pos:position pos:line="3" pos:column="61"/></literal><operator pos:line="3" pos:column="61">)<pos:position pos:line="3" pos:column="62"/></operator></expr>)<pos:position pos:line="3" pos:column="63"/></condition><then pos:line="3" pos:column="63">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><call><name pos:line="4" pos:column="24">parse_range_funcname<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name pos:line="4" pos:column="45">arg<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">NULL<pos:position pos:line="4" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="56">NULL<pos:position pos:line="4" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="62">0<pos:position pos:line="4" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="65">0<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="68">NULL<pos:position pos:line="4" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="74">NULL<pos:position pos:line="4" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="80">NULL<pos:position pos:line="4" pos:column="84"/></name></expr></argument>)<pos:position pos:line="4" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="86"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="6" pos:column="9">arg<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">parse_loc<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">arg<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="42">0<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="45">-<pos:position pos:line="6" pos:column="46"/></operator><literal type="number" pos:line="6" pos:column="46">1<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">NULL<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">arg<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <literal type="char" pos:line="8" pos:column="21">','<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">arg<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">parse_loc<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">arg<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">+<pos:position pos:line="9" pos:column="37"/></operator><literal type="number" pos:line="9" pos:column="37">1<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">NULL<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="52">0<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="55">0<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="58">NULL<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt></block></then></if>

	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">arg<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4342_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">blame_chunk<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">blame_entry<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">dstq<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">blame_entry<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier><modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier><modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">srcq<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">tlno<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">offset<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">same<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">origin<pos:position pos:line="3" pos:column="38"/></name></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">parent<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">blame_entry<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">e<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><operator pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">srcq<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">blame_entry<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">samep<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name pos:line="6" pos:column="37">NULL<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="43">*<pos:position pos:line="6" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="44">diffp<pos:position pos:line="6" pos:column="49"/></name> <init pos:line="6" pos:column="50">= <expr><name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">e<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;&amp;<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="21">e<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">s_lno<pos:position pos:line="8" pos:column="29"/></name></name> <operator pos:line="8" pos:column="30">&lt;<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="32">tlno<pos:position pos:line="8" pos:column="36"/></name></expr>)<pos:position pos:line="8" pos:column="37"/></condition> <block pos:line="8" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">blame_entry<pos:position pos:line="9" pos:column="35"/></name></name> <modifier pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></modifier></type><name pos:line="9" pos:column="37">next<pos:position pos:line="9" pos:column="41"/></name> <init pos:line="9" pos:column="42">= <expr><name><name pos:line="9" pos:column="44">e<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">-&gt;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="47">next<pos:position pos:line="9" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
		<comment type="block" pos:line="10" pos:column="17">/*
		 * current record starts before differing portion.  If
		 * it reaches into it, we need to split it up and
		 * examine the second part separately.
		 */</comment>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">e<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">s_lno<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">+<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="32">e<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">num_lines<pos:position pos:line="15" pos:column="44"/></name></name> <operator pos:line="15" pos:column="45">&gt;<pos:position pos:line="15" pos:column="49"/></operator> <name pos:line="15" pos:column="47">tlno<pos:position pos:line="15" pos:column="51"/></name></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52"> <block pos:line="15" pos:column="53">{
			<comment type="block" pos:line="16" pos:column="25">/* Move second half to a new record */</comment>
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">int<pos:position pos:line="17" pos:column="28"/></name></type> <name pos:line="17" pos:column="29">len<pos:position pos:line="17" pos:column="32"/></name> <init pos:line="17" pos:column="33">= <expr><name pos:line="17" pos:column="35">tlno<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">-<pos:position pos:line="17" pos:column="41"/></operator> <name><name pos:line="17" pos:column="42">e<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">s_lno<pos:position pos:line="17" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="51"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="18" pos:column="25">struct<pos:position pos:line="18" pos:column="31"/></name> <name pos:line="18" pos:column="32">blame_entry<pos:position pos:line="18" pos:column="43"/></name></name> <modifier pos:line="18" pos:column="44">*<pos:position pos:line="18" pos:column="45"/></modifier></type><name pos:line="18" pos:column="45">n<pos:position pos:line="18" pos:column="46"/></name> <init pos:line="18" pos:column="47">= <expr><call><name pos:line="18" pos:column="49">xcalloc<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><literal type="number" pos:line="18" pos:column="57">1<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="60">sizeof <argument_list pos:line="18" pos:column="67">(<argument><expr pos:line="18" pos:column="68">struct <name pos:line="18" pos:column="75">blame_entry<pos:position pos:line="18" pos:column="86"/></name></expr></argument>)<pos:position pos:line="18" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="89"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="19" pos:column="25">n<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">suspect<pos:position pos:line="19" pos:column="35"/></name></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <name><name pos:line="19" pos:column="38">e<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">suspect<pos:position pos:line="19" pos:column="48"/></name></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">n<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">lno<pos:position pos:line="20" pos:column="31"/></name></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <name><name pos:line="20" pos:column="34">e<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">lno<pos:position pos:line="20" pos:column="40"/></name></name> <operator pos:line="20" pos:column="41">+<pos:position pos:line="20" pos:column="42"/></operator> <name pos:line="20" pos:column="43">len<pos:position pos:line="20" pos:column="46"/></name></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="21" pos:column="25">n<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">s_lno<pos:position pos:line="21" pos:column="33"/></name></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <name><name pos:line="21" pos:column="36">e<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">s_lno<pos:position pos:line="21" pos:column="44"/></name></name> <operator pos:line="21" pos:column="45">+<pos:position pos:line="21" pos:column="46"/></operator> <name pos:line="21" pos:column="47">len<pos:position pos:line="21" pos:column="50"/></name></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="22" pos:column="25">n<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">num_lines<pos:position pos:line="22" pos:column="37"/></name></name> <operator pos:line="22" pos:column="38">=<pos:position pos:line="22" pos:column="39"/></operator> <name><name pos:line="22" pos:column="40">e<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">num_lines<pos:position pos:line="22" pos:column="52"/></name></name> <operator pos:line="22" pos:column="53">-<pos:position pos:line="22" pos:column="54"/></operator> <name pos:line="22" pos:column="55">len<pos:position pos:line="22" pos:column="58"/></name></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">e<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">num_lines<pos:position pos:line="23" pos:column="37"/></name></name> <operator pos:line="23" pos:column="38">=<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="40">len<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="24" pos:column="25">e<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">score<pos:position pos:line="24" pos:column="33"/></name></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">0<pos:position pos:line="24" pos:column="37"/></literal></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
			<comment type="block" pos:line="25" pos:column="25">/* Push new record to diffp */</comment>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">n<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">next<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">diffp<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">diffp<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <name pos:line="27" pos:column="33">n<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then> <else pos:line="28" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">origin_decref<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name><name pos:line="29" pos:column="39">e<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">suspect<pos:position pos:line="29" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt></block></else></if>
		<comment type="block" pos:line="30" pos:column="17">/* Pass blame for everything before the differing
		 * chunk to the parent */</comment>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">e<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">suspect<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <call><name pos:line="32" pos:column="30">origin_incref<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">parent<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">e<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">s_lno<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">+=<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="29">offset<pos:position pos:line="33" pos:column="35"/></name></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">e<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">next<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">samep<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">samep<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">e<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">e<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">next<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></while>
	<comment type="block" pos:line="38" pos:column="9">/*
	 * As we don't know how much of a common stretch after this
	 * diff will occur, the currently blamed parts are all that we
	 * can assign to the parent for now.
	 */</comment>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">samep<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block pos:line="44" pos:column="20">{
		<expr_stmt><expr><operator pos:line="45" pos:column="17">*<pos:position pos:line="45" pos:column="18"/></operator><operator pos:line="45" pos:column="18">*<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">dstq<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <call><name pos:line="45" pos:column="26">reverse_blame<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">samep<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="47">*<pos:position pos:line="45" pos:column="48"/></operator><operator pos:line="45" pos:column="48">*<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="49">dstq<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="46" pos:column="17">*<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">dstq<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <operator pos:line="46" pos:column="25">&amp;<pos:position pos:line="46" pos:column="30"/></operator><name><name pos:line="46" pos:column="26">samep<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">-&gt;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="33">next<pos:position pos:line="46" pos:column="37"/></name></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="48" pos:column="9">/*
	 * Prepend the split off portions: everything after e starts
	 * after the blameable portion.
	 */</comment>
	<expr_stmt><expr><name pos:line="52" pos:column="9">e<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <call><name pos:line="52" pos:column="13">reverse_blame<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">diffp<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">e<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="54" pos:column="9">/*
	 * Now retain records on the target while parts are different
	 * from the parent.
	 */</comment>
	<expr_stmt><expr><name pos:line="58" pos:column="9">samep<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <name pos:line="58" pos:column="17">NULL<pos:position pos:line="58" pos:column="21"/></name></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="59" pos:column="9">diffp<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <name pos:line="59" pos:column="17">NULL<pos:position pos:line="59" pos:column="21"/></name></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>
	<while pos:line="60" pos:column="9">while <condition pos:line="60" pos:column="15">(<expr><name pos:line="60" pos:column="16">e<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">&amp;&amp;<pos:position pos:line="60" pos:column="28"/></operator> <name><name pos:line="60" pos:column="21">e<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">s_lno<pos:position pos:line="60" pos:column="29"/></name></name> <operator pos:line="60" pos:column="30">&lt;<pos:position pos:line="60" pos:column="34"/></operator> <name pos:line="60" pos:column="32">same<pos:position pos:line="60" pos:column="36"/></name></expr>)<pos:position pos:line="60" pos:column="37"/></condition> <block pos:line="60" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="61" pos:column="17">struct<pos:position pos:line="61" pos:column="23"/></name> <name pos:line="61" pos:column="24">blame_entry<pos:position pos:line="61" pos:column="35"/></name></name> <modifier pos:line="61" pos:column="36">*<pos:position pos:line="61" pos:column="37"/></modifier></type><name pos:line="61" pos:column="37">next<pos:position pos:line="61" pos:column="41"/></name> <init pos:line="61" pos:column="42">= <expr><name><name pos:line="61" pos:column="44">e<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">-&gt;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="47">next<pos:position pos:line="61" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="61" pos:column="52"/></decl_stmt>

		<comment type="block" pos:line="63" pos:column="17">/*
		 * If current record extends into sameness, need to split.
		 */</comment>
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name><name pos:line="66" pos:column="21">e<pos:position pos:line="66" pos:column="22"/></name><operator pos:line="66" pos:column="22">-&gt;<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="24">s_lno<pos:position pos:line="66" pos:column="29"/></name></name> <operator pos:line="66" pos:column="30">+<pos:position pos:line="66" pos:column="31"/></operator> <name><name pos:line="66" pos:column="32">e<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">-&gt;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="35">num_lines<pos:position pos:line="66" pos:column="44"/></name></name> <operator pos:line="66" pos:column="45">&gt;<pos:position pos:line="66" pos:column="49"/></operator> <name pos:line="66" pos:column="47">same<pos:position pos:line="66" pos:column="51"/></name></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52"> <block pos:line="66" pos:column="53">{
			<comment type="block" pos:line="67" pos:column="25">/*
			 * Move second half to a new record to be
			 * processed by later chunks
			 */</comment>
			<decl_stmt><decl><type><name pos:line="71" pos:column="25">int<pos:position pos:line="71" pos:column="28"/></name></type> <name pos:line="71" pos:column="29">len<pos:position pos:line="71" pos:column="32"/></name> <init pos:line="71" pos:column="33">= <expr><name pos:line="71" pos:column="35">same<pos:position pos:line="71" pos:column="39"/></name> <operator pos:line="71" pos:column="40">-<pos:position pos:line="71" pos:column="41"/></operator> <name><name pos:line="71" pos:column="42">e<pos:position pos:line="71" pos:column="43"/></name><operator pos:line="71" pos:column="43">-&gt;<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="45">s_lno<pos:position pos:line="71" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="71" pos:column="51"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="72" pos:column="25">struct<pos:position pos:line="72" pos:column="31"/></name> <name pos:line="72" pos:column="32">blame_entry<pos:position pos:line="72" pos:column="43"/></name></name> <modifier pos:line="72" pos:column="44">*<pos:position pos:line="72" pos:column="45"/></modifier></type><name pos:line="72" pos:column="45">n<pos:position pos:line="72" pos:column="46"/></name> <init pos:line="72" pos:column="47">= <expr><call><name pos:line="72" pos:column="49">xcalloc<pos:position pos:line="72" pos:column="56"/></name><argument_list pos:line="72" pos:column="56">(<argument><expr><literal type="number" pos:line="72" pos:column="57">1<pos:position pos:line="72" pos:column="58"/></literal></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="60">sizeof <argument_list pos:line="72" pos:column="67">(<argument><expr pos:line="72" pos:column="68">struct <name pos:line="72" pos:column="75">blame_entry<pos:position pos:line="72" pos:column="86"/></name></expr></argument>)<pos:position pos:line="72" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="89"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">n<pos:position pos:line="73" pos:column="26"/></name><operator pos:line="73" pos:column="26">-&gt;<pos:position pos:line="73" pos:column="31"/></operator><name pos:line="73" pos:column="28">suspect<pos:position pos:line="73" pos:column="35"/></name></name> <operator pos:line="73" pos:column="36">=<pos:position pos:line="73" pos:column="37"/></operator> <call><name pos:line="73" pos:column="38">origin_incref<pos:position pos:line="73" pos:column="51"/></name><argument_list pos:line="73" pos:column="51">(<argument><expr><name><name pos:line="73" pos:column="52">e<pos:position pos:line="73" pos:column="53"/></name><operator pos:line="73" pos:column="53">-&gt;<pos:position pos:line="73" pos:column="58"/></operator><name pos:line="73" pos:column="55">suspect<pos:position pos:line="73" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">n<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">lno<pos:position pos:line="74" pos:column="31"/></name></name> <operator pos:line="74" pos:column="32">=<pos:position pos:line="74" pos:column="33"/></operator> <name><name pos:line="74" pos:column="34">e<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">lno<pos:position pos:line="74" pos:column="40"/></name></name> <operator pos:line="74" pos:column="41">+<pos:position pos:line="74" pos:column="42"/></operator> <name pos:line="74" pos:column="43">len<pos:position pos:line="74" pos:column="46"/></name></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">n<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">-&gt;<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="28">s_lno<pos:position pos:line="75" pos:column="33"/></name></name> <operator pos:line="75" pos:column="34">=<pos:position pos:line="75" pos:column="35"/></operator> <name><name pos:line="75" pos:column="36">e<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">-&gt;<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="39">s_lno<pos:position pos:line="75" pos:column="44"/></name></name> <operator pos:line="75" pos:column="45">+<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="47">len<pos:position pos:line="75" pos:column="50"/></name></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="76" pos:column="25">n<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">-&gt;<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="28">num_lines<pos:position pos:line="76" pos:column="37"/></name></name> <operator pos:line="76" pos:column="38">=<pos:position pos:line="76" pos:column="39"/></operator> <name><name pos:line="76" pos:column="40">e<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">-&gt;<pos:position pos:line="76" pos:column="46"/></operator><name pos:line="76" pos:column="43">num_lines<pos:position pos:line="76" pos:column="52"/></name></name> <operator pos:line="76" pos:column="53">-<pos:position pos:line="76" pos:column="54"/></operator> <name pos:line="76" pos:column="55">len<pos:position pos:line="76" pos:column="58"/></name></expr>;<pos:position pos:line="76" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="77" pos:column="25">e<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">-&gt;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="28">num_lines<pos:position pos:line="77" pos:column="37"/></name></name> <operator pos:line="77" pos:column="38">=<pos:position pos:line="77" pos:column="39"/></operator> <name pos:line="77" pos:column="40">len<pos:position pos:line="77" pos:column="43"/></name></expr>;<pos:position pos:line="77" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="78" pos:column="25">e<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">score<pos:position pos:line="78" pos:column="33"/></name></name> <operator pos:line="78" pos:column="34">=<pos:position pos:line="78" pos:column="35"/></operator> <literal type="number" pos:line="78" pos:column="36">0<pos:position pos:line="78" pos:column="37"/></literal></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>
			<comment type="block" pos:line="79" pos:column="25">/* Push new record to samep */</comment>
			<expr_stmt><expr><name><name pos:line="80" pos:column="25">n<pos:position pos:line="80" pos:column="26"/></name><operator pos:line="80" pos:column="26">-&gt;<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="28">next<pos:position pos:line="80" pos:column="32"/></name></name> <operator pos:line="80" pos:column="33">=<pos:position pos:line="80" pos:column="34"/></operator> <name pos:line="80" pos:column="35">samep<pos:position pos:line="80" pos:column="40"/></name></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="81" pos:column="25">samep<pos:position pos:line="81" pos:column="30"/></name> <operator pos:line="81" pos:column="31">=<pos:position pos:line="81" pos:column="32"/></operator> <name pos:line="81" pos:column="33">n<pos:position pos:line="81" pos:column="34"/></name></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="83" pos:column="17">e<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">next<pos:position pos:line="83" pos:column="24"/></name></name> <operator pos:line="83" pos:column="25">=<pos:position pos:line="83" pos:column="26"/></operator> <name pos:line="83" pos:column="27">diffp<pos:position pos:line="83" pos:column="32"/></name></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="84" pos:column="17">diffp<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator> <name pos:line="84" pos:column="25">e<pos:position pos:line="84" pos:column="26"/></name></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="85" pos:column="17">e<pos:position pos:line="85" pos:column="18"/></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <name pos:line="85" pos:column="21">next<pos:position pos:line="85" pos:column="25"/></name></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="87" pos:column="9">*<pos:position pos:line="87" pos:column="10"/></operator><operator pos:line="87" pos:column="10">*<pos:position pos:line="87" pos:column="11"/></operator><name pos:line="87" pos:column="11">srcq<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <call><name pos:line="87" pos:column="18">reverse_blame<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><name pos:line="87" pos:column="32">diffp<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="39">reverse_blame<pos:position pos:line="87" pos:column="52"/></name><argument_list pos:line="87" pos:column="52">(<argument><expr><name pos:line="87" pos:column="53">samep<pos:position pos:line="87" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="60">e<pos:position pos:line="87" pos:column="61"/></name></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="64"/></expr_stmt>
	<comment type="block" pos:line="88" pos:column="9">/* Move across elements that are in the unblamable portion */</comment>
	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">diffp<pos:position pos:line="89" pos:column="18"/></name></expr>)<pos:position pos:line="89" pos:column="19"/></condition><then pos:line="89" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="90" pos:column="17">*<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="18">srcq<pos:position pos:line="90" pos:column="22"/></name> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <operator pos:line="90" pos:column="25">&amp;<pos:position pos:line="90" pos:column="30"/></operator><name><name pos:line="90" pos:column="26">diffp<pos:position pos:line="90" pos:column="31"/></name><operator pos:line="90" pos:column="31">-&gt;<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="33">next<pos:position pos:line="90" pos:column="37"/></name></name></expr>;<pos:position pos:line="90" pos:column="38"/></expr_stmt></block></then></if>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

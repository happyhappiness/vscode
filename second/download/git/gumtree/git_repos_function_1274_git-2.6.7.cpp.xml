<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1274_git-2.6.7.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">enter_repo<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">strict<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">used_path<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[<expr><name pos:line="3" pos:column="31">PATH_MAX<pos:position pos:line="3" pos:column="39"/></name></expr>]<pos:position pos:line="3" pos:column="40"/></index></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">validated_path<pos:position pos:line="4" pos:column="35"/></name><index pos:line="4" pos:column="35">[<expr><name pos:line="4" pos:column="36">PATH_MAX<pos:position pos:line="4" pos:column="44"/></name></expr>]<pos:position pos:line="4" pos:column="45"/></index></name></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">path<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">strict<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
		<decl_stmt><decl><specifier pos:line="10" pos:column="17">static<pos:position pos:line="10" pos:column="23"/></specifier> <type><specifier pos:line="10" pos:column="24">const<pos:position pos:line="10" pos:column="29"/></specifier> <name pos:line="10" pos:column="30">char<pos:position pos:line="10" pos:column="34"/></name> <modifier pos:line="10" pos:column="35">*<pos:position pos:line="10" pos:column="36"/></modifier></type><name><name pos:line="10" pos:column="36">suffix<pos:position pos:line="10" pos:column="42"/></name><index pos:line="10" pos:column="42">[]<pos:position pos:line="10" pos:column="44"/></index></name> <init pos:line="10" pos:column="45">= <expr><block pos:line="10" pos:column="47">{
			<expr><literal type="string" pos:line="11" pos:column="25">"/.git"<pos:position pos:line="11" pos:column="32"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="34">""<pos:position pos:line="11" pos:column="36"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="38">".git/.git"<pos:position pos:line="11" pos:column="49"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="51">".git"<pos:position pos:line="11" pos:column="57"/></literal></expr>, <expr><name pos:line="11" pos:column="59">NULL<pos:position pos:line="11" pos:column="63"/></name></expr>,
		}<pos:position pos:line="12" pos:column="18"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">gitfile<pos:position pos:line="13" pos:column="36"/></name></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><call><name pos:line="14" pos:column="27">strlen<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">path<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">int<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
		<while pos:line="16" pos:column="17">while <condition pos:line="16" pos:column="23">(<expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal> <operator pos:line="16" pos:column="27">&lt;<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="29">len<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">)<pos:position pos:line="16" pos:column="33"/></operator> <operator pos:line="16" pos:column="34">&amp;&amp;<pos:position pos:line="16" pos:column="44"/></operator> <operator pos:line="16" pos:column="37">(<pos:position pos:line="16" pos:column="38"/></operator><name><name pos:line="16" pos:column="38">path<pos:position pos:line="16" pos:column="42"/></name><index pos:line="16" pos:column="42">[<expr><name pos:line="16" pos:column="43">len<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-<pos:position pos:line="16" pos:column="47"/></operator><literal type="number" pos:line="16" pos:column="47">1<pos:position pos:line="16" pos:column="48"/></literal></expr>]<pos:position pos:line="16" pos:column="49"/></index></name> <operator pos:line="16" pos:column="50">==<pos:position pos:line="16" pos:column="52"/></operator> <literal type="char" pos:line="16" pos:column="53">'/'<pos:position pos:line="16" pos:column="56"/></literal><operator pos:line="16" pos:column="56">)<pos:position pos:line="16" pos:column="57"/></operator></expr>)<pos:position pos:line="16" pos:column="58"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">len<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">--<pos:position pos:line="17" pos:column="30"/></operator></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt></block></while>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">PATH_MAX<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">&lt;=<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="33">len<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">strncpy<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">used_path<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">path<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">len<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt> <expr_stmt><expr><name><name pos:line="21" pos:column="48">used_path<pos:position pos:line="21" pos:column="57"/></name><index pos:line="21" pos:column="57">[<expr><name pos:line="21" pos:column="58">len<pos:position pos:line="21" pos:column="61"/></name></expr>]<pos:position pos:line="21" pos:column="62"/></index></name> <operator pos:line="21" pos:column="63">=<pos:position pos:line="21" pos:column="64"/></operator> <literal type="number" pos:line="21" pos:column="65">0<pos:position pos:line="21" pos:column="66"/></literal></expr> ;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strcpy<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">validated_path<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">used_path<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">used_path<pos:position pos:line="24" pos:column="30"/></name><index pos:line="24" pos:column="30">[<expr><literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal></expr>]<pos:position pos:line="24" pos:column="33"/></index></name> <operator pos:line="24" pos:column="34">==<pos:position pos:line="24" pos:column="36"/></operator> <literal type="char" pos:line="24" pos:column="37">'~'<pos:position pos:line="24" pos:column="40"/></literal></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41"> <block pos:line="24" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">char<pos:position pos:line="25" pos:column="29"/></name> <modifier pos:line="25" pos:column="30">*<pos:position pos:line="25" pos:column="31"/></modifier></type><name pos:line="25" pos:column="31">newpath<pos:position pos:line="25" pos:column="38"/></name> <init pos:line="25" pos:column="39">= <expr><call><name pos:line="25" pos:column="41">expand_user_path<pos:position pos:line="25" pos:column="57"/></name><argument_list pos:line="25" pos:column="57">(<argument><expr><name pos:line="25" pos:column="58">used_path<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="69"/></decl_stmt>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><operator pos:line="26" pos:column="29">!<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">newpath<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">||<pos:position pos:line="26" pos:column="40"/></operator> <operator pos:line="26" pos:column="41">(<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">PATH_MAX<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">-<pos:position pos:line="26" pos:column="52"/></operator> <literal type="number" pos:line="26" pos:column="53">10<pos:position pos:line="26" pos:column="55"/></literal> <operator pos:line="26" pos:column="56">&lt;<pos:position pos:line="26" pos:column="60"/></operator> <call><name pos:line="26" pos:column="58">strlen<pos:position pos:line="26" pos:column="64"/></name><argument_list pos:line="26" pos:column="64">(<argument><expr><name pos:line="26" pos:column="65">newpath<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call><operator pos:line="26" pos:column="73">)<pos:position pos:line="26" pos:column="74"/></operator></expr>)<pos:position pos:line="26" pos:column="75"/></condition><then pos:line="26" pos:column="75"> <block pos:line="26" pos:column="76">{
				<expr_stmt><expr><call><name pos:line="27" pos:column="33">free<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">newpath<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
				<return pos:line="28" pos:column="33">return <expr><name pos:line="28" pos:column="40">NULL<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></return>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="30" pos:column="25">/*
			 * Copy back into the static buffer. A pity
			 * since newpath was not bounded, but other
			 * branches of the if are limited by PATH_MAX
			 * anyway.
			 */</comment>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">strcpy<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">used_path<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="43">newpath<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt> <expr_stmt><expr><call><name pos:line="36" pos:column="53">free<pos:position pos:line="36" pos:column="57"/></name><argument_list pos:line="36" pos:column="57">(<argument><expr><name pos:line="36" pos:column="58">newpath<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then>
		<elseif pos:line="38" pos:column="17">else <if pos:line="38" pos:column="22">if <condition pos:line="38" pos:column="25">(<expr><name pos:line="38" pos:column="26">PATH_MAX<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">-<pos:position pos:line="38" pos:column="36"/></operator> <literal type="number" pos:line="38" pos:column="37">10<pos:position pos:line="38" pos:column="39"/></literal> <operator pos:line="38" pos:column="40">&lt;<pos:position pos:line="38" pos:column="44"/></operator> <name pos:line="38" pos:column="42">len<pos:position pos:line="38" pos:column="45"/></name></expr>)<pos:position pos:line="38" pos:column="46"/></condition><then pos:line="38" pos:column="46">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><name pos:line="39" pos:column="32">NULL<pos:position pos:line="39" pos:column="36"/></name></expr>;<pos:position pos:line="39" pos:column="37"/></return></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="40" pos:column="17">len<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <call><name pos:line="40" pos:column="23">strlen<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">used_path<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
		<for pos:line="41" pos:column="17">for <control pos:line="41" pos:column="21">(<init><expr><name pos:line="41" pos:column="22">i<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <literal type="number" pos:line="41" pos:column="26">0<pos:position pos:line="41" pos:column="27"/></literal></expr>;<pos:position pos:line="41" pos:column="28"/></init> <condition><expr><name><name pos:line="41" pos:column="29">suffix<pos:position pos:line="41" pos:column="35"/></name><index pos:line="41" pos:column="35">[<expr><name pos:line="41" pos:column="36">i<pos:position pos:line="41" pos:column="37"/></name></expr>]<pos:position pos:line="41" pos:column="38"/></index></name></expr>;<pos:position pos:line="41" pos:column="39"/></condition> <incr><expr><name pos:line="41" pos:column="40">i<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">++<pos:position pos:line="41" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="44"/></control> <block pos:line="41" pos:column="45">{
			<decl_stmt><decl><type><name><name pos:line="42" pos:column="25">struct<pos:position pos:line="42" pos:column="31"/></name> <name pos:line="42" pos:column="32">stat<pos:position pos:line="42" pos:column="36"/></name></name></type> <name pos:line="42" pos:column="37">st<pos:position pos:line="42" pos:column="39"/></name></decl>;<pos:position pos:line="42" pos:column="40"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">strcpy<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">used_path<pos:position pos:line="43" pos:column="41"/></name> <operator pos:line="43" pos:column="42">+<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">len<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="49">suffix<pos:position pos:line="43" pos:column="55"/></name><index pos:line="43" pos:column="55">[<expr><name pos:line="43" pos:column="56">i<pos:position pos:line="43" pos:column="57"/></name></expr>]<pos:position pos:line="43" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><operator pos:line="44" pos:column="29">!<pos:position pos:line="44" pos:column="30"/></operator><call><name pos:line="44" pos:column="30">stat<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">used_path<pos:position pos:line="44" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="46">&amp;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="47">st<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call> <operator pos:line="44" pos:column="51">&amp;&amp;<pos:position pos:line="44" pos:column="61"/></operator>
			    <operator pos:line="45" pos:column="29">(<pos:position pos:line="45" pos:column="30"/></operator><call><name pos:line="45" pos:column="30">S_ISREG<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name><name pos:line="45" pos:column="38">st<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">.<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="41">st_mode<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call> <operator pos:line="45" pos:column="50">||<pos:position pos:line="45" pos:column="52"/></operator>
			    <operator pos:line="46" pos:column="29">(<pos:position pos:line="46" pos:column="30"/></operator><call><name pos:line="46" pos:column="30">S_ISDIR<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name><name pos:line="46" pos:column="38">st<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">.<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="41">st_mode<pos:position pos:line="46" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call> <operator pos:line="46" pos:column="50">&amp;&amp;<pos:position pos:line="46" pos:column="60"/></operator> <call><name pos:line="46" pos:column="53">is_git_directory<pos:position pos:line="46" pos:column="69"/></name><argument_list pos:line="46" pos:column="69">(<argument><expr><name pos:line="46" pos:column="70">used_path<pos:position pos:line="46" pos:column="79"/></name></expr></argument>)<pos:position pos:line="46" pos:column="80"/></argument_list></call><operator pos:line="46" pos:column="80">)<pos:position pos:line="46" pos:column="81"/></operator><operator pos:line="46" pos:column="81">)<pos:position pos:line="46" pos:column="82"/></operator></expr>)<pos:position pos:line="46" pos:column="83"/></condition><then pos:line="46" pos:column="83"> <block pos:line="46" pos:column="84">{
				<expr_stmt><expr><call><name pos:line="47" pos:column="33">strcat<pos:position pos:line="47" pos:column="39"/></name><argument_list pos:line="47" pos:column="39">(<argument><expr><name pos:line="47" pos:column="40">validated_path<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="56">suffix<pos:position pos:line="47" pos:column="62"/></name><index pos:line="47" pos:column="62">[<expr><name pos:line="47" pos:column="63">i<pos:position pos:line="47" pos:column="64"/></name></expr>]<pos:position pos:line="47" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
				<break pos:line="48" pos:column="33">break;<pos:position pos:line="48" pos:column="39"/></break>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
		}<pos:position pos:line="50" pos:column="18"/></block></for>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">!<pos:position pos:line="51" pos:column="22"/></operator><name><name pos:line="51" pos:column="22">suffix<pos:position pos:line="51" pos:column="28"/></name><index pos:line="51" pos:column="28">[<expr><name pos:line="51" pos:column="29">i<pos:position pos:line="51" pos:column="30"/></name></expr>]<pos:position pos:line="51" pos:column="31"/></index></name></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32">
			<block type="pseudo"><return pos:line="52" pos:column="25">return <expr><name pos:line="52" pos:column="32">NULL<pos:position pos:line="52" pos:column="36"/></name></expr>;<pos:position pos:line="52" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="53" pos:column="17">gitfile<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <call><name pos:line="53" pos:column="27">read_gitfile<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><name pos:line="53" pos:column="40">used_path<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">gitfile<pos:position pos:line="54" pos:column="28"/></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="25">strcpy<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">used_path<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">gitfile<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt></block></then></if>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><call><name pos:line="56" pos:column="21">chdir<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">used_path<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="38"/></condition><then pos:line="56" pos:column="38">
			<block type="pseudo"><return pos:line="57" pos:column="25">return <expr><name pos:line="57" pos:column="32">NULL<pos:position pos:line="57" pos:column="36"/></name></expr>;<pos:position pos:line="57" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="58" pos:column="17">path<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">validated_path<pos:position pos:line="58" pos:column="38"/></name></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then>
	<else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
		<decl_stmt><decl><type><specifier pos:line="61" pos:column="17">const<pos:position pos:line="61" pos:column="22"/></specifier> <name pos:line="61" pos:column="23">char<pos:position pos:line="61" pos:column="27"/></name> <modifier pos:line="61" pos:column="28">*<pos:position pos:line="61" pos:column="29"/></modifier></type><name pos:line="61" pos:column="29">gitfile<pos:position pos:line="61" pos:column="36"/></name> <init pos:line="61" pos:column="37">= <expr><call><name pos:line="61" pos:column="39">read_gitfile<pos:position pos:line="61" pos:column="51"/></name><argument_list pos:line="61" pos:column="51">(<argument><expr><name pos:line="61" pos:column="52">path<pos:position pos:line="61" pos:column="56"/></name></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="61" pos:column="58"/></decl_stmt>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">gitfile<pos:position pos:line="62" pos:column="28"/></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="25">path<pos:position pos:line="63" pos:column="29"/></name> <operator pos:line="63" pos:column="30">=<pos:position pos:line="63" pos:column="31"/></operator> <name pos:line="63" pos:column="32">gitfile<pos:position pos:line="63" pos:column="39"/></name></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt></block></then></if>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><call><name pos:line="64" pos:column="21">chdir<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><name pos:line="64" pos:column="27">path<pos:position pos:line="64" pos:column="31"/></name></expr></argument>)<pos:position pos:line="64" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="33"/></condition><then pos:line="64" pos:column="33">
			<block type="pseudo"><return pos:line="65" pos:column="25">return <expr><name pos:line="65" pos:column="32">NULL<pos:position pos:line="65" pos:column="36"/></name></expr>;<pos:position pos:line="65" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></else></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name pos:line="68" pos:column="13">is_git_directory<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><literal type="string" pos:line="68" pos:column="30">"."<pos:position pos:line="68" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="35"/></condition><then pos:line="68" pos:column="35"> <block pos:line="68" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">set_git_dir<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><literal type="string" pos:line="69" pos:column="29">"."<pos:position pos:line="69" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">check_repository_format<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">()<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt>
		<return pos:line="71" pos:column="17">return <expr><name pos:line="71" pos:column="24">path<pos:position pos:line="71" pos:column="28"/></name></expr>;<pos:position pos:line="71" pos:column="29"/></return>
	}<pos:position pos:line="72" pos:column="10"/></block></then></if>

	<return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">NULL<pos:position pos:line="74" pos:column="20"/></name></expr>;<pos:position pos:line="74" pos:column="21"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

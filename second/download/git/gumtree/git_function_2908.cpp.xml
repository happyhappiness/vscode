<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2908.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_patch_diff<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">combine_diff_path<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">elem<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">num_parent<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">dense<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">working_tree_file<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="3" pos:column="29">struct<pos:position pos:line="3" pos:column="35"/></name> <name pos:line="3" pos:column="36">rev_info<pos:position pos:line="3" pos:column="44"/></name></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">rev<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">diff_options<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">opt<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><operator pos:line="5" pos:column="36">&amp;<pos:position pos:line="5" pos:column="41"/></operator><name><name pos:line="5" pos:column="37">rev<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">diffopt<pos:position pos:line="5" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">result_size<pos:position pos:line="6" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="36">cnt<pos:position pos:line="6" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="41">lno<pos:position pos:line="6" pos:column="44"/></name></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">result_deleted<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">result<pos:position pos:line="8" pos:column="21"/></name></decl>, <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="24">cp<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">sline<pos:position pos:line="9" pos:column="21"/></name></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">sline<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt> <comment type="block" pos:line="9" pos:column="30">/* survived lines */</comment>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">mode_differs<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="16">show_hunks<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">mmfile_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">result_file<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">userdiff_driver<pos:position pos:line="13" pos:column="31"/></name></name> <modifier pos:line="13" pos:column="32">*<pos:position pos:line="13" pos:column="33"/></modifier></type><name pos:line="13" pos:column="33">userdiff<pos:position pos:line="13" pos:column="41"/></name></decl>;<pos:position pos:line="13" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">userdiff_driver<pos:position pos:line="14" pos:column="31"/></name></name> <modifier pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></modifier></type><name pos:line="14" pos:column="33">textconv<pos:position pos:line="14" pos:column="41"/></name> <init pos:line="14" pos:column="42">= <expr><name pos:line="14" pos:column="44">NULL<pos:position pos:line="14" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">is_binary<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">char<pos:position pos:line="16" pos:column="19"/></name> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">line_prefix<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><call><name pos:line="16" pos:column="35">diff_line_prefix<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">opt<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="57"/></decl_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">context<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="19">opt<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">context<pos:position pos:line="18" pos:column="31"/></name></name></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">userdiff<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <call><name pos:line="19" pos:column="20">userdiff_find_by_path<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">elem<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">path<pos:position pos:line="19" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">userdiff<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">userdiff<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <call><name pos:line="21" pos:column="28">userdiff_find_by_name<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">(<argument><expr><literal type="string" pos:line="21" pos:column="50">"default"<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">DIFF_OPT_TST<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">opt<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="31">ALLOW_TEXTCONV<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">textconv<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <call><name pos:line="23" pos:column="28">userdiff_get_textconv<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">userdiff<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="25" pos:column="9">/* Read the result of merge first */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">working_tree_file<pos:position pos:line="26" pos:column="31"/></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">result<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">grab_blob<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><operator pos:line="27" pos:column="36">&amp;<pos:position pos:line="27" pos:column="41"/></operator><name><name pos:line="27" pos:column="37">elem<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">oid<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="48">elem<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">-&gt;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="54">mode<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="60">&amp;<pos:position pos:line="27" pos:column="65"/></operator><name pos:line="27" pos:column="61">result_size<pos:position pos:line="27" pos:column="72"/></name></expr></argument>,
				   <argument><expr><name pos:line="28" pos:column="36">textconv<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="46">elem<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">-&gt;<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="52">path<pos:position pos:line="28" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt></block></then>
	<else pos:line="29" pos:column="9">else <block pos:line="29" pos:column="14">{
		<comment type="block" pos:line="30" pos:column="17">/* Used by diff-tree to read from the working tree */</comment>
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">stat<pos:position pos:line="31" pos:column="28"/></name></name></type> <name pos:line="31" pos:column="29">st<pos:position pos:line="31" pos:column="31"/></name></decl>;<pos:position pos:line="31" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int<pos:position pos:line="32" pos:column="20"/></name></type> <name pos:line="32" pos:column="21">fd<pos:position pos:line="32" pos:column="23"/></name> <init pos:line="32" pos:column="24">= <expr><operator pos:line="32" pos:column="26">-<pos:position pos:line="32" pos:column="27"/></operator><literal type="number" pos:line="32" pos:column="27">1<pos:position pos:line="32" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="29"/></decl_stmt>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">lstat<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name><name pos:line="34" pos:column="27">elem<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">path<pos:position pos:line="34" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="39">&amp;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="40">st<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call> <operator pos:line="34" pos:column="44">&lt;<pos:position pos:line="34" pos:column="48"/></operator> <literal type="number" pos:line="34" pos:column="46">0<pos:position pos:line="34" pos:column="47"/></literal></expr>)<pos:position pos:line="34" pos:column="48"/></condition><then pos:line="34" pos:column="48">
			<block type="pseudo"><goto pos:line="35" pos:column="25">goto <name pos:line="35" pos:column="30">deleted_file<pos:position pos:line="35" pos:column="42"/></name>;<pos:position pos:line="35" pos:column="43"/></goto></block></then></if>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">S_ISLNK<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name><name pos:line="37" pos:column="29">st<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">st_mode<pos:position pos:line="37" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
			<decl_stmt><decl><type><name><name pos:line="38" pos:column="25">struct<pos:position pos:line="38" pos:column="31"/></name> <name pos:line="38" pos:column="32">strbuf<pos:position pos:line="38" pos:column="38"/></name></name></type> <name pos:line="38" pos:column="39">buf<pos:position pos:line="38" pos:column="42"/></name> <init pos:line="38" pos:column="43">= <expr><name pos:line="38" pos:column="45">STRBUF_INIT<pos:position pos:line="38" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="38" pos:column="57"/></decl_stmt>

			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><call><name pos:line="40" pos:column="29">strbuf_readlink<pos:position pos:line="40" pos:column="44"/></name><argument_list pos:line="40" pos:column="44">(<argument><expr><operator pos:line="40" pos:column="45">&amp;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="46">buf<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="51">elem<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="57">path<pos:position pos:line="40" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="63">st<pos:position pos:line="40" pos:column="65"/></name><operator pos:line="40" pos:column="65">.<pos:position pos:line="40" pos:column="66"/></operator><name pos:line="40" pos:column="66">st_size<pos:position pos:line="40" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call> <operator pos:line="40" pos:column="75">&lt;<pos:position pos:line="40" pos:column="79"/></operator> <literal type="number" pos:line="40" pos:column="77">0<pos:position pos:line="40" pos:column="78"/></literal></expr>)<pos:position pos:line="40" pos:column="79"/></condition><then pos:line="40" pos:column="79"> <block pos:line="40" pos:column="80">{
				<expr_stmt><expr><call><name pos:line="41" pos:column="33">error<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><literal type="string" pos:line="41" pos:column="39">"readlink(%s): %s"<pos:position pos:line="41" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="59">elem<pos:position pos:line="41" pos:column="63"/></name><operator pos:line="41" pos:column="63">-&gt;<pos:position pos:line="41" pos:column="68"/></operator><name pos:line="41" pos:column="65">path<pos:position pos:line="41" pos:column="69"/></name></name></expr></argument>,
				      <argument><expr><call><name pos:line="42" pos:column="39">strerror<pos:position pos:line="42" pos:column="47"/></name><argument_list pos:line="42" pos:column="47">(<argument><expr><name pos:line="42" pos:column="48">errno<pos:position pos:line="42" pos:column="53"/></name></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt>
				<return pos:line="43" pos:column="33">return;<pos:position pos:line="43" pos:column="40"/></return>
			}<pos:position pos:line="44" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="45" pos:column="25">result_size<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">=<pos:position pos:line="45" pos:column="38"/></operator> <name><name pos:line="45" pos:column="39">buf<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">.<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">len<pos:position pos:line="45" pos:column="46"/></name></name></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="46" pos:column="25">result<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <call><name pos:line="46" pos:column="34">strbuf_detach<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">(<argument><expr><operator pos:line="46" pos:column="48">&amp;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="49">buf<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="54">NULL<pos:position pos:line="46" pos:column="58"/></name></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="47" pos:column="25">elem<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">-&gt;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="31">mode<pos:position pos:line="47" pos:column="35"/></name></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <call><name pos:line="47" pos:column="38">canon_mode<pos:position pos:line="47" pos:column="48"/></name><argument_list pos:line="47" pos:column="48">(<argument><expr><name><name pos:line="47" pos:column="49">st<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">st_mode<pos:position pos:line="47" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></then> <elseif pos:line="48" pos:column="19">else <if pos:line="48" pos:column="24">if <condition pos:line="48" pos:column="27">(<expr><call><name pos:line="48" pos:column="28">S_ISDIR<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><name><name pos:line="48" pos:column="36">st<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">.<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="39">st_mode<pos:position pos:line="48" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="48"/></condition><then pos:line="48" pos:column="48"> <block pos:line="48" pos:column="49">{
			<decl_stmt><decl><type><name><name pos:line="49" pos:column="25">struct<pos:position pos:line="49" pos:column="31"/></name> <name pos:line="49" pos:column="32">object_id<pos:position pos:line="49" pos:column="41"/></name></name></type> <name pos:line="49" pos:column="42">oid<pos:position pos:line="49" pos:column="45"/></name></decl>;<pos:position pos:line="49" pos:column="46"/></decl_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><call><name pos:line="50" pos:column="29">resolve_gitlink_ref<pos:position pos:line="50" pos:column="48"/></name><argument_list pos:line="50" pos:column="48">(<argument><expr><name><name pos:line="50" pos:column="49">elem<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">-&gt;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="55">path<pos:position pos:line="50" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="61">"HEAD"<pos:position pos:line="50" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="69">oid<pos:position pos:line="50" pos:column="72"/></name><operator pos:line="50" pos:column="72">.<pos:position pos:line="50" pos:column="73"/></operator><name pos:line="50" pos:column="73">hash<pos:position pos:line="50" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="78"/></argument_list></call> <operator pos:line="50" pos:column="79">&lt;<pos:position pos:line="50" pos:column="83"/></operator> <literal type="number" pos:line="50" pos:column="81">0<pos:position pos:line="50" pos:column="82"/></literal></expr>)<pos:position pos:line="50" pos:column="83"/></condition><then pos:line="50" pos:column="83">
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">result<pos:position pos:line="51" pos:column="39"/></name> <operator pos:line="51" pos:column="40">=<pos:position pos:line="51" pos:column="41"/></operator> <call><name pos:line="51" pos:column="42">grab_blob<pos:position pos:line="51" pos:column="51"/></name><argument_list pos:line="51" pos:column="51">(<argument><expr><operator pos:line="51" pos:column="52">&amp;<pos:position pos:line="51" pos:column="57"/></operator><name><name pos:line="51" pos:column="53">elem<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">-&gt;<pos:position pos:line="51" pos:column="62"/></operator><name pos:line="51" pos:column="59">oid<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="64">elem<pos:position pos:line="51" pos:column="68"/></name><operator pos:line="51" pos:column="68">-&gt;<pos:position pos:line="51" pos:column="73"/></operator><name pos:line="51" pos:column="70">mode<pos:position pos:line="51" pos:column="74"/></name></name></expr></argument>,
						   <argument><expr><operator pos:line="52" pos:column="52">&amp;<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="53">result_size<pos:position pos:line="52" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">NULL<pos:position pos:line="52" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="72">NULL<pos:position pos:line="52" pos:column="76"/></name></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="78"/></expr_stmt></block></then>
			<else pos:line="53" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="33">result<pos:position pos:line="54" pos:column="39"/></name> <operator pos:line="54" pos:column="40">=<pos:position pos:line="54" pos:column="41"/></operator> <call><name pos:line="54" pos:column="42">grab_blob<pos:position pos:line="54" pos:column="51"/></name><argument_list pos:line="54" pos:column="51">(<argument><expr><operator pos:line="54" pos:column="52">&amp;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="53">oid<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="58">elem<pos:position pos:line="54" pos:column="62"/></name><operator pos:line="54" pos:column="62">-&gt;<pos:position pos:line="54" pos:column="67"/></operator><name pos:line="54" pos:column="64">mode<pos:position pos:line="54" pos:column="68"/></name></name></expr></argument>,
						   <argument><expr><operator pos:line="55" pos:column="52">&amp;<pos:position pos:line="55" pos:column="57"/></operator><name pos:line="55" pos:column="53">result_size<pos:position pos:line="55" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="66">NULL<pos:position pos:line="55" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="72">NULL<pos:position pos:line="55" pos:column="76"/></name></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="78"/></expr_stmt></block></else></if>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif> <elseif pos:line="56" pos:column="19">else <if pos:line="56" pos:column="24">if <condition pos:line="56" pos:column="27">(<expr><name pos:line="56" pos:column="28">textconv<pos:position pos:line="56" pos:column="36"/></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37"> <block pos:line="56" pos:column="38">{
			<decl_stmt><decl><type><name><name pos:line="57" pos:column="25">struct<pos:position pos:line="57" pos:column="31"/></name> <name pos:line="57" pos:column="32">diff_filespec<pos:position pos:line="57" pos:column="45"/></name></name> <modifier pos:line="57" pos:column="46">*<pos:position pos:line="57" pos:column="47"/></modifier></type><name pos:line="57" pos:column="47">df<pos:position pos:line="57" pos:column="49"/></name> <init pos:line="57" pos:column="50">= <expr><call><name pos:line="57" pos:column="52">alloc_filespec<pos:position pos:line="57" pos:column="66"/></name><argument_list pos:line="57" pos:column="66">(<argument><expr><name><name pos:line="57" pos:column="67">elem<pos:position pos:line="57" pos:column="71"/></name><operator pos:line="57" pos:column="71">-&gt;<pos:position pos:line="57" pos:column="76"/></operator><name pos:line="57" pos:column="73">path<pos:position pos:line="57" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="79"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">fill_filespec<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><name pos:line="58" pos:column="39">df<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">null_sha1<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="54">0<pos:position pos:line="58" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="57">st<pos:position pos:line="58" pos:column="59"/></name><operator pos:line="58" pos:column="59">.<pos:position pos:line="58" pos:column="60"/></operator><name pos:line="58" pos:column="60">st_mode<pos:position pos:line="58" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name pos:line="59" pos:column="25">result_size<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">=<pos:position pos:line="59" pos:column="38"/></operator> <call><name pos:line="59" pos:column="39">fill_textconv<pos:position pos:line="59" pos:column="52"/></name><argument_list pos:line="59" pos:column="52">(<argument><expr><name pos:line="59" pos:column="53">textconv<pos:position pos:line="59" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="63">df<pos:position pos:line="59" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="67">&amp;<pos:position pos:line="59" pos:column="72"/></operator><name pos:line="59" pos:column="68">result<pos:position pos:line="59" pos:column="74"/></name></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">free_filespec<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">df<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if></elseif> <elseif pos:line="61" pos:column="19">else <if pos:line="61" pos:column="24">if <condition pos:line="61" pos:column="27">(<expr><literal type="number" pos:line="61" pos:column="28">0<pos:position pos:line="61" pos:column="29"/></literal> <operator pos:line="61" pos:column="30">&lt;=<pos:position pos:line="61" pos:column="35"/></operator> <operator pos:line="61" pos:column="33">(<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="34">fd<pos:position pos:line="61" pos:column="36"/></name> <operator pos:line="61" pos:column="37">=<pos:position pos:line="61" pos:column="38"/></operator> <call><name pos:line="61" pos:column="39">open<pos:position pos:line="61" pos:column="43"/></name><argument_list pos:line="61" pos:column="43">(<argument><expr><name><name pos:line="61" pos:column="44">elem<pos:position pos:line="61" pos:column="48"/></name><operator pos:line="61" pos:column="48">-&gt;<pos:position pos:line="61" pos:column="53"/></operator><name pos:line="61" pos:column="50">path<pos:position pos:line="61" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">O_RDONLY<pos:position pos:line="61" pos:column="64"/></name></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call><operator pos:line="61" pos:column="65">)<pos:position pos:line="61" pos:column="66"/></operator></expr>)<pos:position pos:line="61" pos:column="67"/></condition><then pos:line="61" pos:column="67"> <block pos:line="61" pos:column="68">{
			<decl_stmt><decl><type><name pos:line="62" pos:column="25">size_t<pos:position pos:line="62" pos:column="31"/></name></type> <name pos:line="62" pos:column="32">len<pos:position pos:line="62" pos:column="35"/></name> <init pos:line="62" pos:column="36">= <expr><call><name pos:line="62" pos:column="38">xsize_t<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name><name pos:line="62" pos:column="46">st<pos:position pos:line="62" pos:column="48"/></name><operator pos:line="62" pos:column="48">.<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="49">st_size<pos:position pos:line="62" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="62" pos:column="58"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="63" pos:column="25">ssize_t<pos:position pos:line="63" pos:column="32"/></name></type> <name pos:line="63" pos:column="33">done<pos:position pos:line="63" pos:column="37"/></name></decl>;<pos:position pos:line="63" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="64" pos:column="25">int<pos:position pos:line="64" pos:column="28"/></name></type> <name pos:line="64" pos:column="29">is_file<pos:position pos:line="64" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="64" pos:column="38">i<pos:position pos:line="64" pos:column="39"/></name></decl>;<pos:position pos:line="64" pos:column="40"/></decl_stmt>

			<expr_stmt><expr><name><name pos:line="66" pos:column="25">elem<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">-&gt;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="31">mode<pos:position pos:line="66" pos:column="35"/></name></name> <operator pos:line="66" pos:column="36">=<pos:position pos:line="66" pos:column="37"/></operator> <call><name pos:line="66" pos:column="38">canon_mode<pos:position pos:line="66" pos:column="48"/></name><argument_list pos:line="66" pos:column="48">(<argument><expr><name><name pos:line="66" pos:column="49">st<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">.<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="52">st_mode<pos:position pos:line="66" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt>
			<comment type="block" pos:line="67" pos:column="25">/* if symlinks don't work, assume symlink if all parents
			 * are symlinks
			 */</comment>
			<expr_stmt><expr><name pos:line="70" pos:column="25">is_file<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">=<pos:position pos:line="70" pos:column="34"/></operator> <name pos:line="70" pos:column="35">has_symlinks<pos:position pos:line="70" pos:column="47"/></name></expr>;<pos:position pos:line="70" pos:column="48"/></expr_stmt>
			<for pos:line="71" pos:column="25">for <control pos:line="71" pos:column="29">(<init><expr><name pos:line="71" pos:column="30">i<pos:position pos:line="71" pos:column="31"/></name> <operator pos:line="71" pos:column="32">=<pos:position pos:line="71" pos:column="33"/></operator> <literal type="number" pos:line="71" pos:column="34">0<pos:position pos:line="71" pos:column="35"/></literal></expr>;<pos:position pos:line="71" pos:column="36"/></init> <condition><expr><operator pos:line="71" pos:column="37">!<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="38">is_file<pos:position pos:line="71" pos:column="45"/></name> <operator pos:line="71" pos:column="46">&amp;&amp;<pos:position pos:line="71" pos:column="56"/></operator> <name pos:line="71" pos:column="49">i<pos:position pos:line="71" pos:column="50"/></name> <operator pos:line="71" pos:column="51">&lt;<pos:position pos:line="71" pos:column="55"/></operator> <name pos:line="71" pos:column="53">num_parent<pos:position pos:line="71" pos:column="63"/></name></expr>;<pos:position pos:line="71" pos:column="64"/></condition> <incr><expr><name pos:line="71" pos:column="65">i<pos:position pos:line="71" pos:column="66"/></name><operator pos:line="71" pos:column="66">++<pos:position pos:line="71" pos:column="68"/></operator></expr></incr>)<pos:position pos:line="71" pos:column="69"/></control>
				<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="33">is_file<pos:position pos:line="72" pos:column="40"/></name> <operator pos:line="72" pos:column="41">=<pos:position pos:line="72" pos:column="42"/></operator> <operator pos:line="72" pos:column="43">!<pos:position pos:line="72" pos:column="44"/></operator><call><name pos:line="72" pos:column="44">S_ISLNK<pos:position pos:line="72" pos:column="51"/></name><argument_list pos:line="72" pos:column="51">(<argument><expr><name><name pos:line="72" pos:column="52">elem<pos:position pos:line="72" pos:column="56"/></name><operator pos:line="72" pos:column="56">-&gt;<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="58">parent<pos:position pos:line="72" pos:column="64"/></name><index pos:line="72" pos:column="64">[<expr><name pos:line="72" pos:column="65">i<pos:position pos:line="72" pos:column="66"/></name></expr>]<pos:position pos:line="72" pos:column="67"/></index></name><operator pos:line="72" pos:column="67">.<pos:position pos:line="72" pos:column="68"/></operator><name pos:line="72" pos:column="68">mode<pos:position pos:line="72" pos:column="72"/></name></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="74"/></expr_stmt></block></for>
			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><operator pos:line="73" pos:column="29">!<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="30">is_file<pos:position pos:line="73" pos:column="37"/></name></expr>)<pos:position pos:line="73" pos:column="38"/></condition><then pos:line="73" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="33">elem<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">-&gt;<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="39">mode<pos:position pos:line="74" pos:column="43"/></name></name> <operator pos:line="74" pos:column="44">=<pos:position pos:line="74" pos:column="45"/></operator> <call><name pos:line="74" pos:column="46">canon_mode<pos:position pos:line="74" pos:column="56"/></name><argument_list pos:line="74" pos:column="56">(<argument><expr><name pos:line="74" pos:column="57">S_IFLNK<pos:position pos:line="74" pos:column="64"/></name></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="66"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name pos:line="76" pos:column="25">result_size<pos:position pos:line="76" pos:column="36"/></name> <operator pos:line="76" pos:column="37">=<pos:position pos:line="76" pos:column="38"/></operator> <name pos:line="76" pos:column="39">len<pos:position pos:line="76" pos:column="42"/></name></expr>;<pos:position pos:line="76" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="77" pos:column="25">result<pos:position pos:line="77" pos:column="31"/></name> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <call><name pos:line="77" pos:column="34">xmallocz<pos:position pos:line="77" pos:column="42"/></name><argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">len<pos:position pos:line="77" pos:column="46"/></name></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>

			<expr_stmt><expr><name pos:line="79" pos:column="25">done<pos:position pos:line="79" pos:column="29"/></name> <operator pos:line="79" pos:column="30">=<pos:position pos:line="79" pos:column="31"/></operator> <call><name pos:line="79" pos:column="32">read_in_full<pos:position pos:line="79" pos:column="44"/></name><argument_list pos:line="79" pos:column="44">(<argument><expr><name pos:line="79" pos:column="45">fd<pos:position pos:line="79" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="49">result<pos:position pos:line="79" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="57">len<pos:position pos:line="79" pos:column="60"/></name></expr></argument>)<pos:position pos:line="79" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="62"/></expr_stmt>
			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><name pos:line="80" pos:column="29">done<pos:position pos:line="80" pos:column="33"/></name> <operator pos:line="80" pos:column="34">&lt;<pos:position pos:line="80" pos:column="38"/></operator> <literal type="number" pos:line="80" pos:column="36">0<pos:position pos:line="80" pos:column="37"/></literal></expr>)<pos:position pos:line="80" pos:column="38"/></condition><then pos:line="80" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="33">die_errno<pos:position pos:line="81" pos:column="42"/></name><argument_list pos:line="81" pos:column="42">(<argument><expr><literal type="string" pos:line="81" pos:column="43">"read error '%s'"<pos:position pos:line="81" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="62">elem<pos:position pos:line="81" pos:column="66"/></name><operator pos:line="81" pos:column="66">-&gt;<pos:position pos:line="81" pos:column="71"/></operator><name pos:line="81" pos:column="68">path<pos:position pos:line="81" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="74"/></expr_stmt></block></then>
			<elseif pos:line="82" pos:column="25">else <if pos:line="82" pos:column="30">if <condition pos:line="82" pos:column="33">(<expr><name pos:line="82" pos:column="34">done<pos:position pos:line="82" pos:column="38"/></name> <operator pos:line="82" pos:column="39">&lt;<pos:position pos:line="82" pos:column="43"/></operator> <name pos:line="82" pos:column="41">len<pos:position pos:line="82" pos:column="44"/></name></expr>)<pos:position pos:line="82" pos:column="45"/></condition><then pos:line="82" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="33">die<pos:position pos:line="83" pos:column="36"/></name><argument_list pos:line="83" pos:column="36">(<argument><expr><literal type="string" pos:line="83" pos:column="37">"early EOF '%s'"<pos:position pos:line="83" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="55">elem<pos:position pos:line="83" pos:column="59"/></name><operator pos:line="83" pos:column="59">-&gt;<pos:position pos:line="83" pos:column="64"/></operator><name pos:line="83" pos:column="61">path<pos:position pos:line="83" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt></block></then></if></elseif></if>

			<comment type="block" pos:line="85" pos:column="25">/* If not a fake symlink, apply filters, e.g. autocrlf */</comment>
			<if pos:line="86" pos:column="25">if <condition pos:line="86" pos:column="28">(<expr><name pos:line="86" pos:column="29">is_file<pos:position pos:line="86" pos:column="36"/></name></expr>)<pos:position pos:line="86" pos:column="37"/></condition><then pos:line="86" pos:column="37"> <block pos:line="86" pos:column="38">{
				<decl_stmt><decl><type><name><name pos:line="87" pos:column="33">struct<pos:position pos:line="87" pos:column="39"/></name> <name pos:line="87" pos:column="40">strbuf<pos:position pos:line="87" pos:column="46"/></name></name></type> <name pos:line="87" pos:column="47">buf<pos:position pos:line="87" pos:column="50"/></name> <init pos:line="87" pos:column="51">= <expr><name pos:line="87" pos:column="53">STRBUF_INIT<pos:position pos:line="87" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="87" pos:column="65"/></decl_stmt>

				<if pos:line="89" pos:column="33">if <condition pos:line="89" pos:column="36">(<expr><call><name pos:line="89" pos:column="37">convert_to_git<pos:position pos:line="89" pos:column="51"/></name><argument_list pos:line="89" pos:column="51">(<argument><expr><name><name pos:line="89" pos:column="52">elem<pos:position pos:line="89" pos:column="56"/></name><operator pos:line="89" pos:column="56">-&gt;<pos:position pos:line="89" pos:column="61"/></operator><name pos:line="89" pos:column="58">path<pos:position pos:line="89" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="64">result<pos:position pos:line="89" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="72">len<pos:position pos:line="89" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="77">&amp;<pos:position pos:line="89" pos:column="82"/></operator><name pos:line="89" pos:column="78">buf<pos:position pos:line="89" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="83">safe_crlf<pos:position pos:line="89" pos:column="92"/></name></expr></argument>)<pos:position pos:line="89" pos:column="93"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="94"/></condition><then pos:line="89" pos:column="94"> <block pos:line="89" pos:column="95">{
					<expr_stmt><expr><call><name pos:line="90" pos:column="41">free<pos:position pos:line="90" pos:column="45"/></name><argument_list pos:line="90" pos:column="45">(<argument><expr><name pos:line="90" pos:column="46">result<pos:position pos:line="90" pos:column="52"/></name></expr></argument>)<pos:position pos:line="90" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="54"/></expr_stmt>
					<expr_stmt><expr><name pos:line="91" pos:column="41">result<pos:position pos:line="91" pos:column="47"/></name> <operator pos:line="91" pos:column="48">=<pos:position pos:line="91" pos:column="49"/></operator> <call><name pos:line="91" pos:column="50">strbuf_detach<pos:position pos:line="91" pos:column="63"/></name><argument_list pos:line="91" pos:column="63">(<argument><expr><operator pos:line="91" pos:column="64">&amp;<pos:position pos:line="91" pos:column="69"/></operator><name pos:line="91" pos:column="65">buf<pos:position pos:line="91" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="70">&amp;<pos:position pos:line="91" pos:column="75"/></operator><name pos:line="91" pos:column="71">len<pos:position pos:line="91" pos:column="74"/></name></expr></argument>)<pos:position pos:line="91" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="76"/></expr_stmt>
					<expr_stmt><expr><name pos:line="92" pos:column="41">result_size<pos:position pos:line="92" pos:column="52"/></name> <operator pos:line="92" pos:column="53">=<pos:position pos:line="92" pos:column="54"/></operator> <name pos:line="92" pos:column="55">len<pos:position pos:line="92" pos:column="58"/></name></expr>;<pos:position pos:line="92" pos:column="59"/></expr_stmt>
				}<pos:position pos:line="93" pos:column="34"/></block></then></if>
			}<pos:position pos:line="94" pos:column="26"/></block></then></if>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if></elseif>
		<else pos:line="96" pos:column="17">else <block pos:line="96" pos:column="22">{
		<label><name pos:line="97" pos:column="17">deleted_file<pos:position pos:line="97" pos:column="29"/></name>:<pos:position pos:line="97" pos:column="30"/></label>
			<expr_stmt><expr><name pos:line="98" pos:column="25">result_deleted<pos:position pos:line="98" pos:column="39"/></name> <operator pos:line="98" pos:column="40">=<pos:position pos:line="98" pos:column="41"/></operator> <literal type="number" pos:line="98" pos:column="42">1<pos:position pos:line="98" pos:column="43"/></literal></expr>;<pos:position pos:line="98" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="99" pos:column="25">result_size<pos:position pos:line="99" pos:column="36"/></name> <operator pos:line="99" pos:column="37">=<pos:position pos:line="99" pos:column="38"/></operator> <literal type="number" pos:line="99" pos:column="39">0<pos:position pos:line="99" pos:column="40"/></literal></expr>;<pos:position pos:line="99" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="100" pos:column="25">elem<pos:position pos:line="100" pos:column="29"/></name><operator pos:line="100" pos:column="29">-&gt;<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="31">mode<pos:position pos:line="100" pos:column="35"/></name></name> <operator pos:line="100" pos:column="36">=<pos:position pos:line="100" pos:column="37"/></operator> <literal type="number" pos:line="100" pos:column="38">0<pos:position pos:line="100" pos:column="39"/></literal></expr>;<pos:position pos:line="100" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="101" pos:column="25">result<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">=<pos:position pos:line="101" pos:column="33"/></operator> <call><name pos:line="101" pos:column="34">xcalloc<pos:position pos:line="101" pos:column="41"/></name><argument_list pos:line="101" pos:column="41">(<argument><expr><literal type="number" pos:line="101" pos:column="42">1<pos:position pos:line="101" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="45">1<pos:position pos:line="101" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="102" pos:column="18"/></block></else></if>

		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><literal type="number" pos:line="104" pos:column="21">0<pos:position pos:line="104" pos:column="22"/></literal> <operator pos:line="104" pos:column="23">&lt;=<pos:position pos:line="104" pos:column="28"/></operator> <name pos:line="104" pos:column="26">fd<pos:position pos:line="104" pos:column="28"/></name></expr>)<pos:position pos:line="104" pos:column="29"/></condition><then pos:line="104" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="25">close<pos:position pos:line="105" pos:column="30"/></name><argument_list pos:line="105" pos:column="30">(<argument><expr><name pos:line="105" pos:column="31">fd<pos:position pos:line="105" pos:column="33"/></name></expr></argument>)<pos:position pos:line="105" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="106" pos:column="10"/></block></else></if>

	<for pos:line="108" pos:column="9">for <control pos:line="108" pos:column="13">(<init><expr><name pos:line="108" pos:column="14">i<pos:position pos:line="108" pos:column="15"/></name> <operator pos:line="108" pos:column="16">=<pos:position pos:line="108" pos:column="17"/></operator> <literal type="number" pos:line="108" pos:column="18">0<pos:position pos:line="108" pos:column="19"/></literal></expr>;<pos:position pos:line="108" pos:column="20"/></init> <condition><expr><name pos:line="108" pos:column="21">i<pos:position pos:line="108" pos:column="22"/></name> <operator pos:line="108" pos:column="23">&lt;<pos:position pos:line="108" pos:column="27"/></operator> <name pos:line="108" pos:column="25">num_parent<pos:position pos:line="108" pos:column="35"/></name></expr>;<pos:position pos:line="108" pos:column="36"/></condition> <incr><expr><name pos:line="108" pos:column="37">i<pos:position pos:line="108" pos:column="38"/></name><operator pos:line="108" pos:column="38">++<pos:position pos:line="108" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="108" pos:column="41"/></control> <block pos:line="108" pos:column="42">{
		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name><name pos:line="109" pos:column="21">elem<pos:position pos:line="109" pos:column="25"/></name><operator pos:line="109" pos:column="25">-&gt;<pos:position pos:line="109" pos:column="30"/></operator><name pos:line="109" pos:column="27">parent<pos:position pos:line="109" pos:column="33"/></name><index pos:line="109" pos:column="33">[<expr><name pos:line="109" pos:column="34">i<pos:position pos:line="109" pos:column="35"/></name></expr>]<pos:position pos:line="109" pos:column="36"/></index></name><operator pos:line="109" pos:column="36">.<pos:position pos:line="109" pos:column="37"/></operator><name pos:line="109" pos:column="37">mode<pos:position pos:line="109" pos:column="41"/></name> <operator pos:line="109" pos:column="42">!=<pos:position pos:line="109" pos:column="44"/></operator> <name><name pos:line="109" pos:column="45">elem<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">-&gt;<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="51">mode<pos:position pos:line="109" pos:column="55"/></name></name></expr>)<pos:position pos:line="109" pos:column="56"/></condition><then pos:line="109" pos:column="56"> <block pos:line="109" pos:column="57">{
			<expr_stmt><expr><name pos:line="110" pos:column="25">mode_differs<pos:position pos:line="110" pos:column="37"/></name> <operator pos:line="110" pos:column="38">=<pos:position pos:line="110" pos:column="39"/></operator> <literal type="number" pos:line="110" pos:column="40">1<pos:position pos:line="110" pos:column="41"/></literal></expr>;<pos:position pos:line="110" pos:column="42"/></expr_stmt>
			<break pos:line="111" pos:column="25">break;<pos:position pos:line="111" pos:column="31"/></break>
		}<pos:position pos:line="112" pos:column="18"/></block></then></if>
	}<pos:position pos:line="113" pos:column="10"/></block></for>

	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name pos:line="115" pos:column="13">textconv<pos:position pos:line="115" pos:column="21"/></name></expr>)<pos:position pos:line="115" pos:column="22"/></condition><then pos:line="115" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="17">is_binary<pos:position pos:line="116" pos:column="26"/></name> <operator pos:line="116" pos:column="27">=<pos:position pos:line="116" pos:column="28"/></operator> <literal type="number" pos:line="116" pos:column="29">0<pos:position pos:line="116" pos:column="30"/></literal></expr>;<pos:position pos:line="116" pos:column="31"/></expr_stmt></block></then>
	<elseif pos:line="117" pos:column="9">else <if pos:line="117" pos:column="14">if <condition pos:line="117" pos:column="17">(<expr><name><name pos:line="117" pos:column="18">userdiff<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">-&gt;<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="28">binary<pos:position pos:line="117" pos:column="34"/></name></name> <operator pos:line="117" pos:column="35">!=<pos:position pos:line="117" pos:column="37"/></operator> <operator pos:line="117" pos:column="38">-<pos:position pos:line="117" pos:column="39"/></operator><literal type="number" pos:line="117" pos:column="39">1<pos:position pos:line="117" pos:column="40"/></literal></expr>)<pos:position pos:line="117" pos:column="41"/></condition><then pos:line="117" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="17">is_binary<pos:position pos:line="118" pos:column="26"/></name> <operator pos:line="118" pos:column="27">=<pos:position pos:line="118" pos:column="28"/></operator> <name><name pos:line="118" pos:column="29">userdiff<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">-&gt;<pos:position pos:line="118" pos:column="42"/></operator><name pos:line="118" pos:column="39">binary<pos:position pos:line="118" pos:column="45"/></name></name></expr>;<pos:position pos:line="118" pos:column="46"/></expr_stmt></block></then></if></elseif>
	<else pos:line="119" pos:column="9">else <block pos:line="119" pos:column="14">{
		<expr_stmt><expr><name pos:line="120" pos:column="17">is_binary<pos:position pos:line="120" pos:column="26"/></name> <operator pos:line="120" pos:column="27">=<pos:position pos:line="120" pos:column="28"/></operator> <call><name pos:line="120" pos:column="29">buffer_is_binary<pos:position pos:line="120" pos:column="45"/></name><argument_list pos:line="120" pos:column="45">(<argument><expr><name pos:line="120" pos:column="46">result<pos:position pos:line="120" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="54">result_size<pos:position pos:line="120" pos:column="65"/></name></expr></argument>)<pos:position pos:line="120" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="67"/></expr_stmt>
		<for pos:line="121" pos:column="17">for <control pos:line="121" pos:column="21">(<init><expr><name pos:line="121" pos:column="22">i<pos:position pos:line="121" pos:column="23"/></name> <operator pos:line="121" pos:column="24">=<pos:position pos:line="121" pos:column="25"/></operator> <literal type="number" pos:line="121" pos:column="26">0<pos:position pos:line="121" pos:column="27"/></literal></expr>;<pos:position pos:line="121" pos:column="28"/></init> <condition><expr><operator pos:line="121" pos:column="29">!<pos:position pos:line="121" pos:column="30"/></operator><name pos:line="121" pos:column="30">is_binary<pos:position pos:line="121" pos:column="39"/></name> <operator pos:line="121" pos:column="40">&amp;&amp;<pos:position pos:line="121" pos:column="50"/></operator> <name pos:line="121" pos:column="43">i<pos:position pos:line="121" pos:column="44"/></name> <operator pos:line="121" pos:column="45">&lt;<pos:position pos:line="121" pos:column="49"/></operator> <name pos:line="121" pos:column="47">num_parent<pos:position pos:line="121" pos:column="57"/></name></expr>;<pos:position pos:line="121" pos:column="58"/></condition> <incr><expr><name pos:line="121" pos:column="59">i<pos:position pos:line="121" pos:column="60"/></name><operator pos:line="121" pos:column="60">++<pos:position pos:line="121" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="121" pos:column="63"/></control> <block pos:line="121" pos:column="64">{
			<decl_stmt><decl><type><name pos:line="122" pos:column="25">char<pos:position pos:line="122" pos:column="29"/></name> <modifier pos:line="122" pos:column="30">*<pos:position pos:line="122" pos:column="31"/></modifier></type><name pos:line="122" pos:column="31">buf<pos:position pos:line="122" pos:column="34"/></name></decl>;<pos:position pos:line="122" pos:column="35"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="123" pos:column="25">unsigned<pos:position pos:line="123" pos:column="33"/></name> <name pos:line="123" pos:column="34">long<pos:position pos:line="123" pos:column="38"/></name></type> <name pos:line="123" pos:column="39">size<pos:position pos:line="123" pos:column="43"/></name></decl>;<pos:position pos:line="123" pos:column="44"/></decl_stmt>
			<expr_stmt><expr><name pos:line="124" pos:column="25">buf<pos:position pos:line="124" pos:column="28"/></name> <operator pos:line="124" pos:column="29">=<pos:position pos:line="124" pos:column="30"/></operator> <call><name pos:line="124" pos:column="31">grab_blob<pos:position pos:line="124" pos:column="40"/></name><argument_list pos:line="124" pos:column="40">(<argument><expr><operator pos:line="124" pos:column="41">&amp;<pos:position pos:line="124" pos:column="46"/></operator><name><name pos:line="124" pos:column="42">elem<pos:position pos:line="124" pos:column="46"/></name><operator pos:line="124" pos:column="46">-&gt;<pos:position pos:line="124" pos:column="51"/></operator><name pos:line="124" pos:column="48">parent<pos:position pos:line="124" pos:column="54"/></name><index pos:line="124" pos:column="54">[<expr><name pos:line="124" pos:column="55">i<pos:position pos:line="124" pos:column="56"/></name></expr>]<pos:position pos:line="124" pos:column="57"/></index></name><operator pos:line="124" pos:column="57">.<pos:position pos:line="124" pos:column="58"/></operator><name pos:line="124" pos:column="58">oid<pos:position pos:line="124" pos:column="61"/></name></expr></argument>,
					<argument><expr><name><name pos:line="125" pos:column="41">elem<pos:position pos:line="125" pos:column="45"/></name><operator pos:line="125" pos:column="45">-&gt;<pos:position pos:line="125" pos:column="50"/></operator><name pos:line="125" pos:column="47">parent<pos:position pos:line="125" pos:column="53"/></name><index pos:line="125" pos:column="53">[<expr><name pos:line="125" pos:column="54">i<pos:position pos:line="125" pos:column="55"/></name></expr>]<pos:position pos:line="125" pos:column="56"/></index></name><operator pos:line="125" pos:column="56">.<pos:position pos:line="125" pos:column="57"/></operator><name pos:line="125" pos:column="57">mode<pos:position pos:line="125" pos:column="61"/></name></expr></argument>,
					<argument><expr><operator pos:line="126" pos:column="41">&amp;<pos:position pos:line="126" pos:column="46"/></operator><name pos:line="126" pos:column="42">size<pos:position pos:line="126" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="48">NULL<pos:position pos:line="126" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="54">NULL<pos:position pos:line="126" pos:column="58"/></name></expr></argument>)<pos:position pos:line="126" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="60"/></expr_stmt>
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><call><name pos:line="127" pos:column="29">buffer_is_binary<pos:position pos:line="127" pos:column="45"/></name><argument_list pos:line="127" pos:column="45">(<argument><expr><name pos:line="127" pos:column="46">buf<pos:position pos:line="127" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="51">size<pos:position pos:line="127" pos:column="55"/></name></expr></argument>)<pos:position pos:line="127" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="57"/></condition><then pos:line="127" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><name pos:line="128" pos:column="33">is_binary<pos:position pos:line="128" pos:column="42"/></name> <operator pos:line="128" pos:column="43">=<pos:position pos:line="128" pos:column="44"/></operator> <literal type="number" pos:line="128" pos:column="45">1<pos:position pos:line="128" pos:column="46"/></literal></expr>;<pos:position pos:line="128" pos:column="47"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="129" pos:column="25">free<pos:position pos:line="129" pos:column="29"/></name><argument_list pos:line="129" pos:column="29">(<argument><expr><name pos:line="129" pos:column="30">buf<pos:position pos:line="129" pos:column="33"/></name></expr></argument>)<pos:position pos:line="129" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="130" pos:column="18"/></block></for>
	}<pos:position pos:line="131" pos:column="10"/></block></else></if>
	<if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><name pos:line="132" pos:column="13">is_binary<pos:position pos:line="132" pos:column="22"/></name></expr>)<pos:position pos:line="132" pos:column="23"/></condition><then pos:line="132" pos:column="23"> <block pos:line="132" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="133" pos:column="17">show_combined_header<pos:position pos:line="133" pos:column="37"/></name><argument_list pos:line="133" pos:column="37">(<argument><expr><name pos:line="133" pos:column="38">elem<pos:position pos:line="133" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="44">num_parent<pos:position pos:line="133" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="56">dense<pos:position pos:line="133" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="63">rev<pos:position pos:line="133" pos:column="66"/></name></expr></argument>,
				     <argument><expr><name pos:line="134" pos:column="38">line_prefix<pos:position pos:line="134" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="51">mode_differs<pos:position pos:line="134" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="65">0<pos:position pos:line="134" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="135" pos:column="17">printf<pos:position pos:line="135" pos:column="23"/></name><argument_list pos:line="135" pos:column="23">(<argument><expr><literal type="string" pos:line="135" pos:column="24">"Binary files differ\n"<pos:position pos:line="135" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="136" pos:column="17">free<pos:position pos:line="136" pos:column="21"/></name><argument_list pos:line="136" pos:column="21">(<argument><expr><name pos:line="136" pos:column="22">result<pos:position pos:line="136" pos:column="28"/></name></expr></argument>)<pos:position pos:line="136" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="30"/></expr_stmt>
		<return pos:line="137" pos:column="17">return;<pos:position pos:line="137" pos:column="24"/></return>
	}<pos:position pos:line="138" pos:column="10"/></block></then></if>

	<for pos:line="140" pos:column="9">for <control pos:line="140" pos:column="13">(<init><expr><name pos:line="140" pos:column="14">cnt<pos:position pos:line="140" pos:column="17"/></name> <operator pos:line="140" pos:column="18">=<pos:position pos:line="140" pos:column="19"/></operator> <literal type="number" pos:line="140" pos:column="20">0<pos:position pos:line="140" pos:column="21"/></literal></expr><operator pos:line="140" pos:column="21">,<pos:position pos:line="140" pos:column="22"/></operator> <expr><name pos:line="140" pos:column="23">cp<pos:position pos:line="140" pos:column="25"/></name> <operator pos:line="140" pos:column="26">=<pos:position pos:line="140" pos:column="27"/></operator> <name pos:line="140" pos:column="28">result<pos:position pos:line="140" pos:column="34"/></name></expr>;<pos:position pos:line="140" pos:column="35"/></init> <condition><expr><name pos:line="140" pos:column="36">cp<pos:position pos:line="140" pos:column="38"/></name> <operator pos:line="140" pos:column="39">&lt;<pos:position pos:line="140" pos:column="43"/></operator> <name pos:line="140" pos:column="41">result<pos:position pos:line="140" pos:column="47"/></name> <operator pos:line="140" pos:column="48">+<pos:position pos:line="140" pos:column="49"/></operator> <name pos:line="140" pos:column="50">result_size<pos:position pos:line="140" pos:column="61"/></name></expr>;<pos:position pos:line="140" pos:column="62"/></condition> <incr><expr><name pos:line="140" pos:column="63">cp<pos:position pos:line="140" pos:column="65"/></name><operator pos:line="140" pos:column="65">++<pos:position pos:line="140" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="140" pos:column="68"/></control> <block pos:line="140" pos:column="69">{
		<if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><operator pos:line="141" pos:column="21">*<pos:position pos:line="141" pos:column="22"/></operator><name pos:line="141" pos:column="22">cp<pos:position pos:line="141" pos:column="24"/></name> <operator pos:line="141" pos:column="25">==<pos:position pos:line="141" pos:column="27"/></operator> <literal type="char" pos:line="141" pos:column="28">'\n'<pos:position pos:line="141" pos:column="32"/></literal></expr>)<pos:position pos:line="141" pos:column="33"/></condition><then pos:line="141" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="25">cnt<pos:position pos:line="142" pos:column="28"/></name><operator pos:line="142" pos:column="28">++<pos:position pos:line="142" pos:column="30"/></operator></expr>;<pos:position pos:line="142" pos:column="31"/></expr_stmt></block></then></if>
	}<pos:position pos:line="143" pos:column="10"/></block></for>
	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">result_size<pos:position pos:line="144" pos:column="24"/></name> <operator pos:line="144" pos:column="25">&amp;&amp;<pos:position pos:line="144" pos:column="35"/></operator> <name><name pos:line="144" pos:column="28">result<pos:position pos:line="144" pos:column="34"/></name><index pos:line="144" pos:column="34">[<expr><name pos:line="144" pos:column="35">result_size<pos:position pos:line="144" pos:column="46"/></name><operator pos:line="144" pos:column="46">-<pos:position pos:line="144" pos:column="47"/></operator><literal type="number" pos:line="144" pos:column="47">1<pos:position pos:line="144" pos:column="48"/></literal></expr>]<pos:position pos:line="144" pos:column="49"/></index></name> <operator pos:line="144" pos:column="50">!=<pos:position pos:line="144" pos:column="52"/></operator> <literal type="char" pos:line="144" pos:column="53">'\n'<pos:position pos:line="144" pos:column="57"/></literal></expr>)<pos:position pos:line="144" pos:column="58"/></condition><then pos:line="144" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="17">cnt<pos:position pos:line="145" pos:column="20"/></name><operator pos:line="145" pos:column="20">++<pos:position pos:line="145" pos:column="22"/></operator></expr>;<pos:position pos:line="145" pos:column="23"/></expr_stmt></block></then></if> <comment type="block" pos:line="145" pos:column="24">/* incomplete line */</comment>

	<expr_stmt><expr><name pos:line="147" pos:column="9">sline<pos:position pos:line="147" pos:column="14"/></name> <operator pos:line="147" pos:column="15">=<pos:position pos:line="147" pos:column="16"/></operator> <call><name pos:line="147" pos:column="17">xcalloc<pos:position pos:line="147" pos:column="24"/></name><argument_list pos:line="147" pos:column="24">(<argument><expr><call><name pos:line="147" pos:column="25">st_add<pos:position pos:line="147" pos:column="31"/></name><argument_list pos:line="147" pos:column="31">(<argument><expr><name pos:line="147" pos:column="32">cnt<pos:position pos:line="147" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="37">2<pos:position pos:line="147" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="147" pos:column="41">sizeof<argument_list pos:line="147" pos:column="47">(<argument><expr><operator pos:line="147" pos:column="48">*<pos:position pos:line="147" pos:column="49"/></operator><name pos:line="147" pos:column="49">sline<pos:position pos:line="147" pos:column="54"/></name></expr></argument>)<pos:position pos:line="147" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="147" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="148" pos:column="9">sline<pos:position pos:line="148" pos:column="14"/></name><index pos:line="148" pos:column="14">[<expr><literal type="number" pos:line="148" pos:column="15">0<pos:position pos:line="148" pos:column="16"/></literal></expr>]<pos:position pos:line="148" pos:column="17"/></index></name><operator pos:line="148" pos:column="17">.<pos:position pos:line="148" pos:column="18"/></operator><name pos:line="148" pos:column="18">bol<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <name pos:line="148" pos:column="24">result<pos:position pos:line="148" pos:column="30"/></name></expr>;<pos:position pos:line="148" pos:column="31"/></expr_stmt>
	<for pos:line="149" pos:column="9">for <control pos:line="149" pos:column="13">(<init><expr><name pos:line="149" pos:column="14">lno<pos:position pos:line="149" pos:column="17"/></name> <operator pos:line="149" pos:column="18">=<pos:position pos:line="149" pos:column="19"/></operator> <literal type="number" pos:line="149" pos:column="20">0<pos:position pos:line="149" pos:column="21"/></literal></expr><operator pos:line="149" pos:column="21">,<pos:position pos:line="149" pos:column="22"/></operator> <expr><name pos:line="149" pos:column="23">cp<pos:position pos:line="149" pos:column="25"/></name> <operator pos:line="149" pos:column="26">=<pos:position pos:line="149" pos:column="27"/></operator> <name pos:line="149" pos:column="28">result<pos:position pos:line="149" pos:column="34"/></name></expr>;<pos:position pos:line="149" pos:column="35"/></init> <condition><expr><name pos:line="149" pos:column="36">cp<pos:position pos:line="149" pos:column="38"/></name> <operator pos:line="149" pos:column="39">&lt;<pos:position pos:line="149" pos:column="43"/></operator> <name pos:line="149" pos:column="41">result<pos:position pos:line="149" pos:column="47"/></name> <operator pos:line="149" pos:column="48">+<pos:position pos:line="149" pos:column="49"/></operator> <name pos:line="149" pos:column="50">result_size<pos:position pos:line="149" pos:column="61"/></name></expr>;<pos:position pos:line="149" pos:column="62"/></condition> <incr><expr><name pos:line="149" pos:column="63">cp<pos:position pos:line="149" pos:column="65"/></name><operator pos:line="149" pos:column="65">++<pos:position pos:line="149" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="149" pos:column="68"/></control> <block pos:line="149" pos:column="69">{
		<if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><operator pos:line="150" pos:column="21">*<pos:position pos:line="150" pos:column="22"/></operator><name pos:line="150" pos:column="22">cp<pos:position pos:line="150" pos:column="24"/></name> <operator pos:line="150" pos:column="25">==<pos:position pos:line="150" pos:column="27"/></operator> <literal type="char" pos:line="150" pos:column="28">'\n'<pos:position pos:line="150" pos:column="32"/></literal></expr>)<pos:position pos:line="150" pos:column="33"/></condition><then pos:line="150" pos:column="33"> <block pos:line="150" pos:column="34">{
			<expr_stmt><expr><name><name pos:line="151" pos:column="25">sline<pos:position pos:line="151" pos:column="30"/></name><index pos:line="151" pos:column="30">[<expr><name pos:line="151" pos:column="31">lno<pos:position pos:line="151" pos:column="34"/></name></expr>]<pos:position pos:line="151" pos:column="35"/></index></name><operator pos:line="151" pos:column="35">.<pos:position pos:line="151" pos:column="36"/></operator><name pos:line="151" pos:column="36">len<pos:position pos:line="151" pos:column="39"/></name> <operator pos:line="151" pos:column="40">=<pos:position pos:line="151" pos:column="41"/></operator> <name pos:line="151" pos:column="42">cp<pos:position pos:line="151" pos:column="44"/></name> <operator pos:line="151" pos:column="45">-<pos:position pos:line="151" pos:column="46"/></operator> <name><name pos:line="151" pos:column="47">sline<pos:position pos:line="151" pos:column="52"/></name><index pos:line="151" pos:column="52">[<expr><name pos:line="151" pos:column="53">lno<pos:position pos:line="151" pos:column="56"/></name></expr>]<pos:position pos:line="151" pos:column="57"/></index></name><operator pos:line="151" pos:column="57">.<pos:position pos:line="151" pos:column="58"/></operator><name pos:line="151" pos:column="58">bol<pos:position pos:line="151" pos:column="61"/></name></expr>;<pos:position pos:line="151" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="152" pos:column="25">lno<pos:position pos:line="152" pos:column="28"/></name><operator pos:line="152" pos:column="28">++<pos:position pos:line="152" pos:column="30"/></operator></expr>;<pos:position pos:line="152" pos:column="31"/></expr_stmt>
			<if pos:line="153" pos:column="25">if <condition pos:line="153" pos:column="28">(<expr><name pos:line="153" pos:column="29">lno<pos:position pos:line="153" pos:column="32"/></name> <operator pos:line="153" pos:column="33">&lt;<pos:position pos:line="153" pos:column="37"/></operator> <name pos:line="153" pos:column="35">cnt<pos:position pos:line="153" pos:column="38"/></name></expr>)<pos:position pos:line="153" pos:column="39"/></condition><then pos:line="153" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="154" pos:column="33">sline<pos:position pos:line="154" pos:column="38"/></name><index pos:line="154" pos:column="38">[<expr><name pos:line="154" pos:column="39">lno<pos:position pos:line="154" pos:column="42"/></name></expr>]<pos:position pos:line="154" pos:column="43"/></index></name><operator pos:line="154" pos:column="43">.<pos:position pos:line="154" pos:column="44"/></operator><name pos:line="154" pos:column="44">bol<pos:position pos:line="154" pos:column="47"/></name> <operator pos:line="154" pos:column="48">=<pos:position pos:line="154" pos:column="49"/></operator> <name pos:line="154" pos:column="50">cp<pos:position pos:line="154" pos:column="52"/></name> <operator pos:line="154" pos:column="53">+<pos:position pos:line="154" pos:column="54"/></operator> <literal type="number" pos:line="154" pos:column="55">1<pos:position pos:line="154" pos:column="56"/></literal></expr>;<pos:position pos:line="154" pos:column="57"/></expr_stmt></block></then></if>
		}<pos:position pos:line="155" pos:column="18"/></block></then></if>
	}<pos:position pos:line="156" pos:column="10"/></block></for>
	<if pos:line="157" pos:column="9">if <condition pos:line="157" pos:column="12">(<expr><name pos:line="157" pos:column="13">result_size<pos:position pos:line="157" pos:column="24"/></name> <operator pos:line="157" pos:column="25">&amp;&amp;<pos:position pos:line="157" pos:column="35"/></operator> <name><name pos:line="157" pos:column="28">result<pos:position pos:line="157" pos:column="34"/></name><index pos:line="157" pos:column="34">[<expr><name pos:line="157" pos:column="35">result_size<pos:position pos:line="157" pos:column="46"/></name><operator pos:line="157" pos:column="46">-<pos:position pos:line="157" pos:column="47"/></operator><literal type="number" pos:line="157" pos:column="47">1<pos:position pos:line="157" pos:column="48"/></literal></expr>]<pos:position pos:line="157" pos:column="49"/></index></name> <operator pos:line="157" pos:column="50">!=<pos:position pos:line="157" pos:column="52"/></operator> <literal type="char" pos:line="157" pos:column="53">'\n'<pos:position pos:line="157" pos:column="57"/></literal></expr>)<pos:position pos:line="157" pos:column="58"/></condition><then pos:line="157" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="158" pos:column="17">sline<pos:position pos:line="158" pos:column="22"/></name><index pos:line="158" pos:column="22">[<expr><name pos:line="158" pos:column="23">cnt<pos:position pos:line="158" pos:column="26"/></name><operator pos:line="158" pos:column="26">-<pos:position pos:line="158" pos:column="27"/></operator><literal type="number" pos:line="158" pos:column="27">1<pos:position pos:line="158" pos:column="28"/></literal></expr>]<pos:position pos:line="158" pos:column="29"/></index></name><operator pos:line="158" pos:column="29">.<pos:position pos:line="158" pos:column="30"/></operator><name pos:line="158" pos:column="30">len<pos:position pos:line="158" pos:column="33"/></name> <operator pos:line="158" pos:column="34">=<pos:position pos:line="158" pos:column="35"/></operator> <name pos:line="158" pos:column="36">result_size<pos:position pos:line="158" pos:column="47"/></name> <operator pos:line="158" pos:column="48">-<pos:position pos:line="158" pos:column="49"/></operator> <operator pos:line="158" pos:column="50">(<pos:position pos:line="158" pos:column="51"/></operator><name><name pos:line="158" pos:column="51">sline<pos:position pos:line="158" pos:column="56"/></name><index pos:line="158" pos:column="56">[<expr><name pos:line="158" pos:column="57">cnt<pos:position pos:line="158" pos:column="60"/></name><operator pos:line="158" pos:column="60">-<pos:position pos:line="158" pos:column="61"/></operator><literal type="number" pos:line="158" pos:column="61">1<pos:position pos:line="158" pos:column="62"/></literal></expr>]<pos:position pos:line="158" pos:column="63"/></index></name><operator pos:line="158" pos:column="63">.<pos:position pos:line="158" pos:column="64"/></operator><name pos:line="158" pos:column="64">bol<pos:position pos:line="158" pos:column="67"/></name> <operator pos:line="158" pos:column="68">-<pos:position pos:line="158" pos:column="69"/></operator> <name pos:line="158" pos:column="70">result<pos:position pos:line="158" pos:column="76"/></name><operator pos:line="158" pos:column="76">)<pos:position pos:line="158" pos:column="77"/></operator></expr>;<pos:position pos:line="158" pos:column="78"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="160" pos:column="9">result_file<pos:position pos:line="160" pos:column="20"/></name><operator pos:line="160" pos:column="20">.<pos:position pos:line="160" pos:column="21"/></operator><name pos:line="160" pos:column="21">ptr<pos:position pos:line="160" pos:column="24"/></name></name> <operator pos:line="160" pos:column="25">=<pos:position pos:line="160" pos:column="26"/></operator> <name pos:line="160" pos:column="27">result<pos:position pos:line="160" pos:column="33"/></name></expr>;<pos:position pos:line="160" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="161" pos:column="9">result_file<pos:position pos:line="161" pos:column="20"/></name><operator pos:line="161" pos:column="20">.<pos:position pos:line="161" pos:column="21"/></operator><name pos:line="161" pos:column="21">size<pos:position pos:line="161" pos:column="25"/></name></name> <operator pos:line="161" pos:column="26">=<pos:position pos:line="161" pos:column="27"/></operator> <name pos:line="161" pos:column="28">result_size<pos:position pos:line="161" pos:column="39"/></name></expr>;<pos:position pos:line="161" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="163" pos:column="9">/* Even p_lno[cnt+1] is valid -- that is for the end line number
	 * for deletion hunk at the end.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="166" pos:column="9">sline<pos:position pos:line="166" pos:column="14"/></name><index pos:line="166" pos:column="14">[<expr><literal type="number" pos:line="166" pos:column="15">0<pos:position pos:line="166" pos:column="16"/></literal></expr>]<pos:position pos:line="166" pos:column="17"/></index></name><operator pos:line="166" pos:column="17">.<pos:position pos:line="166" pos:column="18"/></operator><name pos:line="166" pos:column="18">p_lno<pos:position pos:line="166" pos:column="23"/></name> <operator pos:line="166" pos:column="24">=<pos:position pos:line="166" pos:column="25"/></operator> <call><name pos:line="166" pos:column="26">xcalloc<pos:position pos:line="166" pos:column="33"/></name><argument_list pos:line="166" pos:column="33">(<argument><expr><call><name pos:line="166" pos:column="34">st_mult<pos:position pos:line="166" pos:column="41"/></name><argument_list pos:line="166" pos:column="41">(<argument><expr><call><name pos:line="166" pos:column="42">st_add<pos:position pos:line="166" pos:column="48"/></name><argument_list pos:line="166" pos:column="48">(<argument><expr><name pos:line="166" pos:column="49">cnt<pos:position pos:line="166" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="54">2<pos:position pos:line="166" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="166" pos:column="58">num_parent<pos:position pos:line="166" pos:column="68"/></name></expr></argument>)<pos:position pos:line="166" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr pos:line="166" pos:column="71">sizeof<operator pos:line="166" pos:column="77">(<pos:position pos:line="166" pos:column="78"/></operator><name pos:line="166" pos:column="78">unsigned<pos:position pos:line="166" pos:column="86"/></name> <name pos:line="166" pos:column="87">long<pos:position pos:line="166" pos:column="91"/></name><operator pos:line="166" pos:column="91">)<pos:position pos:line="166" pos:column="92"/></operator></expr></argument>)<pos:position pos:line="166" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="94"/></expr_stmt>
	<for pos:line="167" pos:column="9">for <control pos:line="167" pos:column="13">(<init><expr><name pos:line="167" pos:column="14">lno<pos:position pos:line="167" pos:column="17"/></name> <operator pos:line="167" pos:column="18">=<pos:position pos:line="167" pos:column="19"/></operator> <literal type="number" pos:line="167" pos:column="20">0<pos:position pos:line="167" pos:column="21"/></literal></expr>;<pos:position pos:line="167" pos:column="22"/></init> <condition><expr><name pos:line="167" pos:column="23">lno<pos:position pos:line="167" pos:column="26"/></name> <operator pos:line="167" pos:column="27">&lt;=<pos:position pos:line="167" pos:column="32"/></operator> <name pos:line="167" pos:column="30">cnt<pos:position pos:line="167" pos:column="33"/></name></expr>;<pos:position pos:line="167" pos:column="34"/></condition> <incr><expr><name pos:line="167" pos:column="35">lno<pos:position pos:line="167" pos:column="38"/></name><operator pos:line="167" pos:column="38">++<pos:position pos:line="167" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="167" pos:column="41"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="168" pos:column="17">sline<pos:position pos:line="168" pos:column="22"/></name><index pos:line="168" pos:column="22">[<expr><name pos:line="168" pos:column="23">lno<pos:position pos:line="168" pos:column="26"/></name><operator pos:line="168" pos:column="26">+<pos:position pos:line="168" pos:column="27"/></operator><literal type="number" pos:line="168" pos:column="27">1<pos:position pos:line="168" pos:column="28"/></literal></expr>]<pos:position pos:line="168" pos:column="29"/></index></name><operator pos:line="168" pos:column="29">.<pos:position pos:line="168" pos:column="30"/></operator><name pos:line="168" pos:column="30">p_lno<pos:position pos:line="168" pos:column="35"/></name> <operator pos:line="168" pos:column="36">=<pos:position pos:line="168" pos:column="37"/></operator> <name><name pos:line="168" pos:column="38">sline<pos:position pos:line="168" pos:column="43"/></name><index pos:line="168" pos:column="43">[<expr><name pos:line="168" pos:column="44">lno<pos:position pos:line="168" pos:column="47"/></name></expr>]<pos:position pos:line="168" pos:column="48"/></index></name><operator pos:line="168" pos:column="48">.<pos:position pos:line="168" pos:column="49"/></operator><name pos:line="168" pos:column="49">p_lno<pos:position pos:line="168" pos:column="54"/></name> <operator pos:line="168" pos:column="55">+<pos:position pos:line="168" pos:column="56"/></operator> <name pos:line="168" pos:column="57">num_parent<pos:position pos:line="168" pos:column="67"/></name></expr>;<pos:position pos:line="168" pos:column="68"/></expr_stmt></block></for>

	<for pos:line="170" pos:column="9">for <control pos:line="170" pos:column="13">(<init><expr><name pos:line="170" pos:column="14">i<pos:position pos:line="170" pos:column="15"/></name> <operator pos:line="170" pos:column="16">=<pos:position pos:line="170" pos:column="17"/></operator> <literal type="number" pos:line="170" pos:column="18">0<pos:position pos:line="170" pos:column="19"/></literal></expr>;<pos:position pos:line="170" pos:column="20"/></init> <condition><expr><name pos:line="170" pos:column="21">i<pos:position pos:line="170" pos:column="22"/></name> <operator pos:line="170" pos:column="23">&lt;<pos:position pos:line="170" pos:column="27"/></operator> <name pos:line="170" pos:column="25">num_parent<pos:position pos:line="170" pos:column="35"/></name></expr>;<pos:position pos:line="170" pos:column="36"/></condition> <incr><expr><name pos:line="170" pos:column="37">i<pos:position pos:line="170" pos:column="38"/></name><operator pos:line="170" pos:column="38">++<pos:position pos:line="170" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="170" pos:column="41"/></control> <block pos:line="170" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="171" pos:column="17">int<pos:position pos:line="171" pos:column="20"/></name></type> <name pos:line="171" pos:column="21">j<pos:position pos:line="171" pos:column="22"/></name></decl>;<pos:position pos:line="171" pos:column="23"/></decl_stmt>
		<for pos:line="172" pos:column="17">for <control pos:line="172" pos:column="21">(<init><expr><name pos:line="172" pos:column="22">j<pos:position pos:line="172" pos:column="23"/></name> <operator pos:line="172" pos:column="24">=<pos:position pos:line="172" pos:column="25"/></operator> <literal type="number" pos:line="172" pos:column="26">0<pos:position pos:line="172" pos:column="27"/></literal></expr>;<pos:position pos:line="172" pos:column="28"/></init> <condition><expr><name pos:line="172" pos:column="29">j<pos:position pos:line="172" pos:column="30"/></name> <operator pos:line="172" pos:column="31">&lt;<pos:position pos:line="172" pos:column="35"/></operator> <name pos:line="172" pos:column="33">i<pos:position pos:line="172" pos:column="34"/></name></expr>;<pos:position pos:line="172" pos:column="35"/></condition> <incr><expr><name pos:line="172" pos:column="36">j<pos:position pos:line="172" pos:column="37"/></name><operator pos:line="172" pos:column="37">++<pos:position pos:line="172" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="172" pos:column="40"/></control> <block pos:line="172" pos:column="41">{
			<if pos:line="173" pos:column="25">if <condition pos:line="173" pos:column="28">(<expr><operator pos:line="173" pos:column="29">!<pos:position pos:line="173" pos:column="30"/></operator><call><name pos:line="173" pos:column="30">oidcmp<pos:position pos:line="173" pos:column="36"/></name><argument_list pos:line="173" pos:column="36">(<argument><expr><operator pos:line="173" pos:column="37">&amp;<pos:position pos:line="173" pos:column="42"/></operator><name><name pos:line="173" pos:column="38">elem<pos:position pos:line="173" pos:column="42"/></name><operator pos:line="173" pos:column="42">-&gt;<pos:position pos:line="173" pos:column="47"/></operator><name pos:line="173" pos:column="44">parent<pos:position pos:line="173" pos:column="50"/></name><index pos:line="173" pos:column="50">[<expr><name pos:line="173" pos:column="51">i<pos:position pos:line="173" pos:column="52"/></name></expr>]<pos:position pos:line="173" pos:column="53"/></index></name><operator pos:line="173" pos:column="53">.<pos:position pos:line="173" pos:column="54"/></operator><name pos:line="173" pos:column="54">oid<pos:position pos:line="173" pos:column="57"/></name></expr></argument>,
				     <argument><expr><operator pos:line="174" pos:column="38">&amp;<pos:position pos:line="174" pos:column="43"/></operator><name><name pos:line="174" pos:column="39">elem<pos:position pos:line="174" pos:column="43"/></name><operator pos:line="174" pos:column="43">-&gt;<pos:position pos:line="174" pos:column="48"/></operator><name pos:line="174" pos:column="45">parent<pos:position pos:line="174" pos:column="51"/></name><index pos:line="174" pos:column="51">[<expr><name pos:line="174" pos:column="52">j<pos:position pos:line="174" pos:column="53"/></name></expr>]<pos:position pos:line="174" pos:column="54"/></index></name><operator pos:line="174" pos:column="54">.<pos:position pos:line="174" pos:column="55"/></operator><name pos:line="174" pos:column="55">oid<pos:position pos:line="174" pos:column="58"/></name></expr></argument>)<pos:position pos:line="174" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="60"/></condition><then pos:line="174" pos:column="60"> <block pos:line="174" pos:column="61">{
				<expr_stmt><expr><call><name pos:line="175" pos:column="33">reuse_combine_diff<pos:position pos:line="175" pos:column="51"/></name><argument_list pos:line="175" pos:column="51">(<argument><expr><name pos:line="175" pos:column="52">sline<pos:position pos:line="175" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="59">cnt<pos:position pos:line="175" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="64">i<pos:position pos:line="175" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="67">j<pos:position pos:line="175" pos:column="68"/></name></expr></argument>)<pos:position pos:line="175" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="70"/></expr_stmt>
				<break pos:line="176" pos:column="33">break;<pos:position pos:line="176" pos:column="39"/></break>
			}<pos:position pos:line="177" pos:column="26"/></block></then></if>
		}<pos:position pos:line="178" pos:column="18"/></block></for>
		<if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><name pos:line="179" pos:column="21">i<pos:position pos:line="179" pos:column="22"/></name> <operator pos:line="179" pos:column="23">&lt;=<pos:position pos:line="179" pos:column="28"/></operator> <name pos:line="179" pos:column="26">j<pos:position pos:line="179" pos:column="27"/></name></expr>)<pos:position pos:line="179" pos:column="28"/></condition><then pos:line="179" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="25">combine_diff<pos:position pos:line="180" pos:column="37"/></name><argument_list pos:line="180" pos:column="37">(<argument><expr><operator pos:line="180" pos:column="38">&amp;<pos:position pos:line="180" pos:column="43"/></operator><name><name pos:line="180" pos:column="39">elem<pos:position pos:line="180" pos:column="43"/></name><operator pos:line="180" pos:column="43">-&gt;<pos:position pos:line="180" pos:column="48"/></operator><name pos:line="180" pos:column="45">parent<pos:position pos:line="180" pos:column="51"/></name><index pos:line="180" pos:column="51">[<expr><name pos:line="180" pos:column="52">i<pos:position pos:line="180" pos:column="53"/></name></expr>]<pos:position pos:line="180" pos:column="54"/></index></name><operator pos:line="180" pos:column="54">.<pos:position pos:line="180" pos:column="55"/></operator><name pos:line="180" pos:column="55">oid<pos:position pos:line="180" pos:column="58"/></name></expr></argument>,
				     <argument><expr><name><name pos:line="181" pos:column="38">elem<pos:position pos:line="181" pos:column="42"/></name><operator pos:line="181" pos:column="42">-&gt;<pos:position pos:line="181" pos:column="47"/></operator><name pos:line="181" pos:column="44">parent<pos:position pos:line="181" pos:column="50"/></name><index pos:line="181" pos:column="50">[<expr><name pos:line="181" pos:column="51">i<pos:position pos:line="181" pos:column="52"/></name></expr>]<pos:position pos:line="181" pos:column="53"/></index></name><operator pos:line="181" pos:column="53">.<pos:position pos:line="181" pos:column="54"/></operator><name pos:line="181" pos:column="54">mode<pos:position pos:line="181" pos:column="58"/></name></expr></argument>,
				     <argument><expr><operator pos:line="182" pos:column="38">&amp;<pos:position pos:line="182" pos:column="43"/></operator><name pos:line="182" pos:column="39">result_file<pos:position pos:line="182" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="52">sline<pos:position pos:line="182" pos:column="57"/></name></expr></argument>,
				     <argument><expr><name pos:line="183" pos:column="38">cnt<pos:position pos:line="183" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="43">i<pos:position pos:line="183" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="46">num_parent<pos:position pos:line="183" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="58">result_deleted<pos:position pos:line="183" pos:column="72"/></name></expr></argument>,
				     <argument><expr><name pos:line="184" pos:column="38">textconv<pos:position pos:line="184" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="48">elem<pos:position pos:line="184" pos:column="52"/></name><operator pos:line="184" pos:column="52">-&gt;<pos:position pos:line="184" pos:column="57"/></operator><name pos:line="184" pos:column="54">path<pos:position pos:line="184" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="60">opt<pos:position pos:line="184" pos:column="63"/></name><operator pos:line="184" pos:column="63">-&gt;<pos:position pos:line="184" pos:column="68"/></operator><name pos:line="184" pos:column="65">xdl_opts<pos:position pos:line="184" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="184" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="75"/></expr_stmt></block></then></if>
	}<pos:position pos:line="185" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="187" pos:column="9">show_hunks<pos:position pos:line="187" pos:column="19"/></name> <operator pos:line="187" pos:column="20">=<pos:position pos:line="187" pos:column="21"/></operator> <call><name pos:line="187" pos:column="22">make_hunks<pos:position pos:line="187" pos:column="32"/></name><argument_list pos:line="187" pos:column="32">(<argument><expr><name pos:line="187" pos:column="33">sline<pos:position pos:line="187" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="40">cnt<pos:position pos:line="187" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="45">num_parent<pos:position pos:line="187" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="57">dense<pos:position pos:line="187" pos:column="62"/></name></expr></argument>)<pos:position pos:line="187" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="64"/></expr_stmt>

	<if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name pos:line="189" pos:column="13">show_hunks<pos:position pos:line="189" pos:column="23"/></name> <operator pos:line="189" pos:column="24">||<pos:position pos:line="189" pos:column="26"/></operator> <name pos:line="189" pos:column="27">mode_differs<pos:position pos:line="189" pos:column="39"/></name> <operator pos:line="189" pos:column="40">||<pos:position pos:line="189" pos:column="42"/></operator> <name pos:line="189" pos:column="43">working_tree_file<pos:position pos:line="189" pos:column="60"/></name></expr>)<pos:position pos:line="189" pos:column="61"/></condition><then pos:line="189" pos:column="61"> <block pos:line="189" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="190" pos:column="17">show_combined_header<pos:position pos:line="190" pos:column="37"/></name><argument_list pos:line="190" pos:column="37">(<argument><expr><name pos:line="190" pos:column="38">elem<pos:position pos:line="190" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="44">num_parent<pos:position pos:line="190" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="56">dense<pos:position pos:line="190" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="63">rev<pos:position pos:line="190" pos:column="66"/></name></expr></argument>,
				     <argument><expr><name pos:line="191" pos:column="38">line_prefix<pos:position pos:line="191" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="51">mode_differs<pos:position pos:line="191" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="191" pos:column="65">1<pos:position pos:line="191" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="192" pos:column="17">dump_sline<pos:position pos:line="192" pos:column="27"/></name><argument_list pos:line="192" pos:column="27">(<argument><expr><name pos:line="192" pos:column="28">sline<pos:position pos:line="192" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="35">line_prefix<pos:position pos:line="192" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="48">cnt<pos:position pos:line="192" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="53">num_parent<pos:position pos:line="192" pos:column="63"/></name></expr></argument>,
			   <argument><expr><name><name pos:line="193" pos:column="28">opt<pos:position pos:line="193" pos:column="31"/></name><operator pos:line="193" pos:column="31">-&gt;<pos:position pos:line="193" pos:column="36"/></operator><name pos:line="193" pos:column="33">use_color<pos:position pos:line="193" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="44">result_deleted<pos:position pos:line="193" pos:column="58"/></name></expr></argument>)<pos:position pos:line="193" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="194" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="195" pos:column="9">free<pos:position pos:line="195" pos:column="13"/></name><argument_list pos:line="195" pos:column="13">(<argument><expr><name pos:line="195" pos:column="14">result<pos:position pos:line="195" pos:column="20"/></name></expr></argument>)<pos:position pos:line="195" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="22"/></expr_stmt>

	<for pos:line="197" pos:column="9">for <control pos:line="197" pos:column="13">(<init><expr><name pos:line="197" pos:column="14">lno<pos:position pos:line="197" pos:column="17"/></name> <operator pos:line="197" pos:column="18">=<pos:position pos:line="197" pos:column="19"/></operator> <literal type="number" pos:line="197" pos:column="20">0<pos:position pos:line="197" pos:column="21"/></literal></expr>;<pos:position pos:line="197" pos:column="22"/></init> <condition><expr><name pos:line="197" pos:column="23">lno<pos:position pos:line="197" pos:column="26"/></name> <operator pos:line="197" pos:column="27">&lt;<pos:position pos:line="197" pos:column="31"/></operator> <name pos:line="197" pos:column="29">cnt<pos:position pos:line="197" pos:column="32"/></name></expr>;<pos:position pos:line="197" pos:column="33"/></condition> <incr><expr><name pos:line="197" pos:column="34">lno<pos:position pos:line="197" pos:column="37"/></name><operator pos:line="197" pos:column="37">++<pos:position pos:line="197" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="197" pos:column="40"/></control> <block pos:line="197" pos:column="41">{
		<if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><name><name pos:line="198" pos:column="21">sline<pos:position pos:line="198" pos:column="26"/></name><index pos:line="198" pos:column="26">[<expr><name pos:line="198" pos:column="27">lno<pos:position pos:line="198" pos:column="30"/></name></expr>]<pos:position pos:line="198" pos:column="31"/></index></name><operator pos:line="198" pos:column="31">.<pos:position pos:line="198" pos:column="32"/></operator><name pos:line="198" pos:column="32">lost<pos:position pos:line="198" pos:column="36"/></name></expr>)<pos:position pos:line="198" pos:column="37"/></condition><then pos:line="198" pos:column="37"> <block pos:line="198" pos:column="38">{
			<decl_stmt><decl><type><name><name pos:line="199" pos:column="25">struct<pos:position pos:line="199" pos:column="31"/></name> <name pos:line="199" pos:column="32">lline<pos:position pos:line="199" pos:column="37"/></name></name> <modifier pos:line="199" pos:column="38">*<pos:position pos:line="199" pos:column="39"/></modifier></type><name pos:line="199" pos:column="39">ll<pos:position pos:line="199" pos:column="41"/></name> <init pos:line="199" pos:column="42">= <expr><name><name pos:line="199" pos:column="44">sline<pos:position pos:line="199" pos:column="49"/></name><index pos:line="199" pos:column="49">[<expr><name pos:line="199" pos:column="50">lno<pos:position pos:line="199" pos:column="53"/></name></expr>]<pos:position pos:line="199" pos:column="54"/></index></name><operator pos:line="199" pos:column="54">.<pos:position pos:line="199" pos:column="55"/></operator><name pos:line="199" pos:column="55">lost<pos:position pos:line="199" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="199" pos:column="60"/></decl_stmt>
			<while pos:line="200" pos:column="25">while <condition pos:line="200" pos:column="31">(<expr><name pos:line="200" pos:column="32">ll<pos:position pos:line="200" pos:column="34"/></name></expr>)<pos:position pos:line="200" pos:column="35"/></condition> <block pos:line="200" pos:column="36">{
				<decl_stmt><decl><type><name><name pos:line="201" pos:column="33">struct<pos:position pos:line="201" pos:column="39"/></name> <name pos:line="201" pos:column="40">lline<pos:position pos:line="201" pos:column="45"/></name></name> <modifier pos:line="201" pos:column="46">*<pos:position pos:line="201" pos:column="47"/></modifier></type><name pos:line="201" pos:column="47">tmp<pos:position pos:line="201" pos:column="50"/></name> <init pos:line="201" pos:column="51">= <expr><name pos:line="201" pos:column="53">ll<pos:position pos:line="201" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="201" pos:column="56"/></decl_stmt>
				<expr_stmt><expr><name pos:line="202" pos:column="33">ll<pos:position pos:line="202" pos:column="35"/></name> <operator pos:line="202" pos:column="36">=<pos:position pos:line="202" pos:column="37"/></operator> <name><name pos:line="202" pos:column="38">ll<pos:position pos:line="202" pos:column="40"/></name><operator pos:line="202" pos:column="40">-&gt;<pos:position pos:line="202" pos:column="45"/></operator><name pos:line="202" pos:column="42">next<pos:position pos:line="202" pos:column="46"/></name></name></expr>;<pos:position pos:line="202" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="203" pos:column="33">free<pos:position pos:line="203" pos:column="37"/></name><argument_list pos:line="203" pos:column="37">(<argument><expr><name pos:line="203" pos:column="38">tmp<pos:position pos:line="203" pos:column="41"/></name></expr></argument>)<pos:position pos:line="203" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="43"/></expr_stmt>
			}<pos:position pos:line="204" pos:column="26"/></block></while>
		}<pos:position pos:line="205" pos:column="18"/></block></then></if>
	}<pos:position pos:line="206" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="207" pos:column="9">free<pos:position pos:line="207" pos:column="13"/></name><argument_list pos:line="207" pos:column="13">(<argument><expr><name><name pos:line="207" pos:column="14">sline<pos:position pos:line="207" pos:column="19"/></name><index pos:line="207" pos:column="19">[<expr><literal type="number" pos:line="207" pos:column="20">0<pos:position pos:line="207" pos:column="21"/></literal></expr>]<pos:position pos:line="207" pos:column="22"/></index></name><operator pos:line="207" pos:column="22">.<pos:position pos:line="207" pos:column="23"/></operator><name pos:line="207" pos:column="23">p_lno<pos:position pos:line="207" pos:column="28"/></name></expr></argument>)<pos:position pos:line="207" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="208" pos:column="9">free<pos:position pos:line="208" pos:column="13"/></name><argument_list pos:line="208" pos:column="13">(<argument><expr><name pos:line="208" pos:column="14">sline<pos:position pos:line="208" pos:column="19"/></name></expr></argument>)<pos:position pos:line="208" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="21"/></expr_stmt>
}<pos:position pos:line="209" pos:column="2"/></block></function></unit>

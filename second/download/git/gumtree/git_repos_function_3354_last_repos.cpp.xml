<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3354_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_strbuf<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">strbuf<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">hdr<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">type<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">strbuf<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">buf<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">hdr_int<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">hdr<pos:position pos:line="4" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="22">content_length<pos:position pos:line="4" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="38">buf<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">-&gt;<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="43">len<pos:position pos:line="4" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">hdr_str<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">hdr<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="22">content_type<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">type<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">end_headers<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">hdr<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">write_or_die<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="25">buf<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">buf<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="35">buf<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">len<pos:position pos:line="7" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3205_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">progress<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">get_progress<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">unpack_trees_options<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">o<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">cnt<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">total<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">index_state<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">index<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><operator pos:line="4" pos:column="37">&amp;<pos:position pos:line="4" pos:column="42"/></operator><name><name pos:line="4" pos:column="38">o<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">result<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">o<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">update<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">||<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="27">!<pos:position pos:line="6" pos:column="28"/></operator><name><name pos:line="6" pos:column="28">o<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">verbose_update<pos:position pos:line="6" pos:column="45"/></name></name></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init pos:line="9" pos:column="14">;<pos:position pos:line="9" pos:column="15"/></init> <condition><expr><name pos:line="9" pos:column="16">cnt<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&lt;<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="22">index<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">cache_nr<pos:position pos:line="9" pos:column="37"/></name></name></expr>;<pos:position pos:line="9" pos:column="38"/></condition> <incr><expr><name pos:line="9" pos:column="39">cnt<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">++<pos:position pos:line="9" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="45"/></control> <block pos:line="9" pos:column="46">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name><name pos:line="10" pos:column="23">struct<pos:position pos:line="10" pos:column="29"/></name> <name pos:line="10" pos:column="30">cache_entry<pos:position pos:line="10" pos:column="41"/></name></name> <modifier pos:line="10" pos:column="42">*<pos:position pos:line="10" pos:column="43"/></modifier></type><name pos:line="10" pos:column="43">ce<pos:position pos:line="10" pos:column="45"/></name> <init pos:line="10" pos:column="46">= <expr><name><name pos:line="10" pos:column="48">index<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">cache<pos:position pos:line="10" pos:column="60"/></name><index pos:line="10" pos:column="60">[<expr><name pos:line="10" pos:column="61">cnt<pos:position pos:line="10" pos:column="64"/></name></expr>]<pos:position pos:line="10" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">ce<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">ce_flags<pos:position pos:line="11" pos:column="33"/></name></name> <operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator> <operator pos:line="11" pos:column="36">(<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">CE_UPDATE<pos:position pos:line="11" pos:column="46"/></name> <operator pos:line="11" pos:column="47">|<pos:position pos:line="11" pos:column="48"/></operator> <name pos:line="11" pos:column="49">CE_WT_REMOVE<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">)<pos:position pos:line="11" pos:column="62"/></operator></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">total<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">++<pos:position pos:line="12" pos:column="32"/></operator></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></for>

	<return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">start_progress_delay<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><call><name pos:line="15" pos:column="37">_<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><literal type="string" pos:line="15" pos:column="39">"Checking out files"<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr></argument>,
				    <argument><expr><name pos:line="16" pos:column="37">total<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="44">50<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="48">1<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5493_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">printable_type<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">object<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">obj<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ret<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">obj<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">type<pos:position pos:line="5" pos:column="22"/></name></name> <operator pos:line="5" pos:column="23">==<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="26">OBJ_NONE<pos:position pos:line="5" pos:column="34"/></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <block pos:line="5" pos:column="36">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">enum<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">object_type<pos:position pos:line="6" pos:column="33"/></name></name></type> <name pos:line="6" pos:column="34">type<pos:position pos:line="6" pos:column="38"/></name> <init pos:line="6" pos:column="39">= <expr><call><name pos:line="6" pos:column="41">sha1_object_info<pos:position pos:line="6" pos:column="57"/></name><argument_list pos:line="6" pos:column="57">(<argument><expr><name><name pos:line="6" pos:column="58">obj<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">oid<pos:position pos:line="6" pos:column="66"/></name><operator pos:line="6" pos:column="66">.<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="67">hash<pos:position pos:line="6" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="73">NULL<pos:position pos:line="6" pos:column="77"/></name></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="79"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">type<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&gt;<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">object_as_type<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">obj<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">type<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="51">0<pos:position pos:line="8" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">ret<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name><typename pos:line="11" pos:column="15">typename<pos:position pos:line="11" pos:column="23"/></typename></name><operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name><name pos:line="11" pos:column="24">obj<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">type<pos:position pos:line="11" pos:column="33"/></name></name><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">ret<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">ret<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="string" pos:line="13" pos:column="23">"unknown"<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt></block></then></if>

	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">ret<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

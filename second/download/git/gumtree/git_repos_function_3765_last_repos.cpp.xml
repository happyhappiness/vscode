<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3765_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">bad_to_remove_submodule<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">path<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">flags<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ssize_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">len<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">child_process<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">cp<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">CHILD_PROCESS_INIT<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">file_exists<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">path<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call> <operator pos:line="8" pos:column="32">||<pos:position pos:line="8" pos:column="34"/></operator> <call><name pos:line="8" pos:column="35">is_empty_dir<pos:position pos:line="8" pos:column="47"/></name><argument_list pos:line="8" pos:column="47">(<argument><expr><name pos:line="8" pos:column="48">path<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">submodule_uses_gitfile<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">path<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">argv_array_pushl<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator><name><name pos:line="14" pos:column="27">cp<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">args<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"status"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="46">"--porcelain"<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>,
				   <argument><expr><literal type="string" pos:line="15" pos:column="36">"--ignore-submodules=none"<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="64">NULL<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">flags<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&amp;<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="21">SUBMODULE_REMOVAL_IGNORE_UNTRACKED<pos:position pos:line="17" pos:column="55"/></name></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">argv_array_push<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator><name><name pos:line="18" pos:column="34">cp<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">.<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">args<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="43">"-uno"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt></block></then>
	<else pos:line="19" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">argv_array_push<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name><name pos:line="20" pos:column="34">cp<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">args<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="43">"-uall"<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt></block></else></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">flags<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">&amp;<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="23">SUBMODULE_REMOVAL_IGNORE_IGNORED_UNTRACKED<pos:position pos:line="22" pos:column="65"/></name><operator pos:line="22" pos:column="65">)<pos:position pos:line="22" pos:column="66"/></operator></expr>)<pos:position pos:line="22" pos:column="67"/></condition><then pos:line="22" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">argv_array_push<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><operator pos:line="23" pos:column="33">&amp;<pos:position pos:line="23" pos:column="38"/></operator><name><name pos:line="23" pos:column="34">cp<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">.<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">args<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="43">"--ignored"<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">prepare_submodule_repo_env<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><operator pos:line="25" pos:column="36">&amp;<pos:position pos:line="25" pos:column="41"/></operator><name><name pos:line="25" pos:column="37">cp<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">env_array<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">cp<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">git_cmd<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">cp<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">no_stdin<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">1<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">cp<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">out<pos:position pos:line="28" pos:column="15"/></name></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">-<pos:position pos:line="28" pos:column="19"/></operator><literal type="number" pos:line="28" pos:column="19">1<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">cp<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">dir<pos:position pos:line="29" pos:column="15"/></name></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">path<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">start_command<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><operator pos:line="30" pos:column="27">&amp;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="28">cp<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32"> <block pos:line="30" pos:column="33">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">flags<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">&amp;<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="29">SUBMODULE_REMOVAL_DIE_ON_ERROR<pos:position pos:line="31" pos:column="59"/></name></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">die<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><call><name pos:line="32" pos:column="29">_<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><literal type="string" pos:line="32" pos:column="31">"could not start 'git status' in submodule '%s'"<pos:position pos:line="32" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="33" pos:column="33">path<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="34" pos:column="17">ret<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <operator pos:line="34" pos:column="23">-<pos:position pos:line="34" pos:column="24"/></operator><literal type="number" pos:line="34" pos:column="24">1<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
		<goto pos:line="35" pos:column="17">goto <name pos:line="35" pos:column="22">out<pos:position pos:line="35" pos:column="25"/></name>;<pos:position pos:line="35" pos:column="26"/></goto>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="38" pos:column="9">len<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">strbuf_read<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><operator pos:line="38" pos:column="27">&amp;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="28">buf<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="33">cp<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">out<pos:position pos:line="38" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="41">1024<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">len<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&gt;<pos:position pos:line="39" pos:column="21"/></operator> <literal type="number" pos:line="39" pos:column="19">2<pos:position pos:line="39" pos:column="20"/></literal></expr>)<pos:position pos:line="39" pos:column="21"/></condition><then pos:line="39" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">ret<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">1<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">close<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name><name pos:line="41" pos:column="15">cp<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">.<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">out<pos:position pos:line="41" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">finish_command<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><operator pos:line="43" pos:column="28">&amp;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="29">cp<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33"> <block pos:line="43" pos:column="34">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">flags<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="29">SUBMODULE_REMOVAL_DIE_ON_ERROR<pos:position pos:line="44" pos:column="59"/></name></expr>)<pos:position pos:line="44" pos:column="60"/></condition><then pos:line="44" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">die<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><call><name pos:line="45" pos:column="29">_<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><literal type="string" pos:line="45" pos:column="31">"could not run 'git status' in submodule '%s'"<pos:position pos:line="45" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="46" pos:column="33">path<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="47" pos:column="17">ret<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <operator pos:line="47" pos:column="23">-<pos:position pos:line="47" pos:column="24"/></operator><literal type="number" pos:line="47" pos:column="24">1<pos:position pos:line="47" pos:column="25"/></literal></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>
<label><name pos:line="49" pos:column="1">out<pos:position pos:line="49" pos:column="4"/></name>:<pos:position pos:line="49" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">strbuf_release<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="25">buf<pos:position pos:line="50" pos:column="28"/></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
	<return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">ret<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

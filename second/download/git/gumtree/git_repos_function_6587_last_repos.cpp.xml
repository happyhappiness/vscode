<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6587_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">buffer_read_line<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">line_buffer<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">buf<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">end<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">fgets<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name><name pos:line="4" pos:column="20">buf<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">line_buffer<pos:position pos:line="4" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="38">sizeof<argument_list pos:line="4" pos:column="44">(<argument><expr><name><name pos:line="4" pos:column="45">buf<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="50">line_buffer<pos:position pos:line="4" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="64">buf<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">-&gt;<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="69">infile<pos:position pos:line="4" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="77"/></condition><then pos:line="4" pos:column="77">
		<comment type="block" pos:line="5" pos:column="17">/* Error or data exhausted. */</comment>
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="7" pos:column="9">end<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name><name pos:line="7" pos:column="15">buf<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">line_buffer<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator> <call><name pos:line="7" pos:column="34">strlen<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name><name pos:line="7" pos:column="41">buf<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">line_buffer<pos:position pos:line="7" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">end<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><operator pos:line="8" pos:column="17">-<pos:position pos:line="8" pos:column="18"/></operator><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="char" pos:line="8" pos:column="24">'\n'<pos:position pos:line="8" pos:column="28"/></literal></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="17">end<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><operator pos:line="9" pos:column="21">-<pos:position pos:line="9" pos:column="22"/></operator><literal type="number" pos:line="9" pos:column="22">1<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="char" pos:line="9" pos:column="27">'\0'<pos:position pos:line="9" pos:column="31"/></literal></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt></block></then>
	<elseif pos:line="10" pos:column="9">else <if pos:line="10" pos:column="14">if <condition pos:line="10" pos:column="17">(<expr><call><name pos:line="10" pos:column="18">feof<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name><name pos:line="10" pos:column="23">buf<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">infile<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36">
		<block type="pseudo"><empty_stmt pos:line="11" pos:column="17">;<pos:position pos:line="11" pos:column="18"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="11" pos:column="19">/* No newline at end of file.  That's fine. */</comment>
	<else pos:line="12" pos:column="9">else
		<comment type="block" pos:line="13" pos:column="17">/*
		 * Line was too long.
		 * There is probably a saner way to deal with this,
		 * but for now let's return an error.
		 */</comment>
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></return></block></else></if>
	<return pos:line="19" pos:column="9">return <expr><name><name pos:line="19" pos:column="16">buf<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">line_buffer<pos:position pos:line="19" pos:column="32"/></name></name></expr>;<pos:position pos:line="19" pos:column="33"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4095_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">udt_copy_task_routine<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">udt<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">unidirectional_transfer<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">t<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><operator pos:line="3" pos:column="45">(<pos:position pos:line="3" pos:column="46"/></operator>struct <name pos:line="3" pos:column="53">unidirectional_transfer<pos:position pos:line="3" pos:column="76"/></name> <operator pos:line="3" pos:column="77">*<pos:position pos:line="3" pos:column="78"/></operator><operator pos:line="3" pos:column="78">)<pos:position pos:line="3" pos:column="79"/></operator><name pos:line="3" pos:column="79">udt<pos:position pos:line="3" pos:column="82"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="83"/></decl_stmt>
	<while pos:line="4" pos:column="9">while <condition pos:line="4" pos:column="15">(<expr><name><name pos:line="4" pos:column="16">t<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">state<pos:position pos:line="4" pos:column="24"/></name></name> <operator pos:line="4" pos:column="25">!=<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">SSTATE_FINISHED<pos:position pos:line="4" pos:column="43"/></name></expr>)<pos:position pos:line="4" pos:column="44"/></condition> <block pos:line="4" pos:column="45">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">STATE_NEEDS_READING<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">(<argument><expr><name><name pos:line="5" pos:column="41">t<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">state<pos:position pos:line="5" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="51"/></condition><then pos:line="5" pos:column="51">
			<block type="pseudo"><if pos:line="6" pos:column="25">if <condition pos:line="6" pos:column="28">(<expr><call><name pos:line="6" pos:column="29">udt_do_read<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">t<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
				<block type="pseudo"><return pos:line="7" pos:column="33">return <expr><name pos:line="7" pos:column="40">NULL<pos:position pos:line="7" pos:column="44"/></name></expr>;<pos:position pos:line="7" pos:column="45"/></return></block></then></if></block></then></if>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">STATE_NEEDS_WRITING<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name><name pos:line="8" pos:column="41">t<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">state<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51">
			<block type="pseudo"><if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><call><name pos:line="9" pos:column="29">udt_do_write<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">t<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
				<block type="pseudo"><return pos:line="10" pos:column="33">return <expr><name pos:line="10" pos:column="40">NULL<pos:position pos:line="10" pos:column="44"/></name></expr>;<pos:position pos:line="10" pos:column="45"/></return></block></then></if></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">STATE_NEEDS_CLOSING<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name><name pos:line="11" pos:column="41">t<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">state<pos:position pos:line="11" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">udt_close_if_finished<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">t<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></while>
	<return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">udt<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></return>	<comment type="block" pos:line="14" pos:column="25">/* Just some non-NULL value. */</comment>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

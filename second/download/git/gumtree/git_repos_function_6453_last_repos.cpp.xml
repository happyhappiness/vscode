<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6453_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref_iterator<pos:position pos:line="1" pos:column="27"/></name></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">files_reflog_iterator_begin<pos:position pos:line="1" pos:column="56"/></name><parameter_list pos:line="1" pos:column="56">(<parameter><decl><type><name><name pos:line="1" pos:column="57">struct<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">ref_store<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">ref_store<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">files_ref_store<pos:position pos:line="3" pos:column="31"/></name></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">refs<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">=
		<expr><call><name pos:line="4" pos:column="17">files_downcast<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">ref_store<pos:position pos:line="4" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="43">REF_STORE_READ<pos:position pos:line="4" pos:column="57"/></name></expr></argument>,
			       <argument><expr><literal type="string" pos:line="5" pos:column="32">"reflog_iterator_begin"<pos:position pos:line="5" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">files_reflog_iterator<pos:position pos:line="6" pos:column="37"/></name></name> <modifier pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></modifier></type><name pos:line="6" pos:column="39">iter<pos:position pos:line="6" pos:column="43"/></name> <init pos:line="6" pos:column="44">= <expr><call><name pos:line="6" pos:column="46">xcalloc<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><literal type="number" pos:line="6" pos:column="54">1<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="57">sizeof<argument_list pos:line="6" pos:column="63">(<argument><expr><operator pos:line="6" pos:column="64">*<pos:position pos:line="6" pos:column="65"/></operator><name pos:line="6" pos:column="65">iter<pos:position pos:line="6" pos:column="69"/></name></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="72"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref_iterator<pos:position pos:line="7" pos:column="28"/></name></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">ref_iterator<pos:position pos:line="7" pos:column="42"/></name> <init pos:line="7" pos:column="43">= <expr><operator pos:line="7" pos:column="45">&amp;<pos:position pos:line="7" pos:column="50"/></operator><name><name pos:line="7" pos:column="46">iter<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">-&gt;<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="52">base<pos:position pos:line="7" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">sb<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">STRBUF_INIT<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">base_ref_iterator_init<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">ref_iterator<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="46">&amp;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="47">files_reflog_iterator_vtable<pos:position pos:line="10" pos:column="75"/></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">files_reflog_path<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">refs<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="34">sb<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">NULL<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">iter<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">dir_iterator<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <call><name pos:line="12" pos:column="30">dir_iterator_begin<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">(<argument><expr><name><name pos:line="12" pos:column="49">sb<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">.<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">buf<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">iter<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">ref_store<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">ref_store<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">strbuf_release<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="25">sb<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">ref_iterator<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

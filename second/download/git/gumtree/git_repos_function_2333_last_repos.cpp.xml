<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2333_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">attr_stack_free<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">attr_stack<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">e<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">free<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><name><name pos:line="4" pos:column="14">e<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">origin<pos:position pos:line="4" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name><name pos:line="5" pos:column="25">e<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">num_matches<pos:position pos:line="5" pos:column="39"/></name></name></expr>;<pos:position pos:line="5" pos:column="40"/></condition> <incr><expr><name pos:line="5" pos:column="41">i<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">++<pos:position pos:line="5" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="45"/></control> <block pos:line="5" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">match_attr<pos:position pos:line="6" pos:column="34"/></name></name> <modifier pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></modifier></type><name pos:line="6" pos:column="36">a<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">= <expr><name><name pos:line="6" pos:column="40">e<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">attrs<pos:position pos:line="6" pos:column="48"/></name><index pos:line="6" pos:column="48">[<expr><name pos:line="6" pos:column="49">i<pos:position pos:line="6" pos:column="50"/></name></expr>]<pos:position pos:line="6" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">j<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
		<for pos:line="8" pos:column="17">for <control pos:line="8" pos:column="21">(<init><expr><name pos:line="8" pos:column="22">j<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></init> <condition><expr><name pos:line="8" pos:column="29">j<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&lt;<pos:position pos:line="8" pos:column="35"/></operator> <name><name pos:line="8" pos:column="33">a<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">num_attr<pos:position pos:line="8" pos:column="44"/></name></name></expr>;<pos:position pos:line="8" pos:column="45"/></condition> <incr><expr><name pos:line="8" pos:column="46">j<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">++<pos:position pos:line="8" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="50"/></control> <block pos:line="8" pos:column="51">{
			<decl_stmt><decl><type><specifier pos:line="9" pos:column="25">const<pos:position pos:line="9" pos:column="30"/></specifier> <name pos:line="9" pos:column="31">char<pos:position pos:line="9" pos:column="35"/></name> <modifier pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></modifier></type><name pos:line="9" pos:column="37">setto<pos:position pos:line="9" pos:column="42"/></name> <init pos:line="9" pos:column="43">= <expr><name><name pos:line="9" pos:column="45">a<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">state<pos:position pos:line="9" pos:column="53"/></name><index pos:line="9" pos:column="53">[<expr><name pos:line="9" pos:column="54">j<pos:position pos:line="9" pos:column="55"/></name></expr>]<pos:position pos:line="9" pos:column="56"/></index></name><operator pos:line="9" pos:column="56">.<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">setto<pos:position pos:line="9" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="63"/></decl_stmt>
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">setto<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">==<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">ATTR__TRUE<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">||<pos:position pos:line="10" pos:column="51"/></operator>
			    <name pos:line="11" pos:column="29">setto<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">==<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">ATTR__FALSE<pos:position pos:line="11" pos:column="49"/></name> <operator pos:line="11" pos:column="50">||<pos:position pos:line="11" pos:column="52"/></operator>
			    <name pos:line="12" pos:column="29">setto<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">ATTR__UNSET<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">||<pos:position pos:line="12" pos:column="52"/></operator>
			    <name pos:line="13" pos:column="29">setto<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">==<pos:position pos:line="13" pos:column="37"/></operator> <name pos:line="13" pos:column="38">ATTR__UNKNOWN<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
				<block type="pseudo"><empty_stmt pos:line="14" pos:column="33">;<pos:position pos:line="14" pos:column="34"/></empty_stmt></block></then>
			<else pos:line="15" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="33">free<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">(<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">char<pos:position pos:line="16" pos:column="43"/></name> <operator pos:line="16" pos:column="44">*<pos:position pos:line="16" pos:column="45"/></operator><operator pos:line="16" pos:column="45">)<pos:position pos:line="16" pos:column="46"/></operator> <name pos:line="16" pos:column="47">setto<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt></block></else></if>
		}<pos:position pos:line="17" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">free<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">a<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">free<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name><name pos:line="20" pos:column="14">e<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">attrs<pos:position pos:line="20" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">free<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">e<pos:position pos:line="21" pos:column="15"/></name></expr></argument>)<pos:position pos:line="21" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_163_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">send_ref<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">refname<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name><name pos:line="1" pos:column="48">struct<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">object_id<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">oid<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">flag<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">void<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">cb_data<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <name pos:line="4" pos:column="22">char<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">capabilities<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><literal type="string" pos:line="4" pos:column="43">"multi_ack thin-pack side-band"<pos:position pos:line="4" pos:column="74"/></literal>
		<literal type="string" pos:line="5" pos:column="17">" side-band-64k ofs-delta shallow deepen-since deepen-not"<pos:position pos:line="5" pos:column="75"/></literal>
		<literal type="string" pos:line="6" pos:column="17">" deepen-relative no-progress include-tag multi_ack_detailed"<pos:position pos:line="6" pos:column="78"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">refname_nons<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><call><name pos:line="7" pos:column="36">strip_namespace<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">(<argument><expr><name pos:line="7" pos:column="52">refname<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">object_id<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">peeled<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">mark_our_ref<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">refname_nons<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">refname<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">oid<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">capabilities<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">strbuf<pos:position pos:line="14" pos:column="30"/></name></name></type> <name pos:line="14" pos:column="31">symref_info<pos:position pos:line="14" pos:column="42"/></name> <init pos:line="14" pos:column="43">= <expr><name pos:line="14" pos:column="45">STRBUF_INIT<pos:position pos:line="14" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="57"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="16" pos:column="17">format_symref_info<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="37">symref_info<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">cb_data<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">packet_write_fmt<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="37">"%s %s%c%s%s%s%s%s agent=%s\n"<pos:position pos:line="17" pos:column="67"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="18" pos:column="30">oid_to_hex<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">oid<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">refname_nons<pos:position pos:line="18" pos:column="59"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">capabilities<pos:position pos:line="19" pos:column="45"/></name></expr></argument>,
			     <argument><expr><ternary><condition><expr><operator pos:line="20" pos:column="30">(<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="31">allow_unadvertised_object_request<pos:position pos:line="20" pos:column="64"/></name> <operator pos:line="20" pos:column="65">&amp;<pos:position pos:line="20" pos:column="70"/></operator> <name pos:line="20" pos:column="67">ALLOW_TIP_SHA1<pos:position pos:line="20" pos:column="81"/></name><operator pos:line="20" pos:column="81">)<pos:position pos:line="20" pos:column="82"/></operator></expr> ?<pos:position pos:line="20" pos:column="84"/></condition><then pos:line="20" pos:column="84">
				     <expr><literal type="string" pos:line="21" pos:column="38">" allow-tip-sha1-in-want"<pos:position pos:line="21" pos:column="63"/></literal></expr> <pos:position pos:line="21" pos:column="64"/></then><else pos:line="21" pos:column="64">: <expr><literal type="string" pos:line="21" pos:column="66">""<pos:position pos:line="21" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
			     <argument><expr><ternary><condition><expr><operator pos:line="22" pos:column="30">(<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">allow_unadvertised_object_request<pos:position pos:line="22" pos:column="64"/></name> <operator pos:line="22" pos:column="65">&amp;<pos:position pos:line="22" pos:column="70"/></operator> <name pos:line="22" pos:column="67">ALLOW_REACHABLE_SHA1<pos:position pos:line="22" pos:column="87"/></name><operator pos:line="22" pos:column="87">)<pos:position pos:line="22" pos:column="88"/></operator></expr> ?<pos:position pos:line="22" pos:column="90"/></condition><then pos:line="22" pos:column="90">
				     <expr><literal type="string" pos:line="23" pos:column="38">" allow-reachable-sha1-in-want"<pos:position pos:line="23" pos:column="69"/></literal></expr> <pos:position pos:line="23" pos:column="70"/></then><else pos:line="23" pos:column="70">: <expr><literal type="string" pos:line="23" pos:column="72">""<pos:position pos:line="23" pos:column="74"/></literal></expr></else></ternary></expr></argument>,
			     <argument><expr><ternary><condition><expr><name pos:line="24" pos:column="30">stateless_rpc<pos:position pos:line="24" pos:column="43"/></name></expr> ?<pos:position pos:line="24" pos:column="45"/></condition><then pos:line="24" pos:column="45"> <expr><literal type="string" pos:line="24" pos:column="46">" no-done"<pos:position pos:line="24" pos:column="56"/></literal></expr> <pos:position pos:line="24" pos:column="57"/></then><else pos:line="24" pos:column="57">: <expr><literal type="string" pos:line="24" pos:column="59">""<pos:position pos:line="24" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
			     <argument><expr><name><name pos:line="25" pos:column="30">symref_info<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">.<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="42">buf<pos:position pos:line="25" pos:column="45"/></name></name></expr></argument>,
			     <argument><expr><call><name pos:line="26" pos:column="30">git_user_agent_sanitized<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">()<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_release<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><operator pos:line="27" pos:column="32">&amp;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="33">symref_info<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">packet_write_fmt<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="37">"%s %s\n"<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="48">oid_to_hex<pos:position pos:line="29" pos:column="58"/></name><argument_list pos:line="29" pos:column="58">(<argument><expr><name pos:line="29" pos:column="59">oid<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">refname_nons<pos:position pos:line="29" pos:column="77"/></name></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="31" pos:column="9">capabilities<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">NULL<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">peel_ref<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">refname<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="32">peeled<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">.<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">hash<pos:position pos:line="32" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">packet_write_fmt<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><literal type="number" pos:line="33" pos:column="34">1<pos:position pos:line="33" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="37">"%s %s^{}\n"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="51">oid_to_hex<pos:position pos:line="33" pos:column="61"/></name><argument_list pos:line="33" pos:column="61">(<argument><expr><operator pos:line="33" pos:column="62">&amp;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="63">peeled<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="72">refname_nons<pos:position pos:line="33" pos:column="84"/></name></expr></argument>)<pos:position pos:line="33" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="86"/></expr_stmt></block></then></if>
	<return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1475_git-2.11.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_rename_score<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">cp_p<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">num<pos:position pos:line="3" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="28">scale<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ch<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">dot<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">cp<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">cp_p<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">num<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">scale<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">dot<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init pos:line="10" pos:column="14">;<pos:position pos:line="10" pos:column="15"/></init><condition pos:line="10" pos:column="15">;<pos:position pos:line="10" pos:column="16"/></condition><incr/>)<pos:position pos:line="10" pos:column="17"/></control> <block pos:line="10" pos:column="18">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">ch<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">cp<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">( <expr><operator pos:line="12" pos:column="22">!<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">dot<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&amp;&amp;<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="30">ch<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <literal type="char" pos:line="12" pos:column="36">'.'<pos:position pos:line="12" pos:column="39"/></literal></expr> )<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
			<expr_stmt><expr><name pos:line="13" pos:column="25">scale<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">dot<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">1<pos:position pos:line="14" pos:column="32"/></literal></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then> <elseif pos:line="15" pos:column="19">else <if pos:line="15" pos:column="24">if <condition pos:line="15" pos:column="27">( <expr><name pos:line="15" pos:column="29">ch<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">==<pos:position pos:line="15" pos:column="34"/></operator> <literal type="char" pos:line="15" pos:column="35">'%'<pos:position pos:line="15" pos:column="38"/></literal></expr> )<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">scale<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <ternary><condition><expr><name pos:line="16" pos:column="33">dot<pos:position pos:line="16" pos:column="36"/></name></expr> ?<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38"> <expr><name pos:line="16" pos:column="39">scale<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">*<pos:position pos:line="16" pos:column="45"/></operator><literal type="number" pos:line="16" pos:column="45">100<pos:position pos:line="16" pos:column="48"/></literal></expr> <pos:position pos:line="16" pos:column="49"/></then><else pos:line="16" pos:column="49">: <expr><literal type="number" pos:line="16" pos:column="51">100<pos:position pos:line="16" pos:column="54"/></literal></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">cp<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">++<pos:position pos:line="17" pos:column="29"/></operator></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>	<comment type="block" pos:line="17" pos:column="33">/* % is always at the end */</comment>
			<break pos:line="18" pos:column="25">break;<pos:position pos:line="18" pos:column="31"/></break>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif> <elseif pos:line="19" pos:column="19">else <if pos:line="19" pos:column="24">if <condition pos:line="19" pos:column="27">( <expr><name pos:line="19" pos:column="29">ch<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&gt;=<pos:position pos:line="19" pos:column="37"/></operator> <literal type="char" pos:line="19" pos:column="35">'0'<pos:position pos:line="19" pos:column="38"/></literal> <operator pos:line="19" pos:column="39">&amp;&amp;<pos:position pos:line="19" pos:column="49"/></operator> <name pos:line="19" pos:column="42">ch<pos:position pos:line="19" pos:column="44"/></name> <operator pos:line="19" pos:column="45">&lt;=<pos:position pos:line="19" pos:column="50"/></operator> <literal type="char" pos:line="19" pos:column="48">'9'<pos:position pos:line="19" pos:column="51"/></literal></expr> )<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53"> <block pos:line="19" pos:column="54">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">( <expr><name pos:line="20" pos:column="30">scale<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&lt;<pos:position pos:line="20" pos:column="40"/></operator> <literal type="number" pos:line="20" pos:column="38">100000<pos:position pos:line="20" pos:column="44"/></literal></expr> )<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46"> <block pos:line="20" pos:column="47">{
				<expr_stmt><expr><name pos:line="21" pos:column="33">scale<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">*=<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="42">10<pos:position pos:line="21" pos:column="44"/></literal></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><name pos:line="22" pos:column="33">num<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">=<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="39">(<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">num<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">*<pos:position pos:line="22" pos:column="44"/></operator><literal type="number" pos:line="22" pos:column="44">10<pos:position pos:line="22" pos:column="46"/></literal><operator pos:line="22" pos:column="46">)<pos:position pos:line="22" pos:column="47"/></operator> <operator pos:line="22" pos:column="48">+<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">(<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">ch<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">-<pos:position pos:line="22" pos:column="54"/></operator><literal type="char" pos:line="22" pos:column="54">'0'<pos:position pos:line="22" pos:column="57"/></literal><operator pos:line="22" pos:column="57">)<pos:position pos:line="22" pos:column="58"/></operator></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif> <else pos:line="24" pos:column="19">else <block pos:line="24" pos:column="24">{
			<break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="27" pos:column="17">cp<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">++<pos:position pos:line="27" pos:column="21"/></operator></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>
	<expr_stmt><expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">cp_p<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">cp<pos:position pos:line="29" pos:column="19"/></name></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>

	<comment type="block" pos:line="31" pos:column="9">/* user says num divided by scale and we say internally that
	 * is MAX_SCORE * num / scale.
	 */</comment>
	<return pos:line="34" pos:column="9">return <expr><call pos:line="34" pos:column="16">(<name pos:line="34" pos:column="17">int<pos:position pos:line="34" pos:column="20"/></name>)<argument_list pos:line="34" pos:column="21">(<argument><expr><ternary><condition><expr><operator pos:line="34" pos:column="22">(<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">num<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">&gt;=<pos:position pos:line="34" pos:column="32"/></operator> <name pos:line="34" pos:column="30">scale<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">)<pos:position pos:line="34" pos:column="36"/></operator></expr> ?<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <expr><name pos:line="34" pos:column="39">MAX_SCORE<pos:position pos:line="34" pos:column="48"/></name></expr> <pos:position pos:line="34" pos:column="49"/></then><else pos:line="34" pos:column="49">: <expr><operator pos:line="34" pos:column="51">(<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="52">MAX_SCORE<pos:position pos:line="34" pos:column="61"/></name> <operator pos:line="34" pos:column="62">*<pos:position pos:line="34" pos:column="63"/></operator> <name pos:line="34" pos:column="64">num<pos:position pos:line="34" pos:column="67"/></name> <operator pos:line="34" pos:column="68">/<pos:position pos:line="34" pos:column="69"/></operator> <name pos:line="34" pos:column="70">scale<pos:position pos:line="34" pos:column="75"/></name><operator pos:line="34" pos:column="75">)<pos:position pos:line="34" pos:column="76"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

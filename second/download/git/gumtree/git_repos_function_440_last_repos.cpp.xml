<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_440_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">diff_grep<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">mmfile_t<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">one<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">mmfile_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">two<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">diff_options<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">o<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
		     <parameter><decl><type><name pos:line="3" pos:column="22">regex_t<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">regexp<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="39">kwset_t<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">kws<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">regmatch_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">regmatch<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">diffgrep_cb<pos:position pos:line="6" pos:column="27"/></name></name></type> <name pos:line="6" pos:column="28">ecbdata<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">xpparam_t<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">xpp<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">xdemitconf_t<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">xecfg<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">one<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">!<pos:position pos:line="11" pos:column="25"/></operator><call><name pos:line="11" pos:column="25">regexec_buf<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">regexp<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="45">two<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">ptr<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="55">two<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">size<pos:position pos:line="11" pos:column="64"/></name></name></expr></argument>,
				    <argument><expr><literal type="number" pos:line="12" pos:column="37">1<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="40">&amp;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="41">regmatch<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></return></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">two<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">!<pos:position pos:line="14" pos:column="25"/></operator><call><name pos:line="14" pos:column="25">regexec_buf<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">regexp<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="45">one<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">ptr<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="55">one<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="60">size<pos:position pos:line="14" pos:column="64"/></name></name></expr></argument>,
				    <argument><expr><literal type="number" pos:line="15" pos:column="37">1<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="40">&amp;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="41">regmatch<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="51">0<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></return></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/*
	 * We have both sides; need to run textual diff and see if
	 * the pattern appears on added/deleted lines.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">memset<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="17">xpp<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="25">sizeof<argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">xpp<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">memset<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><operator pos:line="22" pos:column="16">&amp;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="17">xecfg<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="27">sizeof<argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">xecfg<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">ecbdata<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">regexp<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">regexp<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">ecbdata<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">.<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">hit<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">xecfg<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">ctxlen<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="24">o<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">context<pos:position pos:line="25" pos:column="34"/></name></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">xecfg<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">interhunkctxlen<pos:position pos:line="26" pos:column="30"/></name></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <name><name pos:line="26" pos:column="33">o<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">interhunkcontext<pos:position pos:line="26" pos:column="52"/></name></name></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">xdi_diff_outf<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">one<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">two<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">diffgrep_consume<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="55">&amp;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="56">ecbdata<pos:position pos:line="27" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="65">&amp;<pos:position pos:line="27" pos:column="70"/></operator><name pos:line="27" pos:column="66">xpp<pos:position pos:line="27" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="71">&amp;<pos:position pos:line="27" pos:column="76"/></operator><name pos:line="27" pos:column="72">xecfg<pos:position pos:line="27" pos:column="77"/></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="79"/></condition><then pos:line="27" pos:column="79">
		<block type="pseudo"><return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return></block></then></if>
	<return pos:line="29" pos:column="9">return <expr><name><name pos:line="29" pos:column="16">ecbdata<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">hit<pos:position pos:line="29" pos:column="27"/></name></name></expr>;<pos:position pos:line="29" pos:column="28"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2977_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">worktree<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">find_worktree_by_suffix<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">worktree<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">list<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
						<parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">suffix<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">worktree<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">found<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">NULL<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">nr_found<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="27">suffixlen<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">suffixlen<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">strlen<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">suffix<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">suffixlen<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init pos:line="11" pos:column="14">;<pos:position pos:line="11" pos:column="15"/></init> <condition><expr><operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">list<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&amp;&amp;<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="25">nr_found<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">&lt;<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="36">2<pos:position pos:line="11" pos:column="37"/></literal></expr>;<pos:position pos:line="11" pos:column="38"/></condition> <incr><expr><name pos:line="11" pos:column="39">list<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">++<pos:position pos:line="11" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="46"/></control> <block pos:line="11" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name>	<modifier pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></modifier></type><name pos:line="12" pos:column="34">path<pos:position pos:line="12" pos:column="38"/></name>	 <init pos:line="12" pos:column="42">= <expr><name><operator pos:line="12" pos:column="44">(<pos:position pos:line="12" pos:column="45"/></operator><operator pos:line="12" pos:column="45">*<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">list<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">)<pos:position pos:line="12" pos:column="51"/></operator><operator pos:line="12" pos:column="51">-&gt;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="53">path<pos:position pos:line="12" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type>		 <name pos:line="13" pos:column="34">pathlen<pos:position pos:line="13" pos:column="41"/></name> <init pos:line="13" pos:column="42">= <expr><call><name pos:line="13" pos:column="44">strlen<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">path<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type>		 <name pos:line="14" pos:column="34">start<pos:position pos:line="14" pos:column="39"/></name>	 <init pos:line="14" pos:column="42">= <expr><name pos:line="14" pos:column="44">pathlen<pos:position pos:line="14" pos:column="51"/></name> <operator pos:line="14" pos:column="52">-<pos:position pos:line="14" pos:column="53"/></operator> <name pos:line="14" pos:column="54">suffixlen<pos:position pos:line="14" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="64"/></decl_stmt>

		<comment type="block" pos:line="16" pos:column="17">/* suffix must start at directory boundary */</comment>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">!<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">start<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">||<pos:position pos:line="17" pos:column="31"/></operator> <operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">start<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">&gt;<pos:position pos:line="17" pos:column="43"/></operator> <literal type="number" pos:line="17" pos:column="41">0<pos:position pos:line="17" pos:column="42"/></literal> <operator pos:line="17" pos:column="43">&amp;&amp;<pos:position pos:line="17" pos:column="53"/></operator> <call><name pos:line="17" pos:column="46">is_dir_sep<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">(<argument><expr><name><name pos:line="17" pos:column="57">path<pos:position pos:line="17" pos:column="61"/></name><index pos:line="17" pos:column="61">[<expr><name pos:line="17" pos:column="62">start<pos:position pos:line="17" pos:column="67"/></name> <operator pos:line="17" pos:column="68">-<pos:position pos:line="17" pos:column="69"/></operator> <literal type="number" pos:line="17" pos:column="70">1<pos:position pos:line="17" pos:column="71"/></literal></expr>]<pos:position pos:line="17" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call><operator pos:line="17" pos:column="73">)<pos:position pos:line="17" pos:column="74"/></operator><operator pos:line="17" pos:column="74">)<pos:position pos:line="17" pos:column="75"/></operator> <operator pos:line="17" pos:column="76">&amp;&amp;<pos:position pos:line="17" pos:column="86"/></operator>
		    <operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">fspathcmp<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">suffix<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">path<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">+<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="47">start<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <block pos:line="18" pos:column="55">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">found<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">list<pos:position pos:line="19" pos:column="38"/></name></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">nr_found<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">++<pos:position pos:line="20" pos:column="35"/></operator></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></for>
	<return pos:line="23" pos:column="9">return <expr><ternary><condition><expr><name pos:line="23" pos:column="16">nr_found<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">==<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="28">1<pos:position pos:line="23" pos:column="29"/></literal></expr> ?<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <expr><name pos:line="23" pos:column="32">found<pos:position pos:line="23" pos:column="37"/></name></expr> <pos:position pos:line="23" pos:column="38"/></then><else pos:line="23" pos:column="38">: <expr><name pos:line="23" pos:column="40">NULL<pos:position pos:line="23" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="45"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

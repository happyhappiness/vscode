<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2655_git-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_zip_entry<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">archiver_args<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">args<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">sha1<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">path<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="46">size_t<pos:position pos:line="3" pos:column="52"/></name></type> <name pos:line="3" pos:column="53">pathlen<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="4" pos:column="28">unsigned<pos:position pos:line="4" pos:column="36"/></name> <name pos:line="4" pos:column="37">int<pos:position pos:line="4" pos:column="40"/></name></type> <name pos:line="4" pos:column="41">mode<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="46"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">zip_local_header<pos:position pos:line="6" pos:column="32"/></name></name></type> <name pos:line="6" pos:column="33">header<pos:position pos:line="6" pos:column="39"/></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">zip_dir_header<pos:position pos:line="7" pos:column="30"/></name></name></type> <name pos:line="7" pos:column="31">dirent<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">zip_extra_mtime<pos:position pos:line="8" pos:column="31"/></name></name></type> <name pos:line="8" pos:column="32">extra<pos:position pos:line="8" pos:column="37"/></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">long<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">attr2<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">long<pos:position pos:line="10" pos:column="22"/></name></type> <name pos:line="10" pos:column="23">compressed_size<pos:position pos:line="10" pos:column="38"/></name></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">long<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">crc<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name> <name pos:line="12" pos:column="18">long<pos:position pos:line="12" pos:column="22"/></name></type> <name pos:line="12" pos:column="23">direntsize<pos:position pos:line="12" pos:column="33"/></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">method<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">unsigned<pos:position pos:line="14" pos:column="17"/></name> <name pos:line="14" pos:column="18">char<pos:position pos:line="14" pos:column="22"/></name> <modifier pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></modifier></type><name pos:line="14" pos:column="24">out<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">void<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">deflated<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><name pos:line="15" pos:column="26">NULL<pos:position pos:line="15" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">void<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">buffer<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">git_istream<pos:position pos:line="17" pos:column="27"/></name></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">stream<pos:position pos:line="17" pos:column="35"/></name> <init pos:line="17" pos:column="36">= <expr><name pos:line="17" pos:column="38">NULL<pos:position pos:line="17" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">unsigned<pos:position pos:line="18" pos:column="17"/></name> <name pos:line="18" pos:column="18">long<pos:position pos:line="18" pos:column="22"/></name></type> <name pos:line="18" pos:column="23">flags<pos:position pos:line="18" pos:column="28"/></name> <init pos:line="18" pos:column="29">= <expr><literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">unsigned<pos:position pos:line="19" pos:column="17"/></name> <name pos:line="19" pos:column="18">long<pos:position pos:line="19" pos:column="22"/></name></type> <name pos:line="19" pos:column="23">size<pos:position pos:line="19" pos:column="27"/></name></decl>;<pos:position pos:line="19" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">is_binary<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="21" pos:column="9">const<pos:position pos:line="21" pos:column="14"/></specifier> <name pos:line="21" pos:column="15">char<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">path_without_prefix<pos:position pos:line="21" pos:column="40"/></name> <init pos:line="21" pos:column="41">= <expr><name pos:line="21" pos:column="43">path<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">+<pos:position pos:line="21" pos:column="49"/></operator> <name><name pos:line="21" pos:column="50">args<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">-&gt;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="56">baselen<pos:position pos:line="21" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">unsigned<pos:position pos:line="22" pos:column="17"/></name> <name pos:line="22" pos:column="18">int<pos:position pos:line="22" pos:column="21"/></name></type> <name pos:line="22" pos:column="22">creator_version<pos:position pos:line="22" pos:column="37"/></name> <init pos:line="22" pos:column="38">= <expr><literal type="number" pos:line="22" pos:column="40">0<pos:position pos:line="22" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">crc<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">crc32<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><call><name pos:line="26" pos:column="14">has_only_ascii<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">path<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block pos:line="26" pos:column="36">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">is_utf8<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">path<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">flags<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">|=<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="34">ZIP_UTF8<pos:position pos:line="28" pos:column="42"/></name></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt></block></then>
		<else pos:line="29" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">warning<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><literal type="string" pos:line="30" pos:column="33">"Path is not valid UTF-8: %s"<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="64">path<pos:position pos:line="30" pos:column="68"/></name></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt></block></else></if>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">pathlen<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">&gt;<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="23">0xffff<pos:position pos:line="33" pos:column="29"/></literal></expr>)<pos:position pos:line="33" pos:column="30"/></condition><then pos:line="33" pos:column="30"> <block pos:line="33" pos:column="31">{
		<return pos:line="34" pos:column="17">return <expr><call><name pos:line="34" pos:column="24">error<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><literal type="string" pos:line="34" pos:column="30">"path too long (%d chars, SHA1: %s): %s"<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>,
				<argument><expr><operator pos:line="35" pos:column="33">(<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">int<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">)<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">pathlen<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="47">sha1_to_hex<pos:position pos:line="35" pos:column="58"/></name><argument_list pos:line="35" pos:column="58">(<argument><expr><name pos:line="35" pos:column="59">sha1<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="66">path<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="72"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">S_ISDIR<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">mode<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call> <operator pos:line="38" pos:column="27">||<pos:position pos:line="38" pos:column="29"/></operator> <call><name pos:line="38" pos:column="30">S_ISGITLINK<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">mode<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="48"/></condition><then pos:line="38" pos:column="48"> <block pos:line="38" pos:column="49">{
		<expr_stmt><expr><name pos:line="39" pos:column="17">method<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">attr2<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <literal type="number" pos:line="40" pos:column="25">16<pos:position pos:line="40" pos:column="27"/></literal></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">out<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">NULL<pos:position pos:line="41" pos:column="27"/></name></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">size<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <literal type="number" pos:line="42" pos:column="24">0<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">compressed_size<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">=<pos:position pos:line="43" pos:column="34"/></operator> <literal type="number" pos:line="43" pos:column="35">0<pos:position pos:line="43" pos:column="36"/></literal></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">buffer<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">NULL<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then> <elseif pos:line="45" pos:column="11">else <if pos:line="45" pos:column="16">if <condition pos:line="45" pos:column="19">(<expr><call><name pos:line="45" pos:column="20">S_ISREG<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">mode<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call> <operator pos:line="45" pos:column="34">||<pos:position pos:line="45" pos:column="36"/></operator> <call><name pos:line="45" pos:column="37">S_ISLNK<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><name pos:line="45" pos:column="45">mode<pos:position pos:line="45" pos:column="49"/></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="51"/></condition><then pos:line="45" pos:column="51"> <block pos:line="45" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="46" pos:column="17">enum<pos:position pos:line="46" pos:column="21"/></name> <name pos:line="46" pos:column="22">object_type<pos:position pos:line="46" pos:column="33"/></name></name></type> <name pos:line="46" pos:column="34">type<pos:position pos:line="46" pos:column="38"/></name> <init pos:line="46" pos:column="39">= <expr><call><name pos:line="46" pos:column="41">sha1_object_info<pos:position pos:line="46" pos:column="57"/></name><argument_list pos:line="46" pos:column="57">(<argument><expr><name pos:line="46" pos:column="58">sha1<pos:position pos:line="46" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="64">&amp;<pos:position pos:line="46" pos:column="69"/></operator><name pos:line="46" pos:column="65">size<pos:position pos:line="46" pos:column="69"/></name></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="71"/></decl_stmt>

		<expr_stmt><expr><name pos:line="48" pos:column="17">method<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">attr2<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <ternary><condition><expr><call><name pos:line="49" pos:column="25">S_ISLNK<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">mode<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40"> <expr><operator pos:line="49" pos:column="41">(<pos:position pos:line="49" pos:column="42"/></operator><operator pos:line="49" pos:column="42">(<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="43">mode<pos:position pos:line="49" pos:column="47"/></name> <operator pos:line="49" pos:column="48">|<pos:position pos:line="49" pos:column="49"/></operator> <literal type="number" pos:line="49" pos:column="50">0777<pos:position pos:line="49" pos:column="54"/></literal><operator pos:line="49" pos:column="54">)<pos:position pos:line="49" pos:column="55"/></operator> <operator pos:line="49" pos:column="56">&lt;&lt;<pos:position pos:line="49" pos:column="64"/></operator> <literal type="number" pos:line="49" pos:column="59">16<pos:position pos:line="49" pos:column="61"/></literal><operator pos:line="49" pos:column="61">)<pos:position pos:line="49" pos:column="62"/></operator></expr> <pos:position pos:line="49" pos:column="63"/></then><else pos:line="49" pos:column="63">:
			<expr><ternary><condition><expr><operator pos:line="50" pos:column="25">(<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">mode<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">&amp;<pos:position pos:line="50" pos:column="36"/></operator> <literal type="number" pos:line="50" pos:column="33">0111<pos:position pos:line="50" pos:column="37"/></literal><operator pos:line="50" pos:column="37">)<pos:position pos:line="50" pos:column="38"/></operator></expr> ?<pos:position pos:line="50" pos:column="40"/></condition><then pos:line="50" pos:column="40"> <expr><operator pos:line="50" pos:column="41">(<pos:position pos:line="50" pos:column="42"/></operator><operator pos:line="50" pos:column="42">(<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="43">mode<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">)<pos:position pos:line="50" pos:column="48"/></operator> <operator pos:line="50" pos:column="49">&lt;&lt;<pos:position pos:line="50" pos:column="57"/></operator> <literal type="number" pos:line="50" pos:column="52">16<pos:position pos:line="50" pos:column="54"/></literal><operator pos:line="50" pos:column="54">)<pos:position pos:line="50" pos:column="55"/></operator></expr> <pos:position pos:line="50" pos:column="56"/></then><else pos:line="50" pos:column="56">: <expr><literal type="number" pos:line="50" pos:column="58">0<pos:position pos:line="50" pos:column="59"/></literal></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name pos:line="51" pos:column="21">S_ISLNK<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">mode<pos:position pos:line="51" pos:column="33"/></name></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call> <operator pos:line="51" pos:column="35">||<pos:position pos:line="51" pos:column="37"/></operator> <operator pos:line="51" pos:column="38">(<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">mode<pos:position pos:line="51" pos:column="43"/></name> <operator pos:line="51" pos:column="44">&amp;<pos:position pos:line="51" pos:column="49"/></operator> <literal type="number" pos:line="51" pos:column="46">0111<pos:position pos:line="51" pos:column="50"/></literal><operator pos:line="51" pos:column="50">)<pos:position pos:line="51" pos:column="51"/></operator></expr>)<pos:position pos:line="51" pos:column="52"/></condition><then pos:line="51" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="25">creator_version<pos:position pos:line="52" pos:column="40"/></name> <operator pos:line="52" pos:column="41">=<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">0x0317<pos:position pos:line="52" pos:column="49"/></literal></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt></block></then></if>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">S_ISREG<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">mode<pos:position pos:line="53" pos:column="33"/></name></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call> <operator pos:line="53" pos:column="35">&amp;&amp;<pos:position pos:line="53" pos:column="45"/></operator> <name><name pos:line="53" pos:column="38">args<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">-&gt;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="44">compression_level<pos:position pos:line="53" pos:column="61"/></name></name> <operator pos:line="53" pos:column="62">!=<pos:position pos:line="53" pos:column="64"/></operator> <literal type="number" pos:line="53" pos:column="65">0<pos:position pos:line="53" pos:column="66"/></literal> <operator pos:line="53" pos:column="67">&amp;&amp;<pos:position pos:line="53" pos:column="77"/></operator> <name pos:line="53" pos:column="70">size<pos:position pos:line="53" pos:column="74"/></name> <operator pos:line="53" pos:column="75">&gt;<pos:position pos:line="53" pos:column="79"/></operator> <literal type="number" pos:line="53" pos:column="77">0<pos:position pos:line="53" pos:column="78"/></literal></expr>)<pos:position pos:line="53" pos:column="79"/></condition><then pos:line="53" pos:column="79">
			<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="25">method<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <literal type="number" pos:line="54" pos:column="34">8<pos:position pos:line="54" pos:column="35"/></literal></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><call><name pos:line="56" pos:column="21">S_ISREG<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">mode<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call> <operator pos:line="56" pos:column="35">&amp;&amp;<pos:position pos:line="56" pos:column="45"/></operator> <name pos:line="56" pos:column="38">type<pos:position pos:line="56" pos:column="42"/></name> <operator pos:line="56" pos:column="43">==<pos:position pos:line="56" pos:column="45"/></operator> <name pos:line="56" pos:column="46">OBJ_BLOB<pos:position pos:line="56" pos:column="54"/></name> <operator pos:line="56" pos:column="55">&amp;&amp;<pos:position pos:line="56" pos:column="65"/></operator> <operator pos:line="56" pos:column="58">!<pos:position pos:line="56" pos:column="59"/></operator><name><name pos:line="56" pos:column="59">args<pos:position pos:line="56" pos:column="63"/></name><operator pos:line="56" pos:column="63">-&gt;<pos:position pos:line="56" pos:column="68"/></operator><name pos:line="56" pos:column="65">convert<pos:position pos:line="56" pos:column="72"/></name></name> <operator pos:line="56" pos:column="73">&amp;&amp;<pos:position pos:line="56" pos:column="83"/></operator>
		    <name pos:line="57" pos:column="21">size<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">&gt;<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="28">big_file_threshold<pos:position pos:line="57" pos:column="46"/></name></expr>)<pos:position pos:line="57" pos:column="47"/></condition><then pos:line="57" pos:column="47"> <block pos:line="57" pos:column="48">{
			<expr_stmt><expr><name pos:line="58" pos:column="25">stream<pos:position pos:line="58" pos:column="31"/></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <call><name pos:line="58" pos:column="34">open_istream<pos:position pos:line="58" pos:column="46"/></name><argument_list pos:line="58" pos:column="46">(<argument><expr><name pos:line="58" pos:column="47">sha1<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="53">&amp;<pos:position pos:line="58" pos:column="58"/></operator><name pos:line="58" pos:column="54">type<pos:position pos:line="58" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="60">&amp;<pos:position pos:line="58" pos:column="65"/></operator><name pos:line="58" pos:column="61">size<pos:position pos:line="58" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="67">NULL<pos:position pos:line="58" pos:column="71"/></name></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt>
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><operator pos:line="59" pos:column="29">!<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="30">stream<pos:position pos:line="59" pos:column="36"/></name></expr>)<pos:position pos:line="59" pos:column="37"/></condition><then pos:line="59" pos:column="37">
				<block type="pseudo"><return pos:line="60" pos:column="33">return <expr><call><name pos:line="60" pos:column="40">error<pos:position pos:line="60" pos:column="45"/></name><argument_list pos:line="60" pos:column="45">(<argument><expr><literal type="string" pos:line="60" pos:column="46">"cannot stream blob %s"<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>,
					     <argument><expr><call><name pos:line="61" pos:column="46">sha1_to_hex<pos:position pos:line="61" pos:column="57"/></name><argument_list pos:line="61" pos:column="57">(<argument><expr><name pos:line="61" pos:column="58">sha1<pos:position pos:line="61" pos:column="62"/></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="65"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="62" pos:column="25">flags<pos:position pos:line="62" pos:column="30"/></name> <operator pos:line="62" pos:column="31">|=<pos:position pos:line="62" pos:column="33"/></operator> <name pos:line="62" pos:column="34">ZIP_STREAM<pos:position pos:line="62" pos:column="44"/></name></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="63" pos:column="25">out<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">buffer<pos:position pos:line="63" pos:column="37"/></name> <operator pos:line="63" pos:column="38">=<pos:position pos:line="63" pos:column="39"/></operator> <name pos:line="63" pos:column="40">NULL<pos:position pos:line="63" pos:column="44"/></name></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then> <else pos:line="64" pos:column="19">else <block pos:line="64" pos:column="24">{
			<expr_stmt><expr><name pos:line="65" pos:column="25">buffer<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">=<pos:position pos:line="65" pos:column="33"/></operator> <call><name pos:line="65" pos:column="34">sha1_file_to_archive<pos:position pos:line="65" pos:column="54"/></name><argument_list pos:line="65" pos:column="54">(<argument><expr><name pos:line="65" pos:column="55">args<pos:position pos:line="65" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="61">path<pos:position pos:line="65" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="67">sha1<pos:position pos:line="65" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="73">mode<pos:position pos:line="65" pos:column="77"/></name></expr></argument>,
						      <argument><expr><operator pos:line="66" pos:column="55">&amp;<pos:position pos:line="66" pos:column="60"/></operator><name pos:line="66" pos:column="56">type<pos:position pos:line="66" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="62">&amp;<pos:position pos:line="66" pos:column="67"/></operator><name pos:line="66" pos:column="63">size<pos:position pos:line="66" pos:column="67"/></name></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="69"/></expr_stmt>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">buffer<pos:position pos:line="67" pos:column="36"/></name></expr>)<pos:position pos:line="67" pos:column="37"/></condition><then pos:line="67" pos:column="37">
				<block type="pseudo"><return pos:line="68" pos:column="33">return <expr><call><name pos:line="68" pos:column="40">error<pos:position pos:line="68" pos:column="45"/></name><argument_list pos:line="68" pos:column="45">(<argument><expr><literal type="string" pos:line="68" pos:column="46">"cannot read %s"<pos:position pos:line="68" pos:column="62"/></literal></expr></argument>,
					     <argument><expr><call><name pos:line="69" pos:column="46">sha1_to_hex<pos:position pos:line="69" pos:column="57"/></name><argument_list pos:line="69" pos:column="57">(<argument><expr><name pos:line="69" pos:column="58">sha1<pos:position pos:line="69" pos:column="62"/></name></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="65"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="70" pos:column="25">crc<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <call><name pos:line="70" pos:column="31">crc32<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><name pos:line="70" pos:column="37">crc<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">buffer<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="50">size<pos:position pos:line="70" pos:column="54"/></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">is_binary<pos:position pos:line="71" pos:column="34"/></name> <operator pos:line="71" pos:column="35">=<pos:position pos:line="71" pos:column="36"/></operator> <call><name pos:line="71" pos:column="37">entry_is_binary<pos:position pos:line="71" pos:column="52"/></name><argument_list pos:line="71" pos:column="52">(<argument><expr><name pos:line="71" pos:column="53">path_without_prefix<pos:position pos:line="71" pos:column="72"/></name></expr></argument>,
						    <argument><expr><name pos:line="72" pos:column="53">buffer<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="61">size<pos:position pos:line="72" pos:column="65"/></name></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name pos:line="73" pos:column="25">out<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">buffer<pos:position pos:line="73" pos:column="37"/></name></expr>;<pos:position pos:line="73" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="75" pos:column="17">compressed_size<pos:position pos:line="75" pos:column="32"/></name> <operator pos:line="75" pos:column="33">=<pos:position pos:line="75" pos:column="34"/></operator> <ternary><condition><expr><operator pos:line="75" pos:column="35">(<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="36">method<pos:position pos:line="75" pos:column="42"/></name> <operator pos:line="75" pos:column="43">==<pos:position pos:line="75" pos:column="45"/></operator> <literal type="number" pos:line="75" pos:column="46">0<pos:position pos:line="75" pos:column="47"/></literal><operator pos:line="75" pos:column="47">)<pos:position pos:line="75" pos:column="48"/></operator></expr> ?<pos:position pos:line="75" pos:column="50"/></condition><then pos:line="75" pos:column="50"> <expr><name pos:line="75" pos:column="51">size<pos:position pos:line="75" pos:column="55"/></name></expr> <pos:position pos:line="75" pos:column="56"/></then><else pos:line="75" pos:column="56">: <expr><literal type="number" pos:line="75" pos:column="58">0<pos:position pos:line="75" pos:column="59"/></literal></expr></else></ternary></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if></elseif> <else pos:line="76" pos:column="11">else <block pos:line="76" pos:column="16">{
		<return pos:line="77" pos:column="17">return <expr><call><name pos:line="77" pos:column="24">error<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><literal type="string" pos:line="77" pos:column="30">"unsupported file mode: 0%o (SHA1: %s)"<pos:position pos:line="77" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="71">mode<pos:position pos:line="77" pos:column="75"/></name></expr></argument>,
				<argument><expr><call><name pos:line="78" pos:column="33">sha1_to_hex<pos:position pos:line="78" pos:column="44"/></name><argument_list pos:line="78" pos:column="44">(<argument><expr><name pos:line="78" pos:column="45">sha1<pos:position pos:line="78" pos:column="49"/></name></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="52"/></return>
	}<pos:position pos:line="79" pos:column="10"/></block></else></if>

	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">creator_version<pos:position pos:line="81" pos:column="28"/></name> <operator pos:line="81" pos:column="29">&gt;<pos:position pos:line="81" pos:column="33"/></operator> <name pos:line="81" pos:column="31">max_creator_version<pos:position pos:line="81" pos:column="50"/></name></expr>)<pos:position pos:line="81" pos:column="51"/></condition><then pos:line="81" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="17">max_creator_version<pos:position pos:line="82" pos:column="36"/></name> <operator pos:line="82" pos:column="37">=<pos:position pos:line="82" pos:column="38"/></operator> <name pos:line="82" pos:column="39">creator_version<pos:position pos:line="82" pos:column="54"/></name></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">buffer<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">&amp;&amp;<pos:position pos:line="84" pos:column="30"/></operator> <name pos:line="84" pos:column="23">method<pos:position pos:line="84" pos:column="29"/></name> <operator pos:line="84" pos:column="30">==<pos:position pos:line="84" pos:column="32"/></operator> <literal type="number" pos:line="84" pos:column="33">8<pos:position pos:line="84" pos:column="34"/></literal></expr>)<pos:position pos:line="84" pos:column="35"/></condition><then pos:line="84" pos:column="35"> <block pos:line="84" pos:column="36">{
		<expr_stmt><expr><name pos:line="85" pos:column="17">out<pos:position pos:line="85" pos:column="20"/></name> <operator pos:line="85" pos:column="21">=<pos:position pos:line="85" pos:column="22"/></operator> <name pos:line="85" pos:column="23">deflated<pos:position pos:line="85" pos:column="31"/></name> <operator pos:line="85" pos:column="32">=<pos:position pos:line="85" pos:column="33"/></operator> <call><name pos:line="85" pos:column="34">zlib_deflate_raw<pos:position pos:line="85" pos:column="50"/></name><argument_list pos:line="85" pos:column="50">(<argument><expr><name pos:line="85" pos:column="51">buffer<pos:position pos:line="85" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="59">size<pos:position pos:line="85" pos:column="63"/></name></expr></argument>,
						  <argument><expr><name><name pos:line="86" pos:column="51">args<pos:position pos:line="86" pos:column="55"/></name><operator pos:line="86" pos:column="55">-&gt;<pos:position pos:line="86" pos:column="60"/></operator><name pos:line="86" pos:column="57">compression_level<pos:position pos:line="86" pos:column="74"/></name></name></expr></argument>,
						  <argument><expr><operator pos:line="87" pos:column="51">&amp;<pos:position pos:line="87" pos:column="56"/></operator><name pos:line="87" pos:column="52">compressed_size<pos:position pos:line="87" pos:column="67"/></name></expr></argument>)<pos:position pos:line="87" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="69"/></expr_stmt>
		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><operator pos:line="88" pos:column="21">!<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="22">out<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">||<pos:position pos:line="88" pos:column="28"/></operator> <name pos:line="88" pos:column="29">compressed_size<pos:position pos:line="88" pos:column="44"/></name> <operator pos:line="88" pos:column="45">&gt;=<pos:position pos:line="88" pos:column="50"/></operator> <name pos:line="88" pos:column="48">size<pos:position pos:line="88" pos:column="52"/></name></expr>)<pos:position pos:line="88" pos:column="53"/></condition><then pos:line="88" pos:column="53"> <block pos:line="88" pos:column="54">{
			<expr_stmt><expr><name pos:line="89" pos:column="25">out<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">=<pos:position pos:line="89" pos:column="30"/></operator> <name pos:line="89" pos:column="31">buffer<pos:position pos:line="89" pos:column="37"/></name></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="90" pos:column="25">method<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">=<pos:position pos:line="90" pos:column="33"/></operator> <literal type="number" pos:line="90" pos:column="34">0<pos:position pos:line="90" pos:column="35"/></literal></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="91" pos:column="25">compressed_size<pos:position pos:line="91" pos:column="40"/></name> <operator pos:line="91" pos:column="41">=<pos:position pos:line="91" pos:column="42"/></operator> <name pos:line="91" pos:column="43">size<pos:position pos:line="91" pos:column="47"/></name></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="92" pos:column="18"/></block></then></if>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="95" pos:column="9">copy_le16<pos:position pos:line="95" pos:column="18"/></name><argument_list pos:line="95" pos:column="18">(<argument><expr><name><name pos:line="95" pos:column="19">extra<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">.<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="25">magic<pos:position pos:line="95" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="32">0x5455<pos:position pos:line="95" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">copy_le16<pos:position pos:line="96" pos:column="18"/></name><argument_list pos:line="96" pos:column="18">(<argument><expr><name><name pos:line="96" pos:column="19">extra<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">.<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="25">extra_size<pos:position pos:line="96" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="37">ZIP_EXTRA_MTIME_PAYLOAD_SIZE<pos:position pos:line="96" pos:column="65"/></name></expr></argument>)<pos:position pos:line="96" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="97" pos:column="9">extra<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">.<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">flags<pos:position pos:line="97" pos:column="20"/></name><index pos:line="97" pos:column="20">[<expr><literal type="number" pos:line="97" pos:column="21">0<pos:position pos:line="97" pos:column="22"/></literal></expr>]<pos:position pos:line="97" pos:column="23"/></index></name> <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <literal type="number" pos:line="97" pos:column="26">1<pos:position pos:line="97" pos:column="27"/></literal></expr>;<pos:position pos:line="97" pos:column="28"/></expr_stmt>	<comment type="block" pos:line="97" pos:column="33">/* just mtime */</comment>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">copy_le32<pos:position pos:line="98" pos:column="18"/></name><argument_list pos:line="98" pos:column="18">(<argument><expr><name><name pos:line="98" pos:column="19">extra<pos:position pos:line="98" pos:column="24"/></name><operator pos:line="98" pos:column="24">.<pos:position pos:line="98" pos:column="25"/></operator><name pos:line="98" pos:column="25">mtime<pos:position pos:line="98" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="32">args<pos:position pos:line="98" pos:column="36"/></name><operator pos:line="98" pos:column="36">-&gt;<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="38">time<pos:position pos:line="98" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="44"/></expr_stmt>

	<comment type="block" pos:line="100" pos:column="9">/* make sure we have enough free space in the dictionary */</comment>
	<expr_stmt><expr><name pos:line="101" pos:column="9">direntsize<pos:position pos:line="101" pos:column="19"/></name> <operator pos:line="101" pos:column="20">=<pos:position pos:line="101" pos:column="21"/></operator> <name pos:line="101" pos:column="22">ZIP_DIR_HEADER_SIZE<pos:position pos:line="101" pos:column="41"/></name> <operator pos:line="101" pos:column="42">+<pos:position pos:line="101" pos:column="43"/></operator> <name pos:line="101" pos:column="44">pathlen<pos:position pos:line="101" pos:column="51"/></name> <operator pos:line="101" pos:column="52">+<pos:position pos:line="101" pos:column="53"/></operator> <name pos:line="101" pos:column="54">ZIP_EXTRA_MTIME_SIZE<pos:position pos:line="101" pos:column="74"/></name></expr>;<pos:position pos:line="101" pos:column="75"/></expr_stmt>
	<while pos:line="102" pos:column="9">while <condition pos:line="102" pos:column="15">(<expr><name pos:line="102" pos:column="16">zip_dir_size<pos:position pos:line="102" pos:column="28"/></name> <operator pos:line="102" pos:column="29">&lt;<pos:position pos:line="102" pos:column="33"/></operator> <name pos:line="102" pos:column="31">zip_dir_offset<pos:position pos:line="102" pos:column="45"/></name> <operator pos:line="102" pos:column="46">+<pos:position pos:line="102" pos:column="47"/></operator> <name pos:line="102" pos:column="48">direntsize<pos:position pos:line="102" pos:column="58"/></name></expr>)<pos:position pos:line="102" pos:column="59"/></condition> <block pos:line="102" pos:column="60">{
		<expr_stmt><expr><name pos:line="103" pos:column="17">zip_dir_size<pos:position pos:line="103" pos:column="29"/></name> <operator pos:line="103" pos:column="30">+=<pos:position pos:line="103" pos:column="32"/></operator> <name pos:line="103" pos:column="33">ZIP_DIRECTORY_MIN_SIZE<pos:position pos:line="103" pos:column="55"/></name></expr>;<pos:position pos:line="103" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="104" pos:column="17">zip_dir<pos:position pos:line="104" pos:column="24"/></name> <operator pos:line="104" pos:column="25">=<pos:position pos:line="104" pos:column="26"/></operator> <call><name pos:line="104" pos:column="27">xrealloc<pos:position pos:line="104" pos:column="35"/></name><argument_list pos:line="104" pos:column="35">(<argument><expr><name pos:line="104" pos:column="36">zip_dir<pos:position pos:line="104" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="45">zip_dir_size<pos:position pos:line="104" pos:column="57"/></name></expr></argument>)<pos:position pos:line="104" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="105" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="107" pos:column="9">copy_le32<pos:position pos:line="107" pos:column="18"/></name><argument_list pos:line="107" pos:column="18">(<argument><expr><name><name pos:line="107" pos:column="19">dirent<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">.<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="26">magic<pos:position pos:line="107" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="33">0x02014b50<pos:position pos:line="107" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="108" pos:column="9">copy_le16<pos:position pos:line="108" pos:column="18"/></name><argument_list pos:line="108" pos:column="18">(<argument><expr><name><name pos:line="108" pos:column="19">dirent<pos:position pos:line="108" pos:column="25"/></name><operator pos:line="108" pos:column="25">.<pos:position pos:line="108" pos:column="26"/></operator><name pos:line="108" pos:column="26">creator_version<pos:position pos:line="108" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="43">creator_version<pos:position pos:line="108" pos:column="58"/></name></expr></argument>)<pos:position pos:line="108" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="109" pos:column="9">copy_le16<pos:position pos:line="109" pos:column="18"/></name><argument_list pos:line="109" pos:column="18">(<argument><expr><name><name pos:line="109" pos:column="19">dirent<pos:position pos:line="109" pos:column="25"/></name><operator pos:line="109" pos:column="25">.<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="26">version<pos:position pos:line="109" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="35">10<pos:position pos:line="109" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="110" pos:column="9">copy_le16<pos:position pos:line="110" pos:column="18"/></name><argument_list pos:line="110" pos:column="18">(<argument><expr><name><name pos:line="110" pos:column="19">dirent<pos:position pos:line="110" pos:column="25"/></name><operator pos:line="110" pos:column="25">.<pos:position pos:line="110" pos:column="26"/></operator><name pos:line="110" pos:column="26">flags<pos:position pos:line="110" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="33">flags<pos:position pos:line="110" pos:column="38"/></name></expr></argument>)<pos:position pos:line="110" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="111" pos:column="9">copy_le16<pos:position pos:line="111" pos:column="18"/></name><argument_list pos:line="111" pos:column="18">(<argument><expr><name><name pos:line="111" pos:column="19">dirent<pos:position pos:line="111" pos:column="25"/></name><operator pos:line="111" pos:column="25">.<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="26">compression_method<pos:position pos:line="111" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="46">method<pos:position pos:line="111" pos:column="52"/></name></expr></argument>)<pos:position pos:line="111" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="112" pos:column="9">copy_le16<pos:position pos:line="112" pos:column="18"/></name><argument_list pos:line="112" pos:column="18">(<argument><expr><name><name pos:line="112" pos:column="19">dirent<pos:position pos:line="112" pos:column="25"/></name><operator pos:line="112" pos:column="25">.<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="26">mtime<pos:position pos:line="112" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="33">zip_time<pos:position pos:line="112" pos:column="41"/></name></expr></argument>)<pos:position pos:line="112" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="113" pos:column="9">copy_le16<pos:position pos:line="113" pos:column="18"/></name><argument_list pos:line="113" pos:column="18">(<argument><expr><name><name pos:line="113" pos:column="19">dirent<pos:position pos:line="113" pos:column="25"/></name><operator pos:line="113" pos:column="25">.<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="26">mdate<pos:position pos:line="113" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="33">zip_date<pos:position pos:line="113" pos:column="41"/></name></expr></argument>)<pos:position pos:line="113" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="114" pos:column="9">set_zip_dir_data_desc<pos:position pos:line="114" pos:column="30"/></name><argument_list pos:line="114" pos:column="30">(<argument><expr><operator pos:line="114" pos:column="31">&amp;<pos:position pos:line="114" pos:column="36"/></operator><name pos:line="114" pos:column="32">dirent<pos:position pos:line="114" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="40">size<pos:position pos:line="114" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="46">compressed_size<pos:position pos:line="114" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="63">crc<pos:position pos:line="114" pos:column="66"/></name></expr></argument>)<pos:position pos:line="114" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="115" pos:column="9">copy_le16<pos:position pos:line="115" pos:column="18"/></name><argument_list pos:line="115" pos:column="18">(<argument><expr><name><name pos:line="115" pos:column="19">dirent<pos:position pos:line="115" pos:column="25"/></name><operator pos:line="115" pos:column="25">.<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="26">filename_length<pos:position pos:line="115" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="43">pathlen<pos:position pos:line="115" pos:column="50"/></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="116" pos:column="9">copy_le16<pos:position pos:line="116" pos:column="18"/></name><argument_list pos:line="116" pos:column="18">(<argument><expr><name><name pos:line="116" pos:column="19">dirent<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">.<pos:position pos:line="116" pos:column="26"/></operator><name pos:line="116" pos:column="26">extra_length<pos:position pos:line="116" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="40">ZIP_EXTRA_MTIME_SIZE<pos:position pos:line="116" pos:column="60"/></name></expr></argument>)<pos:position pos:line="116" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="117" pos:column="9">copy_le16<pos:position pos:line="117" pos:column="18"/></name><argument_list pos:line="117" pos:column="18">(<argument><expr><name><name pos:line="117" pos:column="19">dirent<pos:position pos:line="117" pos:column="25"/></name><operator pos:line="117" pos:column="25">.<pos:position pos:line="117" pos:column="26"/></operator><name pos:line="117" pos:column="26">comment_length<pos:position pos:line="117" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="42">0<pos:position pos:line="117" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="118" pos:column="9">copy_le16<pos:position pos:line="118" pos:column="18"/></name><argument_list pos:line="118" pos:column="18">(<argument><expr><name><name pos:line="118" pos:column="19">dirent<pos:position pos:line="118" pos:column="25"/></name><operator pos:line="118" pos:column="25">.<pos:position pos:line="118" pos:column="26"/></operator><name pos:line="118" pos:column="26">disk<pos:position pos:line="118" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="32">0<pos:position pos:line="118" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="119" pos:column="9">copy_le32<pos:position pos:line="119" pos:column="18"/></name><argument_list pos:line="119" pos:column="18">(<argument><expr><name><name pos:line="119" pos:column="19">dirent<pos:position pos:line="119" pos:column="25"/></name><operator pos:line="119" pos:column="25">.<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="26">attr2<pos:position pos:line="119" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="33">attr2<pos:position pos:line="119" pos:column="38"/></name></expr></argument>)<pos:position pos:line="119" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="120" pos:column="9">copy_le32<pos:position pos:line="120" pos:column="18"/></name><argument_list pos:line="120" pos:column="18">(<argument><expr><name><name pos:line="120" pos:column="19">dirent<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">.<pos:position pos:line="120" pos:column="26"/></operator><name pos:line="120" pos:column="26">offset<pos:position pos:line="120" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="34">zip_offset<pos:position pos:line="120" pos:column="44"/></name></expr></argument>)<pos:position pos:line="120" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="122" pos:column="9">copy_le32<pos:position pos:line="122" pos:column="18"/></name><argument_list pos:line="122" pos:column="18">(<argument><expr><name><name pos:line="122" pos:column="19">header<pos:position pos:line="122" pos:column="25"/></name><operator pos:line="122" pos:column="25">.<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="26">magic<pos:position pos:line="122" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="33">0x04034b50<pos:position pos:line="122" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="123" pos:column="9">copy_le16<pos:position pos:line="123" pos:column="18"/></name><argument_list pos:line="123" pos:column="18">(<argument><expr><name><name pos:line="123" pos:column="19">header<pos:position pos:line="123" pos:column="25"/></name><operator pos:line="123" pos:column="25">.<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="26">version<pos:position pos:line="123" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="35">10<pos:position pos:line="123" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="124" pos:column="9">copy_le16<pos:position pos:line="124" pos:column="18"/></name><argument_list pos:line="124" pos:column="18">(<argument><expr><name><name pos:line="124" pos:column="19">header<pos:position pos:line="124" pos:column="25"/></name><operator pos:line="124" pos:column="25">.<pos:position pos:line="124" pos:column="26"/></operator><name pos:line="124" pos:column="26">flags<pos:position pos:line="124" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="33">flags<pos:position pos:line="124" pos:column="38"/></name></expr></argument>)<pos:position pos:line="124" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">copy_le16<pos:position pos:line="125" pos:column="18"/></name><argument_list pos:line="125" pos:column="18">(<argument><expr><name><name pos:line="125" pos:column="19">header<pos:position pos:line="125" pos:column="25"/></name><operator pos:line="125" pos:column="25">.<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="26">compression_method<pos:position pos:line="125" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="46">method<pos:position pos:line="125" pos:column="52"/></name></expr></argument>)<pos:position pos:line="125" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">copy_le16<pos:position pos:line="126" pos:column="18"/></name><argument_list pos:line="126" pos:column="18">(<argument><expr><name><name pos:line="126" pos:column="19">header<pos:position pos:line="126" pos:column="25"/></name><operator pos:line="126" pos:column="25">.<pos:position pos:line="126" pos:column="26"/></operator><name pos:line="126" pos:column="26">mtime<pos:position pos:line="126" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="33">zip_time<pos:position pos:line="126" pos:column="41"/></name></expr></argument>)<pos:position pos:line="126" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="127" pos:column="9">copy_le16<pos:position pos:line="127" pos:column="18"/></name><argument_list pos:line="127" pos:column="18">(<argument><expr><name><name pos:line="127" pos:column="19">header<pos:position pos:line="127" pos:column="25"/></name><operator pos:line="127" pos:column="25">.<pos:position pos:line="127" pos:column="26"/></operator><name pos:line="127" pos:column="26">mdate<pos:position pos:line="127" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="33">zip_date<pos:position pos:line="127" pos:column="41"/></name></expr></argument>)<pos:position pos:line="127" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="128" pos:column="9">set_zip_header_data_desc<pos:position pos:line="128" pos:column="33"/></name><argument_list pos:line="128" pos:column="33">(<argument><expr><operator pos:line="128" pos:column="34">&amp;<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="35">header<pos:position pos:line="128" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="43">size<pos:position pos:line="128" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="49">compressed_size<pos:position pos:line="128" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="66">crc<pos:position pos:line="128" pos:column="69"/></name></expr></argument>)<pos:position pos:line="128" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">copy_le16<pos:position pos:line="129" pos:column="18"/></name><argument_list pos:line="129" pos:column="18">(<argument><expr><name><name pos:line="129" pos:column="19">header<pos:position pos:line="129" pos:column="25"/></name><operator pos:line="129" pos:column="25">.<pos:position pos:line="129" pos:column="26"/></operator><name pos:line="129" pos:column="26">filename_length<pos:position pos:line="129" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="43">pathlen<pos:position pos:line="129" pos:column="50"/></name></expr></argument>)<pos:position pos:line="129" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="130" pos:column="9">copy_le16<pos:position pos:line="130" pos:column="18"/></name><argument_list pos:line="130" pos:column="18">(<argument><expr><name><name pos:line="130" pos:column="19">header<pos:position pos:line="130" pos:column="25"/></name><operator pos:line="130" pos:column="25">.<pos:position pos:line="130" pos:column="26"/></operator><name pos:line="130" pos:column="26">extra_length<pos:position pos:line="130" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="40">ZIP_EXTRA_MTIME_SIZE<pos:position pos:line="130" pos:column="60"/></name></expr></argument>)<pos:position pos:line="130" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="131" pos:column="9">write_or_die<pos:position pos:line="131" pos:column="21"/></name><argument_list pos:line="131" pos:column="21">(<argument><expr><literal type="number" pos:line="131" pos:column="22">1<pos:position pos:line="131" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="131" pos:column="25">&amp;<pos:position pos:line="131" pos:column="30"/></operator><name pos:line="131" pos:column="26">header<pos:position pos:line="131" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="34">ZIP_LOCAL_HEADER_SIZE<pos:position pos:line="131" pos:column="55"/></name></expr></argument>)<pos:position pos:line="131" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="132" pos:column="9">zip_offset<pos:position pos:line="132" pos:column="19"/></name> <operator pos:line="132" pos:column="20">+=<pos:position pos:line="132" pos:column="22"/></operator> <name pos:line="132" pos:column="23">ZIP_LOCAL_HEADER_SIZE<pos:position pos:line="132" pos:column="44"/></name></expr>;<pos:position pos:line="132" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="133" pos:column="9">write_or_die<pos:position pos:line="133" pos:column="21"/></name><argument_list pos:line="133" pos:column="21">(<argument><expr><literal type="number" pos:line="133" pos:column="22">1<pos:position pos:line="133" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="25">path<pos:position pos:line="133" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="31">pathlen<pos:position pos:line="133" pos:column="38"/></name></expr></argument>)<pos:position pos:line="133" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="134" pos:column="9">zip_offset<pos:position pos:line="134" pos:column="19"/></name> <operator pos:line="134" pos:column="20">+=<pos:position pos:line="134" pos:column="22"/></operator> <name pos:line="134" pos:column="23">pathlen<pos:position pos:line="134" pos:column="30"/></name></expr>;<pos:position pos:line="134" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="135" pos:column="9">write_or_die<pos:position pos:line="135" pos:column="21"/></name><argument_list pos:line="135" pos:column="21">(<argument><expr><literal type="number" pos:line="135" pos:column="22">1<pos:position pos:line="135" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="135" pos:column="25">&amp;<pos:position pos:line="135" pos:column="30"/></operator><name pos:line="135" pos:column="26">extra<pos:position pos:line="135" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="33">ZIP_EXTRA_MTIME_SIZE<pos:position pos:line="135" pos:column="53"/></name></expr></argument>)<pos:position pos:line="135" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="136" pos:column="9">zip_offset<pos:position pos:line="136" pos:column="19"/></name> <operator pos:line="136" pos:column="20">+=<pos:position pos:line="136" pos:column="22"/></operator> <name pos:line="136" pos:column="23">ZIP_EXTRA_MTIME_SIZE<pos:position pos:line="136" pos:column="43"/></name></expr>;<pos:position pos:line="136" pos:column="44"/></expr_stmt>
	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">stream<pos:position pos:line="137" pos:column="19"/></name> <operator pos:line="137" pos:column="20">&amp;&amp;<pos:position pos:line="137" pos:column="30"/></operator> <name pos:line="137" pos:column="23">method<pos:position pos:line="137" pos:column="29"/></name> <operator pos:line="137" pos:column="30">==<pos:position pos:line="137" pos:column="32"/></operator> <literal type="number" pos:line="137" pos:column="33">0<pos:position pos:line="137" pos:column="34"/></literal></expr>)<pos:position pos:line="137" pos:column="35"/></condition><then pos:line="137" pos:column="35"> <block pos:line="137" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="138" pos:column="17">unsigned<pos:position pos:line="138" pos:column="25"/></name> <name pos:line="138" pos:column="26">char<pos:position pos:line="138" pos:column="30"/></name></type> <name><name pos:line="138" pos:column="31">buf<pos:position pos:line="138" pos:column="34"/></name><index pos:line="138" pos:column="34">[<expr><name pos:line="138" pos:column="35">STREAM_BUFFER_SIZE<pos:position pos:line="138" pos:column="53"/></name></expr>]<pos:position pos:line="138" pos:column="54"/></index></name></decl>;<pos:position pos:line="138" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="139" pos:column="17">ssize_t<pos:position pos:line="139" pos:column="24"/></name></type> <name pos:line="139" pos:column="25">readlen<pos:position pos:line="139" pos:column="32"/></name></decl>;<pos:position pos:line="139" pos:column="33"/></decl_stmt>

		<for pos:line="141" pos:column="17">for <control pos:line="141" pos:column="21">(<init pos:line="141" pos:column="22">;<pos:position pos:line="141" pos:column="23"/></init><condition pos:line="141" pos:column="23">;<pos:position pos:line="141" pos:column="24"/></condition><incr/>)<pos:position pos:line="141" pos:column="25"/></control> <block pos:line="141" pos:column="26">{
			<expr_stmt><expr><name pos:line="142" pos:column="25">readlen<pos:position pos:line="142" pos:column="32"/></name> <operator pos:line="142" pos:column="33">=<pos:position pos:line="142" pos:column="34"/></operator> <call><name pos:line="142" pos:column="35">read_istream<pos:position pos:line="142" pos:column="47"/></name><argument_list pos:line="142" pos:column="47">(<argument><expr><name pos:line="142" pos:column="48">stream<pos:position pos:line="142" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="56">buf<pos:position pos:line="142" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="61">sizeof<argument_list pos:line="142" pos:column="67">(<argument><expr><name pos:line="142" pos:column="68">buf<pos:position pos:line="142" pos:column="71"/></name></expr></argument>)<pos:position pos:line="142" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="142" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="74"/></expr_stmt>
			<if pos:line="143" pos:column="25">if <condition pos:line="143" pos:column="28">(<expr><name pos:line="143" pos:column="29">readlen<pos:position pos:line="143" pos:column="36"/></name> <operator pos:line="143" pos:column="37">&lt;=<pos:position pos:line="143" pos:column="42"/></operator> <literal type="number" pos:line="143" pos:column="40">0<pos:position pos:line="143" pos:column="41"/></literal></expr>)<pos:position pos:line="143" pos:column="42"/></condition><then pos:line="143" pos:column="42">
				<block type="pseudo"><break pos:line="144" pos:column="33">break;<pos:position pos:line="144" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="145" pos:column="25">crc<pos:position pos:line="145" pos:column="28"/></name> <operator pos:line="145" pos:column="29">=<pos:position pos:line="145" pos:column="30"/></operator> <call><name pos:line="145" pos:column="31">crc32<pos:position pos:line="145" pos:column="36"/></name><argument_list pos:line="145" pos:column="36">(<argument><expr><name pos:line="145" pos:column="37">crc<pos:position pos:line="145" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="42">buf<pos:position pos:line="145" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="47">readlen<pos:position pos:line="145" pos:column="54"/></name></expr></argument>)<pos:position pos:line="145" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="56"/></expr_stmt>
			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><name pos:line="146" pos:column="29">is_binary<pos:position pos:line="146" pos:column="38"/></name> <operator pos:line="146" pos:column="39">==<pos:position pos:line="146" pos:column="41"/></operator> <operator pos:line="146" pos:column="42">-<pos:position pos:line="146" pos:column="43"/></operator><literal type="number" pos:line="146" pos:column="43">1<pos:position pos:line="146" pos:column="44"/></literal></expr>)<pos:position pos:line="146" pos:column="45"/></condition><then pos:line="146" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="33">is_binary<pos:position pos:line="147" pos:column="42"/></name> <operator pos:line="147" pos:column="43">=<pos:position pos:line="147" pos:column="44"/></operator> <call><name pos:line="147" pos:column="45">entry_is_binary<pos:position pos:line="147" pos:column="60"/></name><argument_list pos:line="147" pos:column="60">(<argument><expr><name pos:line="147" pos:column="61">path_without_prefix<pos:position pos:line="147" pos:column="80"/></name></expr></argument>,
							    <argument><expr><name pos:line="148" pos:column="61">buf<pos:position pos:line="148" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="66">readlen<pos:position pos:line="148" pos:column="73"/></name></expr></argument>)<pos:position pos:line="148" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="75"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="149" pos:column="25">write_or_die<pos:position pos:line="149" pos:column="37"/></name><argument_list pos:line="149" pos:column="37">(<argument><expr><literal type="number" pos:line="149" pos:column="38">1<pos:position pos:line="149" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="41">buf<pos:position pos:line="149" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="46">readlen<pos:position pos:line="149" pos:column="53"/></name></expr></argument>)<pos:position pos:line="149" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="150" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="151" pos:column="17">close_istream<pos:position pos:line="151" pos:column="30"/></name><argument_list pos:line="151" pos:column="30">(<argument><expr><name pos:line="151" pos:column="31">stream<pos:position pos:line="151" pos:column="37"/></name></expr></argument>)<pos:position pos:line="151" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="39"/></expr_stmt>
		<if pos:line="152" pos:column="17">if <condition pos:line="152" pos:column="20">(<expr><name pos:line="152" pos:column="21">readlen<pos:position pos:line="152" pos:column="28"/></name></expr>)<pos:position pos:line="152" pos:column="29"/></condition><then pos:line="152" pos:column="29">
			<block type="pseudo"><return pos:line="153" pos:column="25">return <expr><name pos:line="153" pos:column="32">readlen<pos:position pos:line="153" pos:column="39"/></name></expr>;<pos:position pos:line="153" pos:column="40"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="155" pos:column="17">compressed_size<pos:position pos:line="155" pos:column="32"/></name> <operator pos:line="155" pos:column="33">=<pos:position pos:line="155" pos:column="34"/></operator> <name pos:line="155" pos:column="35">size<pos:position pos:line="155" pos:column="39"/></name></expr>;<pos:position pos:line="155" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="156" pos:column="17">zip_offset<pos:position pos:line="156" pos:column="27"/></name> <operator pos:line="156" pos:column="28">+=<pos:position pos:line="156" pos:column="30"/></operator> <name pos:line="156" pos:column="31">compressed_size<pos:position pos:line="156" pos:column="46"/></name></expr>;<pos:position pos:line="156" pos:column="47"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="158" pos:column="17">write_zip_data_desc<pos:position pos:line="158" pos:column="36"/></name><argument_list pos:line="158" pos:column="36">(<argument><expr><name pos:line="158" pos:column="37">size<pos:position pos:line="158" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="43">compressed_size<pos:position pos:line="158" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="60">crc<pos:position pos:line="158" pos:column="63"/></name></expr></argument>)<pos:position pos:line="158" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="159" pos:column="17">zip_offset<pos:position pos:line="159" pos:column="27"/></name> <operator pos:line="159" pos:column="28">+=<pos:position pos:line="159" pos:column="30"/></operator> <name pos:line="159" pos:column="31">ZIP_DATA_DESC_SIZE<pos:position pos:line="159" pos:column="49"/></name></expr>;<pos:position pos:line="159" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="161" pos:column="17">set_zip_dir_data_desc<pos:position pos:line="161" pos:column="38"/></name><argument_list pos:line="161" pos:column="38">(<argument><expr><operator pos:line="161" pos:column="39">&amp;<pos:position pos:line="161" pos:column="44"/></operator><name pos:line="161" pos:column="40">dirent<pos:position pos:line="161" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="48">size<pos:position pos:line="161" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="54">compressed_size<pos:position pos:line="161" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="71">crc<pos:position pos:line="161" pos:column="74"/></name></expr></argument>)<pos:position pos:line="161" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="162" pos:column="10"/></block></then> <elseif pos:line="162" pos:column="11">else <if pos:line="162" pos:column="16">if <condition pos:line="162" pos:column="19">(<expr><name pos:line="162" pos:column="20">stream<pos:position pos:line="162" pos:column="26"/></name> <operator pos:line="162" pos:column="27">&amp;&amp;<pos:position pos:line="162" pos:column="37"/></operator> <name pos:line="162" pos:column="30">method<pos:position pos:line="162" pos:column="36"/></name> <operator pos:line="162" pos:column="37">==<pos:position pos:line="162" pos:column="39"/></operator> <literal type="number" pos:line="162" pos:column="40">8<pos:position pos:line="162" pos:column="41"/></literal></expr>)<pos:position pos:line="162" pos:column="42"/></condition><then pos:line="162" pos:column="42"> <block pos:line="162" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="163" pos:column="17">unsigned<pos:position pos:line="163" pos:column="25"/></name> <name pos:line="163" pos:column="26">char<pos:position pos:line="163" pos:column="30"/></name></type> <name><name pos:line="163" pos:column="31">buf<pos:position pos:line="163" pos:column="34"/></name><index pos:line="163" pos:column="34">[<expr><name pos:line="163" pos:column="35">STREAM_BUFFER_SIZE<pos:position pos:line="163" pos:column="53"/></name></expr>]<pos:position pos:line="163" pos:column="54"/></index></name></decl>;<pos:position pos:line="163" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="164" pos:column="17">ssize_t<pos:position pos:line="164" pos:column="24"/></name></type> <name pos:line="164" pos:column="25">readlen<pos:position pos:line="164" pos:column="32"/></name></decl>;<pos:position pos:line="164" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="165" pos:column="17">git_zstream<pos:position pos:line="165" pos:column="28"/></name></type> <name pos:line="165" pos:column="29">zstream<pos:position pos:line="165" pos:column="36"/></name></decl>;<pos:position pos:line="165" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="166" pos:column="17">int<pos:position pos:line="166" pos:column="20"/></name></type> <name pos:line="166" pos:column="21">result<pos:position pos:line="166" pos:column="27"/></name></decl>;<pos:position pos:line="166" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="167" pos:column="17">size_t<pos:position pos:line="167" pos:column="23"/></name></type> <name pos:line="167" pos:column="24">out_len<pos:position pos:line="167" pos:column="31"/></name></decl>;<pos:position pos:line="167" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="168" pos:column="17">unsigned<pos:position pos:line="168" pos:column="25"/></name> <name pos:line="168" pos:column="26">char<pos:position pos:line="168" pos:column="30"/></name></type> <name><name pos:line="168" pos:column="31">compressed<pos:position pos:line="168" pos:column="41"/></name><index pos:line="168" pos:column="41">[<expr><name pos:line="168" pos:column="42">STREAM_BUFFER_SIZE<pos:position pos:line="168" pos:column="60"/></name> <operator pos:line="168" pos:column="61">*<pos:position pos:line="168" pos:column="62"/></operator> <literal type="number" pos:line="168" pos:column="63">2<pos:position pos:line="168" pos:column="64"/></literal></expr>]<pos:position pos:line="168" pos:column="65"/></index></name></decl>;<pos:position pos:line="168" pos:column="66"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="170" pos:column="17">git_deflate_init_raw<pos:position pos:line="170" pos:column="37"/></name><argument_list pos:line="170" pos:column="37">(<argument><expr><operator pos:line="170" pos:column="38">&amp;<pos:position pos:line="170" pos:column="43"/></operator><name pos:line="170" pos:column="39">zstream<pos:position pos:line="170" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="48">args<pos:position pos:line="170" pos:column="52"/></name><operator pos:line="170" pos:column="52">-&gt;<pos:position pos:line="170" pos:column="57"/></operator><name pos:line="170" pos:column="54">compression_level<pos:position pos:line="170" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="73"/></expr_stmt>

		<expr_stmt><expr><name pos:line="172" pos:column="17">compressed_size<pos:position pos:line="172" pos:column="32"/></name> <operator pos:line="172" pos:column="33">=<pos:position pos:line="172" pos:column="34"/></operator> <literal type="number" pos:line="172" pos:column="35">0<pos:position pos:line="172" pos:column="36"/></literal></expr>;<pos:position pos:line="172" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="173" pos:column="17">zstream<pos:position pos:line="173" pos:column="24"/></name><operator pos:line="173" pos:column="24">.<pos:position pos:line="173" pos:column="25"/></operator><name pos:line="173" pos:column="25">next_out<pos:position pos:line="173" pos:column="33"/></name></name> <operator pos:line="173" pos:column="34">=<pos:position pos:line="173" pos:column="35"/></operator> <name pos:line="173" pos:column="36">compressed<pos:position pos:line="173" pos:column="46"/></name></expr>;<pos:position pos:line="173" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="174" pos:column="17">zstream<pos:position pos:line="174" pos:column="24"/></name><operator pos:line="174" pos:column="24">.<pos:position pos:line="174" pos:column="25"/></operator><name pos:line="174" pos:column="25">avail_out<pos:position pos:line="174" pos:column="34"/></name></name> <operator pos:line="174" pos:column="35">=<pos:position pos:line="174" pos:column="36"/></operator> <sizeof pos:line="174" pos:column="37">sizeof<argument_list pos:line="174" pos:column="43">(<argument><expr><name pos:line="174" pos:column="44">compressed<pos:position pos:line="174" pos:column="54"/></name></expr></argument>)<pos:position pos:line="174" pos:column="55"/></argument_list></sizeof></expr>;<pos:position pos:line="174" pos:column="56"/></expr_stmt>

		<for pos:line="176" pos:column="17">for <control pos:line="176" pos:column="21">(<init pos:line="176" pos:column="22">;<pos:position pos:line="176" pos:column="23"/></init><condition pos:line="176" pos:column="23">;<pos:position pos:line="176" pos:column="24"/></condition><incr/>)<pos:position pos:line="176" pos:column="25"/></control> <block pos:line="176" pos:column="26">{
			<expr_stmt><expr><name pos:line="177" pos:column="25">readlen<pos:position pos:line="177" pos:column="32"/></name> <operator pos:line="177" pos:column="33">=<pos:position pos:line="177" pos:column="34"/></operator> <call><name pos:line="177" pos:column="35">read_istream<pos:position pos:line="177" pos:column="47"/></name><argument_list pos:line="177" pos:column="47">(<argument><expr><name pos:line="177" pos:column="48">stream<pos:position pos:line="177" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="56">buf<pos:position pos:line="177" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="177" pos:column="61">sizeof<argument_list pos:line="177" pos:column="67">(<argument><expr><name pos:line="177" pos:column="68">buf<pos:position pos:line="177" pos:column="71"/></name></expr></argument>)<pos:position pos:line="177" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="177" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="74"/></expr_stmt>
			<if pos:line="178" pos:column="25">if <condition pos:line="178" pos:column="28">(<expr><name pos:line="178" pos:column="29">readlen<pos:position pos:line="178" pos:column="36"/></name> <operator pos:line="178" pos:column="37">&lt;=<pos:position pos:line="178" pos:column="42"/></operator> <literal type="number" pos:line="178" pos:column="40">0<pos:position pos:line="178" pos:column="41"/></literal></expr>)<pos:position pos:line="178" pos:column="42"/></condition><then pos:line="178" pos:column="42">
				<block type="pseudo"><break pos:line="179" pos:column="33">break;<pos:position pos:line="179" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="180" pos:column="25">crc<pos:position pos:line="180" pos:column="28"/></name> <operator pos:line="180" pos:column="29">=<pos:position pos:line="180" pos:column="30"/></operator> <call><name pos:line="180" pos:column="31">crc32<pos:position pos:line="180" pos:column="36"/></name><argument_list pos:line="180" pos:column="36">(<argument><expr><name pos:line="180" pos:column="37">crc<pos:position pos:line="180" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="42">buf<pos:position pos:line="180" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="47">readlen<pos:position pos:line="180" pos:column="54"/></name></expr></argument>)<pos:position pos:line="180" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="56"/></expr_stmt>
			<if pos:line="181" pos:column="25">if <condition pos:line="181" pos:column="28">(<expr><name pos:line="181" pos:column="29">is_binary<pos:position pos:line="181" pos:column="38"/></name> <operator pos:line="181" pos:column="39">==<pos:position pos:line="181" pos:column="41"/></operator> <operator pos:line="181" pos:column="42">-<pos:position pos:line="181" pos:column="43"/></operator><literal type="number" pos:line="181" pos:column="43">1<pos:position pos:line="181" pos:column="44"/></literal></expr>)<pos:position pos:line="181" pos:column="45"/></condition><then pos:line="181" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name pos:line="182" pos:column="33">is_binary<pos:position pos:line="182" pos:column="42"/></name> <operator pos:line="182" pos:column="43">=<pos:position pos:line="182" pos:column="44"/></operator> <call><name pos:line="182" pos:column="45">entry_is_binary<pos:position pos:line="182" pos:column="60"/></name><argument_list pos:line="182" pos:column="60">(<argument><expr><name pos:line="182" pos:column="61">path_without_prefix<pos:position pos:line="182" pos:column="80"/></name></expr></argument>,
							    <argument><expr><name pos:line="183" pos:column="61">buf<pos:position pos:line="183" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="66">readlen<pos:position pos:line="183" pos:column="73"/></name></expr></argument>)<pos:position pos:line="183" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="75"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name><name pos:line="185" pos:column="25">zstream<pos:position pos:line="185" pos:column="32"/></name><operator pos:line="185" pos:column="32">.<pos:position pos:line="185" pos:column="33"/></operator><name pos:line="185" pos:column="33">next_in<pos:position pos:line="185" pos:column="40"/></name></name> <operator pos:line="185" pos:column="41">=<pos:position pos:line="185" pos:column="42"/></operator> <name pos:line="185" pos:column="43">buf<pos:position pos:line="185" pos:column="46"/></name></expr>;<pos:position pos:line="185" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="186" pos:column="25">zstream<pos:position pos:line="186" pos:column="32"/></name><operator pos:line="186" pos:column="32">.<pos:position pos:line="186" pos:column="33"/></operator><name pos:line="186" pos:column="33">avail_in<pos:position pos:line="186" pos:column="41"/></name></name> <operator pos:line="186" pos:column="42">=<pos:position pos:line="186" pos:column="43"/></operator> <name pos:line="186" pos:column="44">readlen<pos:position pos:line="186" pos:column="51"/></name></expr>;<pos:position pos:line="186" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="187" pos:column="25">result<pos:position pos:line="187" pos:column="31"/></name> <operator pos:line="187" pos:column="32">=<pos:position pos:line="187" pos:column="33"/></operator> <call><name pos:line="187" pos:column="34">git_deflate<pos:position pos:line="187" pos:column="45"/></name><argument_list pos:line="187" pos:column="45">(<argument><expr><operator pos:line="187" pos:column="46">&amp;<pos:position pos:line="187" pos:column="51"/></operator><name pos:line="187" pos:column="47">zstream<pos:position pos:line="187" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="56">0<pos:position pos:line="187" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="59"/></expr_stmt>
			<if pos:line="188" pos:column="25">if <condition pos:line="188" pos:column="28">(<expr><name pos:line="188" pos:column="29">result<pos:position pos:line="188" pos:column="35"/></name> <operator pos:line="188" pos:column="36">!=<pos:position pos:line="188" pos:column="38"/></operator> <name pos:line="188" pos:column="39">Z_OK<pos:position pos:line="188" pos:column="43"/></name></expr>)<pos:position pos:line="188" pos:column="44"/></condition><then pos:line="188" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="33">die<pos:position pos:line="189" pos:column="36"/></name><argument_list pos:line="189" pos:column="36">(<argument><expr><literal type="string" pos:line="189" pos:column="37">"deflate error (%d)"<pos:position pos:line="189" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="189" pos:column="59">result<pos:position pos:line="189" pos:column="65"/></name></expr></argument>)<pos:position pos:line="189" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="190" pos:column="25">out_len<pos:position pos:line="190" pos:column="32"/></name> <operator pos:line="190" pos:column="33">=<pos:position pos:line="190" pos:column="34"/></operator> <name><name pos:line="190" pos:column="35">zstream<pos:position pos:line="190" pos:column="42"/></name><operator pos:line="190" pos:column="42">.<pos:position pos:line="190" pos:column="43"/></operator><name pos:line="190" pos:column="43">next_out<pos:position pos:line="190" pos:column="51"/></name></name> <operator pos:line="190" pos:column="52">-<pos:position pos:line="190" pos:column="53"/></operator> <name pos:line="190" pos:column="54">compressed<pos:position pos:line="190" pos:column="64"/></name></expr>;<pos:position pos:line="190" pos:column="65"/></expr_stmt>

			<if pos:line="192" pos:column="25">if <condition pos:line="192" pos:column="28">(<expr><name pos:line="192" pos:column="29">out_len<pos:position pos:line="192" pos:column="36"/></name> <operator pos:line="192" pos:column="37">&gt;<pos:position pos:line="192" pos:column="41"/></operator> <literal type="number" pos:line="192" pos:column="39">0<pos:position pos:line="192" pos:column="40"/></literal></expr>)<pos:position pos:line="192" pos:column="41"/></condition><then pos:line="192" pos:column="41"> <block pos:line="192" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="193" pos:column="33">write_or_die<pos:position pos:line="193" pos:column="45"/></name><argument_list pos:line="193" pos:column="45">(<argument><expr><literal type="number" pos:line="193" pos:column="46">1<pos:position pos:line="193" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="193" pos:column="49">compressed<pos:position pos:line="193" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="61">out_len<pos:position pos:line="193" pos:column="68"/></name></expr></argument>)<pos:position pos:line="193" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><name pos:line="194" pos:column="33">compressed_size<pos:position pos:line="194" pos:column="48"/></name> <operator pos:line="194" pos:column="49">+=<pos:position pos:line="194" pos:column="51"/></operator> <name pos:line="194" pos:column="52">out_len<pos:position pos:line="194" pos:column="59"/></name></expr>;<pos:position pos:line="194" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="195" pos:column="33">zstream<pos:position pos:line="195" pos:column="40"/></name><operator pos:line="195" pos:column="40">.<pos:position pos:line="195" pos:column="41"/></operator><name pos:line="195" pos:column="41">next_out<pos:position pos:line="195" pos:column="49"/></name></name> <operator pos:line="195" pos:column="50">=<pos:position pos:line="195" pos:column="51"/></operator> <name pos:line="195" pos:column="52">compressed<pos:position pos:line="195" pos:column="62"/></name></expr>;<pos:position pos:line="195" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="196" pos:column="33">zstream<pos:position pos:line="196" pos:column="40"/></name><operator pos:line="196" pos:column="40">.<pos:position pos:line="196" pos:column="41"/></operator><name pos:line="196" pos:column="41">avail_out<pos:position pos:line="196" pos:column="50"/></name></name> <operator pos:line="196" pos:column="51">=<pos:position pos:line="196" pos:column="52"/></operator> <sizeof pos:line="196" pos:column="53">sizeof<argument_list pos:line="196" pos:column="59">(<argument><expr><name pos:line="196" pos:column="60">compressed<pos:position pos:line="196" pos:column="70"/></name></expr></argument>)<pos:position pos:line="196" pos:column="71"/></argument_list></sizeof></expr>;<pos:position pos:line="196" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="197" pos:column="26"/></block></then></if>

		}<pos:position pos:line="199" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="200" pos:column="17">close_istream<pos:position pos:line="200" pos:column="30"/></name><argument_list pos:line="200" pos:column="30">(<argument><expr><name pos:line="200" pos:column="31">stream<pos:position pos:line="200" pos:column="37"/></name></expr></argument>)<pos:position pos:line="200" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="39"/></expr_stmt>
		<if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><name pos:line="201" pos:column="21">readlen<pos:position pos:line="201" pos:column="28"/></name></expr>)<pos:position pos:line="201" pos:column="29"/></condition><then pos:line="201" pos:column="29">
			<block type="pseudo"><return pos:line="202" pos:column="25">return <expr><name pos:line="202" pos:column="32">readlen<pos:position pos:line="202" pos:column="39"/></name></expr>;<pos:position pos:line="202" pos:column="40"/></return></block></then></if>

		<expr_stmt><expr><name><name pos:line="204" pos:column="17">zstream<pos:position pos:line="204" pos:column="24"/></name><operator pos:line="204" pos:column="24">.<pos:position pos:line="204" pos:column="25"/></operator><name pos:line="204" pos:column="25">next_in<pos:position pos:line="204" pos:column="32"/></name></name> <operator pos:line="204" pos:column="33">=<pos:position pos:line="204" pos:column="34"/></operator> <name pos:line="204" pos:column="35">buf<pos:position pos:line="204" pos:column="38"/></name></expr>;<pos:position pos:line="204" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="205" pos:column="17">zstream<pos:position pos:line="205" pos:column="24"/></name><operator pos:line="205" pos:column="24">.<pos:position pos:line="205" pos:column="25"/></operator><name pos:line="205" pos:column="25">avail_in<pos:position pos:line="205" pos:column="33"/></name></name> <operator pos:line="205" pos:column="34">=<pos:position pos:line="205" pos:column="35"/></operator> <literal type="number" pos:line="205" pos:column="36">0<pos:position pos:line="205" pos:column="37"/></literal></expr>;<pos:position pos:line="205" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="206" pos:column="17">result<pos:position pos:line="206" pos:column="23"/></name> <operator pos:line="206" pos:column="24">=<pos:position pos:line="206" pos:column="25"/></operator> <call><name pos:line="206" pos:column="26">git_deflate<pos:position pos:line="206" pos:column="37"/></name><argument_list pos:line="206" pos:column="37">(<argument><expr><operator pos:line="206" pos:column="38">&amp;<pos:position pos:line="206" pos:column="43"/></operator><name pos:line="206" pos:column="39">zstream<pos:position pos:line="206" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="48">Z_FINISH<pos:position pos:line="206" pos:column="56"/></name></expr></argument>)<pos:position pos:line="206" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="58"/></expr_stmt>
		<if pos:line="207" pos:column="17">if <condition pos:line="207" pos:column="20">(<expr><name pos:line="207" pos:column="21">result<pos:position pos:line="207" pos:column="27"/></name> <operator pos:line="207" pos:column="28">!=<pos:position pos:line="207" pos:column="30"/></operator> <name pos:line="207" pos:column="31">Z_STREAM_END<pos:position pos:line="207" pos:column="43"/></name></expr>)<pos:position pos:line="207" pos:column="44"/></condition><then pos:line="207" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="208" pos:column="25">die<pos:position pos:line="208" pos:column="28"/></name><argument_list pos:line="208" pos:column="28">(<argument><expr><literal type="string" pos:line="208" pos:column="29">"deflate error (%d)"<pos:position pos:line="208" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="51">result<pos:position pos:line="208" pos:column="57"/></name></expr></argument>)<pos:position pos:line="208" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="59"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="210" pos:column="17">git_deflate_end<pos:position pos:line="210" pos:column="32"/></name><argument_list pos:line="210" pos:column="32">(<argument><expr><operator pos:line="210" pos:column="33">&amp;<pos:position pos:line="210" pos:column="38"/></operator><name pos:line="210" pos:column="34">zstream<pos:position pos:line="210" pos:column="41"/></name></expr></argument>)<pos:position pos:line="210" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="211" pos:column="17">out_len<pos:position pos:line="211" pos:column="24"/></name> <operator pos:line="211" pos:column="25">=<pos:position pos:line="211" pos:column="26"/></operator> <name><name pos:line="211" pos:column="27">zstream<pos:position pos:line="211" pos:column="34"/></name><operator pos:line="211" pos:column="34">.<pos:position pos:line="211" pos:column="35"/></operator><name pos:line="211" pos:column="35">next_out<pos:position pos:line="211" pos:column="43"/></name></name> <operator pos:line="211" pos:column="44">-<pos:position pos:line="211" pos:column="45"/></operator> <name pos:line="211" pos:column="46">compressed<pos:position pos:line="211" pos:column="56"/></name></expr>;<pos:position pos:line="211" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="212" pos:column="17">write_or_die<pos:position pos:line="212" pos:column="29"/></name><argument_list pos:line="212" pos:column="29">(<argument><expr><literal type="number" pos:line="212" pos:column="30">1<pos:position pos:line="212" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="212" pos:column="33">compressed<pos:position pos:line="212" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="45">out_len<pos:position pos:line="212" pos:column="52"/></name></expr></argument>)<pos:position pos:line="212" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="213" pos:column="17">compressed_size<pos:position pos:line="213" pos:column="32"/></name> <operator pos:line="213" pos:column="33">+=<pos:position pos:line="213" pos:column="35"/></operator> <name pos:line="213" pos:column="36">out_len<pos:position pos:line="213" pos:column="43"/></name></expr>;<pos:position pos:line="213" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="214" pos:column="17">zip_offset<pos:position pos:line="214" pos:column="27"/></name> <operator pos:line="214" pos:column="28">+=<pos:position pos:line="214" pos:column="30"/></operator> <name pos:line="214" pos:column="31">compressed_size<pos:position pos:line="214" pos:column="46"/></name></expr>;<pos:position pos:line="214" pos:column="47"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="216" pos:column="17">write_zip_data_desc<pos:position pos:line="216" pos:column="36"/></name><argument_list pos:line="216" pos:column="36">(<argument><expr><name pos:line="216" pos:column="37">size<pos:position pos:line="216" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="43">compressed_size<pos:position pos:line="216" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="60">crc<pos:position pos:line="216" pos:column="63"/></name></expr></argument>)<pos:position pos:line="216" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="217" pos:column="17">zip_offset<pos:position pos:line="217" pos:column="27"/></name> <operator pos:line="217" pos:column="28">+=<pos:position pos:line="217" pos:column="30"/></operator> <name pos:line="217" pos:column="31">ZIP_DATA_DESC_SIZE<pos:position pos:line="217" pos:column="49"/></name></expr>;<pos:position pos:line="217" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="219" pos:column="17">set_zip_dir_data_desc<pos:position pos:line="219" pos:column="38"/></name><argument_list pos:line="219" pos:column="38">(<argument><expr><operator pos:line="219" pos:column="39">&amp;<pos:position pos:line="219" pos:column="44"/></operator><name pos:line="219" pos:column="40">dirent<pos:position pos:line="219" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="48">size<pos:position pos:line="219" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="54">compressed_size<pos:position pos:line="219" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="71">crc<pos:position pos:line="219" pos:column="74"/></name></expr></argument>)<pos:position pos:line="219" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="220" pos:column="10"/></block></then></if></elseif> <elseif pos:line="220" pos:column="11">else <if pos:line="220" pos:column="16">if <condition pos:line="220" pos:column="19">(<expr><name pos:line="220" pos:column="20">compressed_size<pos:position pos:line="220" pos:column="35"/></name> <operator pos:line="220" pos:column="36">&gt;<pos:position pos:line="220" pos:column="40"/></operator> <literal type="number" pos:line="220" pos:column="38">0<pos:position pos:line="220" pos:column="39"/></literal></expr>)<pos:position pos:line="220" pos:column="40"/></condition><then pos:line="220" pos:column="40"> <block pos:line="220" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="221" pos:column="17">write_or_die<pos:position pos:line="221" pos:column="29"/></name><argument_list pos:line="221" pos:column="29">(<argument><expr><literal type="number" pos:line="221" pos:column="30">1<pos:position pos:line="221" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="221" pos:column="33">out<pos:position pos:line="221" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="38">compressed_size<pos:position pos:line="221" pos:column="53"/></name></expr></argument>)<pos:position pos:line="221" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="222" pos:column="17">zip_offset<pos:position pos:line="222" pos:column="27"/></name> <operator pos:line="222" pos:column="28">+=<pos:position pos:line="222" pos:column="30"/></operator> <name pos:line="222" pos:column="31">compressed_size<pos:position pos:line="222" pos:column="46"/></name></expr>;<pos:position pos:line="222" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="223" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="225" pos:column="9">free<pos:position pos:line="225" pos:column="13"/></name><argument_list pos:line="225" pos:column="13">(<argument><expr><name pos:line="225" pos:column="14">deflated<pos:position pos:line="225" pos:column="22"/></name></expr></argument>)<pos:position pos:line="225" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="226" pos:column="9">free<pos:position pos:line="226" pos:column="13"/></name><argument_list pos:line="226" pos:column="13">(<argument><expr><name pos:line="226" pos:column="14">buffer<pos:position pos:line="226" pos:column="20"/></name></expr></argument>)<pos:position pos:line="226" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="228" pos:column="9">copy_le16<pos:position pos:line="228" pos:column="18"/></name><argument_list pos:line="228" pos:column="18">(<argument><expr><name><name pos:line="228" pos:column="19">dirent<pos:position pos:line="228" pos:column="25"/></name><operator pos:line="228" pos:column="25">.<pos:position pos:line="228" pos:column="26"/></operator><name pos:line="228" pos:column="26">attr1<pos:position pos:line="228" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="228" pos:column="33">!<pos:position pos:line="228" pos:column="34"/></operator><name pos:line="228" pos:column="34">is_binary<pos:position pos:line="228" pos:column="43"/></name></expr></argument>)<pos:position pos:line="228" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="230" pos:column="9">memcpy<pos:position pos:line="230" pos:column="15"/></name><argument_list pos:line="230" pos:column="15">(<argument><expr><name pos:line="230" pos:column="16">zip_dir<pos:position pos:line="230" pos:column="23"/></name> <operator pos:line="230" pos:column="24">+<pos:position pos:line="230" pos:column="25"/></operator> <name pos:line="230" pos:column="26">zip_dir_offset<pos:position pos:line="230" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="230" pos:column="42">&amp;<pos:position pos:line="230" pos:column="47"/></operator><name pos:line="230" pos:column="43">dirent<pos:position pos:line="230" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="51">ZIP_DIR_HEADER_SIZE<pos:position pos:line="230" pos:column="70"/></name></expr></argument>)<pos:position pos:line="230" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="231" pos:column="9">zip_dir_offset<pos:position pos:line="231" pos:column="23"/></name> <operator pos:line="231" pos:column="24">+=<pos:position pos:line="231" pos:column="26"/></operator> <name pos:line="231" pos:column="27">ZIP_DIR_HEADER_SIZE<pos:position pos:line="231" pos:column="46"/></name></expr>;<pos:position pos:line="231" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="232" pos:column="9">memcpy<pos:position pos:line="232" pos:column="15"/></name><argument_list pos:line="232" pos:column="15">(<argument><expr><name pos:line="232" pos:column="16">zip_dir<pos:position pos:line="232" pos:column="23"/></name> <operator pos:line="232" pos:column="24">+<pos:position pos:line="232" pos:column="25"/></operator> <name pos:line="232" pos:column="26">zip_dir_offset<pos:position pos:line="232" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="42">path<pos:position pos:line="232" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="48">pathlen<pos:position pos:line="232" pos:column="55"/></name></expr></argument>)<pos:position pos:line="232" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="233" pos:column="9">zip_dir_offset<pos:position pos:line="233" pos:column="23"/></name> <operator pos:line="233" pos:column="24">+=<pos:position pos:line="233" pos:column="26"/></operator> <name pos:line="233" pos:column="27">pathlen<pos:position pos:line="233" pos:column="34"/></name></expr>;<pos:position pos:line="233" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="234" pos:column="9">memcpy<pos:position pos:line="234" pos:column="15"/></name><argument_list pos:line="234" pos:column="15">(<argument><expr><name pos:line="234" pos:column="16">zip_dir<pos:position pos:line="234" pos:column="23"/></name> <operator pos:line="234" pos:column="24">+<pos:position pos:line="234" pos:column="25"/></operator> <name pos:line="234" pos:column="26">zip_dir_offset<pos:position pos:line="234" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="234" pos:column="42">&amp;<pos:position pos:line="234" pos:column="47"/></operator><name pos:line="234" pos:column="43">extra<pos:position pos:line="234" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="50">ZIP_EXTRA_MTIME_SIZE<pos:position pos:line="234" pos:column="70"/></name></expr></argument>)<pos:position pos:line="234" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="235" pos:column="9">zip_dir_offset<pos:position pos:line="235" pos:column="23"/></name> <operator pos:line="235" pos:column="24">+=<pos:position pos:line="235" pos:column="26"/></operator> <name pos:line="235" pos:column="27">ZIP_EXTRA_MTIME_SIZE<pos:position pos:line="235" pos:column="47"/></name></expr>;<pos:position pos:line="235" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="236" pos:column="9">zip_dir_entries<pos:position pos:line="236" pos:column="24"/></name><operator pos:line="236" pos:column="24">++<pos:position pos:line="236" pos:column="26"/></operator></expr>;<pos:position pos:line="236" pos:column="27"/></expr_stmt>

	<return pos:line="238" pos:column="9">return <expr><literal type="number" pos:line="238" pos:column="16">0<pos:position pos:line="238" pos:column="17"/></literal></expr>;<pos:position pos:line="238" pos:column="18"/></return>
}<pos:position pos:line="239" pos:column="2"/></block></function></unit>

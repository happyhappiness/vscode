<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2424.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_sort_string<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">var<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">arg<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">sort<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">type<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="23">flags<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><literal type="number" pos:line="3" pos:column="31">0<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">skip_prefix<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">arg<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="30">"-"<pos:position pos:line="5" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="35">&amp;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="36">arg<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">flags<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">|=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">REVERSE_SORT<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">skip_prefix<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">arg<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"version:"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">arg<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call> <operator pos:line="8" pos:column="48">||<pos:position pos:line="8" pos:column="50"/></operator> <call><name pos:line="8" pos:column="51">skip_prefix<pos:position pos:line="8" pos:column="62"/></name><argument_list pos:line="8" pos:column="62">(<argument><expr><name pos:line="8" pos:column="63">arg<pos:position pos:line="8" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="68">"v:"<pos:position pos:line="8" pos:column="72"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="74">&amp;<pos:position pos:line="8" pos:column="79"/></operator><name pos:line="8" pos:column="75">arg<pos:position pos:line="8" pos:column="78"/></name></expr></argument>)<pos:position pos:line="8" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="80"/></condition><then pos:line="8" pos:column="80">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">type<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">VERCMP_SORT<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt></block></then>
	<else pos:line="10" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">type<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">STRCMP_SORT<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt></block></else></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">strcmp<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">arg<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">"refname"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <block pos:line="13" pos:column="37">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">var<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><call><name pos:line="15" pos:column="32">error<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><call><name pos:line="15" pos:column="38">_<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><literal type="string" pos:line="15" pos:column="40">"unsupported sort specification '%s'"<pos:position pos:line="15" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="80">arg<pos:position pos:line="15" pos:column="83"/></name></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="85"/></return></block></then>
		<else pos:line="16" pos:column="17">else <block pos:line="16" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">warning<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><call><name pos:line="17" pos:column="33">_<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><literal type="string" pos:line="17" pos:column="35">"unsupported sort specification '%s' in variable '%s'"<pos:position pos:line="17" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="90"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="18" pos:column="33">var<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">arg<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
			<return pos:line="19" pos:column="25">return <expr><operator pos:line="19" pos:column="32">-<pos:position pos:line="19" pos:column="33"/></operator><literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal></expr>;<pos:position pos:line="19" pos:column="35"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">sort<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <operator pos:line="23" pos:column="17">(<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">type<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">|<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">flags<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></operator></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>

	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

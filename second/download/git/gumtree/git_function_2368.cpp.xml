<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2368.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">init_db<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><specifier pos:line="1" pos:column="13">const<pos:position pos:line="1" pos:column="18"/></specifier> <name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">template_dir<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">unsigned<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">flags<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">reinit<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">git_dir<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><call><name pos:line="4" pos:column="31">get_git_dir<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">git_link<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">separate_git_dir<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">git_dir<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">safe_create_dir<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">git_dir<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">init_is_bare_repository<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">=<pos:position pos:line="11" pos:column="34"/></operator> <call><name pos:line="11" pos:column="35">is_bare_repository<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">()<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* Check to see if the repository version is right.
	 * Note that a newly created repository does not have
	 * config file, so this will not fail.  What we are catching
	 * is an attempt to reinitialize new repository with an old tool.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">check_repository_format<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">()<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">reinit<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">create_default_files<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">template_dir<pos:position pos:line="20" pos:column="51"/></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">create_object_directory<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">shared_repository<pos:position pos:line="24" pos:column="30"/></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block pos:line="24" pos:column="32">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name></type> <name><name pos:line="25" pos:column="22">buf<pos:position pos:line="25" pos:column="25"/></name><index pos:line="25" pos:column="25">[<expr><literal type="number" pos:line="25" pos:column="26">10<pos:position pos:line="25" pos:column="28"/></literal></expr>]<pos:position pos:line="25" pos:column="29"/></index></name></decl>;<pos:position pos:line="25" pos:column="30"/></decl_stmt>
		<comment type="block" pos:line="26" pos:column="17">/* We do not spell "group" and such, so that
		 * the configuration can be read by older version
		 * of git. Note, we use octal numbers for new share modes,
		 * and compatibility values for PERM_GROUP and
		 * PERM_EVERYBODY.
		 */</comment>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">shared_repository<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">&lt;<pos:position pos:line="32" pos:column="43"/></operator> <literal type="number" pos:line="32" pos:column="41">0<pos:position pos:line="32" pos:column="42"/></literal></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43">
			<comment type="block" pos:line="33" pos:column="25">/* force to the mode value */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">sprintf<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">buf<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="38">"0%o"<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="45">-<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">shared_repository<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt></block></then>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><name pos:line="35" pos:column="26">shared_repository<pos:position pos:line="35" pos:column="43"/></name> <operator pos:line="35" pos:column="44">==<pos:position pos:line="35" pos:column="46"/></operator> <name pos:line="35" pos:column="47">PERM_GROUP<pos:position pos:line="35" pos:column="57"/></name></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">sprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">buf<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="38">"%d"<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">OLD_PERM_GROUP<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="37" pos:column="17">else <if pos:line="37" pos:column="22">if <condition pos:line="37" pos:column="25">(<expr><name pos:line="37" pos:column="26">shared_repository<pos:position pos:line="37" pos:column="43"/></name> <operator pos:line="37" pos:column="44">==<pos:position pos:line="37" pos:column="46"/></operator> <name pos:line="37" pos:column="47">PERM_EVERYBODY<pos:position pos:line="37" pos:column="61"/></name></expr>)<pos:position pos:line="37" pos:column="62"/></condition><then pos:line="37" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">sprintf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">buf<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="38">"%d"<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">OLD_PERM_EVERYBODY<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt></block></then></if></elseif>
		<else pos:line="39" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">die<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><literal type="string" pos:line="40" pos:column="29">"oops"<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">git_config_set<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><literal type="string" pos:line="41" pos:column="32">"core.sharedrepository"<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="57">buf<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">git_config_set<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><literal type="string" pos:line="42" pos:column="32">"receive.denyNonFastforwards"<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="63">"true"<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><operator pos:line="45" pos:column="14">(<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">flags<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">&amp;<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="23">INIT_DB_QUIET<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">)<pos:position pos:line="45" pos:column="37"/></operator></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38"> <block pos:line="45" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">len<pos:position pos:line="46" pos:column="24"/></name> <init pos:line="46" pos:column="25">= <expr><call><name pos:line="46" pos:column="27">strlen<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">git_dir<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="43"/></decl_stmt>

		<comment type="block" pos:line="48" pos:column="17">/* TRANSLATORS: The first '%s' is either "Reinitialized
		   existing" or "Initialized empty", the second " shared" or
		   "", and the last '%s%s' is the verbatim directory name. */</comment>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">printf<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><call><name pos:line="51" pos:column="24">_<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><literal type="string" pos:line="51" pos:column="26">"%s%s Git repository in %s%s\n"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr></argument>,
		       <argument><expr><ternary><condition><expr><name pos:line="52" pos:column="24">reinit<pos:position pos:line="52" pos:column="30"/></name></expr> ?<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32"> <expr><call><name pos:line="52" pos:column="33">_<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><literal type="string" pos:line="52" pos:column="35">"Reinitialized existing"<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="60"/></argument_list></call></expr> <pos:position pos:line="52" pos:column="61"/></then><else pos:line="52" pos:column="61">: <expr><call><name pos:line="52" pos:column="63">_<pos:position pos:line="52" pos:column="64"/></name><argument_list pos:line="52" pos:column="64">(<argument><expr><literal type="string" pos:line="52" pos:column="65">"Initialized empty"<pos:position pos:line="52" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="85"/></argument_list></call></expr></else></ternary></expr></argument>,
		       <argument><expr><ternary><condition><expr><name pos:line="53" pos:column="24">shared_repository<pos:position pos:line="53" pos:column="41"/></name></expr> ?<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43"> <expr><call><name pos:line="53" pos:column="44">_<pos:position pos:line="53" pos:column="45"/></name><argument_list pos:line="53" pos:column="45">(<argument><expr><literal type="string" pos:line="53" pos:column="46">" shared"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr> <pos:position pos:line="53" pos:column="57"/></then><else pos:line="53" pos:column="57">: <expr><literal type="string" pos:line="53" pos:column="59">""<pos:position pos:line="53" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
		       <argument><expr><name pos:line="54" pos:column="24">git_dir<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="54" pos:column="33">len<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">&amp;&amp;<pos:position pos:line="54" pos:column="47"/></operator> <name><name pos:line="54" pos:column="40">git_dir<pos:position pos:line="54" pos:column="47"/></name><index pos:line="54" pos:column="47">[<expr><name pos:line="54" pos:column="48">len<pos:position pos:line="54" pos:column="51"/></name><operator pos:line="54" pos:column="51">-<pos:position pos:line="54" pos:column="52"/></operator><literal type="number" pos:line="54" pos:column="52">1<pos:position pos:line="54" pos:column="53"/></literal></expr>]<pos:position pos:line="54" pos:column="54"/></index></name> <operator pos:line="54" pos:column="55">!=<pos:position pos:line="54" pos:column="57"/></operator> <literal type="char" pos:line="54" pos:column="58">'/'<pos:position pos:line="54" pos:column="61"/></literal></expr> ?<pos:position pos:line="54" pos:column="63"/></condition><then pos:line="54" pos:column="63"> <expr><literal type="string" pos:line="54" pos:column="64">"/"<pos:position pos:line="54" pos:column="67"/></literal></expr> <pos:position pos:line="54" pos:column="68"/></then><else pos:line="54" pos:column="68">: <expr><literal type="string" pos:line="54" pos:column="70">""<pos:position pos:line="54" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="54" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<return pos:line="57" pos:column="9">return <expr><literal type="number" pos:line="57" pos:column="16">0<pos:position pos:line="57" pos:column="17"/></literal></expr>;<pos:position pos:line="57" pos:column="18"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

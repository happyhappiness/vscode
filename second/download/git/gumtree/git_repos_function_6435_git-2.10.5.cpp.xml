<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6435_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">sift_states_bkref<pos:position pos:line="3" pos:column="18"/></name> <parameter_list pos:line="3" pos:column="19">(<parameter><decl><type><specifier pos:line="3" pos:column="20">const<pos:position pos:line="3" pos:column="25"/></specifier> <name pos:line="3" pos:column="26">re_match_context_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">mctx<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">re_sift_context_t<pos:position pos:line="3" pos:column="69"/></name> <modifier pos:line="3" pos:column="70">*<pos:position pos:line="3" pos:column="71"/></modifier></type><name pos:line="3" pos:column="71">sctx<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="4" pos:column="20">int<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">str_idx<pos:position pos:line="4" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="33">const<pos:position pos:line="4" pos:column="38"/></specifier> <name pos:line="4" pos:column="39">re_node_set<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">candidates<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="63"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">re_dfa_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier><specifier pos:line="6" pos:column="19">const<pos:position pos:line="6" pos:column="24"/></specifier></type> <name pos:line="6" pos:column="25">dfa<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><name><name pos:line="6" pos:column="31">mctx<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">dfa<pos:position pos:line="6" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">reg_errcode_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">err<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">node_idx<pos:position pos:line="8" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="17">node<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">re_sift_context_t<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">local_sctx<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">first_idx<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><call><name pos:line="10" pos:column="19">search_cur_bkref_entry<pos:position pos:line="10" pos:column="41"/></name> <argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">mctx<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">str_idx<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="58"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">first_idx<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">-<pos:position pos:line="12" pos:column="21"/></operator><literal type="number" pos:line="12" pos:column="21">1<pos:position pos:line="12" pos:column="22"/></literal></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">REG_NOERROR<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">local_sctx<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">sifted_states<pos:position pos:line="15" pos:column="27"/></name></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">NULL<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt> <comment type="block" pos:line="15" pos:column="36">/* Mark that it hasn't been initialized.  */</comment>

  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><expr><name pos:line="17" pos:column="8">node_idx<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></init> <condition><expr><name pos:line="17" pos:column="22">node_idx<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">&lt;<pos:position pos:line="17" pos:column="35"/></operator> <name><name pos:line="17" pos:column="33">candidates<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">nelem<pos:position pos:line="17" pos:column="50"/></name></name></expr>;<pos:position pos:line="17" pos:column="51"/></condition> <incr><expr><operator pos:line="17" pos:column="52">++<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">node_idx<pos:position pos:line="17" pos:column="62"/></name></expr></incr>)<pos:position pos:line="17" pos:column="63"/></control>
    <block pos:line="18" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">int<pos:position pos:line="19" pos:column="10"/></name></type> <name pos:line="19" pos:column="11">enabled_idx<pos:position pos:line="19" pos:column="22"/></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="20" pos:column="7">re_token_type_t<pos:position pos:line="20" pos:column="22"/></name></type> <name pos:line="20" pos:column="23">type<pos:position pos:line="20" pos:column="27"/></name></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="21" pos:column="7">struct<pos:position pos:line="21" pos:column="13"/></name> <name pos:line="21" pos:column="14">re_backref_cache_entry<pos:position pos:line="21" pos:column="36"/></name></name> <modifier pos:line="21" pos:column="37">*<pos:position pos:line="21" pos:column="38"/></modifier></type><name pos:line="21" pos:column="38">entry<pos:position pos:line="21" pos:column="43"/></name></decl>;<pos:position pos:line="21" pos:column="44"/></decl_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">node<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name><name pos:line="22" pos:column="14">candidates<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">elems<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><name pos:line="22" pos:column="32">node_idx<pos:position pos:line="22" pos:column="40"/></name></expr>]<pos:position pos:line="22" pos:column="41"/></index></name></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name pos:line="23" pos:column="7">type<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name><name pos:line="23" pos:column="14">dfa<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">nodes<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><name pos:line="23" pos:column="25">node<pos:position pos:line="23" pos:column="29"/></name></expr>]<pos:position pos:line="23" pos:column="30"/></index></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">type<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
      <comment type="block" pos:line="24" pos:column="7">/* Avoid infinite loop for the REs like "()\1+".  */</comment>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">node<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name><name pos:line="25" pos:column="19">sctx<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">last_node<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">&amp;&amp;<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="38">str_idx<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">==<pos:position pos:line="25" pos:column="48"/></operator> <name><name pos:line="25" pos:column="49">sctx<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">last_str_idx<pos:position pos:line="25" pos:column="67"/></name></name></expr>)<pos:position pos:line="25" pos:column="68"/></condition><then pos:line="25" pos:column="68">
	<block type="pseudo"><continue pos:line="26" pos:column="9">continue;<pos:position pos:line="26" pos:column="18"/></continue></block></then></if>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name pos:line="27" pos:column="11">type<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">!=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">OP_BACK_REF<pos:position pos:line="27" pos:column="30"/></name></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31">
	<block type="pseudo"><continue pos:line="28" pos:column="9">continue;<pos:position pos:line="28" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="30" pos:column="7">entry<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name><name pos:line="30" pos:column="15">mctx<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">bkref_ents<pos:position pos:line="30" pos:column="31"/></name></name> <operator pos:line="30" pos:column="32">+<pos:position pos:line="30" pos:column="33"/></operator> <name pos:line="30" pos:column="34">first_idx<pos:position pos:line="30" pos:column="43"/></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="31" pos:column="7">enabled_idx<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">first_idx<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
      <do pos:line="32" pos:column="7">do
	<block pos:line="33" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="34" pos:column="11">int<pos:position pos:line="34" pos:column="14"/></name></type> <name pos:line="34" pos:column="15">subexp_len<pos:position pos:line="34" pos:column="25"/></name></decl>;<pos:position pos:line="34" pos:column="26"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="35" pos:column="11">int<pos:position pos:line="35" pos:column="14"/></name></type> <name pos:line="35" pos:column="15">to_idx<pos:position pos:line="35" pos:column="21"/></name></decl>;<pos:position pos:line="35" pos:column="22"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="36" pos:column="11">int<pos:position pos:line="36" pos:column="14"/></name></type> <name pos:line="36" pos:column="15">dst_node<pos:position pos:line="36" pos:column="23"/></name></decl>;<pos:position pos:line="36" pos:column="24"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="37" pos:column="11">int<pos:position pos:line="37" pos:column="14"/></name></type> <name pos:line="37" pos:column="15">ret<pos:position pos:line="37" pos:column="18"/></name></decl>;<pos:position pos:line="37" pos:column="19"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="38" pos:column="11">re_dfastate_t<pos:position pos:line="38" pos:column="24"/></name> <modifier pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></modifier></type><name pos:line="38" pos:column="26">cur_state<pos:position pos:line="38" pos:column="35"/></name></decl>;<pos:position pos:line="38" pos:column="36"/></decl_stmt>

	  <if pos:line="40" pos:column="11">if <condition pos:line="40" pos:column="14">(<expr><name><name pos:line="40" pos:column="15">entry<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">node<pos:position pos:line="40" pos:column="26"/></name></name> <operator pos:line="40" pos:column="27">!=<pos:position pos:line="40" pos:column="29"/></operator> <name pos:line="40" pos:column="30">node<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
	    <block type="pseudo"><continue pos:line="41" pos:column="13">continue;<pos:position pos:line="41" pos:column="22"/></continue></block></then></if>
	  <expr_stmt><expr><name pos:line="42" pos:column="11">subexp_len<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name><name pos:line="42" pos:column="24">entry<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">subexp_to<pos:position pos:line="42" pos:column="40"/></name></name> <operator pos:line="42" pos:column="41">-<pos:position pos:line="42" pos:column="42"/></operator> <name><name pos:line="42" pos:column="43">entry<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">-&gt;<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="50">subexp_from<pos:position pos:line="42" pos:column="61"/></name></name></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="43" pos:column="11">to_idx<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">str_idx<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">+<pos:position pos:line="43" pos:column="29"/></operator> <name pos:line="43" pos:column="30">subexp_len<pos:position pos:line="43" pos:column="40"/></name></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="44" pos:column="11">dst_node<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="22">(<pos:position pos:line="44" pos:column="23"/></operator><ternary><condition><expr><name pos:line="44" pos:column="23">subexp_len<pos:position pos:line="44" pos:column="33"/></name></expr> ?<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35"> <expr><name><name pos:line="44" pos:column="36">dfa<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">-&gt;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="41">nexts<pos:position pos:line="44" pos:column="46"/></name><index pos:line="44" pos:column="46">[<expr><name pos:line="44" pos:column="47">node<pos:position pos:line="44" pos:column="51"/></name></expr>]<pos:position pos:line="44" pos:column="52"/></index></name></expr>
		      <pos:position pos:line="45" pos:column="9"/></then><else pos:line="45" pos:column="23">: <expr><name><name pos:line="45" pos:column="25">dfa<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">-&gt;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="30">edests<pos:position pos:line="45" pos:column="36"/></name><index pos:line="45" pos:column="36">[<expr><name pos:line="45" pos:column="37">node<pos:position pos:line="45" pos:column="41"/></name></expr>]<pos:position pos:line="45" pos:column="42"/></index></name><operator pos:line="45" pos:column="42">.<pos:position pos:line="45" pos:column="43"/></operator><name><name pos:line="45" pos:column="43">elems<pos:position pos:line="45" pos:column="48"/></name><index pos:line="45" pos:column="48">[<expr><literal type="number" pos:line="45" pos:column="49">0<pos:position pos:line="45" pos:column="50"/></literal></expr>]<pos:position pos:line="45" pos:column="51"/></index></name></expr></else></ternary><operator pos:line="45" pos:column="51">)<pos:position pos:line="45" pos:column="52"/></operator></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>

	  <if pos:line="47" pos:column="11">if <condition pos:line="47" pos:column="14">(<expr><name pos:line="47" pos:column="15">to_idx<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">&gt;<pos:position pos:line="47" pos:column="26"/></operator> <name><name pos:line="47" pos:column="24">sctx<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">last_str_idx<pos:position pos:line="47" pos:column="42"/></name></name>
	      <operator pos:line="48" pos:column="15">||<pos:position pos:line="48" pos:column="17"/></operator> <name><name pos:line="48" pos:column="18">sctx<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">-&gt;<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="24">sifted_states<pos:position pos:line="48" pos:column="37"/></name><index pos:line="48" pos:column="37">[<expr><name pos:line="48" pos:column="38">to_idx<pos:position pos:line="48" pos:column="44"/></name></expr>]<pos:position pos:line="48" pos:column="45"/></index></name> <operator pos:line="48" pos:column="46">==<pos:position pos:line="48" pos:column="48"/></operator> <name pos:line="48" pos:column="49">NULL<pos:position pos:line="48" pos:column="53"/></name>
	      <operator pos:line="49" pos:column="15">||<pos:position pos:line="49" pos:column="17"/></operator> <operator pos:line="49" pos:column="18">!<pos:position pos:line="49" pos:column="19"/></operator><call><name pos:line="49" pos:column="19">STATE_NODE_CONTAINS<pos:position pos:line="49" pos:column="38"/></name> <argument_list pos:line="49" pos:column="39">(<argument><expr><name><name pos:line="49" pos:column="40">sctx<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">sifted_states<pos:position pos:line="49" pos:column="59"/></name><index pos:line="49" pos:column="59">[<expr><name pos:line="49" pos:column="60">to_idx<pos:position pos:line="49" pos:column="66"/></name></expr>]<pos:position pos:line="49" pos:column="67"/></index></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="69">dst_node<pos:position pos:line="49" pos:column="77"/></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call>
	      <operator pos:line="50" pos:column="15">||<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">check_dst_limits<pos:position pos:line="50" pos:column="34"/></name> <argument_list pos:line="50" pos:column="35">(<argument><expr><name pos:line="50" pos:column="36">mctx<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name><name pos:line="50" pos:column="43">sctx<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">-&gt;<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="49">limits<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="57">node<pos:position pos:line="50" pos:column="61"/></name></expr></argument>,
				   <argument><expr><name pos:line="51" pos:column="36">str_idx<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="45">dst_node<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">to_idx<pos:position pos:line="51" pos:column="61"/></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="63"/></condition><then pos:line="51" pos:column="63">
	    <block type="pseudo"><continue pos:line="52" pos:column="13">continue;<pos:position pos:line="52" pos:column="22"/></continue></block></then></if>

	  <if pos:line="54" pos:column="11">if <condition pos:line="54" pos:column="14">(<expr><name><name pos:line="54" pos:column="15">local_sctx<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">.<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">sifted_states<pos:position pos:line="54" pos:column="39"/></name></name> <operator pos:line="54" pos:column="40">==<pos:position pos:line="54" pos:column="42"/></operator> <name pos:line="54" pos:column="43">NULL<pos:position pos:line="54" pos:column="47"/></name></expr>)<pos:position pos:line="54" pos:column="48"/></condition><then pos:line="54" pos:column="48">
	    <block pos:line="55" pos:column="13">{
	      <expr_stmt><expr><name pos:line="56" pos:column="15">local_sctx<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <operator pos:line="56" pos:column="28">*<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">sctx<pos:position pos:line="56" pos:column="33"/></name></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="57" pos:column="15">err<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <call><name pos:line="57" pos:column="21">re_node_set_init_copy<pos:position pos:line="57" pos:column="42"/></name> <argument_list pos:line="57" pos:column="43">(<argument><expr><operator pos:line="57" pos:column="44">&amp;<pos:position pos:line="57" pos:column="49"/></operator><name><name pos:line="57" pos:column="45">local_sctx<pos:position pos:line="57" pos:column="55"/></name><operator pos:line="57" pos:column="55">.<pos:position pos:line="57" pos:column="56"/></operator><name pos:line="57" pos:column="56">limits<pos:position pos:line="57" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="64">&amp;<pos:position pos:line="57" pos:column="69"/></operator><name><name pos:line="57" pos:column="65">sctx<pos:position pos:line="57" pos:column="69"/></name><operator pos:line="57" pos:column="69">-&gt;<pos:position pos:line="57" pos:column="74"/></operator><name pos:line="57" pos:column="71">limits<pos:position pos:line="57" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>
	      <if pos:line="58" pos:column="15">if <condition pos:line="58" pos:column="18">(<expr><call><name pos:line="58" pos:column="19">BE<pos:position pos:line="58" pos:column="21"/></name> <argument_list pos:line="58" pos:column="22">(<argument><expr><name pos:line="58" pos:column="23">err<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">!=<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">REG_NOERROR<pos:position pos:line="58" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="43">0<pos:position pos:line="58" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="46"/></condition><then pos:line="58" pos:column="46">
		<block type="pseudo"><goto pos:line="59" pos:column="17">goto <name pos:line="59" pos:column="22">free_return<pos:position pos:line="59" pos:column="33"/></name>;<pos:position pos:line="59" pos:column="34"/></goto></block></then></if>
	    }<pos:position pos:line="60" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><name><name pos:line="61" pos:column="11">local_sctx<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">.<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">last_node<pos:position pos:line="61" pos:column="31"/></name></name> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <name pos:line="61" pos:column="34">node<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="62" pos:column="11">local_sctx<pos:position pos:line="62" pos:column="21"/></name><operator pos:line="62" pos:column="21">.<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">last_str_idx<pos:position pos:line="62" pos:column="34"/></name></name> <operator pos:line="62" pos:column="35">=<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="37">str_idx<pos:position pos:line="62" pos:column="44"/></name></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="63" pos:column="11">ret<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">re_node_set_insert<pos:position pos:line="63" pos:column="35"/></name> <argument_list pos:line="63" pos:column="36">(<argument><expr><operator pos:line="63" pos:column="37">&amp;<pos:position pos:line="63" pos:column="42"/></operator><name><name pos:line="63" pos:column="38">local_sctx<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">.<pos:position pos:line="63" pos:column="49"/></operator><name pos:line="63" pos:column="49">limits<pos:position pos:line="63" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="57">enabled_idx<pos:position pos:line="63" pos:column="68"/></name></expr></argument>)<pos:position pos:line="63" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="70"/></expr_stmt>
	  <if pos:line="64" pos:column="11">if <condition pos:line="64" pos:column="14">(<expr><call><name pos:line="64" pos:column="15">BE<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">ret<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">&lt;<pos:position pos:line="64" pos:column="27"/></operator> <literal type="number" pos:line="64" pos:column="25">0<pos:position pos:line="64" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="28">0<pos:position pos:line="64" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="31"/></condition><then pos:line="64" pos:column="31">
	    <block pos:line="65" pos:column="13">{
	      <expr_stmt><expr><name pos:line="66" pos:column="15">err<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <name pos:line="66" pos:column="21">REG_ESPACE<pos:position pos:line="66" pos:column="31"/></name></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
	      <goto pos:line="67" pos:column="15">goto <name pos:line="67" pos:column="20">free_return<pos:position pos:line="67" pos:column="31"/></name>;<pos:position pos:line="67" pos:column="32"/></goto>
	    }<pos:position pos:line="68" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><name pos:line="69" pos:column="11">cur_state<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">=<pos:position pos:line="69" pos:column="22"/></operator> <name><name pos:line="69" pos:column="23">local_sctx<pos:position pos:line="69" pos:column="33"/></name><operator pos:line="69" pos:column="33">.<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="34">sifted_states<pos:position pos:line="69" pos:column="47"/></name><index pos:line="69" pos:column="47">[<expr><name pos:line="69" pos:column="48">str_idx<pos:position pos:line="69" pos:column="55"/></name></expr>]<pos:position pos:line="69" pos:column="56"/></index></name></expr>;<pos:position pos:line="69" pos:column="57"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="70" pos:column="11">err<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">=<pos:position pos:line="70" pos:column="16"/></operator> <call><name pos:line="70" pos:column="17">sift_states_backward<pos:position pos:line="70" pos:column="37"/></name> <argument_list pos:line="70" pos:column="38">(<argument><expr><name pos:line="70" pos:column="39">mctx<pos:position pos:line="70" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="45">&amp;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="46">local_sctx<pos:position pos:line="70" pos:column="56"/></name></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt>
	  <if pos:line="71" pos:column="11">if <condition pos:line="71" pos:column="14">(<expr><call><name pos:line="71" pos:column="15">BE<pos:position pos:line="71" pos:column="17"/></name> <argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">err<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">!=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">REG_NOERROR<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="39">0<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="42"/></condition><then pos:line="71" pos:column="42">
	    <block type="pseudo"><goto pos:line="72" pos:column="13">goto <name pos:line="72" pos:column="18">free_return<pos:position pos:line="72" pos:column="29"/></name>;<pos:position pos:line="72" pos:column="30"/></goto></block></then></if>
	  <if pos:line="73" pos:column="11">if <condition pos:line="73" pos:column="14">(<expr><name><name pos:line="73" pos:column="15">sctx<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">limited_states<pos:position pos:line="73" pos:column="35"/></name></name> <operator pos:line="73" pos:column="36">!=<pos:position pos:line="73" pos:column="38"/></operator> <name pos:line="73" pos:column="39">NULL<pos:position pos:line="73" pos:column="43"/></name></expr>)<pos:position pos:line="73" pos:column="44"/></condition><then pos:line="73" pos:column="44">
	    <block pos:line="74" pos:column="13">{
	      <expr_stmt><expr><name pos:line="75" pos:column="15">err<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <call><name pos:line="75" pos:column="21">merge_state_array<pos:position pos:line="75" pos:column="38"/></name> <argument_list pos:line="75" pos:column="39">(<argument><expr><name pos:line="75" pos:column="40">dfa<pos:position pos:line="75" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="45">sctx<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">-&gt;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="51">limited_states<pos:position pos:line="75" pos:column="65"/></name></name></expr></argument>,
				       <argument><expr><name><name pos:line="76" pos:column="40">local_sctx<pos:position pos:line="76" pos:column="50"/></name><operator pos:line="76" pos:column="50">.<pos:position pos:line="76" pos:column="51"/></operator><name pos:line="76" pos:column="51">sifted_states<pos:position pos:line="76" pos:column="64"/></name></name></expr></argument>,
				       <argument><expr><name pos:line="77" pos:column="40">str_idx<pos:position pos:line="77" pos:column="47"/></name> <operator pos:line="77" pos:column="48">+<pos:position pos:line="77" pos:column="49"/></operator> <literal type="number" pos:line="77" pos:column="50">1<pos:position pos:line="77" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="53"/></expr_stmt>
	      <if pos:line="78" pos:column="15">if <condition pos:line="78" pos:column="18">(<expr><call><name pos:line="78" pos:column="19">BE<pos:position pos:line="78" pos:column="21"/></name> <argument_list pos:line="78" pos:column="22">(<argument><expr><name pos:line="78" pos:column="23">err<pos:position pos:line="78" pos:column="26"/></name> <operator pos:line="78" pos:column="27">!=<pos:position pos:line="78" pos:column="29"/></operator> <name pos:line="78" pos:column="30">REG_NOERROR<pos:position pos:line="78" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="43">0<pos:position pos:line="78" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="46"/></condition><then pos:line="78" pos:column="46">
		<block type="pseudo"><goto pos:line="79" pos:column="17">goto <name pos:line="79" pos:column="22">free_return<pos:position pos:line="79" pos:column="33"/></name>;<pos:position pos:line="79" pos:column="34"/></goto></block></then></if>
	    }<pos:position pos:line="80" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><name><name pos:line="81" pos:column="11">local_sctx<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">.<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">sifted_states<pos:position pos:line="81" pos:column="35"/></name><index pos:line="81" pos:column="35">[<expr><name pos:line="81" pos:column="36">str_idx<pos:position pos:line="81" pos:column="43"/></name></expr>]<pos:position pos:line="81" pos:column="44"/></index></name> <operator pos:line="81" pos:column="45">=<pos:position pos:line="81" pos:column="46"/></operator> <name pos:line="81" pos:column="47">cur_state<pos:position pos:line="81" pos:column="56"/></name></expr>;<pos:position pos:line="81" pos:column="57"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="82" pos:column="11">re_node_set_remove<pos:position pos:line="82" pos:column="29"/></name> <argument_list pos:line="82" pos:column="30">(<argument><expr><operator pos:line="82" pos:column="31">&amp;<pos:position pos:line="82" pos:column="36"/></operator><name><name pos:line="82" pos:column="32">local_sctx<pos:position pos:line="82" pos:column="42"/></name><operator pos:line="82" pos:column="42">.<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="43">limits<pos:position pos:line="82" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="51">enabled_idx<pos:position pos:line="82" pos:column="62"/></name></expr></argument>)<pos:position pos:line="82" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="64"/></expr_stmt>

	  <comment type="block" pos:line="84" pos:column="11">/* mctx-&gt;bkref_ents may have changed, reload the pointer.  */</comment>
	  <expr_stmt><expr><name pos:line="85" pos:column="11">entry<pos:position pos:line="85" pos:column="16"/></name> <operator pos:line="85" pos:column="17">=<pos:position pos:line="85" pos:column="18"/></operator> <name><name pos:line="85" pos:column="19">mctx<pos:position pos:line="85" pos:column="23"/></name><operator pos:line="85" pos:column="23">-&gt;<pos:position pos:line="85" pos:column="28"/></operator><name pos:line="85" pos:column="25">bkref_ents<pos:position pos:line="85" pos:column="35"/></name></name> <operator pos:line="85" pos:column="36">+<pos:position pos:line="85" pos:column="37"/></operator> <name pos:line="85" pos:column="38">enabled_idx<pos:position pos:line="85" pos:column="49"/></name></expr>;<pos:position pos:line="85" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block>
      while <condition pos:line="87" pos:column="13">(<expr><name pos:line="87" pos:column="14">enabled_idx<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">++<pos:position pos:line="87" pos:column="27"/></operator></expr><operator pos:line="87" pos:column="27">,<pos:position pos:line="87" pos:column="28"/></operator> <expr><name pos:line="87" pos:column="29">entry<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">++<pos:position pos:line="87" pos:column="36"/></operator><operator pos:line="87" pos:column="36">-&gt;<pos:position pos:line="87" pos:column="41"/></operator><name pos:line="87" pos:column="38">more<pos:position pos:line="87" pos:column="42"/></name></expr>)<pos:position pos:line="87" pos:column="43"/></condition>;<pos:position pos:line="87" pos:column="44"/></do>
    }<pos:position pos:line="88" pos:column="6"/></block></for>
  <expr_stmt><expr><name pos:line="89" pos:column="3">err<pos:position pos:line="89" pos:column="6"/></name> <operator pos:line="89" pos:column="7">=<pos:position pos:line="89" pos:column="8"/></operator> <name pos:line="89" pos:column="9">REG_NOERROR<pos:position pos:line="89" pos:column="20"/></name></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
 <label><name pos:line="90" pos:column="2">free_return<pos:position pos:line="90" pos:column="13"/></name>:<pos:position pos:line="90" pos:column="14"/></label>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name><name pos:line="91" pos:column="7">local_sctx<pos:position pos:line="91" pos:column="17"/></name><operator pos:line="91" pos:column="17">.<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">sifted_states<pos:position pos:line="91" pos:column="31"/></name></name> <operator pos:line="91" pos:column="32">!=<pos:position pos:line="91" pos:column="34"/></operator> <name pos:line="91" pos:column="35">NULL<pos:position pos:line="91" pos:column="39"/></name></expr>)<pos:position pos:line="91" pos:column="40"/></condition><then pos:line="91" pos:column="40">
    <block pos:line="92" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">re_node_set_free<pos:position pos:line="93" pos:column="23"/></name> <argument_list pos:line="93" pos:column="24">(<argument><expr><operator pos:line="93" pos:column="25">&amp;<pos:position pos:line="93" pos:column="30"/></operator><name><name pos:line="93" pos:column="26">local_sctx<pos:position pos:line="93" pos:column="36"/></name><operator pos:line="93" pos:column="36">.<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="37">limits<pos:position pos:line="93" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

  <return pos:line="96" pos:column="3">return <expr><name pos:line="96" pos:column="10">err<pos:position pos:line="96" pos:column="13"/></name></expr>;<pos:position pos:line="96" pos:column="14"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

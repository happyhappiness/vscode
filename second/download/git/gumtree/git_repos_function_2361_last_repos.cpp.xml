<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2361_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fill_one<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">what<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">all_attrs_item<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">all_attrs<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">match_attr<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">a<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">rem<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name><name pos:line="6" pos:column="18">a<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">num_attr<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">-<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="32">1<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></init> <condition><expr><name pos:line="6" pos:column="35">rem<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">&gt;<pos:position pos:line="6" pos:column="43"/></operator> <literal type="number" pos:line="6" pos:column="41">0<pos:position pos:line="6" pos:column="42"/></literal> <operator pos:line="6" pos:column="43">&amp;&amp;<pos:position pos:line="6" pos:column="53"/></operator> <name pos:line="6" pos:column="46">i<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">&gt;=<pos:position pos:line="6" pos:column="53"/></operator> <literal type="number" pos:line="6" pos:column="51">0<pos:position pos:line="6" pos:column="52"/></literal></expr>;<pos:position pos:line="6" pos:column="53"/></condition> <incr><expr><name pos:line="6" pos:column="54">i<pos:position pos:line="6" pos:column="55"/></name><operator pos:line="6" pos:column="55">--<pos:position pos:line="6" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="58"/></control> <block pos:line="6" pos:column="59">{
		<decl_stmt><decl><type><specifier pos:line="7" pos:column="17">const<pos:position pos:line="7" pos:column="22"/></specifier> <name><name pos:line="7" pos:column="23">struct<pos:position pos:line="7" pos:column="29"/></name> <name pos:line="7" pos:column="30">git_attr<pos:position pos:line="7" pos:column="38"/></name></name> <modifier pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></modifier></type><name pos:line="7" pos:column="40">attr<pos:position pos:line="7" pos:column="44"/></name> <init pos:line="7" pos:column="45">= <expr><name><name pos:line="7" pos:column="47">a<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">state<pos:position pos:line="7" pos:column="55"/></name><index pos:line="7" pos:column="55">[<expr><name pos:line="7" pos:column="56">i<pos:position pos:line="7" pos:column="57"/></name></expr>]<pos:position pos:line="7" pos:column="58"/></index></name><operator pos:line="7" pos:column="58">.<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="59">attr<pos:position pos:line="7" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier><modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">n<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator><operator pos:line="8" pos:column="35">(<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">all_attrs<pos:position pos:line="8" pos:column="45"/></name><index pos:line="8" pos:column="45">[<expr><name><name pos:line="8" pos:column="46">attr<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">attr_nr<pos:position pos:line="8" pos:column="59"/></name></name></expr>]<pos:position pos:line="8" pos:column="60"/></index></name><operator pos:line="8" pos:column="60">.<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="61">value<pos:position pos:line="8" pos:column="66"/></name><operator pos:line="8" pos:column="66">)<pos:position pos:line="8" pos:column="67"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="68"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">v<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name><name pos:line="9" pos:column="33">a<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">state<pos:position pos:line="9" pos:column="41"/></name><index pos:line="9" pos:column="41">[<expr><name pos:line="9" pos:column="42">i<pos:position pos:line="9" pos:column="43"/></name></expr>]<pos:position pos:line="9" pos:column="44"/></index></name><operator pos:line="9" pos:column="44">.<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">setto<pos:position pos:line="9" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="51"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">n<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">==<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">ATTR__UNKNOWN<pos:position pos:line="11" pos:column="40"/></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">debug_set<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">what<pos:position pos:line="12" pos:column="39"/></name></expr></argument>,
				  <argument><expr><ternary><condition><expr><name><name pos:line="13" pos:column="35">a<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">is_macro<pos:position pos:line="13" pos:column="46"/></name></name></expr> ?<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <expr><name><name pos:line="13" pos:column="49">a<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">u<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">.<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">attr<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">name<pos:position pos:line="13" pos:column="64"/></name></name></expr> <pos:position pos:line="13" pos:column="65"/></then><else pos:line="13" pos:column="65">: <expr><name><name pos:line="13" pos:column="67">a<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">-&gt;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="70">u<pos:position pos:line="13" pos:column="71"/></name><operator pos:line="13" pos:column="71">.<pos:position pos:line="13" pos:column="72"/></operator><name pos:line="13" pos:column="72">pat<pos:position pos:line="13" pos:column="75"/></name><operator pos:line="13" pos:column="75">.<pos:position pos:line="13" pos:column="76"/></operator><name pos:line="13" pos:column="76">pattern<pos:position pos:line="13" pos:column="83"/></name></name></expr></else></ternary></expr></argument>,
				  <argument><expr><name pos:line="14" pos:column="35">attr<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">v<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">n<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">v<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">rem<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">--<pos:position pos:line="16" pos:column="30"/></operator></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">rem<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">macroexpand_one<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">all_attrs<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="58">attr<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">attr_nr<pos:position pos:line="17" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="73">rem<pos:position pos:line="17" pos:column="76"/></name></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></for>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">rem<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_764.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">submodule_needs_pushing<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">path<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">sha1_array<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">commits<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">submodule_has_commits<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">path<pos:position pos:line="3" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="42">commits<pos:position pos:line="3" pos:column="49"/></name></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="51"/></condition><then pos:line="3" pos:column="51">
		<comment type="block" pos:line="4" pos:column="17">/*
		 * NOTE: We do consider it safe to return "no" here. The
		 * correct answer would be "We do not know" instead of
		 * "No push needed", but it is quite hard to change
		 * the submodule pointer without having the submodule
		 * around. If a user did however change the submodules
		 * without having the submodule around, this indicates
		 * an expert who knows what they are doing or a
		 * maintainer integrating work from other people. In
		 * both cases it should be safe to skip this check.
		 */</comment>
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">for_each_remote_ref_submodule<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">path<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">has_remote<pos:position pos:line="17" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">NULL<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call> <operator pos:line="17" pos:column="67">&gt;<pos:position pos:line="17" pos:column="71"/></operator> <literal type="number" pos:line="17" pos:column="69">0<pos:position pos:line="17" pos:column="70"/></literal></expr>)<pos:position pos:line="17" pos:column="71"/></condition><then pos:line="17" pos:column="71"> <block pos:line="17" pos:column="72">{
		<decl_stmt><decl><type><name><name pos:line="18" pos:column="17">struct<pos:position pos:line="18" pos:column="23"/></name> <name pos:line="18" pos:column="24">child_process<pos:position pos:line="18" pos:column="37"/></name></name></type> <name pos:line="18" pos:column="38">cp<pos:position pos:line="18" pos:column="40"/></name> <init pos:line="18" pos:column="41">= <expr><name pos:line="18" pos:column="43">CHILD_PROCESS_INIT<pos:position pos:line="18" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">strbuf<pos:position pos:line="19" pos:column="30"/></name></name></type> <name pos:line="19" pos:column="31">buf<pos:position pos:line="19" pos:column="34"/></name> <init pos:line="19" pos:column="35">= <expr><name pos:line="19" pos:column="37">STRBUF_INIT<pos:position pos:line="19" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">needs_pushing<pos:position pos:line="20" pos:column="34"/></name> <init pos:line="20" pos:column="35">= <expr><literal type="number" pos:line="20" pos:column="37">0<pos:position pos:line="20" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="22" pos:column="17">argv_array_push<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name><name pos:line="22" pos:column="34">cp<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">.<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="37">args<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="43">"rev-list"<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">sha1_array_for_each_unique<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">commits<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">append_sha1_to_argv<pos:position pos:line="23" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="74">&amp;<pos:position pos:line="23" pos:column="79"/></operator><name><name pos:line="23" pos:column="75">cp<pos:position pos:line="23" pos:column="77"/></name><operator pos:line="23" pos:column="77">.<pos:position pos:line="23" pos:column="78"/></operator><name pos:line="23" pos:column="78">args<pos:position pos:line="23" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">argv_array_pushl<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><operator pos:line="24" pos:column="34">&amp;<pos:position pos:line="24" pos:column="39"/></operator><name><name pos:line="24" pos:column="35">cp<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">.<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">args<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="44">"--not"<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="53">"--remotes"<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="66">"-n"<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="72">"1"<pos:position pos:line="24" pos:column="75"/></literal></expr></argument> , <argument><expr><name pos:line="24" pos:column="78">NULL<pos:position pos:line="24" pos:column="82"/></name></expr></argument>)<pos:position pos:line="24" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="84"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="26" pos:column="17">prepare_submodule_repo_env<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><operator pos:line="26" pos:column="44">&amp;<pos:position pos:line="26" pos:column="49"/></operator><name><name pos:line="26" pos:column="45">cp<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">.<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">env_array<pos:position pos:line="26" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">cp<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">git_cmd<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="30">1<pos:position pos:line="27" pos:column="31"/></literal></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">cp<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">no_stdin<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="number" pos:line="28" pos:column="31">1<pos:position pos:line="28" pos:column="32"/></literal></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">cp<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">out<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <operator pos:line="29" pos:column="26">-<pos:position pos:line="29" pos:column="27"/></operator><literal type="number" pos:line="29" pos:column="27">1<pos:position pos:line="29" pos:column="28"/></literal></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">cp<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">dir<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">path<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">start_command<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><operator pos:line="31" pos:column="35">&amp;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="36">cp<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">die<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><literal type="string" pos:line="32" pos:column="29">"Could not run 'git rev-list &lt;commits&gt; --not --remotes -n 1' command in submodule %s"<pos:position pos:line="32" pos:column="120"/></literal></expr></argument>,
					<argument><expr><name pos:line="33" pos:column="41">path<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">strbuf_read<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="34">buf<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="39">cp<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">.<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">out<pos:position pos:line="34" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="47">41<pos:position pos:line="34" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">needs_pushing<pos:position pos:line="35" pos:column="38"/></name> <operator pos:line="35" pos:column="39">=<pos:position pos:line="35" pos:column="40"/></operator> <literal type="number" pos:line="35" pos:column="41">1<pos:position pos:line="35" pos:column="42"/></literal></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">finish_command<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><operator pos:line="36" pos:column="32">&amp;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="33">cp<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">close<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name><name pos:line="37" pos:column="23">cp<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">out<pos:position pos:line="37" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">strbuf_release<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><operator pos:line="38" pos:column="32">&amp;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="33">buf<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">needs_pushing<pos:position pos:line="39" pos:column="37"/></name></expr>;<pos:position pos:line="39" pos:column="38"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2989_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_insn_buffer<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buf<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">todo_list<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">todo_list<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">todo_item<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">item<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">buf<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="25">next_p<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">res<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="25">fixup_okay<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><call><name pos:line="5" pos:column="38">file_exists<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><call><name pos:line="5" pos:column="50">rebase_path_done<pos:position pos:line="5" pos:column="66"/></name><argument_list pos:line="5" pos:column="66">()<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">1<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">p<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></condition> <incr><expr><name pos:line="7" pos:column="25">i<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">++<pos:position pos:line="7" pos:column="28"/></operator></expr><operator pos:line="7" pos:column="28">,<pos:position pos:line="7" pos:column="29"/></operator> <expr><name pos:line="7" pos:column="30">p<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">=<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">next_p<pos:position pos:line="7" pos:column="40"/></name></expr></incr>)<pos:position pos:line="7" pos:column="41"/></control> <block pos:line="7" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">eol<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name pos:line="8" pos:column="29">strchrnul<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">p<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="42">'\n'<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>

		<expr_stmt><expr><name pos:line="10" pos:column="17">next_p<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <ternary><condition><expr><operator pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">eol<pos:position pos:line="10" pos:column="30"/></name></expr> ?<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <expr><name pos:line="10" pos:column="33">eol<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">+<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="39">1<pos:position pos:line="10" pos:column="40"/></literal></expr> <comment type="block" pos:line="10" pos:column="41">/* skip LF */</comment> <pos:position pos:line="10" pos:column="55"/></then><else pos:line="10" pos:column="55">: <expr><name pos:line="10" pos:column="57">eol<pos:position pos:line="10" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">p<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">eol<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <name><name pos:line="12" pos:column="33">eol<pos:position pos:line="12" pos:column="36"/></name><index pos:line="12" pos:column="36">[<expr><operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator><literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr>]<pos:position pos:line="12" pos:column="40"/></index></name> <operator pos:line="12" pos:column="41">==<pos:position pos:line="12" pos:column="43"/></operator> <literal type="char" pos:line="12" pos:column="44">'\r'<pos:position pos:line="12" pos:column="48"/></literal></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">eol<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">--<pos:position pos:line="13" pos:column="30"/></operator></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt></block></then></if> <comment type="block" pos:line="13" pos:column="32">/* strip Carriage Return */</comment>

		<expr_stmt><expr><name pos:line="15" pos:column="17">item<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="24">append_new_todo<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">todo_list<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">item<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">offset_in_buf<pos:position pos:line="16" pos:column="36"/></name></name> <operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="39">p<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">-<pos:position pos:line="16" pos:column="42"/></operator> <name><name pos:line="16" pos:column="43">todo_list<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">buf<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">.<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">buf<pos:position pos:line="16" pos:column="61"/></name></name></expr>;<pos:position pos:line="16" pos:column="62"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">parse_insn_line<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">item<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">p<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">eol<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51"> <block pos:line="17" pos:column="52">{
			<expr_stmt><expr><name pos:line="18" pos:column="25">res<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">error<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><call><name pos:line="18" pos:column="37">_<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><literal type="string" pos:line="18" pos:column="39">"invalid line %d: %.*s"<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="19" pos:column="33">i<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><call pos:line="19" pos:column="36">(<name pos:line="19" pos:column="37">int<pos:position pos:line="19" pos:column="40"/></name>)<argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">eol<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">-<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="48">p<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">p<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">item<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">command<pos:position pos:line="20" pos:column="38"/></name></name> <operator pos:line="20" pos:column="39">=<pos:position pos:line="20" pos:column="40"/></operator> <name pos:line="20" pos:column="41">TODO_NOOP<pos:position pos:line="20" pos:column="50"/></name></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">fixup_okay<pos:position pos:line="23" pos:column="31"/></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32">
			<block type="pseudo"><empty_stmt pos:line="24" pos:column="25">;<pos:position pos:line="24" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="24" pos:column="27">/* do nothing */</comment>
		<elseif pos:line="25" pos:column="17">else <if pos:line="25" pos:column="22">if <condition pos:line="25" pos:column="25">(<expr><call><name pos:line="25" pos:column="26">is_fixup<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">item<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">command<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><call><name pos:line="26" pos:column="32">error<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><call><name pos:line="26" pos:column="38">_<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><literal type="string" pos:line="26" pos:column="40">"cannot '%s' without a previous commit"<pos:position pos:line="26" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="80"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="27" pos:column="33">command_to_string<pos:position pos:line="27" pos:column="50"/></name><argument_list pos:line="27" pos:column="50">(<argument><expr><name><name pos:line="27" pos:column="51">item<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">command<pos:position pos:line="27" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></return></block></then></if></elseif>
		<elseif pos:line="28" pos:column="17">else <if pos:line="28" pos:column="22">if <condition pos:line="28" pos:column="25">(<expr><operator pos:line="28" pos:column="26">!<pos:position pos:line="28" pos:column="27"/></operator><call><name pos:line="28" pos:column="27">is_noop<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name><name pos:line="28" pos:column="35">item<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">command<pos:position pos:line="28" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">fixup_okay<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">=<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="38">1<pos:position pos:line="29" pos:column="39"/></literal></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="30" pos:column="10"/></block></for>

	<return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">res<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

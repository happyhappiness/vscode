<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5772_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_options_to_argv<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">argv_array<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">argv<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">dry_run<pos:position pos:line="3" pos:column="20"/></name></expr>)<pos:position pos:line="3" pos:column="21"/></condition><then pos:line="3" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">argv_array_push<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><name pos:line="4" pos:column="33">argv<pos:position pos:line="4" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="39">"--dry-run"<pos:position pos:line="4" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="52"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">prune<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">!=<pos:position pos:line="5" pos:column="21"/></operator> <operator pos:line="5" pos:column="22">-<pos:position pos:line="5" pos:column="23"/></operator><literal type="number" pos:line="5" pos:column="23">1<pos:position pos:line="5" pos:column="24"/></literal></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">argv_array_push<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">argv<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="6" pos:column="39">prune<pos:position pos:line="6" pos:column="44"/></name></expr> ?<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46"> <expr><literal type="string" pos:line="6" pos:column="47">"--prune"<pos:position pos:line="6" pos:column="56"/></literal></expr> <pos:position pos:line="6" pos:column="57"/></then><else pos:line="6" pos:column="57">: <expr><literal type="string" pos:line="6" pos:column="59">"--no-prune"<pos:position pos:line="6" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">update_head_ok<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">argv_array_push<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">argv<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="39">"--update-head-ok"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">force<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">argv_array_push<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">argv<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"--force"<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">keep<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">argv_array_push<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">argv<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">"--keep"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">recurse_submodules<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">==<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">RECURSE_SUBMODULES_ON<pos:position pos:line="13" pos:column="56"/></name></expr>)<pos:position pos:line="13" pos:column="57"/></condition><then pos:line="13" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">argv_array_push<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">argv<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="39">"--recurse-submodules"<pos:position pos:line="14" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt></block></then>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><name pos:line="15" pos:column="18">recurse_submodules<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">==<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">RECURSE_SUBMODULES_ON_DEMAND<pos:position pos:line="15" pos:column="68"/></name></expr>)<pos:position pos:line="15" pos:column="69"/></condition><then pos:line="15" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">argv_array_push<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">argv<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="39">"--recurse-submodules=on-demand"<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">tags<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">TAGS_SET<pos:position pos:line="17" pos:column="29"/></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">argv_array_push<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">argv<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">"--tags"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt></block></then>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><name pos:line="19" pos:column="18">tags<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">==<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">TAGS_UNSET<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">argv_array_push<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">argv<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="39">"--no-tags"<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">verbosity<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&gt;=<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="26">2<pos:position pos:line="21" pos:column="27"/></literal></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">argv_array_push<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">argv<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"-v"<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">verbosity<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&gt;=<pos:position pos:line="23" pos:column="28"/></operator> <literal type="number" pos:line="23" pos:column="26">1<pos:position pos:line="23" pos:column="27"/></literal></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">argv_array_push<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">argv<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="39">"-v"<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt></block></then>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><name pos:line="25" pos:column="18">verbosity<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&lt;<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">argv_array_push<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">argv<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"-q"<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt></block></then></if></elseif></if>

}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_592_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_pattern<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">ref_filter<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">filter<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">refname<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">patterns<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name><name pos:line="3" pos:column="33">filter<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">-&gt;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="41">name_patterns<pos:position pos:line="3" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">flags<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">filter<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">ignore_case<pos:position pos:line="6" pos:column="32"/></name></name></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">flags<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">|=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">WM_CASEFOLD<pos:position pos:line="7" pos:column="37"/></name></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="9" pos:column="9">/*
	 * When no '--format' option is given we need to skip the prefix
	 * for matching refs of tags and branches.
	 */</comment>
	<expr_stmt><expr><call pos:line="13" pos:column="9">(<name pos:line="13" pos:column="10">void<pos:position pos:line="13" pos:column="14"/></name>)<argument_list pos:line="13" pos:column="15">(<argument><expr><call><name pos:line="13" pos:column="16">skip_prefix<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">refname<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="37">"refs/tags/"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="51">&amp;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="52">refname<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call> <operator pos:line="13" pos:column="61">||<pos:position pos:line="13" pos:column="63"/></operator>
	       <call><name pos:line="14" pos:column="16">skip_prefix<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">refname<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="37">"refs/heads/"<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="52">&amp;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="53">refname<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call> <operator pos:line="14" pos:column="62">||<pos:position pos:line="14" pos:column="64"/></operator>
	       <call><name pos:line="15" pos:column="16">skip_prefix<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">refname<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="37">"refs/remotes/"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="55">refname<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call> <operator pos:line="15" pos:column="64">||<pos:position pos:line="15" pos:column="66"/></operator>
	       <call><name pos:line="16" pos:column="16">skip_prefix<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">refname<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="37">"refs/"<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="46">&amp;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="47">refname<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init pos:line="18" pos:column="14">;<pos:position pos:line="18" pos:column="15"/></init> <condition><expr><operator pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">patterns<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></condition> <incr><expr><name pos:line="18" pos:column="27">patterns<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">++<pos:position pos:line="18" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="38"/></control> <block pos:line="18" pos:column="39">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><call><name pos:line="19" pos:column="22">wildmatch<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><operator pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">patterns<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">refname<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">flags<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal></expr>;<pos:position pos:line="20" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>
	<return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

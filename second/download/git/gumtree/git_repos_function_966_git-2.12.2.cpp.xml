<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_966_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_longstatus_print_verbose<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">wt_status<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">s<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">rev<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">setup_revision_opt<pos:position pos:line="4" pos:column="34"/></name></name></type> <name pos:line="4" pos:column="35">opt<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">dirty_submodules<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">c<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">color<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">WT_STATUS_HEADER<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">s<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">init_revisions<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="25">rev<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">DIFF_OPT_SET<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><operator pos:line="9" pos:column="22">&amp;<pos:position pos:line="9" pos:column="27"/></operator><name><name pos:line="9" pos:column="23">rev<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">diffopt<pos:position pos:line="9" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">ALLOW_TEXTCONV<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">rev<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">diffopt<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">ita_invisible_in_index<pos:position pos:line="10" pos:column="43"/></name></name> <operator pos:line="10" pos:column="44">=<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">memset<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><operator pos:line="12" pos:column="16">&amp;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="17">opt<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="25">sizeof<argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">opt<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">opt<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">def<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <ternary><condition><expr><name><name pos:line="13" pos:column="19">s<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">is_initial<pos:position pos:line="13" pos:column="32"/></name></name></expr> ?<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34"> <expr><name pos:line="13" pos:column="35">EMPTY_TREE_SHA1_HEX<pos:position pos:line="13" pos:column="54"/></name></expr> <pos:position pos:line="13" pos:column="55"/></then><else pos:line="13" pos:column="55">: <expr><name><name pos:line="13" pos:column="57">s<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">reference<pos:position pos:line="13" pos:column="69"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">setup_revisions<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">NULL<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="34">&amp;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="35">rev<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="41">opt<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="16" pos:column="9">rev<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">diffopt<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">output_format<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">|=<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">DIFF_FORMAT_PATCH<pos:position pos:line="16" pos:column="55"/></name></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">rev<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">diffopt<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">detect_rename<pos:position pos:line="17" pos:column="34"/></name></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <literal type="number" pos:line="17" pos:column="37">1<pos:position pos:line="17" pos:column="38"/></literal></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">rev<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">diffopt<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">.<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">file<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="28">s<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">fp<pos:position pos:line="18" pos:column="33"/></name></name></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">rev<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">diffopt<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">close_file<pos:position pos:line="19" pos:column="31"/></name></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="34">0<pos:position pos:line="19" pos:column="35"/></literal></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
	<comment type="block" pos:line="20" pos:column="9">/*
	 * If we're not going to stdout, then we definitely don't
	 * want color, since we are going to the commit message
	 * file (and even the "auto" setting won't work, since it
	 * will have checked isatty on stdout). But we then do want
	 * to insert the scissor line here to reliably remove the
	 * diff before committing.
	 */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">s<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">fp<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">!=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">stdout<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <block pos:line="28" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">rev<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">.<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">diffopt<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">.<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">use_color<pos:position pos:line="29" pos:column="38"/></name></name> <operator pos:line="29" pos:column="39">=<pos:position pos:line="29" pos:column="40"/></operator> <literal type="number" pos:line="29" pos:column="41">0<pos:position pos:line="29" pos:column="42"/></literal></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">wt_status_add_cut_line<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name><name pos:line="30" pos:column="40">s<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">fp<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">s<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">verbose<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">&gt;<pos:position pos:line="32" pos:column="28"/></operator> <literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal> <operator pos:line="32" pos:column="28">&amp;&amp;<pos:position pos:line="32" pos:column="38"/></operator> <name><name pos:line="32" pos:column="31">s<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">commitable<pos:position pos:line="32" pos:column="44"/></name></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45"> <block pos:line="32" pos:column="46">{
		<comment type="block" pos:line="33" pos:column="17">/* print_updated() printed a header, so do we */</comment>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">s<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">fp<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">!=<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="30">stdout<pos:position pos:line="34" pos:column="36"/></name></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">wt_longstatus_print_trailer<pos:position pos:line="35" pos:column="52"/></name><argument_list pos:line="35" pos:column="52">(<argument><expr><name pos:line="35" pos:column="53">s<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">status_printf_ln<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">s<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">c<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="40">_<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><literal type="string" pos:line="36" pos:column="42">"Changes to be committed:"<pos:position pos:line="36" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">rev<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">diffopt<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">.<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="29">a_prefix<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">=<pos:position pos:line="37" pos:column="39"/></operator> <literal type="string" pos:line="37" pos:column="40">"c/"<pos:position pos:line="37" pos:column="44"/></literal></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">rev<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">diffopt<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">.<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">b_prefix<pos:position pos:line="38" pos:column="37"/></name></name> <operator pos:line="38" pos:column="38">=<pos:position pos:line="38" pos:column="39"/></operator> <literal type="string" pos:line="38" pos:column="40">"i/"<pos:position pos:line="38" pos:column="44"/></literal></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if> <comment type="block" pos:line="39" pos:column="11">/* else use prefix as per user config */</comment>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">run_diff_index<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><operator pos:line="40" pos:column="24">&amp;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="25">rev<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="30">1<pos:position pos:line="40" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">s<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">verbose<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">&gt;<pos:position pos:line="41" pos:column="28"/></operator> <literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal> <operator pos:line="41" pos:column="28">&amp;&amp;<pos:position pos:line="41" pos:column="38"/></operator>
	    <call><name pos:line="42" pos:column="13">wt_status_check_worktree_changes<pos:position pos:line="42" pos:column="45"/></name><argument_list pos:line="42" pos:column="45">(<argument><expr><name pos:line="42" pos:column="46">s<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="49">&amp;<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="50">dirty_submodules<pos:position pos:line="42" pos:column="66"/></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="68"/></condition><then pos:line="42" pos:column="68"> <block pos:line="42" pos:column="69">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">status_printf_ln<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">s<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">c<pos:position pos:line="43" pos:column="38"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="44" pos:column="25">"--------------------------------------------------"<pos:position pos:line="44" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">status_printf_ln<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">s<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="37">c<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="40">_<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><literal type="string" pos:line="45" pos:column="42">"Changes not staged for commit:"<pos:position pos:line="45" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">setup_work_tree<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">()<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">rev<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">.<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">diffopt<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">.<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="29">a_prefix<pos:position pos:line="47" pos:column="37"/></name></name> <operator pos:line="47" pos:column="38">=<pos:position pos:line="47" pos:column="39"/></operator> <literal type="string" pos:line="47" pos:column="40">"i/"<pos:position pos:line="47" pos:column="44"/></literal></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">rev<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">.<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="21">diffopt<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">.<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">b_prefix<pos:position pos:line="48" pos:column="37"/></name></name> <operator pos:line="48" pos:column="38">=<pos:position pos:line="48" pos:column="39"/></operator> <literal type="string" pos:line="48" pos:column="40">"w/"<pos:position pos:line="48" pos:column="44"/></literal></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">run_diff_files<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><operator pos:line="49" pos:column="32">&amp;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="33">rev<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="38">0<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

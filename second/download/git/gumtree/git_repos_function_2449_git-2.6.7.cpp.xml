<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2449_git-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_trailer_config<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conf_key<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">value<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">void<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">cb<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">trailer_item<pos:position pos:line="3" pos:column="33"/></name></decl>, <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="36">variable_name<pos:position pos:line="3" pos:column="49"/></name></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">trailer_item<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">item<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">conf_info<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">conf<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">name<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">enum<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">trailer_info_type<pos:position pos:line="7" pos:column="31"/></name></name></type> <name pos:line="7" pos:column="32">type<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">skip_prefix<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">conf_key<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="36">"trailer."<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="48">&amp;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="49">trailer_item<pos:position pos:line="10" pos:column="61"/></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">variable_name<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <call><name pos:line="13" pos:column="25">strrchr<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">trailer_item<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="47">'.'<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">variable_name<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">variable_name<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">++<pos:position pos:line="17" pos:column="24"/></operator></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="25">ARRAY_SIZE<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">trailer_config_items<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></condition> <incr><expr><name pos:line="18" pos:column="59">i<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">++<pos:position pos:line="18" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="63"/></control> <block pos:line="18" pos:column="64">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">strcmp<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">trailer_config_items<pos:position pos:line="19" pos:column="48"/></name><index pos:line="19" pos:column="48">[<expr><name pos:line="19" pos:column="49">i<pos:position pos:line="19" pos:column="50"/></name></expr>]<pos:position pos:line="19" pos:column="51"/></index></name><operator pos:line="19" pos:column="51">.<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="52">name<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">variable_name<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="73"/></condition><then pos:line="19" pos:column="73">
			<block type="pseudo"><continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="21" pos:column="17">name<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">xstrndup<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">trailer_item<pos:position pos:line="21" pos:column="45"/></name></expr></argument>,  <argument><expr><name pos:line="21" pos:column="48">variable_name<pos:position pos:line="21" pos:column="61"/></name> <operator pos:line="21" pos:column="62">-<pos:position pos:line="21" pos:column="63"/></operator> <name pos:line="21" pos:column="64">trailer_item<pos:position pos:line="21" pos:column="76"/></name> <operator pos:line="21" pos:column="77">-<pos:position pos:line="21" pos:column="78"/></operator> <literal type="number" pos:line="21" pos:column="79">1<pos:position pos:line="21" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">type<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name><name pos:line="22" pos:column="24">trailer_config_items<pos:position pos:line="22" pos:column="44"/></name><index pos:line="22" pos:column="44">[<expr><name pos:line="22" pos:column="45">i<pos:position pos:line="22" pos:column="46"/></name></expr>]<pos:position pos:line="22" pos:column="47"/></index></name><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">type<pos:position pos:line="22" pos:column="52"/></name></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
		<break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
	}<pos:position pos:line="24" pos:column="10"/></block></for>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">name<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">item<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">get_conf_item<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">name<pos:position pos:line="29" pos:column="34"/></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">conf<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">&amp;<pos:position pos:line="30" pos:column="21"/></operator><name><name pos:line="30" pos:column="17">item<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">conf<pos:position pos:line="30" pos:column="27"/></name></name></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">free<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">name<pos:position pos:line="31" pos:column="18"/></name></expr></argument>)<pos:position pos:line="31" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>

	<switch pos:line="33" pos:column="9">switch <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">type<pos:position pos:line="33" pos:column="21"/></name></expr>)<pos:position pos:line="33" pos:column="22"/></condition> <block pos:line="33" pos:column="23">{
	<case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">TRAILER_KEY<pos:position pos:line="34" pos:column="25"/></name></expr>:<pos:position pos:line="34" pos:column="26"/></case>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">conf<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">key<pos:position pos:line="35" pos:column="30"/></name></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">warning<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><call><name pos:line="36" pos:column="33">_<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><literal type="string" pos:line="36" pos:column="35">"more than one %s"<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="56">conf_key<pos:position pos:line="36" pos:column="64"/></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">conf<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">key<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <call><name pos:line="37" pos:column="29">xstrdup<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">value<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
		<break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break>
	<case pos:line="39" pos:column="9">case <expr><name pos:line="39" pos:column="14">TRAILER_COMMAND<pos:position pos:line="39" pos:column="29"/></name></expr>:<pos:position pos:line="39" pos:column="30"/></case>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name><name pos:line="40" pos:column="21">conf<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">command<pos:position pos:line="40" pos:column="34"/></name></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">warning<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><call><name pos:line="41" pos:column="33">_<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><literal type="string" pos:line="41" pos:column="35">"more than one %s"<pos:position pos:line="41" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">conf_key<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">conf<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">command<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <call><name pos:line="42" pos:column="33">xstrdup<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">value<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
		<break pos:line="43" pos:column="17">break;<pos:position pos:line="43" pos:column="23"/></break>
	<case pos:line="44" pos:column="9">case <expr><name pos:line="44" pos:column="14">TRAILER_WHERE<pos:position pos:line="44" pos:column="27"/></name></expr>:<pos:position pos:line="44" pos:column="28"/></case>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">set_where<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">conf<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="37">value<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">warning<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><call><name pos:line="46" pos:column="33">_<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><literal type="string" pos:line="46" pos:column="35">"unknown value '%s' for key '%s'"<pos:position pos:line="46" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="71">value<pos:position pos:line="46" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="78">conf_key<pos:position pos:line="46" pos:column="86"/></name></expr></argument>)<pos:position pos:line="46" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="88"/></expr_stmt></block></then></if>
		<break pos:line="47" pos:column="17">break;<pos:position pos:line="47" pos:column="23"/></break>
	<case pos:line="48" pos:column="9">case <expr><name pos:line="48" pos:column="14">TRAILER_IF_EXISTS<pos:position pos:line="48" pos:column="31"/></name></expr>:<pos:position pos:line="48" pos:column="32"/></case>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">set_if_exists<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">conf<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">value<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="48"/></condition><then pos:line="49" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">warning<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><call><name pos:line="50" pos:column="33">_<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><literal type="string" pos:line="50" pos:column="35">"unknown value '%s' for key '%s'"<pos:position pos:line="50" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="50" pos:column="71">value<pos:position pos:line="50" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="78">conf_key<pos:position pos:line="50" pos:column="86"/></name></expr></argument>)<pos:position pos:line="50" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="88"/></expr_stmt></block></then></if>
		<break pos:line="51" pos:column="17">break;<pos:position pos:line="51" pos:column="23"/></break>
	<case pos:line="52" pos:column="9">case <expr><name pos:line="52" pos:column="14">TRAILER_IF_MISSING<pos:position pos:line="52" pos:column="32"/></name></expr>:<pos:position pos:line="52" pos:column="33"/></case>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">set_if_missing<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">conf<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="42">value<pos:position pos:line="53" pos:column="47"/></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="49"/></condition><then pos:line="53" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">warning<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><call><name pos:line="54" pos:column="33">_<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">(<argument><expr><literal type="string" pos:line="54" pos:column="35">"unknown value '%s' for key '%s'"<pos:position pos:line="54" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="71">value<pos:position pos:line="54" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="78">conf_key<pos:position pos:line="54" pos:column="86"/></name></expr></argument>)<pos:position pos:line="54" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="88"/></expr_stmt></block></then></if>
		<break pos:line="55" pos:column="17">break;<pos:position pos:line="55" pos:column="23"/></break>
	<default pos:line="56" pos:column="9">default:<pos:position pos:line="56" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">die<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><literal type="string" pos:line="57" pos:column="21">"internal bug in trailer.c"<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></switch>
	<return pos:line="59" pos:column="9">return <expr><literal type="number" pos:line="59" pos:column="16">0<pos:position pos:line="59" pos:column="17"/></literal></expr>;<pos:position pos:line="59" pos:column="18"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

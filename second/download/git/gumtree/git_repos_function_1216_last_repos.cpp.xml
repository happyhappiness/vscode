<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1216_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">one_relevant_parent<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">rev_info<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">revs<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">commit_list<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">orig<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">list<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">orig<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">relevant<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">NULL<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">orig<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="10" pos:column="9">/*
	 * For 1-parent commits, or if first-parent-only, then return that
	 * first parent (even if not "relevant" by the above definition).
	 * TREESAME will have been set purely on that parent.
	 */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">revs<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">first_parent_only<pos:position pos:line="15" pos:column="36"/></name></name> <operator pos:line="15" pos:column="37">||<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="40">!<pos:position pos:line="15" pos:column="41"/></operator><name><name pos:line="15" pos:column="41">orig<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">next<pos:position pos:line="15" pos:column="51"/></name></name></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name><name pos:line="16" pos:column="24">orig<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">item<pos:position pos:line="16" pos:column="34"/></name></name></expr>;<pos:position pos:line="16" pos:column="35"/></return></block></then></if>

	<comment type="block" pos:line="18" pos:column="9">/*
	 * For multi-parent commits, identify a sole relevant parent, if any.
	 * If we have only one relevant parent, then TREESAME will be set purely
	 * with regard to that parent, and we can simplify accordingly.
	 *
	 * If we have more than one relevant parent, or no relevant parents
	 * (and multiple irrelevant ones), then we can't select a parent here
	 * and return NULL.
	 */</comment>
	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">list<pos:position pos:line="27" pos:column="20"/></name></expr>)<pos:position pos:line="27" pos:column="21"/></condition> <block pos:line="27" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="28" pos:column="17">struct<pos:position pos:line="28" pos:column="23"/></name> <name pos:line="28" pos:column="24">commit<pos:position pos:line="28" pos:column="30"/></name></name> <modifier pos:line="28" pos:column="31">*<pos:position pos:line="28" pos:column="32"/></modifier></type><name pos:line="28" pos:column="32">commit<pos:position pos:line="28" pos:column="38"/></name> <init pos:line="28" pos:column="39">= <expr><name><name pos:line="28" pos:column="41">list<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">item<pos:position pos:line="28" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="28" pos:column="52"/></decl_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">list<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="24">list<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">next<pos:position pos:line="29" pos:column="34"/></name></name></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">relevant_commit<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">commit<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45"> <block pos:line="30" pos:column="46">{
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name pos:line="31" pos:column="29">relevant<pos:position pos:line="31" pos:column="37"/></name></expr>)<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38">
				<block type="pseudo"><return pos:line="32" pos:column="33">return <expr><name pos:line="32" pos:column="40">NULL<pos:position pos:line="32" pos:column="44"/></name></expr>;<pos:position pos:line="32" pos:column="45"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="33" pos:column="25">relevant<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="36">commit<pos:position pos:line="33" pos:column="42"/></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></while>
	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">relevant<pos:position pos:line="36" pos:column="24"/></name></expr>;<pos:position pos:line="36" pos:column="25"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_882_git-2.4.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_ref_exclusion<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">string_list<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ref_excludes_p<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">exclude<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><operator pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">ref_excludes_p<pos:position pos:line="3" pos:column="29"/></name></expr>)<pos:position pos:line="3" pos:column="30"/></condition><then pos:line="3" pos:column="30"> <block pos:line="3" pos:column="31">{
		<expr_stmt><expr><operator pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">ref_excludes_p<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">=<pos:position pos:line="4" pos:column="34"/></operator> <call><name pos:line="4" pos:column="35">xcalloc<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><literal type="number" pos:line="4" pos:column="43">1<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="46">sizeof<argument_list pos:line="4" pos:column="52">(<argument><expr><operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">ref_excludes_p<pos:position pos:line="4" pos:column="69"/></name></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><operator pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">ref_excludes_p<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">)<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">strdup_strings<pos:position pos:line="5" pos:column="50"/></name></name> <operator pos:line="5" pos:column="51">=<pos:position pos:line="5" pos:column="52"/></operator> <literal type="number" pos:line="5" pos:column="53">1<pos:position pos:line="5" pos:column="54"/></literal></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">string_list_append<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">ref_excludes_p<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">exclude<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6436_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">get_subexp_sub<pos:position pos:line="3" pos:column="15"/></name> <parameter_list pos:line="3" pos:column="16">(<parameter><decl><type><name pos:line="3" pos:column="17">re_match_context_t<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">mctx<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="43">const<pos:position pos:line="3" pos:column="48"/></specifier> <name pos:line="3" pos:column="49">re_sub_match_top_t<pos:position pos:line="3" pos:column="67"/></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">sub_top<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">re_sub_match_last_t<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">sub_last<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="48">int<pos:position pos:line="4" pos:column="51"/></name></type> <name pos:line="4" pos:column="52">bkref_node<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="64">int<pos:position pos:line="4" pos:column="67"/></name></type> <name pos:line="4" pos:column="68">bkref_str<pos:position pos:line="4" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="78"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">reg_errcode_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">err<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">to_idx<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
  <comment type="block" pos:line="8" pos:column="3">/* Can the subexpression arrive the back reference?  */</comment>
  <expr_stmt><expr><name pos:line="9" pos:column="3">err<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">check_arrival<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">mctx<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name><name pos:line="9" pos:column="31">sub_last<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">path<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="47">sub_last<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">node<pos:position pos:line="9" pos:column="61"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="10" pos:column="24">sub_last<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">str_idx<pos:position pos:line="10" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">bkref_node<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">bkref_str<pos:position pos:line="10" pos:column="64"/></name></expr></argument>,
		       <argument><expr><name pos:line="11" pos:column="24">OP_OPEN_SUBEXP<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">err<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">!=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">REG_NOERROR<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">err<pos:position pos:line="13" pos:column="15"/></name></expr>;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="14" pos:column="3">err<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">match_ctx_add_entry<pos:position pos:line="14" pos:column="28"/></name> <argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">mctx<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">bkref_node<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">bkref_str<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="59">sub_top<pos:position pos:line="14" pos:column="66"/></name><operator pos:line="14" pos:column="66">-&gt;<pos:position pos:line="14" pos:column="71"/></operator><name pos:line="14" pos:column="68">str_idx<pos:position pos:line="14" pos:column="75"/></name></name></expr></argument>,
			     <argument><expr><name><name pos:line="15" pos:column="30">sub_last<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">str_idx<pos:position pos:line="15" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">BE<pos:position pos:line="16" pos:column="9"/></name> <argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">err<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">!=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">REG_NOERROR<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">err<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="18" pos:column="3">to_idx<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">bkref_str<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">+<pos:position pos:line="18" pos:column="23"/></operator> <name><name pos:line="18" pos:column="24">sub_last<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">str_idx<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">-<pos:position pos:line="18" pos:column="43"/></operator> <name><name pos:line="18" pos:column="44">sub_top<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">str_idx<pos:position pos:line="18" pos:column="60"/></name></name></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
  <return pos:line="19" pos:column="3">return <expr><call><name pos:line="19" pos:column="10">clean_state_log_if_needed<pos:position pos:line="19" pos:column="35"/></name> <argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">mctx<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">to_idx<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_317_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ce_compare_data<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">cache_entry<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">ce<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">stat<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">st<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">match<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><operator pos:line="3" pos:column="21">-<pos:position pos:line="3" pos:column="22"/></operator><literal type="number" pos:line="3" pos:column="22">1<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name pos:line="4" pos:column="18">git_open_cloexec<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name><name pos:line="4" pos:column="35">ce<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">-&gt;<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="39">name<pos:position pos:line="4" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="45">O_RDONLY<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">fd<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&gt;=<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21"> <block pos:line="6" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">unsigned<pos:position pos:line="7" pos:column="25"/></name> <name pos:line="7" pos:column="26">char<pos:position pos:line="7" pos:column="30"/></name></type> <name><name pos:line="7" pos:column="31">sha1<pos:position pos:line="7" pos:column="35"/></name><index pos:line="7" pos:column="35">[<expr><literal type="number" pos:line="7" pos:column="36">20<pos:position pos:line="7" pos:column="38"/></literal></expr>]<pos:position pos:line="7" pos:column="39"/></index></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">index_fd<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">sha1<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">fd<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">st<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">OBJ_BLOB<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="55">ce<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">name<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="65">0<pos:position pos:line="8" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">match<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">=<pos:position pos:line="9" pos:column="32"/></operator> <call><name pos:line="9" pos:column="33">hashcmp<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">sha1<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="47">ce<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">oid<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">.<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="55">hash<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="10" pos:column="17">/* index_fd() closed the file descriptor already */</comment>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">match<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

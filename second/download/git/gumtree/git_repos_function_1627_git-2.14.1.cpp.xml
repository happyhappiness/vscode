<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1627_git-2.14.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">stat_opt<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">diff_options<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">options<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier><modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">av<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">arg<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">av<pos:position pos:line="3" pos:column="29"/></name><index pos:line="3" pos:column="29">[<expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr>]<pos:position pos:line="3" pos:column="32"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">end<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">width<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">options<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">stat_width<pos:position pos:line="5" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">name_width<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name><name pos:line="6" pos:column="26">options<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">stat_name_width<pos:position pos:line="6" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">graph_width<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">options<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">stat_graph_width<pos:position pos:line="7" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">count<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name><name pos:line="8" pos:column="21">options<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">stat_count<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">argcount<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">skip_prefix<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">arg<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"--stat"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="42">arg<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"BUG: stat option does not begin with --stat: %s"<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="72">arg<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">end<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">char<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">arg<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>

	<switch pos:line="15" pos:column="9">switch <condition pos:line="15" pos:column="16">(<expr><operator pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">arg<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition> <block pos:line="15" pos:column="23">{
	<case pos:line="16" pos:column="9">case <expr><literal type="char" pos:line="16" pos:column="14">'-'<pos:position pos:line="16" pos:column="17"/></literal></expr>:<pos:position pos:line="16" pos:column="18"/></case>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">skip_prefix<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">arg<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="38">"-width"<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="48">&amp;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="49">arg<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">arg<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="char" pos:line="18" pos:column="37">'='<pos:position pos:line="18" pos:column="40"/></literal></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="33">width<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">=<pos:position pos:line="19" pos:column="40"/></operator> <call><name pos:line="19" pos:column="41">strtoul<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">arg<pos:position pos:line="19" pos:column="52"/></name> <operator pos:line="19" pos:column="53">+<pos:position pos:line="19" pos:column="54"/></operator> <literal type="number" pos:line="19" pos:column="55">1<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="58">&amp;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="59">end<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="64">10<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt></block></then>
			<elseif pos:line="20" pos:column="25">else <if pos:line="20" pos:column="30">if <condition pos:line="20" pos:column="33">(<expr><operator pos:line="20" pos:column="34">!<pos:position pos:line="20" pos:column="35"/></operator><operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">arg<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">&amp;&amp;<pos:position pos:line="20" pos:column="50"/></operator> <operator pos:line="20" pos:column="43">!<pos:position pos:line="20" pos:column="44"/></operator><name><name pos:line="20" pos:column="44">av<pos:position pos:line="20" pos:column="46"/></name><index pos:line="20" pos:column="46">[<expr><literal type="number" pos:line="20" pos:column="47">1<pos:position pos:line="20" pos:column="48"/></literal></expr>]<pos:position pos:line="20" pos:column="49"/></index></name></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="33">die_want_option<pos:position pos:line="21" pos:column="48"/></name><argument_list pos:line="21" pos:column="48">(<argument><expr><literal type="string" pos:line="21" pos:column="49">"--stat-width"<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="22" pos:column="25">else <if pos:line="22" pos:column="30">if <condition pos:line="22" pos:column="33">(<expr><operator pos:line="22" pos:column="34">!<pos:position pos:line="22" pos:column="35"/></operator><operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">arg<pos:position pos:line="22" pos:column="39"/></name></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
				<expr_stmt><expr><name pos:line="23" pos:column="33">width<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <call><name pos:line="23" pos:column="41">strtoul<pos:position pos:line="23" pos:column="48"/></name><argument_list pos:line="23" pos:column="48">(<argument><expr><name><name pos:line="23" pos:column="49">av<pos:position pos:line="23" pos:column="51"/></name><index pos:line="23" pos:column="51">[<expr><literal type="number" pos:line="23" pos:column="52">1<pos:position pos:line="23" pos:column="53"/></literal></expr>]<pos:position pos:line="23" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="56">&amp;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="57">end<pos:position pos:line="23" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="62">10<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name pos:line="24" pos:column="33">argcount<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">=<pos:position pos:line="24" pos:column="43"/></operator> <literal type="number" pos:line="24" pos:column="44">2<pos:position pos:line="24" pos:column="45"/></literal></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then> <elseif pos:line="26" pos:column="19">else <if pos:line="26" pos:column="24">if <condition pos:line="26" pos:column="27">(<expr><call><name pos:line="26" pos:column="28">skip_prefix<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">arg<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="45">"-name-width"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="60">&amp;<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="61">arg<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="66"/></condition><then pos:line="26" pos:column="66"> <block pos:line="26" pos:column="67">{
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><operator pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">arg<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">==<pos:position pos:line="27" pos:column="36"/></operator> <literal type="char" pos:line="27" pos:column="37">'='<pos:position pos:line="27" pos:column="40"/></literal></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">name_width<pos:position pos:line="28" pos:column="43"/></name> <operator pos:line="28" pos:column="44">=<pos:position pos:line="28" pos:column="45"/></operator> <call><name pos:line="28" pos:column="46">strtoul<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name pos:line="28" pos:column="54">arg<pos:position pos:line="28" pos:column="57"/></name> <operator pos:line="28" pos:column="58">+<pos:position pos:line="28" pos:column="59"/></operator> <literal type="number" pos:line="28" pos:column="60">1<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="63">&amp;<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="64">end<pos:position pos:line="28" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="69">10<pos:position pos:line="28" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt></block></then>
			<elseif pos:line="29" pos:column="25">else <if pos:line="29" pos:column="30">if <condition pos:line="29" pos:column="33">(<expr><operator pos:line="29" pos:column="34">!<pos:position pos:line="29" pos:column="35"/></operator><operator pos:line="29" pos:column="35">*<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">arg<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">&amp;&amp;<pos:position pos:line="29" pos:column="50"/></operator> <operator pos:line="29" pos:column="43">!<pos:position pos:line="29" pos:column="44"/></operator><name><name pos:line="29" pos:column="44">av<pos:position pos:line="29" pos:column="46"/></name><index pos:line="29" pos:column="46">[<expr><literal type="number" pos:line="29" pos:column="47">1<pos:position pos:line="29" pos:column="48"/></literal></expr>]<pos:position pos:line="29" pos:column="49"/></index></name></expr>)<pos:position pos:line="29" pos:column="50"/></condition><then pos:line="29" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="33">die_want_option<pos:position pos:line="30" pos:column="48"/></name><argument_list pos:line="30" pos:column="48">(<argument><expr><literal type="string" pos:line="30" pos:column="49">"--stat-name-width"<pos:position pos:line="30" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="31" pos:column="25">else <if pos:line="31" pos:column="30">if <condition pos:line="31" pos:column="33">(<expr><operator pos:line="31" pos:column="34">!<pos:position pos:line="31" pos:column="35"/></operator><operator pos:line="31" pos:column="35">*<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">arg<pos:position pos:line="31" pos:column="39"/></name></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40"> <block pos:line="31" pos:column="41">{
				<expr_stmt><expr><name pos:line="32" pos:column="33">name_width<pos:position pos:line="32" pos:column="43"/></name> <operator pos:line="32" pos:column="44">=<pos:position pos:line="32" pos:column="45"/></operator> <call><name pos:line="32" pos:column="46">strtoul<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><name><name pos:line="32" pos:column="54">av<pos:position pos:line="32" pos:column="56"/></name><index pos:line="32" pos:column="56">[<expr><literal type="number" pos:line="32" pos:column="57">1<pos:position pos:line="32" pos:column="58"/></literal></expr>]<pos:position pos:line="32" pos:column="59"/></index></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="61">&amp;<pos:position pos:line="32" pos:column="66"/></operator><name pos:line="32" pos:column="62">end<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="67">10<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="71"/></expr_stmt>
				<expr_stmt><expr><name pos:line="33" pos:column="33">argcount<pos:position pos:line="33" pos:column="41"/></name> <operator pos:line="33" pos:column="42">=<pos:position pos:line="33" pos:column="43"/></operator> <literal type="number" pos:line="33" pos:column="44">2<pos:position pos:line="33" pos:column="45"/></literal></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if></elseif> <elseif pos:line="35" pos:column="19">else <if pos:line="35" pos:column="24">if <condition pos:line="35" pos:column="27">(<expr><call><name pos:line="35" pos:column="28">skip_prefix<pos:position pos:line="35" pos:column="39"/></name><argument_list pos:line="35" pos:column="39">(<argument><expr><name pos:line="35" pos:column="40">arg<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="45">"-graph-width"<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="61">&amp;<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="62">arg<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="67"/></condition><then pos:line="35" pos:column="67"> <block pos:line="35" pos:column="68">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><operator pos:line="36" pos:column="29">*<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">arg<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">==<pos:position pos:line="36" pos:column="36"/></operator> <literal type="char" pos:line="36" pos:column="37">'='<pos:position pos:line="36" pos:column="40"/></literal></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="33">graph_width<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">=<pos:position pos:line="37" pos:column="46"/></operator> <call><name pos:line="37" pos:column="47">strtoul<pos:position pos:line="37" pos:column="54"/></name><argument_list pos:line="37" pos:column="54">(<argument><expr><name pos:line="37" pos:column="55">arg<pos:position pos:line="37" pos:column="58"/></name> <operator pos:line="37" pos:column="59">+<pos:position pos:line="37" pos:column="60"/></operator> <literal type="number" pos:line="37" pos:column="61">1<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="64">&amp;<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="65">end<pos:position pos:line="37" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="70">10<pos:position pos:line="37" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt></block></then>
			<elseif pos:line="38" pos:column="25">else <if pos:line="38" pos:column="30">if <condition pos:line="38" pos:column="33">(<expr><operator pos:line="38" pos:column="34">!<pos:position pos:line="38" pos:column="35"/></operator><operator pos:line="38" pos:column="35">*<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">arg<pos:position pos:line="38" pos:column="39"/></name> <operator pos:line="38" pos:column="40">&amp;&amp;<pos:position pos:line="38" pos:column="50"/></operator> <operator pos:line="38" pos:column="43">!<pos:position pos:line="38" pos:column="44"/></operator><name><name pos:line="38" pos:column="44">av<pos:position pos:line="38" pos:column="46"/></name><index pos:line="38" pos:column="46">[<expr><literal type="number" pos:line="38" pos:column="47">1<pos:position pos:line="38" pos:column="48"/></literal></expr>]<pos:position pos:line="38" pos:column="49"/></index></name></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="33">die_want_option<pos:position pos:line="39" pos:column="48"/></name><argument_list pos:line="39" pos:column="48">(<argument><expr><literal type="string" pos:line="39" pos:column="49">"--stat-graph-width"<pos:position pos:line="39" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="40" pos:column="25">else <if pos:line="40" pos:column="30">if <condition pos:line="40" pos:column="33">(<expr><operator pos:line="40" pos:column="34">!<pos:position pos:line="40" pos:column="35"/></operator><operator pos:line="40" pos:column="35">*<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="36">arg<pos:position pos:line="40" pos:column="39"/></name></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40"> <block pos:line="40" pos:column="41">{
				<expr_stmt><expr><name pos:line="41" pos:column="33">graph_width<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">=<pos:position pos:line="41" pos:column="46"/></operator> <call><name pos:line="41" pos:column="47">strtoul<pos:position pos:line="41" pos:column="54"/></name><argument_list pos:line="41" pos:column="54">(<argument><expr><name><name pos:line="41" pos:column="55">av<pos:position pos:line="41" pos:column="57"/></name><index pos:line="41" pos:column="57">[<expr><literal type="number" pos:line="41" pos:column="58">1<pos:position pos:line="41" pos:column="59"/></literal></expr>]<pos:position pos:line="41" pos:column="60"/></index></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="62">&amp;<pos:position pos:line="41" pos:column="67"/></operator><name pos:line="41" pos:column="63">end<pos:position pos:line="41" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="68">10<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><name pos:line="42" pos:column="33">argcount<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">=<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="44">2<pos:position pos:line="42" pos:column="45"/></literal></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="43" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif> <elseif pos:line="44" pos:column="19">else <if pos:line="44" pos:column="24">if <condition pos:line="44" pos:column="27">(<expr><call><name pos:line="44" pos:column="28">skip_prefix<pos:position pos:line="44" pos:column="39"/></name><argument_list pos:line="44" pos:column="39">(<argument><expr><name pos:line="44" pos:column="40">arg<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="45">"-count"<pos:position pos:line="44" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="55">&amp;<pos:position pos:line="44" pos:column="60"/></operator><name pos:line="44" pos:column="56">arg<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="61"/></condition><then pos:line="44" pos:column="61"> <block pos:line="44" pos:column="62">{
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><operator pos:line="45" pos:column="29">*<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">arg<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">==<pos:position pos:line="45" pos:column="36"/></operator> <literal type="char" pos:line="45" pos:column="37">'='<pos:position pos:line="45" pos:column="40"/></literal></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="33">count<pos:position pos:line="46" pos:column="38"/></name> <operator pos:line="46" pos:column="39">=<pos:position pos:line="46" pos:column="40"/></operator> <call><name pos:line="46" pos:column="41">strtoul<pos:position pos:line="46" pos:column="48"/></name><argument_list pos:line="46" pos:column="48">(<argument><expr><name pos:line="46" pos:column="49">arg<pos:position pos:line="46" pos:column="52"/></name> <operator pos:line="46" pos:column="53">+<pos:position pos:line="46" pos:column="54"/></operator> <literal type="number" pos:line="46" pos:column="55">1<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="58">&amp;<pos:position pos:line="46" pos:column="63"/></operator><name pos:line="46" pos:column="59">end<pos:position pos:line="46" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="64">10<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt></block></then>
			<elseif pos:line="47" pos:column="25">else <if pos:line="47" pos:column="30">if <condition pos:line="47" pos:column="33">(<expr><operator pos:line="47" pos:column="34">!<pos:position pos:line="47" pos:column="35"/></operator><operator pos:line="47" pos:column="35">*<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">arg<pos:position pos:line="47" pos:column="39"/></name> <operator pos:line="47" pos:column="40">&amp;&amp;<pos:position pos:line="47" pos:column="50"/></operator> <operator pos:line="47" pos:column="43">!<pos:position pos:line="47" pos:column="44"/></operator><name><name pos:line="47" pos:column="44">av<pos:position pos:line="47" pos:column="46"/></name><index pos:line="47" pos:column="46">[<expr><literal type="number" pos:line="47" pos:column="47">1<pos:position pos:line="47" pos:column="48"/></literal></expr>]<pos:position pos:line="47" pos:column="49"/></index></name></expr>)<pos:position pos:line="47" pos:column="50"/></condition><then pos:line="47" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="33">die_want_option<pos:position pos:line="48" pos:column="48"/></name><argument_list pos:line="48" pos:column="48">(<argument><expr><literal type="string" pos:line="48" pos:column="49">"--stat-count"<pos:position pos:line="48" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="49" pos:column="25">else <if pos:line="49" pos:column="30">if <condition pos:line="49" pos:column="33">(<expr><operator pos:line="49" pos:column="34">!<pos:position pos:line="49" pos:column="35"/></operator><operator pos:line="49" pos:column="35">*<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">arg<pos:position pos:line="49" pos:column="39"/></name></expr>)<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40"> <block pos:line="49" pos:column="41">{
				<expr_stmt><expr><name pos:line="50" pos:column="33">count<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">=<pos:position pos:line="50" pos:column="40"/></operator> <call><name pos:line="50" pos:column="41">strtoul<pos:position pos:line="50" pos:column="48"/></name><argument_list pos:line="50" pos:column="48">(<argument><expr><name><name pos:line="50" pos:column="49">av<pos:position pos:line="50" pos:column="51"/></name><index pos:line="50" pos:column="51">[<expr><literal type="number" pos:line="50" pos:column="52">1<pos:position pos:line="50" pos:column="53"/></literal></expr>]<pos:position pos:line="50" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="56">&amp;<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="57">end<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="62">10<pos:position pos:line="50" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name pos:line="51" pos:column="33">argcount<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">=<pos:position pos:line="51" pos:column="43"/></operator> <literal type="number" pos:line="51" pos:column="44">2<pos:position pos:line="51" pos:column="45"/></literal></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if></elseif></if>
		<break pos:line="54" pos:column="17">break;<pos:position pos:line="54" pos:column="23"/></break>
	<case pos:line="55" pos:column="9">case <expr><literal type="char" pos:line="55" pos:column="14">'='<pos:position pos:line="55" pos:column="17"/></literal></expr>:<pos:position pos:line="55" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="56" pos:column="17">width<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <call><name pos:line="56" pos:column="25">strtoul<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">arg<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">+<pos:position pos:line="56" pos:column="37"/></operator><literal type="number" pos:line="56" pos:column="37">1<pos:position pos:line="56" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="40">&amp;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="41">end<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="46">10<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><operator pos:line="57" pos:column="21">*<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">end<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">==<pos:position pos:line="57" pos:column="28"/></operator> <literal type="char" pos:line="57" pos:column="29">','<pos:position pos:line="57" pos:column="32"/></literal></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="25">name_width<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">=<pos:position pos:line="58" pos:column="37"/></operator> <call><name pos:line="58" pos:column="38">strtoul<pos:position pos:line="58" pos:column="45"/></name><argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">end<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">+<pos:position pos:line="58" pos:column="50"/></operator><literal type="number" pos:line="58" pos:column="50">1<pos:position pos:line="58" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="53">&amp;<pos:position pos:line="58" pos:column="58"/></operator><name pos:line="58" pos:column="54">end<pos:position pos:line="58" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="59">10<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt></block></then></if>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">*<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">end<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">==<pos:position pos:line="59" pos:column="28"/></operator> <literal type="char" pos:line="59" pos:column="29">','<pos:position pos:line="59" pos:column="32"/></literal></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="25">count<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <call><name pos:line="60" pos:column="33">strtoul<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name pos:line="60" pos:column="41">end<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">+<pos:position pos:line="60" pos:column="45"/></operator><literal type="number" pos:line="60" pos:column="45">1<pos:position pos:line="60" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="48">&amp;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="49">end<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="54">10<pos:position pos:line="60" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></switch>

	<comment type="block" pos:line="63" pos:column="9">/* Important! This checks all the error cases! */</comment>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">*<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">end<pos:position pos:line="64" pos:column="17"/></name></expr>)<pos:position pos:line="64" pos:column="18"/></condition><then pos:line="64" pos:column="18">
		<block type="pseudo"><return pos:line="65" pos:column="17">return <expr><literal type="number" pos:line="65" pos:column="24">0<pos:position pos:line="65" pos:column="25"/></literal></expr>;<pos:position pos:line="65" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="66" pos:column="9">options<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">output_format<pos:position pos:line="66" pos:column="31"/></name></name> <operator pos:line="66" pos:column="32">|=<pos:position pos:line="66" pos:column="34"/></operator> <name pos:line="66" pos:column="35">DIFF_FORMAT_DIFFSTAT<pos:position pos:line="66" pos:column="55"/></name></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="67" pos:column="9">options<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">stat_name_width<pos:position pos:line="67" pos:column="33"/></name></name> <operator pos:line="67" pos:column="34">=<pos:position pos:line="67" pos:column="35"/></operator> <name pos:line="67" pos:column="36">name_width<pos:position pos:line="67" pos:column="46"/></name></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="68" pos:column="9">options<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">stat_graph_width<pos:position pos:line="68" pos:column="34"/></name></name> <operator pos:line="68" pos:column="35">=<pos:position pos:line="68" pos:column="36"/></operator> <name pos:line="68" pos:column="37">graph_width<pos:position pos:line="68" pos:column="48"/></name></expr>;<pos:position pos:line="68" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">options<pos:position pos:line="69" pos:column="16"/></name><operator pos:line="69" pos:column="16">-&gt;<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="18">stat_width<pos:position pos:line="69" pos:column="28"/></name></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <name pos:line="69" pos:column="31">width<pos:position pos:line="69" pos:column="36"/></name></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">options<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">stat_count<pos:position pos:line="70" pos:column="28"/></name></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <name pos:line="70" pos:column="31">count<pos:position pos:line="70" pos:column="36"/></name></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
	<return pos:line="71" pos:column="9">return <expr><name pos:line="71" pos:column="16">argcount<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1948_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fsck_commit_buffer<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">commit<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">commit<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">buffer<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">unsigned<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">long<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">size<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">fsck_options<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">options<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">tree_sha1<pos:position pos:line="4" pos:column="32"/></name><index pos:line="4" pos:column="32">[<expr><literal type="number" pos:line="4" pos:column="33">20<pos:position pos:line="4" pos:column="35"/></literal></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="38">sha1<pos:position pos:line="4" pos:column="42"/></name><index pos:line="4" pos:column="42">[<expr><literal type="number" pos:line="4" pos:column="43">20<pos:position pos:line="4" pos:column="45"/></literal></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_graft<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">graft<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">parent_count<pos:position pos:line="6" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="32">parent_line_count<pos:position pos:line="6" pos:column="49"/></name> <init pos:line="6" pos:column="50">= <expr><literal type="number" pos:line="6" pos:column="52">0<pos:position pos:line="6" pos:column="53"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="55">author_count<pos:position pos:line="6" pos:column="67"/></name></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">err<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">buffer_begin<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">buffer<pos:position pos:line="8" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">verify_headers<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">buffer<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">size<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name><name pos:line="10" pos:column="43">commit<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">object<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">options<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="68"/></condition><then pos:line="10" pos:column="68">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">skip_prefix<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">buffer<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"tree "<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="43">&amp;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="44">buffer<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">report<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">options<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name><name pos:line="14" pos:column="41">commit<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">object<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">FSCK_MSG_MISSING_TREE<pos:position pos:line="14" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="80">"invalid format - expected 'tree' line"<pos:position pos:line="14" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="121"/></return></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">get_sha1_hex<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">buffer<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">tree_sha1<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call> <operator pos:line="15" pos:column="45">||<pos:position pos:line="15" pos:column="47"/></operator> <name><name pos:line="15" pos:column="48">buffer<pos:position pos:line="15" pos:column="54"/></name><index pos:line="15" pos:column="54">[<expr><literal type="number" pos:line="15" pos:column="55">40<pos:position pos:line="15" pos:column="57"/></literal></expr>]<pos:position pos:line="15" pos:column="58"/></index></name> <operator pos:line="15" pos:column="59">!=<pos:position pos:line="15" pos:column="61"/></operator> <literal type="char" pos:line="15" pos:column="62">'\n'<pos:position pos:line="15" pos:column="66"/></literal></expr>)<pos:position pos:line="15" pos:column="67"/></condition><then pos:line="15" pos:column="67"> <block pos:line="15" pos:column="68">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">err<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">report<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">options<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="39">&amp;<pos:position pos:line="16" pos:column="44"/></operator><name><name pos:line="16" pos:column="40">commit<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">object<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="56">FSCK_MSG_BAD_TREE_SHA1<pos:position pos:line="16" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="80">"invalid 'tree' line format - bad sha1"<pos:position pos:line="16" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="121"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">err<pos:position pos:line="17" pos:column="24"/></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><name pos:line="18" pos:column="32">err<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">buffer<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">+=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">41<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><call><name pos:line="21" pos:column="16">skip_prefix<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">buffer<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="36">"parent "<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="47">&amp;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="48">buffer<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="56"/></condition> <block pos:line="21" pos:column="57">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">get_sha1_hex<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">buffer<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">sha1<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call> <operator pos:line="22" pos:column="48">||<pos:position pos:line="22" pos:column="50"/></operator> <name><name pos:line="22" pos:column="51">buffer<pos:position pos:line="22" pos:column="57"/></name><index pos:line="22" pos:column="57">[<expr><literal type="number" pos:line="22" pos:column="58">40<pos:position pos:line="22" pos:column="60"/></literal></expr>]<pos:position pos:line="22" pos:column="61"/></index></name> <operator pos:line="22" pos:column="62">!=<pos:position pos:line="22" pos:column="64"/></operator> <literal type="char" pos:line="22" pos:column="65">'\n'<pos:position pos:line="22" pos:column="69"/></literal></expr>)<pos:position pos:line="22" pos:column="70"/></condition><then pos:line="22" pos:column="70"> <block pos:line="22" pos:column="71">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">err<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">report<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">options<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="47">&amp;<pos:position pos:line="23" pos:column="52"/></operator><name><name pos:line="23" pos:column="48">commit<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">object<pos:position pos:line="23" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">FSCK_MSG_BAD_PARENT_SHA1<pos:position pos:line="23" pos:column="88"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="90">"invalid 'parent' line format - bad sha1"<pos:position pos:line="23" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="133"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name pos:line="24" pos:column="29">err<pos:position pos:line="24" pos:column="32"/></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
				<block type="pseudo"><return pos:line="25" pos:column="33">return <expr><name pos:line="25" pos:column="40">err<pos:position pos:line="25" pos:column="43"/></name></expr>;<pos:position pos:line="25" pos:column="44"/></return></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="27" pos:column="17">buffer<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">+=<pos:position pos:line="27" pos:column="26"/></operator> <literal type="number" pos:line="27" pos:column="27">41<pos:position pos:line="27" pos:column="29"/></literal></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">parent_line_count<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">++<pos:position pos:line="28" pos:column="36"/></operator></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="30" pos:column="9">graft<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">lookup_commit_graft<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name><name pos:line="30" pos:column="37">commit<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">object<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">.<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="52">oid<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">.<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="56">hash<pos:position pos:line="30" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">parent_count<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">commit_list_count<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name><name pos:line="31" pos:column="42">commit<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">parents<pos:position pos:line="31" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">graft<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19"> <block pos:line="32" pos:column="20">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">graft<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">nr_parent<pos:position pos:line="33" pos:column="37"/></name></name> <operator pos:line="33" pos:column="38">==<pos:position pos:line="33" pos:column="40"/></operator> <operator pos:line="33" pos:column="41">-<pos:position pos:line="33" pos:column="42"/></operator><literal type="number" pos:line="33" pos:column="42">1<pos:position pos:line="33" pos:column="43"/></literal> <operator pos:line="33" pos:column="44">&amp;&amp;<pos:position pos:line="33" pos:column="54"/></operator> <operator pos:line="33" pos:column="47">!<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="48">parent_count<pos:position pos:line="33" pos:column="60"/></name></expr>)<pos:position pos:line="33" pos:column="61"/></condition><then pos:line="33" pos:column="61">
			<block type="pseudo"><empty_stmt pos:line="34" pos:column="25">;<pos:position pos:line="34" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="34" pos:column="27">/* shallow commit */</comment>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><name><name pos:line="35" pos:column="26">graft<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">nr_parent<pos:position pos:line="35" pos:column="42"/></name></name> <operator pos:line="35" pos:column="43">!=<pos:position pos:line="35" pos:column="45"/></operator> <name pos:line="35" pos:column="46">parent_count<pos:position pos:line="35" pos:column="58"/></name></expr>)<pos:position pos:line="35" pos:column="59"/></condition><then pos:line="35" pos:column="59"> <block pos:line="35" pos:column="60">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">err<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <call><name pos:line="36" pos:column="31">report<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">options<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="47">&amp;<pos:position pos:line="36" pos:column="52"/></operator><name><name pos:line="36" pos:column="48">commit<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">-&gt;<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="56">object<pos:position pos:line="36" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">FSCK_MSG_MISSING_GRAFT<pos:position pos:line="36" pos:column="86"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="88">"graft objects missing"<pos:position pos:line="36" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="113"/></expr_stmt>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name pos:line="37" pos:column="29">err<pos:position pos:line="37" pos:column="32"/></name></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
				<block type="pseudo"><return pos:line="38" pos:column="33">return <expr><name pos:line="38" pos:column="40">err<pos:position pos:line="38" pos:column="43"/></name></expr>;<pos:position pos:line="38" pos:column="44"/></return></block></then></if>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="40" pos:column="10"/></block></then> <else pos:line="40" pos:column="11">else <block pos:line="40" pos:column="16">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">parent_count<pos:position pos:line="41" pos:column="33"/></name> <operator pos:line="41" pos:column="34">!=<pos:position pos:line="41" pos:column="36"/></operator> <name pos:line="41" pos:column="37">parent_line_count<pos:position pos:line="41" pos:column="54"/></name></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55"> <block pos:line="41" pos:column="56">{
			<expr_stmt><expr><name pos:line="42" pos:column="25">err<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <call><name pos:line="42" pos:column="31">report<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">options<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="47">&amp;<pos:position pos:line="42" pos:column="52"/></operator><name><name pos:line="42" pos:column="48">commit<pos:position pos:line="42" pos:column="54"/></name><operator pos:line="42" pos:column="54">-&gt;<pos:position pos:line="42" pos:column="59"/></operator><name pos:line="42" pos:column="56">object<pos:position pos:line="42" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">FSCK_MSG_MISSING_PARENT<pos:position pos:line="42" pos:column="87"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="89">"parent objects missing"<pos:position pos:line="42" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="115"/></expr_stmt>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">err<pos:position pos:line="43" pos:column="32"/></name></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
				<block type="pseudo"><return pos:line="44" pos:column="33">return <expr><name pos:line="44" pos:column="40">err<pos:position pos:line="44" pos:column="43"/></name></expr>;<pos:position pos:line="44" pos:column="44"/></return></block></then></if>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>
	}<pos:position pos:line="46" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="47" pos:column="9">author_count<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <literal type="number" pos:line="47" pos:column="24">0<pos:position pos:line="47" pos:column="25"/></literal></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
	<while pos:line="48" pos:column="9">while <condition pos:line="48" pos:column="15">(<expr><call><name pos:line="48" pos:column="16">skip_prefix<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">buffer<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="36">"author "<pos:position pos:line="48" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="47">&amp;<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="48">buffer<pos:position pos:line="48" pos:column="54"/></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="56"/></condition> <block pos:line="48" pos:column="57">{
		<expr_stmt><expr><name pos:line="49" pos:column="17">author_count<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">++<pos:position pos:line="49" pos:column="31"/></operator></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="50" pos:column="17">err<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <call><name pos:line="50" pos:column="23">fsck_ident<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><operator pos:line="50" pos:column="34">&amp;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="35">buffer<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="43">&amp;<pos:position pos:line="50" pos:column="48"/></operator><name><name pos:line="50" pos:column="44">commit<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">-&gt;<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="52">object<pos:position pos:line="50" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="60">options<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">err<pos:position pos:line="51" pos:column="24"/></name></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25">
			<block type="pseudo"><return pos:line="52" pos:column="25">return <expr><name pos:line="52" pos:column="32">err<pos:position pos:line="52" pos:column="35"/></name></expr>;<pos:position pos:line="52" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="53" pos:column="10"/></block></while>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">author_count<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">&lt;<pos:position pos:line="54" pos:column="30"/></operator> <literal type="number" pos:line="54" pos:column="28">1<pos:position pos:line="54" pos:column="29"/></literal></expr>)<pos:position pos:line="54" pos:column="30"/></condition><then pos:line="54" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="17">err<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name pos:line="55" pos:column="23">report<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">options<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="39">&amp;<pos:position pos:line="55" pos:column="44"/></operator><name><name pos:line="55" pos:column="40">commit<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">-&gt;<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="48">object<pos:position pos:line="55" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="56">FSCK_MSG_MISSING_AUTHOR<pos:position pos:line="55" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="81">"invalid format - expected 'author' line"<pos:position pos:line="55" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="124"/></expr_stmt></block></then>
	<elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><name pos:line="56" pos:column="18">author_count<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">&gt;<pos:position pos:line="56" pos:column="35"/></operator> <literal type="number" pos:line="56" pos:column="33">1<pos:position pos:line="56" pos:column="34"/></literal></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="17">err<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <call><name pos:line="57" pos:column="23">report<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">options<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="39">&amp;<pos:position pos:line="57" pos:column="44"/></operator><name><name pos:line="57" pos:column="40">commit<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">-&gt;<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="48">object<pos:position pos:line="57" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="56">FSCK_MSG_MULTIPLE_AUTHORS<pos:position pos:line="57" pos:column="81"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="83">"invalid format - multiple 'author' lines"<pos:position pos:line="57" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="127"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">err<pos:position pos:line="58" pos:column="16"/></name></expr>)<pos:position pos:line="58" pos:column="17"/></condition><then pos:line="58" pos:column="17">
		<block type="pseudo"><return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">err<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></return></block></then></if>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><call><name pos:line="60" pos:column="14">skip_prefix<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">buffer<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="34">"committer "<pos:position pos:line="60" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="48">&amp;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="49">buffer<pos:position pos:line="60" pos:column="55"/></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="57"/></condition><then pos:line="60" pos:column="57">
		<block type="pseudo"><return pos:line="61" pos:column="17">return <expr><call><name pos:line="61" pos:column="24">report<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">options<pos:position pos:line="61" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="40">&amp;<pos:position pos:line="61" pos:column="45"/></operator><name><name pos:line="61" pos:column="41">commit<pos:position pos:line="61" pos:column="47"/></name><operator pos:line="61" pos:column="47">-&gt;<pos:position pos:line="61" pos:column="52"/></operator><name pos:line="61" pos:column="49">object<pos:position pos:line="61" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="57">FSCK_MSG_MISSING_COMMITTER<pos:position pos:line="61" pos:column="83"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="85">"invalid format - expected 'committer' line"<pos:position pos:line="61" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="131"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="62" pos:column="9">err<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <call><name pos:line="62" pos:column="15">fsck_ident<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><operator pos:line="62" pos:column="26">&amp;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="27">buffer<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="35">&amp;<pos:position pos:line="62" pos:column="40"/></operator><name><name pos:line="62" pos:column="36">commit<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">object<pos:position pos:line="62" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">options<pos:position pos:line="62" pos:column="59"/></name></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="61"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">err<pos:position pos:line="63" pos:column="16"/></name></expr>)<pos:position pos:line="63" pos:column="17"/></condition><then pos:line="63" pos:column="17">
		<block type="pseudo"><return pos:line="64" pos:column="17">return <expr><name pos:line="64" pos:column="24">err<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></return></block></then></if>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><name><name pos:line="65" pos:column="14">commit<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">tree<pos:position pos:line="65" pos:column="26"/></name></name></expr>)<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27"> <block pos:line="65" pos:column="28">{
		<expr_stmt><expr><name pos:line="66" pos:column="17">err<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">=<pos:position pos:line="66" pos:column="22"/></operator> <call><name pos:line="66" pos:column="23">report<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">options<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="39">&amp;<pos:position pos:line="66" pos:column="44"/></operator><name><name pos:line="66" pos:column="40">commit<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">-&gt;<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="48">object<pos:position pos:line="66" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="56">FSCK_MSG_BAD_TREE<pos:position pos:line="66" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="75">"could not load commit's tree %s"<pos:position pos:line="66" pos:column="108"/></literal></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="110">sha1_to_hex<pos:position pos:line="66" pos:column="121"/></name><argument_list pos:line="66" pos:column="121">(<argument><expr><name pos:line="66" pos:column="122">tree_sha1<pos:position pos:line="66" pos:column="131"/></name></expr></argument>)<pos:position pos:line="66" pos:column="132"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="134"/></expr_stmt>
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">err<pos:position pos:line="67" pos:column="24"/></name></expr>)<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25">
			<block type="pseudo"><return pos:line="68" pos:column="25">return <expr><name pos:line="68" pos:column="32">err<pos:position pos:line="68" pos:column="35"/></name></expr>;<pos:position pos:line="68" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><call><name pos:line="70" pos:column="13">memchr<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">(<argument><expr><name pos:line="70" pos:column="20">buffer_begin<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="34">'\0'<pos:position pos:line="70" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">size<pos:position pos:line="70" pos:column="44"/></name></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="46"/></condition><then pos:line="70" pos:column="46"> <block pos:line="70" pos:column="47">{
		<expr_stmt><expr><name pos:line="71" pos:column="17">err<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <call><name pos:line="71" pos:column="23">report<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><name pos:line="71" pos:column="30">options<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="39">&amp;<pos:position pos:line="71" pos:column="44"/></operator><name><name pos:line="71" pos:column="40">commit<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">object<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="56">FSCK_MSG_NUL_IN_COMMIT<pos:position pos:line="71" pos:column="78"/></name></expr></argument>,
			     <argument><expr><literal type="string" pos:line="72" pos:column="30">"NUL byte in the commit object body"<pos:position pos:line="72" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="68"/></expr_stmt>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">err<pos:position pos:line="73" pos:column="24"/></name></expr>)<pos:position pos:line="73" pos:column="25"/></condition><then pos:line="73" pos:column="25">
			<block type="pseudo"><return pos:line="74" pos:column="25">return <expr><name pos:line="74" pos:column="32">err<pos:position pos:line="74" pos:column="35"/></name></expr>;<pos:position pos:line="74" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if>
	<return pos:line="76" pos:column="9">return <expr><literal type="number" pos:line="76" pos:column="16">0<pos:position pos:line="76" pos:column="17"/></literal></expr>;<pos:position pos:line="76" pos:column="18"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

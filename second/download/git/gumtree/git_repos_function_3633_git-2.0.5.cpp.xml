<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3633_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ewah_read_mmap<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">ewah_bitmap<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">self<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">map<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">size_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">len<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint8_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ptr<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">map<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">i<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="6" pos:column="9">self<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">bit_size<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name pos:line="6" pos:column="26">get_be32<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">ptr<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">ptr<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">+=<pos:position pos:line="7" pos:column="15"/></operator> <sizeof pos:line="7" pos:column="16">sizeof<argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">uint32_t<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="9" pos:column="9">self<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">buffer_size<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="29">self<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">alloc_size<pos:position pos:line="9" pos:column="45"/></name></name> <operator pos:line="9" pos:column="46">=<pos:position pos:line="9" pos:column="47"/></operator> <call><name pos:line="9" pos:column="48">get_be32<pos:position pos:line="9" pos:column="56"/></name><argument_list pos:line="9" pos:column="56">(<argument><expr><name pos:line="9" pos:column="57">ptr<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">ptr<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">+=<pos:position pos:line="10" pos:column="15"/></operator> <sizeof pos:line="10" pos:column="16">sizeof<argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">uint32_t<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">self<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">buffer<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">ewah_realloc<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name><name pos:line="12" pos:column="37">self<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">buffer<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>,
		<argument><expr><name><name pos:line="13" pos:column="17">self<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">alloc_size<pos:position pos:line="13" pos:column="33"/></name></name> <operator pos:line="13" pos:column="34">*<pos:position pos:line="13" pos:column="35"/></operator> <sizeof pos:line="13" pos:column="36">sizeof<argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">eword_t<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">self<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">buffer<pos:position pos:line="15" pos:column="26"/></name></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="18" pos:column="9">/*
	 * Copy the raw data for the bitmap as a whole chunk;
	 * if we're in a little-endian platform, we'll perform
	 * the endianness conversion in a separate pass to ensure
	 * we're loading 8-byte aligned words.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">memcpy<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name><name pos:line="24" pos:column="16">self<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">buffer<pos:position pos:line="24" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">ptr<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="35">self<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">buffer_size<pos:position pos:line="24" pos:column="52"/></name></name> <operator pos:line="24" pos:column="53">*<pos:position pos:line="24" pos:column="54"/></operator> <sizeof pos:line="24" pos:column="55">sizeof<argument_list pos:line="24" pos:column="61">(<argument><expr><name pos:line="24" pos:column="62">uint64_t<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">ptr<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">+=<pos:position pos:line="25" pos:column="15"/></operator> <name><name pos:line="25" pos:column="16">self<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">buffer_size<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">*<pos:position pos:line="25" pos:column="35"/></operator> <sizeof pos:line="25" pos:column="36">sizeof<argument_list pos:line="25" pos:column="42">(<argument><expr><name pos:line="25" pos:column="43">uint64_t<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name><name pos:line="27" pos:column="25">self<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">buffer_size<pos:position pos:line="27" pos:column="42"/></name></name></expr>;<pos:position pos:line="27" pos:column="43"/></condition> <incr><expr><operator pos:line="27" pos:column="44">++<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">i<pos:position pos:line="27" pos:column="47"/></name></expr></incr>)<pos:position pos:line="27" pos:column="48"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="17">self<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">buffer<pos:position pos:line="28" pos:column="29"/></name><index pos:line="28" pos:column="29">[<expr><name pos:line="28" pos:column="30">i<pos:position pos:line="28" pos:column="31"/></name></expr>]<pos:position pos:line="28" pos:column="32"/></index></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <call><name pos:line="28" pos:column="35">ntohll<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name><name pos:line="28" pos:column="42">self<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">-&gt;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="48">buffer<pos:position pos:line="28" pos:column="54"/></name><index pos:line="28" pos:column="54">[<expr><name pos:line="28" pos:column="55">i<pos:position pos:line="28" pos:column="56"/></name></expr>]<pos:position pos:line="28" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt></block></for>

	<expr_stmt><expr><name><name pos:line="30" pos:column="9">self<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">rlw<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name><name pos:line="30" pos:column="21">self<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">buffer<pos:position pos:line="30" pos:column="33"/></name></name> <operator pos:line="30" pos:column="34">+<pos:position pos:line="30" pos:column="35"/></operator> <call><name pos:line="30" pos:column="36">get_be32<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">ptr<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>

	<return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">3<pos:position pos:line="32" pos:column="18"/></literal> <operator pos:line="32" pos:column="19">*<pos:position pos:line="32" pos:column="20"/></operator> <literal type="number" pos:line="32" pos:column="21">4<pos:position pos:line="32" pos:column="22"/></literal><operator pos:line="32" pos:column="22">)<pos:position pos:line="32" pos:column="23"/></operator> <operator pos:line="32" pos:column="24">+<pos:position pos:line="32" pos:column="25"/></operator> <operator pos:line="32" pos:column="26">(<pos:position pos:line="32" pos:column="27"/></operator><name><name pos:line="32" pos:column="27">self<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">buffer_size<pos:position pos:line="32" pos:column="44"/></name></name> <operator pos:line="32" pos:column="45">*<pos:position pos:line="32" pos:column="46"/></operator> <literal type="number" pos:line="32" pos:column="47">8<pos:position pos:line="32" pos:column="48"/></literal><operator pos:line="32" pos:column="48">)<pos:position pos:line="32" pos:column="49"/></operator></expr>;<pos:position pos:line="32" pos:column="50"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1785_git-2.14.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mktree<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">tree_content<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">t<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">v<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">strbuf<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">b<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">maxlen<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">v<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">QSORT<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">t<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">entries<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="35">t<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">entry_count<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">tecmp0<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt></block></then>
	<else pos:line="8" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">QSORT<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name><name pos:line="9" pos:column="23">t<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">entries<pos:position pos:line="9" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="35">t<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">entry_count<pos:position pos:line="9" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">tecmp1<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt></block></else></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">t<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">entry_count<pos:position pos:line="11" pos:column="39"/></name></name></expr>;<pos:position pos:line="11" pos:column="40"/></condition> <incr><expr><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">++<pos:position pos:line="11" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="45"/></control> <block pos:line="11" pos:column="46">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">t<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">entries<pos:position pos:line="12" pos:column="31"/></name><index pos:line="12" pos:column="31">[<expr><name pos:line="12" pos:column="32">i<pos:position pos:line="12" pos:column="33"/></name></expr>]<pos:position pos:line="12" pos:column="34"/></index></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name><name pos:line="12" pos:column="36">versions<pos:position pos:line="12" pos:column="44"/></name><index pos:line="12" pos:column="44">[<expr><name pos:line="12" pos:column="45">v<pos:position pos:line="12" pos:column="46"/></name></expr>]<pos:position pos:line="12" pos:column="47"/></index></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">mode<pos:position pos:line="12" pos:column="52"/></name></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">maxlen<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">+=<pos:position pos:line="13" pos:column="34"/></operator> <name><name pos:line="13" pos:column="35">t<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">entries<pos:position pos:line="13" pos:column="45"/></name><index pos:line="13" pos:column="45">[<expr><name pos:line="13" pos:column="46">i<pos:position pos:line="13" pos:column="47"/></name></expr>]<pos:position pos:line="13" pos:column="48"/></index></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name><name pos:line="13" pos:column="50">name<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">str_len<pos:position pos:line="13" pos:column="63"/></name></name> <operator pos:line="13" pos:column="64">+<pos:position pos:line="13" pos:column="65"/></operator> <literal type="number" pos:line="13" pos:column="66">34<pos:position pos:line="13" pos:column="68"/></literal></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_reset<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">b<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_grow<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">b<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">maxlen<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">t<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">entry_count<pos:position pos:line="18" pos:column="39"/></name></name></expr>;<pos:position pos:line="18" pos:column="40"/></condition> <incr><expr><name pos:line="18" pos:column="41">i<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">++<pos:position pos:line="18" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="45"/></control> <block pos:line="18" pos:column="46">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">tree_entry<pos:position pos:line="19" pos:column="34"/></name></name> <modifier pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></modifier></type><name pos:line="19" pos:column="36">e<pos:position pos:line="19" pos:column="37"/></name> <init pos:line="19" pos:column="38">= <expr><name><name pos:line="19" pos:column="40">t<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">entries<pos:position pos:line="19" pos:column="50"/></name><index pos:line="19" pos:column="50">[<expr><name pos:line="19" pos:column="51">i<pos:position pos:line="19" pos:column="52"/></name></expr>]<pos:position pos:line="19" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="19" pos:column="54"/></decl_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="22">e<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">versions<pos:position pos:line="20" pos:column="33"/></name><index pos:line="20" pos:column="33">[<expr><name pos:line="20" pos:column="34">v<pos:position pos:line="20" pos:column="35"/></name></expr>]<pos:position pos:line="20" pos:column="36"/></index></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">mode<pos:position pos:line="20" pos:column="41"/></name></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_addf<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">b<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="32">"%o %s%c"<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>,
			<argument><expr><call pos:line="23" pos:column="25">(<name pos:line="23" pos:column="26">unsigned<pos:position pos:line="23" pos:column="34"/></name> <name pos:line="23" pos:column="35">int<pos:position pos:line="23" pos:column="38"/></name>)<argument_list pos:line="23" pos:column="39">(<argument><expr><name><name pos:line="23" pos:column="40">e<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">-&gt;<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="43">versions<pos:position pos:line="23" pos:column="51"/></name><index pos:line="23" pos:column="51">[<expr><name pos:line="23" pos:column="52">v<pos:position pos:line="23" pos:column="53"/></name></expr>]<pos:position pos:line="23" pos:column="54"/></index></name><operator pos:line="23" pos:column="54">.<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">mode<pos:position pos:line="23" pos:column="59"/></name> <operator pos:line="23" pos:column="60">&amp;<pos:position pos:line="23" pos:column="65"/></operator> <operator pos:line="23" pos:column="62">~<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="63">NO_DELTA<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr></argument>,
			<argument><expr><name><name pos:line="24" pos:column="25">e<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">name<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">str_dat<pos:position pos:line="24" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="43">'\0'<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_add<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">b<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="31">e<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">versions<pos:position pos:line="25" pos:column="42"/></name><index pos:line="25" pos:column="42">[<expr><name pos:line="25" pos:column="43">v<pos:position pos:line="25" pos:column="44"/></name></expr>]<pos:position pos:line="25" pos:column="45"/></index></name><operator pos:line="25" pos:column="45">.<pos:position pos:line="25" pos:column="46"/></operator><name><name pos:line="25" pos:column="46">oid<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">.<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="50">hash<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">GIT_SHA1_RAWSZ<pos:position pos:line="25" pos:column="70"/></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></for>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

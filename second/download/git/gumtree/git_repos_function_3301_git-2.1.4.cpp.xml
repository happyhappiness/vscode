<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3301_git-2.1.4.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">ref<pos:position pos:line="1" pos:column="11"/></name></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">copy_ref<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">ref<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ref<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ref<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">cpy<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">ref<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">strlen<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name><name pos:line="7" pos:column="22">ref<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">name<pos:position pos:line="7" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">cpy<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">xmalloc<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><sizeof pos:line="8" pos:column="23">sizeof<argument_list pos:line="8" pos:column="29">(<argument><expr pos:line="8" pos:column="30">struct <name pos:line="8" pos:column="37">ref<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></sizeof> <operator pos:line="8" pos:column="42">+<pos:position pos:line="8" pos:column="43"/></operator> <name pos:line="8" pos:column="44">len<pos:position pos:line="8" pos:column="47"/></name> <operator pos:line="8" pos:column="48">+<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="50">1<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memcpy<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">cpy<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="21">ref<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof<argument_list pos:line="9" pos:column="32">(<argument><expr pos:line="9" pos:column="33">struct <name pos:line="9" pos:column="40">ref<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></sizeof> <operator pos:line="9" pos:column="45">+<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="47">len<pos:position pos:line="9" pos:column="50"/></name> <operator pos:line="9" pos:column="51">+<pos:position pos:line="9" pos:column="52"/></operator> <literal type="number" pos:line="9" pos:column="53">1<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">cpy<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">next<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">cpy<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">symref<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <ternary><condition><expr><name><name pos:line="11" pos:column="23">ref<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">symref<pos:position pos:line="11" pos:column="34"/></name></name></expr> ?<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <expr><call><name pos:line="11" pos:column="37">xstrdup<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name><name pos:line="11" pos:column="45">ref<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">symref<pos:position pos:line="11" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="11" pos:column="58"/></then><else pos:line="11" pos:column="58">: <expr><name pos:line="11" pos:column="60">NULL<pos:position pos:line="11" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">cpy<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">remote_status<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <ternary><condition><expr><name><name pos:line="12" pos:column="30">ref<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">remote_status<pos:position pos:line="12" pos:column="48"/></name></name></expr> ?<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <expr><call><name pos:line="12" pos:column="51">xstrdup<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">(<argument><expr><name><name pos:line="12" pos:column="59">ref<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">-&gt;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="64">remote_status<pos:position pos:line="12" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr> <pos:position pos:line="12" pos:column="79"/></then><else pos:line="12" pos:column="79">: <expr><name pos:line="12" pos:column="81">NULL<pos:position pos:line="12" pos:column="85"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="86"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">cpy<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">peer_ref<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <call><name pos:line="13" pos:column="25">copy_ref<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name><name pos:line="13" pos:column="34">ref<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">peer_ref<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
	<return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">cpy<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

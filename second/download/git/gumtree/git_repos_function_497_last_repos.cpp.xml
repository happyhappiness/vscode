<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_497_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">blame_list<pos:position pos:line="1" pos:column="25"/></name></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">setup_blame_list<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">blame_entry<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">unblamed<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
					   <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">num_ents_p<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">blame_entry<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">e<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">num_ents<pos:position pos:line="5" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="23">i<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">blame_list<pos:position pos:line="6" pos:column="26"/></name></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">blame_list<pos:position pos:line="6" pos:column="38"/></name> <init pos:line="6" pos:column="39">= <expr><name pos:line="6" pos:column="41">NULL<pos:position pos:line="6" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">e<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">unblamed<pos:position pos:line="8" pos:column="26"/></name></expr><operator pos:line="8" pos:column="26">,<pos:position pos:line="8" pos:column="27"/></operator> <expr><name pos:line="8" pos:column="28">num_ents<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">=<pos:position pos:line="8" pos:column="38"/></operator> <literal type="number" pos:line="8" pos:column="39">0<pos:position pos:line="8" pos:column="40"/></literal></expr>;<pos:position pos:line="8" pos:column="41"/></init> <condition><expr><name pos:line="8" pos:column="42">e<pos:position pos:line="8" pos:column="43"/></name></expr>;<pos:position pos:line="8" pos:column="44"/></condition> <incr><expr><name pos:line="8" pos:column="45">e<pos:position pos:line="8" pos:column="46"/></name> <operator pos:line="8" pos:column="47">=<pos:position pos:line="8" pos:column="48"/></operator> <name><name pos:line="8" pos:column="49">e<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">next<pos:position pos:line="8" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="57"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">num_ents<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">++<pos:position pos:line="9" pos:column="27"/></operator></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt></block></for>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">num_ents<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">blame_list<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="30">xcalloc<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">num_ents<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="48">sizeof<argument_list pos:line="11" pos:column="54">(<argument><expr pos:line="11" pos:column="55">struct <name pos:line="11" pos:column="62">blame_list<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>
		<for pos:line="12" pos:column="17">for <control pos:line="12" pos:column="21">(<init><expr><name pos:line="12" pos:column="22">e<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">unblamed<pos:position pos:line="12" pos:column="34"/></name></expr><operator pos:line="12" pos:column="34">,<pos:position pos:line="12" pos:column="35"/></operator> <expr><name pos:line="12" pos:column="36">i<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">=<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>;<pos:position pos:line="12" pos:column="42"/></init> <condition><expr><name pos:line="12" pos:column="43">e<pos:position pos:line="12" pos:column="44"/></name></expr>;<pos:position pos:line="12" pos:column="45"/></condition> <incr><expr><name pos:line="12" pos:column="46">e<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">=<pos:position pos:line="12" pos:column="49"/></operator> <name><name pos:line="12" pos:column="50">e<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">-&gt;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="53">next<pos:position pos:line="12" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="58"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="25">blame_list<pos:position pos:line="13" pos:column="35"/></name><index pos:line="13" pos:column="35">[<expr><name pos:line="13" pos:column="36">i<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">++<pos:position pos:line="13" pos:column="39"/></operator></expr>]<pos:position pos:line="13" pos:column="40"/></index></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">ent<pos:position pos:line="13" pos:column="44"/></name> <operator pos:line="13" pos:column="45">=<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">e<pos:position pos:line="13" pos:column="48"/></name></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt></block></for>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">num_ents_p<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">num_ents<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">blame_list<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

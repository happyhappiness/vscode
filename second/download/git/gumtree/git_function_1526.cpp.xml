<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1526.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_object_list<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">ac<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">av<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">line<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">1000<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">flags<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">init_revisions<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><operator pos:line="7" pos:column="24">&amp;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="25">revs<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">save_commit_buffer<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">setup_revisions<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">ac<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">av<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="34">revs<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* make sure shallows are read */</comment>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">is_repository_shallow<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">()<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>

	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><call><name pos:line="14" pos:column="16">fgets<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">line<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof<argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">line<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">stdin<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call> <operator pos:line="14" pos:column="49">!=<pos:position pos:line="14" pos:column="51"/></operator> <name pos:line="14" pos:column="52">NULL<pos:position pos:line="14" pos:column="56"/></name></expr>)<pos:position pos:line="14" pos:column="57"/></condition> <block pos:line="14" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">int<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">len<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><call><name pos:line="15" pos:column="27">strlen<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">line<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">len<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">&amp;&amp;<pos:position pos:line="16" pos:column="35"/></operator> <name><name pos:line="16" pos:column="28">line<pos:position pos:line="16" pos:column="32"/></name><index pos:line="16" pos:column="32">[<expr><name pos:line="16" pos:column="33">len<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">-<pos:position pos:line="16" pos:column="38"/></operator> <literal type="number" pos:line="16" pos:column="39">1<pos:position pos:line="16" pos:column="40"/></literal></expr>]<pos:position pos:line="16" pos:column="41"/></index></name> <operator pos:line="16" pos:column="42">==<pos:position pos:line="16" pos:column="44"/></operator> <literal type="char" pos:line="16" pos:column="45">'\n'<pos:position pos:line="16" pos:column="49"/></literal></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="25">line<pos:position pos:line="17" pos:column="29"/></name><index pos:line="17" pos:column="29">[<expr><operator pos:line="17" pos:column="30">--<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">len<pos:position pos:line="17" pos:column="35"/></name></expr>]<pos:position pos:line="17" pos:column="36"/></index></name> <operator pos:line="17" pos:column="37">=<pos:position pos:line="17" pos:column="38"/></operator> <literal type="number" pos:line="17" pos:column="39">0<pos:position pos:line="17" pos:column="40"/></literal></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">len<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
			<block type="pseudo"><break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">*<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">line<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">==<pos:position pos:line="20" pos:column="29"/></operator> <literal type="char" pos:line="20" pos:column="30">'-'<pos:position pos:line="20" pos:column="33"/></literal></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34"> <block pos:line="20" pos:column="35">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><operator pos:line="21" pos:column="29">!<pos:position pos:line="21" pos:column="30"/></operator><call><name pos:line="21" pos:column="30">strcmp<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">line<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="43">"--not"<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52"> <block pos:line="21" pos:column="53">{
				<expr_stmt><expr><name pos:line="22" pos:column="33">flags<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">^=<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">UNINTERESTING<pos:position pos:line="22" pos:column="55"/></name></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="23" pos:column="33">write_bitmap_index<pos:position pos:line="23" pos:column="51"/></name> <operator pos:line="23" pos:column="52">=<pos:position pos:line="23" pos:column="53"/></operator> <literal type="number" pos:line="23" pos:column="54">0<pos:position pos:line="23" pos:column="55"/></literal></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
				<continue pos:line="24" pos:column="33">continue;<pos:position pos:line="24" pos:column="42"/></continue>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><call><name pos:line="26" pos:column="29">starts_with<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">line<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="47">"--shallow "<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="61"/></condition><then pos:line="26" pos:column="61"> <block pos:line="26" pos:column="62">{
				<decl_stmt><decl><type><name pos:line="27" pos:column="33">unsigned<pos:position pos:line="27" pos:column="41"/></name> <name pos:line="27" pos:column="42">char<pos:position pos:line="27" pos:column="46"/></name></type> <name><name pos:line="27" pos:column="47">sha1<pos:position pos:line="27" pos:column="51"/></name><index pos:line="27" pos:column="51">[<expr><literal type="number" pos:line="27" pos:column="52">20<pos:position pos:line="27" pos:column="54"/></literal></expr>]<pos:position pos:line="27" pos:column="55"/></index></name></decl>;<pos:position pos:line="27" pos:column="56"/></decl_stmt>
				<if pos:line="28" pos:column="33">if <condition pos:line="28" pos:column="36">(<expr><call><name pos:line="28" pos:column="37">get_sha1_hex<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">line<pos:position pos:line="28" pos:column="54"/></name> <operator pos:line="28" pos:column="55">+<pos:position pos:line="28" pos:column="56"/></operator> <literal type="number" pos:line="28" pos:column="57">10<pos:position pos:line="28" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="61">sha1<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="67"/></condition><then pos:line="28" pos:column="67">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="41">die<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><literal type="string" pos:line="29" pos:column="45">"not an SHA-1 '%s'"<pos:position pos:line="29" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">line<pos:position pos:line="29" pos:column="70"/></name> <operator pos:line="29" pos:column="71">+<pos:position pos:line="29" pos:column="72"/></operator> <literal type="number" pos:line="29" pos:column="73">10<pos:position pos:line="29" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="77"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">register_shallow<pos:position pos:line="30" pos:column="49"/></name><argument_list pos:line="30" pos:column="49">(<argument><expr><name pos:line="30" pos:column="50">sha1<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="31" pos:column="33">use_bitmap_index<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">=<pos:position pos:line="31" pos:column="51"/></operator> <literal type="number" pos:line="31" pos:column="52">0<pos:position pos:line="31" pos:column="53"/></literal></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
				<continue pos:line="32" pos:column="33">continue;<pos:position pos:line="32" pos:column="42"/></continue>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">die<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><literal type="string" pos:line="34" pos:column="29">"not a rev '%s'"<pos:position pos:line="34" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="47">line<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">handle_revision_arg<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">line<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="47">&amp;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="48">revs<pos:position pos:line="36" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">flags<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">REVARG_CANNOT_BE_FILENAME<pos:position pos:line="36" pos:column="86"/></name></expr></argument>)<pos:position pos:line="36" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="88"/></condition><then pos:line="36" pos:column="88">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">die<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><literal type="string" pos:line="37" pos:column="29">"bad revision '%s'"<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">line<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></while>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">use_bitmap_index<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">&amp;&amp;<pos:position pos:line="40" pos:column="40"/></operator> <operator pos:line="40" pos:column="33">!<pos:position pos:line="40" pos:column="34"/></operator><call><name pos:line="40" pos:column="34">get_object_list_from_bitmap<pos:position pos:line="40" pos:column="61"/></name><argument_list pos:line="40" pos:column="61">(<argument><expr><operator pos:line="40" pos:column="62">&amp;<pos:position pos:line="40" pos:column="67"/></operator><name pos:line="40" pos:column="63">revs<pos:position pos:line="40" pos:column="67"/></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="69"/></condition><then pos:line="40" pos:column="69">
		<block type="pseudo"><return pos:line="41" pos:column="17">return;<pos:position pos:line="41" pos:column="24"/></return></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">prepare_revision_walk<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="36">revs<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="42"/></condition><then pos:line="43" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">die<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><literal type="string" pos:line="44" pos:column="21">"revision walk setup failed"<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">mark_edges_uninteresting<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><operator pos:line="45" pos:column="34">&amp;<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="35">revs<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="41">show_edge<pos:position pos:line="45" pos:column="50"/></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">traverse_commit_list<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><operator pos:line="46" pos:column="30">&amp;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="31">revs<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">show_commit<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">show_object<pos:position pos:line="46" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="63">NULL<pos:position pos:line="46" pos:column="67"/></name></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="69"/></expr_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">unpack_unreachable_expiration<pos:position pos:line="48" pos:column="42"/></name></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43"> <block pos:line="48" pos:column="44">{
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">revs<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">.<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">ignore_missing_links<pos:position pos:line="49" pos:column="42"/></name></name> <operator pos:line="49" pos:column="43">=<pos:position pos:line="49" pos:column="44"/></operator> <literal type="number" pos:line="49" pos:column="45">1<pos:position pos:line="49" pos:column="46"/></literal></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">add_unseen_recent_objects_to_traversal<pos:position pos:line="50" pos:column="59"/></name><argument_list pos:line="50" pos:column="59">(<argument><expr><operator pos:line="50" pos:column="60">&amp;<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="61">revs<pos:position pos:line="50" pos:column="65"/></name></expr></argument>,
				<argument><expr><name pos:line="51" pos:column="33">unpack_unreachable_expiration<pos:position pos:line="51" pos:column="62"/></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="64"/></condition><then pos:line="51" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">die<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><literal type="string" pos:line="52" pos:column="29">"unable to add recent objects"<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><call><name pos:line="53" pos:column="21">prepare_revision_walk<pos:position pos:line="53" pos:column="42"/></name><argument_list pos:line="53" pos:column="42">(<argument><expr><operator pos:line="53" pos:column="43">&amp;<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="44">revs<pos:position pos:line="53" pos:column="48"/></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="50"/></condition><then pos:line="53" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">die<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><literal type="string" pos:line="54" pos:column="29">"revision walk setup failed"<pos:position pos:line="54" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">traverse_commit_list<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><operator pos:line="55" pos:column="38">&amp;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="39">revs<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">record_recent_commit<pos:position pos:line="55" pos:column="65"/></name></expr></argument>,
				     <argument><expr><name pos:line="56" pos:column="38">record_recent_object<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">NULL<pos:position pos:line="56" pos:column="64"/></name></expr></argument>)<pos:position pos:line="56" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">keep_unreachable<pos:position pos:line="59" pos:column="29"/></name></expr>)<pos:position pos:line="59" pos:column="30"/></condition><then pos:line="59" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="17">add_objects_in_unpacked_packs<pos:position pos:line="60" pos:column="46"/></name><argument_list pos:line="60" pos:column="46">(<argument><expr><operator pos:line="60" pos:column="47">&amp;<pos:position pos:line="60" pos:column="52"/></operator><name pos:line="60" pos:column="48">revs<pos:position pos:line="60" pos:column="52"/></name></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt></block></then></if>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">unpack_unreachable<pos:position pos:line="61" pos:column="31"/></name></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">loosen_unused_packed_objects<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">(<argument><expr><operator pos:line="62" pos:column="46">&amp;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="47">revs<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">sha1_array_clear<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><operator pos:line="64" pos:column="26">&amp;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="27">recent_objects<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6137_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">grep_cache<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">grep_opt<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">opt<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">pathspec<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">pathspec<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">cached<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">hit<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">nr<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">name<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">STRBUF_INIT<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">name_base_len<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">super_prefix<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">name_base_len<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">=<pos:position pos:line="9" pos:column="32"/></operator> <call><name pos:line="9" pos:column="33">strlen<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">super_prefix<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addstr<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">name<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">super_prefix<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">read_cache<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">()<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">nr<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></init> <condition><expr><name pos:line="15" pos:column="22">nr<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&lt;<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="27">active_nr<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></condition> <incr><expr><name pos:line="15" pos:column="38">nr<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">++<pos:position pos:line="15" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="43"/></control> <block pos:line="15" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">const<pos:position pos:line="16" pos:column="22"/></specifier> <name><name pos:line="16" pos:column="23">struct<pos:position pos:line="16" pos:column="29"/></name> <name pos:line="16" pos:column="30">cache_entry<pos:position pos:line="16" pos:column="41"/></name></name> <modifier pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></modifier></type><name pos:line="16" pos:column="43">ce<pos:position pos:line="16" pos:column="45"/></name> <init pos:line="16" pos:column="46">= <expr><name><name pos:line="16" pos:column="48">active_cache<pos:position pos:line="16" pos:column="60"/></name><index pos:line="16" pos:column="60">[<expr><name pos:line="16" pos:column="61">nr<pos:position pos:line="16" pos:column="63"/></name></expr>]<pos:position pos:line="16" pos:column="64"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="65"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">strbuf_setlen<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><operator pos:line="17" pos:column="31">&amp;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="32">name<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">name_base_len<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_addstr<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="32">name<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="38">ce<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">name<pos:position pos:line="18" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">S_ISREG<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">ce<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">ce_mode<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call> <operator pos:line="20" pos:column="42">&amp;&amp;<pos:position pos:line="20" pos:column="52"/></operator>
		    <call><name pos:line="21" pos:column="21">match_pathspec<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">pathspec<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="46">name<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">buf<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="56">name<pos:position pos:line="21" pos:column="60"/></name><operator pos:line="21" pos:column="60">.<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="61">len<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="66">0<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="69">NULL<pos:position pos:line="21" pos:column="73"/></name></expr></argument>,
				   <argument><expr><call><name pos:line="22" pos:column="36">S_ISDIR<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name><name pos:line="22" pos:column="44">ce<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">-&gt;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="48">ce_mode<pos:position pos:line="22" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call> <operator pos:line="22" pos:column="57">||<pos:position pos:line="22" pos:column="59"/></operator>
				   <call><name pos:line="23" pos:column="36">S_ISGITLINK<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><name><name pos:line="23" pos:column="48">ce<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">ce_mode<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62"> <block pos:line="23" pos:column="63">{
			<comment type="block" pos:line="24" pos:column="25">/*
			 * If CE_VALID is on, we assume worktree file and its
			 * cache entry are identical, even if worktree file has
			 * been modified, so use cache version instead
			 */</comment>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">cached<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">||<pos:position pos:line="29" pos:column="38"/></operator> <operator pos:line="29" pos:column="39">(<pos:position pos:line="29" pos:column="40"/></operator><name><name pos:line="29" pos:column="40">ce<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">ce_flags<pos:position pos:line="29" pos:column="52"/></name></name> <operator pos:line="29" pos:column="53">&amp;<pos:position pos:line="29" pos:column="58"/></operator> <name pos:line="29" pos:column="55">CE_VALID<pos:position pos:line="29" pos:column="63"/></name><operator pos:line="29" pos:column="63">)<pos:position pos:line="29" pos:column="64"/></operator> <operator pos:line="29" pos:column="65">||<pos:position pos:line="29" pos:column="67"/></operator>
			    <call><name pos:line="30" pos:column="29">ce_skip_worktree<pos:position pos:line="30" pos:column="45"/></name><argument_list pos:line="30" pos:column="45">(<argument><expr><name pos:line="30" pos:column="46">ce<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50"> <block pos:line="30" pos:column="51">{
				<if pos:line="31" pos:column="33">if <condition pos:line="31" pos:column="36">(<expr><call><name pos:line="31" pos:column="37">ce_stage<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">(<argument><expr><name pos:line="31" pos:column="46">ce<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call> <operator pos:line="31" pos:column="50">||<pos:position pos:line="31" pos:column="52"/></operator> <call><name pos:line="31" pos:column="53">ce_intent_to_add<pos:position pos:line="31" pos:column="69"/></name><argument_list pos:line="31" pos:column="69">(<argument><expr><name pos:line="31" pos:column="70">ce<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="74"/></condition><then pos:line="31" pos:column="74">
					<block type="pseudo"><continue pos:line="32" pos:column="41">continue;<pos:position pos:line="32" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><name pos:line="33" pos:column="33">hit<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">|=<pos:position pos:line="33" pos:column="39"/></operator> <call><name pos:line="33" pos:column="40">grep_oid<pos:position pos:line="33" pos:column="48"/></name><argument_list pos:line="33" pos:column="48">(<argument><expr><name pos:line="33" pos:column="49">opt<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="54">&amp;<pos:position pos:line="33" pos:column="59"/></operator><name><name pos:line="33" pos:column="55">ce<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">oid<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="64">ce<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">-&gt;<pos:position pos:line="33" pos:column="71"/></operator><name pos:line="33" pos:column="68">name<pos:position pos:line="33" pos:column="72"/></name></name></expr></argument>,
						 <argument><expr><literal type="number" pos:line="34" pos:column="50">0<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">ce<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">name<pos:position pos:line="34" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="35" pos:column="26"/></block></then> <else pos:line="35" pos:column="27">else <block pos:line="35" pos:column="32">{
				<expr_stmt><expr><name pos:line="36" pos:column="33">hit<pos:position pos:line="36" pos:column="36"/></name> <operator pos:line="36" pos:column="37">|=<pos:position pos:line="36" pos:column="39"/></operator> <call><name pos:line="36" pos:column="40">grep_file<pos:position pos:line="36" pos:column="49"/></name><argument_list pos:line="36" pos:column="49">(<argument><expr><name pos:line="36" pos:column="50">opt<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="55">ce<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">-&gt;<pos:position pos:line="36" pos:column="62"/></operator><name pos:line="36" pos:column="59">name<pos:position pos:line="36" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="37" pos:column="26"/></block></else></if>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <elseif pos:line="38" pos:column="19">else <if pos:line="38" pos:column="24">if <condition pos:line="38" pos:column="27">(<expr><name pos:line="38" pos:column="28">recurse_submodules<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">&amp;&amp;<pos:position pos:line="38" pos:column="57"/></operator> <call><name pos:line="38" pos:column="50">S_ISGITLINK<pos:position pos:line="38" pos:column="61"/></name><argument_list pos:line="38" pos:column="61">(<argument><expr><name><name pos:line="38" pos:column="62">ce<pos:position pos:line="38" pos:column="64"/></name><operator pos:line="38" pos:column="64">-&gt;<pos:position pos:line="38" pos:column="69"/></operator><name pos:line="38" pos:column="66">ce_mode<pos:position pos:line="38" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call> <operator pos:line="38" pos:column="75">&amp;&amp;<pos:position pos:line="38" pos:column="85"/></operator>
			   <call><name pos:line="39" pos:column="28">submodule_path_match<pos:position pos:line="39" pos:column="48"/></name><argument_list pos:line="39" pos:column="48">(<argument><expr><name pos:line="39" pos:column="49">pathspec<pos:position pos:line="39" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="59">name<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">.<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="64">buf<pos:position pos:line="39" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="69">NULL<pos:position pos:line="39" pos:column="73"/></name></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="75"/></condition><then pos:line="39" pos:column="75"> <block pos:line="39" pos:column="76">{
			<expr_stmt><expr><name pos:line="40" pos:column="25">hit<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">|=<pos:position pos:line="40" pos:column="31"/></operator> <call><name pos:line="40" pos:column="32">grep_submodule<pos:position pos:line="40" pos:column="46"/></name><argument_list pos:line="40" pos:column="46">(<argument><expr><name pos:line="40" pos:column="47">opt<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">NULL<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="58">ce<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">-&gt;<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="62">name<pos:position pos:line="40" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="68">ce<pos:position pos:line="40" pos:column="70"/></name><operator pos:line="40" pos:column="70">-&gt;<pos:position pos:line="40" pos:column="75"/></operator><name pos:line="40" pos:column="72">name<pos:position pos:line="40" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if></elseif> <else pos:line="41" pos:column="19">else <block pos:line="41" pos:column="24">{
			<continue pos:line="42" pos:column="25">continue;<pos:position pos:line="42" pos:column="34"/></continue>
		}<pos:position pos:line="43" pos:column="18"/></block></else></if>

		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">ce_stage<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">ce<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="34"/></condition><then pos:line="45" pos:column="34"> <block pos:line="45" pos:column="35">{
			<do pos:line="46" pos:column="25">do <block pos:line="46" pos:column="28">{
				<expr_stmt><expr><name pos:line="47" pos:column="33">nr<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">++<pos:position pos:line="47" pos:column="37"/></operator></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
			}<pos:position pos:line="48" pos:column="26"/></block> while <condition pos:line="48" pos:column="33">(<expr><name pos:line="48" pos:column="34">nr<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">&lt;<pos:position pos:line="48" pos:column="41"/></operator> <name pos:line="48" pos:column="39">active_nr<pos:position pos:line="48" pos:column="48"/></name> <operator pos:line="48" pos:column="49">&amp;&amp;<pos:position pos:line="48" pos:column="59"/></operator>
				 <operator pos:line="49" pos:column="34">!<pos:position pos:line="49" pos:column="35"/></operator><call><name pos:line="49" pos:column="35">strcmp<pos:position pos:line="49" pos:column="41"/></name><argument_list pos:line="49" pos:column="41">(<argument><expr><name><name pos:line="49" pos:column="42">ce<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">name<pos:position pos:line="49" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="52">active_cache<pos:position pos:line="49" pos:column="64"/></name><index pos:line="49" pos:column="64">[<expr><name pos:line="49" pos:column="65">nr<pos:position pos:line="49" pos:column="67"/></name></expr>]<pos:position pos:line="49" pos:column="68"/></index></name><operator pos:line="49" pos:column="68">-&gt;<pos:position pos:line="49" pos:column="73"/></operator><name pos:line="49" pos:column="70">name<pos:position pos:line="49" pos:column="74"/></name></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="76"/></condition>;<pos:position pos:line="49" pos:column="77"/></do>
			<expr_stmt><expr><name pos:line="50" pos:column="25">nr<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">--<pos:position pos:line="50" pos:column="29"/></operator></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt> <comment type="block" pos:line="50" pos:column="31">/* compensate for loop control */</comment>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">hit<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">&amp;&amp;<pos:position pos:line="52" pos:column="35"/></operator> <name><name pos:line="52" pos:column="28">opt<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">-&gt;<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="33">status_only<pos:position pos:line="52" pos:column="44"/></name></name></expr>)<pos:position pos:line="52" pos:column="45"/></condition><then pos:line="52" pos:column="45">
			<block type="pseudo"><break pos:line="53" pos:column="25">break;<pos:position pos:line="53" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">strbuf_release<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><operator pos:line="56" pos:column="24">&amp;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="25">name<pos:position pos:line="56" pos:column="29"/></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
	<return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">hit<pos:position pos:line="57" pos:column="19"/></name></expr>;<pos:position pos:line="57" pos:column="20"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

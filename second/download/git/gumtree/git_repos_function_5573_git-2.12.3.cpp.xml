<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5573_git-2.12.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_check_attr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">git_attr_check<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">check<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cnt<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">i<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">doubledash<pos:position pos:line="4" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="33">filei<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">is_bare_repository<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">setup_work_tree<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">git_config<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">git_default_config<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">argc<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">parse_options<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">argc<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">argv<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">prefix<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">check_attr_options<pos:position pos:line="11" pos:column="68"/></name></expr></argument>,
			     <argument><expr><name pos:line="12" pos:column="30">check_attr_usage<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">PARSE_OPT_KEEP_DASHDASH<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">read_cache<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">()<pos:position pos:line="14" pos:column="25"/></argument_list></call> <operator pos:line="14" pos:column="26">&lt;<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"invalid cache"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">cached_attrs<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">git_attr_set_direction<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">GIT_ATTR_INDEX<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">NULL<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">doubledash<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="22">-<pos:position pos:line="21" pos:column="23"/></operator><literal type="number" pos:line="21" pos:column="23">1<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">doubledash<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">&lt;<pos:position pos:line="22" pos:column="36"/></operator> <literal type="number" pos:line="22" pos:column="34">0<pos:position pos:line="22" pos:column="35"/></literal> <operator pos:line="22" pos:column="36">&amp;&amp;<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="39">i<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">&lt;<pos:position pos:line="22" pos:column="45"/></operator> <name pos:line="22" pos:column="43">argc<pos:position pos:line="22" pos:column="47"/></name></expr>;<pos:position pos:line="22" pos:column="48"/></condition> <incr><expr><name pos:line="22" pos:column="49">i<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">++<pos:position pos:line="22" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="53"/></control> <block pos:line="22" pos:column="54">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">strcmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name><name pos:line="23" pos:column="29">argv<pos:position pos:line="23" pos:column="33"/></name><index pos:line="23" pos:column="33">[<expr><name pos:line="23" pos:column="34">i<pos:position pos:line="23" pos:column="35"/></name></expr>]<pos:position pos:line="23" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="38">"--"<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">doubledash<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">i<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></for>

	<comment type="block" pos:line="27" pos:column="9">/* Process --all and/or attribute arguments: */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">all_attrs<pos:position pos:line="28" pos:column="22"/></name></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block pos:line="28" pos:column="24">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">doubledash<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">&gt;=<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="35">1<pos:position pos:line="29" pos:column="36"/></literal></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">error_with_usage<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><literal type="string" pos:line="30" pos:column="42">"Attributes and --all both specified"<pos:position pos:line="30" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="81"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="32" pos:column="17">cnt<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <literal type="number" pos:line="32" pos:column="23">0<pos:position pos:line="32" pos:column="24"/></literal></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">filei<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">doubledash<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">+<pos:position pos:line="33" pos:column="37"/></operator> <literal type="number" pos:line="33" pos:column="38">1<pos:position pos:line="33" pos:column="39"/></literal></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><name pos:line="34" pos:column="20">doubledash<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">==<pos:position pos:line="34" pos:column="33"/></operator> <literal type="number" pos:line="34" pos:column="34">0<pos:position pos:line="34" pos:column="35"/></literal></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36"> <block pos:line="34" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">error_with_usage<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><literal type="string" pos:line="35" pos:column="34">"No attribute specified"<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><name pos:line="36" pos:column="20">doubledash<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&lt;<pos:position pos:line="36" pos:column="35"/></operator> <literal type="number" pos:line="36" pos:column="33">0<pos:position pos:line="36" pos:column="34"/></literal></expr>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35"> <block pos:line="36" pos:column="36">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">argc<pos:position pos:line="37" pos:column="26"/></name></expr>)<pos:position pos:line="37" pos:column="27"/></condition><then pos:line="37" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">error_with_usage<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><literal type="string" pos:line="38" pos:column="42">"No attribute specified"<pos:position pos:line="38" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="68"/></expr_stmt></block></then></if>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">stdin_paths<pos:position pos:line="40" pos:column="32"/></name></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33"> <block pos:line="40" pos:column="34">{
			<comment type="block" pos:line="41" pos:column="25">/* Treat all arguments as attribute names. */</comment>
			<expr_stmt><expr><name pos:line="42" pos:column="25">cnt<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <name pos:line="42" pos:column="31">argc<pos:position pos:line="42" pos:column="35"/></name></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">filei<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">argc<pos:position pos:line="43" pos:column="37"/></name></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then> <else pos:line="44" pos:column="19">else <block pos:line="44" pos:column="24">{
			<comment type="block" pos:line="45" pos:column="25">/* Treat exactly one argument as an attribute name. */</comment>
			<expr_stmt><expr><name pos:line="46" pos:column="25">cnt<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <literal type="number" pos:line="46" pos:column="31">1<pos:position pos:line="46" pos:column="32"/></literal></expr>;<pos:position pos:line="46" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">filei<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <literal type="number" pos:line="47" pos:column="33">1<pos:position pos:line="47" pos:column="34"/></literal></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></else></if>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
		<expr_stmt><expr><name pos:line="50" pos:column="17">cnt<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">doubledash<pos:position pos:line="50" pos:column="33"/></name></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="51" pos:column="17">filei<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <name pos:line="51" pos:column="25">doubledash<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">+<pos:position pos:line="51" pos:column="37"/></operator> <literal type="number" pos:line="51" pos:column="38">1<pos:position pos:line="51" pos:column="39"/></literal></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="54" pos:column="9">/* Check file argument(s): */</comment>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">stdin_paths<pos:position pos:line="55" pos:column="24"/></name></expr>)<pos:position pos:line="55" pos:column="25"/></condition><then pos:line="55" pos:column="25"> <block pos:line="55" pos:column="26">{
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">filei<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">&lt;<pos:position pos:line="56" pos:column="31"/></operator> <name pos:line="56" pos:column="29">argc<pos:position pos:line="56" pos:column="33"/></name></expr>)<pos:position pos:line="56" pos:column="34"/></condition><then pos:line="56" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">error_with_usage<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><literal type="string" pos:line="57" pos:column="42">"Can't specify files with --stdin"<pos:position pos:line="57" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="78"/></expr_stmt></block></then></if>
	}<pos:position pos:line="58" pos:column="10"/></block></then> <else pos:line="58" pos:column="11">else <block pos:line="58" pos:column="16">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">filei<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">&gt;=<pos:position pos:line="59" pos:column="32"/></operator> <name pos:line="59" pos:column="30">argc<pos:position pos:line="59" pos:column="34"/></name></expr>)<pos:position pos:line="59" pos:column="35"/></condition><then pos:line="59" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">error_with_usage<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><literal type="string" pos:line="60" pos:column="42">"No file specified"<pos:position pos:line="60" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></else></if>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">all_attrs<pos:position pos:line="63" pos:column="22"/></name></expr>)<pos:position pos:line="63" pos:column="23"/></condition><then pos:line="63" pos:column="23"> <block pos:line="63" pos:column="24">{
		<expr_stmt><expr><name pos:line="64" pos:column="17">check<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">NULL<pos:position pos:line="64" pos:column="29"/></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></then> <else pos:line="65" pos:column="11">else <block pos:line="65" pos:column="16">{
		<expr_stmt><expr><name pos:line="66" pos:column="17">check<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <call><name pos:line="66" pos:column="25">xcalloc<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">cnt<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="38">sizeof<argument_list pos:line="66" pos:column="44">(<argument><expr><operator pos:line="66" pos:column="45">*<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="46">check<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
		<for pos:line="67" pos:column="17">for <control pos:line="67" pos:column="21">(<init><expr><name pos:line="67" pos:column="22">i<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <literal type="number" pos:line="67" pos:column="26">0<pos:position pos:line="67" pos:column="27"/></literal></expr>;<pos:position pos:line="67" pos:column="28"/></init> <condition><expr><name pos:line="67" pos:column="29">i<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">&lt;<pos:position pos:line="67" pos:column="35"/></operator> <name pos:line="67" pos:column="33">cnt<pos:position pos:line="67" pos:column="36"/></name></expr>;<pos:position pos:line="67" pos:column="37"/></condition> <incr><expr><name pos:line="67" pos:column="38">i<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">++<pos:position pos:line="67" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="42"/></control> <block pos:line="67" pos:column="43">{
			<decl_stmt><decl><type><specifier pos:line="68" pos:column="25">const<pos:position pos:line="68" pos:column="30"/></specifier> <name pos:line="68" pos:column="31">char<pos:position pos:line="68" pos:column="35"/></name> <modifier pos:line="68" pos:column="36">*<pos:position pos:line="68" pos:column="37"/></modifier></type><name pos:line="68" pos:column="37">name<pos:position pos:line="68" pos:column="41"/></name></decl>;<pos:position pos:line="68" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="69" pos:column="25">struct<pos:position pos:line="69" pos:column="31"/></name> <name pos:line="69" pos:column="32">git_attr<pos:position pos:line="69" pos:column="40"/></name></name> <modifier pos:line="69" pos:column="41">*<pos:position pos:line="69" pos:column="42"/></modifier></type><name pos:line="69" pos:column="42">a<pos:position pos:line="69" pos:column="43"/></name></decl>;<pos:position pos:line="69" pos:column="44"/></decl_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">name<pos:position pos:line="70" pos:column="29"/></name> <operator pos:line="70" pos:column="30">=<pos:position pos:line="70" pos:column="31"/></operator> <name><name pos:line="70" pos:column="32">argv<pos:position pos:line="70" pos:column="36"/></name><index pos:line="70" pos:column="36">[<expr><name pos:line="70" pos:column="37">i<pos:position pos:line="70" pos:column="38"/></name></expr>]<pos:position pos:line="70" pos:column="39"/></index></name></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">a<pos:position pos:line="71" pos:column="26"/></name> <operator pos:line="71" pos:column="27">=<pos:position pos:line="71" pos:column="28"/></operator> <call><name pos:line="71" pos:column="29">git_attr<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">name<pos:position pos:line="71" pos:column="42"/></name></expr></argument>)<pos:position pos:line="71" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt>
			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><operator pos:line="72" pos:column="29">!<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="30">a<pos:position pos:line="72" pos:column="31"/></name></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32">
				<block type="pseudo"><return pos:line="73" pos:column="33">return <expr><call><name pos:line="73" pos:column="40">error<pos:position pos:line="73" pos:column="45"/></name><argument_list pos:line="73" pos:column="45">(<argument><expr><literal type="string" pos:line="73" pos:column="46">"%s: not a valid attribute name"<pos:position pos:line="73" pos:column="78"/></literal></expr></argument>,
					<argument><expr><name pos:line="74" pos:column="41">name<pos:position pos:line="74" pos:column="45"/></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="47"/></return></block></then></if>
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">check<pos:position pos:line="75" pos:column="30"/></name><index pos:line="75" pos:column="30">[<expr><name pos:line="75" pos:column="31">i<pos:position pos:line="75" pos:column="32"/></name></expr>]<pos:position pos:line="75" pos:column="33"/></index></name><operator pos:line="75" pos:column="33">.<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="34">attr<pos:position pos:line="75" pos:column="38"/></name> <operator pos:line="75" pos:column="39">=<pos:position pos:line="75" pos:column="40"/></operator> <name pos:line="75" pos:column="41">a<pos:position pos:line="75" pos:column="42"/></name></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></for>
	}<pos:position pos:line="77" pos:column="10"/></block></else></if>

	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">stdin_paths<pos:position pos:line="79" pos:column="24"/></name></expr>)<pos:position pos:line="79" pos:column="25"/></condition><then pos:line="79" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="17">check_attr_stdin_paths<pos:position pos:line="80" pos:column="39"/></name><argument_list pos:line="80" pos:column="39">(<argument><expr><name pos:line="80" pos:column="40">prefix<pos:position pos:line="80" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="48">cnt<pos:position pos:line="80" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="53">check<pos:position pos:line="80" pos:column="58"/></name></expr></argument>)<pos:position pos:line="80" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="60"/></expr_stmt></block></then>
	<else pos:line="81" pos:column="9">else <block pos:line="81" pos:column="14">{
		<for pos:line="82" pos:column="17">for <control pos:line="82" pos:column="21">(<init><expr><name pos:line="82" pos:column="22">i<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">=<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">filei<pos:position pos:line="82" pos:column="31"/></name></expr>;<pos:position pos:line="82" pos:column="32"/></init> <condition><expr><name pos:line="82" pos:column="33">i<pos:position pos:line="82" pos:column="34"/></name> <operator pos:line="82" pos:column="35">&lt;<pos:position pos:line="82" pos:column="39"/></operator> <name pos:line="82" pos:column="37">argc<pos:position pos:line="82" pos:column="41"/></name></expr>;<pos:position pos:line="82" pos:column="42"/></condition> <incr><expr><name pos:line="82" pos:column="43">i<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">++<pos:position pos:line="82" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="47"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="25">check_attr<pos:position pos:line="83" pos:column="35"/></name><argument_list pos:line="83" pos:column="35">(<argument><expr><name pos:line="83" pos:column="36">prefix<pos:position pos:line="83" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="44">cnt<pos:position pos:line="83" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="49">check<pos:position pos:line="83" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="56">argv<pos:position pos:line="83" pos:column="60"/></name><index pos:line="83" pos:column="60">[<expr><name pos:line="83" pos:column="61">i<pos:position pos:line="83" pos:column="62"/></name></expr>]<pos:position pos:line="83" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="65"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">maybe_flush_or_die<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">(<argument><expr><name pos:line="84" pos:column="36">stdout<pos:position pos:line="84" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="44">"attribute to stdout"<pos:position pos:line="84" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></else></if>
	<return pos:line="86" pos:column="9">return <expr><literal type="number" pos:line="86" pos:column="16">0<pos:position pos:line="86" pos:column="17"/></literal></expr>;<pos:position pos:line="86" pos:column="18"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

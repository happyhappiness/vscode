<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1973.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">connect_work_tree_and_git_dir<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">work_tree<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">git_dir<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">file_name<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">STRBUF_INIT<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">rel_path<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">STRBUF_INIT<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">real_work_tree<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><call><name pos:line="5" pos:column="38">xstrdup<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><call><name pos:line="5" pos:column="46">real_path<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name pos:line="5" pos:column="56">work_tree<pos:position pos:line="5" pos:column="65"/></name></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">fp<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* Update gitfile */</comment>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strbuf_addf<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">file_name<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"%s/.git"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">work_tree<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">fp<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">fopen<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name><name pos:line="10" pos:column="20">file_name<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">buf<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"w"<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">fp<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><call><name pos:line="12" pos:column="21">_<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"Could not create git link %s"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="56">file_name<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">.<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="66">buf<pos:position pos:line="12" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">fprintf<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">fp<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="21">"gitdir: %s\n"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="37">relative_path<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">git_dir<pos:position pos:line="13" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="60">real_work_tree<pos:position pos:line="13" pos:column="74"/></name></expr></argument>,
						  <argument><expr><operator pos:line="14" pos:column="51">&amp;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="52">rel_path<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fclose<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">fp<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

	<comment type="block" pos:line="17" pos:column="9">/* Update core.worktree setting */</comment>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">strbuf_reset<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><operator pos:line="18" pos:column="22">&amp;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="23">file_name<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_addf<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="22">file_name<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"%s/config"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">git_dir<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">git_config_set_in_file<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name><name pos:line="20" pos:column="36">file_name<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">buf<pos:position pos:line="20" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="51">"core.worktree"<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>,
				   <argument><expr><call><name pos:line="21" pos:column="36">relative_path<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">(<argument><expr><name pos:line="21" pos:column="50">real_work_tree<pos:position pos:line="21" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">git_dir<pos:position pos:line="21" pos:column="73"/></name></expr></argument>,
						 <argument><expr><operator pos:line="22" pos:column="50">&amp;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="51">rel_path<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="62"/></condition><then pos:line="22" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><call><name pos:line="23" pos:column="21">_<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><literal type="string" pos:line="23" pos:column="23">"Could not set core.worktree in %s"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr></argument>,
		    <argument><expr><name><name pos:line="24" pos:column="21">file_name<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">.<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">buf<pos:position pos:line="24" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">strbuf_release<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><operator pos:line="26" pos:column="24">&amp;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="25">file_name<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">strbuf_release<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">&amp;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="25">rel_path<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">free<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">void<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></operator><operator pos:line="28" pos:column="21">)<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">real_work_tree<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

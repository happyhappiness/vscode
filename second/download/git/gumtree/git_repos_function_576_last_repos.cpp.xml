<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_576_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">grab_values<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">atom_value<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">val<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">deref<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="60">struct<pos:position pos:line="1" pos:column="66"/></name> <name pos:line="1" pos:column="67">object<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">obj<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="80">void<pos:position pos:line="1" pos:column="84"/></name> <modifier pos:line="1" pos:column="85">*<pos:position pos:line="1" pos:column="86"/></modifier></type><name pos:line="1" pos:column="86">buf<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="91">unsigned<pos:position pos:line="1" pos:column="99"/></name> <name pos:line="1" pos:column="100">long<pos:position pos:line="1" pos:column="104"/></name></type> <name pos:line="1" pos:column="105">sz<pos:position pos:line="1" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="108"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">grab_common_values<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">val<pos:position pos:line="3" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="33">deref<pos:position pos:line="3" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="40">obj<pos:position pos:line="3" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="45">buf<pos:position pos:line="3" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="50">sz<pos:position pos:line="3" pos:column="52"/></name></expr></argument>)<pos:position pos:line="3" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="54"/></expr_stmt>
	<switch pos:line="4" pos:column="9">switch <condition pos:line="4" pos:column="16">(<expr><name><name pos:line="4" pos:column="17">obj<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">type<pos:position pos:line="4" pos:column="26"/></name></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition> <block pos:line="4" pos:column="28">{
	<case pos:line="5" pos:column="9">case <expr><name pos:line="5" pos:column="14">OBJ_TAG<pos:position pos:line="5" pos:column="21"/></name></expr>:<pos:position pos:line="5" pos:column="22"/></case>
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">grab_tag_values<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">val<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">deref<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">obj<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">buf<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">sz<pos:position pos:line="6" pos:column="57"/></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">grab_sub_body_contents<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">val<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">deref<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">obj<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="57">buf<pos:position pos:line="7" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="62">sz<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">grab_person<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><literal type="string" pos:line="8" pos:column="29">"tagger"<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">val<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">deref<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">obj<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">buf<pos:position pos:line="8" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="61">sz<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
		<break pos:line="9" pos:column="17">break;<pos:position pos:line="9" pos:column="23"/></break>
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">OBJ_COMMIT<pos:position pos:line="10" pos:column="24"/></name></expr>:<pos:position pos:line="10" pos:column="25"/></case>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">grab_commit_values<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">val<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">deref<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">obj<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">buf<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">sz<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">grab_sub_body_contents<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">val<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">deref<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="52">obj<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">buf<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">sz<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">grab_person<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"author"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">val<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">deref<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">obj<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">buf<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">sz<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">grab_person<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="string" pos:line="14" pos:column="29">"committer"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">val<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">deref<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="54">obj<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">buf<pos:position pos:line="14" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="64">sz<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
		<break pos:line="15" pos:column="17">break;<pos:position pos:line="15" pos:column="23"/></break>
	<case pos:line="16" pos:column="9">case <expr><name pos:line="16" pos:column="14">OBJ_TREE<pos:position pos:line="16" pos:column="22"/></name></expr>:<pos:position pos:line="16" pos:column="23"/></case>
		<comment type="block" pos:line="17" pos:column="17">/* grab_tree_values(val, deref, obj, buf, sz); */</comment>
		<break pos:line="18" pos:column="17">break;<pos:position pos:line="18" pos:column="23"/></break>
	<case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">OBJ_BLOB<pos:position pos:line="19" pos:column="22"/></name></expr>:<pos:position pos:line="19" pos:column="23"/></case>
		<comment type="block" pos:line="20" pos:column="17">/* grab_blob_values(val, deref, obj, buf, sz); */</comment>
		<break pos:line="21" pos:column="17">break;<pos:position pos:line="21" pos:column="23"/></break>
	<default pos:line="22" pos:column="9">default:<pos:position pos:line="22" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="string" pos:line="23" pos:column="21">"Eh?  Object of type %d?"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="48">obj<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">type<pos:position pos:line="23" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></switch>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2089_git-2.12.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">off_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">find_pack_entry_one<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">unsigned<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">sha1<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">packed_git<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">p<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">uint32_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">level1_ofs<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name><name pos:line="4" pos:column="38">p<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">index_data<pos:position pos:line="4" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">unsigned<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">index<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><name><name pos:line="5" pos:column="38">p<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">index_data<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">hi<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">lo<pos:position pos:line="6" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="26">stride<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">int<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">use_lookup<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><operator pos:line="7" pos:column="33">-<pos:position pos:line="7" pos:column="34"/></operator><literal type="number" pos:line="7" pos:column="34">1<pos:position pos:line="7" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">int<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">debug_lookup<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><operator pos:line="8" pos:column="35">-<pos:position pos:line="8" pos:column="36"/></operator><literal type="number" pos:line="8" pos:column="36">1<pos:position pos:line="8" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">debug_lookup<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">&lt;<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">debug_lookup<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="32">!<pos:position pos:line="11" pos:column="33"/></operator><operator pos:line="11" pos:column="33">!<pos:position pos:line="11" pos:column="34"/></operator><call><name pos:line="11" pos:column="34">getenv<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><literal type="string" pos:line="11" pos:column="41">"GIT_DEBUG_LOOKUP"<pos:position pos:line="11" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">index<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">open_pack_index<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">p<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="40"/></condition><then pos:line="14" pos:column="40">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">level1_ofs<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name><name pos:line="16" pos:column="30">p<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">index_data<pos:position pos:line="16" pos:column="43"/></name></name></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">index<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name><name pos:line="17" pos:column="25">p<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">index_data<pos:position pos:line="17" pos:column="38"/></name></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">p<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">index_version<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">&gt;<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr>)<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <block pos:line="19" pos:column="35">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">level1_ofs<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">+=<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">2<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">index<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">+=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">8<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="23" pos:column="9">index<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">+=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">4<pos:position pos:line="23" pos:column="19"/></literal> <operator pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">256<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">hi<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">ntohl<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name><name pos:line="24" pos:column="20">level1_ofs<pos:position pos:line="24" pos:column="30"/></name><index pos:line="24" pos:column="30">[<expr><operator pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">sha1<pos:position pos:line="24" pos:column="36"/></name></expr>]<pos:position pos:line="24" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">lo<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><ternary><condition><expr><operator pos:line="25" pos:column="15">(<pos:position pos:line="25" pos:column="16"/></operator><operator pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">sha1<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="25">0x0<pos:position pos:line="25" pos:column="28"/></literal><operator pos:line="25" pos:column="28">)<pos:position pos:line="25" pos:column="29"/></operator></expr> ?<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <expr><literal type="number" pos:line="25" pos:column="32">0<pos:position pos:line="25" pos:column="33"/></literal></expr> <pos:position pos:line="25" pos:column="34"/></then><else pos:line="25" pos:column="34">: <expr><call><name pos:line="25" pos:column="36">ntohl<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name><name pos:line="25" pos:column="42">level1_ofs<pos:position pos:line="25" pos:column="52"/></name><index pos:line="25" pos:column="52">[<expr><operator pos:line="25" pos:column="53">*<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">sha1<pos:position pos:line="25" pos:column="58"/></name> <operator pos:line="25" pos:column="59">-<pos:position pos:line="25" pos:column="60"/></operator> <literal type="number" pos:line="25" pos:column="61">1<pos:position pos:line="25" pos:column="62"/></literal></expr>]<pos:position pos:line="25" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr></else></ternary><operator pos:line="25" pos:column="64">)<pos:position pos:line="25" pos:column="65"/></operator></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">p<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">index_version<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">&gt;<pos:position pos:line="26" pos:column="34"/></operator> <literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">stride<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">20<pos:position pos:line="27" pos:column="28"/></literal></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
		<expr_stmt><expr><name pos:line="29" pos:column="17">stride<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">24<pos:position pos:line="29" pos:column="28"/></literal></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">index<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">+=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="26">4<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></else></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">debug_lookup<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">printf<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="string" pos:line="34" pos:column="24">"%02x%02x%02x... lo %u hi %u nr %"<pos:position pos:line="34" pos:column="58"/></literal><name pos:line="34" pos:column="58">PRIu32<pos:position pos:line="34" pos:column="64"/></name><literal type="string" pos:line="34" pos:column="64">"\n"<pos:position pos:line="34" pos:column="68"/></literal></expr></argument>,
		       <argument><expr><name><name pos:line="35" pos:column="24">sha1<pos:position pos:line="35" pos:column="28"/></name><index pos:line="35" pos:column="28">[<expr><literal type="number" pos:line="35" pos:column="29">0<pos:position pos:line="35" pos:column="30"/></literal></expr>]<pos:position pos:line="35" pos:column="31"/></index></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="33">sha1<pos:position pos:line="35" pos:column="37"/></name><index pos:line="35" pos:column="37">[<expr><literal type="number" pos:line="35" pos:column="38">1<pos:position pos:line="35" pos:column="39"/></literal></expr>]<pos:position pos:line="35" pos:column="40"/></index></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="42">sha1<pos:position pos:line="35" pos:column="46"/></name><index pos:line="35" pos:column="46">[<expr><literal type="number" pos:line="35" pos:column="47">2<pos:position pos:line="35" pos:column="48"/></literal></expr>]<pos:position pos:line="35" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="51">lo<pos:position pos:line="35" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="55">hi<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="59">p<pos:position pos:line="35" pos:column="60"/></name><operator pos:line="35" pos:column="60">-&gt;<pos:position pos:line="35" pos:column="65"/></operator><name pos:line="35" pos:column="62">num_objects<pos:position pos:line="35" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">use_lookup<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">&lt;<pos:position pos:line="37" pos:column="28"/></operator> <literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr>)<pos:position pos:line="37" pos:column="28"/></condition><then pos:line="37" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">use_lookup<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <operator pos:line="38" pos:column="30">!<pos:position pos:line="38" pos:column="31"/></operator><operator pos:line="38" pos:column="31">!<pos:position pos:line="38" pos:column="32"/></operator><call><name pos:line="38" pos:column="32">getenv<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><literal type="string" pos:line="38" pos:column="39">"GIT_USE_LOOKUP"<pos:position pos:line="38" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt></block></then></if>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">use_lookup<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24"> <block pos:line="39" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">int<pos:position pos:line="40" pos:column="20"/></name></type> <name pos:line="40" pos:column="21">pos<pos:position pos:line="40" pos:column="24"/></name> <init pos:line="40" pos:column="25">= <expr><call><name pos:line="40" pos:column="27">sha1_entry_pos<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><name pos:line="40" pos:column="42">index<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">stride<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="57">0<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>,
					 <argument><expr><name pos:line="41" pos:column="42">lo<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">hi<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="50">p<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">num_objects<pos:position pos:line="41" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="66">sha1<pos:position pos:line="41" pos:column="70"/></name></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="72"/></decl_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">pos<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">&lt;<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="27">0<pos:position pos:line="42" pos:column="28"/></literal></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29">
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><literal type="number" pos:line="43" pos:column="32">0<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></return></block></then></if>
		<return pos:line="44" pos:column="17">return <expr><call><name pos:line="44" pos:column="24">nth_packed_object_offset<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><name pos:line="44" pos:column="49">p<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="52">pos<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<do pos:line="47" pos:column="9">do <block pos:line="47" pos:column="12">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">unsigned<pos:position pos:line="48" pos:column="25"/></name></type> <name pos:line="48" pos:column="26">mi<pos:position pos:line="48" pos:column="28"/></name> <init pos:line="48" pos:column="29">= <expr><operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">lo<pos:position pos:line="48" pos:column="34"/></name> <operator pos:line="48" pos:column="35">+<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">hi<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">)<pos:position pos:line="48" pos:column="40"/></operator> <operator pos:line="48" pos:column="41">/<pos:position pos:line="48" pos:column="42"/></operator> <literal type="number" pos:line="48" pos:column="43">2<pos:position pos:line="48" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">int<pos:position pos:line="49" pos:column="20"/></name></type> <name pos:line="49" pos:column="21">cmp<pos:position pos:line="49" pos:column="24"/></name> <init pos:line="49" pos:column="25">= <expr><call><name pos:line="49" pos:column="27">hashcmp<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">index<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">+<pos:position pos:line="49" pos:column="42"/></operator> <name pos:line="49" pos:column="43">mi<pos:position pos:line="49" pos:column="45"/></name> <operator pos:line="49" pos:column="46">*<pos:position pos:line="49" pos:column="47"/></operator> <name pos:line="49" pos:column="48">stride<pos:position pos:line="49" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="56">sha1<pos:position pos:line="49" pos:column="60"/></name></expr></argument>)<pos:position pos:line="49" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="62"/></decl_stmt>

		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">debug_lookup<pos:position pos:line="51" pos:column="33"/></name></expr>)<pos:position pos:line="51" pos:column="34"/></condition><then pos:line="51" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">printf<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><literal type="string" pos:line="52" pos:column="32">"lo %u hi %u rg %u mi %u\n"<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>,
			       <argument><expr><name pos:line="53" pos:column="32">lo<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="36">hi<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">hi<pos:position pos:line="53" pos:column="42"/></name> <operator pos:line="53" pos:column="43">-<pos:position pos:line="53" pos:column="44"/></operator> <name pos:line="53" pos:column="45">lo<pos:position pos:line="53" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="49">mi<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt></block></then></if>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><operator pos:line="54" pos:column="21">!<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">cmp<pos:position pos:line="54" pos:column="25"/></name></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26">
			<block type="pseudo"><return pos:line="55" pos:column="25">return <expr><call><name pos:line="55" pos:column="32">nth_packed_object_offset<pos:position pos:line="55" pos:column="56"/></name><argument_list pos:line="55" pos:column="56">(<argument><expr><name pos:line="55" pos:column="57">p<pos:position pos:line="55" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="60">mi<pos:position pos:line="55" pos:column="62"/></name></expr></argument>)<pos:position pos:line="55" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="64"/></return></block></then></if>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">cmp<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">&gt;<pos:position pos:line="56" pos:column="29"/></operator> <literal type="number" pos:line="56" pos:column="27">0<pos:position pos:line="56" pos:column="28"/></literal></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="25">hi<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">=<pos:position pos:line="57" pos:column="29"/></operator> <name pos:line="57" pos:column="30">mi<pos:position pos:line="57" pos:column="32"/></name></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt></block></then>
		<else pos:line="58" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="25">lo<pos:position pos:line="59" pos:column="27"/></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <name pos:line="59" pos:column="30">mi<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">+<pos:position pos:line="59" pos:column="33"/></operator><literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt></block></else></if>
	}<pos:position pos:line="60" pos:column="10"/></block> while <condition pos:line="60" pos:column="17">(<expr><name pos:line="60" pos:column="18">lo<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">&lt;<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="23">hi<pos:position pos:line="60" pos:column="25"/></name></expr>)<pos:position pos:line="60" pos:column="26"/></condition>;<pos:position pos:line="60" pos:column="27"/></do>
	<return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

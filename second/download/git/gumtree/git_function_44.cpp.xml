<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">run_pager<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">grep_opt<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">opt<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">path_list<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name><name pos:line="3" pos:column="41">opt<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">-&gt;<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="46">output_priv<pos:position pos:line="3" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">argv<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">xmalloc<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><sizeof pos:line="4" pos:column="37">sizeof<argument_list pos:line="4" pos:column="43">(<argument><expr><specifier pos:line="4" pos:column="44">const<pos:position pos:line="4" pos:column="49"/></specifier> <name pos:line="4" pos:column="50">char<pos:position pos:line="4" pos:column="54"/></name> <operator pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></sizeof> <operator pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></operator> <operator pos:line="4" pos:column="60">(<pos:position pos:line="4" pos:column="61"/></operator><name><name pos:line="4" pos:column="61">path_list<pos:position pos:line="4" pos:column="70"/></name><operator pos:line="4" pos:column="70">-&gt;<pos:position pos:line="4" pos:column="75"/></operator><name pos:line="4" pos:column="72">nr<pos:position pos:line="4" pos:column="74"/></name></name> <operator pos:line="4" pos:column="75">+<pos:position pos:line="4" pos:column="76"/></operator> <literal type="number" pos:line="4" pos:column="77">1<pos:position pos:line="4" pos:column="78"/></literal><operator pos:line="4" pos:column="78">)<pos:position pos:line="4" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="81"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">status<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">path_list<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">nr<pos:position pos:line="7" pos:column="38"/></name></name></expr>;<pos:position pos:line="7" pos:column="39"/></condition> <incr><expr><name pos:line="7" pos:column="40">i<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">++<pos:position pos:line="7" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="44"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="17">argv<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">i<pos:position pos:line="8" pos:column="23"/></name></expr>]<pos:position pos:line="8" pos:column="24"/></index></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <name><name pos:line="8" pos:column="27">path_list<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">items<pos:position pos:line="8" pos:column="43"/></name><index pos:line="8" pos:column="43">[<expr><name pos:line="8" pos:column="44">i<pos:position pos:line="8" pos:column="45"/></name></expr>]<pos:position pos:line="8" pos:column="46"/></index></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">string<pos:position pos:line="8" pos:column="53"/></name></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">argv<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name><name pos:line="9" pos:column="14">path_list<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">nr<pos:position pos:line="9" pos:column="27"/></name></name></expr>]<pos:position pos:line="9" pos:column="28"/></index></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">prefix<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">&amp;&amp;<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="23">chdir<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">prefix<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><call><name pos:line="12" pos:column="21">_<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"Failed to chdir: %s"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">prefix<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">run_command_v_opt<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">argv<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">RUN_USING_SHELL<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">exit<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">status<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">free<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">argv<pos:position pos:line="16" pos:column="18"/></name></expr></argument>)<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1975_git-2.10.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">get_common_dir_noenv<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">strbuf<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">sb<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">gitdir<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">data<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">STRBUF_INIT<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">path<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">STRBUF_INIT<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_addf<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="22">path<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="28">"%s/commondir"<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">gitdir<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">file_exists<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name><name pos:line="8" pos:column="25">path<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">.<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">buf<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35"> <block pos:line="8" pos:column="36">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">strbuf_read_file<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><operator pos:line="9" pos:column="38">&amp;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="39">data<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="45">path<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">.<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">buf<pos:position pos:line="9" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="55">0<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call> <operator pos:line="9" pos:column="58">&lt;=<pos:position pos:line="9" pos:column="63"/></operator> <literal type="number" pos:line="9" pos:column="61">0<pos:position pos:line="9" pos:column="62"/></literal></expr>)<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die_errno<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><call><name pos:line="10" pos:column="35">_<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><literal type="string" pos:line="10" pos:column="37">"failed to read %s"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="59">path<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">.<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="64">buf<pos:position pos:line="10" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt></block></then></if>
		<while pos:line="11" pos:column="17">while <condition pos:line="11" pos:column="23">(<expr><name><name pos:line="11" pos:column="24">data<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">len<pos:position pos:line="11" pos:column="32"/></name></name> <operator pos:line="11" pos:column="33">&amp;&amp;<pos:position pos:line="11" pos:column="43"/></operator> <operator pos:line="11" pos:column="36">(<pos:position pos:line="11" pos:column="37"/></operator><name><name pos:line="11" pos:column="37">data<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">buf<pos:position pos:line="11" pos:column="45"/></name><index pos:line="11" pos:column="45">[<expr><name><name pos:line="11" pos:column="46">data<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">.<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="51">len<pos:position pos:line="11" pos:column="54"/></name></name> <operator pos:line="11" pos:column="55">-<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="57">1<pos:position pos:line="11" pos:column="58"/></literal></expr>]<pos:position pos:line="11" pos:column="59"/></index></name> <operator pos:line="11" pos:column="60">==<pos:position pos:line="11" pos:column="62"/></operator> <literal type="char" pos:line="11" pos:column="63">'\n'<pos:position pos:line="11" pos:column="67"/></literal> <operator pos:line="11" pos:column="68">||<pos:position pos:line="11" pos:column="70"/></operator>
				    <name><name pos:line="12" pos:column="37">data<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">buf<pos:position pos:line="12" pos:column="45"/></name><index pos:line="12" pos:column="45">[<expr><name><name pos:line="12" pos:column="46">data<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">len<pos:position pos:line="12" pos:column="54"/></name></name> <operator pos:line="12" pos:column="55">-<pos:position pos:line="12" pos:column="56"/></operator> <literal type="number" pos:line="12" pos:column="57">1<pos:position pos:line="12" pos:column="58"/></literal></expr>]<pos:position pos:line="12" pos:column="59"/></index></name> <operator pos:line="12" pos:column="60">==<pos:position pos:line="12" pos:column="62"/></operator> <literal type="char" pos:line="12" pos:column="63">'\r'<pos:position pos:line="12" pos:column="67"/></literal><operator pos:line="12" pos:column="67">)<pos:position pos:line="12" pos:column="68"/></operator></expr>)<pos:position pos:line="12" pos:column="69"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="25">data<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">len<pos:position pos:line="13" pos:column="33"/></name></name><operator pos:line="13" pos:column="33">--<pos:position pos:line="13" pos:column="35"/></operator></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt></block></while>
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">data<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">buf<pos:position pos:line="14" pos:column="25"/></name><index pos:line="14" pos:column="25">[<expr><name><name pos:line="14" pos:column="26">data<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">.<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">len<pos:position pos:line="14" pos:column="34"/></name></name></expr>]<pos:position pos:line="14" pos:column="35"/></index></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <literal type="char" pos:line="14" pos:column="38">'\0'<pos:position pos:line="14" pos:column="42"/></literal></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_reset<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="31">path<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">is_absolute_path<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name><name pos:line="16" pos:column="39">data<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">.<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">buf<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">strbuf_addf<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="38">path<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="44">"%s/"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">gitdir<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_addbuf<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="32">path<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="38">&amp;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="39">data<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_addstr<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">sb<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="35">real_path<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name><name pos:line="19" pos:column="45">path<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">buf<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">ret<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">strbuf_addstr<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">sb<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">gitdir<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strbuf_release<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">data<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_release<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="25">path<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
	<return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">ret<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

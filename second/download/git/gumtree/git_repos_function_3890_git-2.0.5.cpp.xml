<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3890_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_checkout_index<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">argc<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">argv<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">prefix<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">newfd<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">-<pos:position pos:line="4" pos:column="22"/></operator><literal type="number" pos:line="4" pos:column="22">1<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">all<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">read_from_stdin<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">prefix_length<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">force<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="24">quiet<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="35">not_new<pos:position pos:line="8" pos:column="42"/></name> <init pos:line="8" pos:column="43">= <expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">option<pos:position pos:line="9" pos:column="22"/></name></name></type> <name><name pos:line="9" pos:column="23">builtin_checkout_index_options<pos:position pos:line="9" pos:column="53"/></name><index pos:line="9" pos:column="53">[]<pos:position pos:line="9" pos:column="55"/></index></name> <init pos:line="9" pos:column="56">= <expr><block pos:line="9" pos:column="58">{
		<expr><call><name pos:line="10" pos:column="17">OPT_BOOL<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="char" pos:line="10" pos:column="26">'a'<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"all"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="38">&amp;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="39">all<pos:position pos:line="10" pos:column="42"/></name></expr></argument>,
			<argument><expr><call><name pos:line="11" pos:column="25">N_<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><literal type="string" pos:line="11" pos:column="28">"check out all files in the index"<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT__FORCE<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="29">force<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="36">N_<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><literal type="string" pos:line="12" pos:column="39">"force overwrite of existing files"<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT__QUIET<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">quiet<pos:position pos:line="13" pos:column="34"/></name></expr></argument>,
			<argument><expr><call><name pos:line="14" pos:column="25">N_<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="string" pos:line="14" pos:column="28">"no warning for existing files and files not in index"<pos:position pos:line="14" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_BOOL<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="char" pos:line="15" pos:column="26">'n'<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"no-create"<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="44">&amp;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="45">not_new<pos:position pos:line="15" pos:column="52"/></name></expr></argument>,
			<argument><expr><call><name pos:line="16" pos:column="25">N_<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><literal type="string" pos:line="16" pos:column="28">"don't checkout new files"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>,
		<expr><block pos:line="17" pos:column="17">{ <expr><name pos:line="17" pos:column="19">OPTION_CALLBACK<pos:position pos:line="17" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="17" pos:column="36">'u'<pos:position pos:line="17" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="17" pos:column="41">"index"<pos:position pos:line="17" pos:column="48"/></literal></expr>, <expr><operator pos:line="17" pos:column="50">&amp;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="51">newfd<pos:position pos:line="17" pos:column="56"/></name></expr>, <expr><name pos:line="17" pos:column="58">NULL<pos:position pos:line="17" pos:column="62"/></name></expr>,
			<expr><call><name pos:line="18" pos:column="25">N_<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="string" pos:line="18" pos:column="28">"update stat information in the index file"<pos:position pos:line="18" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr>,
			<expr><name pos:line="19" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="19" pos:column="40"/></name></expr>, <expr><name pos:line="19" pos:column="42">option_parse_u<pos:position pos:line="19" pos:column="56"/></name></expr> }<pos:position pos:line="19" pos:column="58"/></block></expr>,
		<expr><block pos:line="20" pos:column="17">{ <expr><name pos:line="20" pos:column="19">OPTION_CALLBACK<pos:position pos:line="20" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="20" pos:column="36">'z'<pos:position pos:line="20" pos:column="39"/></literal></expr>, <expr><name pos:line="20" pos:column="41">NULL<pos:position pos:line="20" pos:column="45"/></name></expr>, <expr><name pos:line="20" pos:column="47">NULL<pos:position pos:line="20" pos:column="51"/></name></expr>, <expr><name pos:line="20" pos:column="53">NULL<pos:position pos:line="20" pos:column="57"/></name></expr>,
			<expr><call><name pos:line="21" pos:column="25">N_<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="string" pos:line="21" pos:column="28">"paths are separated with NUL character"<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>,
			<expr><name pos:line="22" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="22" pos:column="40"/></name></expr>, <expr><name pos:line="22" pos:column="42">option_parse_z<pos:position pos:line="22" pos:column="56"/></name></expr> }<pos:position pos:line="22" pos:column="58"/></block></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT_BOOL<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="29">"stdin"<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="38">&amp;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="39">read_from_stdin<pos:position pos:line="23" pos:column="54"/></name></expr></argument>,
			<argument><expr><call><name pos:line="24" pos:column="25">N_<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"read list of paths from the standard input"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="25" pos:column="17">OPT_BOOL<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="number" pos:line="25" pos:column="26">0<pos:position pos:line="25" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="29">"temp"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="37">&amp;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="38">to_tempfile<pos:position pos:line="25" pos:column="49"/></name></expr></argument>,
			<argument><expr><call><name pos:line="26" pos:column="25">N_<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><literal type="string" pos:line="26" pos:column="28">"write the content to temporary files"<pos:position pos:line="26" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_CALLBACK<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"prefix"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">NULL<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="49">N_<pos:position pos:line="27" pos:column="51"/></name><argument_list pos:line="27" pos:column="51">(<argument><expr><literal type="string" pos:line="27" pos:column="52">"string"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="28" pos:column="25">N_<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="string" pos:line="28" pos:column="28">"when creating files, prepend &lt;string&gt;"<pos:position pos:line="28" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="29" pos:column="25">option_parse_prefix<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>,
		<expr><call><name pos:line="30" pos:column="17">OPT_CALLBACK<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="33">"stage"<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">NULL<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">NULL<pos:position pos:line="30" pos:column="52"/></name></expr></argument>,
			<argument><expr><call><name pos:line="31" pos:column="25">N_<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><literal type="string" pos:line="31" pos:column="28">"copy out the files from named stage"<pos:position pos:line="31" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="32" pos:column="25">option_parse_stage<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>,
		<macro><name pos:line="33" pos:column="17">OPT_END<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">()<pos:position pos:line="33" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="34" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="34" pos:column="11"/></decl_stmt>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">argc<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">==<pos:position pos:line="36" pos:column="20"/></operator> <literal type="number" pos:line="36" pos:column="21">2<pos:position pos:line="36" pos:column="22"/></literal> <operator pos:line="36" pos:column="23">&amp;&amp;<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="26">!<pos:position pos:line="36" pos:column="27"/></operator><call><name pos:line="36" pos:column="27">strcmp<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name><name pos:line="36" pos:column="34">argv<pos:position pos:line="36" pos:column="38"/></name><index pos:line="36" pos:column="38">[<expr><literal type="number" pos:line="36" pos:column="39">1<pos:position pos:line="36" pos:column="40"/></literal></expr>]<pos:position pos:line="36" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="43">"-h"<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">usage_with_options<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">builtin_checkout_index_usage<pos:position pos:line="37" pos:column="64"/></name></expr></argument>,
				   <argument><expr><name pos:line="38" pos:column="36">builtin_checkout_index_options<pos:position pos:line="38" pos:column="66"/></name></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="68"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">git_config<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">git_default_config<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">NULL<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">state<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">base_dir<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="string" pos:line="40" pos:column="26">""<pos:position pos:line="40" pos:column="28"/></literal></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">prefix_length<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="41" pos:column="25">prefix<pos:position pos:line="41" pos:column="31"/></name></expr> ?<pos:position pos:line="41" pos:column="33"/></condition><then pos:line="41" pos:column="33"> <expr><call><name pos:line="41" pos:column="34">strlen<pos:position pos:line="41" pos:column="40"/></name><argument_list pos:line="41" pos:column="40">(<argument><expr><name pos:line="41" pos:column="41">prefix<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr> <pos:position pos:line="41" pos:column="49"/></then><else pos:line="41" pos:column="49">: <expr><literal type="number" pos:line="41" pos:column="51">0<pos:position pos:line="41" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">read_cache<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">()<pos:position pos:line="43" pos:column="25"/></argument_list></call> <operator pos:line="43" pos:column="26">&lt;<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="28">0<pos:position pos:line="43" pos:column="29"/></literal></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30"> <block pos:line="43" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">die<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><literal type="string" pos:line="44" pos:column="21">"invalid cache"<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">argc<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">parse_options<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">argc<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">argv<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">prefix<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="50">builtin_checkout_index_options<pos:position pos:line="47" pos:column="80"/></name></expr></argument>,
			<argument><expr><name pos:line="48" pos:column="25">builtin_checkout_index_usage<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="55">0<pos:position pos:line="48" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">state<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">.<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">force<pos:position pos:line="49" pos:column="20"/></name></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="23">force<pos:position pos:line="49" pos:column="28"/></name></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">state<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">.<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="15">quiet<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">quiet<pos:position pos:line="50" pos:column="28"/></name></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">state<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">.<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">not_new<pos:position pos:line="51" pos:column="22"/></name></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <name pos:line="51" pos:column="25">not_new<pos:position pos:line="51" pos:column="32"/></name></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">state<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">.<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">base_dir_len<pos:position pos:line="53" pos:column="31"/></name></name> <operator pos:line="53" pos:column="32">||<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">to_tempfile<pos:position pos:line="53" pos:column="46"/></name></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47"> <block pos:line="53" pos:column="48">{
		<comment type="block" pos:line="54" pos:column="17">/* when --prefix is specified we do not
		 * want to update cache.
		 */</comment>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name><name pos:line="57" pos:column="21">state<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">.<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="27">refresh_cache<pos:position pos:line="57" pos:column="40"/></name></name></expr>)<pos:position pos:line="57" pos:column="41"/></condition><then pos:line="57" pos:column="41"> <block pos:line="57" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">rollback_lock_file<pos:position pos:line="58" pos:column="43"/></name><argument_list pos:line="58" pos:column="43">(<argument><expr><operator pos:line="58" pos:column="44">&amp;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="45">lock_file<pos:position pos:line="58" pos:column="54"/></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="59" pos:column="25">newfd<pos:position pos:line="59" pos:column="30"/></name> <operator pos:line="59" pos:column="31">=<pos:position pos:line="59" pos:column="32"/></operator> <operator pos:line="59" pos:column="33">-<pos:position pos:line="59" pos:column="34"/></operator><literal type="number" pos:line="59" pos:column="34">1<pos:position pos:line="59" pos:column="35"/></literal></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="61" pos:column="17">state<pos:position pos:line="61" pos:column="22"/></name><operator pos:line="61" pos:column="22">.<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="23">refresh_cache<pos:position pos:line="61" pos:column="36"/></name></name> <operator pos:line="61" pos:column="37">=<pos:position pos:line="61" pos:column="38"/></operator> <literal type="number" pos:line="61" pos:column="39">0<pos:position pos:line="61" pos:column="40"/></literal></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="64" pos:column="9">/* Check out named files first */</comment>
	<for pos:line="65" pos:column="9">for <control pos:line="65" pos:column="13">(<init><expr><name pos:line="65" pos:column="14">i<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <literal type="number" pos:line="65" pos:column="18">0<pos:position pos:line="65" pos:column="19"/></literal></expr>;<pos:position pos:line="65" pos:column="20"/></init> <condition><expr><name pos:line="65" pos:column="21">i<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">&lt;<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="25">argc<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></condition> <incr><expr><name pos:line="65" pos:column="31">i<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">++<pos:position pos:line="65" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="65" pos:column="35"/></control> <block pos:line="65" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="66" pos:column="17">const<pos:position pos:line="66" pos:column="22"/></specifier> <name pos:line="66" pos:column="23">char<pos:position pos:line="66" pos:column="27"/></name> <modifier pos:line="66" pos:column="28">*<pos:position pos:line="66" pos:column="29"/></modifier></type><name pos:line="66" pos:column="29">arg<pos:position pos:line="66" pos:column="32"/></name> <init pos:line="66" pos:column="33">= <expr><name><name pos:line="66" pos:column="35">argv<pos:position pos:line="66" pos:column="39"/></name><index pos:line="66" pos:column="39">[<expr><name pos:line="66" pos:column="40">i<pos:position pos:line="66" pos:column="41"/></name></expr>]<pos:position pos:line="66" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="66" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="67" pos:column="17">const<pos:position pos:line="67" pos:column="22"/></specifier> <name pos:line="67" pos:column="23">char<pos:position pos:line="67" pos:column="27"/></name> <modifier pos:line="67" pos:column="28">*<pos:position pos:line="67" pos:column="29"/></modifier></type><name pos:line="67" pos:column="29">p<pos:position pos:line="67" pos:column="30"/></name></decl>;<pos:position pos:line="67" pos:column="31"/></decl_stmt>

		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name pos:line="69" pos:column="21">all<pos:position pos:line="69" pos:column="24"/></name></expr>)<pos:position pos:line="69" pos:column="25"/></condition><then pos:line="69" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="25">die<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><literal type="string" pos:line="70" pos:column="29">"git checkout-index: don't mix '--all' and explicit filenames"<pos:position pos:line="70" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="93"/></expr_stmt></block></then></if>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">read_from_stdin<pos:position pos:line="71" pos:column="36"/></name></expr>)<pos:position pos:line="71" pos:column="37"/></condition><then pos:line="71" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="25">die<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><literal type="string" pos:line="72" pos:column="29">"git checkout-index: don't mix '--stdin' and explicit filenames"<pos:position pos:line="72" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="95"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="73" pos:column="17">p<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <call><name pos:line="73" pos:column="21">prefix_path<pos:position pos:line="73" pos:column="32"/></name><argument_list pos:line="73" pos:column="32">(<argument><expr><name pos:line="73" pos:column="33">prefix<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="41">prefix_length<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="56">arg<pos:position pos:line="73" pos:column="59"/></name></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">checkout_file<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">p<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">prefix_length<pos:position pos:line="74" pos:column="47"/></name></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name><name pos:line="75" pos:column="21">p<pos:position pos:line="75" pos:column="22"/></name> <argument_list type="generic" pos:line="75" pos:column="23">&lt; <argument><expr><name pos:line="75" pos:column="25">arg<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">||<pos:position pos:line="75" pos:column="31"/></operator> <name pos:line="75" pos:column="32">p<pos:position pos:line="75" pos:column="33"/></name></expr></argument> &gt;<pos:position pos:line="75" pos:column="38"/></argument_list></name> <name pos:line="75" pos:column="36">arg<pos:position pos:line="75" pos:column="39"/></name> <operator pos:line="75" pos:column="40">+<pos:position pos:line="75" pos:column="41"/></operator> <call><name pos:line="75" pos:column="42">strlen<pos:position pos:line="75" pos:column="48"/></name><argument_list pos:line="75" pos:column="48">(<argument><expr><name pos:line="75" pos:column="49">arg<pos:position pos:line="75" pos:column="52"/></name></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="54"/></condition><then pos:line="75" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="25">free<pos:position pos:line="76" pos:column="29"/></name><argument_list pos:line="76" pos:column="29">(<argument><expr><operator pos:line="76" pos:column="30">(<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="31">char<pos:position pos:line="76" pos:column="35"/></name> <operator pos:line="76" pos:column="36">*<pos:position pos:line="76" pos:column="37"/></operator><operator pos:line="76" pos:column="37">)<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="38">p<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt></block></then></if>
	}<pos:position pos:line="77" pos:column="10"/></block></for>

	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">read_from_stdin<pos:position pos:line="79" pos:column="28"/></name></expr>)<pos:position pos:line="79" pos:column="29"/></condition><then pos:line="79" pos:column="29"> <block pos:line="79" pos:column="30">{
		<decl_stmt><decl><type><name><name pos:line="80" pos:column="17">struct<pos:position pos:line="80" pos:column="23"/></name> <name pos:line="80" pos:column="24">strbuf<pos:position pos:line="80" pos:column="30"/></name></name></type> <name pos:line="80" pos:column="31">buf<pos:position pos:line="80" pos:column="34"/></name> <init pos:line="80" pos:column="35">= <expr><name pos:line="80" pos:column="37">STRBUF_INIT<pos:position pos:line="80" pos:column="48"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="80" pos:column="50">nbuf<pos:position pos:line="80" pos:column="54"/></name> <init pos:line="80" pos:column="55">= <expr><name pos:line="80" pos:column="57">STRBUF_INIT<pos:position pos:line="80" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="80" pos:column="69"/></decl_stmt>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">all<pos:position pos:line="82" pos:column="24"/></name></expr>)<pos:position pos:line="82" pos:column="25"/></condition><then pos:line="82" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="25">die<pos:position pos:line="83" pos:column="28"/></name><argument_list pos:line="83" pos:column="28">(<argument><expr><literal type="string" pos:line="83" pos:column="29">"git checkout-index: don't mix '--all' and '--stdin'"<pos:position pos:line="83" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="84"/></expr_stmt></block></then></if>

		<while pos:line="85" pos:column="17">while <condition pos:line="85" pos:column="23">(<expr><call><name pos:line="85" pos:column="24">strbuf_getline<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><operator pos:line="85" pos:column="39">&amp;<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="40">buf<pos:position pos:line="85" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="45">stdin<pos:position pos:line="85" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="52">line_termination<pos:position pos:line="85" pos:column="68"/></name></expr></argument>)<pos:position pos:line="85" pos:column="69"/></argument_list></call> <operator pos:line="85" pos:column="70">!=<pos:position pos:line="85" pos:column="72"/></operator> <name pos:line="85" pos:column="73">EOF<pos:position pos:line="85" pos:column="76"/></name></expr>)<pos:position pos:line="85" pos:column="77"/></condition> <block pos:line="85" pos:column="78">{
			<decl_stmt><decl><type><specifier pos:line="86" pos:column="25">const<pos:position pos:line="86" pos:column="30"/></specifier> <name pos:line="86" pos:column="31">char<pos:position pos:line="86" pos:column="35"/></name> <modifier pos:line="86" pos:column="36">*<pos:position pos:line="86" pos:column="37"/></modifier></type><name pos:line="86" pos:column="37">p<pos:position pos:line="86" pos:column="38"/></name></decl>;<pos:position pos:line="86" pos:column="39"/></decl_stmt>
			<if pos:line="87" pos:column="25">if <condition pos:line="87" pos:column="28">(<expr><name pos:line="87" pos:column="29">line_termination<pos:position pos:line="87" pos:column="45"/></name> <operator pos:line="87" pos:column="46">&amp;&amp;<pos:position pos:line="87" pos:column="56"/></operator> <name><name pos:line="87" pos:column="49">buf<pos:position pos:line="87" pos:column="52"/></name><operator pos:line="87" pos:column="52">.<pos:position pos:line="87" pos:column="53"/></operator><name pos:line="87" pos:column="53">buf<pos:position pos:line="87" pos:column="56"/></name><index pos:line="87" pos:column="56">[<expr><literal type="number" pos:line="87" pos:column="57">0<pos:position pos:line="87" pos:column="58"/></literal></expr>]<pos:position pos:line="87" pos:column="59"/></index></name> <operator pos:line="87" pos:column="60">==<pos:position pos:line="87" pos:column="62"/></operator> <literal type="char" pos:line="87" pos:column="63">'"'<pos:position pos:line="87" pos:column="66"/></literal></expr>)<pos:position pos:line="87" pos:column="67"/></condition><then pos:line="87" pos:column="67"> <block pos:line="87" pos:column="68">{
				<expr_stmt><expr><call><name pos:line="88" pos:column="33">strbuf_reset<pos:position pos:line="88" pos:column="45"/></name><argument_list pos:line="88" pos:column="45">(<argument><expr><operator pos:line="88" pos:column="46">&amp;<pos:position pos:line="88" pos:column="51"/></operator><name pos:line="88" pos:column="47">nbuf<pos:position pos:line="88" pos:column="51"/></name></expr></argument>)<pos:position pos:line="88" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="53"/></expr_stmt>
				<if pos:line="89" pos:column="33">if <condition pos:line="89" pos:column="36">(<expr><call><name pos:line="89" pos:column="37">unquote_c_style<pos:position pos:line="89" pos:column="52"/></name><argument_list pos:line="89" pos:column="52">(<argument><expr><operator pos:line="89" pos:column="53">&amp;<pos:position pos:line="89" pos:column="58"/></operator><name pos:line="89" pos:column="54">nbuf<pos:position pos:line="89" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="60">buf<pos:position pos:line="89" pos:column="63"/></name><operator pos:line="89" pos:column="63">.<pos:position pos:line="89" pos:column="64"/></operator><name pos:line="89" pos:column="64">buf<pos:position pos:line="89" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="69">NULL<pos:position pos:line="89" pos:column="73"/></name></expr></argument>)<pos:position pos:line="89" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="75"/></condition><then pos:line="89" pos:column="75">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="41">die<pos:position pos:line="90" pos:column="44"/></name><argument_list pos:line="90" pos:column="44">(<argument><expr><literal type="string" pos:line="90" pos:column="45">"line is badly quoted"<pos:position pos:line="90" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="69"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="91" pos:column="33">strbuf_swap<pos:position pos:line="91" pos:column="44"/></name><argument_list pos:line="91" pos:column="44">(<argument><expr><operator pos:line="91" pos:column="45">&amp;<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="46">buf<pos:position pos:line="91" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="51">&amp;<pos:position pos:line="91" pos:column="56"/></operator><name pos:line="91" pos:column="52">nbuf<pos:position pos:line="91" pos:column="56"/></name></expr></argument>)<pos:position pos:line="91" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="92" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="93" pos:column="25">p<pos:position pos:line="93" pos:column="26"/></name> <operator pos:line="93" pos:column="27">=<pos:position pos:line="93" pos:column="28"/></operator> <call><name pos:line="93" pos:column="29">prefix_path<pos:position pos:line="93" pos:column="40"/></name><argument_list pos:line="93" pos:column="40">(<argument><expr><name pos:line="93" pos:column="41">prefix<pos:position pos:line="93" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="49">prefix_length<pos:position pos:line="93" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="64">buf<pos:position pos:line="93" pos:column="67"/></name><operator pos:line="93" pos:column="67">.<pos:position pos:line="93" pos:column="68"/></operator><name pos:line="93" pos:column="68">buf<pos:position pos:line="93" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">checkout_file<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">p<pos:position pos:line="94" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="42">prefix_length<pos:position pos:line="94" pos:column="55"/></name></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><name><name pos:line="95" pos:column="29">p<pos:position pos:line="95" pos:column="30"/></name> <argument_list type="generic" pos:line="95" pos:column="31">&lt; <argument><expr><name><name pos:line="95" pos:column="33">buf<pos:position pos:line="95" pos:column="36"/></name><operator pos:line="95" pos:column="36">.<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="37">buf<pos:position pos:line="95" pos:column="40"/></name></name> <operator pos:line="95" pos:column="41">||<pos:position pos:line="95" pos:column="43"/></operator> <name pos:line="95" pos:column="44">p<pos:position pos:line="95" pos:column="45"/></name></expr></argument> &gt;<pos:position pos:line="95" pos:column="50"/></argument_list></name> <name><name pos:line="95" pos:column="48">buf<pos:position pos:line="95" pos:column="51"/></name><operator pos:line="95" pos:column="51">.<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="52">buf<pos:position pos:line="95" pos:column="55"/></name></name> <operator pos:line="95" pos:column="56">+<pos:position pos:line="95" pos:column="57"/></operator> <name><name pos:line="95" pos:column="58">buf<pos:position pos:line="95" pos:column="61"/></name><operator pos:line="95" pos:column="61">.<pos:position pos:line="95" pos:column="62"/></operator><name pos:line="95" pos:column="62">len<pos:position pos:line="95" pos:column="65"/></name></name></expr>)<pos:position pos:line="95" pos:column="66"/></condition><then pos:line="95" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="33">free<pos:position pos:line="96" pos:column="37"/></name><argument_list pos:line="96" pos:column="37">(<argument><expr><operator pos:line="96" pos:column="38">(<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="39">char<pos:position pos:line="96" pos:column="43"/></name> <operator pos:line="96" pos:column="44">*<pos:position pos:line="96" pos:column="45"/></operator><operator pos:line="96" pos:column="45">)<pos:position pos:line="96" pos:column="46"/></operator><name pos:line="96" pos:column="46">p<pos:position pos:line="96" pos:column="47"/></name></expr></argument>)<pos:position pos:line="96" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="49"/></expr_stmt></block></then></if>
		}<pos:position pos:line="97" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="98" pos:column="17">strbuf_release<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><operator pos:line="98" pos:column="32">&amp;<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="33">nbuf<pos:position pos:line="98" pos:column="37"/></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">strbuf_release<pos:position pos:line="99" pos:column="31"/></name><argument_list pos:line="99" pos:column="31">(<argument><expr><operator pos:line="99" pos:column="32">&amp;<pos:position pos:line="99" pos:column="37"/></operator><name pos:line="99" pos:column="33">buf<pos:position pos:line="99" pos:column="36"/></name></expr></argument>)<pos:position pos:line="99" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="100" pos:column="10"/></block></then></if>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">all<pos:position pos:line="102" pos:column="16"/></name></expr>)<pos:position pos:line="102" pos:column="17"/></condition><then pos:line="102" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="17">checkout_all<pos:position pos:line="103" pos:column="29"/></name><argument_list pos:line="103" pos:column="29">(<argument><expr><name pos:line="103" pos:column="30">prefix<pos:position pos:line="103" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="38">prefix_length<pos:position pos:line="103" pos:column="51"/></name></expr></argument>)<pos:position pos:line="103" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="53"/></expr_stmt></block></then></if>

	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><literal type="number" pos:line="105" pos:column="13">0<pos:position pos:line="105" pos:column="14"/></literal> <operator pos:line="105" pos:column="15">&lt;=<pos:position pos:line="105" pos:column="20"/></operator> <name pos:line="105" pos:column="18">newfd<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">&amp;&amp;<pos:position pos:line="105" pos:column="34"/></operator>
	    <operator pos:line="106" pos:column="13">(<pos:position pos:line="106" pos:column="14"/></operator><call><name pos:line="106" pos:column="14">write_cache<pos:position pos:line="106" pos:column="25"/></name><argument_list pos:line="106" pos:column="25">(<argument><expr><name pos:line="106" pos:column="26">newfd<pos:position pos:line="106" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="33">active_cache<pos:position pos:line="106" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="47">active_nr<pos:position pos:line="106" pos:column="56"/></name></expr></argument>)<pos:position pos:line="106" pos:column="57"/></argument_list></call> <operator pos:line="106" pos:column="58">||<pos:position pos:line="106" pos:column="60"/></operator>
	     <call><name pos:line="107" pos:column="14">commit_locked_index<pos:position pos:line="107" pos:column="33"/></name><argument_list pos:line="107" pos:column="33">(<argument><expr><operator pos:line="107" pos:column="34">&amp;<pos:position pos:line="107" pos:column="39"/></operator><name pos:line="107" pos:column="35">lock_file<pos:position pos:line="107" pos:column="44"/></name></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></call><operator pos:line="107" pos:column="45">)<pos:position pos:line="107" pos:column="46"/></operator></expr>)<pos:position pos:line="107" pos:column="47"/></condition><then pos:line="107" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="17">die<pos:position pos:line="108" pos:column="20"/></name><argument_list pos:line="108" pos:column="20">(<argument><expr><literal type="string" pos:line="108" pos:column="21">"Unable to write new index file"<pos:position pos:line="108" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="55"/></expr_stmt></block></then></if>
	<return pos:line="109" pos:column="9">return <expr><literal type="number" pos:line="109" pos:column="16">0<pos:position pos:line="109" pos:column="17"/></literal></expr>;<pos:position pos:line="109" pos:column="18"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2582_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_header<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">mailinfo<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">mi<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">strbuf<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">line<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">strbuf<pos:position pos:line="3" pos:column="38"/></name></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name><name pos:line="3" pos:column="40">hdr_data<pos:position pos:line="3" pos:column="48"/></name><index pos:line="3" pos:column="48">[]<pos:position pos:line="3" pos:column="50"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">int<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">overwrite<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">ret<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="25">len<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">sb<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">STRBUF_INIT<pos:position pos:line="6" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* search for the interesting parts */</comment>
	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name><name pos:line="9" pos:column="21">header<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><name pos:line="9" pos:column="28">i<pos:position pos:line="9" pos:column="29"/></name></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></expr>;<pos:position pos:line="9" pos:column="31"/></condition> <incr><expr><name pos:line="9" pos:column="32">i<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">++<pos:position pos:line="9" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="36"/></control> <block pos:line="9" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">len<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><call><name pos:line="10" pos:column="27">strlen<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name><name pos:line="10" pos:column="34">header<pos:position pos:line="10" pos:column="40"/></name><index pos:line="10" pos:column="40">[<expr><name pos:line="10" pos:column="41">i<pos:position pos:line="10" pos:column="42"/></name></expr>]<pos:position pos:line="10" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">!<pos:position pos:line="11" pos:column="23"/></operator><name><name pos:line="11" pos:column="23">hdr_data<pos:position pos:line="11" pos:column="31"/></name><index pos:line="11" pos:column="31">[<expr><name pos:line="11" pos:column="32">i<pos:position pos:line="11" pos:column="33"/></name></expr>]<pos:position pos:line="11" pos:column="34"/></index></name> <operator pos:line="11" pos:column="35">||<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">overwrite<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">)<pos:position pos:line="11" pos:column="48"/></operator> <operator pos:line="11" pos:column="49">&amp;&amp;<pos:position pos:line="11" pos:column="59"/></operator> <call><name pos:line="11" pos:column="52">cmp_header<pos:position pos:line="11" pos:column="62"/></name><argument_list pos:line="11" pos:column="62">(<argument><expr><name pos:line="11" pos:column="63">line<pos:position pos:line="11" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="69">header<pos:position pos:line="11" pos:column="75"/></name><index pos:line="11" pos:column="75">[<expr><name pos:line="11" pos:column="76">i<pos:position pos:line="11" pos:column="77"/></name></expr>]<pos:position pos:line="11" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="80"/></condition><then pos:line="11" pos:column="80"> <block pos:line="11" pos:column="81">{
			<comment type="block" pos:line="12" pos:column="25">/* Unwrap inline B and Q encoding, and optionally
			 * normalize the meta information to utf8.
			 */</comment>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">strbuf_add<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><operator pos:line="15" pos:column="36">&amp;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="37">sb<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="41">line<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">buf<pos:position pos:line="15" pos:column="50"/></name></name> <operator pos:line="15" pos:column="51">+<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">len<pos:position pos:line="15" pos:column="56"/></name> <operator pos:line="15" pos:column="57">+<pos:position pos:line="15" pos:column="58"/></operator> <literal type="number" pos:line="15" pos:column="59">2<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="62">line<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">len<pos:position pos:line="15" pos:column="71"/></name></name> <operator pos:line="15" pos:column="72">-<pos:position pos:line="15" pos:column="73"/></operator> <name pos:line="15" pos:column="74">len<pos:position pos:line="15" pos:column="77"/></name> <operator pos:line="15" pos:column="78">-<pos:position pos:line="15" pos:column="79"/></operator> <literal type="number" pos:line="15" pos:column="80">2<pos:position pos:line="15" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="83"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">decode_header<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">mi<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">sb<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">handle_header<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator><name><name pos:line="17" pos:column="40">hdr_data<pos:position pos:line="17" pos:column="48"/></name><index pos:line="17" pos:column="48">[<expr><name pos:line="17" pos:column="49">i<pos:position pos:line="17" pos:column="50"/></name></expr>]<pos:position pos:line="17" pos:column="51"/></index></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="53">&amp;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="54">sb<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">ret<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">1<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
			<goto pos:line="19" pos:column="25">goto <name pos:line="19" pos:column="30">check_header_out<pos:position pos:line="19" pos:column="46"/></name>;<pos:position pos:line="19" pos:column="47"/></goto>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<comment type="block" pos:line="23" pos:column="9">/* Content stuff */</comment>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">cmp_header<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">line<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="30">"Content-Type"<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46"> <block pos:line="24" pos:column="47">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">len<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">strlen<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><literal type="string" pos:line="25" pos:column="30">"Content-Type: "<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_add<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="29">sb<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="33">line<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">buf<pos:position pos:line="26" pos:column="42"/></name></name> <operator pos:line="26" pos:column="43">+<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">len<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">line<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">len<pos:position pos:line="26" pos:column="59"/></name></name> <operator pos:line="26" pos:column="60">-<pos:position pos:line="26" pos:column="61"/></operator> <name pos:line="26" pos:column="62">len<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">decode_header<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">mi<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="36">sb<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_insert<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">sb<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="36">0<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"Content-Type: "<pos:position pos:line="28" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">len<pos:position pos:line="28" pos:column="60"/></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">handle_content_type<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">mi<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="41">&amp;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="42">sb<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">ret<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="23">1<pos:position pos:line="30" pos:column="24"/></literal></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
		<goto pos:line="31" pos:column="17">goto <name pos:line="31" pos:column="22">check_header_out<pos:position pos:line="31" pos:column="38"/></name>;<pos:position pos:line="31" pos:column="39"/></goto>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">cmp_header<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">line<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="30">"Content-Transfer-Encoding"<pos:position pos:line="33" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="59"/></condition><then pos:line="33" pos:column="59"> <block pos:line="33" pos:column="60">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">len<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">strlen<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><literal type="string" pos:line="34" pos:column="30">"Content-Transfer-Encoding: "<pos:position pos:line="34" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">strbuf_add<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><operator pos:line="35" pos:column="28">&amp;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="29">sb<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="33">line<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">buf<pos:position pos:line="35" pos:column="42"/></name></name> <operator pos:line="35" pos:column="43">+<pos:position pos:line="35" pos:column="44"/></operator> <name pos:line="35" pos:column="45">len<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="50">line<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">len<pos:position pos:line="35" pos:column="59"/></name></name> <operator pos:line="35" pos:column="60">-<pos:position pos:line="35" pos:column="61"/></operator> <name pos:line="35" pos:column="62">len<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">decode_header<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">mi<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="35">&amp;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="36">sb<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">handle_content_transfer_encoding<pos:position pos:line="37" pos:column="49"/></name><argument_list pos:line="37" pos:column="49">(<argument><expr><name pos:line="37" pos:column="50">mi<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="54">&amp;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="55">sb<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">ret<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">1<pos:position pos:line="38" pos:column="24"/></literal></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
		<goto pos:line="39" pos:column="17">goto <name pos:line="39" pos:column="22">check_header_out<pos:position pos:line="39" pos:column="38"/></name>;<pos:position pos:line="39" pos:column="39"/></goto>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">cmp_header<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">line<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"Message-Id"<pos:position pos:line="41" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="44"/></condition><then pos:line="41" pos:column="44"> <block pos:line="41" pos:column="45">{
		<expr_stmt><expr><name pos:line="42" pos:column="17">len<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <call><name pos:line="42" pos:column="23">strlen<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><literal type="string" pos:line="42" pos:column="30">"Message-Id: "<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">strbuf_add<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><operator pos:line="43" pos:column="28">&amp;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="29">sb<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="33">line<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">buf<pos:position pos:line="43" pos:column="42"/></name></name> <operator pos:line="43" pos:column="43">+<pos:position pos:line="43" pos:column="44"/></operator> <name pos:line="43" pos:column="45">len<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="50">line<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">-&gt;<pos:position pos:line="43" pos:column="59"/></operator><name pos:line="43" pos:column="56">len<pos:position pos:line="43" pos:column="59"/></name></name> <operator pos:line="43" pos:column="60">-<pos:position pos:line="43" pos:column="61"/></operator> <name pos:line="43" pos:column="62">len<pos:position pos:line="43" pos:column="65"/></name></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">decode_header<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">mi<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">&amp;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="36">sb<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">mi<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">add_message_id<pos:position pos:line="45" pos:column="39"/></name></name></expr>)<pos:position pos:line="45" pos:column="40"/></condition><then pos:line="45" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="46" pos:column="25">mi<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">message_id<pos:position pos:line="46" pos:column="39"/></name></name> <operator pos:line="46" pos:column="40">=<pos:position pos:line="46" pos:column="41"/></operator> <call><name pos:line="46" pos:column="42">strbuf_detach<pos:position pos:line="46" pos:column="55"/></name><argument_list pos:line="46" pos:column="55">(<argument><expr><operator pos:line="46" pos:column="56">&amp;<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="57">sb<pos:position pos:line="46" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="61">NULL<pos:position pos:line="46" pos:column="65"/></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="47" pos:column="17">ret<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <literal type="number" pos:line="47" pos:column="23">1<pos:position pos:line="47" pos:column="24"/></literal></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
		<goto pos:line="48" pos:column="17">goto <name pos:line="48" pos:column="22">check_header_out<pos:position pos:line="48" pos:column="38"/></name>;<pos:position pos:line="48" pos:column="39"/></goto>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

<label><name pos:line="51" pos:column="1">check_header_out<pos:position pos:line="51" pos:column="17"/></name>:<pos:position pos:line="51" pos:column="18"/></label>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">strbuf_release<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><operator pos:line="52" pos:column="24">&amp;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="25">sb<pos:position pos:line="52" pos:column="27"/></name></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
	<return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">ret<pos:position pos:line="53" pos:column="19"/></name></expr>;<pos:position pos:line="53" pos:column="20"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_57_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">finish_tmp_packfile<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">strbuf<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">name_buffer<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">pack_tmp_name<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="3" pos:column="26">struct<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">pack_idx_entry<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier><modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">written_list<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="4" pos:column="26">uint32_t<pos:position pos:line="4" pos:column="34"/></name></type> <name pos:line="4" pos:column="35">nr_written<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="5" pos:column="26">struct<pos:position pos:line="5" pos:column="32"/></name> <name pos:line="5" pos:column="33">pack_idx_option<pos:position pos:line="5" pos:column="48"/></name></name> <modifier pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></modifier></type><name pos:line="5" pos:column="50">pack_idx_opts<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="6" pos:column="26">unsigned<pos:position pos:line="6" pos:column="34"/></name> <name pos:line="6" pos:column="35">char<pos:position pos:line="6" pos:column="39"/></name></type> <name><name pos:line="6" pos:column="40">sha1<pos:position pos:line="6" pos:column="44"/></name><index pos:line="6" pos:column="44">[]<pos:position pos:line="6" pos:column="46"/></index></name></decl></parameter>)<pos:position pos:line="6" pos:column="47"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">idx_tmp_name<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">basename_len<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name><name pos:line="9" pos:column="28">name_buffer<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">len<pos:position pos:line="9" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">adjust_shared_perm<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">pack_tmp_name<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die_errno<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><literal type="string" pos:line="12" pos:column="27">"unable to make temporary pack file readable"<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">idx_tmp_name<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">write_idx_file<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">NULL<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">written_list<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">nr_written<pos:position pos:line="14" pos:column="69"/></name></expr></argument>,
				      <argument><expr><name pos:line="15" pos:column="39">pack_idx_opts<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">sha1<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">adjust_shared_perm<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">idx_tmp_name<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die_errno<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><literal type="string" pos:line="17" pos:column="27">"unable to make temporary index file readable"<pos:position pos:line="17" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="75"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_addf<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">name_buffer<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"%s.pack"<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="45">sha1_to_hex<pos:position pos:line="19" pos:column="56"/></name><argument_list pos:line="19" pos:column="56">(<argument><expr><name pos:line="19" pos:column="57">sha1<pos:position pos:line="19" pos:column="61"/></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">rename<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">pack_tmp_name<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="35">name_buffer<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">buf<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">die_errno<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><literal type="string" pos:line="22" pos:column="27">"unable to rename temporary pack file"<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strbuf_setlen<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">name_buffer<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">basename_len<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">strbuf_addf<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">name_buffer<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"%s.idx"<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="44">sha1_to_hex<pos:position pos:line="26" pos:column="55"/></name><argument_list pos:line="26" pos:column="55">(<argument><expr><name pos:line="26" pos:column="56">sha1<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">rename<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">idx_tmp_name<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="34">name_buffer<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">buf<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die_errno<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><literal type="string" pos:line="28" pos:column="27">"unable to rename temporary index file"<pos:position pos:line="28" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_setlen<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">name_buffer<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">basename_len<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">free<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">void<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></operator><operator pos:line="32" pos:column="21">)<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">idx_tmp_name<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3745_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">free_submodules_oids<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">string_list<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">submodules<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list_item<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">item<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<macro><name pos:line="4" pos:column="9">for_each_string_list_item<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument pos:line="4" pos:column="35">item<pos:position pos:line="4" pos:column="39"/></argument>, <argument pos:line="4" pos:column="41">submodules<pos:position pos:line="4" pos:column="51"/></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></macro>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">oid_array_clear<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><operator pos:line="5" pos:column="33">(<pos:position pos:line="5" pos:column="34"/></operator>struct <name pos:line="5" pos:column="41">oid_array<pos:position pos:line="5" pos:column="50"/></name> <operator pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></operator><operator pos:line="5" pos:column="52">)<pos:position pos:line="5" pos:column="53"/></operator> <name><name pos:line="5" pos:column="54">item<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">util<pos:position pos:line="5" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">string_list_clear<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">submodules<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="39">1<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

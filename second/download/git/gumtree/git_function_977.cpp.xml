<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_977.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_clean<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">argc<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">prefix<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">res<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">dry_run<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">remove_directories<pos:position pos:line="4" pos:column="44"/></name> <init pos:line="4" pos:column="45">= <expr><literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="50">quiet<pos:position pos:line="4" pos:column="55"/></name> <init pos:line="4" pos:column="56">= <expr><literal type="number" pos:line="4" pos:column="58">0<pos:position pos:line="4" pos:column="59"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="61">ignored<pos:position pos:line="4" pos:column="68"/></name> <init pos:line="4" pos:column="69">= <expr><literal type="number" pos:line="4" pos:column="71">0<pos:position pos:line="4" pos:column="72"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ignored_only<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="31">config_set<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="47">errors<pos:position pos:line="5" pos:column="53"/></name> <init pos:line="5" pos:column="54">= <expr><literal type="number" pos:line="5" pos:column="56">0<pos:position pos:line="5" pos:column="57"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="59">gone<pos:position pos:line="5" pos:column="63"/></name> <init pos:line="5" pos:column="64">= <expr><literal type="number" pos:line="5" pos:column="66">1<pos:position pos:line="5" pos:column="67"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">rm_flags<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name pos:line="6" pos:column="24">REMOVE_DIR_KEEP_NESTED_GIT<pos:position pos:line="6" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">abs_path<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">STRBUF_INIT<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">dir_struct<pos:position pos:line="8" pos:column="26"/></name></name></type> <name pos:line="8" pos:column="27">dir<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">pathspec<pos:position pos:line="9" pos:column="24"/></name></name></type> <name pos:line="9" pos:column="25">pathspec<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">strbuf<pos:position pos:line="10" pos:column="22"/></name></name></type> <name pos:line="10" pos:column="23">buf<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><name pos:line="10" pos:column="29">STRBUF_INIT<pos:position pos:line="10" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">string_list<pos:position pos:line="11" pos:column="27"/></name></name></type> <name pos:line="11" pos:column="28">exclude_list<pos:position pos:line="11" pos:column="40"/></name> <init pos:line="11" pos:column="41">= <expr><name pos:line="11" pos:column="43">STRING_LIST_INIT_NODUP<pos:position pos:line="11" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">exclude_list<pos:position pos:line="12" pos:column="28"/></name></name> <modifier pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></modifier></type><name pos:line="12" pos:column="30">el<pos:position pos:line="12" pos:column="32"/></name></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">string_list_item<pos:position pos:line="13" pos:column="32"/></name></name> <modifier pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></modifier></type><name pos:line="13" pos:column="34">item<pos:position pos:line="13" pos:column="38"/></name></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">qname<pos:position pos:line="14" pos:column="26"/></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">option<pos:position pos:line="15" pos:column="22"/></name></name></type> <name><name pos:line="15" pos:column="23">options<pos:position pos:line="15" pos:column="30"/></name><index pos:line="15" pos:column="30">[]<pos:position pos:line="15" pos:column="32"/></index></name> <init pos:line="15" pos:column="33">= <expr><block pos:line="15" pos:column="35">{
		<expr><call><name pos:line="16" pos:column="17">OPT__QUIET<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">quiet<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="36">N_<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"do not print names of files removed"<pos:position pos:line="16" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT__DRY_RUN<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><operator pos:line="17" pos:column="30">&amp;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="31">dry_run<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="40">N_<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><literal type="string" pos:line="17" pos:column="43">"dry run"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT__FORCE<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">force<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="36">N_<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><literal type="string" pos:line="18" pos:column="39">"force"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>,
		<expr><call><name pos:line="19" pos:column="17">OPT_BOOL<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><literal type="char" pos:line="19" pos:column="26">'i'<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"interactive"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="47">interactive<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="60">N_<pos:position pos:line="19" pos:column="62"/></name><argument_list pos:line="19" pos:column="62">(<argument><expr><literal type="string" pos:line="19" pos:column="63">"interactive cleaning"<pos:position pos:line="19" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="87"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_BOOL<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="char" pos:line="20" pos:column="26">'d'<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="37">&amp;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="38">remove_directories<pos:position pos:line="20" pos:column="56"/></name></expr></argument>,
				<argument><expr><call><name pos:line="21" pos:column="33">N_<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><literal type="string" pos:line="21" pos:column="36">"remove whole directories"<pos:position pos:line="21" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>,
		<expr><block pos:line="22" pos:column="17">{ <expr><name pos:line="22" pos:column="19">OPTION_CALLBACK<pos:position pos:line="22" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="22" pos:column="36">'e'<pos:position pos:line="22" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="41">"exclude"<pos:position pos:line="22" pos:column="50"/></literal></expr>, <expr><operator pos:line="22" pos:column="52">&amp;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="53">exclude_list<pos:position pos:line="22" pos:column="65"/></name></expr>, <expr><call><name pos:line="22" pos:column="67">N_<pos:position pos:line="22" pos:column="69"/></name><argument_list pos:line="22" pos:column="69">(<argument><expr><literal type="string" pos:line="22" pos:column="70">"pattern"<pos:position pos:line="22" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr>,
		  <expr><call><name pos:line="23" pos:column="19">N_<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><literal type="string" pos:line="23" pos:column="22">"add &lt;pattern&gt; to ignore rules"<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>, <expr><name pos:line="23" pos:column="56">PARSE_OPT_NONEG<pos:position pos:line="23" pos:column="71"/></name></expr>, <expr><name pos:line="23" pos:column="73">exclude_cb<pos:position pos:line="23" pos:column="83"/></name></expr> }<pos:position pos:line="23" pos:column="85"/></block></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_BOOL<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><literal type="char" pos:line="24" pos:column="26">'x'<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">NULL<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="37">&amp;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="38">ignored<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="47">N_<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><literal type="string" pos:line="24" pos:column="50">"remove ignored files, too"<pos:position pos:line="24" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>,
		<expr><call><name pos:line="25" pos:column="17">OPT_BOOL<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="char" pos:line="25" pos:column="26">'X'<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">NULL<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="37">&amp;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="38">ignored_only<pos:position pos:line="25" pos:column="50"/></name></expr></argument>,
				<argument><expr><call><name pos:line="26" pos:column="33">N_<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><literal type="string" pos:line="26" pos:column="36">"remove only ignored files"<pos:position pos:line="26" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>,
		<macro><name pos:line="27" pos:column="17">OPT_END<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">()<pos:position pos:line="27" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="28" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="28" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">git_config<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">git_clean_config<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">NULL<pos:position pos:line="30" pos:column="42"/></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">force<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&lt;<pos:position pos:line="31" pos:column="23"/></operator> <literal type="number" pos:line="31" pos:column="21">0<pos:position pos:line="31" pos:column="22"/></literal></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">force<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt></block></then>
	<else pos:line="33" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">config_set<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="30">1<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="36" pos:column="9">argc<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">parse_options<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">argc<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="36">argv<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">prefix<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">options<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="59">builtin_clean_usage<pos:position pos:line="36" pos:column="78"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="37" pos:column="30">0<pos:position pos:line="37" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">memset<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><operator pos:line="39" pos:column="16">&amp;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="17">dir<pos:position pos:line="39" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="25">sizeof<argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">dir<pos:position pos:line="39" pos:column="35"/></name></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">ignored_only<pos:position pos:line="40" pos:column="25"/></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="17">dir<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">flags<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">|=<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="30">DIR_SHOW_IGNORED<pos:position pos:line="41" pos:column="46"/></name></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">ignored<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">&amp;&amp;<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="24">ignored_only<pos:position pos:line="43" pos:column="36"/></name></expr>)<pos:position pos:line="43" pos:column="37"/></condition><then pos:line="43" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">die<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><call><name pos:line="44" pos:column="21">_<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><literal type="string" pos:line="44" pos:column="23">"-x and -X cannot be used together"<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">interactive<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">&amp;&amp;<pos:position pos:line="46" pos:column="36"/></operator> <operator pos:line="46" pos:column="29">!<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">dry_run<pos:position pos:line="46" pos:column="37"/></name> <operator pos:line="46" pos:column="38">&amp;&amp;<pos:position pos:line="46" pos:column="48"/></operator> <operator pos:line="46" pos:column="41">!<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">force<pos:position pos:line="46" pos:column="47"/></name></expr>)<pos:position pos:line="46" pos:column="48"/></condition><then pos:line="46" pos:column="48"> <block pos:line="46" pos:column="49">{
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">config_set<pos:position pos:line="47" pos:column="31"/></name></expr>)<pos:position pos:line="47" pos:column="32"/></condition><then pos:line="47" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">die<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><call><name pos:line="48" pos:column="29">_<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><literal type="string" pos:line="48" pos:column="31">"clean.requireForce set to true and neither -i, -n, nor -f given; "<pos:position pos:line="48" pos:column="98"/></literal>
				  <literal type="string" pos:line="49" pos:column="35">"refusing to clean"<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt></block></then>
		<else pos:line="50" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">die<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><call><name pos:line="51" pos:column="29">_<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><literal type="string" pos:line="51" pos:column="31">"clean.requireForce defaults to true and neither -i, -n, nor -f given;"<pos:position pos:line="51" pos:column="102"/></literal>
				  <literal type="string" pos:line="52" pos:column="35">" refusing to clean"<pos:position pos:line="52" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt></block></else></if>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">force<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">&gt;<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="21">1<pos:position pos:line="55" pos:column="22"/></literal></expr>)<pos:position pos:line="55" pos:column="23"/></condition><then pos:line="55" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="17">rm_flags<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <literal type="number" pos:line="56" pos:column="28">0<pos:position pos:line="56" pos:column="29"/></literal></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="58" pos:column="9">dir<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">.<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="13">flags<pos:position pos:line="58" pos:column="18"/></name></name> <operator pos:line="58" pos:column="19">|=<pos:position pos:line="58" pos:column="21"/></operator> <name pos:line="58" pos:column="22">DIR_SHOW_OTHER_DIRECTORIES<pos:position pos:line="58" pos:column="48"/></name></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><call><name pos:line="60" pos:column="13">read_cache<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">()<pos:position pos:line="60" pos:column="25"/></argument_list></call> <operator pos:line="60" pos:column="26">&lt;<pos:position pos:line="60" pos:column="30"/></operator> <literal type="number" pos:line="60" pos:column="28">0<pos:position pos:line="60" pos:column="29"/></literal></expr>)<pos:position pos:line="60" pos:column="30"/></condition><then pos:line="60" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">die<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><call><name pos:line="61" pos:column="21">_<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><literal type="string" pos:line="61" pos:column="23">"index file corrupt"<pos:position pos:line="61" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">ignored<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">setup_standard_excludes<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><operator pos:line="64" pos:column="41">&amp;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="42">dir<pos:position pos:line="64" pos:column="45"/></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="66" pos:column="9">el<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <call><name pos:line="66" pos:column="14">add_exclude_list<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><operator pos:line="66" pos:column="31">&amp;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="32">dir<pos:position pos:line="66" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="37">EXC_CMDL<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="47">"--exclude option"<pos:position pos:line="66" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="67"/></expr_stmt>
	<for pos:line="67" pos:column="9">for <control pos:line="67" pos:column="13">(<init><expr><name pos:line="67" pos:column="14">i<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr>;<pos:position pos:line="67" pos:column="20"/></init> <condition><expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&lt;<pos:position pos:line="67" pos:column="27"/></operator> <name><name pos:line="67" pos:column="25">exclude_list<pos:position pos:line="67" pos:column="37"/></name><operator pos:line="67" pos:column="37">.<pos:position pos:line="67" pos:column="38"/></operator><name pos:line="67" pos:column="38">nr<pos:position pos:line="67" pos:column="40"/></name></name></expr>;<pos:position pos:line="67" pos:column="41"/></condition> <incr><expr><name pos:line="67" pos:column="42">i<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">++<pos:position pos:line="67" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="46"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="17">add_exclude<pos:position pos:line="68" pos:column="28"/></name><argument_list pos:line="68" pos:column="28">(<argument><expr><name><name pos:line="68" pos:column="29">exclude_list<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">.<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="42">items<pos:position pos:line="68" pos:column="47"/></name><index pos:line="68" pos:column="47">[<expr><name pos:line="68" pos:column="48">i<pos:position pos:line="68" pos:column="49"/></name></expr>]<pos:position pos:line="68" pos:column="50"/></index></name><operator pos:line="68" pos:column="50">.<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="51">string<pos:position pos:line="68" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="59">""<pos:position pos:line="68" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="63">0<pos:position pos:line="68" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="66">el<pos:position pos:line="68" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="70">-<pos:position pos:line="68" pos:column="71"/></operator><operator pos:line="68" pos:column="71">(<pos:position pos:line="68" pos:column="72"/></operator><name pos:line="68" pos:column="72">i<pos:position pos:line="68" pos:column="73"/></name><operator pos:line="68" pos:column="73">+<pos:position pos:line="68" pos:column="74"/></operator><literal type="number" pos:line="68" pos:column="74">1<pos:position pos:line="68" pos:column="75"/></literal><operator pos:line="68" pos:column="75">)<pos:position pos:line="68" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="78"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="70" pos:column="9">parse_pathspec<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><operator pos:line="70" pos:column="24">&amp;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="25">pathspec<pos:position pos:line="70" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="35">0<pos:position pos:line="70" pos:column="36"/></literal></expr></argument>,
		       <argument><expr><name pos:line="71" pos:column="24">PATHSPEC_PREFER_CWD<pos:position pos:line="71" pos:column="43"/></name></expr></argument>,
		       <argument><expr><name pos:line="72" pos:column="24">prefix<pos:position pos:line="72" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="32">argv<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="74" pos:column="9">fill_directory<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><operator pos:line="74" pos:column="24">&amp;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="25">dir<pos:position pos:line="74" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="30">&amp;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="31">pathspec<pos:position pos:line="74" pos:column="39"/></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>

	<for pos:line="76" pos:column="9">for <control pos:line="76" pos:column="13">(<init><expr><name pos:line="76" pos:column="14">i<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <literal type="number" pos:line="76" pos:column="18">0<pos:position pos:line="76" pos:column="19"/></literal></expr>;<pos:position pos:line="76" pos:column="20"/></init> <condition><expr><name pos:line="76" pos:column="21">i<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">&lt;<pos:position pos:line="76" pos:column="27"/></operator> <name><name pos:line="76" pos:column="25">dir<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">.<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="29">nr<pos:position pos:line="76" pos:column="31"/></name></name></expr>;<pos:position pos:line="76" pos:column="32"/></condition> <incr><expr><name pos:line="76" pos:column="33">i<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">++<pos:position pos:line="76" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="76" pos:column="37"/></control> <block pos:line="76" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="77" pos:column="17">struct<pos:position pos:line="77" pos:column="23"/></name> <name pos:line="77" pos:column="24">dir_entry<pos:position pos:line="77" pos:column="33"/></name></name> <modifier pos:line="77" pos:column="34">*<pos:position pos:line="77" pos:column="35"/></modifier></type><name pos:line="77" pos:column="35">ent<pos:position pos:line="77" pos:column="38"/></name> <init pos:line="77" pos:column="39">= <expr><name><name pos:line="77" pos:column="41">dir<pos:position pos:line="77" pos:column="44"/></name><operator pos:line="77" pos:column="44">.<pos:position pos:line="77" pos:column="45"/></operator><name pos:line="77" pos:column="45">entries<pos:position pos:line="77" pos:column="52"/></name><index pos:line="77" pos:column="52">[<expr><name pos:line="77" pos:column="53">i<pos:position pos:line="77" pos:column="54"/></name></expr>]<pos:position pos:line="77" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="77" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="78" pos:column="17">int<pos:position pos:line="78" pos:column="20"/></name></type> <name pos:line="78" pos:column="21">matches<pos:position pos:line="78" pos:column="28"/></name> <init pos:line="78" pos:column="29">= <expr><literal type="number" pos:line="78" pos:column="31">0<pos:position pos:line="78" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="78" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="79" pos:column="17">struct<pos:position pos:line="79" pos:column="23"/></name> <name pos:line="79" pos:column="24">stat<pos:position pos:line="79" pos:column="28"/></name></name></type> <name pos:line="79" pos:column="29">st<pos:position pos:line="79" pos:column="31"/></name></decl>;<pos:position pos:line="79" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="80" pos:column="17">const<pos:position pos:line="80" pos:column="22"/></specifier> <name pos:line="80" pos:column="23">char<pos:position pos:line="80" pos:column="27"/></name> <modifier pos:line="80" pos:column="28">*<pos:position pos:line="80" pos:column="29"/></modifier></type><name pos:line="80" pos:column="29">rel<pos:position pos:line="80" pos:column="32"/></name></decl>;<pos:position pos:line="80" pos:column="33"/></decl_stmt>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><call><name pos:line="82" pos:column="22">cache_name_is_other<pos:position pos:line="82" pos:column="41"/></name><argument_list pos:line="82" pos:column="41">(<argument><expr><name><name pos:line="82" pos:column="42">ent<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">-&gt;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="47">name<pos:position pos:line="82" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="53">ent<pos:position pos:line="82" pos:column="56"/></name><operator pos:line="82" pos:column="56">-&gt;<pos:position pos:line="82" pos:column="61"/></operator><name pos:line="82" pos:column="58">len<pos:position pos:line="82" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="63"/></condition><then pos:line="82" pos:column="63">
			<block type="pseudo"><continue pos:line="83" pos:column="25">continue;<pos:position pos:line="83" pos:column="34"/></continue></block></then></if>

		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name><name pos:line="85" pos:column="21">pathspec<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">.<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="30">nr<pos:position pos:line="85" pos:column="32"/></name></name></expr>)<pos:position pos:line="85" pos:column="33"/></condition><then pos:line="85" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="25">matches<pos:position pos:line="86" pos:column="32"/></name> <operator pos:line="86" pos:column="33">=<pos:position pos:line="86" pos:column="34"/></operator> <call><name pos:line="86" pos:column="35">dir_path_match<pos:position pos:line="86" pos:column="49"/></name><argument_list pos:line="86" pos:column="49">(<argument><expr><name pos:line="86" pos:column="50">ent<pos:position pos:line="86" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="55">&amp;<pos:position pos:line="86" pos:column="60"/></operator><name pos:line="86" pos:column="56">pathspec<pos:position pos:line="86" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="66">0<pos:position pos:line="86" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="69">NULL<pos:position pos:line="86" pos:column="73"/></name></expr></argument>)<pos:position pos:line="86" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="75"/></expr_stmt></block></then></if>

		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><name><name pos:line="88" pos:column="21">pathspec<pos:position pos:line="88" pos:column="29"/></name><operator pos:line="88" pos:column="29">.<pos:position pos:line="88" pos:column="30"/></operator><name pos:line="88" pos:column="30">nr<pos:position pos:line="88" pos:column="32"/></name></name> <operator pos:line="88" pos:column="33">&amp;&amp;<pos:position pos:line="88" pos:column="43"/></operator> <operator pos:line="88" pos:column="36">!<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="37">matches<pos:position pos:line="88" pos:column="44"/></name></expr>)<pos:position pos:line="88" pos:column="45"/></condition><then pos:line="88" pos:column="45">
			<block type="pseudo"><continue pos:line="89" pos:column="25">continue;<pos:position pos:line="89" pos:column="34"/></continue></block></then></if>

		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><call><name pos:line="91" pos:column="21">lstat<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">(<argument><expr><name><name pos:line="91" pos:column="27">ent<pos:position pos:line="91" pos:column="30"/></name><operator pos:line="91" pos:column="30">-&gt;<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="32">name<pos:position pos:line="91" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="38">&amp;<pos:position pos:line="91" pos:column="43"/></operator><name pos:line="91" pos:column="39">st<pos:position pos:line="91" pos:column="41"/></name></expr></argument>)<pos:position pos:line="91" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="43"/></condition><then pos:line="91" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="25">die_errno<pos:position pos:line="92" pos:column="34"/></name><argument_list pos:line="92" pos:column="34">(<argument><expr><literal type="string" pos:line="92" pos:column="35">"Cannot lstat '%s'"<pos:position pos:line="92" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="56">ent<pos:position pos:line="92" pos:column="59"/></name><operator pos:line="92" pos:column="59">-&gt;<pos:position pos:line="92" pos:column="64"/></operator><name pos:line="92" pos:column="61">name<pos:position pos:line="92" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="67"/></expr_stmt></block></then></if>

		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><call><name pos:line="94" pos:column="21">S_ISDIR<pos:position pos:line="94" pos:column="28"/></name><argument_list pos:line="94" pos:column="28">(<argument><expr><name><name pos:line="94" pos:column="29">st<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">.<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="32">st_mode<pos:position pos:line="94" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="40"/></argument_list></call> <operator pos:line="94" pos:column="41">&amp;&amp;<pos:position pos:line="94" pos:column="51"/></operator> <operator pos:line="94" pos:column="44">!<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="45">remove_directories<pos:position pos:line="94" pos:column="63"/></name> <operator pos:line="94" pos:column="64">&amp;&amp;<pos:position pos:line="94" pos:column="74"/></operator>
		    <name pos:line="95" pos:column="21">matches<pos:position pos:line="95" pos:column="28"/></name> <operator pos:line="95" pos:column="29">!=<pos:position pos:line="95" pos:column="31"/></operator> <name pos:line="95" pos:column="32">MATCHED_EXACTLY<pos:position pos:line="95" pos:column="47"/></name></expr>)<pos:position pos:line="95" pos:column="48"/></condition><then pos:line="95" pos:column="48">
			<block type="pseudo"><continue pos:line="96" pos:column="25">continue;<pos:position pos:line="96" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="98" pos:column="17">rel<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <call><name pos:line="98" pos:column="23">relative_path<pos:position pos:line="98" pos:column="36"/></name><argument_list pos:line="98" pos:column="36">(<argument><expr><name><name pos:line="98" pos:column="37">ent<pos:position pos:line="98" pos:column="40"/></name><operator pos:line="98" pos:column="40">-&gt;<pos:position pos:line="98" pos:column="45"/></operator><name pos:line="98" pos:column="42">name<pos:position pos:line="98" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="48">prefix<pos:position pos:line="98" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="56">&amp;<pos:position pos:line="98" pos:column="61"/></operator><name pos:line="98" pos:column="57">buf<pos:position pos:line="98" pos:column="60"/></name></expr></argument>)<pos:position pos:line="98" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">string_list_append<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">(<argument><expr><operator pos:line="99" pos:column="36">&amp;<pos:position pos:line="99" pos:column="41"/></operator><name pos:line="99" pos:column="37">del_list<pos:position pos:line="99" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="47">rel<pos:position pos:line="99" pos:column="50"/></name></expr></argument>)<pos:position pos:line="99" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="100" pos:column="10"/></block></for>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">interactive<pos:position pos:line="102" pos:column="24"/></name> <operator pos:line="102" pos:column="25">&amp;&amp;<pos:position pos:line="102" pos:column="35"/></operator> <name><name pos:line="102" pos:column="28">del_list<pos:position pos:line="102" pos:column="36"/></name><operator pos:line="102" pos:column="36">.<pos:position pos:line="102" pos:column="37"/></operator><name pos:line="102" pos:column="37">nr<pos:position pos:line="102" pos:column="39"/></name></name> <operator pos:line="102" pos:column="40">&gt;<pos:position pos:line="102" pos:column="44"/></operator> <literal type="number" pos:line="102" pos:column="42">0<pos:position pos:line="102" pos:column="43"/></literal></expr>)<pos:position pos:line="102" pos:column="44"/></condition><then pos:line="102" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="17">interactive_main_loop<pos:position pos:line="103" pos:column="38"/></name><argument_list pos:line="103" pos:column="38">()<pos:position pos:line="103" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="41"/></expr_stmt></block></then></if>

	<macro><name pos:line="105" pos:column="9">for_each_string_list_item<pos:position pos:line="105" pos:column="34"/></name><argument_list pos:line="105" pos:column="34">(<argument pos:line="105" pos:column="35">item<pos:position pos:line="105" pos:column="39"/></argument>, <argument pos:line="105" pos:column="41">&amp;del_list<pos:position pos:line="105" pos:column="50"/></argument>)<pos:position pos:line="105" pos:column="51"/></argument_list></macro> <block pos:line="105" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="106" pos:column="17">struct<pos:position pos:line="106" pos:column="23"/></name> <name pos:line="106" pos:column="24">stat<pos:position pos:line="106" pos:column="28"/></name></name></type> <name pos:line="106" pos:column="29">st<pos:position pos:line="106" pos:column="31"/></name></decl>;<pos:position pos:line="106" pos:column="32"/></decl_stmt>

		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">prefix<pos:position pos:line="108" pos:column="27"/></name></expr>)<pos:position pos:line="108" pos:column="28"/></condition><then pos:line="108" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="25">strbuf_addstr<pos:position pos:line="109" pos:column="38"/></name><argument_list pos:line="109" pos:column="38">(<argument><expr><operator pos:line="109" pos:column="39">&amp;<pos:position pos:line="109" pos:column="44"/></operator><name pos:line="109" pos:column="40">abs_path<pos:position pos:line="109" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="50">prefix<pos:position pos:line="109" pos:column="56"/></name></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="58"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="111" pos:column="17">strbuf_addstr<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><operator pos:line="111" pos:column="31">&amp;<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="32">abs_path<pos:position pos:line="111" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="42">item<pos:position pos:line="111" pos:column="46"/></name><operator pos:line="111" pos:column="46">-&gt;<pos:position pos:line="111" pos:column="51"/></operator><name pos:line="111" pos:column="48">string<pos:position pos:line="111" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="56"/></expr_stmt>

		<comment type="block" pos:line="113" pos:column="17">/*
		 * we might have removed this as part of earlier
		 * recursive directory removal, so lstat() here could
		 * fail with ENOENT.
		 */</comment>
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><call><name pos:line="118" pos:column="21">lstat<pos:position pos:line="118" pos:column="26"/></name><argument_list pos:line="118" pos:column="26">(<argument><expr><name><name pos:line="118" pos:column="27">abs_path<pos:position pos:line="118" pos:column="35"/></name><operator pos:line="118" pos:column="35">.<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="36">buf<pos:position pos:line="118" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="41">&amp;<pos:position pos:line="118" pos:column="46"/></operator><name pos:line="118" pos:column="42">st<pos:position pos:line="118" pos:column="44"/></name></expr></argument>)<pos:position pos:line="118" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="46"/></condition><then pos:line="118" pos:column="46">
			<block type="pseudo"><continue pos:line="119" pos:column="25">continue;<pos:position pos:line="119" pos:column="34"/></continue></block></then></if>

		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><call><name pos:line="121" pos:column="21">S_ISDIR<pos:position pos:line="121" pos:column="28"/></name><argument_list pos:line="121" pos:column="28">(<argument><expr><name><name pos:line="121" pos:column="29">st<pos:position pos:line="121" pos:column="31"/></name><operator pos:line="121" pos:column="31">.<pos:position pos:line="121" pos:column="32"/></operator><name pos:line="121" pos:column="32">st_mode<pos:position pos:line="121" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="41"/></condition><then pos:line="121" pos:column="41"> <block pos:line="121" pos:column="42">{
			<if pos:line="122" pos:column="25">if <condition pos:line="122" pos:column="28">(<expr><call><name pos:line="122" pos:column="29">remove_dirs<pos:position pos:line="122" pos:column="40"/></name><argument_list pos:line="122" pos:column="40">(<argument><expr><operator pos:line="122" pos:column="41">&amp;<pos:position pos:line="122" pos:column="46"/></operator><name pos:line="122" pos:column="42">abs_path<pos:position pos:line="122" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="52">prefix<pos:position pos:line="122" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="60">rm_flags<pos:position pos:line="122" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="70">dry_run<pos:position pos:line="122" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="79">quiet<pos:position pos:line="122" pos:column="84"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="86">&amp;<pos:position pos:line="122" pos:column="91"/></operator><name pos:line="122" pos:column="87">gone<pos:position pos:line="122" pos:column="91"/></name></expr></argument>)<pos:position pos:line="122" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="93"/></condition><then pos:line="122" pos:column="93">
				<block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="33">errors<pos:position pos:line="123" pos:column="39"/></name><operator pos:line="123" pos:column="39">++<pos:position pos:line="123" pos:column="41"/></operator></expr>;<pos:position pos:line="123" pos:column="42"/></expr_stmt></block></then></if>
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><name pos:line="124" pos:column="29">gone<pos:position pos:line="124" pos:column="33"/></name> <operator pos:line="124" pos:column="34">&amp;&amp;<pos:position pos:line="124" pos:column="44"/></operator> <operator pos:line="124" pos:column="37">!<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="38">quiet<pos:position pos:line="124" pos:column="43"/></name></expr>)<pos:position pos:line="124" pos:column="44"/></condition><then pos:line="124" pos:column="44"> <block pos:line="124" pos:column="45">{
				<expr_stmt><expr><name pos:line="125" pos:column="33">qname<pos:position pos:line="125" pos:column="38"/></name> <operator pos:line="125" pos:column="39">=<pos:position pos:line="125" pos:column="40"/></operator> <call><name pos:line="125" pos:column="41">quote_path_relative<pos:position pos:line="125" pos:column="60"/></name><argument_list pos:line="125" pos:column="60">(<argument><expr><name><name pos:line="125" pos:column="61">item<pos:position pos:line="125" pos:column="65"/></name><operator pos:line="125" pos:column="65">-&gt;<pos:position pos:line="125" pos:column="70"/></operator><name pos:line="125" pos:column="67">string<pos:position pos:line="125" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="75">NULL<pos:position pos:line="125" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="81">&amp;<pos:position pos:line="125" pos:column="86"/></operator><name pos:line="125" pos:column="82">buf<pos:position pos:line="125" pos:column="85"/></name></expr></argument>)<pos:position pos:line="125" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="87"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="126" pos:column="33">printf<pos:position pos:line="126" pos:column="39"/></name><argument_list pos:line="126" pos:column="39">(<argument><expr><ternary><condition><expr><name pos:line="126" pos:column="40">dry_run<pos:position pos:line="126" pos:column="47"/></name></expr> ?<pos:position pos:line="126" pos:column="49"/></condition><then pos:line="126" pos:column="49"> <expr><call><name pos:line="126" pos:column="50">_<pos:position pos:line="126" pos:column="51"/></name><argument_list pos:line="126" pos:column="51">(<argument><expr><name pos:line="126" pos:column="52">msg_would_remove<pos:position pos:line="126" pos:column="68"/></name></expr></argument>)<pos:position pos:line="126" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="126" pos:column="70"/></then><else pos:line="126" pos:column="70">: <expr><call><name pos:line="126" pos:column="72">_<pos:position pos:line="126" pos:column="73"/></name><argument_list pos:line="126" pos:column="73">(<argument><expr><name pos:line="126" pos:column="74">msg_remove<pos:position pos:line="126" pos:column="84"/></name></expr></argument>)<pos:position pos:line="126" pos:column="85"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="126" pos:column="87">qname<pos:position pos:line="126" pos:column="92"/></name></expr></argument>)<pos:position pos:line="126" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="94"/></expr_stmt>
			}<pos:position pos:line="127" pos:column="26"/></block></then></if>
		}<pos:position pos:line="128" pos:column="18"/></block></then> <else pos:line="128" pos:column="19">else <block pos:line="128" pos:column="24">{
			<expr_stmt><expr><name pos:line="129" pos:column="25">res<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">=<pos:position pos:line="129" pos:column="30"/></operator> <ternary><condition><expr><name pos:line="129" pos:column="31">dry_run<pos:position pos:line="129" pos:column="38"/></name></expr> ?<pos:position pos:line="129" pos:column="40"/></condition><then pos:line="129" pos:column="40"> <expr><literal type="number" pos:line="129" pos:column="41">0<pos:position pos:line="129" pos:column="42"/></literal></expr> <pos:position pos:line="129" pos:column="43"/></then><else pos:line="129" pos:column="43">: <expr><call><name pos:line="129" pos:column="45">unlink<pos:position pos:line="129" pos:column="51"/></name><argument_list pos:line="129" pos:column="51">(<argument><expr><name><name pos:line="129" pos:column="52">abs_path<pos:position pos:line="129" pos:column="60"/></name><operator pos:line="129" pos:column="60">.<pos:position pos:line="129" pos:column="61"/></operator><name pos:line="129" pos:column="61">buf<pos:position pos:line="129" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="65"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="129" pos:column="66"/></expr_stmt>
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><name pos:line="130" pos:column="29">res<pos:position pos:line="130" pos:column="32"/></name></expr>)<pos:position pos:line="130" pos:column="33"/></condition><then pos:line="130" pos:column="33"> <block pos:line="130" pos:column="34">{
				<expr_stmt><expr><name pos:line="131" pos:column="33">qname<pos:position pos:line="131" pos:column="38"/></name> <operator pos:line="131" pos:column="39">=<pos:position pos:line="131" pos:column="40"/></operator> <call><name pos:line="131" pos:column="41">quote_path_relative<pos:position pos:line="131" pos:column="60"/></name><argument_list pos:line="131" pos:column="60">(<argument><expr><name><name pos:line="131" pos:column="61">item<pos:position pos:line="131" pos:column="65"/></name><operator pos:line="131" pos:column="65">-&gt;<pos:position pos:line="131" pos:column="70"/></operator><name pos:line="131" pos:column="67">string<pos:position pos:line="131" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="75">NULL<pos:position pos:line="131" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="81">&amp;<pos:position pos:line="131" pos:column="86"/></operator><name pos:line="131" pos:column="82">buf<pos:position pos:line="131" pos:column="85"/></name></expr></argument>)<pos:position pos:line="131" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="87"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="132" pos:column="33">warning<pos:position pos:line="132" pos:column="40"/></name><argument_list pos:line="132" pos:column="40">(<argument><expr><call><name pos:line="132" pos:column="41">_<pos:position pos:line="132" pos:column="42"/></name><argument_list pos:line="132" pos:column="42">(<argument><expr><name pos:line="132" pos:column="43">msg_warn_remove_failed<pos:position pos:line="132" pos:column="65"/></name></expr></argument>)<pos:position pos:line="132" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="132" pos:column="68">qname<pos:position pos:line="132" pos:column="73"/></name></expr></argument>)<pos:position pos:line="132" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><name pos:line="133" pos:column="33">errors<pos:position pos:line="133" pos:column="39"/></name><operator pos:line="133" pos:column="39">++<pos:position pos:line="133" pos:column="41"/></operator></expr>;<pos:position pos:line="133" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="134" pos:column="26"/></block></then> <elseif pos:line="134" pos:column="27">else <if pos:line="134" pos:column="32">if <condition pos:line="134" pos:column="35">(<expr><operator pos:line="134" pos:column="36">!<pos:position pos:line="134" pos:column="37"/></operator><name pos:line="134" pos:column="37">quiet<pos:position pos:line="134" pos:column="42"/></name></expr>)<pos:position pos:line="134" pos:column="43"/></condition><then pos:line="134" pos:column="43"> <block pos:line="134" pos:column="44">{
				<expr_stmt><expr><name pos:line="135" pos:column="33">qname<pos:position pos:line="135" pos:column="38"/></name> <operator pos:line="135" pos:column="39">=<pos:position pos:line="135" pos:column="40"/></operator> <call><name pos:line="135" pos:column="41">quote_path_relative<pos:position pos:line="135" pos:column="60"/></name><argument_list pos:line="135" pos:column="60">(<argument><expr><name><name pos:line="135" pos:column="61">item<pos:position pos:line="135" pos:column="65"/></name><operator pos:line="135" pos:column="65">-&gt;<pos:position pos:line="135" pos:column="70"/></operator><name pos:line="135" pos:column="67">string<pos:position pos:line="135" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="75">NULL<pos:position pos:line="135" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="81">&amp;<pos:position pos:line="135" pos:column="86"/></operator><name pos:line="135" pos:column="82">buf<pos:position pos:line="135" pos:column="85"/></name></expr></argument>)<pos:position pos:line="135" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="87"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="136" pos:column="33">printf<pos:position pos:line="136" pos:column="39"/></name><argument_list pos:line="136" pos:column="39">(<argument><expr><ternary><condition><expr><name pos:line="136" pos:column="40">dry_run<pos:position pos:line="136" pos:column="47"/></name></expr> ?<pos:position pos:line="136" pos:column="49"/></condition><then pos:line="136" pos:column="49"> <expr><call><name pos:line="136" pos:column="50">_<pos:position pos:line="136" pos:column="51"/></name><argument_list pos:line="136" pos:column="51">(<argument><expr><name pos:line="136" pos:column="52">msg_would_remove<pos:position pos:line="136" pos:column="68"/></name></expr></argument>)<pos:position pos:line="136" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="136" pos:column="70"/></then><else pos:line="136" pos:column="70">: <expr><call><name pos:line="136" pos:column="72">_<pos:position pos:line="136" pos:column="73"/></name><argument_list pos:line="136" pos:column="73">(<argument><expr><name pos:line="136" pos:column="74">msg_remove<pos:position pos:line="136" pos:column="84"/></name></expr></argument>)<pos:position pos:line="136" pos:column="85"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="136" pos:column="87">qname<pos:position pos:line="136" pos:column="92"/></name></expr></argument>)<pos:position pos:line="136" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="94"/></expr_stmt>
			}<pos:position pos:line="137" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="138" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="139" pos:column="17">strbuf_reset<pos:position pos:line="139" pos:column="29"/></name><argument_list pos:line="139" pos:column="29">(<argument><expr><operator pos:line="139" pos:column="30">&amp;<pos:position pos:line="139" pos:column="35"/></operator><name pos:line="139" pos:column="31">abs_path<pos:position pos:line="139" pos:column="39"/></name></expr></argument>)<pos:position pos:line="139" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="140" pos:column="10"/></block>

	<expr_stmt><expr><call><name pos:line="142" pos:column="9">strbuf_release<pos:position pos:line="142" pos:column="23"/></name><argument_list pos:line="142" pos:column="23">(<argument><expr><operator pos:line="142" pos:column="24">&amp;<pos:position pos:line="142" pos:column="29"/></operator><name pos:line="142" pos:column="25">abs_path<pos:position pos:line="142" pos:column="33"/></name></expr></argument>)<pos:position pos:line="142" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="143" pos:column="9">strbuf_release<pos:position pos:line="143" pos:column="23"/></name><argument_list pos:line="143" pos:column="23">(<argument><expr><operator pos:line="143" pos:column="24">&amp;<pos:position pos:line="143" pos:column="29"/></operator><name pos:line="143" pos:column="25">buf<pos:position pos:line="143" pos:column="28"/></name></expr></argument>)<pos:position pos:line="143" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="144" pos:column="9">string_list_clear<pos:position pos:line="144" pos:column="26"/></name><argument_list pos:line="144" pos:column="26">(<argument><expr><operator pos:line="144" pos:column="27">&amp;<pos:position pos:line="144" pos:column="32"/></operator><name pos:line="144" pos:column="28">del_list<pos:position pos:line="144" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="38">0<pos:position pos:line="144" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="145" pos:column="9">string_list_clear<pos:position pos:line="145" pos:column="26"/></name><argument_list pos:line="145" pos:column="26">(<argument><expr><operator pos:line="145" pos:column="27">&amp;<pos:position pos:line="145" pos:column="32"/></operator><name pos:line="145" pos:column="28">exclude_list<pos:position pos:line="145" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="42">0<pos:position pos:line="145" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="45"/></expr_stmt>
	<return pos:line="146" pos:column="9">return <expr><operator pos:line="146" pos:column="16">(<pos:position pos:line="146" pos:column="17"/></operator><name pos:line="146" pos:column="17">errors<pos:position pos:line="146" pos:column="23"/></name> <operator pos:line="146" pos:column="24">!=<pos:position pos:line="146" pos:column="26"/></operator> <literal type="number" pos:line="146" pos:column="27">0<pos:position pos:line="146" pos:column="28"/></literal><operator pos:line="146" pos:column="28">)<pos:position pos:line="146" pos:column="29"/></operator></expr>;<pos:position pos:line="146" pos:column="30"/></return>
}<pos:position pos:line="147" pos:column="2"/></block></function></unit>

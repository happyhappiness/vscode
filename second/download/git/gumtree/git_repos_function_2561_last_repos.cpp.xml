<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2561_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_range_arg<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">arg<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">nth_line_fn_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">nth_line_cb<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">cb_data<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">long<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">lines<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">long<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">anchor<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="3" pos:column="21">long<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">begin<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="34">long<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">end<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="45">const<pos:position pos:line="3" pos:column="50"/></specifier> <name pos:line="3" pos:column="51">char<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">path<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">begin<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <operator pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">end<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator> <literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">anchor<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&lt;<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">anchor<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">anchor<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&gt;<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="22">lines<pos:position pos:line="9" pos:column="27"/></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">anchor<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">lines<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">+<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">arg<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <literal type="char" pos:line="12" pos:column="21">':'<pos:position pos:line="12" pos:column="24"/></literal> <operator pos:line="12" pos:column="25">||<pos:position pos:line="12" pos:column="27"/></operator> <operator pos:line="12" pos:column="28">(<pos:position pos:line="12" pos:column="29"/></operator><operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">arg<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator> <literal type="char" pos:line="12" pos:column="37">'^'<pos:position pos:line="12" pos:column="40"/></literal> <operator pos:line="12" pos:column="41">&amp;&amp;<pos:position pos:line="12" pos:column="51"/></operator> <operator pos:line="12" pos:column="44">*<pos:position pos:line="12" pos:column="45"/></operator><operator pos:line="12" pos:column="45">(<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">arg<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">+<pos:position pos:line="12" pos:column="51"/></operator> <literal type="number" pos:line="12" pos:column="52">1<pos:position pos:line="12" pos:column="53"/></literal><operator pos:line="12" pos:column="53">)<pos:position pos:line="12" pos:column="54"/></operator> <operator pos:line="12" pos:column="55">==<pos:position pos:line="12" pos:column="57"/></operator> <literal type="char" pos:line="12" pos:column="58">':'<pos:position pos:line="12" pos:column="61"/></literal><operator pos:line="12" pos:column="61">)<pos:position pos:line="12" pos:column="62"/></operator></expr>)<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63"> <block pos:line="12" pos:column="64">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">arg<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">parse_range_funcname<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">arg<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">nth_line_cb<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="62">cb_data<pos:position pos:line="13" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="71">lines<pos:position pos:line="13" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="78">anchor<pos:position pos:line="13" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="86">begin<pos:position pos:line="13" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="93">end<pos:position pos:line="13" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="98">path<pos:position pos:line="13" pos:column="102"/></name></expr></argument>)<pos:position pos:line="13" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="104"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">arg<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">||<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">arg<pos:position pos:line="14" pos:column="33"/></name></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><operator pos:line="15" pos:column="32">-<pos:position pos:line="15" pos:column="33"/></operator><literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></return></block></then></if>
		<return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">arg<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">parse_loc<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">arg<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">nth_line_cb<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">cb_data<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">lines<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="59">-<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="60">anchor<pos:position pos:line="19" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="68">begin<pos:position pos:line="19" pos:column="73"/></name></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">arg<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <literal type="char" pos:line="21" pos:column="21">','<pos:position pos:line="21" pos:column="24"/></literal></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">arg<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">parse_loc<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">arg<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">+<pos:position pos:line="22" pos:column="38"/></operator> <literal type="number" pos:line="22" pos:column="39">1<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">nth_line_cb<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="55">cb_data<pos:position pos:line="22" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="64">lines<pos:position pos:line="22" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="71">*<pos:position pos:line="22" pos:column="72"/></operator><name pos:line="22" pos:column="72">begin<pos:position pos:line="22" pos:column="77"/></name> <operator pos:line="22" pos:column="78">+<pos:position pos:line="22" pos:column="79"/></operator> <literal type="number" pos:line="22" pos:column="80">1<pos:position pos:line="22" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="83">end<pos:position pos:line="22" pos:column="86"/></name></expr></argument>)<pos:position pos:line="22" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="88"/></expr_stmt></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">arg<pos:position pos:line="24" pos:column="17"/></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">-<pos:position pos:line="25" pos:column="25"/></operator><literal type="number" pos:line="25" pos:column="25">1<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></return></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">*<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">begin<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">&amp;&amp;<pos:position pos:line="27" pos:column="30"/></operator> <operator pos:line="27" pos:column="23">*<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">end<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">&amp;&amp;<pos:position pos:line="27" pos:column="38"/></operator> <operator pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">end<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">&lt;<pos:position pos:line="27" pos:column="40"/></operator> <operator pos:line="27" pos:column="38">*<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">begin<pos:position pos:line="27" pos:column="44"/></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">SWAP<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><operator pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">end<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">begin<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

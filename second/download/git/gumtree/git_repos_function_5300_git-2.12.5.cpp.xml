<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5300_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">NORETURN<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">void<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">bad_object<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">off_t<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">offset<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">format<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="67">...<pos:position pos:line="1" pos:column="70"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">va_list<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">params<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buf<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1024<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">va_start<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">params<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="26">format<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">vsnprintf<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">buf<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="24">sizeof<argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">buf<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="7" pos:column="37">format<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">params<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">va_end<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">params<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">die<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><call><name pos:line="9" pos:column="13">_<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"pack has bad object at offset %"<pos:position pos:line="9" pos:column="48"/></literal><name pos:line="9" pos:column="48">PRIuMAX<pos:position pos:line="9" pos:column="55"/></name><literal type="string" pos:line="9" pos:column="55">": %s"<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></argument>,
	    <argument><expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">uintmax_t<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">)<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">offset<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">buf<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

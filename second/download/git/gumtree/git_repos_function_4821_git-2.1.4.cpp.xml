<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4821_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">import_marks<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">input_file<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">line<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">512<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">f<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">fopen<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">input_file<pos:position pos:line="4" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="37">"r"<pos:position pos:line="4" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">f<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die_errno<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><literal type="string" pos:line="6" pos:column="27">"cannot read '%s'"<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">input_file<pos:position pos:line="6" pos:column="57"/></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt></block></then></if>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><call><name pos:line="8" pos:column="16">fgets<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">line<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="28">sizeof<argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">line<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">f<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="45"/></condition> <block pos:line="8" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">uint32_t<pos:position pos:line="9" pos:column="25"/></name></type> <name pos:line="9" pos:column="26">mark<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">line_end<pos:position pos:line="10" pos:column="31"/></name></decl>, <modifier pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="34">mark_end<pos:position pos:line="10" pos:column="42"/></name></decl>;<pos:position pos:line="10" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">unsigned<pos:position pos:line="11" pos:column="25"/></name> <name pos:line="11" pos:column="26">char<pos:position pos:line="11" pos:column="30"/></name></type> <name><name pos:line="11" pos:column="31">sha1<pos:position pos:line="11" pos:column="35"/></name><index pos:line="11" pos:column="35">[<expr><literal type="number" pos:line="11" pos:column="36">20<pos:position pos:line="11" pos:column="38"/></literal></expr>]<pos:position pos:line="11" pos:column="39"/></index></name></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object<pos:position pos:line="12" pos:column="30"/></name></name> <modifier pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></modifier></type><name pos:line="12" pos:column="32">object<pos:position pos:line="12" pos:column="38"/></name></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">commit<pos:position pos:line="13" pos:column="30"/></name></name> <modifier pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></modifier></type><name pos:line="13" pos:column="32">commit<pos:position pos:line="13" pos:column="38"/></name></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">enum<pos:position pos:line="14" pos:column="21"/></name> <name pos:line="14" pos:column="22">object_type<pos:position pos:line="14" pos:column="33"/></name></name></type> <name pos:line="14" pos:column="34">type<pos:position pos:line="14" pos:column="38"/></name></decl>;<pos:position pos:line="14" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><name pos:line="16" pos:column="17">line_end<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <call><name pos:line="16" pos:column="28">strchr<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">line<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="41">'\n'<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">line<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[<expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr>]<pos:position pos:line="17" pos:column="28"/></index></name> <operator pos:line="17" pos:column="29">!=<pos:position pos:line="17" pos:column="31"/></operator> <literal type="char" pos:line="17" pos:column="32">':'<pos:position pos:line="17" pos:column="35"/></literal> <operator pos:line="17" pos:column="36">||<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="39">!<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">line_end<pos:position pos:line="17" pos:column="48"/></name></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">die<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"corrupt mark line: %s"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">line<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">line_end<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="char" pos:line="19" pos:column="29">'\0'<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>

		<expr_stmt><expr><name pos:line="21" pos:column="17">mark<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">strtoumax<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">line<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">+<pos:position pos:line="21" pos:column="40"/></operator> <literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">mark_end<pos:position pos:line="21" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="55">10<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">mark<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">||<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">mark_end<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">==<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">line<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">+<pos:position pos:line="22" pos:column="48"/></operator> <literal type="number" pos:line="22" pos:column="49">1<pos:position pos:line="22" pos:column="50"/></literal>
			<operator pos:line="23" pos:column="25">||<pos:position pos:line="23" pos:column="27"/></operator> <operator pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">mark_end<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">!=<pos:position pos:line="23" pos:column="40"/></operator> <literal type="char" pos:line="23" pos:column="41">' '<pos:position pos:line="23" pos:column="44"/></literal> <operator pos:line="23" pos:column="45">||<pos:position pos:line="23" pos:column="47"/></operator> <call><name pos:line="23" pos:column="48">get_sha1_hex<pos:position pos:line="23" pos:column="60"/></name><argument_list pos:line="23" pos:column="60">(<argument><expr><name pos:line="23" pos:column="61">mark_end<pos:position pos:line="23" pos:column="69"/></name> <operator pos:line="23" pos:column="70">+<pos:position pos:line="23" pos:column="71"/></operator> <literal type="number" pos:line="23" pos:column="72">1<pos:position pos:line="23" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="75">sha1<pos:position pos:line="23" pos:column="79"/></name></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="81"/></condition><then pos:line="23" pos:column="81">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="string" pos:line="24" pos:column="29">"corrupt mark line: %s"<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="54">line<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt></block></then></if>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">last_idnum<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&lt;<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="34">mark<pos:position pos:line="26" pos:column="38"/></name></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">last_idnum<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">=<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">mark<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="29" pos:column="17">type<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="24">sha1_object_info<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">sha1<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">NULL<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">type<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">&lt;<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"object not found: %s"<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="53">sha1_to_hex<pos:position pos:line="31" pos:column="64"/></name><argument_list pos:line="31" pos:column="64">(<argument><expr><name pos:line="31" pos:column="65">sha1<pos:position pos:line="31" pos:column="69"/></name></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt></block></then></if>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">type<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">!=<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="29">OBJ_COMMIT<pos:position pos:line="33" pos:column="39"/></name></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40">
			<comment type="block" pos:line="34" pos:column="25">/* only commits */</comment>
			<block type="pseudo"><continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="37" pos:column="17">commit<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">lookup_commit<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">sha1<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">commit<pos:position pos:line="38" pos:column="28"/></name></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">die<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><literal type="string" pos:line="39" pos:column="29">"not a commit? can't happen: %s"<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="63">sha1_to_hex<pos:position pos:line="39" pos:column="74"/></name><argument_list pos:line="39" pos:column="74">(<argument><expr><name pos:line="39" pos:column="75">sha1<pos:position pos:line="39" pos:column="79"/></name></expr></argument>)<pos:position pos:line="39" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="82"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="41" pos:column="17">object<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <operator pos:line="41" pos:column="26">&amp;<pos:position pos:line="41" pos:column="31"/></operator><name><name pos:line="41" pos:column="27">commit<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">-&gt;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="35">object<pos:position pos:line="41" pos:column="41"/></name></name></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">object<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">flags<pos:position pos:line="43" pos:column="34"/></name></name> <operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator> <name pos:line="43" pos:column="37">SHOWN<pos:position pos:line="43" pos:column="42"/></name></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">error<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><literal type="string" pos:line="44" pos:column="31">"Object %s already has a mark"<pos:position pos:line="44" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="63">sha1_to_hex<pos:position pos:line="44" pos:column="74"/></name><argument_list pos:line="44" pos:column="74">(<argument><expr><name pos:line="44" pos:column="75">sha1<pos:position pos:line="44" pos:column="79"/></name></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="82"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="46" pos:column="17">mark_object<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">object<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">mark<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="48" pos:column="17">object<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">flags<pos:position pos:line="48" pos:column="30"/></name></name> <operator pos:line="48" pos:column="31">|=<pos:position pos:line="48" pos:column="33"/></operator> <name pos:line="48" pos:column="34">SHOWN<pos:position pos:line="48" pos:column="39"/></name></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">fclose<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">f<pos:position pos:line="50" pos:column="17"/></name></expr></argument>)<pos:position pos:line="50" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

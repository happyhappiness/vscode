<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3718_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_default_submodule_config<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">var<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">value<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">void<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">cb<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">var<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="26">"submodule.recurse"<pos:position pos:line="3" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47"> <block pos:line="3" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">v<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><ternary><condition><expr><call><name pos:line="4" pos:column="25">git_config_bool<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">var<pos:position pos:line="4" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="46">value<pos:position pos:line="4" pos:column="51"/></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr> ?<pos:position pos:line="4" pos:column="54"/></condition><then pos:line="4" pos:column="54">
			<expr><name pos:line="5" pos:column="25">RECURSE_SUBMODULES_ON<pos:position pos:line="5" pos:column="46"/></name></expr> <pos:position pos:line="5" pos:column="47"/></then><else pos:line="5" pos:column="47">: <expr><name pos:line="5" pos:column="49">RECURSE_SUBMODULES_OFF<pos:position pos:line="5" pos:column="71"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>
		<expr_stmt><expr><name pos:line="6" pos:column="17">config_update_recurse_submodules<pos:position pos:line="6" pos:column="49"/></name> <operator pos:line="6" pos:column="50">=<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="52">v<pos:position pos:line="6" pos:column="53"/></name></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

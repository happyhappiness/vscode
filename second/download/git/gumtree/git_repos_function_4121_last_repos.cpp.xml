<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4121_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">lazy_dir_thread_proc<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">_data<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">lazy_dir_thread_data<pos:position pos:line="3" pos:column="36"/></name></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">d<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><name pos:line="3" pos:column="42">_data<pos:position pos:line="3" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">prefix<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">STRBUF_INIT<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">handle_range_1<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">d<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">istate<pos:position pos:line="5" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="35">d<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">k_start<pos:position pos:line="5" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="47">d<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">k_end<pos:position pos:line="5" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="57">NULL<pos:position pos:line="5" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="63">&amp;<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="64">prefix<pos:position pos:line="5" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="72">d<pos:position pos:line="5" pos:column="73"/></name><operator pos:line="5" pos:column="73">-&gt;<pos:position pos:line="5" pos:column="78"/></operator><name pos:line="5" pos:column="75">lazy_entries<pos:position pos:line="5" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="89"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_release<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="25">prefix<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
	<return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2452_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">common_prefix<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">pathspec<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">pathspec<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">len<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">common_prefix_len<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">pathspec<pos:position pos:line="3" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>

	<return pos:line="5" pos:column="9">return <expr><ternary><condition><expr><name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></expr> ?<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21"> <expr><call><name pos:line="5" pos:column="22">xmemdupz<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name><name pos:line="5" pos:column="31">pathspec<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">items<pos:position pos:line="5" pos:column="46"/></name><index pos:line="5" pos:column="46">[<expr><literal type="number" pos:line="5" pos:column="47">0<pos:position pos:line="5" pos:column="48"/></literal></expr>]<pos:position pos:line="5" pos:column="49"/></index></name><operator pos:line="5" pos:column="49">.<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="50">match<pos:position pos:line="5" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="57">len<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="62"/></then><else pos:line="5" pos:column="62">: <expr><name pos:line="5" pos:column="64">NULL<pos:position pos:line="5" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="69"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

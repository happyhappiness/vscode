<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5674_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cmd_log_init_finish<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">argc<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">argv<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="62">const<pos:position pos:line="1" pos:column="67"/></specifier> <name pos:line="1" pos:column="68">char<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">prefix<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">rev_info<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">rev<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="48">struct<pos:position pos:line="2" pos:column="54"/></name> <name pos:line="2" pos:column="55">setup_revision_opt<pos:position pos:line="2" pos:column="73"/></name></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">opt<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">userformat_want<pos:position pos:line="4" pos:column="31"/></name></name></type> <name pos:line="4" pos:column="32">w<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">quiet<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">source<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="36">mailmap<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name><name pos:line="6" pos:column="16">struct<pos:position pos:line="6" pos:column="22"/></name> <name pos:line="6" pos:column="23">line_opt_callback_data<pos:position pos:line="6" pos:column="45"/></name></name></type> <name pos:line="6" pos:column="46">line_cb<pos:position pos:line="6" pos:column="53"/></name> <init pos:line="6" pos:column="54">= <expr><block pos:line="6" pos:column="56">{<expr><name pos:line="6" pos:column="57">NULL<pos:position pos:line="6" pos:column="61"/></name></expr>, <expr><name pos:line="6" pos:column="63">NULL<pos:position pos:line="6" pos:column="67"/></name></expr>, <expr><name pos:line="6" pos:column="69">STRING_LIST_INIT_DUP<pos:position pos:line="6" pos:column="89"/></name></expr>}<pos:position pos:line="6" pos:column="90"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="91"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name><name pos:line="8" pos:column="15">struct<pos:position pos:line="8" pos:column="21"/></name> <name pos:line="8" pos:column="22">option<pos:position pos:line="8" pos:column="28"/></name></name></type> <name><name pos:line="8" pos:column="29">builtin_log_options<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[]<pos:position pos:line="8" pos:column="50"/></index></name> <init pos:line="8" pos:column="51">= <expr><block pos:line="8" pos:column="53">{
		<expr><call><name pos:line="9" pos:column="17">OPT__QUIET<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="29">quiet<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="36">N_<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><literal type="string" pos:line="9" pos:column="39">"suppress diff output"<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_BOOL<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="29">"source"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">&amp;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="40">source<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="48">N_<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">(<argument><expr><literal type="string" pos:line="10" pos:column="51">"show source"<pos:position pos:line="10" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_BOOL<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="29">"use-mailmap"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="45">mailmap<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="54">N_<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><literal type="string" pos:line="11" pos:column="57">"Use mail map file"<pos:position pos:line="11" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>,
		<expr><block pos:line="12" pos:column="17">{ <expr><name pos:line="12" pos:column="19">OPTION_CALLBACK<pos:position pos:line="12" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="39">"decorate"<pos:position pos:line="12" pos:column="49"/></literal></expr>, <expr><name pos:line="12" pos:column="51">NULL<pos:position pos:line="12" pos:column="55"/></name></expr>, <expr><name pos:line="12" pos:column="57">NULL<pos:position pos:line="12" pos:column="61"/></name></expr>, <expr><call><name pos:line="12" pos:column="63">N_<pos:position pos:line="12" pos:column="65"/></name><argument_list pos:line="12" pos:column="65">(<argument><expr><literal type="string" pos:line="12" pos:column="66">"decorate options"<pos:position pos:line="12" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="85"/></argument_list></call></expr>,
		  <expr><name pos:line="13" pos:column="19">PARSE_OPT_OPTARG<pos:position pos:line="13" pos:column="35"/></name></expr>, <expr><name pos:line="13" pos:column="37">decorate_callback<pos:position pos:line="13" pos:column="54"/></name></expr>}<pos:position pos:line="13" pos:column="55"/></block></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_CALLBACK<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><literal type="char" pos:line="14" pos:column="30">'L'<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">NULL<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="41">&amp;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="42">line_cb<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="51">"n,m:file"<pos:position pos:line="14" pos:column="61"/></literal></expr></argument>,
			     <argument><expr><call><name pos:line="15" pos:column="30">N_<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><literal type="string" pos:line="15" pos:column="33">"Process line range n,m in file, counting from 1"<pos:position pos:line="15" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="16" pos:column="30">log_line_range_callback<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>,
		<macro><name pos:line="17" pos:column="17">OPT_END<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="18" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="18" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">line_cb<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">rev<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">rev<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">line_cb<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">prefix<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">prefix<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="23" pos:column="9">mailmap<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">use_mailmap_config<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">argc<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">parse_options<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">argc<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">argv<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">prefix<pos:position pos:line="24" pos:column="48"/></name></expr></argument>,
			     <argument><expr><name pos:line="25" pos:column="30">builtin_log_options<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">builtin_log_usage<pos:position pos:line="25" pos:column="68"/></name></expr></argument>,
			     <argument><expr><name pos:line="26" pos:column="30">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">|<pos:position pos:line="26" pos:column="52"/></operator> <name pos:line="26" pos:column="53">PARSE_OPT_KEEP_UNKNOWN<pos:position pos:line="26" pos:column="75"/></name> <operator pos:line="26" pos:column="76">|<pos:position pos:line="26" pos:column="77"/></operator>
			     <name pos:line="27" pos:column="30">PARSE_OPT_KEEP_DASHDASH<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">quiet<pos:position pos:line="29" pos:column="18"/></name></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="17">rev<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">diffopt<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">.<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">output_format<pos:position pos:line="30" pos:column="43"/></name></name> <operator pos:line="30" pos:column="44">|=<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">DIFF_FORMAT_NO_OUTPUT<pos:position pos:line="30" pos:column="68"/></name></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="31" pos:column="9">argc<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">setup_revisions<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">argc<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">argv<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">rev<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">opt<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="33" pos:column="9">/* Any arguments at this point are not recognized */</comment>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">argc<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">&gt;<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="20">1<pos:position pos:line="34" pos:column="21"/></literal></expr>)<pos:position pos:line="34" pos:column="22"/></condition><then pos:line="34" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">die<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><call><name pos:line="35" pos:column="21">_<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><literal type="string" pos:line="35" pos:column="23">"unrecognized argument: %s"<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="53">argv<pos:position pos:line="35" pos:column="57"/></name><index pos:line="35" pos:column="57">[<expr><literal type="number" pos:line="35" pos:column="58">1<pos:position pos:line="35" pos:column="59"/></literal></expr>]<pos:position pos:line="35" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">memset<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><operator pos:line="37" pos:column="16">&amp;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="17">w<pos:position pos:line="37" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="20">0<pos:position pos:line="37" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="23">sizeof<argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">w<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">userformat_find_requirements<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">NULL<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="44">&amp;<pos:position pos:line="38" pos:column="49"/></operator><name pos:line="38" pos:column="45">w<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="14">rev<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">show_notes_given<pos:position pos:line="40" pos:column="35"/></name></name> <operator pos:line="40" pos:column="36">&amp;&amp;<pos:position pos:line="40" pos:column="46"/></operator> <operator pos:line="40" pos:column="39">(<pos:position pos:line="40" pos:column="40"/></operator><operator pos:line="40" pos:column="40">!<pos:position pos:line="40" pos:column="41"/></operator><name><name pos:line="40" pos:column="41">rev<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">-&gt;<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="46">pretty_given<pos:position pos:line="40" pos:column="58"/></name></name> <operator pos:line="40" pos:column="59">||<pos:position pos:line="40" pos:column="61"/></operator> <name><name pos:line="40" pos:column="62">w<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">.<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="64">notes<pos:position pos:line="40" pos:column="69"/></name></name><operator pos:line="40" pos:column="69">)<pos:position pos:line="40" pos:column="70"/></operator></expr>)<pos:position pos:line="40" pos:column="71"/></condition><then pos:line="40" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="17">rev<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">show_notes<pos:position pos:line="41" pos:column="32"/></name></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <literal type="number" pos:line="41" pos:column="35">1<pos:position pos:line="41" pos:column="36"/></literal></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt></block></then></if>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">rev<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">show_notes<pos:position pos:line="42" pos:column="28"/></name></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">init_display_notes<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><operator pos:line="43" pos:column="36">&amp;<pos:position pos:line="43" pos:column="41"/></operator><name><name pos:line="43" pos:column="37">rev<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">notes_opt<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt></block></then></if>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">rev<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">diffopt<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">.<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">pickaxe<pos:position pos:line="45" pos:column="33"/></name></name> <operator pos:line="45" pos:column="34">||<pos:position pos:line="45" pos:column="36"/></operator> <name><name pos:line="45" pos:column="37">rev<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">diffopt<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">.<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="50">filter<pos:position pos:line="45" pos:column="56"/></name></name> <operator pos:line="45" pos:column="57">||<pos:position pos:line="45" pos:column="59"/></operator>
	    <call><name pos:line="46" pos:column="13">DIFF_OPT_TST<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator><name><name pos:line="46" pos:column="27">rev<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">diffopt<pos:position pos:line="46" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">FOLLOW_RENAMES<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="57"/></condition><then pos:line="46" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="17">rev<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">always_show_header<pos:position pos:line="47" pos:column="40"/></name></name> <operator pos:line="47" pos:column="41">=<pos:position pos:line="47" pos:column="42"/></operator> <literal type="number" pos:line="47" pos:column="43">0<pos:position pos:line="47" pos:column="44"/></literal></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt></block></then></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">source<pos:position pos:line="49" pos:column="19"/></name></expr>)<pos:position pos:line="49" pos:column="20"/></condition><then pos:line="49" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="17">rev<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">show_source<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">=<pos:position pos:line="50" pos:column="35"/></operator> <literal type="number" pos:line="50" pos:column="36">1<pos:position pos:line="50" pos:column="37"/></literal></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt></block></then></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">mailmap<pos:position pos:line="52" pos:column="20"/></name></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21"> <block pos:line="52" pos:column="22">{
		<expr_stmt><expr><name><name pos:line="53" pos:column="17">rev<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">mailmap<pos:position pos:line="53" pos:column="29"/></name></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <call><name pos:line="53" pos:column="32">xcalloc<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><literal type="number" pos:line="53" pos:column="40">1<pos:position pos:line="53" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="43">sizeof<argument_list pos:line="53" pos:column="49">(<argument><expr pos:line="53" pos:column="50">struct <name pos:line="53" pos:column="57">string_list<pos:position pos:line="53" pos:column="68"/></name></expr></argument>)<pos:position pos:line="53" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">read_mailmap<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name><name pos:line="54" pos:column="30">rev<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">-&gt;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="35">mailmap<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">NULL<pos:position pos:line="54" pos:column="48"/></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">rev<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">pretty_given<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">&amp;&amp;<pos:position pos:line="57" pos:column="41"/></operator> <name><name pos:line="57" pos:column="34">rev<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">-&gt;<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="39">commit_format<pos:position pos:line="57" pos:column="52"/></name></name> <operator pos:line="57" pos:column="53">==<pos:position pos:line="57" pos:column="55"/></operator> <name pos:line="57" pos:column="56">CMIT_FMT_RAW<pos:position pos:line="57" pos:column="68"/></name></expr>)<pos:position pos:line="57" pos:column="69"/></condition><then pos:line="57" pos:column="69"> <block pos:line="57" pos:column="70">{
		<comment type="block" pos:line="58" pos:column="17">/*
		 * "log --pretty=raw" is special; ignore UI oriented
		 * configuration variables such as decoration.
		 */</comment>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">!<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">decoration_given<pos:position pos:line="62" pos:column="38"/></name></expr>)<pos:position pos:line="62" pos:column="39"/></condition><then pos:line="62" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="25">decoration_style<pos:position pos:line="63" pos:column="41"/></name> <operator pos:line="63" pos:column="42">=<pos:position pos:line="63" pos:column="43"/></operator> <literal type="number" pos:line="63" pos:column="44">0<pos:position pos:line="63" pos:column="45"/></literal></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt></block></then></if>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><operator pos:line="64" pos:column="21">!<pos:position pos:line="64" pos:column="22"/></operator><name><name pos:line="64" pos:column="22">rev<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">abbrev_commit_given<pos:position pos:line="64" pos:column="46"/></name></name></expr>)<pos:position pos:line="64" pos:column="47"/></condition><then pos:line="64" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="25">rev<pos:position pos:line="65" pos:column="28"/></name><operator pos:line="65" pos:column="28">-&gt;<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="30">abbrev_commit<pos:position pos:line="65" pos:column="43"/></name></name> <operator pos:line="65" pos:column="44">=<pos:position pos:line="65" pos:column="45"/></operator> <literal type="number" pos:line="65" pos:column="46">0<pos:position pos:line="65" pos:column="47"/></literal></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">decoration_style<pos:position pos:line="68" pos:column="29"/></name></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30"> <block pos:line="68" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="69" pos:column="17">rev<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">-&gt;<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="22">show_decorations<pos:position pos:line="69" pos:column="38"/></name></name> <operator pos:line="69" pos:column="39">=<pos:position pos:line="69" pos:column="40"/></operator> <literal type="number" pos:line="69" pos:column="41">1<pos:position pos:line="69" pos:column="42"/></literal></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">load_ref_decorations<pos:position pos:line="70" pos:column="37"/></name><argument_list pos:line="70" pos:column="37">(<argument><expr><name pos:line="70" pos:column="38">decoration_style<pos:position pos:line="70" pos:column="54"/></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">rev<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">line_level_traverse<pos:position pos:line="73" pos:column="37"/></name></name></expr>)<pos:position pos:line="73" pos:column="38"/></condition><then pos:line="73" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="17">line_log_init<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">rev<pos:position pos:line="74" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="36">line_cb<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">.<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="44">prefix<pos:position pos:line="74" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="52">&amp;<pos:position pos:line="74" pos:column="57"/></operator><name><name pos:line="74" pos:column="53">line_cb<pos:position pos:line="74" pos:column="60"/></name><operator pos:line="74" pos:column="60">.<pos:position pos:line="74" pos:column="61"/></operator><name pos:line="74" pos:column="61">args<pos:position pos:line="74" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="76" pos:column="9">setup_pager<pos:position pos:line="76" pos:column="20"/></name><argument_list pos:line="76" pos:column="20">()<pos:position pos:line="76" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

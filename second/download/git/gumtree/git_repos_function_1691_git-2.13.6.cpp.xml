<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1691_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_marks<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">line<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><literal type="number" pos:line="3" pos:column="19">512<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">f<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">fopen<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">import_marks_file<pos:position pos:line="4" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="44">"r"<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">f<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition><then pos:line="5" pos:column="15">
		<block type="pseudo"><empty_stmt pos:line="6" pos:column="17">;<pos:position pos:line="6" pos:column="18"/></empty_stmt></block></then>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><name pos:line="7" pos:column="18">import_marks_file_ignore_missing<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">&amp;&amp;<pos:position pos:line="7" pos:column="61"/></operator> <name pos:line="7" pos:column="54">errno<pos:position pos:line="7" pos:column="59"/></name> <operator pos:line="7" pos:column="60">==<pos:position pos:line="7" pos:column="62"/></operator> <name pos:line="7" pos:column="63">ENOENT<pos:position pos:line="7" pos:column="69"/></name></expr>)<pos:position pos:line="7" pos:column="70"/></condition><then pos:line="7" pos:column="70">
		<block type="pseudo"><goto pos:line="8" pos:column="17">goto <name pos:line="8" pos:column="22">done<pos:position pos:line="8" pos:column="26"/></name>;<pos:position pos:line="8" pos:column="27"/></goto></block></then></if></elseif> <comment type="block" pos:line="8" pos:column="28">/* Marks file does not exist */</comment>
	<else pos:line="9" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die_errno<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="string" pos:line="10" pos:column="27">"cannot read '%s'"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">import_marks_file<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt></block></else></if>
	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><call><name pos:line="11" pos:column="16">fgets<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">line<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="28">sizeof<argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">line<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">f<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition> <block pos:line="11" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">uintmax_t<pos:position pos:line="12" pos:column="26"/></name></type> <name pos:line="12" pos:column="27">mark<pos:position pos:line="12" pos:column="31"/></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">end<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">unsigned<pos:position pos:line="14" pos:column="25"/></name> <name pos:line="14" pos:column="26">char<pos:position pos:line="14" pos:column="30"/></name></type> <name><name pos:line="14" pos:column="31">sha1<pos:position pos:line="14" pos:column="35"/></name><index pos:line="14" pos:column="35">[<expr><literal type="number" pos:line="14" pos:column="36">20<pos:position pos:line="14" pos:column="38"/></literal></expr>]<pos:position pos:line="14" pos:column="39"/></index></name></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">object_entry<pos:position pos:line="15" pos:column="36"/></name></name> <modifier pos:line="15" pos:column="37">*<pos:position pos:line="15" pos:column="38"/></modifier></type><name pos:line="15" pos:column="38">e<pos:position pos:line="15" pos:column="39"/></name></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>

		<expr_stmt><expr><name pos:line="17" pos:column="17">end<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">strchr<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">line<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="36">'\n'<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">line<pos:position pos:line="18" pos:column="25"/></name><index pos:line="18" pos:column="25">[<expr><literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr>]<pos:position pos:line="18" pos:column="28"/></index></name> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="char" pos:line="18" pos:column="32">':'<pos:position pos:line="18" pos:column="35"/></literal> <operator pos:line="18" pos:column="36">||<pos:position pos:line="18" pos:column="38"/></operator> <operator pos:line="18" pos:column="39">!<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">end<pos:position pos:line="18" pos:column="43"/></name></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="string" pos:line="19" pos:column="29">"corrupt mark line: %s"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">line<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">end<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">mark<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">strtoumax<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">line<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">+<pos:position pos:line="21" pos:column="40"/></operator> <literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">end<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="50">10<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">mark<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">||<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">end<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">==<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">line<pos:position pos:line="22" pos:column="41"/></name> <operator pos:line="22" pos:column="42">+<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">1<pos:position pos:line="22" pos:column="45"/></literal>
			<operator pos:line="23" pos:column="25">||<pos:position pos:line="23" pos:column="27"/></operator> <operator pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">end<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">!=<pos:position pos:line="23" pos:column="35"/></operator> <literal type="char" pos:line="23" pos:column="36">' '<pos:position pos:line="23" pos:column="39"/></literal> <operator pos:line="23" pos:column="40">||<pos:position pos:line="23" pos:column="42"/></operator> <call><name pos:line="23" pos:column="43">get_sha1_hex<pos:position pos:line="23" pos:column="55"/></name><argument_list pos:line="23" pos:column="55">(<argument><expr><name pos:line="23" pos:column="56">end<pos:position pos:line="23" pos:column="59"/></name> <operator pos:line="23" pos:column="60">+<pos:position pos:line="23" pos:column="61"/></operator> <literal type="number" pos:line="23" pos:column="62">1<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="65">sha1<pos:position pos:line="23" pos:column="69"/></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="string" pos:line="24" pos:column="29">"corrupt mark line: %s"<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="54">line<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="25" pos:column="17">e<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">find_object<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">sha1<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">e<pos:position pos:line="26" pos:column="23"/></name></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
			<decl_stmt><decl><type><name><name pos:line="27" pos:column="25">enum<pos:position pos:line="27" pos:column="29"/></name> <name pos:line="27" pos:column="30">object_type<pos:position pos:line="27" pos:column="41"/></name></name></type> <name pos:line="27" pos:column="42">type<pos:position pos:line="27" pos:column="46"/></name> <init pos:line="27" pos:column="47">= <expr><call><name pos:line="27" pos:column="49">sha1_object_info<pos:position pos:line="27" pos:column="65"/></name><argument_list pos:line="27" pos:column="65">(<argument><expr><name pos:line="27" pos:column="66">sha1<pos:position pos:line="27" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="72">NULL<pos:position pos:line="27" pos:column="76"/></name></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="78"/></decl_stmt>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><name pos:line="28" pos:column="29">type<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">&lt;<pos:position pos:line="28" pos:column="38"/></operator> <literal type="number" pos:line="28" pos:column="36">0<pos:position pos:line="28" pos:column="37"/></literal></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="33">die<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><literal type="string" pos:line="29" pos:column="37">"object not found: %s"<pos:position pos:line="29" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="61">sha1_to_hex<pos:position pos:line="29" pos:column="72"/></name><argument_list pos:line="29" pos:column="72">(<argument><expr><name pos:line="29" pos:column="73">sha1<pos:position pos:line="29" pos:column="77"/></name></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="80"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="30" pos:column="25">e<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <call><name pos:line="30" pos:column="29">insert_object<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">sha1<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">e<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">type<pos:position pos:line="31" pos:column="32"/></name></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="35">type<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">e<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">pack_id<pos:position pos:line="32" pos:column="35"/></name></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">MAX_PACK_ID<pos:position pos:line="32" pos:column="49"/></name></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">e<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">idx<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">.<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="32">offset<pos:position pos:line="33" pos:column="38"/></name></name> <operator pos:line="33" pos:column="39">=<pos:position pos:line="33" pos:column="40"/></operator> <literal type="number" pos:line="33" pos:column="41">1<pos:position pos:line="33" pos:column="42"/></literal></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt> <comment type="block" pos:line="33" pos:column="44">/* just not zero! */</comment>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">insert_mark<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">mark<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">e<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">fclose<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><name pos:line="37" pos:column="16">f<pos:position pos:line="37" pos:column="17"/></name></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
<label><name pos:line="38" pos:column="1">done<pos:position pos:line="38" pos:column="5"/></name>:<pos:position pos:line="38" pos:column="6"/></label>
	<expr_stmt><expr><name pos:line="39" pos:column="9">import_marks_file_done<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <literal type="number" pos:line="39" pos:column="34">1<pos:position pos:line="39" pos:column="35"/></literal></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

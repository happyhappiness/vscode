<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6750_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">load_cred_funcs<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* load DLLs */</comment>
	<expr_stmt><expr><name pos:line="4" pos:column="9">advapi<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <call><name pos:line="4" pos:column="18">LoadLibrary<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><literal type="string" pos:line="4" pos:column="30">"advapi32.dll"<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="46"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">advapi<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"failed to load advapi32.dll"<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="52"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="8" pos:column="9">/* get function pointers */</comment>
	<expr_stmt><expr><name pos:line="9" pos:column="9">CredWriteW<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">CredWriteWT<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator><call><name pos:line="9" pos:column="35">GetProcAddress<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">advapi<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="58">"CredWriteW"<pos:position pos:line="9" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">CredEnumerateW<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">CredEnumerateWT<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">)<pos:position pos:line="10" pos:column="43"/></operator><call><name pos:line="10" pos:column="43">GetProcAddress<pos:position pos:line="10" pos:column="57"/></name><argument_list pos:line="10" pos:column="57">(<argument><expr><name pos:line="10" pos:column="58">advapi<pos:position pos:line="10" pos:column="64"/></name></expr></argument>,
	    <argument><expr><literal type="string" pos:line="11" pos:column="13">"CredEnumerateW"<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">CredFree<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">CredFreeT<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator><call><name pos:line="12" pos:column="31">GetProcAddress<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">advapi<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="54">"CredFree"<pos:position pos:line="12" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">CredDeleteW<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">(<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">CredDeleteWT<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">)<pos:position pos:line="13" pos:column="37"/></operator><call><name pos:line="13" pos:column="37">GetProcAddress<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">advapi<pos:position pos:line="13" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="60">"CredDeleteW"<pos:position pos:line="13" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">CredWriteW<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">||<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="28">!<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">CredEnumerateW<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">||<pos:position pos:line="14" pos:column="46"/></operator> <operator pos:line="14" pos:column="47">!<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="48">CredFree<pos:position pos:line="14" pos:column="56"/></name> <operator pos:line="14" pos:column="57">||<pos:position pos:line="14" pos:column="59"/></operator> <operator pos:line="14" pos:column="60">!<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">CredDeleteW<pos:position pos:line="14" pos:column="72"/></name></expr>)<pos:position pos:line="14" pos:column="73"/></condition><then pos:line="14" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"failed to load functions"<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

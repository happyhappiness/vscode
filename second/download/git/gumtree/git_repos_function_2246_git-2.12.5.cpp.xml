<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2246_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">common_prefix_len<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">pathspec<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">pathspec<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">n<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">max<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/*
	 * ":(icase)path" is treated as a pathspec full of
	 * wildcard. In other words, only prefix is considered common
	 * prefix. If the pathspec is abc/foo abc/bar, running in
	 * subdir xyz, the common prefix is still xyz, not xuz/abc as
	 * in non-:(icase).
	 */</comment>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">GUARD_PATHSPEC<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">pathspec<pos:position pos:line="13" pos:column="32"/></name></expr></argument>,
		       <argument><expr><name pos:line="14" pos:column="24">PATHSPEC_FROMTOP<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">|<pos:position pos:line="14" pos:column="42"/></operator>
		       <name pos:line="15" pos:column="24">PATHSPEC_MAXDEPTH<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">|<pos:position pos:line="15" pos:column="43"/></operator>
		       <name pos:line="16" pos:column="24">PATHSPEC_LITERAL<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">|<pos:position pos:line="16" pos:column="42"/></operator>
		       <name pos:line="17" pos:column="24">PATHSPEC_GLOB<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">|<pos:position pos:line="17" pos:column="39"/></operator>
		       <name pos:line="18" pos:column="24">PATHSPEC_ICASE<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">|<pos:position pos:line="18" pos:column="40"/></operator>
		       <name pos:line="19" pos:column="24">PATHSPEC_EXCLUDE<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">n<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">n<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="25">pathspec<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">nr<pos:position pos:line="21" pos:column="37"/></name></name></expr>;<pos:position pos:line="21" pos:column="38"/></condition> <incr><expr><name pos:line="21" pos:column="39">n<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">++<pos:position pos:line="21" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="43"/></control> <block pos:line="21" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">size_t<pos:position pos:line="22" pos:column="23"/></name></type> <name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name> <init pos:line="22" pos:column="26">= <expr><literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="31">len<pos:position pos:line="22" pos:column="34"/></name> <init pos:line="22" pos:column="35">= <expr><literal type="number" pos:line="22" pos:column="37">0<pos:position pos:line="22" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="40">item_len<pos:position pos:line="22" pos:column="48"/></name></decl>;<pos:position pos:line="22" pos:column="49"/></decl_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">pathspec<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">items<pos:position pos:line="23" pos:column="36"/></name><index pos:line="23" pos:column="36">[<expr><name pos:line="23" pos:column="37">n<pos:position pos:line="23" pos:column="38"/></name></expr>]<pos:position pos:line="23" pos:column="39"/></index></name><operator pos:line="23" pos:column="39">.<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">magic<pos:position pos:line="23" pos:column="45"/></name> <operator pos:line="23" pos:column="46">&amp;<pos:position pos:line="23" pos:column="51"/></operator> <name pos:line="23" pos:column="48">PATHSPEC_EXCLUDE<pos:position pos:line="23" pos:column="64"/></name></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">pathspec<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">items<pos:position pos:line="25" pos:column="36"/></name><index pos:line="25" pos:column="36">[<expr><name pos:line="25" pos:column="37">n<pos:position pos:line="25" pos:column="38"/></name></expr>]<pos:position pos:line="25" pos:column="39"/></index></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">magic<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">&amp;<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="48">PATHSPEC_ICASE<pos:position pos:line="25" pos:column="62"/></name></expr>)<pos:position pos:line="25" pos:column="63"/></condition><then pos:line="25" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">item_len<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <name><name pos:line="26" pos:column="36">pathspec<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">items<pos:position pos:line="26" pos:column="51"/></name><index pos:line="26" pos:column="51">[<expr><name pos:line="26" pos:column="52">n<pos:position pos:line="26" pos:column="53"/></name></expr>]<pos:position pos:line="26" pos:column="54"/></index></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">prefix<pos:position pos:line="26" pos:column="61"/></name></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt></block></then>
		<else pos:line="27" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">item_len<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <name><name pos:line="28" pos:column="36">pathspec<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-&gt;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="46">items<pos:position pos:line="28" pos:column="51"/></name><index pos:line="28" pos:column="51">[<expr><name pos:line="28" pos:column="52">n<pos:position pos:line="28" pos:column="53"/></name></expr>]<pos:position pos:line="28" pos:column="54"/></index></name><operator pos:line="28" pos:column="54">.<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="55">nowildcard_len<pos:position pos:line="28" pos:column="69"/></name></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt></block></else></if>
		<while pos:line="29" pos:column="17">while <condition pos:line="29" pos:column="23">(<expr><name pos:line="29" pos:column="24">i<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">&lt;<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="28">item_len<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">&amp;&amp;<pos:position pos:line="29" pos:column="47"/></operator> <operator pos:line="29" pos:column="40">(<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="41">n<pos:position pos:line="29" pos:column="42"/></name> <operator pos:line="29" pos:column="43">==<pos:position pos:line="29" pos:column="45"/></operator> <literal type="number" pos:line="29" pos:column="46">0<pos:position pos:line="29" pos:column="47"/></literal> <operator pos:line="29" pos:column="48">||<pos:position pos:line="29" pos:column="50"/></operator> <name pos:line="29" pos:column="51">i<pos:position pos:line="29" pos:column="52"/></name> <operator pos:line="29" pos:column="53">&lt;<pos:position pos:line="29" pos:column="57"/></operator> <name pos:line="29" pos:column="55">max<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">)<pos:position pos:line="29" pos:column="59"/></operator></expr>)<pos:position pos:line="29" pos:column="60"/></condition> <block pos:line="29" pos:column="61">{
			<decl_stmt><decl><type><name pos:line="30" pos:column="25">char<pos:position pos:line="30" pos:column="29"/></name></type> <name pos:line="30" pos:column="30">c<pos:position pos:line="30" pos:column="31"/></name> <init pos:line="30" pos:column="32">= <expr><name><name pos:line="30" pos:column="34">pathspec<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">items<pos:position pos:line="30" pos:column="49"/></name><index pos:line="30" pos:column="49">[<expr><name pos:line="30" pos:column="50">n<pos:position pos:line="30" pos:column="51"/></name></expr>]<pos:position pos:line="30" pos:column="52"/></index></name><operator pos:line="30" pos:column="52">.<pos:position pos:line="30" pos:column="53"/></operator><name><name pos:line="30" pos:column="53">match<pos:position pos:line="30" pos:column="58"/></name><index pos:line="30" pos:column="58">[<expr><name pos:line="30" pos:column="59">i<pos:position pos:line="30" pos:column="60"/></name></expr>]<pos:position pos:line="30" pos:column="61"/></index></name></expr></init></decl>;<pos:position pos:line="30" pos:column="62"/></decl_stmt>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name pos:line="31" pos:column="29">c<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">!=<pos:position pos:line="31" pos:column="33"/></operator> <name><name pos:line="31" pos:column="34">pathspec<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">-&gt;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="44">items<pos:position pos:line="31" pos:column="49"/></name><index pos:line="31" pos:column="49">[<expr><literal type="number" pos:line="31" pos:column="50">0<pos:position pos:line="31" pos:column="51"/></literal></expr>]<pos:position pos:line="31" pos:column="52"/></index></name><operator pos:line="31" pos:column="52">.<pos:position pos:line="31" pos:column="53"/></operator><name><name pos:line="31" pos:column="53">match<pos:position pos:line="31" pos:column="58"/></name><index pos:line="31" pos:column="58">[<expr><name pos:line="31" pos:column="59">i<pos:position pos:line="31" pos:column="60"/></name></expr>]<pos:position pos:line="31" pos:column="61"/></index></name></expr>)<pos:position pos:line="31" pos:column="62"/></condition><then pos:line="31" pos:column="62">
				<block type="pseudo"><break pos:line="32" pos:column="33">break;<pos:position pos:line="32" pos:column="39"/></break></block></then></if>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name pos:line="33" pos:column="29">c<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">==<pos:position pos:line="33" pos:column="33"/></operator> <literal type="char" pos:line="33" pos:column="34">'/'<pos:position pos:line="33" pos:column="37"/></literal></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="33">len<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">=<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="39">i<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">+<pos:position pos:line="34" pos:column="42"/></operator> <literal type="number" pos:line="34" pos:column="43">1<pos:position pos:line="34" pos:column="44"/></literal></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="35" pos:column="25">i<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">++<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></while>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">n<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">==<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal> <operator pos:line="37" pos:column="28">||<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="31">len<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">&lt;<pos:position pos:line="37" pos:column="39"/></operator> <name pos:line="37" pos:column="37">max<pos:position pos:line="37" pos:column="40"/></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
			<expr_stmt><expr><name pos:line="38" pos:column="25">max<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <name pos:line="38" pos:column="31">len<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">!<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">max<pos:position pos:line="39" pos:column="33"/></name></expr>)<pos:position pos:line="39" pos:column="34"/></condition><then pos:line="39" pos:column="34">
				<block type="pseudo"><break pos:line="40" pos:column="33">break;<pos:position pos:line="40" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></for>
	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">max<pos:position pos:line="43" pos:column="19"/></name></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

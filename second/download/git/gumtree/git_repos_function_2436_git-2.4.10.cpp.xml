<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2436_git-2.4.10.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">threeway_merge<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">cache_entry<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier> <specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">stages<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
		   <parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">unpack_trees_options<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">o<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">cache_entry<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">index<pos:position pos:line="4" pos:column="40"/></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">cache_entry<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">head<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">cache_entry<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">remote<pos:position pos:line="6" pos:column="41"/></name> <init pos:line="6" pos:column="42">= <expr><name><name pos:line="6" pos:column="44">stages<pos:position pos:line="6" pos:column="50"/></name><index pos:line="6" pos:column="50">[<expr><name><name pos:line="6" pos:column="51">o<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">head_idx<pos:position pos:line="6" pos:column="62"/></name></name> <operator pos:line="6" pos:column="63">+<pos:position pos:line="6" pos:column="64"/></operator> <literal type="number" pos:line="6" pos:column="65">1<pos:position pos:line="6" pos:column="66"/></literal></expr>]<pos:position pos:line="6" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">count<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">head_match<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">remote_match<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">df_conflict_head<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">df_conflict_remote<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">any_anc_missing<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">no_anc_exists<pos:position pos:line="15" pos:column="26"/></name> <init pos:line="15" pos:column="27">= <expr><literal type="number" pos:line="15" pos:column="29">1<pos:position pos:line="15" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">1<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">o<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">head_idx<pos:position pos:line="18" pos:column="36"/></name></name></expr>;<pos:position pos:line="18" pos:column="37"/></condition> <incr><expr><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">++<pos:position pos:line="18" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="42"/></control> <block pos:line="18" pos:column="43">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">stages<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name></expr>]<pos:position pos:line="19" pos:column="31"/></index></name> <operator pos:line="19" pos:column="32">||<pos:position pos:line="19" pos:column="34"/></operator> <name><name pos:line="19" pos:column="35">stages<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><name pos:line="19" pos:column="42">i<pos:position pos:line="19" pos:column="43"/></name></expr>]<pos:position pos:line="19" pos:column="44"/></index></name> <operator pos:line="19" pos:column="45">==<pos:position pos:line="19" pos:column="47"/></operator> <name><name pos:line="19" pos:column="48">o<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">-&gt;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="51">df_conflict_entry<pos:position pos:line="19" pos:column="68"/></name></name></expr>)<pos:position pos:line="19" pos:column="69"/></condition><then pos:line="19" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">any_anc_missing<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">=<pos:position pos:line="20" pos:column="42"/></operator> <literal type="number" pos:line="20" pos:column="43">1<pos:position pos:line="20" pos:column="44"/></literal></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="21" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">no_anc_exists<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">=<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt></block></else></if>
	}<pos:position pos:line="23" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="25" pos:column="9">index<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name><name pos:line="25" pos:column="17">stages<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>]<pos:position pos:line="25" pos:column="26"/></index></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">head<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name><name pos:line="26" pos:column="16">stages<pos:position pos:line="26" pos:column="22"/></name><index pos:line="26" pos:column="22">[<expr><name><name pos:line="26" pos:column="23">o<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">head_idx<pos:position pos:line="26" pos:column="34"/></name></name></expr>]<pos:position pos:line="26" pos:column="35"/></index></name></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">head<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <name><name pos:line="28" pos:column="21">o<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">df_conflict_entry<pos:position pos:line="28" pos:column="41"/></name></name></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42"> <block pos:line="28" pos:column="43">{
		<expr_stmt><expr><name pos:line="29" pos:column="17">df_conflict_head<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <literal type="number" pos:line="29" pos:column="36">1<pos:position pos:line="29" pos:column="37"/></literal></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">head<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">remote<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">==<pos:position pos:line="33" pos:column="22"/></operator> <name><name pos:line="33" pos:column="23">o<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">df_conflict_entry<pos:position pos:line="33" pos:column="43"/></name></name></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">df_conflict_remote<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">=<pos:position pos:line="34" pos:column="37"/></operator> <literal type="number" pos:line="34" pos:column="38">1<pos:position pos:line="34" pos:column="39"/></literal></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">remote<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">NULL<pos:position pos:line="35" pos:column="30"/></name></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/*
	 * First, if there's a #16 situation, note that to prevent #13
	 * and #14.
	 */</comment>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><call><name pos:line="42" pos:column="14">same<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">remote<pos:position pos:line="42" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="27">head<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33"> <block pos:line="42" pos:column="34">{
		<for pos:line="43" pos:column="17">for <control pos:line="43" pos:column="21">(<init><expr><name pos:line="43" pos:column="22">i<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal></expr>;<pos:position pos:line="43" pos:column="28"/></init> <condition><expr><name pos:line="43" pos:column="29">i<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">&lt;<pos:position pos:line="43" pos:column="35"/></operator> <name><name pos:line="43" pos:column="33">o<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">head_idx<pos:position pos:line="43" pos:column="44"/></name></name></expr>;<pos:position pos:line="43" pos:column="45"/></condition> <incr><expr><name pos:line="43" pos:column="46">i<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">++<pos:position pos:line="43" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="50"/></control> <block pos:line="43" pos:column="51">{
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><call><name pos:line="44" pos:column="29">same<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name><name pos:line="44" pos:column="34">stages<pos:position pos:line="44" pos:column="40"/></name><index pos:line="44" pos:column="40">[<expr><name pos:line="44" pos:column="41">i<pos:position pos:line="44" pos:column="42"/></name></expr>]<pos:position pos:line="44" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">head<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51"> <block pos:line="44" pos:column="52">{
				<expr_stmt><expr><name pos:line="45" pos:column="33">head_match<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">=<pos:position pos:line="45" pos:column="45"/></operator> <name pos:line="45" pos:column="46">i<pos:position pos:line="45" pos:column="47"/></name></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><call><name pos:line="47" pos:column="29">same<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name><name pos:line="47" pos:column="34">stages<pos:position pos:line="47" pos:column="40"/></name><index pos:line="47" pos:column="40">[<expr><name pos:line="47" pos:column="41">i<pos:position pos:line="47" pos:column="42"/></name></expr>]<pos:position pos:line="47" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">remote<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53"> <block pos:line="47" pos:column="54">{
				<expr_stmt><expr><name pos:line="48" pos:column="33">remote_match<pos:position pos:line="48" pos:column="45"/></name> <operator pos:line="48" pos:column="46">=<pos:position pos:line="48" pos:column="47"/></operator> <name pos:line="48" pos:column="48">i<pos:position pos:line="48" pos:column="49"/></name></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
		}<pos:position pos:line="50" pos:column="18"/></block></for>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="53" pos:column="9">/*
	 * We start with cases where the index is allowed to match
	 * something other than the head: #14(ALT) and #2ALT, where it
	 * is permitted to match the result instead.
	 */</comment>
	<comment type="block" pos:line="58" pos:column="9">/* #14, #14ALT, #2ALT */</comment>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">remote<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">&amp;&amp;<pos:position pos:line="59" pos:column="30"/></operator> <operator pos:line="59" pos:column="23">!<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">df_conflict_head<pos:position pos:line="59" pos:column="40"/></name> <operator pos:line="59" pos:column="41">&amp;&amp;<pos:position pos:line="59" pos:column="51"/></operator> <name pos:line="59" pos:column="44">head_match<pos:position pos:line="59" pos:column="54"/></name> <operator pos:line="59" pos:column="55">&amp;&amp;<pos:position pos:line="59" pos:column="65"/></operator> <operator pos:line="59" pos:column="58">!<pos:position pos:line="59" pos:column="59"/></operator><name pos:line="59" pos:column="59">remote_match<pos:position pos:line="59" pos:column="71"/></name></expr>)<pos:position pos:line="59" pos:column="72"/></condition><then pos:line="59" pos:column="72"> <block pos:line="59" pos:column="73">{
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">index<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">&amp;&amp;<pos:position pos:line="60" pos:column="37"/></operator> <operator pos:line="60" pos:column="30">!<pos:position pos:line="60" pos:column="31"/></operator><call><name pos:line="60" pos:column="31">same<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">index<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">remote<pos:position pos:line="60" pos:column="49"/></name></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call> <operator pos:line="60" pos:column="51">&amp;&amp;<pos:position pos:line="60" pos:column="61"/></operator> <operator pos:line="60" pos:column="54">!<pos:position pos:line="60" pos:column="55"/></operator><call><name pos:line="60" pos:column="55">same<pos:position pos:line="60" pos:column="59"/></name><argument_list pos:line="60" pos:column="59">(<argument><expr><name pos:line="60" pos:column="60">index<pos:position pos:line="60" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="67">head<pos:position pos:line="60" pos:column="71"/></name></expr></argument>)<pos:position pos:line="60" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="73"/></condition><then pos:line="60" pos:column="73">
			<block type="pseudo"><return pos:line="61" pos:column="25">return <expr><call><name pos:line="61" pos:column="32">reject_merge<pos:position pos:line="61" pos:column="44"/></name><argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">index<pos:position pos:line="61" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="52">o<pos:position pos:line="61" pos:column="53"/></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></return></block></then></if>
		<return pos:line="62" pos:column="17">return <expr><call><name pos:line="62" pos:column="24">merged_entry<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">remote<pos:position pos:line="62" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="45">index<pos:position pos:line="62" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">o<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="55"/></return>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="64" pos:column="9">/*
	 * If we have an entry in the index cache, then we want to
	 * make sure that it matches head.
	 */</comment>
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">index<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">&amp;&amp;<pos:position pos:line="68" pos:column="29"/></operator> <operator pos:line="68" pos:column="22">!<pos:position pos:line="68" pos:column="23"/></operator><call><name pos:line="68" pos:column="23">same<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">index<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">head<pos:position pos:line="68" pos:column="39"/></name></expr></argument>)<pos:position pos:line="68" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="41"/></condition><then pos:line="68" pos:column="41">
		<block type="pseudo"><return pos:line="69" pos:column="17">return <expr><call><name pos:line="69" pos:column="24">reject_merge<pos:position pos:line="69" pos:column="36"/></name><argument_list pos:line="69" pos:column="36">(<argument><expr><name pos:line="69" pos:column="37">index<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">o<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></return></block></then></if>

	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">head<pos:position pos:line="71" pos:column="17"/></name></expr>)<pos:position pos:line="71" pos:column="18"/></condition><then pos:line="71" pos:column="18"> <block pos:line="71" pos:column="19">{
		<comment type="block" pos:line="72" pos:column="17">/* #5ALT, #15 */</comment>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><call><name pos:line="73" pos:column="21">same<pos:position pos:line="73" pos:column="25"/></name><argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">head<pos:position pos:line="73" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="32">remote<pos:position pos:line="73" pos:column="38"/></name></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="40"/></condition><then pos:line="73" pos:column="40">
			<block type="pseudo"><return pos:line="74" pos:column="25">return <expr><call><name pos:line="74" pos:column="32">merged_entry<pos:position pos:line="74" pos:column="44"/></name><argument_list pos:line="74" pos:column="44">(<argument><expr><name pos:line="74" pos:column="45">head<pos:position pos:line="74" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">index<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">o<pos:position pos:line="74" pos:column="59"/></name></expr></argument>)<pos:position pos:line="74" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="61"/></return></block></then></if>
		<comment type="block" pos:line="75" pos:column="17">/* #13, #3ALT */</comment>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><operator pos:line="76" pos:column="21">!<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="22">df_conflict_remote<pos:position pos:line="76" pos:column="40"/></name> <operator pos:line="76" pos:column="41">&amp;&amp;<pos:position pos:line="76" pos:column="51"/></operator> <name pos:line="76" pos:column="44">remote_match<pos:position pos:line="76" pos:column="56"/></name> <operator pos:line="76" pos:column="57">&amp;&amp;<pos:position pos:line="76" pos:column="67"/></operator> <operator pos:line="76" pos:column="60">!<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="61">head_match<pos:position pos:line="76" pos:column="71"/></name></expr>)<pos:position pos:line="76" pos:column="72"/></condition><then pos:line="76" pos:column="72">
			<block type="pseudo"><return pos:line="77" pos:column="25">return <expr><call><name pos:line="77" pos:column="32">merged_entry<pos:position pos:line="77" pos:column="44"/></name><argument_list pos:line="77" pos:column="44">(<argument><expr><name pos:line="77" pos:column="45">head<pos:position pos:line="77" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="51">index<pos:position pos:line="77" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="58">o<pos:position pos:line="77" pos:column="59"/></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="61"/></return></block></then></if>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="80" pos:column="9">/* #1 */</comment>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">head<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">&amp;&amp;<pos:position pos:line="81" pos:column="29"/></operator> <operator pos:line="81" pos:column="22">!<pos:position pos:line="81" pos:column="23"/></operator><name pos:line="81" pos:column="23">remote<pos:position pos:line="81" pos:column="29"/></name> <operator pos:line="81" pos:column="30">&amp;&amp;<pos:position pos:line="81" pos:column="40"/></operator> <name pos:line="81" pos:column="33">any_anc_missing<pos:position pos:line="81" pos:column="48"/></name></expr>)<pos:position pos:line="81" pos:column="49"/></condition><then pos:line="81" pos:column="49">
		<block type="pseudo"><return pos:line="82" pos:column="17">return <expr><literal type="number" pos:line="82" pos:column="24">0<pos:position pos:line="82" pos:column="25"/></literal></expr>;<pos:position pos:line="82" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="84" pos:column="9">/*
	 * Under the "aggressive" rule, we resolve mostly trivial
	 * cases that we historically had git-merge-one-file resolve.
	 */</comment>
	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name><name pos:line="88" pos:column="13">o<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">-&gt;<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="16">aggressive<pos:position pos:line="88" pos:column="26"/></name></name></expr>)<pos:position pos:line="88" pos:column="27"/></condition><then pos:line="88" pos:column="27"> <block pos:line="88" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="89" pos:column="17">int<pos:position pos:line="89" pos:column="20"/></name></type> <name pos:line="89" pos:column="21">head_deleted<pos:position pos:line="89" pos:column="33"/></name> <init pos:line="89" pos:column="34">= <expr><operator pos:line="89" pos:column="36">!<pos:position pos:line="89" pos:column="37"/></operator><name pos:line="89" pos:column="37">head<pos:position pos:line="89" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="89" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="90" pos:column="17">int<pos:position pos:line="90" pos:column="20"/></name></type> <name pos:line="90" pos:column="21">remote_deleted<pos:position pos:line="90" pos:column="35"/></name> <init pos:line="90" pos:column="36">= <expr><operator pos:line="90" pos:column="38">!<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="39">remote<pos:position pos:line="90" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="90" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="91" pos:column="17">const<pos:position pos:line="91" pos:column="22"/></specifier> <name><name pos:line="91" pos:column="23">struct<pos:position pos:line="91" pos:column="29"/></name> <name pos:line="91" pos:column="30">cache_entry<pos:position pos:line="91" pos:column="41"/></name></name> <modifier pos:line="91" pos:column="42">*<pos:position pos:line="91" pos:column="43"/></modifier></type><name pos:line="91" pos:column="43">ce<pos:position pos:line="91" pos:column="45"/></name> <init pos:line="91" pos:column="46">= <expr><name pos:line="91" pos:column="48">NULL<pos:position pos:line="91" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="91" pos:column="53"/></decl_stmt>

		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><name pos:line="93" pos:column="21">index<pos:position pos:line="93" pos:column="26"/></name></expr>)<pos:position pos:line="93" pos:column="27"/></condition><then pos:line="93" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="25">ce<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">=<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">index<pos:position pos:line="94" pos:column="35"/></name></expr>;<pos:position pos:line="94" pos:column="36"/></expr_stmt></block></then>
		<elseif pos:line="95" pos:column="17">else <if pos:line="95" pos:column="22">if <condition pos:line="95" pos:column="25">(<expr><name pos:line="95" pos:column="26">head<pos:position pos:line="95" pos:column="30"/></name></expr>)<pos:position pos:line="95" pos:column="31"/></condition><then pos:line="95" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="25">ce<pos:position pos:line="96" pos:column="27"/></name> <operator pos:line="96" pos:column="28">=<pos:position pos:line="96" pos:column="29"/></operator> <name pos:line="96" pos:column="30">head<pos:position pos:line="96" pos:column="34"/></name></expr>;<pos:position pos:line="96" pos:column="35"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="97" pos:column="17">else <if pos:line="97" pos:column="22">if <condition pos:line="97" pos:column="25">(<expr><name pos:line="97" pos:column="26">remote<pos:position pos:line="97" pos:column="32"/></name></expr>)<pos:position pos:line="97" pos:column="33"/></condition><then pos:line="97" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="25">ce<pos:position pos:line="98" pos:column="27"/></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <name pos:line="98" pos:column="30">remote<pos:position pos:line="98" pos:column="36"/></name></expr>;<pos:position pos:line="98" pos:column="37"/></expr_stmt></block></then></if></elseif>
		<else pos:line="99" pos:column="17">else <block pos:line="99" pos:column="22">{
			<for pos:line="100" pos:column="25">for <control pos:line="100" pos:column="29">(<init><expr><name pos:line="100" pos:column="30">i<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">=<pos:position pos:line="100" pos:column="33"/></operator> <literal type="number" pos:line="100" pos:column="34">1<pos:position pos:line="100" pos:column="35"/></literal></expr>;<pos:position pos:line="100" pos:column="36"/></init> <condition><expr><name pos:line="100" pos:column="37">i<pos:position pos:line="100" pos:column="38"/></name> <operator pos:line="100" pos:column="39">&lt;<pos:position pos:line="100" pos:column="43"/></operator> <name><name pos:line="100" pos:column="41">o<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">head_idx<pos:position pos:line="100" pos:column="52"/></name></name></expr>;<pos:position pos:line="100" pos:column="53"/></condition> <incr><expr><name pos:line="100" pos:column="54">i<pos:position pos:line="100" pos:column="55"/></name><operator pos:line="100" pos:column="55">++<pos:position pos:line="100" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="100" pos:column="58"/></control> <block pos:line="100" pos:column="59">{
				<if pos:line="101" pos:column="33">if <condition pos:line="101" pos:column="36">(<expr><name><name pos:line="101" pos:column="37">stages<pos:position pos:line="101" pos:column="43"/></name><index pos:line="101" pos:column="43">[<expr><name pos:line="101" pos:column="44">i<pos:position pos:line="101" pos:column="45"/></name></expr>]<pos:position pos:line="101" pos:column="46"/></index></name> <operator pos:line="101" pos:column="47">&amp;&amp;<pos:position pos:line="101" pos:column="57"/></operator> <name><name pos:line="101" pos:column="50">stages<pos:position pos:line="101" pos:column="56"/></name><index pos:line="101" pos:column="56">[<expr><name pos:line="101" pos:column="57">i<pos:position pos:line="101" pos:column="58"/></name></expr>]<pos:position pos:line="101" pos:column="59"/></index></name> <operator pos:line="101" pos:column="60">!=<pos:position pos:line="101" pos:column="62"/></operator> <name><name pos:line="101" pos:column="63">o<pos:position pos:line="101" pos:column="64"/></name><operator pos:line="101" pos:column="64">-&gt;<pos:position pos:line="101" pos:column="69"/></operator><name pos:line="101" pos:column="66">df_conflict_entry<pos:position pos:line="101" pos:column="83"/></name></name></expr>)<pos:position pos:line="101" pos:column="84"/></condition><then pos:line="101" pos:column="84"> <block pos:line="101" pos:column="85">{
					<expr_stmt><expr><name pos:line="102" pos:column="41">ce<pos:position pos:line="102" pos:column="43"/></name> <operator pos:line="102" pos:column="44">=<pos:position pos:line="102" pos:column="45"/></operator> <name><name pos:line="102" pos:column="46">stages<pos:position pos:line="102" pos:column="52"/></name><index pos:line="102" pos:column="52">[<expr><name pos:line="102" pos:column="53">i<pos:position pos:line="102" pos:column="54"/></name></expr>]<pos:position pos:line="102" pos:column="55"/></index></name></expr>;<pos:position pos:line="102" pos:column="56"/></expr_stmt>
					<break pos:line="103" pos:column="41">break;<pos:position pos:line="103" pos:column="47"/></break>
				}<pos:position pos:line="104" pos:column="34"/></block></then></if>
			}<pos:position pos:line="105" pos:column="26"/></block></for>
		}<pos:position pos:line="106" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="108" pos:column="17">/*
		 * Deleted in both.
		 * Deleted in one and unchanged in the other.
		 */</comment>
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><operator pos:line="112" pos:column="21">(<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="22">head_deleted<pos:position pos:line="112" pos:column="34"/></name> <operator pos:line="112" pos:column="35">&amp;&amp;<pos:position pos:line="112" pos:column="45"/></operator> <name pos:line="112" pos:column="38">remote_deleted<pos:position pos:line="112" pos:column="52"/></name><operator pos:line="112" pos:column="52">)<pos:position pos:line="112" pos:column="53"/></operator> <operator pos:line="112" pos:column="54">||<pos:position pos:line="112" pos:column="56"/></operator>
		    <operator pos:line="113" pos:column="21">(<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="22">head_deleted<pos:position pos:line="113" pos:column="34"/></name> <operator pos:line="113" pos:column="35">&amp;&amp;<pos:position pos:line="113" pos:column="45"/></operator> <name pos:line="113" pos:column="38">remote<pos:position pos:line="113" pos:column="44"/></name> <operator pos:line="113" pos:column="45">&amp;&amp;<pos:position pos:line="113" pos:column="55"/></operator> <name pos:line="113" pos:column="48">remote_match<pos:position pos:line="113" pos:column="60"/></name><operator pos:line="113" pos:column="60">)<pos:position pos:line="113" pos:column="61"/></operator> <operator pos:line="113" pos:column="62">||<pos:position pos:line="113" pos:column="64"/></operator>
		    <operator pos:line="114" pos:column="21">(<pos:position pos:line="114" pos:column="22"/></operator><name pos:line="114" pos:column="22">remote_deleted<pos:position pos:line="114" pos:column="36"/></name> <operator pos:line="114" pos:column="37">&amp;&amp;<pos:position pos:line="114" pos:column="47"/></operator> <name pos:line="114" pos:column="40">head<pos:position pos:line="114" pos:column="44"/></name> <operator pos:line="114" pos:column="45">&amp;&amp;<pos:position pos:line="114" pos:column="55"/></operator> <name pos:line="114" pos:column="48">head_match<pos:position pos:line="114" pos:column="58"/></name><operator pos:line="114" pos:column="58">)<pos:position pos:line="114" pos:column="59"/></operator></expr>)<pos:position pos:line="114" pos:column="60"/></condition><then pos:line="114" pos:column="60"> <block pos:line="114" pos:column="61">{
			<if pos:line="115" pos:column="25">if <condition pos:line="115" pos:column="28">(<expr><name pos:line="115" pos:column="29">index<pos:position pos:line="115" pos:column="34"/></name></expr>)<pos:position pos:line="115" pos:column="35"/></condition><then pos:line="115" pos:column="35">
				<block type="pseudo"><return pos:line="116" pos:column="33">return <expr><call><name pos:line="116" pos:column="40">deleted_entry<pos:position pos:line="116" pos:column="53"/></name><argument_list pos:line="116" pos:column="53">(<argument><expr><name pos:line="116" pos:column="54">index<pos:position pos:line="116" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="61">index<pos:position pos:line="116" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="68">o<pos:position pos:line="116" pos:column="69"/></name></expr></argument>)<pos:position pos:line="116" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="71"/></return></block></then></if>
			<if pos:line="117" pos:column="25">if <condition pos:line="117" pos:column="28">(<expr><name pos:line="117" pos:column="29">ce<pos:position pos:line="117" pos:column="31"/></name> <operator pos:line="117" pos:column="32">&amp;&amp;<pos:position pos:line="117" pos:column="42"/></operator> <operator pos:line="117" pos:column="35">!<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="36">head_deleted<pos:position pos:line="117" pos:column="48"/></name></expr>)<pos:position pos:line="117" pos:column="49"/></condition><then pos:line="117" pos:column="49"> <block pos:line="117" pos:column="50">{
				<if pos:line="118" pos:column="33">if <condition pos:line="118" pos:column="36">(<expr><call><name pos:line="118" pos:column="37">verify_absent<pos:position pos:line="118" pos:column="50"/></name><argument_list pos:line="118" pos:column="50">(<argument><expr><name pos:line="118" pos:column="51">ce<pos:position pos:line="118" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="55">ERROR_WOULD_LOSE_UNTRACKED_REMOVED<pos:position pos:line="118" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="91">o<pos:position pos:line="118" pos:column="92"/></name></expr></argument>)<pos:position pos:line="118" pos:column="93"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="94"/></condition><then pos:line="118" pos:column="94">
					<block type="pseudo"><return pos:line="119" pos:column="41">return <expr><operator pos:line="119" pos:column="48">-<pos:position pos:line="119" pos:column="49"/></operator><literal type="number" pos:line="119" pos:column="49">1<pos:position pos:line="119" pos:column="50"/></literal></expr>;<pos:position pos:line="119" pos:column="51"/></return></block></then></if>
			}<pos:position pos:line="120" pos:column="26"/></block></then></if>
			<return pos:line="121" pos:column="25">return <expr><literal type="number" pos:line="121" pos:column="32">0<pos:position pos:line="121" pos:column="33"/></literal></expr>;<pos:position pos:line="121" pos:column="34"/></return>
		}<pos:position pos:line="122" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="123" pos:column="17">/*
		 * Added in both, identically.
		 */</comment>
		<if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><name pos:line="126" pos:column="21">no_anc_exists<pos:position pos:line="126" pos:column="34"/></name> <operator pos:line="126" pos:column="35">&amp;&amp;<pos:position pos:line="126" pos:column="45"/></operator> <name pos:line="126" pos:column="38">head<pos:position pos:line="126" pos:column="42"/></name> <operator pos:line="126" pos:column="43">&amp;&amp;<pos:position pos:line="126" pos:column="53"/></operator> <name pos:line="126" pos:column="46">remote<pos:position pos:line="126" pos:column="52"/></name> <operator pos:line="126" pos:column="53">&amp;&amp;<pos:position pos:line="126" pos:column="63"/></operator> <call><name pos:line="126" pos:column="56">same<pos:position pos:line="126" pos:column="60"/></name><argument_list pos:line="126" pos:column="60">(<argument><expr><name pos:line="126" pos:column="61">head<pos:position pos:line="126" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="67">remote<pos:position pos:line="126" pos:column="73"/></name></expr></argument>)<pos:position pos:line="126" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="75"/></condition><then pos:line="126" pos:column="75">
			<block type="pseudo"><return pos:line="127" pos:column="25">return <expr><call><name pos:line="127" pos:column="32">merged_entry<pos:position pos:line="127" pos:column="44"/></name><argument_list pos:line="127" pos:column="44">(<argument><expr><name pos:line="127" pos:column="45">head<pos:position pos:line="127" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="51">index<pos:position pos:line="127" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="58">o<pos:position pos:line="127" pos:column="59"/></name></expr></argument>)<pos:position pos:line="127" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="61"/></return></block></then></if>

	}<pos:position pos:line="129" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="131" pos:column="9">/* Below are "no merge" cases, which require that the index be
	 * up-to-date to avoid the files getting overwritten with
	 * conflict resolution files.
	 */</comment>
	<if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">index<pos:position pos:line="135" pos:column="18"/></name></expr>)<pos:position pos:line="135" pos:column="19"/></condition><then pos:line="135" pos:column="19"> <block pos:line="135" pos:column="20">{
		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><call><name pos:line="136" pos:column="21">verify_uptodate<pos:position pos:line="136" pos:column="36"/></name><argument_list pos:line="136" pos:column="36">(<argument><expr><name pos:line="136" pos:column="37">index<pos:position pos:line="136" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="44">o<pos:position pos:line="136" pos:column="45"/></name></expr></argument>)<pos:position pos:line="136" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="47"/></condition><then pos:line="136" pos:column="47">
			<block type="pseudo"><return pos:line="137" pos:column="25">return <expr><operator pos:line="137" pos:column="32">-<pos:position pos:line="137" pos:column="33"/></operator><literal type="number" pos:line="137" pos:column="33">1<pos:position pos:line="137" pos:column="34"/></literal></expr>;<pos:position pos:line="137" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="138" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="140" pos:column="9">o<pos:position pos:line="140" pos:column="10"/></name><operator pos:line="140" pos:column="10">-&gt;<pos:position pos:line="140" pos:column="15"/></operator><name pos:line="140" pos:column="12">nontrivial_merge<pos:position pos:line="140" pos:column="28"/></name></name> <operator pos:line="140" pos:column="29">=<pos:position pos:line="140" pos:column="30"/></operator> <literal type="number" pos:line="140" pos:column="31">1<pos:position pos:line="140" pos:column="32"/></literal></expr>;<pos:position pos:line="140" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="142" pos:column="9">/* #2, #3, #4, #6, #7, #9, #10, #11. */</comment>
	<expr_stmt><expr><name pos:line="143" pos:column="9">count<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">=<pos:position pos:line="143" pos:column="16"/></operator> <literal type="number" pos:line="143" pos:column="17">0<pos:position pos:line="143" pos:column="18"/></literal></expr>;<pos:position pos:line="143" pos:column="19"/></expr_stmt>
	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><operator pos:line="144" pos:column="13">!<pos:position pos:line="144" pos:column="14"/></operator><name pos:line="144" pos:column="14">head_match<pos:position pos:line="144" pos:column="24"/></name> <operator pos:line="144" pos:column="25">||<pos:position pos:line="144" pos:column="27"/></operator> <operator pos:line="144" pos:column="28">!<pos:position pos:line="144" pos:column="29"/></operator><name pos:line="144" pos:column="29">remote_match<pos:position pos:line="144" pos:column="41"/></name></expr>)<pos:position pos:line="144" pos:column="42"/></condition><then pos:line="144" pos:column="42"> <block pos:line="144" pos:column="43">{
		<for pos:line="145" pos:column="17">for <control pos:line="145" pos:column="21">(<init><expr><name pos:line="145" pos:column="22">i<pos:position pos:line="145" pos:column="23"/></name> <operator pos:line="145" pos:column="24">=<pos:position pos:line="145" pos:column="25"/></operator> <literal type="number" pos:line="145" pos:column="26">1<pos:position pos:line="145" pos:column="27"/></literal></expr>;<pos:position pos:line="145" pos:column="28"/></init> <condition><expr><name pos:line="145" pos:column="29">i<pos:position pos:line="145" pos:column="30"/></name> <operator pos:line="145" pos:column="31">&lt;<pos:position pos:line="145" pos:column="35"/></operator> <name><name pos:line="145" pos:column="33">o<pos:position pos:line="145" pos:column="34"/></name><operator pos:line="145" pos:column="34">-&gt;<pos:position pos:line="145" pos:column="39"/></operator><name pos:line="145" pos:column="36">head_idx<pos:position pos:line="145" pos:column="44"/></name></name></expr>;<pos:position pos:line="145" pos:column="45"/></condition> <incr><expr><name pos:line="145" pos:column="46">i<pos:position pos:line="145" pos:column="47"/></name><operator pos:line="145" pos:column="47">++<pos:position pos:line="145" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="145" pos:column="50"/></control> <block pos:line="145" pos:column="51">{
			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><name><name pos:line="146" pos:column="29">stages<pos:position pos:line="146" pos:column="35"/></name><index pos:line="146" pos:column="35">[<expr><name pos:line="146" pos:column="36">i<pos:position pos:line="146" pos:column="37"/></name></expr>]<pos:position pos:line="146" pos:column="38"/></index></name> <operator pos:line="146" pos:column="39">&amp;&amp;<pos:position pos:line="146" pos:column="49"/></operator> <name><name pos:line="146" pos:column="42">stages<pos:position pos:line="146" pos:column="48"/></name><index pos:line="146" pos:column="48">[<expr><name pos:line="146" pos:column="49">i<pos:position pos:line="146" pos:column="50"/></name></expr>]<pos:position pos:line="146" pos:column="51"/></index></name> <operator pos:line="146" pos:column="52">!=<pos:position pos:line="146" pos:column="54"/></operator> <name><name pos:line="146" pos:column="55">o<pos:position pos:line="146" pos:column="56"/></name><operator pos:line="146" pos:column="56">-&gt;<pos:position pos:line="146" pos:column="61"/></operator><name pos:line="146" pos:column="58">df_conflict_entry<pos:position pos:line="146" pos:column="75"/></name></name></expr>)<pos:position pos:line="146" pos:column="76"/></condition><then pos:line="146" pos:column="76"> <block pos:line="146" pos:column="77">{
				<expr_stmt><expr><call><name pos:line="147" pos:column="33">keep_entry<pos:position pos:line="147" pos:column="43"/></name><argument_list pos:line="147" pos:column="43">(<argument><expr><name><name pos:line="147" pos:column="44">stages<pos:position pos:line="147" pos:column="50"/></name><index pos:line="147" pos:column="50">[<expr><name pos:line="147" pos:column="51">i<pos:position pos:line="147" pos:column="52"/></name></expr>]<pos:position pos:line="147" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="55">o<pos:position pos:line="147" pos:column="56"/></name></expr></argument>)<pos:position pos:line="147" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="148" pos:column="33">count<pos:position pos:line="148" pos:column="38"/></name><operator pos:line="148" pos:column="38">++<pos:position pos:line="148" pos:column="40"/></operator></expr>;<pos:position pos:line="148" pos:column="41"/></expr_stmt>
				<break pos:line="149" pos:column="33">break;<pos:position pos:line="149" pos:column="39"/></break>
			}<pos:position pos:line="150" pos:column="26"/></block></then></if>
		}<pos:position pos:line="151" pos:column="18"/></block></for>
	}<pos:position pos:line="152" pos:column="10"/></block></then>
<cpp:if pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">if<pos:position pos:line="153" pos:column="4"/></cpp:directive> <expr><name pos:line="153" pos:column="5">DBRT_DEBUG<pos:position pos:line="153" pos:column="15"/></name></expr></cpp:if>
	<else pos:line="154" pos:column="9">else <block pos:line="154" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="155" pos:column="17">fprintf<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name pos:line="155" pos:column="25">stderr<pos:position pos:line="155" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="33">"read-tree: warning #16 detected\n"<pos:position pos:line="155" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="156" pos:column="17">show_stage_entry<pos:position pos:line="156" pos:column="33"/></name><argument_list pos:line="156" pos:column="33">(<argument><expr><name pos:line="156" pos:column="34">stderr<pos:position pos:line="156" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="42">"head   "<pos:position pos:line="156" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="53">stages<pos:position pos:line="156" pos:column="59"/></name><index pos:line="156" pos:column="59">[<expr><name pos:line="156" pos:column="60">head_match<pos:position pos:line="156" pos:column="70"/></name></expr>]<pos:position pos:line="156" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="156" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="157" pos:column="17">show_stage_entry<pos:position pos:line="157" pos:column="33"/></name><argument_list pos:line="157" pos:column="33">(<argument><expr><name pos:line="157" pos:column="34">stderr<pos:position pos:line="157" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="42">"remote "<pos:position pos:line="157" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="53">stages<pos:position pos:line="157" pos:column="59"/></name><index pos:line="157" pos:column="59">[<expr><name pos:line="157" pos:column="60">remote_match<pos:position pos:line="157" pos:column="72"/></name></expr>]<pos:position pos:line="157" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="157" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="158" pos:column="10"/></block></else></if>
<cpp:endif pos:line="159" pos:column="1">#<cpp:directive pos:line="159" pos:column="2">endif<pos:position pos:line="159" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><name pos:line="160" pos:column="13">head<pos:position pos:line="160" pos:column="17"/></name></expr>)<pos:position pos:line="160" pos:column="18"/></condition><then pos:line="160" pos:column="18"> <block pos:line="160" pos:column="19">{ <expr_stmt><expr><name pos:line="160" pos:column="21">count<pos:position pos:line="160" pos:column="26"/></name> <operator pos:line="160" pos:column="27">+=<pos:position pos:line="160" pos:column="29"/></operator> <call><name pos:line="160" pos:column="30">keep_entry<pos:position pos:line="160" pos:column="40"/></name><argument_list pos:line="160" pos:column="40">(<argument><expr><name pos:line="160" pos:column="41">head<pos:position pos:line="160" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="47">o<pos:position pos:line="160" pos:column="48"/></name></expr></argument>)<pos:position pos:line="160" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="50"/></expr_stmt> }<pos:position pos:line="160" pos:column="52"/></block></then></if>
	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">remote<pos:position pos:line="161" pos:column="19"/></name></expr>)<pos:position pos:line="161" pos:column="20"/></condition><then pos:line="161" pos:column="20"> <block pos:line="161" pos:column="21">{ <expr_stmt><expr><name pos:line="161" pos:column="23">count<pos:position pos:line="161" pos:column="28"/></name> <operator pos:line="161" pos:column="29">+=<pos:position pos:line="161" pos:column="31"/></operator> <call><name pos:line="161" pos:column="32">keep_entry<pos:position pos:line="161" pos:column="42"/></name><argument_list pos:line="161" pos:column="42">(<argument><expr><name pos:line="161" pos:column="43">remote<pos:position pos:line="161" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="51">o<pos:position pos:line="161" pos:column="52"/></name></expr></argument>)<pos:position pos:line="161" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="54"/></expr_stmt> }<pos:position pos:line="161" pos:column="56"/></block></then></if>
	<return pos:line="162" pos:column="9">return <expr><name pos:line="162" pos:column="16">count<pos:position pos:line="162" pos:column="21"/></name></expr>;<pos:position pos:line="162" pos:column="22"/></return>
}<pos:position pos:line="163" pos:column="2"/></block></function></unit>

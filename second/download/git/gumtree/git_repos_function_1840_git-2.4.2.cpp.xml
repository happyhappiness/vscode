<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1840_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">treat_leading_path<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">dir_struct<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">dir<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">path<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">len<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name><name pos:line="3" pos:column="37">struct<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">path_simplify<pos:position pos:line="3" pos:column="57"/></name></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">simplify<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">sb<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">STRBUF_INIT<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">baselen<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">rc<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">cp<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">old_flags<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name><name pos:line="8" pos:column="25">dir<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">flags<pos:position pos:line="8" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>

	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&amp;&amp;<pos:position pos:line="10" pos:column="30"/></operator> <name><name pos:line="10" pos:column="23">path<pos:position pos:line="10" pos:column="27"/></name><index pos:line="10" pos:column="27">[<expr><name pos:line="10" pos:column="28">len<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr>]<pos:position pos:line="10" pos:column="36"/></index></name> <operator pos:line="10" pos:column="37">==<pos:position pos:line="10" pos:column="39"/></operator> <literal type="char" pos:line="10" pos:column="40">'/'<pos:position pos:line="10" pos:column="43"/></literal></expr>)<pos:position pos:line="10" pos:column="44"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">len<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">--<pos:position pos:line="11" pos:column="22"/></operator></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt></block></while>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">len<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">1<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">baselen<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">dir<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">flags<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">&amp;=<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="23">~<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">DIR_SHOW_OTHER_DIRECTORIES<pos:position pos:line="15" pos:column="50"/></name></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal></expr>)<pos:position pos:line="16" pos:column="18"/></condition> <block pos:line="16" pos:column="19">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">cp<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">path<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">+<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">baselen<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">+<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="39">!<pos:position pos:line="17" pos:column="40"/></operator><operator pos:line="17" pos:column="40">!<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">baselen<pos:position pos:line="17" pos:column="48"/></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">cp<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">memchr<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">cp<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="33">'/'<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">path<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">+<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">len<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">-<pos:position pos:line="18" pos:column="50"/></operator> <name pos:line="18" pos:column="51">cp<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">cp<pos:position pos:line="19" pos:column="24"/></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">baselen<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="35">len<pos:position pos:line="20" pos:column="38"/></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt></block></then>
		<else pos:line="21" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">baselen<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">=<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="35">cp<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">-<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="40">path<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_setlen<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><operator pos:line="23" pos:column="31">&amp;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="32">sb<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="36">0<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_add<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="29">sb<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">path<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">baselen<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><call><name pos:line="25" pos:column="22">is_directory<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name><name pos:line="25" pos:column="35">sb<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">buf<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43">
			<block type="pseudo"><break pos:line="26" pos:column="25">break;<pos:position pos:line="26" pos:column="31"/></break></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">simplify_away<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">sb<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">.<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">buf<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">sb<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">len<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">simplify<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="61"/></condition><then pos:line="27" pos:column="61">
			<block type="pseudo"><break pos:line="28" pos:column="25">break;<pos:position pos:line="28" pos:column="31"/></break></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">treat_one_path<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">dir<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="41">&amp;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="42">sb<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">simplify<pos:position pos:line="29" pos:column="54"/></name></expr></argument>,
				   <argument><expr><name pos:line="30" pos:column="36">DT_DIR<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">NULL<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call> <operator pos:line="30" pos:column="50">==<pos:position pos:line="30" pos:column="52"/></operator> <name pos:line="30" pos:column="53">path_none<pos:position pos:line="30" pos:column="62"/></name></expr>)<pos:position pos:line="30" pos:column="63"/></condition><then pos:line="30" pos:column="63">
			<block type="pseudo"><break pos:line="31" pos:column="25">break;<pos:position pos:line="31" pos:column="31"/></break></block></then></if> <comment type="block" pos:line="31" pos:column="32">/* do not recurse into it */</comment>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">len<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">&lt;=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="28">baselen<pos:position pos:line="32" pos:column="35"/></name></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36"> <block pos:line="32" pos:column="37">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">rc<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <literal type="number" pos:line="33" pos:column="30">1<pos:position pos:line="33" pos:column="31"/></literal></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
			<break pos:line="34" pos:column="25">break;<pos:position pos:line="34" pos:column="31"/></break> <comment type="block" pos:line="34" pos:column="32">/* finished checking */</comment>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">strbuf_release<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="25">sb<pos:position pos:line="37" pos:column="27"/></name></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">dir<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">flags<pos:position pos:line="38" pos:column="19"/></name></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">old_flags<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">rc<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3391_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ident_default_name<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">git_default_name<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">.<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">len<pos:position pos:line="3" pos:column="34"/></name></name></expr>)<pos:position pos:line="3" pos:column="35"/></condition><then pos:line="3" pos:column="35"> <block pos:line="3" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">copy_gecos<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><call><name pos:line="4" pos:column="28">xgetpwuid_self<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="4" pos:column="46">&amp;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="47">git_default_name<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">strbuf_trim<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><operator pos:line="5" pos:column="29">&amp;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="30">git_default_name<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<return pos:line="7" pos:column="9">return <expr><name><name pos:line="7" pos:column="16">git_default_name<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">buf<pos:position pos:line="7" pos:column="36"/></name></name></expr>;<pos:position pos:line="7" pos:column="37"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

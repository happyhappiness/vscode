<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_452_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">store_credential<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">string_list<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">fns<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">credential<pos:position pos:line="1" pos:column="78"/></name></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">c<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list_item<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">fn<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/*
	 * Sanity check that what we are storing is actually sensible.
	 * In particular, we can't make a URL without a protocol field.
	 * Without either a host or pathname (depending on the scheme),
	 * we have no primary key. And without a username and password,
	 * we are not actually storing a credential.
	 */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">c<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">protocol<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">!<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">(<pos:position pos:line="12" pos:column="31"/></operator><name><name pos:line="12" pos:column="31">c<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">host<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">||<pos:position pos:line="12" pos:column="41"/></operator> <name><name pos:line="12" pos:column="42">c<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">path<pos:position pos:line="12" pos:column="49"/></name></name><operator pos:line="12" pos:column="49">)<pos:position pos:line="12" pos:column="50"/></operator> <operator pos:line="12" pos:column="51">||<pos:position pos:line="12" pos:column="53"/></operator> <operator pos:line="12" pos:column="54">!<pos:position pos:line="12" pos:column="55"/></operator><name><name pos:line="12" pos:column="55">c<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">username<pos:position pos:line="12" pos:column="66"/></name></name> <operator pos:line="12" pos:column="67">||<pos:position pos:line="12" pos:column="69"/></operator> <operator pos:line="12" pos:column="70">!<pos:position pos:line="12" pos:column="71"/></operator><name><name pos:line="12" pos:column="71">c<pos:position pos:line="12" pos:column="72"/></name><operator pos:line="12" pos:column="72">-&gt;<pos:position pos:line="12" pos:column="77"/></operator><name pos:line="12" pos:column="74">password<pos:position pos:line="12" pos:column="82"/></name></name></expr>)<pos:position pos:line="12" pos:column="83"/></condition><then pos:line="12" pos:column="83">
		<block type="pseudo"><return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return></block></then></if>

	<macro><name pos:line="15" pos:column="9">for_each_string_list_item<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument pos:line="15" pos:column="35">fn<pos:position pos:line="15" pos:column="37"/></argument>, <argument pos:line="15" pos:column="39">fns<pos:position pos:line="15" pos:column="42"/></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></macro>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">access<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">fn<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">string<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">F_OK<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47"> <block pos:line="16" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">store_credential_file<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name><name pos:line="17" pos:column="47">fn<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">string<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">c<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
			<return pos:line="18" pos:column="25">return;<pos:position pos:line="18" pos:column="32"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
	<comment type="block" pos:line="20" pos:column="9">/*
	 * Write credential to the filename specified by fns-&gt;items[0], thus
	 * creating it
	 */</comment>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">fns<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">nr<pos:position pos:line="24" pos:column="20"/></name></name></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">store_credential_file<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name><name pos:line="25" pos:column="39">fns<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">items<pos:position pos:line="25" pos:column="49"/></name><index pos:line="25" pos:column="49">[<expr><literal type="number" pos:line="25" pos:column="50">0<pos:position pos:line="25" pos:column="51"/></literal></expr>]<pos:position pos:line="25" pos:column="52"/></index></name><operator pos:line="25" pos:column="52">.<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="53">string<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">c<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt></block></then></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

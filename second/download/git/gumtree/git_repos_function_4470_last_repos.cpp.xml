<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4470_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">set_ref_status_for_push<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">ref<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">remote_refs<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">send_mirror<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">force_update<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ref<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">ref<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">remote_refs<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></init> <condition><expr><name pos:line="6" pos:column="33">ref<pos:position pos:line="6" pos:column="36"/></name></expr>;<pos:position pos:line="6" pos:column="37"/></condition> <incr><expr><name pos:line="6" pos:column="38">ref<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">=<pos:position pos:line="6" pos:column="43"/></operator> <name><name pos:line="6" pos:column="44">ref<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">next<pos:position pos:line="6" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="54"/></control> <block pos:line="6" pos:column="55">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">force_ref_update<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name><name pos:line="7" pos:column="40">ref<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="45">force<pos:position pos:line="7" pos:column="50"/></name></name> <operator pos:line="7" pos:column="51">||<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="54">force_update<pos:position pos:line="7" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="67"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">reject_reason<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><literal type="number" pos:line="8" pos:column="37">0<pos:position pos:line="8" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>

		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">ref<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">peer_ref<pos:position pos:line="10" pos:column="34"/></name></name></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">oidcpy<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><name><name pos:line="11" pos:column="33">ref<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">new_oid<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name><name pos:line="11" pos:column="48">ref<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">peer_ref<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">-&gt;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="63">new_oid<pos:position pos:line="11" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt></block></then>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><operator pos:line="12" pos:column="26">!<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">send_mirror<pos:position pos:line="12" pos:column="38"/></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if></elseif></if>

		<expr_stmt><expr><name><name pos:line="15" pos:column="17">ref<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">deletion<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <call><name pos:line="15" pos:column="33">is_null_oid<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><operator pos:line="15" pos:column="45">&amp;<pos:position pos:line="15" pos:column="50"/></operator><name><name pos:line="15" pos:column="46">ref<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">new_oid<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">ref<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">deletion<pos:position pos:line="16" pos:column="35"/></name></name> <operator pos:line="16" pos:column="36">&amp;&amp;<pos:position pos:line="16" pos:column="46"/></operator>
			<operator pos:line="17" pos:column="25">!<pos:position pos:line="17" pos:column="26"/></operator><call><name pos:line="17" pos:column="26">oidcmp<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name><name pos:line="17" pos:column="34">ref<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">old_oid<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="48">&amp;<pos:position pos:line="17" pos:column="53"/></operator><name><name pos:line="17" pos:column="49">ref<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">new_oid<pos:position pos:line="17" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="63"/></condition><then pos:line="17" pos:column="63"> <block pos:line="17" pos:column="64">{
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">ref<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">status<pos:position pos:line="18" pos:column="36"/></name></name> <operator pos:line="18" pos:column="37">=<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">REF_STATUS_UPTODATE<pos:position pos:line="18" pos:column="58"/></name></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
			<continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="22" pos:column="17">/*
		 * If the remote ref has moved and is now different
		 * from what we expect, reject any push.
		 *
		 * It also is an error if the user told us to check
		 * with the remote-tracking branch to find the value
		 * to expect, but we did not have such a tracking
		 * branch.
		 */</comment>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name><name pos:line="31" pos:column="21">ref<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">expect_old_sha1<pos:position pos:line="31" pos:column="41"/></name></name></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42"> <block pos:line="31" pos:column="43">{
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><call><name pos:line="32" pos:column="29">oidcmp<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name><name pos:line="32" pos:column="37">ref<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">old_oid<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="51">&amp;<pos:position pos:line="32" pos:column="56"/></operator><name><name pos:line="32" pos:column="52">ref<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">old_oid_expect<pos:position pos:line="32" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="73"/></condition><then pos:line="32" pos:column="73">
				<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="33">reject_reason<pos:position pos:line="33" pos:column="46"/></name> <operator pos:line="33" pos:column="47">=<pos:position pos:line="33" pos:column="48"/></operator> <name pos:line="33" pos:column="49">REF_STATUS_REJECT_STALE<pos:position pos:line="33" pos:column="72"/></name></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt></block></then>
			<else pos:line="34" pos:column="25">else
				<comment type="block" pos:line="35" pos:column="33">/* If the ref isn't stale then force the update. */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="33">force_ref_update<pos:position pos:line="36" pos:column="49"/></name> <operator pos:line="36" pos:column="50">=<pos:position pos:line="36" pos:column="51"/></operator> <literal type="number" pos:line="36" pos:column="52">1<pos:position pos:line="36" pos:column="53"/></literal></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt></block></else></if>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="39" pos:column="17">/*
		 * If the update isn't already rejected then check
		 * the usual "must fast-forward" rules.
		 *
		 * Decide whether an individual refspec A:B can be
		 * pushed.  The push will succeed if any of the
		 * following are true:
		 *
		 * (1) the remote reference B does not exist
		 *
		 * (2) the remote reference B is being removed (i.e.,
		 *     pushing :B where no source is specified)
		 *
		 * (3) the destination is not under refs/tags/, and
		 *     if the old and new value is a commit, the new
		 *     is a descendant of the old.
		 *
		 * (4) it is forced using the +A:B notation, or by
		 *     passing the --force argument
		 */</comment>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">!<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">reject_reason<pos:position pos:line="60" pos:column="35"/></name> <operator pos:line="60" pos:column="36">&amp;&amp;<pos:position pos:line="60" pos:column="46"/></operator> <operator pos:line="60" pos:column="39">!<pos:position pos:line="60" pos:column="40"/></operator><name><name pos:line="60" pos:column="40">ref<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">deletion<pos:position pos:line="60" pos:column="53"/></name></name> <operator pos:line="60" pos:column="54">&amp;&amp;<pos:position pos:line="60" pos:column="64"/></operator> <operator pos:line="60" pos:column="57">!<pos:position pos:line="60" pos:column="58"/></operator><call><name pos:line="60" pos:column="58">is_null_oid<pos:position pos:line="60" pos:column="69"/></name><argument_list pos:line="60" pos:column="69">(<argument><expr><operator pos:line="60" pos:column="70">&amp;<pos:position pos:line="60" pos:column="75"/></operator><name><name pos:line="60" pos:column="71">ref<pos:position pos:line="60" pos:column="74"/></name><operator pos:line="60" pos:column="74">-&gt;<pos:position pos:line="60" pos:column="79"/></operator><name pos:line="60" pos:column="76">old_oid<pos:position pos:line="60" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="85"/></condition><then pos:line="60" pos:column="85"> <block pos:line="60" pos:column="86">{
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><call><name pos:line="61" pos:column="29">starts_with<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name><name pos:line="61" pos:column="41">ref<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">name<pos:position pos:line="61" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="52">"refs/tags/"<pos:position pos:line="61" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="66"/></condition><then pos:line="61" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="33">reject_reason<pos:position pos:line="62" pos:column="46"/></name> <operator pos:line="62" pos:column="47">=<pos:position pos:line="62" pos:column="48"/></operator> <name pos:line="62" pos:column="49">REF_STATUS_REJECT_ALREADY_EXISTS<pos:position pos:line="62" pos:column="81"/></name></expr>;<pos:position pos:line="62" pos:column="82"/></expr_stmt></block></then>
			<elseif pos:line="63" pos:column="25">else <if pos:line="63" pos:column="30">if <condition pos:line="63" pos:column="33">(<expr><operator pos:line="63" pos:column="34">!<pos:position pos:line="63" pos:column="35"/></operator><call><name pos:line="63" pos:column="35">has_object_file<pos:position pos:line="63" pos:column="50"/></name><argument_list pos:line="63" pos:column="50">(<argument><expr><operator pos:line="63" pos:column="51">&amp;<pos:position pos:line="63" pos:column="56"/></operator><name><name pos:line="63" pos:column="52">ref<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">-&gt;<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="57">old_oid<pos:position pos:line="63" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="66"/></condition><then pos:line="63" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="33">reject_reason<pos:position pos:line="64" pos:column="46"/></name> <operator pos:line="64" pos:column="47">=<pos:position pos:line="64" pos:column="48"/></operator> <name pos:line="64" pos:column="49">REF_STATUS_REJECT_FETCH_FIRST<pos:position pos:line="64" pos:column="78"/></name></expr>;<pos:position pos:line="64" pos:column="79"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="65" pos:column="25">else <if pos:line="65" pos:column="30">if <condition pos:line="65" pos:column="33">(<expr><operator pos:line="65" pos:column="34">!<pos:position pos:line="65" pos:column="35"/></operator><call><name pos:line="65" pos:column="35">lookup_commit_reference_gently<pos:position pos:line="65" pos:column="65"/></name><argument_list pos:line="65" pos:column="65">(<argument><expr><operator pos:line="65" pos:column="66">&amp;<pos:position pos:line="65" pos:column="71"/></operator><name><name pos:line="65" pos:column="67">ref<pos:position pos:line="65" pos:column="70"/></name><operator pos:line="65" pos:column="70">-&gt;<pos:position pos:line="65" pos:column="75"/></operator><name pos:line="65" pos:column="72">old_oid<pos:position pos:line="65" pos:column="79"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="81">1<pos:position pos:line="65" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="83"/></argument_list></call> <operator pos:line="65" pos:column="84">||<pos:position pos:line="65" pos:column="86"/></operator>
				 <operator pos:line="66" pos:column="34">!<pos:position pos:line="66" pos:column="35"/></operator><call><name pos:line="66" pos:column="35">lookup_commit_reference_gently<pos:position pos:line="66" pos:column="65"/></name><argument_list pos:line="66" pos:column="65">(<argument><expr><operator pos:line="66" pos:column="66">&amp;<pos:position pos:line="66" pos:column="71"/></operator><name><name pos:line="66" pos:column="67">ref<pos:position pos:line="66" pos:column="70"/></name><operator pos:line="66" pos:column="70">-&gt;<pos:position pos:line="66" pos:column="75"/></operator><name pos:line="66" pos:column="72">new_oid<pos:position pos:line="66" pos:column="79"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="81">1<pos:position pos:line="66" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="84"/></condition><then pos:line="66" pos:column="84">
				<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="33">reject_reason<pos:position pos:line="67" pos:column="46"/></name> <operator pos:line="67" pos:column="47">=<pos:position pos:line="67" pos:column="48"/></operator> <name pos:line="67" pos:column="49">REF_STATUS_REJECT_NEEDS_FORCE<pos:position pos:line="67" pos:column="78"/></name></expr>;<pos:position pos:line="67" pos:column="79"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="68" pos:column="25">else <if pos:line="68" pos:column="30">if <condition pos:line="68" pos:column="33">(<expr><operator pos:line="68" pos:column="34">!<pos:position pos:line="68" pos:column="35"/></operator><call><name pos:line="68" pos:column="35">ref_newer<pos:position pos:line="68" pos:column="44"/></name><argument_list pos:line="68" pos:column="44">(<argument><expr><operator pos:line="68" pos:column="45">&amp;<pos:position pos:line="68" pos:column="50"/></operator><name><name pos:line="68" pos:column="46">ref<pos:position pos:line="68" pos:column="49"/></name><operator pos:line="68" pos:column="49">-&gt;<pos:position pos:line="68" pos:column="54"/></operator><name pos:line="68" pos:column="51">new_oid<pos:position pos:line="68" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="60">&amp;<pos:position pos:line="68" pos:column="65"/></operator><name><name pos:line="68" pos:column="61">ref<pos:position pos:line="68" pos:column="64"/></name><operator pos:line="68" pos:column="64">-&gt;<pos:position pos:line="68" pos:column="69"/></operator><name pos:line="68" pos:column="66">old_oid<pos:position pos:line="68" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="75"/></condition><then pos:line="68" pos:column="75">
				<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="33">reject_reason<pos:position pos:line="69" pos:column="46"/></name> <operator pos:line="69" pos:column="47">=<pos:position pos:line="69" pos:column="48"/></operator> <name pos:line="69" pos:column="49">REF_STATUS_REJECT_NONFASTFORWARD<pos:position pos:line="69" pos:column="81"/></name></expr>;<pos:position pos:line="69" pos:column="82"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="72" pos:column="17">/*
		 * "--force" will defeat any rejection implemented
		 * by the rules above.
		 */</comment>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><operator pos:line="76" pos:column="21">!<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="22">force_ref_update<pos:position pos:line="76" pos:column="38"/></name></expr>)<pos:position pos:line="76" pos:column="39"/></condition><then pos:line="76" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="25">ref<pos:position pos:line="77" pos:column="28"/></name><operator pos:line="77" pos:column="28">-&gt;<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="30">status<pos:position pos:line="77" pos:column="36"/></name></name> <operator pos:line="77" pos:column="37">=<pos:position pos:line="77" pos:column="38"/></operator> <name pos:line="77" pos:column="39">reject_reason<pos:position pos:line="77" pos:column="52"/></name></expr>;<pos:position pos:line="77" pos:column="53"/></expr_stmt></block></then>
		<elseif pos:line="78" pos:column="17">else <if pos:line="78" pos:column="22">if <condition pos:line="78" pos:column="25">(<expr><name pos:line="78" pos:column="26">reject_reason<pos:position pos:line="78" pos:column="39"/></name></expr>)<pos:position pos:line="78" pos:column="40"/></condition><then pos:line="78" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="25">ref<pos:position pos:line="79" pos:column="28"/></name><operator pos:line="79" pos:column="28">-&gt;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="30">forced_update<pos:position pos:line="79" pos:column="43"/></name></name> <operator pos:line="79" pos:column="44">=<pos:position pos:line="79" pos:column="45"/></operator> <literal type="number" pos:line="79" pos:column="46">1<pos:position pos:line="79" pos:column="47"/></literal></expr>;<pos:position pos:line="79" pos:column="48"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="80" pos:column="10"/></block></for>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4181_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">skip_imap_list_l<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">sp<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">level<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">s<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">sp<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init pos:line="5" pos:column="14">;<pos:position pos:line="5" pos:column="15"/></init><condition pos:line="5" pos:column="15">;<pos:position pos:line="5" pos:column="16"/></condition><incr/>)<pos:position pos:line="5" pos:column="17"/></control> <block pos:line="5" pos:column="18">{
		<while pos:line="6" pos:column="17">while <condition pos:line="6" pos:column="23">(<expr><call><name pos:line="6" pos:column="24">isspace<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><operator pos:line="6" pos:column="32">(<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">unsigned<pos:position pos:line="6" pos:column="41"/></name> <name pos:line="6" pos:column="42">char<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">)<pos:position pos:line="6" pos:column="47"/></operator><operator pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">s<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="51"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">s<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">++<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></while>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">level<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">&amp;&amp;<pos:position pos:line="8" pos:column="37"/></operator> <operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">s<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">==<pos:position pos:line="8" pos:column="35"/></operator> <literal type="char" pos:line="8" pos:column="36">')'<pos:position pos:line="8" pos:column="39"/></literal></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <block pos:line="8" pos:column="41">{
			<expr_stmt><expr><name pos:line="9" pos:column="25">s<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">++<pos:position pos:line="9" pos:column="28"/></operator></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
			<break pos:line="10" pos:column="25">break;<pos:position pos:line="10" pos:column="31"/></break>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">s<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <literal type="char" pos:line="12" pos:column="27">'('<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
			<comment type="block" pos:line="13" pos:column="25">/* sublist */</comment>
			<expr_stmt><expr><name pos:line="14" pos:column="25">s<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">++<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><call><name pos:line="15" pos:column="29">skip_imap_list_l<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><operator pos:line="15" pos:column="46">&amp;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="47">s<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">level<pos:position pos:line="15" pos:column="55"/></name> <operator pos:line="15" pos:column="56">+<pos:position pos:line="15" pos:column="57"/></operator> <literal type="number" pos:line="15" pos:column="58">1<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="61"/></condition><then pos:line="15" pos:column="61">
				<block type="pseudo"><goto pos:line="16" pos:column="33">goto <name pos:line="16" pos:column="38">bail<pos:position pos:line="16" pos:column="42"/></name>;<pos:position pos:line="16" pos:column="43"/></goto></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><operator pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">s<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <literal type="char" pos:line="17" pos:column="34">'"'<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38"> <block pos:line="17" pos:column="39">{
			<comment type="block" pos:line="18" pos:column="25">/* quoted string */</comment>
			<expr_stmt><expr><name pos:line="19" pos:column="25">s<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">++<pos:position pos:line="19" pos:column="28"/></operator></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
			<for pos:line="20" pos:column="25">for <control pos:line="20" pos:column="29">(<init pos:line="20" pos:column="30">;<pos:position pos:line="20" pos:column="31"/></init> <condition><expr><operator pos:line="20" pos:column="32">*<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">s<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">!=<pos:position pos:line="20" pos:column="37"/></operator> <literal type="char" pos:line="20" pos:column="38">'"'<pos:position pos:line="20" pos:column="41"/></literal></expr>;<pos:position pos:line="20" pos:column="42"/></condition> <incr><expr><name pos:line="20" pos:column="43">s<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">++<pos:position pos:line="20" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="47"/></control>
				<block type="pseudo"><if pos:line="21" pos:column="33">if <condition pos:line="21" pos:column="36">(<expr><operator pos:line="21" pos:column="37">!<pos:position pos:line="21" pos:column="38"/></operator><operator pos:line="21" pos:column="38">*<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">s<pos:position pos:line="21" pos:column="40"/></name></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41">
					<block type="pseudo"><goto pos:line="22" pos:column="41">goto <name pos:line="22" pos:column="46">bail<pos:position pos:line="22" pos:column="50"/></name>;<pos:position pos:line="22" pos:column="51"/></goto></block></then></if></block></for>
			<expr_stmt><expr><name pos:line="23" pos:column="25">s<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">++<pos:position pos:line="23" pos:column="28"/></operator></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif> <else pos:line="24" pos:column="19">else <block pos:line="24" pos:column="24">{
			<comment type="block" pos:line="25" pos:column="25">/* atom */</comment>
			<for pos:line="26" pos:column="25">for <control pos:line="26" pos:column="29">(<init pos:line="26" pos:column="30">;<pos:position pos:line="26" pos:column="31"/></init> <condition><expr><operator pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">s<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">&amp;&amp;<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="38">!<pos:position pos:line="26" pos:column="39"/></operator><call><name pos:line="26" pos:column="39">isspace<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><operator pos:line="26" pos:column="47">(<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">unsigned<pos:position pos:line="26" pos:column="56"/></name> <name pos:line="26" pos:column="57">char<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">)<pos:position pos:line="26" pos:column="62"/></operator><operator pos:line="26" pos:column="62">*<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="63">s<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></condition> <incr><expr><name pos:line="26" pos:column="67">s<pos:position pos:line="26" pos:column="68"/></name><operator pos:line="26" pos:column="68">++<pos:position pos:line="26" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="71"/></control>
				<block type="pseudo"><if pos:line="27" pos:column="33">if <condition pos:line="27" pos:column="36">(<expr><name pos:line="27" pos:column="37">level<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">&amp;&amp;<pos:position pos:line="27" pos:column="53"/></operator> <operator pos:line="27" pos:column="46">*<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="47">s<pos:position pos:line="27" pos:column="48"/></name> <operator pos:line="27" pos:column="49">==<pos:position pos:line="27" pos:column="51"/></operator> <literal type="char" pos:line="27" pos:column="52">')'<pos:position pos:line="27" pos:column="55"/></literal></expr>)<pos:position pos:line="27" pos:column="56"/></condition><then pos:line="27" pos:column="56">
					<block type="pseudo"><break pos:line="28" pos:column="41">break;<pos:position pos:line="28" pos:column="47"/></break></block></then></if></block></for>
		}<pos:position pos:line="29" pos:column="18"/></block></else></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">level<pos:position pos:line="31" pos:column="27"/></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
			<block type="pseudo"><break pos:line="32" pos:column="25">break;<pos:position pos:line="32" pos:column="31"/></break></block></then></if>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><operator pos:line="33" pos:column="22">*<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">s<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25">
			<block type="pseudo"><goto pos:line="34" pos:column="25">goto <name pos:line="34" pos:column="30">bail<pos:position pos:line="34" pos:column="34"/></name>;<pos:position pos:line="34" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></for>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">sp<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">s<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>

<label><name pos:line="39" pos:column="1">bail<pos:position pos:line="39" pos:column="5"/></name>:<pos:position pos:line="39" pos:column="6"/></label>
	<return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">1<pos:position pos:line="40" pos:column="18"/></literal></expr>;<pos:position pos:line="40" pos:column="19"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5225_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">get_base_commit<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">base_commit<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">commit<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">list<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="3" pos:column="39">int<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">total<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">base<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">NULL<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier><modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">rev<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="20">rev_nr<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">base_commit<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <call><name pos:line="9" pos:column="28">strcmp<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">base_commit<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="48">"auto"<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56"> <block pos:line="9" pos:column="57">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">base<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">lookup_commit_reference_by_name<pos:position pos:line="10" pos:column="55"/></name><argument_list pos:line="10" pos:column="55">(<argument><expr><name pos:line="10" pos:column="56">base_commit<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">base<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><call><name pos:line="12" pos:column="29">_<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><literal type="string" pos:line="12" pos:column="31">"Unknown commit %s"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">base_commit<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><operator pos:line="13" pos:column="20">(<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">base_commit<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">&amp;&amp;<pos:position pos:line="13" pos:column="43"/></operator> <operator pos:line="13" pos:column="36">!<pos:position pos:line="13" pos:column="37"/></operator><call><name pos:line="13" pos:column="37">strcmp<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">base_commit<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="57">"auto"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call><operator pos:line="13" pos:column="64">)<pos:position pos:line="13" pos:column="65"/></operator> <operator pos:line="13" pos:column="66">||<pos:position pos:line="13" pos:column="68"/></operator> <name pos:line="13" pos:column="69">base_auto<pos:position pos:line="13" pos:column="78"/></name></expr>)<pos:position pos:line="13" pos:column="79"/></condition><then pos:line="13" pos:column="79"> <block pos:line="13" pos:column="80">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">branch<pos:position pos:line="14" pos:column="30"/></name></name> <modifier pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></modifier></type><name pos:line="14" pos:column="32">curr_branch<pos:position pos:line="14" pos:column="43"/></name> <init pos:line="14" pos:column="44">= <expr><call><name pos:line="14" pos:column="46">branch_get<pos:position pos:line="14" pos:column="56"/></name><argument_list pos:line="14" pos:column="56">(<argument><expr><name pos:line="14" pos:column="57">NULL<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="63"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <modifier pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></modifier></type><name pos:line="15" pos:column="29">upstream<pos:position pos:line="15" pos:column="37"/></name> <init pos:line="15" pos:column="38">= <expr><call><name pos:line="15" pos:column="40">branch_get_upstream<pos:position pos:line="15" pos:column="59"/></name><argument_list pos:line="15" pos:column="59">(<argument><expr><name pos:line="15" pos:column="60">curr_branch<pos:position pos:line="15" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="73">NULL<pos:position pos:line="15" pos:column="77"/></name></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="79"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">upstream<pos:position pos:line="16" pos:column="29"/></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
			<decl_stmt><decl><type><name><name pos:line="17" pos:column="25">struct<pos:position pos:line="17" pos:column="31"/></name> <name pos:line="17" pos:column="32">commit_list<pos:position pos:line="17" pos:column="43"/></name></name> <modifier pos:line="17" pos:column="44">*<pos:position pos:line="17" pos:column="45"/></modifier></type><name pos:line="17" pos:column="45">base_list<pos:position pos:line="17" pos:column="54"/></name></decl>;<pos:position pos:line="17" pos:column="55"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="18" pos:column="25">struct<pos:position pos:line="18" pos:column="31"/></name> <name pos:line="18" pos:column="32">commit<pos:position pos:line="18" pos:column="38"/></name></name> <modifier pos:line="18" pos:column="39">*<pos:position pos:line="18" pos:column="40"/></modifier></type><name pos:line="18" pos:column="40">commit<pos:position pos:line="18" pos:column="46"/></name></decl>;<pos:position pos:line="18" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="19" pos:column="25">unsigned<pos:position pos:line="19" pos:column="33"/></name> <name pos:line="19" pos:column="34">char<pos:position pos:line="19" pos:column="38"/></name></type> <name><name pos:line="19" pos:column="39">sha1<pos:position pos:line="19" pos:column="43"/></name><index pos:line="19" pos:column="43">[<expr><literal type="number" pos:line="19" pos:column="44">20<pos:position pos:line="19" pos:column="46"/></literal></expr>]<pos:position pos:line="19" pos:column="47"/></index></name></decl>;<pos:position pos:line="19" pos:column="48"/></decl_stmt>

			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><call><name pos:line="21" pos:column="29">get_sha1<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">upstream<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">sha1<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="54"/></condition><then pos:line="21" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="33">die<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><call><name pos:line="22" pos:column="37">_<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><literal type="string" pos:line="22" pos:column="39">"Failed to resolve '%s' as a valid ref."<pos:position pos:line="22" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="82">upstream<pos:position pos:line="22" pos:column="90"/></name></expr></argument>)<pos:position pos:line="22" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="92"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="23" pos:column="25">commit<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <call><name pos:line="23" pos:column="34">lookup_commit_or_die<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">sha1<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="61">"upstream base"<pos:position pos:line="23" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">base_list<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <call><name pos:line="24" pos:column="37">get_merge_bases_many<pos:position pos:line="24" pos:column="57"/></name><argument_list pos:line="24" pos:column="57">(<argument><expr><name pos:line="24" pos:column="58">commit<pos:position pos:line="24" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="66">total<pos:position pos:line="24" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="73">list<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
			<comment type="block" pos:line="25" pos:column="25">/* There should be one and only one merge base. */</comment>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><operator pos:line="26" pos:column="29">!<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">base_list<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">||<pos:position pos:line="26" pos:column="42"/></operator> <name><name pos:line="26" pos:column="43">base_list<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">-&gt;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="54">next<pos:position pos:line="26" pos:column="58"/></name></name></expr>)<pos:position pos:line="26" pos:column="59"/></condition><then pos:line="26" pos:column="59">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="33">die<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><call><name pos:line="27" pos:column="37">_<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><literal type="string" pos:line="27" pos:column="39">"Could not find exact merge base."<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="76"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="28" pos:column="25">base<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <name><name pos:line="28" pos:column="32">base_list<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">item<pos:position pos:line="28" pos:column="47"/></name></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">free_commit_list<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">base_list<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then> <else pos:line="30" pos:column="19">else <block pos:line="30" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><call><name pos:line="31" pos:column="29">_<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><literal type="string" pos:line="31" pos:column="31">"Failed to get upstream, if you want to record base commit automatically,\n"<pos:position pos:line="31" pos:column="107"/></literal>
			      <literal type="string" pos:line="32" pos:column="31">"please use git branch --set-upstream-to to track a remote branch.\n"<pos:position pos:line="32" pos:column="100"/></literal>
			      <literal type="string" pos:line="33" pos:column="31">"Or you could specify base commit by --base=&lt;base-commit-id&gt; manually."<pos:position pos:line="33" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="105"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></else></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">ALLOC_ARRAY<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">rev<pos:position pos:line="37" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="26">total<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="25">total<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></condition> <incr><expr><name pos:line="38" pos:column="32">i<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">++<pos:position pos:line="38" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="36"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="17">rev<pos:position pos:line="39" pos:column="20"/></name><index pos:line="39" pos:column="20">[<expr><name pos:line="39" pos:column="21">i<pos:position pos:line="39" pos:column="22"/></name></expr>]<pos:position pos:line="39" pos:column="23"/></index></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name><name pos:line="39" pos:column="26">list<pos:position pos:line="39" pos:column="30"/></name><index pos:line="39" pos:column="30">[<expr><name pos:line="39" pos:column="31">i<pos:position pos:line="39" pos:column="32"/></name></expr>]<pos:position pos:line="39" pos:column="33"/></index></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="41" pos:column="9">rev_nr<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">total<pos:position pos:line="41" pos:column="23"/></name></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
	<comment type="block" pos:line="42" pos:column="9">/*
	 * Get merge base through pair-wise computations
	 * and store it in rev[0].
	 */</comment>
	<while pos:line="46" pos:column="9">while <condition pos:line="46" pos:column="15">(<expr><name pos:line="46" pos:column="16">rev_nr<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">&gt;<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="25">1<pos:position pos:line="46" pos:column="26"/></literal></expr>)<pos:position pos:line="46" pos:column="27"/></condition> <block pos:line="46" pos:column="28">{
		<for pos:line="47" pos:column="17">for <control pos:line="47" pos:column="21">(<init><expr><name pos:line="47" pos:column="22">i<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></init> <condition><expr><name pos:line="47" pos:column="29">i<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">&lt;<pos:position pos:line="47" pos:column="35"/></operator> <name pos:line="47" pos:column="33">rev_nr<pos:position pos:line="47" pos:column="39"/></name> <operator pos:line="47" pos:column="40">/<pos:position pos:line="47" pos:column="41"/></operator> <literal type="number" pos:line="47" pos:column="42">2<pos:position pos:line="47" pos:column="43"/></literal></expr>;<pos:position pos:line="47" pos:column="44"/></condition> <incr><expr><name pos:line="47" pos:column="45">i<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">++<pos:position pos:line="47" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="49"/></control> <block pos:line="47" pos:column="50">{
			<decl_stmt><decl><type><name><name pos:line="48" pos:column="25">struct<pos:position pos:line="48" pos:column="31"/></name> <name pos:line="48" pos:column="32">commit_list<pos:position pos:line="48" pos:column="43"/></name></name> <modifier pos:line="48" pos:column="44">*<pos:position pos:line="48" pos:column="45"/></modifier></type><name pos:line="48" pos:column="45">merge_base<pos:position pos:line="48" pos:column="55"/></name></decl>;<pos:position pos:line="48" pos:column="56"/></decl_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">merge_base<pos:position pos:line="49" pos:column="35"/></name> <operator pos:line="49" pos:column="36">=<pos:position pos:line="49" pos:column="37"/></operator> <call><name pos:line="49" pos:column="38">get_merge_bases<pos:position pos:line="49" pos:column="53"/></name><argument_list pos:line="49" pos:column="53">(<argument><expr><name><name pos:line="49" pos:column="54">rev<pos:position pos:line="49" pos:column="57"/></name><index pos:line="49" pos:column="57">[<expr><literal type="number" pos:line="49" pos:column="58">2<pos:position pos:line="49" pos:column="59"/></literal> <operator pos:line="49" pos:column="60">*<pos:position pos:line="49" pos:column="61"/></operator> <name pos:line="49" pos:column="62">i<pos:position pos:line="49" pos:column="63"/></name></expr>]<pos:position pos:line="49" pos:column="64"/></index></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="66">rev<pos:position pos:line="49" pos:column="69"/></name><index pos:line="49" pos:column="69">[<expr><literal type="number" pos:line="49" pos:column="70">2<pos:position pos:line="49" pos:column="71"/></literal> <operator pos:line="49" pos:column="72">*<pos:position pos:line="49" pos:column="73"/></operator> <name pos:line="49" pos:column="74">i<pos:position pos:line="49" pos:column="75"/></name> <operator pos:line="49" pos:column="76">+<pos:position pos:line="49" pos:column="77"/></operator> <literal type="number" pos:line="49" pos:column="78">1<pos:position pos:line="49" pos:column="79"/></literal></expr>]<pos:position pos:line="49" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="82"/></expr_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">merge_base<pos:position pos:line="50" pos:column="40"/></name> <operator pos:line="50" pos:column="41">||<pos:position pos:line="50" pos:column="43"/></operator> <name><name pos:line="50" pos:column="44">merge_base<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">-&gt;<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="56">next<pos:position pos:line="50" pos:column="60"/></name></name></expr>)<pos:position pos:line="50" pos:column="61"/></condition><then pos:line="50" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="33">die<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><call><name pos:line="51" pos:column="37">_<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">(<argument><expr><literal type="string" pos:line="51" pos:column="39">"Failed to find exact merge base"<pos:position pos:line="51" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="75"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name><name pos:line="53" pos:column="25">rev<pos:position pos:line="53" pos:column="28"/></name><index pos:line="53" pos:column="28">[<expr><name pos:line="53" pos:column="29">i<pos:position pos:line="53" pos:column="30"/></name></expr>]<pos:position pos:line="53" pos:column="31"/></index></name> <operator pos:line="53" pos:column="32">=<pos:position pos:line="53" pos:column="33"/></operator> <name><name pos:line="53" pos:column="34">merge_base<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">-&gt;<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="46">item<pos:position pos:line="53" pos:column="50"/></name></name></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></for>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">rev_nr<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">%<pos:position pos:line="56" pos:column="29"/></operator> <literal type="number" pos:line="56" pos:column="30">2<pos:position pos:line="56" pos:column="31"/></literal></expr>)<pos:position pos:line="56" pos:column="32"/></condition><then pos:line="56" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="25">rev<pos:position pos:line="57" pos:column="28"/></name><index pos:line="57" pos:column="28">[<expr><name pos:line="57" pos:column="29">i<pos:position pos:line="57" pos:column="30"/></name></expr>]<pos:position pos:line="57" pos:column="31"/></index></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <name><name pos:line="57" pos:column="34">rev<pos:position pos:line="57" pos:column="37"/></name><index pos:line="57" pos:column="37">[<expr><literal type="number" pos:line="57" pos:column="38">2<pos:position pos:line="57" pos:column="39"/></literal> <operator pos:line="57" pos:column="40">*<pos:position pos:line="57" pos:column="41"/></operator> <name pos:line="57" pos:column="42">i<pos:position pos:line="57" pos:column="43"/></name></expr>]<pos:position pos:line="57" pos:column="44"/></index></name></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="58" pos:column="17">rev_nr<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <operator pos:line="58" pos:column="26">(<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="27">rev_nr<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">+<pos:position pos:line="58" pos:column="35"/></operator> <literal type="number" pos:line="58" pos:column="36">1<pos:position pos:line="58" pos:column="37"/></literal><operator pos:line="58" pos:column="37">)<pos:position pos:line="58" pos:column="38"/></operator> <operator pos:line="58" pos:column="39">/<pos:position pos:line="58" pos:column="40"/></operator> <literal type="number" pos:line="58" pos:column="41">2<pos:position pos:line="58" pos:column="42"/></literal></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></while>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><call><name pos:line="61" pos:column="14">in_merge_bases<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">base<pos:position pos:line="61" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="35">rev<pos:position pos:line="61" pos:column="38"/></name><index pos:line="61" pos:column="38">[<expr><literal type="number" pos:line="61" pos:column="39">0<pos:position pos:line="61" pos:column="40"/></literal></expr>]<pos:position pos:line="61" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="43"/></condition><then pos:line="61" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">die<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><call><name pos:line="62" pos:column="21">_<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><literal type="string" pos:line="62" pos:column="23">"base commit should be the ancestor of revision list"<pos:position pos:line="62" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="79"/></expr_stmt></block></then></if>

	<for pos:line="64" pos:column="9">for <control pos:line="64" pos:column="13">(<init><expr><name pos:line="64" pos:column="14">i<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <literal type="number" pos:line="64" pos:column="18">0<pos:position pos:line="64" pos:column="19"/></literal></expr>;<pos:position pos:line="64" pos:column="20"/></init> <condition><expr><name pos:line="64" pos:column="21">i<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">&lt;<pos:position pos:line="64" pos:column="27"/></operator> <name pos:line="64" pos:column="25">total<pos:position pos:line="64" pos:column="30"/></name></expr>;<pos:position pos:line="64" pos:column="31"/></condition> <incr><expr><name pos:line="64" pos:column="32">i<pos:position pos:line="64" pos:column="33"/></name><operator pos:line="64" pos:column="33">++<pos:position pos:line="64" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="64" pos:column="36"/></control> <block pos:line="64" pos:column="37">{
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">base<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">==<pos:position pos:line="65" pos:column="28"/></operator> <name><name pos:line="65" pos:column="29">list<pos:position pos:line="65" pos:column="33"/></name><index pos:line="65" pos:column="33">[<expr><name pos:line="65" pos:column="34">i<pos:position pos:line="65" pos:column="35"/></name></expr>]<pos:position pos:line="65" pos:column="36"/></index></name></expr>)<pos:position pos:line="65" pos:column="37"/></condition><then pos:line="65" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">die<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><call><name pos:line="66" pos:column="29">_<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><literal type="string" pos:line="66" pos:column="31">"base commit shouldn't be in revision list"<pos:position pos:line="66" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="77"/></expr_stmt></block></then></if>
	}<pos:position pos:line="67" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="69" pos:column="9">free<pos:position pos:line="69" pos:column="13"/></name><argument_list pos:line="69" pos:column="13">(<argument><expr><name pos:line="69" pos:column="14">rev<pos:position pos:line="69" pos:column="17"/></name></expr></argument>)<pos:position pos:line="69" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="19"/></expr_stmt>
	<return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">base<pos:position pos:line="70" pos:column="20"/></name></expr>;<pos:position pos:line="70" pos:column="21"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2102_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_one_ref<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">unsigned<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">sha1<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">flag<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="79">void<pos:position pos:line="1" pos:column="83"/></name> <modifier pos:line="1" pos:column="84">*<pos:position pos:line="1" pos:column="85"/></modifier></type><name pos:line="1" pos:column="85">cb_data<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="93"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">object<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><call><name pos:line="3" pos:column="33">parse_object_or_die<pos:position pos:line="3" pos:column="52"/></name><argument_list pos:line="3" pos:column="52">(<argument><expr><name pos:line="3" pos:column="53">sha1<pos:position pos:line="3" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="59">path<pos:position pos:line="3" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rev_info<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">revs<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><operator pos:line="4" pos:column="33">(<pos:position pos:line="4" pos:column="34"/></operator>struct <name pos:line="4" pos:column="41">rev_info<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></operator><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">cb_data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">add_pending_object<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">revs<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="34">object<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="42">""<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>

	<return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

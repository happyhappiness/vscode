<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5246_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_head<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">ref<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">our<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">ref<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">remote<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">msg<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">head<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">our<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&amp;&amp;<pos:position pos:line="5" pos:column="27"/></operator> <call><name pos:line="5" pos:column="20">skip_prefix<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><name><name pos:line="5" pos:column="32">our<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">name<pos:position pos:line="5" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="43">"refs/heads/"<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="58">&amp;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="59">head<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="65"/></condition><then pos:line="5" pos:column="65"> <block pos:line="5" pos:column="66">{
		<comment type="block" pos:line="6" pos:column="17">/* Local default branch link */</comment>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">create_symref<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"HEAD"<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="39">our<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">name<pos:position pos:line="7" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">NULL<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">option_bare<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">update_ref<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">msg<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"HEAD"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="49">our<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">old_oid<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">.<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="62">hash<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="68">NULL<pos:position pos:line="9" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="74">0<pos:position pos:line="9" pos:column="75"/></literal></expr></argument>,
				   <argument><expr><name pos:line="10" pos:column="36">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">install_branch_config<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">head<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="56">option_origin<pos:position pos:line="11" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="71">our<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">-&gt;<pos:position pos:line="11" pos:column="79"/></operator><name pos:line="11" pos:column="76">name<pos:position pos:line="11" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="82"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><name pos:line="13" pos:column="20">our<pos:position pos:line="13" pos:column="23"/></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">commit<pos:position pos:line="14" pos:column="30"/></name></name> <modifier pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></modifier></type><name pos:line="14" pos:column="32">c<pos:position pos:line="14" pos:column="33"/></name> <init pos:line="14" pos:column="34">= <expr><call><name pos:line="14" pos:column="36">lookup_commit_reference<pos:position pos:line="14" pos:column="59"/></name><argument_list pos:line="14" pos:column="59">(<argument><expr><name><name pos:line="14" pos:column="60">our<pos:position pos:line="14" pos:column="63"/></name><operator pos:line="14" pos:column="63">-&gt;<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="65">old_oid<pos:position pos:line="14" pos:column="72"/></name><operator pos:line="14" pos:column="72">.<pos:position pos:line="14" pos:column="73"/></operator><name pos:line="14" pos:column="73">hash<pos:position pos:line="14" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="79"/></decl_stmt>
		<comment type="block" pos:line="15" pos:column="17">/* --branch specifies a non-branch (i.e. tags), detach HEAD */</comment>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">update_ref<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">msg<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="33">"HEAD"<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="41">c<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">object<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">.<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">oid<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">.<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="55">hash<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>,
			   <argument><expr><name pos:line="17" pos:column="28">NULL<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">REF_NODEREF<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><name pos:line="18" pos:column="20">remote<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
		<comment type="block" pos:line="19" pos:column="17">/*
		 * We know remote HEAD points to a non-branch, or
		 * HEAD points to a branch but we don't know which one.
		 * Detach HEAD in all these cases.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">update_ref<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">msg<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"HEAD"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="41">remote<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">old_oid<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">.<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="57">hash<pos:position pos:line="24" pos:column="61"/></name></name></expr></argument>,
			   <argument><expr><name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">REF_NODEREF<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6331_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_check_tree<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">mstate<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">m<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">tchunkptr<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">t<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">tchunkptr<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">head<pos:position pos:line="2" pos:column="17"/></name> <init pos:line="2" pos:column="18">= <expr><literal type="number" pos:line="2" pos:column="20">0<pos:position pos:line="2" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">tchunkptr<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">u<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">t<pos:position pos:line="3" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">bindex_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">tindex<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">t<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">index<pos:position pos:line="4" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">tsize<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><call><name pos:line="5" pos:column="18">chunksize<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">t<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">bindex_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">idx<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">compute_tree_index<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">tsize<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">idx<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">tindex<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">idx<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">tsize<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&gt;=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="19">MIN_LARGE_SIZE<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">assert<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">tsize<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&gt;=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="19">minsize_for_tree_index<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">idx<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">assert<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">idx<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NTREEBINS<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-<pos:position pos:line="11" pos:column="28"/></operator><literal type="number" pos:line="11" pos:column="28">1<pos:position pos:line="11" pos:column="29"/></literal><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator> <operator pos:line="11" pos:column="31">||<pos:position pos:line="11" pos:column="33"/></operator> <operator pos:line="11" pos:column="34">(<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">tsize<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">&lt;<pos:position pos:line="11" pos:column="45"/></operator> <call><name pos:line="11" pos:column="43">minsize_for_tree_index<pos:position pos:line="11" pos:column="65"/></name><argument_list pos:line="11" pos:column="65">(<argument><expr><operator pos:line="11" pos:column="66">(<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="67">idx<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">+<pos:position pos:line="11" pos:column="71"/></operator><literal type="number" pos:line="11" pos:column="71">1<pos:position pos:line="11" pos:column="72"/></literal><operator pos:line="11" pos:column="72">)<pos:position pos:line="11" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call><operator pos:line="11" pos:column="74">)<pos:position pos:line="11" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="77"/></expr_stmt>

  <do pos:line="13" pos:column="3">do <block pos:line="13" pos:column="6">{ <comment type="block" pos:line="13" pos:column="8">/* traverse through chain of same-sized nodes */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">do_check_any_chunk<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">m<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><operator pos:line="14" pos:column="28">(<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">mchunkptr<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">)<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">u<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">)<pos:position pos:line="14" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name><name pos:line="15" pos:column="12">u<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">index<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">==<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">tindex<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><call><name pos:line="16" pos:column="12">chunksize<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">u<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">tsize<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><operator pos:line="17" pos:column="12">!<pos:position pos:line="17" pos:column="13"/></operator><call><name pos:line="17" pos:column="13">cinuse<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">u<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><operator pos:line="18" pos:column="12">!<pos:position pos:line="18" pos:column="13"/></operator><call><name pos:line="18" pos:column="13">next_pinuse<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">u<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">u<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">fd<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">bk<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">==<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">u<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">u<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">bk<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">fd<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">u<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">u<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">parent<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <block pos:line="21" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">assert<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name><name pos:line="22" pos:column="14">u<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">child<pos:position pos:line="22" pos:column="22"/></name><index pos:line="22" pos:column="22">[<expr><literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal></expr>]<pos:position pos:line="22" pos:column="25"/></index></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">assert<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name><name pos:line="23" pos:column="14">u<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">child<pos:position pos:line="23" pos:column="22"/></name><index pos:line="23" pos:column="22">[<expr><literal type="number" pos:line="23" pos:column="23">1<pos:position pos:line="23" pos:column="24"/></literal></expr>]<pos:position pos:line="23" pos:column="25"/></index></name> <operator pos:line="23" pos:column="26">==<pos:position pos:line="23" pos:column="28"/></operator> <literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">assert<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">head<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">==<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt> <comment type="block" pos:line="26" pos:column="26">/* only one node on chain has parent */</comment>
      <expr_stmt><expr><name pos:line="27" pos:column="7">head<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">u<pos:position pos:line="27" pos:column="15"/></name></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">assert<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name><name pos:line="28" pos:column="14">u<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">parent<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">!=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">u<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">assert<pos:position pos:line="29" pos:column="13"/></name> <argument_list pos:line="29" pos:column="14">(<argument><expr><name><name pos:line="29" pos:column="15">u<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">parent<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">child<pos:position pos:line="29" pos:column="31"/></name><index pos:line="29" pos:column="31">[<expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>]<pos:position pos:line="29" pos:column="34"/></index></name> <operator pos:line="29" pos:column="35">==<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="38">u<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">||<pos:position pos:line="29" pos:column="42"/></operator>
	      <name><name pos:line="30" pos:column="15">u<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">parent<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">child<pos:position pos:line="30" pos:column="31"/></name><index pos:line="30" pos:column="31">[<expr><literal type="number" pos:line="30" pos:column="32">1<pos:position pos:line="30" pos:column="33"/></literal></expr>]<pos:position pos:line="30" pos:column="34"/></index></name> <operator pos:line="30" pos:column="35">==<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">u<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">||<pos:position pos:line="30" pos:column="42"/></operator>
	      <operator pos:line="31" pos:column="15">*<pos:position pos:line="31" pos:column="16"/></operator><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><operator pos:line="31" pos:column="17">(<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">tbinptr<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">*<pos:position pos:line="31" pos:column="26"/></operator><operator pos:line="31" pos:column="26">)<pos:position pos:line="31" pos:column="27"/></operator><operator pos:line="31" pos:column="27">(<pos:position pos:line="31" pos:column="28"/></operator><name><name pos:line="31" pos:column="28">u<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">parent<pos:position pos:line="31" pos:column="37"/></name></name><operator pos:line="31" pos:column="37">)<pos:position pos:line="31" pos:column="38"/></operator><operator pos:line="31" pos:column="38">)<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <name pos:line="31" pos:column="43">u<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><name><name pos:line="32" pos:column="11">u<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">child<pos:position pos:line="32" pos:column="19"/></name><index pos:line="32" pos:column="19">[<expr><literal type="number" pos:line="32" pos:column="20">0<pos:position pos:line="32" pos:column="21"/></literal></expr>]<pos:position pos:line="32" pos:column="22"/></index></name> <operator pos:line="32" pos:column="23">!=<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="26">0<pos:position pos:line="32" pos:column="27"/></literal></expr>)<pos:position pos:line="32" pos:column="28"/></condition><then pos:line="32" pos:column="28"> <block pos:line="32" pos:column="29">{
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">assert<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name><name pos:line="33" pos:column="16">u<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">child<pos:position pos:line="33" pos:column="24"/></name><index pos:line="33" pos:column="24">[<expr><literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr>]<pos:position pos:line="33" pos:column="27"/></index></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">parent<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">==<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="39">u<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">assert<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name><name pos:line="34" pos:column="16">u<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">child<pos:position pos:line="34" pos:column="24"/></name><index pos:line="34" pos:column="24">[<expr><literal type="number" pos:line="34" pos:column="25">0<pos:position pos:line="34" pos:column="26"/></literal></expr>]<pos:position pos:line="34" pos:column="27"/></index></name> <operator pos:line="34" pos:column="28">!=<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="31">u<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">do_check_tree<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">m<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="26">u<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">child<pos:position pos:line="35" pos:column="34"/></name><index pos:line="35" pos:column="34">[<expr><literal type="number" pos:line="35" pos:column="35">0<pos:position pos:line="35" pos:column="36"/></literal></expr>]<pos:position pos:line="35" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name><name pos:line="37" pos:column="11">u<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">child<pos:position pos:line="37" pos:column="19"/></name><index pos:line="37" pos:column="19">[<expr><literal type="number" pos:line="37" pos:column="20">1<pos:position pos:line="37" pos:column="21"/></literal></expr>]<pos:position pos:line="37" pos:column="22"/></index></name> <operator pos:line="37" pos:column="23">!=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr>)<pos:position pos:line="37" pos:column="28"/></condition><then pos:line="37" pos:column="28"> <block pos:line="37" pos:column="29">{
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">assert<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name><name pos:line="38" pos:column="16">u<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">child<pos:position pos:line="38" pos:column="24"/></name><index pos:line="38" pos:column="24">[<expr><literal type="number" pos:line="38" pos:column="25">1<pos:position pos:line="38" pos:column="26"/></literal></expr>]<pos:position pos:line="38" pos:column="27"/></index></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">parent<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">==<pos:position pos:line="38" pos:column="38"/></operator> <name pos:line="38" pos:column="39">u<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">assert<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name><name pos:line="39" pos:column="16">u<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">child<pos:position pos:line="39" pos:column="24"/></name><index pos:line="39" pos:column="24">[<expr><literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr>]<pos:position pos:line="39" pos:column="27"/></index></name> <operator pos:line="39" pos:column="28">!=<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">u<pos:position pos:line="39" pos:column="32"/></name></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">do_check_tree<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">m<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="26">u<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">child<pos:position pos:line="40" pos:column="34"/></name><index pos:line="40" pos:column="34">[<expr><literal type="number" pos:line="40" pos:column="35">1<pos:position pos:line="40" pos:column="36"/></literal></expr>]<pos:position pos:line="40" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name><name pos:line="42" pos:column="11">u<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">child<pos:position pos:line="42" pos:column="19"/></name><index pos:line="42" pos:column="19">[<expr><literal type="number" pos:line="42" pos:column="20">0<pos:position pos:line="42" pos:column="21"/></literal></expr>]<pos:position pos:line="42" pos:column="22"/></index></name> <operator pos:line="42" pos:column="23">!=<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal> <operator pos:line="42" pos:column="28">&amp;&amp;<pos:position pos:line="42" pos:column="38"/></operator> <name><name pos:line="42" pos:column="31">u<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">child<pos:position pos:line="42" pos:column="39"/></name><index pos:line="42" pos:column="39">[<expr><literal type="number" pos:line="42" pos:column="40">1<pos:position pos:line="42" pos:column="41"/></literal></expr>]<pos:position pos:line="42" pos:column="42"/></index></name> <operator pos:line="42" pos:column="43">!=<pos:position pos:line="42" pos:column="45"/></operator> <literal type="number" pos:line="42" pos:column="46">0<pos:position pos:line="42" pos:column="47"/></literal></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48"> <block pos:line="42" pos:column="49">{
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">assert<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><call><name pos:line="43" pos:column="16">chunksize<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name><name pos:line="43" pos:column="26">u<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">child<pos:position pos:line="43" pos:column="34"/></name><index pos:line="43" pos:column="34">[<expr><literal type="number" pos:line="43" pos:column="35">0<pos:position pos:line="43" pos:column="36"/></literal></expr>]<pos:position pos:line="43" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call> <operator pos:line="43" pos:column="39">&lt;<pos:position pos:line="43" pos:column="43"/></operator> <call><name pos:line="43" pos:column="41">chunksize<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><name><name pos:line="43" pos:column="51">u<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">-&gt;<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="54">child<pos:position pos:line="43" pos:column="59"/></name><index pos:line="43" pos:column="59">[<expr><literal type="number" pos:line="43" pos:column="60">1<pos:position pos:line="43" pos:column="61"/></literal></expr>]<pos:position pos:line="43" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="46" pos:column="5">u<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">=<pos:position pos:line="46" pos:column="8"/></operator> <name><name pos:line="46" pos:column="9">u<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">fd<pos:position pos:line="46" pos:column="14"/></name></name></expr>;<pos:position pos:line="46" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block> while <condition pos:line="47" pos:column="11">(<expr><name pos:line="47" pos:column="12">u<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">!=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">t<pos:position pos:line="47" pos:column="18"/></name></expr>)<pos:position pos:line="47" pos:column="19"/></condition>;<pos:position pos:line="47" pos:column="20"/></do>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">assert<pos:position pos:line="48" pos:column="9"/></name><argument_list pos:line="48" pos:column="9">(<argument><expr><name pos:line="48" pos:column="10">head<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">!=<pos:position pos:line="48" pos:column="17"/></operator> <literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

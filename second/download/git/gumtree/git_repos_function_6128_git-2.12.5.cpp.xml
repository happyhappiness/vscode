<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6128_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_ref_iterator_peel<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">ref_iterator<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ref_iterator<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
				   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">object_id<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">peeled<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">cache_ref_iterator<pos:position pos:line="4" pos:column="34"/></name></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">iter<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">=
		<expr><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator>struct <name pos:line="5" pos:column="25">cache_ref_iterator<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">ref_iterator<pos:position pos:line="5" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">cache_ref_iterator_level<pos:position pos:line="6" pos:column="40"/></name></name> <modifier pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></modifier></type><name pos:line="6" pos:column="42">level<pos:position pos:line="6" pos:column="47"/></name></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref_entry<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">entry<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">level<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">&amp;<pos:position pos:line="9" pos:column="22"/></operator><name><name pos:line="9" pos:column="18">iter<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">levels<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[<expr><name><name pos:line="9" pos:column="31">iter<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">levels_nr<pos:position pos:line="9" pos:column="46"/></name></name> <operator pos:line="9" pos:column="47">-<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="49">1<pos:position pos:line="9" pos:column="50"/></literal></expr>]<pos:position pos:line="9" pos:column="51"/></index></name></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">level<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">index<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">-<pos:position pos:line="11" pos:column="30"/></operator><literal type="number" pos:line="11" pos:column="30">1<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"BUG: peel called before advance for cache iterator"<pos:position pos:line="12" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">entry<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name><name pos:line="14" pos:column="17">level<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">dir<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">entries<pos:position pos:line="14" pos:column="36"/></name><index pos:line="14" pos:column="36">[<expr><name><name pos:line="14" pos:column="37">level<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">index<pos:position pos:line="14" pos:column="49"/></name></name></expr>]<pos:position pos:line="14" pos:column="50"/></index></name></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">peel_entry<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">entry<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">oidcpy<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">peeled<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name><name pos:line="18" pos:column="25">entry<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">u<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">.<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">value<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">.<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">peeled<pos:position pos:line="18" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
	<return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

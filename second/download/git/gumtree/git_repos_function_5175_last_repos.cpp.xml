<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5175_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">checkout_paths<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">checkout_opts<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">opts<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">revision<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pos<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">checkout<pos:position pos:line="5" pos:column="24"/></name></name></type> <name pos:line="5" pos:column="25">state<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">CHECKOUT_INIT<pos:position pos:line="5" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">ps_matched<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">object_id<pos:position pos:line="7" pos:column="25"/></name></name></type> <name pos:line="7" pos:column="26">rev<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit<pos:position pos:line="8" pos:column="22"/></name></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">head<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">errs<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">lock_file<pos:position pos:line="10" pos:column="25"/></name></name> <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier></type><name pos:line="10" pos:column="27">lock_file<pos:position pos:line="10" pos:column="36"/></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">opts<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">track<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">!=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">BRANCH_TRACK_UNSPECIFIED<pos:position pos:line="12" pos:column="52"/></name></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><call><name pos:line="13" pos:column="21">_<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="string" pos:line="13" pos:column="23">"'%s' cannot be used with updating paths"<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="67">"--track"<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">opts<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">new_branch_log<pos:position pos:line="15" pos:column="33"/></name></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><call><name pos:line="16" pos:column="21">_<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"'%s' cannot be used with updating paths"<pos:position pos:line="16" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="67">"-l"<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">opts<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">force<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">&amp;&amp;<pos:position pos:line="18" pos:column="35"/></operator> <name><name pos:line="18" pos:column="28">opts<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">patch_mode<pos:position pos:line="18" pos:column="44"/></name></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">die<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><call><name pos:line="19" pos:column="21">_<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><literal type="string" pos:line="19" pos:column="23">"'%s' cannot be used with updating paths"<pos:position pos:line="19" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="67">"-f"<pos:position pos:line="19" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">opts<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">force_detach<pos:position pos:line="21" pos:column="31"/></name></name></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">die<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><call><name pos:line="22" pos:column="21">_<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><literal type="string" pos:line="22" pos:column="23">"'%s' cannot be used with updating paths"<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="67">"--detach"<pos:position pos:line="22" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">opts<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">merge<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">&amp;&amp;<pos:position pos:line="24" pos:column="35"/></operator> <name><name pos:line="24" pos:column="28">opts<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">patch_mode<pos:position pos:line="24" pos:column="44"/></name></name></expr>)<pos:position pos:line="24" pos:column="45"/></condition><then pos:line="24" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><call><name pos:line="25" pos:column="21">_<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"'%s' cannot be used with %s"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="55">"--merge"<pos:position pos:line="25" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="66">"--patch"<pos:position pos:line="25" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">opts<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">force<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">&amp;&amp;<pos:position pos:line="27" pos:column="35"/></operator> <name><name pos:line="27" pos:column="28">opts<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">merge<pos:position pos:line="27" pos:column="39"/></name></name></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><call><name pos:line="28" pos:column="21">_<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><literal type="string" pos:line="28" pos:column="23">"'%s' cannot be used with %s"<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="55">"-f"<pos:position pos:line="28" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="61">"-m"<pos:position pos:line="28" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">opts<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">new_branch<pos:position pos:line="30" pos:column="29"/></name></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">die<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><call><name pos:line="31" pos:column="21">_<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><literal type="string" pos:line="31" pos:column="23">"Cannot update paths and switch to branch '%s' at the same time."<pos:position pos:line="31" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="89"/></argument_list></call></expr></argument>,
		    <argument><expr><name><name pos:line="32" pos:column="21">opts<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">new_branch<pos:position pos:line="32" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">opts<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">patch_mode<pos:position pos:line="34" pos:column="29"/></name></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30">
		<block type="pseudo"><return pos:line="35" pos:column="17">return <expr><call><name pos:line="35" pos:column="24">run_add_interactive<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><name pos:line="35" pos:column="44">revision<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="54">"--patch=checkout"<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>,
					   <argument><expr><operator pos:line="36" pos:column="44">&amp;<pos:position pos:line="36" pos:column="49"/></operator><name><name pos:line="36" pos:column="45">opts<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">pathspec<pos:position pos:line="36" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="38" pos:column="9">lock_file<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">xcalloc<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><literal type="number" pos:line="38" pos:column="29">1<pos:position pos:line="38" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="32">sizeof<argument_list pos:line="38" pos:column="38">(<argument><expr pos:line="38" pos:column="39">struct <name pos:line="38" pos:column="46">lock_file<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">hold_locked_index<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">lock_file<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">LOCK_DIE_ON_ERROR<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">read_cache_preload<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><operator pos:line="41" pos:column="32">&amp;<pos:position pos:line="41" pos:column="37"/></operator><name><name pos:line="41" pos:column="33">opts<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">pathspec<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call> <operator pos:line="41" pos:column="49">&lt;<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="51">0<pos:position pos:line="41" pos:column="52"/></literal></expr>)<pos:position pos:line="41" pos:column="53"/></condition><then pos:line="41" pos:column="53">
		<block type="pseudo"><return pos:line="42" pos:column="17">return <expr><call><name pos:line="42" pos:column="24">error<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><call><name pos:line="42" pos:column="30">_<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><literal type="string" pos:line="42" pos:column="32">"index file corrupt"<pos:position pos:line="42" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="55"/></return></block></then></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">opts<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">source_tree<pos:position pos:line="44" pos:column="30"/></name></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">read_tree_some<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name><name pos:line="45" pos:column="32">opts<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">source_tree<pos:position pos:line="45" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="51">&amp;<pos:position pos:line="45" pos:column="56"/></operator><name><name pos:line="45" pos:column="52">opts<pos:position pos:line="45" pos:column="56"/></name><operator pos:line="45" pos:column="56">-&gt;<pos:position pos:line="45" pos:column="61"/></operator><name pos:line="45" pos:column="58">pathspec<pos:position pos:line="45" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">ps_matched<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">xcalloc<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name><name pos:line="47" pos:column="30">opts<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">-&gt;<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="36">pathspec<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">.<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="45">nr<pos:position pos:line="47" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="49">1<pos:position pos:line="47" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>

	<comment type="block" pos:line="49" pos:column="9">/*
	 * Make sure all pathspecs participated in locating the paths
	 * to be checked out.
	 */</comment>
	<for pos:line="53" pos:column="9">for <control pos:line="53" pos:column="13">(<init><expr><name pos:line="53" pos:column="14">pos<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <literal type="number" pos:line="53" pos:column="20">0<pos:position pos:line="53" pos:column="21"/></literal></expr>;<pos:position pos:line="53" pos:column="22"/></init> <condition><expr><name pos:line="53" pos:column="23">pos<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">&lt;<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="29">active_nr<pos:position pos:line="53" pos:column="38"/></name></expr>;<pos:position pos:line="53" pos:column="39"/></condition> <incr><expr><name pos:line="53" pos:column="40">pos<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">++<pos:position pos:line="53" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="46"/></control> <block pos:line="53" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="54" pos:column="17">struct<pos:position pos:line="54" pos:column="23"/></name> <name pos:line="54" pos:column="24">cache_entry<pos:position pos:line="54" pos:column="35"/></name></name> <modifier pos:line="54" pos:column="36">*<pos:position pos:line="54" pos:column="37"/></modifier></type><name pos:line="54" pos:column="37">ce<pos:position pos:line="54" pos:column="39"/></name> <init pos:line="54" pos:column="40">= <expr><name><name pos:line="54" pos:column="42">active_cache<pos:position pos:line="54" pos:column="54"/></name><index pos:line="54" pos:column="54">[<expr><name pos:line="54" pos:column="55">pos<pos:position pos:line="54" pos:column="58"/></name></expr>]<pos:position pos:line="54" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="54" pos:column="60"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">ce<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">ce_flags<pos:position pos:line="55" pos:column="29"/></name></name> <operator pos:line="55" pos:column="30">&amp;=<pos:position pos:line="55" pos:column="36"/></operator> <operator pos:line="55" pos:column="33">~<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">CE_MATCHED<pos:position pos:line="55" pos:column="44"/></name></expr>;<pos:position pos:line="55" pos:column="45"/></expr_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><name><name pos:line="56" pos:column="22">opts<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">ignore_skipworktree<pos:position pos:line="56" pos:column="47"/></name></name> <operator pos:line="56" pos:column="48">&amp;&amp;<pos:position pos:line="56" pos:column="58"/></operator> <call><name pos:line="56" pos:column="51">ce_skip_worktree<pos:position pos:line="56" pos:column="67"/></name><argument_list pos:line="56" pos:column="67">(<argument><expr><name pos:line="56" pos:column="68">ce<pos:position pos:line="56" pos:column="70"/></name></expr></argument>)<pos:position pos:line="56" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="72"/></condition><then pos:line="56" pos:column="72">
			<block type="pseudo"><continue pos:line="57" pos:column="25">continue;<pos:position pos:line="57" pos:column="34"/></continue></block></then></if>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name><name pos:line="58" pos:column="21">opts<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">source_tree<pos:position pos:line="58" pos:column="38"/></name></name> <operator pos:line="58" pos:column="39">&amp;&amp;<pos:position pos:line="58" pos:column="49"/></operator> <operator pos:line="58" pos:column="42">!<pos:position pos:line="58" pos:column="43"/></operator><operator pos:line="58" pos:column="43">(<pos:position pos:line="58" pos:column="44"/></operator><name><name pos:line="58" pos:column="44">ce<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">-&gt;<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="48">ce_flags<pos:position pos:line="58" pos:column="56"/></name></name> <operator pos:line="58" pos:column="57">&amp;<pos:position pos:line="58" pos:column="62"/></operator> <name pos:line="58" pos:column="59">CE_UPDATE<pos:position pos:line="58" pos:column="68"/></name><operator pos:line="58" pos:column="68">)<pos:position pos:line="58" pos:column="69"/></operator></expr>)<pos:position pos:line="58" pos:column="70"/></condition><then pos:line="58" pos:column="70">
			<comment type="block" pos:line="59" pos:column="25">/*
			 * "git checkout tree-ish -- path", but this entry
			 * is in the original index; it will not be checked
			 * out to the working tree and it does not matter
			 * if pathspec matched this entry.  We will not do
			 * anything to this entry at all.
			 */</comment>
			<block type="pseudo"><continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue></block></then></if>
		<comment type="block" pos:line="67" pos:column="17">/*
		 * Either this entry came from the tree-ish we are
		 * checking the paths out of, or we are checking out
		 * of the index.
		 *
		 * If it comes from the tree-ish, we already know it
		 * matches the pathspec and could just stamp
		 * CE_MATCHED to it from update_some(). But we still
		 * need ps_matched and read_tree_recursive (and
		 * eventually tree_entry_interesting) cannot fill
		 * ps_matched yet. Once it can, we can avoid calling
		 * match_pathspec() for _all_ entries when
		 * opts-&gt;source_tree != NULL.
		 */</comment>
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><call><name pos:line="81" pos:column="21">ce_path_match<pos:position pos:line="81" pos:column="34"/></name><argument_list pos:line="81" pos:column="34">(<argument><expr><name pos:line="81" pos:column="35">ce<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="39">&amp;<pos:position pos:line="81" pos:column="44"/></operator><name><name pos:line="81" pos:column="40">opts<pos:position pos:line="81" pos:column="44"/></name><operator pos:line="81" pos:column="44">-&gt;<pos:position pos:line="81" pos:column="49"/></operator><name pos:line="81" pos:column="46">pathspec<pos:position pos:line="81" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="56">ps_matched<pos:position pos:line="81" pos:column="66"/></name></expr></argument>)<pos:position pos:line="81" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="68"/></condition><then pos:line="81" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="82" pos:column="25">ce<pos:position pos:line="82" pos:column="27"/></name><operator pos:line="82" pos:column="27">-&gt;<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="29">ce_flags<pos:position pos:line="82" pos:column="37"/></name></name> <operator pos:line="82" pos:column="38">|=<pos:position pos:line="82" pos:column="40"/></operator> <name pos:line="82" pos:column="41">CE_MATCHED<pos:position pos:line="82" pos:column="51"/></name></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt></block></then></if>
	}<pos:position pos:line="83" pos:column="10"/></block></for>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">report_path_error<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><name pos:line="85" pos:column="31">ps_matched<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="43">&amp;<pos:position pos:line="85" pos:column="48"/></operator><name><name pos:line="85" pos:column="44">opts<pos:position pos:line="85" pos:column="48"/></name><operator pos:line="85" pos:column="48">-&gt;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="50">pathspec<pos:position pos:line="85" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="60">opts<pos:position pos:line="85" pos:column="64"/></name><operator pos:line="85" pos:column="64">-&gt;<pos:position pos:line="85" pos:column="69"/></operator><name pos:line="85" pos:column="66">prefix<pos:position pos:line="85" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="74"/></condition><then pos:line="85" pos:column="74"> <block pos:line="85" pos:column="75">{
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">free<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><name pos:line="86" pos:column="22">ps_matched<pos:position pos:line="86" pos:column="32"/></name></expr></argument>)<pos:position pos:line="86" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="34"/></expr_stmt>
		<return pos:line="87" pos:column="17">return <expr><literal type="number" pos:line="87" pos:column="24">1<pos:position pos:line="87" pos:column="25"/></literal></expr>;<pos:position pos:line="87" pos:column="26"/></return>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="89" pos:column="9">free<pos:position pos:line="89" pos:column="13"/></name><argument_list pos:line="89" pos:column="13">(<argument><expr><name pos:line="89" pos:column="14">ps_matched<pos:position pos:line="89" pos:column="24"/></name></expr></argument>)<pos:position pos:line="89" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="91" pos:column="9">/* "checkout -m path" to recreate conflicted state */</comment>
	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name><name pos:line="92" pos:column="13">opts<pos:position pos:line="92" pos:column="17"/></name><operator pos:line="92" pos:column="17">-&gt;<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="19">merge<pos:position pos:line="92" pos:column="24"/></name></name></expr>)<pos:position pos:line="92" pos:column="25"/></condition><then pos:line="92" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="17">unmerge_marked_index<pos:position pos:line="93" pos:column="37"/></name><argument_list pos:line="93" pos:column="37">(<argument><expr><operator pos:line="93" pos:column="38">&amp;<pos:position pos:line="93" pos:column="43"/></operator><name pos:line="93" pos:column="39">the_index<pos:position pos:line="93" pos:column="48"/></name></expr></argument>)<pos:position pos:line="93" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="50"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="95" pos:column="9">/* Any unmerged paths? */</comment>
	<for pos:line="96" pos:column="9">for <control pos:line="96" pos:column="13">(<init><expr><name pos:line="96" pos:column="14">pos<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">=<pos:position pos:line="96" pos:column="19"/></operator> <literal type="number" pos:line="96" pos:column="20">0<pos:position pos:line="96" pos:column="21"/></literal></expr>;<pos:position pos:line="96" pos:column="22"/></init> <condition><expr><name pos:line="96" pos:column="23">pos<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">&lt;<pos:position pos:line="96" pos:column="31"/></operator> <name pos:line="96" pos:column="29">active_nr<pos:position pos:line="96" pos:column="38"/></name></expr>;<pos:position pos:line="96" pos:column="39"/></condition> <incr><expr><name pos:line="96" pos:column="40">pos<pos:position pos:line="96" pos:column="43"/></name><operator pos:line="96" pos:column="43">++<pos:position pos:line="96" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="96" pos:column="46"/></control> <block pos:line="96" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="97" pos:column="17">const<pos:position pos:line="97" pos:column="22"/></specifier> <name><name pos:line="97" pos:column="23">struct<pos:position pos:line="97" pos:column="29"/></name> <name pos:line="97" pos:column="30">cache_entry<pos:position pos:line="97" pos:column="41"/></name></name> <modifier pos:line="97" pos:column="42">*<pos:position pos:line="97" pos:column="43"/></modifier></type><name pos:line="97" pos:column="43">ce<pos:position pos:line="97" pos:column="45"/></name> <init pos:line="97" pos:column="46">= <expr><name><name pos:line="97" pos:column="48">active_cache<pos:position pos:line="97" pos:column="60"/></name><index pos:line="97" pos:column="60">[<expr><name pos:line="97" pos:column="61">pos<pos:position pos:line="97" pos:column="64"/></name></expr>]<pos:position pos:line="97" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="97" pos:column="66"/></decl_stmt>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name><name pos:line="98" pos:column="21">ce<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">-&gt;<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="25">ce_flags<pos:position pos:line="98" pos:column="33"/></name></name> <operator pos:line="98" pos:column="34">&amp;<pos:position pos:line="98" pos:column="39"/></operator> <name pos:line="98" pos:column="36">CE_MATCHED<pos:position pos:line="98" pos:column="46"/></name></expr>)<pos:position pos:line="98" pos:column="47"/></condition><then pos:line="98" pos:column="47"> <block pos:line="98" pos:column="48">{
			<if pos:line="99" pos:column="25">if <condition pos:line="99" pos:column="28">(<expr><operator pos:line="99" pos:column="29">!<pos:position pos:line="99" pos:column="30"/></operator><call><name pos:line="99" pos:column="30">ce_stage<pos:position pos:line="99" pos:column="38"/></name><argument_list pos:line="99" pos:column="38">(<argument><expr><name pos:line="99" pos:column="39">ce<pos:position pos:line="99" pos:column="41"/></name></expr></argument>)<pos:position pos:line="99" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="43"/></condition><then pos:line="99" pos:column="43">
				<block type="pseudo"><continue pos:line="100" pos:column="33">continue;<pos:position pos:line="100" pos:column="42"/></continue></block></then></if>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><name><name pos:line="101" pos:column="29">opts<pos:position pos:line="101" pos:column="33"/></name><operator pos:line="101" pos:column="33">-&gt;<pos:position pos:line="101" pos:column="38"/></operator><name pos:line="101" pos:column="35">force<pos:position pos:line="101" pos:column="40"/></name></name></expr>)<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41"> <block pos:line="101" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="102" pos:column="33">warning<pos:position pos:line="102" pos:column="40"/></name><argument_list pos:line="102" pos:column="40">(<argument><expr><call><name pos:line="102" pos:column="41">_<pos:position pos:line="102" pos:column="42"/></name><argument_list pos:line="102" pos:column="42">(<argument><expr><literal type="string" pos:line="102" pos:column="43">"path '%s' is unmerged"<pos:position pos:line="102" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="69">ce<pos:position pos:line="102" pos:column="71"/></name><operator pos:line="102" pos:column="71">-&gt;<pos:position pos:line="102" pos:column="76"/></operator><name pos:line="102" pos:column="73">name<pos:position pos:line="102" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="79"/></expr_stmt>
			}<pos:position pos:line="103" pos:column="26"/></block></then> <elseif pos:line="103" pos:column="27">else <if pos:line="103" pos:column="32">if <condition pos:line="103" pos:column="35">(<expr><name><name pos:line="103" pos:column="36">opts<pos:position pos:line="103" pos:column="40"/></name><operator pos:line="103" pos:column="40">-&gt;<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="42">writeout_stage<pos:position pos:line="103" pos:column="56"/></name></name></expr>)<pos:position pos:line="103" pos:column="57"/></condition><then pos:line="103" pos:column="57"> <block pos:line="103" pos:column="58">{
				<expr_stmt><expr><name pos:line="104" pos:column="33">errs<pos:position pos:line="104" pos:column="37"/></name> <operator pos:line="104" pos:column="38">|=<pos:position pos:line="104" pos:column="40"/></operator> <call><name pos:line="104" pos:column="41">check_stage<pos:position pos:line="104" pos:column="52"/></name><argument_list pos:line="104" pos:column="52">(<argument><expr><name><name pos:line="104" pos:column="53">opts<pos:position pos:line="104" pos:column="57"/></name><operator pos:line="104" pos:column="57">-&gt;<pos:position pos:line="104" pos:column="62"/></operator><name pos:line="104" pos:column="59">writeout_stage<pos:position pos:line="104" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="75">ce<pos:position pos:line="104" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="79">pos<pos:position pos:line="104" pos:column="82"/></name></expr></argument>)<pos:position pos:line="104" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="84"/></expr_stmt>
			}<pos:position pos:line="105" pos:column="26"/></block></then></if></elseif> <elseif pos:line="105" pos:column="27">else <if pos:line="105" pos:column="32">if <condition pos:line="105" pos:column="35">(<expr><name><name pos:line="105" pos:column="36">opts<pos:position pos:line="105" pos:column="40"/></name><operator pos:line="105" pos:column="40">-&gt;<pos:position pos:line="105" pos:column="45"/></operator><name pos:line="105" pos:column="42">merge<pos:position pos:line="105" pos:column="47"/></name></name></expr>)<pos:position pos:line="105" pos:column="48"/></condition><then pos:line="105" pos:column="48"> <block pos:line="105" pos:column="49">{
				<expr_stmt><expr><name pos:line="106" pos:column="33">errs<pos:position pos:line="106" pos:column="37"/></name> <operator pos:line="106" pos:column="38">|=<pos:position pos:line="106" pos:column="40"/></operator> <call><name pos:line="106" pos:column="41">check_stages<pos:position pos:line="106" pos:column="53"/></name><argument_list pos:line="106" pos:column="53">(<argument><expr><operator pos:line="106" pos:column="54">(<pos:position pos:line="106" pos:column="55"/></operator><literal type="number" pos:line="106" pos:column="55">1<pos:position pos:line="106" pos:column="56"/></literal><operator pos:line="106" pos:column="56">&lt;&lt;<pos:position pos:line="106" pos:column="64"/></operator><literal type="number" pos:line="106" pos:column="58">2<pos:position pos:line="106" pos:column="59"/></literal><operator pos:line="106" pos:column="59">)<pos:position pos:line="106" pos:column="60"/></operator> <operator pos:line="106" pos:column="61">|<pos:position pos:line="106" pos:column="62"/></operator> <operator pos:line="106" pos:column="63">(<pos:position pos:line="106" pos:column="64"/></operator><literal type="number" pos:line="106" pos:column="64">1<pos:position pos:line="106" pos:column="65"/></literal><operator pos:line="106" pos:column="65">&lt;&lt;<pos:position pos:line="106" pos:column="73"/></operator><literal type="number" pos:line="106" pos:column="67">3<pos:position pos:line="106" pos:column="68"/></literal><operator pos:line="106" pos:column="68">)<pos:position pos:line="106" pos:column="69"/></operator></expr></argument>, <argument><expr><name pos:line="106" pos:column="71">ce<pos:position pos:line="106" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="75">pos<pos:position pos:line="106" pos:column="78"/></name></expr></argument>)<pos:position pos:line="106" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="80"/></expr_stmt>
			}<pos:position pos:line="107" pos:column="26"/></block></then></if></elseif> <else pos:line="107" pos:column="27">else <block pos:line="107" pos:column="32">{
				<expr_stmt><expr><name pos:line="108" pos:column="33">errs<pos:position pos:line="108" pos:column="37"/></name> <operator pos:line="108" pos:column="38">=<pos:position pos:line="108" pos:column="39"/></operator> <literal type="number" pos:line="108" pos:column="40">1<pos:position pos:line="108" pos:column="41"/></literal></expr>;<pos:position pos:line="108" pos:column="42"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="109" pos:column="33">error<pos:position pos:line="109" pos:column="38"/></name><argument_list pos:line="109" pos:column="38">(<argument><expr><call><name pos:line="109" pos:column="39">_<pos:position pos:line="109" pos:column="40"/></name><argument_list pos:line="109" pos:column="40">(<argument><expr><literal type="string" pos:line="109" pos:column="41">"path '%s' is unmerged"<pos:position pos:line="109" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="67">ce<pos:position pos:line="109" pos:column="69"/></name><operator pos:line="109" pos:column="69">-&gt;<pos:position pos:line="109" pos:column="74"/></operator><name pos:line="109" pos:column="71">name<pos:position pos:line="109" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="110" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name pos:line="111" pos:column="25">pos<pos:position pos:line="111" pos:column="28"/></name> <operator pos:line="111" pos:column="29">=<pos:position pos:line="111" pos:column="30"/></operator> <call><name pos:line="111" pos:column="31">skip_same_name<pos:position pos:line="111" pos:column="45"/></name><argument_list pos:line="111" pos:column="45">(<argument><expr><name pos:line="111" pos:column="46">ce<pos:position pos:line="111" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="50">pos<pos:position pos:line="111" pos:column="53"/></name></expr></argument>)<pos:position pos:line="111" pos:column="54"/></argument_list></call> <operator pos:line="111" pos:column="55">-<pos:position pos:line="111" pos:column="56"/></operator> <literal type="number" pos:line="111" pos:column="57">1<pos:position pos:line="111" pos:column="58"/></literal></expr>;<pos:position pos:line="111" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="112" pos:column="18"/></block></then></if>
	}<pos:position pos:line="113" pos:column="10"/></block></for>
	<if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name pos:line="114" pos:column="13">errs<pos:position pos:line="114" pos:column="17"/></name></expr>)<pos:position pos:line="114" pos:column="18"/></condition><then pos:line="114" pos:column="18">
		<block type="pseudo"><return pos:line="115" pos:column="17">return <expr><literal type="number" pos:line="115" pos:column="24">1<pos:position pos:line="115" pos:column="25"/></literal></expr>;<pos:position pos:line="115" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="117" pos:column="9">/* Now we are committed to check them out */</comment>
	<expr_stmt><expr><name><name pos:line="118" pos:column="9">state<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">.<pos:position pos:line="118" pos:column="15"/></operator><name pos:line="118" pos:column="15">force<pos:position pos:line="118" pos:column="20"/></name></name> <operator pos:line="118" pos:column="21">=<pos:position pos:line="118" pos:column="22"/></operator> <literal type="number" pos:line="118" pos:column="23">1<pos:position pos:line="118" pos:column="24"/></literal></expr>;<pos:position pos:line="118" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="119" pos:column="9">state<pos:position pos:line="119" pos:column="14"/></name><operator pos:line="119" pos:column="14">.<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="15">refresh_cache<pos:position pos:line="119" pos:column="28"/></name></name> <operator pos:line="119" pos:column="29">=<pos:position pos:line="119" pos:column="30"/></operator> <literal type="number" pos:line="119" pos:column="31">1<pos:position pos:line="119" pos:column="32"/></literal></expr>;<pos:position pos:line="119" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="120" pos:column="9">state<pos:position pos:line="120" pos:column="14"/></name><operator pos:line="120" pos:column="14">.<pos:position pos:line="120" pos:column="15"/></operator><name pos:line="120" pos:column="15">istate<pos:position pos:line="120" pos:column="21"/></name></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <operator pos:line="120" pos:column="24">&amp;<pos:position pos:line="120" pos:column="29"/></operator><name pos:line="120" pos:column="25">the_index<pos:position pos:line="120" pos:column="34"/></name></expr>;<pos:position pos:line="120" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="122" pos:column="9">enable_delayed_checkout<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><operator pos:line="122" pos:column="33">&amp;<pos:position pos:line="122" pos:column="38"/></operator><name pos:line="122" pos:column="34">state<pos:position pos:line="122" pos:column="39"/></name></expr></argument>)<pos:position pos:line="122" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="41"/></expr_stmt>
	<for pos:line="123" pos:column="9">for <control pos:line="123" pos:column="13">(<init><expr><name pos:line="123" pos:column="14">pos<pos:position pos:line="123" pos:column="17"/></name> <operator pos:line="123" pos:column="18">=<pos:position pos:line="123" pos:column="19"/></operator> <literal type="number" pos:line="123" pos:column="20">0<pos:position pos:line="123" pos:column="21"/></literal></expr>;<pos:position pos:line="123" pos:column="22"/></init> <condition><expr><name pos:line="123" pos:column="23">pos<pos:position pos:line="123" pos:column="26"/></name> <operator pos:line="123" pos:column="27">&lt;<pos:position pos:line="123" pos:column="31"/></operator> <name pos:line="123" pos:column="29">active_nr<pos:position pos:line="123" pos:column="38"/></name></expr>;<pos:position pos:line="123" pos:column="39"/></condition> <incr><expr><name pos:line="123" pos:column="40">pos<pos:position pos:line="123" pos:column="43"/></name><operator pos:line="123" pos:column="43">++<pos:position pos:line="123" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="123" pos:column="46"/></control> <block pos:line="123" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="124" pos:column="17">struct<pos:position pos:line="124" pos:column="23"/></name> <name pos:line="124" pos:column="24">cache_entry<pos:position pos:line="124" pos:column="35"/></name></name> <modifier pos:line="124" pos:column="36">*<pos:position pos:line="124" pos:column="37"/></modifier></type><name pos:line="124" pos:column="37">ce<pos:position pos:line="124" pos:column="39"/></name> <init pos:line="124" pos:column="40">= <expr><name><name pos:line="124" pos:column="42">active_cache<pos:position pos:line="124" pos:column="54"/></name><index pos:line="124" pos:column="54">[<expr><name pos:line="124" pos:column="55">pos<pos:position pos:line="124" pos:column="58"/></name></expr>]<pos:position pos:line="124" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="124" pos:column="60"/></decl_stmt>
		<if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><name><name pos:line="125" pos:column="21">ce<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">ce_flags<pos:position pos:line="125" pos:column="33"/></name></name> <operator pos:line="125" pos:column="34">&amp;<pos:position pos:line="125" pos:column="39"/></operator> <name pos:line="125" pos:column="36">CE_MATCHED<pos:position pos:line="125" pos:column="46"/></name></expr>)<pos:position pos:line="125" pos:column="47"/></condition><then pos:line="125" pos:column="47"> <block pos:line="125" pos:column="48">{
			<if pos:line="126" pos:column="25">if <condition pos:line="126" pos:column="28">(<expr><operator pos:line="126" pos:column="29">!<pos:position pos:line="126" pos:column="30"/></operator><call><name pos:line="126" pos:column="30">ce_stage<pos:position pos:line="126" pos:column="38"/></name><argument_list pos:line="126" pos:column="38">(<argument><expr><name pos:line="126" pos:column="39">ce<pos:position pos:line="126" pos:column="41"/></name></expr></argument>)<pos:position pos:line="126" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="43"/></condition><then pos:line="126" pos:column="43"> <block pos:line="126" pos:column="44">{
				<expr_stmt><expr><name pos:line="127" pos:column="33">errs<pos:position pos:line="127" pos:column="37"/></name> <operator pos:line="127" pos:column="38">|=<pos:position pos:line="127" pos:column="40"/></operator> <call><name pos:line="127" pos:column="41">checkout_entry<pos:position pos:line="127" pos:column="55"/></name><argument_list pos:line="127" pos:column="55">(<argument><expr><name pos:line="127" pos:column="56">ce<pos:position pos:line="127" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="127" pos:column="60">&amp;<pos:position pos:line="127" pos:column="65"/></operator><name pos:line="127" pos:column="61">state<pos:position pos:line="127" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="68">NULL<pos:position pos:line="127" pos:column="72"/></name></expr></argument>)<pos:position pos:line="127" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="74"/></expr_stmt>
				<continue pos:line="128" pos:column="33">continue;<pos:position pos:line="128" pos:column="42"/></continue>
			}<pos:position pos:line="129" pos:column="26"/></block></then></if>
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><name><name pos:line="130" pos:column="29">opts<pos:position pos:line="130" pos:column="33"/></name><operator pos:line="130" pos:column="33">-&gt;<pos:position pos:line="130" pos:column="38"/></operator><name pos:line="130" pos:column="35">writeout_stage<pos:position pos:line="130" pos:column="49"/></name></name></expr>)<pos:position pos:line="130" pos:column="50"/></condition><then pos:line="130" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name pos:line="131" pos:column="33">errs<pos:position pos:line="131" pos:column="37"/></name> <operator pos:line="131" pos:column="38">|=<pos:position pos:line="131" pos:column="40"/></operator> <call><name pos:line="131" pos:column="41">checkout_stage<pos:position pos:line="131" pos:column="55"/></name><argument_list pos:line="131" pos:column="55">(<argument><expr><name><name pos:line="131" pos:column="56">opts<pos:position pos:line="131" pos:column="60"/></name><operator pos:line="131" pos:column="60">-&gt;<pos:position pos:line="131" pos:column="65"/></operator><name pos:line="131" pos:column="62">writeout_stage<pos:position pos:line="131" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="78">ce<pos:position pos:line="131" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="82">pos<pos:position pos:line="131" pos:column="85"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="87">&amp;<pos:position pos:line="131" pos:column="92"/></operator><name pos:line="131" pos:column="88">state<pos:position pos:line="131" pos:column="93"/></name></expr></argument>)<pos:position pos:line="131" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="95"/></expr_stmt></block></then>
			<elseif pos:line="132" pos:column="25">else <if pos:line="132" pos:column="30">if <condition pos:line="132" pos:column="33">(<expr><name><name pos:line="132" pos:column="34">opts<pos:position pos:line="132" pos:column="38"/></name><operator pos:line="132" pos:column="38">-&gt;<pos:position pos:line="132" pos:column="43"/></operator><name pos:line="132" pos:column="40">merge<pos:position pos:line="132" pos:column="45"/></name></name></expr>)<pos:position pos:line="132" pos:column="46"/></condition><then pos:line="132" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="33">errs<pos:position pos:line="133" pos:column="37"/></name> <operator pos:line="133" pos:column="38">|=<pos:position pos:line="133" pos:column="40"/></operator> <call><name pos:line="133" pos:column="41">checkout_merged<pos:position pos:line="133" pos:column="56"/></name><argument_list pos:line="133" pos:column="56">(<argument><expr><name pos:line="133" pos:column="57">pos<pos:position pos:line="133" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="62">&amp;<pos:position pos:line="133" pos:column="67"/></operator><name pos:line="133" pos:column="63">state<pos:position pos:line="133" pos:column="68"/></name></expr></argument>)<pos:position pos:line="133" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="70"/></expr_stmt></block></then></if></elseif></if>
			<expr_stmt><expr><name pos:line="134" pos:column="25">pos<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">=<pos:position pos:line="134" pos:column="30"/></operator> <call><name pos:line="134" pos:column="31">skip_same_name<pos:position pos:line="134" pos:column="45"/></name><argument_list pos:line="134" pos:column="45">(<argument><expr><name pos:line="134" pos:column="46">ce<pos:position pos:line="134" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="50">pos<pos:position pos:line="134" pos:column="53"/></name></expr></argument>)<pos:position pos:line="134" pos:column="54"/></argument_list></call> <operator pos:line="134" pos:column="55">-<pos:position pos:line="134" pos:column="56"/></operator> <literal type="number" pos:line="134" pos:column="57">1<pos:position pos:line="134" pos:column="58"/></literal></expr>;<pos:position pos:line="134" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="135" pos:column="18"/></block></then></if>
	}<pos:position pos:line="136" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="137" pos:column="9">errs<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">|=<pos:position pos:line="137" pos:column="16"/></operator> <call><name pos:line="137" pos:column="17">finish_delayed_checkout<pos:position pos:line="137" pos:column="40"/></name><argument_list pos:line="137" pos:column="40">(<argument><expr><operator pos:line="137" pos:column="41">&amp;<pos:position pos:line="137" pos:column="46"/></operator><name pos:line="137" pos:column="42">state<pos:position pos:line="137" pos:column="47"/></name></expr></argument>)<pos:position pos:line="137" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="49"/></expr_stmt>

	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><call><name pos:line="139" pos:column="13">write_locked_index<pos:position pos:line="139" pos:column="31"/></name><argument_list pos:line="139" pos:column="31">(<argument><expr><operator pos:line="139" pos:column="32">&amp;<pos:position pos:line="139" pos:column="37"/></operator><name pos:line="139" pos:column="33">the_index<pos:position pos:line="139" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="44">lock_file<pos:position pos:line="139" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="55">COMMIT_LOCK<pos:position pos:line="139" pos:column="66"/></name></expr></argument>)<pos:position pos:line="139" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="68"/></condition><then pos:line="139" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="17">die<pos:position pos:line="140" pos:column="20"/></name><argument_list pos:line="140" pos:column="20">(<argument><expr><call><name pos:line="140" pos:column="21">_<pos:position pos:line="140" pos:column="22"/></name><argument_list pos:line="140" pos:column="22">(<argument><expr><literal type="string" pos:line="140" pos:column="23">"unable to write new index file"<pos:position pos:line="140" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="142" pos:column="9">read_ref_full<pos:position pos:line="142" pos:column="22"/></name><argument_list pos:line="142" pos:column="22">(<argument><expr><literal type="string" pos:line="142" pos:column="23">"HEAD"<pos:position pos:line="142" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="31">0<pos:position pos:line="142" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="34">rev<pos:position pos:line="142" pos:column="37"/></name><operator pos:line="142" pos:column="37">.<pos:position pos:line="142" pos:column="38"/></operator><name pos:line="142" pos:column="38">hash<pos:position pos:line="142" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="44">NULL<pos:position pos:line="142" pos:column="48"/></name></expr></argument>)<pos:position pos:line="142" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="143" pos:column="9">head<pos:position pos:line="143" pos:column="13"/></name> <operator pos:line="143" pos:column="14">=<pos:position pos:line="143" pos:column="15"/></operator> <call><name pos:line="143" pos:column="16">lookup_commit_reference_gently<pos:position pos:line="143" pos:column="46"/></name><argument_list pos:line="143" pos:column="46">(<argument><expr><operator pos:line="143" pos:column="47">&amp;<pos:position pos:line="143" pos:column="52"/></operator><name pos:line="143" pos:column="48">rev<pos:position pos:line="143" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="53">1<pos:position pos:line="143" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><name pos:line="145" pos:column="9">errs<pos:position pos:line="145" pos:column="13"/></name> <operator pos:line="145" pos:column="14">|=<pos:position pos:line="145" pos:column="16"/></operator> <call><name pos:line="145" pos:column="17">post_checkout_hook<pos:position pos:line="145" pos:column="35"/></name><argument_list pos:line="145" pos:column="35">(<argument><expr><name pos:line="145" pos:column="36">head<pos:position pos:line="145" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="42">head<pos:position pos:line="145" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="48">0<pos:position pos:line="145" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="51"/></expr_stmt>
	<return pos:line="146" pos:column="9">return <expr><name pos:line="146" pos:column="16">errs<pos:position pos:line="146" pos:column="20"/></name></expr>;<pos:position pos:line="146" pos:column="21"/></return>
}<pos:position pos:line="147" pos:column="2"/></block></function></unit>

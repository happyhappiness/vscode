<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_49_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">index_pack_lockfile<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">ip_out<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">packname<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><literal type="number" pos:line="3" pos:column="23">46<pos:position pos:line="3" pos:column="25"/></literal></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/*
	 * The first thing we expect from index-pack's output
	 * is "pack\t%40s\n" or "keep\t%40s\n" (46 bytes) where
	 * %40s is the newly created pack SHA1 name.  In the "keep"
	 * case, we need it to remove the corresponding .keep file
	 * later on.  If we don't get that then tough luck with it.
	 */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">read_in_full<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">ip_out<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">packname<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="44">46<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call> <operator pos:line="12" pos:column="48">==<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="51">46<pos:position pos:line="12" pos:column="53"/></literal> <operator pos:line="12" pos:column="54">&amp;&amp;<pos:position pos:line="12" pos:column="64"/></operator> <name><name pos:line="12" pos:column="57">packname<pos:position pos:line="12" pos:column="65"/></name><index pos:line="12" pos:column="65">[<expr><literal type="number" pos:line="12" pos:column="66">45<pos:position pos:line="12" pos:column="68"/></literal></expr>]<pos:position pos:line="12" pos:column="69"/></index></name> <operator pos:line="12" pos:column="70">==<pos:position pos:line="12" pos:column="72"/></operator> <literal type="char" pos:line="12" pos:column="73">'\n'<pos:position pos:line="12" pos:column="77"/></literal> <operator pos:line="12" pos:column="78">&amp;&amp;<pos:position pos:line="12" pos:column="88"/></operator>
	    <call><name pos:line="13" pos:column="13">memcmp<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">packname<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"keep\t"<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="40">5<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call> <operator pos:line="13" pos:column="43">==<pos:position pos:line="13" pos:column="45"/></operator> <literal type="number" pos:line="13" pos:column="46">0<pos:position pos:line="13" pos:column="47"/></literal></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <block pos:line="13" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name></type> <name><name pos:line="14" pos:column="22">path<pos:position pos:line="14" pos:column="26"/></name><index pos:line="14" pos:column="26">[<expr><name pos:line="14" pos:column="27">PATH_MAX<pos:position pos:line="14" pos:column="35"/></name></expr>]<pos:position pos:line="14" pos:column="36"/></index></name></decl>;<pos:position pos:line="14" pos:column="37"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">packname<pos:position pos:line="15" pos:column="25"/></name><index pos:line="15" pos:column="25">[<expr><literal type="number" pos:line="15" pos:column="26">45<pos:position pos:line="15" pos:column="28"/></literal></expr>]<pos:position pos:line="15" pos:column="29"/></index></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">snprintf<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">path<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="32">sizeof<argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">path<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="46">"%s/pack/pack-%s.keep"<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>,
			 <argument><expr><call><name pos:line="17" pos:column="26">get_object_directory<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">()<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">packname<pos:position pos:line="17" pos:column="58"/></name> <operator pos:line="17" pos:column="59">+<pos:position pos:line="17" pos:column="60"/></operator> <literal type="number" pos:line="17" pos:column="61">5<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">xstrdup<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">path<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">NULL<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_534_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">remote_ref_atom_parser<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">ref_format<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">format<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="69">struct<pos:position pos:line="1" pos:column="75"/></name> <name pos:line="1" pos:column="76">used_atom<pos:position pos:line="1" pos:column="85"/></name></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier></type><name pos:line="1" pos:column="87">atom<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="93">const<pos:position pos:line="1" pos:column="98"/></specifier> <name pos:line="1" pos:column="99">char<pos:position pos:line="1" pos:column="103"/></name> <modifier pos:line="1" pos:column="104">*<pos:position pos:line="1" pos:column="105"/></modifier></type><name pos:line="1" pos:column="105">arg<pos:position pos:line="1" pos:column="108"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="109"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">params<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><name pos:line="3" pos:column="37">STRING_LIST_INIT_DUP<pos:position pos:line="3" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">arg<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18"> <block pos:line="6" pos:column="19">{
		<expr_stmt><expr><name><name pos:line="7" pos:column="17">atom<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">u<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">remote_ref<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">.<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">option<pos:position pos:line="7" pos:column="42"/></name></name> <operator pos:line="7" pos:column="43">=<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="45">RR_REF<pos:position pos:line="7" pos:column="51"/></name></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">refname_atom_parser_internal<pos:position pos:line="8" pos:column="45"/></name><argument_list pos:line="8" pos:column="45">(<argument><expr><operator pos:line="8" pos:column="46">&amp;<pos:position pos:line="8" pos:column="51"/></operator><name><name pos:line="8" pos:column="47">atom<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">u<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">.<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="55">remote_ref<pos:position pos:line="8" pos:column="65"/></name><operator pos:line="8" pos:column="65">.<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="66">refname<pos:position pos:line="8" pos:column="73"/></name></name></expr></argument>,
					     <argument><expr><name pos:line="9" pos:column="46">arg<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="51">atom<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">name<pos:position pos:line="9" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
		<return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="13" pos:column="9">atom<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">u<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">remote_ref<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">.<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">nobracket<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">=<pos:position pos:line="13" pos:column="39"/></operator> <literal type="number" pos:line="13" pos:column="40">0<pos:position pos:line="13" pos:column="41"/></literal></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">string_list_split<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">params<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">arg<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="41">','<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="46">-<pos:position pos:line="14" pos:column="47"/></operator><literal type="number" pos:line="14" pos:column="47">1<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="25">params<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">nr<pos:position pos:line="16" pos:column="34"/></name></name></expr>;<pos:position pos:line="16" pos:column="35"/></condition> <incr><expr><name pos:line="16" pos:column="36">i<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">++<pos:position pos:line="16" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="40"/></control> <block pos:line="16" pos:column="41">{
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">s<pos:position pos:line="17" pos:column="30"/></name> <init pos:line="17" pos:column="31">= <expr><name><name pos:line="17" pos:column="33">params<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">.<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">items<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><name pos:line="17" pos:column="46">i<pos:position pos:line="17" pos:column="47"/></name></expr>]<pos:position pos:line="17" pos:column="48"/></index></name><operator pos:line="17" pos:column="48">.<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">string<pos:position pos:line="17" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><call><name pos:line="19" pos:column="22">strcmp<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">s<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="32">"track"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="25">atom<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">u<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">.<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">remote_ref<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">option<pos:position pos:line="20" pos:column="50"/></name></name> <operator pos:line="20" pos:column="51">=<pos:position pos:line="20" pos:column="52"/></operator> <name pos:line="20" pos:column="53">RR_TRACK<pos:position pos:line="20" pos:column="61"/></name></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt></block></then>
		<elseif pos:line="21" pos:column="17">else <if pos:line="21" pos:column="22">if <condition pos:line="21" pos:column="25">(<expr><operator pos:line="21" pos:column="26">!<pos:position pos:line="21" pos:column="27"/></operator><call><name pos:line="21" pos:column="27">strcmp<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">s<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="37">"trackshort"<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="25">atom<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">u<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">remote_ref<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">option<pos:position pos:line="22" pos:column="50"/></name></name> <operator pos:line="22" pos:column="51">=<pos:position pos:line="22" pos:column="52"/></operator> <name pos:line="22" pos:column="53">RR_TRACKSHORT<pos:position pos:line="22" pos:column="66"/></name></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="23" pos:column="17">else <if pos:line="23" pos:column="22">if <condition pos:line="23" pos:column="25">(<expr><operator pos:line="23" pos:column="26">!<pos:position pos:line="23" pos:column="27"/></operator><call><name pos:line="23" pos:column="27">strcmp<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">s<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="37">"nobracket"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="25">atom<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">u<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">.<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">remote_ref<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">.<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="44">nobracket<pos:position pos:line="24" pos:column="53"/></name></name> <operator pos:line="24" pos:column="54">=<pos:position pos:line="24" pos:column="55"/></operator> <literal type="number" pos:line="24" pos:column="56">1<pos:position pos:line="24" pos:column="57"/></literal></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt></block></then></if></elseif>
		<else pos:line="25" pos:column="17">else <block pos:line="25" pos:column="22">{
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">atom<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">u<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">remote_ref<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">.<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">option<pos:position pos:line="26" pos:column="50"/></name></name> <operator pos:line="26" pos:column="51">=<pos:position pos:line="26" pos:column="52"/></operator> <name pos:line="26" pos:column="53">RR_REF<pos:position pos:line="26" pos:column="59"/></name></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">refname_atom_parser_internal<pos:position pos:line="27" pos:column="53"/></name><argument_list pos:line="27" pos:column="53">(<argument><expr><operator pos:line="27" pos:column="54">&amp;<pos:position pos:line="27" pos:column="59"/></operator><name><name pos:line="27" pos:column="55">atom<pos:position pos:line="27" pos:column="59"/></name><operator pos:line="27" pos:column="59">-&gt;<pos:position pos:line="27" pos:column="64"/></operator><name pos:line="27" pos:column="61">u<pos:position pos:line="27" pos:column="62"/></name><operator pos:line="27" pos:column="62">.<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="63">remote_ref<pos:position pos:line="27" pos:column="73"/></name><operator pos:line="27" pos:column="73">.<pos:position pos:line="27" pos:column="74"/></operator><name pos:line="27" pos:column="74">refname<pos:position pos:line="27" pos:column="81"/></name></name></expr></argument>,
						     <argument><expr><name pos:line="28" pos:column="54">arg<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="59">atom<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">-&gt;<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="65">name<pos:position pos:line="28" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></else></if>
	}<pos:position pos:line="30" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">string_list_clear<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="28">params<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="36">0<pos:position pos:line="32" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

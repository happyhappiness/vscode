<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3543_git-2.4.12.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_inflate<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">git_zstream<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">strm<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">flush<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init pos:line="5" pos:column="14">;<pos:position pos:line="5" pos:column="15"/></init><condition pos:line="5" pos:column="15">;<pos:position pos:line="5" pos:column="16"/></condition><incr/>)<pos:position pos:line="5" pos:column="17"/></control> <block pos:line="5" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">zlib_pre_call<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">strm<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
		<comment type="block" pos:line="7" pos:column="17">/* Never say Z_FINISH unless we are feeding everything */</comment>
		<expr_stmt><expr><name pos:line="8" pos:column="17">status<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">inflate<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator><name><name pos:line="8" pos:column="35">strm<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">z<pos:position pos:line="8" pos:column="42"/></name></name></expr></argument>,
				 <argument><expr><ternary><condition><expr><operator pos:line="9" pos:column="34">(<pos:position pos:line="9" pos:column="35"/></operator><name><name pos:line="9" pos:column="35">strm<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">z<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">.<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">avail_in<pos:position pos:line="9" pos:column="51"/></name></name> <operator pos:line="9" pos:column="52">!=<pos:position pos:line="9" pos:column="54"/></operator> <name><name pos:line="9" pos:column="55">strm<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">-&gt;<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="61">avail_in<pos:position pos:line="9" pos:column="69"/></name></name><operator pos:line="9" pos:column="69">)<pos:position pos:line="9" pos:column="70"/></operator></expr>
				 ?<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35"> <expr><literal type="number" pos:line="10" pos:column="36">0<pos:position pos:line="10" pos:column="37"/></literal></expr> <pos:position pos:line="10" pos:column="38"/></then><else pos:line="10" pos:column="38">: <expr><name pos:line="10" pos:column="40">flush<pos:position pos:line="10" pos:column="45"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">status<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">==<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">Z_MEM_ERROR<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="string" pos:line="12" pos:column="29">"inflate: out of memory"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">zlib_post_call<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">strm<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

		<comment type="block" pos:line="15" pos:column="17">/*
		 * Let zlib work another round, while we can still
		 * make progress.
		 */</comment>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name><name pos:line="19" pos:column="22">strm<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">avail_out<pos:position pos:line="19" pos:column="37"/></name></name> <operator pos:line="19" pos:column="38">&amp;&amp;<pos:position pos:line="19" pos:column="48"/></operator> <operator pos:line="19" pos:column="41">!<pos:position pos:line="19" pos:column="42"/></operator><name><name pos:line="19" pos:column="42">strm<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">z<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">avail_out<pos:position pos:line="19" pos:column="59"/></name></name><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator> <operator pos:line="19" pos:column="61">&amp;&amp;<pos:position pos:line="19" pos:column="71"/></operator>
		    <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">status<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">==<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">Z_OK<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">||<pos:position pos:line="20" pos:column="39"/></operator> <name pos:line="20" pos:column="40">status<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">==<pos:position pos:line="20" pos:column="49"/></operator> <name pos:line="20" pos:column="50">Z_BUF_ERROR<pos:position pos:line="20" pos:column="61"/></name><operator pos:line="20" pos:column="61">)<pos:position pos:line="20" pos:column="62"/></operator></expr>)<pos:position pos:line="20" pos:column="63"/></condition><then pos:line="20" pos:column="63">
			<block type="pseudo"><continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue></block></then></if>
		<break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
	}<pos:position pos:line="23" pos:column="10"/></block></for>

	<switch pos:line="25" pos:column="9">switch <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">status<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition> <block pos:line="25" pos:column="25">{
	<comment type="block" pos:line="26" pos:column="9">/* Z_BUF_ERROR: normal, needs more space in the output buffer */</comment>
	<case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">Z_BUF_ERROR<pos:position pos:line="27" pos:column="25"/></name></expr>:<pos:position pos:line="27" pos:column="26"/></case>
	<case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">Z_OK<pos:position pos:line="28" pos:column="18"/></name></expr>:<pos:position pos:line="28" pos:column="19"/></case>
	<case pos:line="29" pos:column="9">case <expr><name pos:line="29" pos:column="14">Z_STREAM_END<pos:position pos:line="29" pos:column="26"/></name></expr>:<pos:position pos:line="29" pos:column="27"/></case>
		<return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">status<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></return>
	<default pos:line="31" pos:column="9">default:<pos:position pos:line="31" pos:column="17"/></default>
		<break pos:line="32" pos:column="17">break;<pos:position pos:line="32" pos:column="23"/></break>
	}<pos:position pos:line="33" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">error<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><literal type="string" pos:line="34" pos:column="15">"inflate: %s (%s)"<pos:position pos:line="34" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="35">zerr_to_string<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name pos:line="34" pos:column="50">status<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr></argument>,
	      <argument><expr><ternary><condition><expr><name><name pos:line="35" pos:column="15">strm<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">z<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">.<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">msg<pos:position pos:line="35" pos:column="26"/></name></name></expr> ?<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28"> <expr><name><name pos:line="35" pos:column="29">strm<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">z<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">.<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">msg<pos:position pos:line="35" pos:column="40"/></name></name></expr> <pos:position pos:line="35" pos:column="41"/></then><else pos:line="35" pos:column="41">: <expr><literal type="string" pos:line="35" pos:column="43">"no message"<pos:position pos:line="35" pos:column="55"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">status<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

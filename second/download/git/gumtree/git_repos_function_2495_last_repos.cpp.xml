<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2495_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">path_treatment<pos:position pos:line="1" pos:column="27"/></name></name></type> <name pos:line="1" pos:column="28">treat_one_path<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">dir_struct<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">dir<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="2" pos:column="43">struct<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">untracked_cache_dir<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">untracked<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="3" pos:column="43">struct<pos:position pos:line="3" pos:column="49"/></name> <name pos:line="3" pos:column="50">index_state<pos:position pos:line="3" pos:column="61"/></name></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">istate<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="4" pos:column="43">struct<pos:position pos:line="4" pos:column="49"/></name> <name pos:line="4" pos:column="50">strbuf<pos:position pos:line="4" pos:column="56"/></name></name> <modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier></type><name pos:line="4" pos:column="58">path<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>,
					  <parameter><decl><type><name pos:line="5" pos:column="43">int<pos:position pos:line="5" pos:column="46"/></name></type> <name pos:line="5" pos:column="47">baselen<pos:position pos:line="5" pos:column="54"/></name></decl></parameter>,
					  <parameter><decl><type><specifier pos:line="6" pos:column="43">const<pos:position pos:line="6" pos:column="48"/></specifier> <name><name pos:line="6" pos:column="49">struct<pos:position pos:line="6" pos:column="55"/></name> <name pos:line="6" pos:column="56">pathspec<pos:position pos:line="6" pos:column="64"/></name></name> <modifier pos:line="6" pos:column="65">*<pos:position pos:line="6" pos:column="66"/></modifier></type><name pos:line="6" pos:column="66">pathspec<pos:position pos:line="6" pos:column="74"/></name></decl></parameter>,
					  <parameter><decl><type><name pos:line="7" pos:column="43">int<pos:position pos:line="7" pos:column="46"/></name></type> <name pos:line="7" pos:column="47">dtype<pos:position pos:line="7" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="7" pos:column="54">struct<pos:position pos:line="7" pos:column="60"/></name> <name pos:line="7" pos:column="61">dirent<pos:position pos:line="7" pos:column="67"/></name></name> <modifier pos:line="7" pos:column="68">*<pos:position pos:line="7" pos:column="69"/></modifier></type><name pos:line="7" pos:column="69">de<pos:position pos:line="7" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="72"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">exclude<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">has_path_in_index<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><operator pos:line="10" pos:column="33">!<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">!<pos:position pos:line="10" pos:column="35"/></operator><call><name pos:line="10" pos:column="35">index_file_exists<pos:position pos:line="10" pos:column="52"/></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">istate<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="61">path<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">-&gt;<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="67">buf<pos:position pos:line="10" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="72">path<pos:position pos:line="10" pos:column="76"/></name><operator pos:line="10" pos:column="76">-&gt;<pos:position pos:line="10" pos:column="81"/></operator><name pos:line="10" pos:column="78">len<pos:position pos:line="10" pos:column="81"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="83">ignore_case<pos:position pos:line="10" pos:column="94"/></name></expr></argument>)<pos:position pos:line="10" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="96"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">dtype<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">==<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">DT_UNKNOWN<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">dtype<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <call><name pos:line="13" pos:column="25">get_dtype<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">de<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">istate<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="47">path<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">buf<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="58">path<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">len<pos:position pos:line="13" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* Always exclude indexed files */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">dtype<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">!=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">DT_DIR<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">&amp;&amp;<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="32">has_path_in_index<pos:position pos:line="16" pos:column="49"/></name></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">path_none<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then></if>

	<comment type="block" pos:line="19" pos:column="9">/*
	 * When we are looking at a directory P in the working tree,
	 * there are three cases:
	 *
	 * (1) P exists in the index.  Everything inside the directory P in
	 * the working tree needs to go when P is checked out from the
	 * index.
	 *
	 * (2) P does not exist in the index, but there is P/Q in the index.
	 * We know P will stay a directory when we check out the contents
	 * of the index, but we do not know yet if there is a directory
	 * P/Q in the working tree to be killed, so we need to recurse.
	 *
	 * (3) P does not exist in the index, and there is no P/Q in the index
	 * to require P to be a directory, either.  Only in this case, we
	 * know that everything inside P will not be killed without
	 * recursing.
	 */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name><name pos:line="37" pos:column="14">dir<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">flags<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="27">DIR_COLLECT_KILLED_ONLY<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">)<pos:position pos:line="37" pos:column="51"/></operator> <operator pos:line="37" pos:column="52">&amp;&amp;<pos:position pos:line="37" pos:column="62"/></operator>
	    <operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">dtype<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">==<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">DT_DIR<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">)<pos:position pos:line="38" pos:column="30"/></operator> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator>
	    <operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">has_path_in_index<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">&amp;&amp;<pos:position pos:line="39" pos:column="42"/></operator>
	    <operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><call><name pos:line="40" pos:column="14">directory_exists_in_index<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><name pos:line="40" pos:column="40">istate<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="48">path<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">-&gt;<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="54">buf<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="59">path<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">-&gt;<pos:position pos:line="40" pos:column="68"/></operator><name pos:line="40" pos:column="65">len<pos:position pos:line="40" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call> <operator pos:line="40" pos:column="70">==<pos:position pos:line="40" pos:column="72"/></operator> <name pos:line="40" pos:column="73">index_nonexistent<pos:position pos:line="40" pos:column="90"/></name><operator pos:line="40" pos:column="90">)<pos:position pos:line="40" pos:column="91"/></operator></expr>)<pos:position pos:line="40" pos:column="92"/></condition><then pos:line="40" pos:column="92">
		<block type="pseudo"><return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">path_none<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="43" pos:column="9">exclude<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">is_excluded<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">dir<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="36">istate<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="44">path<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">-&gt;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="50">buf<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="55">&amp;<pos:position pos:line="43" pos:column="60"/></operator><name pos:line="43" pos:column="56">dtype<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>

	<comment type="block" pos:line="45" pos:column="9">/*
	 * Excluded? If we don't explicitly want to show
	 * ignored files, ignore it
	 */</comment>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">exclude<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">&amp;&amp;<pos:position pos:line="49" pos:column="31"/></operator> <operator pos:line="49" pos:column="24">!<pos:position pos:line="49" pos:column="25"/></operator><operator pos:line="49" pos:column="25">(<pos:position pos:line="49" pos:column="26"/></operator><name><name pos:line="49" pos:column="26">dir<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">flags<pos:position pos:line="49" pos:column="36"/></name></name> <operator pos:line="49" pos:column="37">&amp;<pos:position pos:line="49" pos:column="42"/></operator> <operator pos:line="49" pos:column="39">(<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="40">DIR_SHOW_IGNORED<pos:position pos:line="49" pos:column="56"/></name><operator pos:line="49" pos:column="56">|<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="57">DIR_SHOW_IGNORED_TOO<pos:position pos:line="49" pos:column="77"/></name><operator pos:line="49" pos:column="77">)<pos:position pos:line="49" pos:column="78"/></operator><operator pos:line="49" pos:column="78">)<pos:position pos:line="49" pos:column="79"/></operator></expr>)<pos:position pos:line="49" pos:column="80"/></condition><then pos:line="49" pos:column="80">
		<block type="pseudo"><return pos:line="50" pos:column="17">return <expr><name pos:line="50" pos:column="24">path_excluded<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></return></block></then></if>

	<switch pos:line="52" pos:column="9">switch <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">dtype<pos:position pos:line="52" pos:column="22"/></name></expr>)<pos:position pos:line="52" pos:column="23"/></condition> <block pos:line="52" pos:column="24">{
	<default pos:line="53" pos:column="9">default:<pos:position pos:line="53" pos:column="17"/></default>
		<return pos:line="54" pos:column="17">return <expr><name pos:line="54" pos:column="24">path_none<pos:position pos:line="54" pos:column="33"/></name></expr>;<pos:position pos:line="54" pos:column="34"/></return>
	<case pos:line="55" pos:column="9">case <expr><name pos:line="55" pos:column="14">DT_DIR<pos:position pos:line="55" pos:column="20"/></name></expr>:<pos:position pos:line="55" pos:column="21"/></case>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">strbuf_addch<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">path<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="56" pos:column="36">'/'<pos:position pos:line="56" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>
		<return pos:line="57" pos:column="17">return <expr><call><name pos:line="57" pos:column="24">treat_directory<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name pos:line="57" pos:column="40">dir<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">istate<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="53">untracked<pos:position pos:line="57" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="64">path<pos:position pos:line="57" pos:column="68"/></name><operator pos:line="57" pos:column="68">-&gt;<pos:position pos:line="57" pos:column="73"/></operator><name pos:line="57" pos:column="70">buf<pos:position pos:line="57" pos:column="73"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="75">path<pos:position pos:line="57" pos:column="79"/></name><operator pos:line="57" pos:column="79">-&gt;<pos:position pos:line="57" pos:column="84"/></operator><name pos:line="57" pos:column="81">len<pos:position pos:line="57" pos:column="84"/></name></name></expr></argument>,
				       <argument><expr><name pos:line="58" pos:column="40">baselen<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">exclude<pos:position pos:line="58" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">pathspec<pos:position pos:line="58" pos:column="66"/></name></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></return>
	<case pos:line="59" pos:column="9">case <expr><name pos:line="59" pos:column="14">DT_REG<pos:position pos:line="59" pos:column="20"/></name></expr>:<pos:position pos:line="59" pos:column="21"/></case>
	<case pos:line="60" pos:column="9">case <expr><name pos:line="60" pos:column="14">DT_LNK<pos:position pos:line="60" pos:column="20"/></name></expr>:<pos:position pos:line="60" pos:column="21"/></case>
		<return pos:line="61" pos:column="17">return <expr><ternary><condition><expr><name pos:line="61" pos:column="24">exclude<pos:position pos:line="61" pos:column="31"/></name></expr> ?<pos:position pos:line="61" pos:column="33"/></condition><then pos:line="61" pos:column="33"> <expr><name pos:line="61" pos:column="34">path_excluded<pos:position pos:line="61" pos:column="47"/></name></expr> <pos:position pos:line="61" pos:column="48"/></then><else pos:line="61" pos:column="48">: <expr><name pos:line="61" pos:column="50">path_untracked<pos:position pos:line="61" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="61" pos:column="65"/></return>
	}<pos:position pos:line="62" pos:column="10"/></block></switch>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

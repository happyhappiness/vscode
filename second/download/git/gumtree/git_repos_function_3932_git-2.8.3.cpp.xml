<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3932_git-2.8.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">parse_pathspec<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">pathspec<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pathspec<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">unsigned<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">magic_mask<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">unsigned<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">flags<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">char<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">prefix<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier><modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">argv<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">pathspec_item<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">item<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">entry<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><ternary><condition><expr><name pos:line="6" pos:column="29">argv<pos:position pos:line="6" pos:column="33"/></name></expr> ?<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35"> <expr><operator pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="37">argv<pos:position pos:line="6" pos:column="41"/></name></expr> <pos:position pos:line="6" pos:column="42"/></then><else pos:line="6" pos:column="42">: <expr><name pos:line="6" pos:column="44">NULL<pos:position pos:line="6" pos:column="48"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">n<pos:position pos:line="7" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="19">prefixlen<pos:position pos:line="7" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="30">nr_exclude<pos:position pos:line="7" pos:column="40"/></name> <init pos:line="7" pos:column="41">= <expr><literal type="number" pos:line="7" pos:column="43">0<pos:position pos:line="7" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">pathspec<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="29">sizeof<argument_list pos:line="9" pos:column="35">(<argument><expr><operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">pathspec<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">flags<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&amp;<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="21">PATHSPEC_MAXDEPTH_VALID<pos:position pos:line="11" pos:column="44"/></name></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="17">pathspec<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">magic<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">|=<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">PATHSPEC_MAXDEPTH<pos:position pos:line="12" pos:column="53"/></name></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="14" pos:column="9">/* No arguments, no prefix -&gt; no pathspec */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">entry<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&amp;&amp;<pos:position pos:line="15" pos:column="30"/></operator> <operator pos:line="15" pos:column="23">!<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">prefix<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">flags<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">&amp;<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="22">PATHSPEC_PREFER_CWD<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">)<pos:position pos:line="18" pos:column="42"/></operator> <operator pos:line="18" pos:column="43">&amp;&amp;<pos:position pos:line="18" pos:column="53"/></operator>
	    <operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">flags<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">&amp;<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="22">PATHSPEC_PREFER_FULL<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">)<pos:position pos:line="19" pos:column="43"/></operator></expr>)<pos:position pos:line="19" pos:column="44"/></condition><then pos:line="19" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">die<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><literal type="string" pos:line="20" pos:column="21">"BUG: PATHSPEC_PREFER_CWD and PATHSPEC_PREFER_FULL are incompatible"<pos:position pos:line="20" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="91"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* No arguments with prefix -&gt; prefix pathspec */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">entry<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
		<decl_stmt><decl><specifier pos:line="24" pos:column="17">static<pos:position pos:line="24" pos:column="23"/></specifier> <type><specifier pos:line="24" pos:column="24">const<pos:position pos:line="24" pos:column="29"/></specifier> <name pos:line="24" pos:column="30">char<pos:position pos:line="24" pos:column="34"/></name> <modifier pos:line="24" pos:column="35">*<pos:position pos:line="24" pos:column="36"/></modifier></type><name><name pos:line="24" pos:column="36">raw<pos:position pos:line="24" pos:column="39"/></name><index pos:line="24" pos:column="39">[<expr><literal type="number" pos:line="24" pos:column="40">2<pos:position pos:line="24" pos:column="41"/></literal></expr>]<pos:position pos:line="24" pos:column="42"/></index></name></decl>;<pos:position pos:line="24" pos:column="43"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">flags<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="29">PATHSPEC_PREFER_FULL<pos:position pos:line="26" pos:column="49"/></name></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50">
			<block type="pseudo"><return pos:line="27" pos:column="25">return;<pos:position pos:line="27" pos:column="32"/></return></block></then></if>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><operator pos:line="29" pos:column="22">(<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">flags<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">&amp;<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="31">PATHSPEC_PREFER_CWD<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">)<pos:position pos:line="29" pos:column="51"/></operator></expr>)<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">die<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><literal type="string" pos:line="30" pos:column="29">"BUG: PATHSPEC_PREFER_CWD requires arguments"<pos:position pos:line="30" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="32" pos:column="17">pathspec<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">items<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">item<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">=<pos:position pos:line="32" pos:column="41"/></operator> <call><name pos:line="32" pos:column="42">xcalloc<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><literal type="number" pos:line="32" pos:column="50">1<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="53">sizeof<argument_list pos:line="32" pos:column="59">(<argument><expr><operator pos:line="32" pos:column="60">*<pos:position pos:line="32" pos:column="61"/></operator><name pos:line="32" pos:column="61">item<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">item<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">match<pos:position pos:line="33" pos:column="28"/></name></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">prefix<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">item<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">original<pos:position pos:line="34" pos:column="31"/></name></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">prefix<pos:position pos:line="34" pos:column="40"/></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">item<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">nowildcard_len<pos:position pos:line="35" pos:column="37"/></name></name> <operator pos:line="35" pos:column="38">=<pos:position pos:line="35" pos:column="39"/></operator> <name><name pos:line="35" pos:column="40">item<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">len<pos:position pos:line="35" pos:column="49"/></name></name> <operator pos:line="35" pos:column="50">=<pos:position pos:line="35" pos:column="51"/></operator> <call><name pos:line="35" pos:column="52">strlen<pos:position pos:line="35" pos:column="58"/></name><argument_list pos:line="35" pos:column="58">(<argument><expr><name pos:line="35" pos:column="59">prefix<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">item<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">prefix<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <name><name pos:line="36" pos:column="32">item<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">len<pos:position pos:line="36" pos:column="41"/></name></name></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">raw<pos:position pos:line="37" pos:column="20"/></name><index pos:line="37" pos:column="20">[<expr><literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr>]<pos:position pos:line="37" pos:column="23"/></index></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">prefix<pos:position pos:line="37" pos:column="32"/></name></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">raw<pos:position pos:line="38" pos:column="20"/></name><index pos:line="38" pos:column="20">[<expr><literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>]<pos:position pos:line="38" pos:column="23"/></index></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">NULL<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">pathspec<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">nr<pos:position pos:line="39" pos:column="29"/></name></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">pathspec<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">_raw<pos:position pos:line="40" pos:column="31"/></name></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">raw<pos:position pos:line="40" pos:column="37"/></name></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
		<return pos:line="41" pos:column="17">return;<pos:position pos:line="41" pos:column="24"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="44" pos:column="9">n<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <literal type="number" pos:line="44" pos:column="13">0<pos:position pos:line="44" pos:column="14"/></literal></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>
	<while pos:line="45" pos:column="9">while <condition pos:line="45" pos:column="15">(<expr><name><name pos:line="45" pos:column="16">argv<pos:position pos:line="45" pos:column="20"/></name><index pos:line="45" pos:column="20">[<expr><name pos:line="45" pos:column="21">n<pos:position pos:line="45" pos:column="22"/></name></expr>]<pos:position pos:line="45" pos:column="23"/></index></name></expr>)<pos:position pos:line="45" pos:column="24"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="17">n<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">++<pos:position pos:line="46" pos:column="20"/></operator></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt></block></while>

	<expr_stmt><expr><name><name pos:line="48" pos:column="9">pathspec<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">nr<pos:position pos:line="48" pos:column="21"/></name></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">n<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">ALLOC_ARRAY<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name><name pos:line="49" pos:column="21">pathspec<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">items<pos:position pos:line="49" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">n<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="50" pos:column="9">item<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <name><name pos:line="50" pos:column="16">pathspec<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">items<pos:position pos:line="50" pos:column="31"/></name></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">pathspec<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">_raw<pos:position pos:line="51" pos:column="23"/></name></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <name pos:line="51" pos:column="26">argv<pos:position pos:line="51" pos:column="30"/></name></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="52" pos:column="9">prefixlen<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <ternary><condition><expr><name pos:line="52" pos:column="21">prefix<pos:position pos:line="52" pos:column="27"/></name></expr> ?<pos:position pos:line="52" pos:column="29"/></condition><then pos:line="52" pos:column="29"> <expr><call><name pos:line="52" pos:column="30">strlen<pos:position pos:line="52" pos:column="36"/></name><argument_list pos:line="52" pos:column="36">(<argument><expr><name pos:line="52" pos:column="37">prefix<pos:position pos:line="52" pos:column="43"/></name></expr></argument>)<pos:position pos:line="52" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="52" pos:column="45"/></then><else pos:line="52" pos:column="45">: <expr><literal type="number" pos:line="52" pos:column="47">0<pos:position pos:line="52" pos:column="48"/></literal></expr></else></ternary></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>

	<for pos:line="54" pos:column="9">for <control pos:line="54" pos:column="13">(<init><expr><name pos:line="54" pos:column="14">i<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal></expr>;<pos:position pos:line="54" pos:column="20"/></init> <condition><expr><name pos:line="54" pos:column="21">i<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">&lt;<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="25">n<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></condition> <incr><expr><name pos:line="54" pos:column="28">i<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">++<pos:position pos:line="54" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="32"/></control> <block pos:line="54" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="55" pos:column="17">unsigned<pos:position pos:line="55" pos:column="25"/></name></type> <name pos:line="55" pos:column="26">short_magic<pos:position pos:line="55" pos:column="37"/></name></decl>;<pos:position pos:line="55" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><name pos:line="56" pos:column="17">entry<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <name><name pos:line="56" pos:column="25">argv<pos:position pos:line="56" pos:column="29"/></name><index pos:line="56" pos:column="29">[<expr><name pos:line="56" pos:column="30">i<pos:position pos:line="56" pos:column="31"/></name></expr>]<pos:position pos:line="56" pos:column="32"/></index></name></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="58" pos:column="17">item<pos:position pos:line="58" pos:column="21"/></name><index pos:line="58" pos:column="21">[<expr><name pos:line="58" pos:column="22">i<pos:position pos:line="58" pos:column="23"/></name></expr>]<pos:position pos:line="58" pos:column="24"/></index></name><operator pos:line="58" pos:column="24">.<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="25">magic<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <call><name pos:line="58" pos:column="33">prefix_pathspec<pos:position pos:line="58" pos:column="48"/></name><argument_list pos:line="58" pos:column="48">(<argument><expr><name pos:line="58" pos:column="49">item<pos:position pos:line="58" pos:column="53"/></name> <operator pos:line="58" pos:column="54">+<pos:position pos:line="58" pos:column="55"/></operator> <name pos:line="58" pos:column="56">i<pos:position pos:line="58" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="59">&amp;<pos:position pos:line="58" pos:column="64"/></operator><name pos:line="58" pos:column="60">short_magic<pos:position pos:line="58" pos:column="71"/></name></expr></argument>,
						<argument><expr><name pos:line="59" pos:column="49">argv<pos:position pos:line="59" pos:column="53"/></name> <operator pos:line="59" pos:column="54">+<pos:position pos:line="59" pos:column="55"/></operator> <name pos:line="59" pos:column="56">i<pos:position pos:line="59" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="59">flags<pos:position pos:line="59" pos:column="64"/></name></expr></argument>,
						<argument><expr><name pos:line="60" pos:column="49">prefix<pos:position pos:line="60" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="57">prefixlen<pos:position pos:line="60" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="68">entry<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><operator pos:line="61" pos:column="21">(<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">flags<pos:position pos:line="61" pos:column="27"/></name> <operator pos:line="61" pos:column="28">&amp;<pos:position pos:line="61" pos:column="33"/></operator> <name pos:line="61" pos:column="30">PATHSPEC_LITERAL_PATH<pos:position pos:line="61" pos:column="51"/></name><operator pos:line="61" pos:column="51">)<pos:position pos:line="61" pos:column="52"/></operator> <operator pos:line="61" pos:column="53">&amp;&amp;<pos:position pos:line="61" pos:column="63"/></operator>
		    <operator pos:line="62" pos:column="21">!<pos:position pos:line="62" pos:column="22"/></operator><operator pos:line="62" pos:column="22">(<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="23">magic_mask<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">&amp;<pos:position pos:line="62" pos:column="39"/></operator> <name pos:line="62" pos:column="36">PATHSPEC_LITERAL<pos:position pos:line="62" pos:column="52"/></name><operator pos:line="62" pos:column="52">)<pos:position pos:line="62" pos:column="53"/></operator></expr>)<pos:position pos:line="62" pos:column="54"/></condition><then pos:line="62" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="25">item<pos:position pos:line="63" pos:column="29"/></name><index pos:line="63" pos:column="29">[<expr><name pos:line="63" pos:column="30">i<pos:position pos:line="63" pos:column="31"/></name></expr>]<pos:position pos:line="63" pos:column="32"/></index></name><operator pos:line="63" pos:column="32">.<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="33">magic<pos:position pos:line="63" pos:column="38"/></name> <operator pos:line="63" pos:column="39">|=<pos:position pos:line="63" pos:column="41"/></operator> <name pos:line="63" pos:column="42">PATHSPEC_LITERAL<pos:position pos:line="63" pos:column="58"/></name></expr>;<pos:position pos:line="63" pos:column="59"/></expr_stmt></block></then></if>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name><name pos:line="64" pos:column="21">item<pos:position pos:line="64" pos:column="25"/></name><index pos:line="64" pos:column="25">[<expr><name pos:line="64" pos:column="26">i<pos:position pos:line="64" pos:column="27"/></name></expr>]<pos:position pos:line="64" pos:column="28"/></index></name><operator pos:line="64" pos:column="28">.<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">magic<pos:position pos:line="64" pos:column="34"/></name> <operator pos:line="64" pos:column="35">&amp;<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="37">PATHSPEC_EXCLUDE<pos:position pos:line="64" pos:column="53"/></name></expr>)<pos:position pos:line="64" pos:column="54"/></condition><then pos:line="64" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="25">nr_exclude<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">++<pos:position pos:line="65" pos:column="37"/></operator></expr>;<pos:position pos:line="65" pos:column="38"/></expr_stmt></block></then></if>
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name><name pos:line="66" pos:column="21">item<pos:position pos:line="66" pos:column="25"/></name><index pos:line="66" pos:column="25">[<expr><name pos:line="66" pos:column="26">i<pos:position pos:line="66" pos:column="27"/></name></expr>]<pos:position pos:line="66" pos:column="28"/></index></name><operator pos:line="66" pos:column="28">.<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">magic<pos:position pos:line="66" pos:column="34"/></name> <operator pos:line="66" pos:column="35">&amp;<pos:position pos:line="66" pos:column="40"/></operator> <name pos:line="66" pos:column="37">magic_mask<pos:position pos:line="66" pos:column="47"/></name></expr>)<pos:position pos:line="66" pos:column="48"/></condition><then pos:line="66" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="25">unsupported_magic<pos:position pos:line="67" pos:column="42"/></name><argument_list pos:line="67" pos:column="42">(<argument><expr><name pos:line="67" pos:column="43">entry<pos:position pos:line="67" pos:column="48"/></name></expr></argument>,
					  <argument><expr><name><name pos:line="68" pos:column="43">item<pos:position pos:line="68" pos:column="47"/></name><index pos:line="68" pos:column="47">[<expr><name pos:line="68" pos:column="48">i<pos:position pos:line="68" pos:column="49"/></name></expr>]<pos:position pos:line="68" pos:column="50"/></index></name><operator pos:line="68" pos:column="50">.<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="51">magic<pos:position pos:line="68" pos:column="56"/></name> <operator pos:line="68" pos:column="57">&amp;<pos:position pos:line="68" pos:column="62"/></operator> <name pos:line="68" pos:column="59">magic_mask<pos:position pos:line="68" pos:column="69"/></name></expr></argument>,
					  <argument><expr><name pos:line="69" pos:column="43">short_magic<pos:position pos:line="69" pos:column="54"/></name></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="56"/></expr_stmt></block></then></if>

		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><operator pos:line="71" pos:column="21">(<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="22">flags<pos:position pos:line="71" pos:column="27"/></name> <operator pos:line="71" pos:column="28">&amp;<pos:position pos:line="71" pos:column="33"/></operator> <name pos:line="71" pos:column="30">PATHSPEC_SYMLINK_LEADING_PATH<pos:position pos:line="71" pos:column="59"/></name><operator pos:line="71" pos:column="59">)<pos:position pos:line="71" pos:column="60"/></operator> <operator pos:line="71" pos:column="61">&amp;&amp;<pos:position pos:line="71" pos:column="71"/></operator>
		    <call><name pos:line="72" pos:column="21">has_symlink_leading_path<pos:position pos:line="72" pos:column="45"/></name><argument_list pos:line="72" pos:column="45">(<argument><expr><name><name pos:line="72" pos:column="46">item<pos:position pos:line="72" pos:column="50"/></name><index pos:line="72" pos:column="50">[<expr><name pos:line="72" pos:column="51">i<pos:position pos:line="72" pos:column="52"/></name></expr>]<pos:position pos:line="72" pos:column="53"/></index></name><operator pos:line="72" pos:column="53">.<pos:position pos:line="72" pos:column="54"/></operator><name pos:line="72" pos:column="54">match<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="61">item<pos:position pos:line="72" pos:column="65"/></name><index pos:line="72" pos:column="65">[<expr><name pos:line="72" pos:column="66">i<pos:position pos:line="72" pos:column="67"/></name></expr>]<pos:position pos:line="72" pos:column="68"/></index></name><operator pos:line="72" pos:column="68">.<pos:position pos:line="72" pos:column="69"/></operator><name pos:line="72" pos:column="69">len<pos:position pos:line="72" pos:column="72"/></name></expr></argument>)<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="74"/></condition><then pos:line="72" pos:column="74"> <block pos:line="72" pos:column="75">{
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">die<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><call><name pos:line="73" pos:column="29">_<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><literal type="string" pos:line="73" pos:column="31">"pathspec '%s' is beyond a symbolic link"<pos:position pos:line="73" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="75">entry<pos:position pos:line="73" pos:column="80"/></name></expr></argument>)<pos:position pos:line="73" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="82"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>

		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">item<pos:position pos:line="76" pos:column="25"/></name><index pos:line="76" pos:column="25">[<expr><name pos:line="76" pos:column="26">i<pos:position pos:line="76" pos:column="27"/></name></expr>]<pos:position pos:line="76" pos:column="28"/></index></name><operator pos:line="76" pos:column="28">.<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="29">nowildcard_len<pos:position pos:line="76" pos:column="43"/></name> <operator pos:line="76" pos:column="44">&lt;<pos:position pos:line="76" pos:column="48"/></operator> <name><name pos:line="76" pos:column="46">item<pos:position pos:line="76" pos:column="50"/></name><index pos:line="76" pos:column="50">[<expr><name pos:line="76" pos:column="51">i<pos:position pos:line="76" pos:column="52"/></name></expr>]<pos:position pos:line="76" pos:column="53"/></index></name><operator pos:line="76" pos:column="53">.<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="54">len<pos:position pos:line="76" pos:column="57"/></name></expr>)<pos:position pos:line="76" pos:column="58"/></condition><then pos:line="76" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="25">pathspec<pos:position pos:line="77" pos:column="33"/></name><operator pos:line="77" pos:column="33">-&gt;<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="35">has_wildcard<pos:position pos:line="77" pos:column="47"/></name></name> <operator pos:line="77" pos:column="48">=<pos:position pos:line="77" pos:column="49"/></operator> <literal type="number" pos:line="77" pos:column="50">1<pos:position pos:line="77" pos:column="51"/></literal></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="78" pos:column="17">pathspec<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">magic<pos:position pos:line="78" pos:column="32"/></name></name> <operator pos:line="78" pos:column="33">|=<pos:position pos:line="78" pos:column="35"/></operator> <name><name pos:line="78" pos:column="36">item<pos:position pos:line="78" pos:column="40"/></name><index pos:line="78" pos:column="40">[<expr><name pos:line="78" pos:column="41">i<pos:position pos:line="78" pos:column="42"/></name></expr>]<pos:position pos:line="78" pos:column="43"/></index></name><operator pos:line="78" pos:column="43">.<pos:position pos:line="78" pos:column="44"/></operator><name pos:line="78" pos:column="44">magic<pos:position pos:line="78" pos:column="49"/></name></expr>;<pos:position pos:line="78" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="79" pos:column="10"/></block></for>

	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">nr_exclude<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">==<pos:position pos:line="81" pos:column="26"/></operator> <name pos:line="81" pos:column="27">n<pos:position pos:line="81" pos:column="28"/></name></expr>)<pos:position pos:line="81" pos:column="29"/></condition><then pos:line="81" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="17">die<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><call><name pos:line="82" pos:column="21">_<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><literal type="string" pos:line="82" pos:column="23">"There is nothing to exclude from by :(exclude) patterns.\n"<pos:position pos:line="82" pos:column="83"/></literal>
		      <literal type="string" pos:line="83" pos:column="23">"Perhaps you forgot to add either ':/' or '.' ?"<pos:position pos:line="83" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt></block></then></if>


	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name><name pos:line="86" pos:column="13">pathspec<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">-&gt;<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="23">magic<pos:position pos:line="86" pos:column="28"/></name></name> <operator pos:line="86" pos:column="29">&amp;<pos:position pos:line="86" pos:column="34"/></operator> <name pos:line="86" pos:column="31">PATHSPEC_MAXDEPTH<pos:position pos:line="86" pos:column="48"/></name></expr>)<pos:position pos:line="86" pos:column="49"/></condition><then pos:line="86" pos:column="49"> <block pos:line="86" pos:column="50">{
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">flags<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">&amp;<pos:position pos:line="87" pos:column="32"/></operator> <name pos:line="87" pos:column="29">PATHSPEC_KEEP_ORDER<pos:position pos:line="87" pos:column="48"/></name></expr>)<pos:position pos:line="87" pos:column="49"/></condition><then pos:line="87" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="25">die<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><literal type="string" pos:line="88" pos:column="29">"BUG: PATHSPEC_MAXDEPTH_VALID and PATHSPEC_KEEP_ORDER are incompatible"<pos:position pos:line="88" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="102"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">qsort<pos:position pos:line="89" pos:column="22"/></name><argument_list pos:line="89" pos:column="22">(<argument><expr><name><name pos:line="89" pos:column="23">pathspec<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">-&gt;<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="33">items<pos:position pos:line="89" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="40">pathspec<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">-&gt;<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="50">nr<pos:position pos:line="89" pos:column="52"/></name></name></expr></argument>,
		      <argument><expr><sizeof pos:line="90" pos:column="23">sizeof<argument_list pos:line="90" pos:column="29">(<argument><expr pos:line="90" pos:column="30">struct <name pos:line="90" pos:column="37">pathspec_item<pos:position pos:line="90" pos:column="50"/></name></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="90" pos:column="53">pathspec_item_cmp<pos:position pos:line="90" pos:column="70"/></name></expr></argument>)<pos:position pos:line="90" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="91" pos:column="10"/></block></then></if>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

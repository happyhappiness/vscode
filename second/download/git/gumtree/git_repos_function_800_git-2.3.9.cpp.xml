<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_800_git-2.3.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">wt_status_print<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">wt_status<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">branch_color<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><call><name pos:line="3" pos:column="36">color<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">(<argument><expr><name pos:line="3" pos:column="42">WT_STATUS_ONBRANCH<pos:position pos:line="3" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="62">s<pos:position pos:line="3" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">branch_status_color<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><call><name pos:line="4" pos:column="43">color<pos:position pos:line="4" pos:column="48"/></name><argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">WT_STATUS_HEADER<pos:position pos:line="4" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="67">s<pos:position pos:line="4" pos:column="68"/></name></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">wt_status_state<pos:position pos:line="5" pos:column="31"/></name></name></type> <name pos:line="5" pos:column="32">state<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">state<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="27">sizeof<argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">state<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">wt_status_get_state<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="30">state<pos:position pos:line="8" pos:column="35"/></name></expr></argument>,
			    <argument><expr><name><name pos:line="9" pos:column="29">s<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">branch<pos:position pos:line="9" pos:column="38"/></name></name> <operator pos:line="9" pos:column="39">&amp;&amp;<pos:position pos:line="9" pos:column="49"/></operator> <operator pos:line="9" pos:column="42">!<pos:position pos:line="9" pos:column="43"/></operator><call><name pos:line="9" pos:column="43">strcmp<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name><name pos:line="9" pos:column="50">s<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">branch<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="61">"HEAD"<pos:position pos:line="9" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="70"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">s<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">branch<pos:position pos:line="11" pos:column="22"/></name></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
		<decl_stmt><decl><type><specifier pos:line="12" pos:column="17">const<pos:position pos:line="12" pos:column="22"/></specifier> <name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">on_what<pos:position pos:line="12" pos:column="36"/></name> <init pos:line="12" pos:column="37">= <expr><call><name pos:line="12" pos:column="39">_<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><literal type="string" pos:line="12" pos:column="41">"On branch "<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">branch_name<pos:position pos:line="13" pos:column="40"/></name> <init pos:line="13" pos:column="41">= <expr><name><name pos:line="13" pos:column="43">s<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">branch<pos:position pos:line="13" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="53"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">starts_with<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">branch_name<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="46">"refs/heads/"<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">branch_name<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">+=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">11<pos:position pos:line="15" pos:column="42"/></literal></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt></block></then>
		<elseif pos:line="16" pos:column="17">else <if pos:line="16" pos:column="22">if <condition pos:line="16" pos:column="25">(<expr><operator pos:line="16" pos:column="26">!<pos:position pos:line="16" pos:column="27"/></operator><call><name pos:line="16" pos:column="27">strcmp<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">branch_name<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="47">"HEAD"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="55"/></condition><then pos:line="16" pos:column="55"> <block pos:line="16" pos:column="56">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">branch_status_color<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">=<pos:position pos:line="17" pos:column="46"/></operator> <call><name pos:line="17" pos:column="47">color<pos:position pos:line="17" pos:column="52"/></name><argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">WT_STATUS_NOBRANCH<pos:position pos:line="17" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="73">s<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name><name pos:line="18" pos:column="29">state<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">.<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">rebase_in_progress<pos:position pos:line="18" pos:column="53"/></name></name> <operator pos:line="18" pos:column="54">||<pos:position pos:line="18" pos:column="56"/></operator> <name><name pos:line="18" pos:column="57">state<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">.<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="63">rebase_interactive_in_progress<pos:position pos:line="18" pos:column="93"/></name></name></expr>)<pos:position pos:line="18" pos:column="94"/></condition><then pos:line="18" pos:column="94"> <block pos:line="18" pos:column="95">{
				<expr_stmt><expr><name pos:line="19" pos:column="33">on_what<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">=<pos:position pos:line="19" pos:column="42"/></operator> <call><name pos:line="19" pos:column="43">_<pos:position pos:line="19" pos:column="44"/></name><argument_list pos:line="19" pos:column="44">(<argument><expr><literal type="string" pos:line="19" pos:column="45">"rebase in progress; onto "<pos:position pos:line="19" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name pos:line="20" pos:column="33">branch_name<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">=<pos:position pos:line="20" pos:column="46"/></operator> <name><name pos:line="20" pos:column="47">state<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">.<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">onto<pos:position pos:line="20" pos:column="57"/></name></name></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="21" pos:column="26"/></block></then> <elseif pos:line="21" pos:column="27">else <if pos:line="21" pos:column="32">if <condition pos:line="21" pos:column="35">(<expr><name><name pos:line="21" pos:column="36">state<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">.<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">detached_from<pos:position pos:line="21" pos:column="55"/></name></name></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56"> <block pos:line="21" pos:column="57">{
				<decl_stmt><decl><type><name pos:line="22" pos:column="33">unsigned<pos:position pos:line="22" pos:column="41"/></name> <name pos:line="22" pos:column="42">char<pos:position pos:line="22" pos:column="46"/></name></type> <name><name pos:line="22" pos:column="47">sha1<pos:position pos:line="22" pos:column="51"/></name><index pos:line="22" pos:column="51">[<expr><literal type="number" pos:line="22" pos:column="52">20<pos:position pos:line="22" pos:column="54"/></literal></expr>]<pos:position pos:line="22" pos:column="55"/></index></name></decl>;<pos:position pos:line="22" pos:column="56"/></decl_stmt>
				<expr_stmt><expr><name pos:line="23" pos:column="33">branch_name<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">=<pos:position pos:line="23" pos:column="46"/></operator> <name><name pos:line="23" pos:column="47">state<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">.<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">detached_from<pos:position pos:line="23" pos:column="66"/></name></name></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
				<if pos:line="24" pos:column="33">if <condition pos:line="24" pos:column="36">(<expr><operator pos:line="24" pos:column="37">!<pos:position pos:line="24" pos:column="38"/></operator><call><name pos:line="24" pos:column="38">get_sha1<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><literal type="string" pos:line="24" pos:column="47">"HEAD"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">sha1<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call> <operator pos:line="24" pos:column="61">&amp;&amp;<pos:position pos:line="24" pos:column="71"/></operator>
				    <operator pos:line="25" pos:column="37">!<pos:position pos:line="25" pos:column="38"/></operator><call><name pos:line="25" pos:column="38">hashcmp<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">sha1<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="52">state<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">.<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="58">detached_sha1<pos:position pos:line="25" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="73"/></condition><then pos:line="25" pos:column="73">
					<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="41">on_what<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">=<pos:position pos:line="26" pos:column="50"/></operator> <call><name pos:line="26" pos:column="51">_<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><literal type="string" pos:line="26" pos:column="53">"HEAD detached at "<pos:position pos:line="26" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt></block></then>
				<else pos:line="27" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="41">on_what<pos:position pos:line="28" pos:column="48"/></name> <operator pos:line="28" pos:column="49">=<pos:position pos:line="28" pos:column="50"/></operator> <call><name pos:line="28" pos:column="51">_<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><literal type="string" pos:line="28" pos:column="53">"HEAD detached from "<pos:position pos:line="28" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="76"/></expr_stmt></block></else></if>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if></elseif> <else pos:line="29" pos:column="27">else <block pos:line="29" pos:column="32">{
				<expr_stmt><expr><name pos:line="30" pos:column="33">branch_name<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">=<pos:position pos:line="30" pos:column="46"/></operator> <literal type="string" pos:line="30" pos:column="47">""<pos:position pos:line="30" pos:column="49"/></literal></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="31" pos:column="33">on_what<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">=<pos:position pos:line="31" pos:column="42"/></operator> <call><name pos:line="31" pos:column="43">_<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><literal type="string" pos:line="31" pos:column="45">"Not currently on any branch."<pos:position pos:line="31" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="32" pos:column="26"/></block></else></if>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">status_printf<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">s<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="34">color<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">WT_STATUS_HEADER<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">s<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="62">"%s"<pos:position pos:line="34" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="68">""<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">status_printf_more<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">s<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">branch_status_color<pos:position pos:line="35" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="60">"%s"<pos:position pos:line="35" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="66">on_what<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">status_printf_more<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">s<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">branch_color<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="53">"%s\n"<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">branch_name<pos:position pos:line="36" pos:column="72"/></name></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><name><name pos:line="37" pos:column="22">s<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">is_initial<pos:position pos:line="37" pos:column="35"/></name></name></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">wt_status_print_tracking<pos:position pos:line="38" pos:column="49"/></name><argument_list pos:line="38" pos:column="49">(<argument><expr><name pos:line="38" pos:column="50">s<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="41" pos:column="9">wt_status_print_state<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">s<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="34">&amp;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="35">state<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">free<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><name><name pos:line="42" pos:column="14">state<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">branch<pos:position pos:line="42" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">free<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name><name pos:line="43" pos:column="14">state<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">onto<pos:position pos:line="43" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">free<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><name><name pos:line="44" pos:column="14">state<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">detached_from<pos:position pos:line="44" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">s<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">is_initial<pos:position pos:line="46" pos:column="26"/></name></name></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27"> <block pos:line="46" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">status_printf_ln<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">s<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="37">color<pos:position pos:line="47" pos:column="42"/></name><argument_list pos:line="47" pos:column="42">(<argument><expr><name pos:line="47" pos:column="43">WT_STATUS_HEADER<pos:position pos:line="47" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="61">s<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="65">"%s"<pos:position pos:line="47" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="71">""<pos:position pos:line="47" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">status_printf_ln<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">s<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="37">color<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">WT_STATUS_HEADER<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">s<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="65">_<pos:position pos:line="48" pos:column="66"/></name><argument_list pos:line="48" pos:column="66">(<argument><expr><literal type="string" pos:line="48" pos:column="67">"Initial commit"<pos:position pos:line="48" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">status_printf_ln<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">s<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="37">color<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><name pos:line="49" pos:column="43">WT_STATUS_HEADER<pos:position pos:line="49" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="61">s<pos:position pos:line="49" pos:column="62"/></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="65">"%s"<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="71">""<pos:position pos:line="49" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">wt_status_print_updated<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">s<pos:position pos:line="52" pos:column="34"/></name></expr></argument>)<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">wt_status_print_unmerged<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">s<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">wt_status_print_changed<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">s<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">s<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">submodule_summary<pos:position pos:line="55" pos:column="33"/></name></name> <operator pos:line="55" pos:column="34">&amp;&amp;<pos:position pos:line="55" pos:column="44"/></operator>
	    <operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><operator pos:line="56" pos:column="14">!<pos:position pos:line="56" pos:column="15"/></operator><name><name pos:line="56" pos:column="15">s<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">ignore_submodule_arg<pos:position pos:line="56" pos:column="38"/></name></name> <operator pos:line="56" pos:column="39">||<pos:position pos:line="56" pos:column="41"/></operator>
	     <call><name pos:line="57" pos:column="14">strcmp<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name><name pos:line="57" pos:column="21">s<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">-&gt;<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="24">ignore_submodule_arg<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="46">"all"<pos:position pos:line="57" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call><operator pos:line="57" pos:column="52">)<pos:position pos:line="57" pos:column="53"/></operator></expr>)<pos:position pos:line="57" pos:column="54"/></condition><then pos:line="57" pos:column="54"> <block pos:line="57" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">wt_status_print_submodule_summary<pos:position pos:line="58" pos:column="50"/></name><argument_list pos:line="58" pos:column="50">(<argument><expr><name pos:line="58" pos:column="51">s<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="54">0<pos:position pos:line="58" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt>  <comment type="block" pos:line="58" pos:column="59">/* staged */</comment>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">wt_status_print_submodule_summary<pos:position pos:line="59" pos:column="50"/></name><argument_list pos:line="59" pos:column="50">(<argument><expr><name pos:line="59" pos:column="51">s<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="54">1<pos:position pos:line="59" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt>  <comment type="block" pos:line="59" pos:column="59">/* unstaged */</comment>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">s<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">show_untracked_files<pos:position pos:line="61" pos:column="36"/></name></name></expr>)<pos:position pos:line="61" pos:column="37"/></condition><then pos:line="61" pos:column="37"> <block pos:line="61" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">wt_status_print_other<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><name pos:line="62" pos:column="39">s<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="42">&amp;<pos:position pos:line="62" pos:column="47"/></operator><name><name pos:line="62" pos:column="43">s<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">-&gt;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="46">untracked<pos:position pos:line="62" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="57">_<pos:position pos:line="62" pos:column="58"/></name><argument_list pos:line="62" pos:column="58">(<argument><expr><literal type="string" pos:line="62" pos:column="59">"Untracked files"<pos:position pos:line="62" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="79">"add"<pos:position pos:line="62" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="86"/></expr_stmt>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name><name pos:line="63" pos:column="21">s<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">show_ignored_files<pos:position pos:line="63" pos:column="42"/></name></name></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">wt_status_print_other<pos:position pos:line="64" pos:column="46"/></name><argument_list pos:line="64" pos:column="46">(<argument><expr><name pos:line="64" pos:column="47">s<pos:position pos:line="64" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="50">&amp;<pos:position pos:line="64" pos:column="55"/></operator><name><name pos:line="64" pos:column="51">s<pos:position pos:line="64" pos:column="52"/></name><operator pos:line="64" pos:column="52">-&gt;<pos:position pos:line="64" pos:column="57"/></operator><name pos:line="64" pos:column="54">ignored<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="63">_<pos:position pos:line="64" pos:column="64"/></name><argument_list pos:line="64" pos:column="64">(<argument><expr><literal type="string" pos:line="64" pos:column="65">"Ignored files"<pos:position pos:line="64" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="83">"add -f"<pos:position pos:line="64" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="93"/></expr_stmt></block></then></if>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">advice_status_u_option<pos:position pos:line="65" pos:column="43"/></name> <operator pos:line="65" pos:column="44">&amp;&amp;<pos:position pos:line="65" pos:column="54"/></operator> <literal type="number" pos:line="65" pos:column="47">2000<pos:position pos:line="65" pos:column="51"/></literal> <operator pos:line="65" pos:column="52">&lt;<pos:position pos:line="65" pos:column="56"/></operator> <name><name pos:line="65" pos:column="54">s<pos:position pos:line="65" pos:column="55"/></name><operator pos:line="65" pos:column="55">-&gt;<pos:position pos:line="65" pos:column="60"/></operator><name pos:line="65" pos:column="57">untracked_in_ms<pos:position pos:line="65" pos:column="72"/></name></name></expr>)<pos:position pos:line="65" pos:column="73"/></condition><then pos:line="65" pos:column="73"> <block pos:line="65" pos:column="74">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">status_printf_ln<pos:position pos:line="66" pos:column="41"/></name><argument_list pos:line="66" pos:column="41">(<argument><expr><name pos:line="66" pos:column="42">s<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="66" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="63">"%s"<pos:position pos:line="66" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="69">""<pos:position pos:line="66" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">status_printf_ln<pos:position pos:line="67" pos:column="41"/></name><argument_list pos:line="67" pos:column="41">(<argument><expr><name pos:line="67" pos:column="42">s<pos:position pos:line="67" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="67" pos:column="61"/></name></expr></argument>,
					 <argument><expr><call><name pos:line="68" pos:column="42">_<pos:position pos:line="68" pos:column="43"/></name><argument_list pos:line="68" pos:column="43">(<argument><expr><literal type="string" pos:line="68" pos:column="44">"It took %.2f seconds to enumerate untracked files. 'status -uno'\n"<pos:position pos:line="68" pos:column="112"/></literal>
					   <literal type="string" pos:line="69" pos:column="44">"may speed it up, but you have to be careful not to forget to add\n"<pos:position pos:line="69" pos:column="112"/></literal>
					   <literal type="string" pos:line="70" pos:column="44">"new files yourself (see 'git help status')."<pos:position pos:line="70" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="90"/></argument_list></call></expr></argument>,
					 <argument><expr><name><name pos:line="71" pos:column="42">s<pos:position pos:line="71" pos:column="43"/></name><operator pos:line="71" pos:column="43">-&gt;<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="45">untracked_in_ms<pos:position pos:line="71" pos:column="60"/></name></name> <operator pos:line="71" pos:column="61">/<pos:position pos:line="71" pos:column="62"/></operator> <literal type="number" pos:line="71" pos:column="63">1000.0<pos:position pos:line="71" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if>
	}<pos:position pos:line="73" pos:column="10"/></block></then> <elseif pos:line="73" pos:column="11">else <if pos:line="73" pos:column="16">if <condition pos:line="73" pos:column="19">(<expr><name><name pos:line="73" pos:column="20">s<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">-&gt;<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="23">commitable<pos:position pos:line="73" pos:column="33"/></name></name></expr>)<pos:position pos:line="73" pos:column="34"/></condition><then pos:line="73" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="17">status_printf_ln<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">s<pos:position pos:line="74" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="37">GIT_COLOR_NORMAL<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="55">_<pos:position pos:line="74" pos:column="56"/></name><argument_list pos:line="74" pos:column="56">(<argument><expr><literal type="string" pos:line="74" pos:column="57">"Untracked files not listed%s"<pos:position pos:line="74" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="88"/></argument_list></call></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name pos:line="75" pos:column="25">s<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">-&gt;<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="28">hints<pos:position pos:line="75" pos:column="33"/></name></name></expr>
			?<pos:position pos:line="76" pos:column="26"/></condition><then pos:line="76" pos:column="26"> <expr><call><name pos:line="76" pos:column="27">_<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">(<argument><expr><literal type="string" pos:line="76" pos:column="29">" (use -u option to show untracked files)"<pos:position pos:line="76" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="72"/></argument_list></call></expr> <pos:position pos:line="76" pos:column="73"/></then><else pos:line="76" pos:column="73">: <expr><literal type="string" pos:line="76" pos:column="75">""<pos:position pos:line="76" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name><name pos:line="78" pos:column="13">s<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">verbose<pos:position pos:line="78" pos:column="23"/></name></name></expr>)<pos:position pos:line="78" pos:column="24"/></condition><then pos:line="78" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">wt_status_print_verbose<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><name pos:line="79" pos:column="41">s<pos:position pos:line="79" pos:column="42"/></name></expr></argument>)<pos:position pos:line="79" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt></block></then></if>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">!<pos:position pos:line="80" pos:column="14"/></operator><name><name pos:line="80" pos:column="14">s<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">-&gt;<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="17">commitable<pos:position pos:line="80" pos:column="27"/></name></name></expr>)<pos:position pos:line="80" pos:column="28"/></condition><then pos:line="80" pos:column="28"> <block pos:line="80" pos:column="29">{
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name><name pos:line="81" pos:column="21">s<pos:position pos:line="81" pos:column="22"/></name><operator pos:line="81" pos:column="22">-&gt;<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="24">amend<pos:position pos:line="81" pos:column="29"/></name></name></expr>)<pos:position pos:line="81" pos:column="30"/></condition><then pos:line="81" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="25">status_printf_ln<pos:position pos:line="82" pos:column="41"/></name><argument_list pos:line="82" pos:column="41">(<argument><expr><name pos:line="82" pos:column="42">s<pos:position pos:line="82" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="45">GIT_COLOR_NORMAL<pos:position pos:line="82" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="63">_<pos:position pos:line="82" pos:column="64"/></name><argument_list pos:line="82" pos:column="64">(<argument><expr><literal type="string" pos:line="82" pos:column="65">"No changes"<pos:position pos:line="82" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="80"/></expr_stmt></block></then>
		<elseif pos:line="83" pos:column="17">else <if pos:line="83" pos:column="22">if <condition pos:line="83" pos:column="25">(<expr><name><name pos:line="83" pos:column="26">s<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">-&gt;<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="29">nowarn<pos:position pos:line="83" pos:column="35"/></name></name></expr>)<pos:position pos:line="83" pos:column="36"/></condition><then pos:line="83" pos:column="36">
			<block type="pseudo"><empty_stmt pos:line="84" pos:column="25">;<pos:position pos:line="84" pos:column="26"/></empty_stmt></block></then></if></elseif> <comment type="block" pos:line="84" pos:column="27">/* nothing */</comment>
		<elseif pos:line="85" pos:column="17">else <if pos:line="85" pos:column="22">if <condition pos:line="85" pos:column="25">(<expr><name><name pos:line="85" pos:column="26">s<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">-&gt;<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="29">workdir_dirty<pos:position pos:line="85" pos:column="42"/></name></name></expr>)<pos:position pos:line="85" pos:column="43"/></condition><then pos:line="85" pos:column="43"> <block pos:line="85" pos:column="44">{
			<if pos:line="86" pos:column="25">if <condition pos:line="86" pos:column="28">(<expr><name><name pos:line="86" pos:column="29">s<pos:position pos:line="86" pos:column="30"/></name><operator pos:line="86" pos:column="30">-&gt;<pos:position pos:line="86" pos:column="35"/></operator><name pos:line="86" pos:column="32">hints<pos:position pos:line="86" pos:column="37"/></name></name></expr>)<pos:position pos:line="86" pos:column="38"/></condition><then pos:line="86" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="33">printf<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><call><name pos:line="87" pos:column="40">_<pos:position pos:line="87" pos:column="41"/></name><argument_list pos:line="87" pos:column="41">(<argument><expr><literal type="string" pos:line="87" pos:column="42">"no changes added to commit "<pos:position pos:line="87" pos:column="71"/></literal>
					 <literal type="string" pos:line="88" pos:column="42">"(use \"git add\" and/or \"git commit -a\")\n"<pos:position pos:line="88" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="91"/></expr_stmt></block></then>
			<else pos:line="89" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="33">printf<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><call><name pos:line="90" pos:column="40">_<pos:position pos:line="90" pos:column="41"/></name><argument_list pos:line="90" pos:column="41">(<argument><expr><literal type="string" pos:line="90" pos:column="42">"no changes added to commit\n"<pos:position pos:line="90" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="75"/></expr_stmt></block></else></if>
		}<pos:position pos:line="91" pos:column="18"/></block></then></if></elseif> <elseif pos:line="91" pos:column="19">else <if pos:line="91" pos:column="24">if <condition pos:line="91" pos:column="27">(<expr><name><name pos:line="91" pos:column="28">s<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">-&gt;<pos:position pos:line="91" pos:column="34"/></operator><name pos:line="91" pos:column="31">untracked<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">.<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="41">nr<pos:position pos:line="91" pos:column="43"/></name></name></expr>)<pos:position pos:line="91" pos:column="44"/></condition><then pos:line="91" pos:column="44"> <block pos:line="91" pos:column="45">{
			<if pos:line="92" pos:column="25">if <condition pos:line="92" pos:column="28">(<expr><name><name pos:line="92" pos:column="29">s<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">-&gt;<pos:position pos:line="92" pos:column="35"/></operator><name pos:line="92" pos:column="32">hints<pos:position pos:line="92" pos:column="37"/></name></name></expr>)<pos:position pos:line="92" pos:column="38"/></condition><then pos:line="92" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="33">printf<pos:position pos:line="93" pos:column="39"/></name><argument_list pos:line="93" pos:column="39">(<argument><expr><call><name pos:line="93" pos:column="40">_<pos:position pos:line="93" pos:column="41"/></name><argument_list pos:line="93" pos:column="41">(<argument><expr><literal type="string" pos:line="93" pos:column="42">"nothing added to commit but untracked files "<pos:position pos:line="93" pos:column="88"/></literal>
					 <literal type="string" pos:line="94" pos:column="42">"present (use \"git add\" to track)\n"<pos:position pos:line="94" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="83"/></expr_stmt></block></then>
			<else pos:line="95" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="33">printf<pos:position pos:line="96" pos:column="39"/></name><argument_list pos:line="96" pos:column="39">(<argument><expr><call><name pos:line="96" pos:column="40">_<pos:position pos:line="96" pos:column="41"/></name><argument_list pos:line="96" pos:column="41">(<argument><expr><literal type="string" pos:line="96" pos:column="42">"nothing added to commit but untracked files present\n"<pos:position pos:line="96" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="100"/></expr_stmt></block></else></if>
		}<pos:position pos:line="97" pos:column="18"/></block></then></if></elseif> <elseif pos:line="97" pos:column="19">else <if pos:line="97" pos:column="24">if <condition pos:line="97" pos:column="27">(<expr><name><name pos:line="97" pos:column="28">s<pos:position pos:line="97" pos:column="29"/></name><operator pos:line="97" pos:column="29">-&gt;<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="31">is_initial<pos:position pos:line="97" pos:column="41"/></name></name></expr>)<pos:position pos:line="97" pos:column="42"/></condition><then pos:line="97" pos:column="42"> <block pos:line="97" pos:column="43">{
			<if pos:line="98" pos:column="25">if <condition pos:line="98" pos:column="28">(<expr><name><name pos:line="98" pos:column="29">s<pos:position pos:line="98" pos:column="30"/></name><operator pos:line="98" pos:column="30">-&gt;<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="32">hints<pos:position pos:line="98" pos:column="37"/></name></name></expr>)<pos:position pos:line="98" pos:column="38"/></condition><then pos:line="98" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="33">printf<pos:position pos:line="99" pos:column="39"/></name><argument_list pos:line="99" pos:column="39">(<argument><expr><call><name pos:line="99" pos:column="40">_<pos:position pos:line="99" pos:column="41"/></name><argument_list pos:line="99" pos:column="41">(<argument><expr><literal type="string" pos:line="99" pos:column="42">"nothing to commit (create/copy files "<pos:position pos:line="99" pos:column="81"/></literal>
					 <literal type="string" pos:line="100" pos:column="42">"and use \"git add\" to track)\n"<pos:position pos:line="100" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="78"/></expr_stmt></block></then>
			<else pos:line="101" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="33">printf<pos:position pos:line="102" pos:column="39"/></name><argument_list pos:line="102" pos:column="39">(<argument><expr><call><name pos:line="102" pos:column="40">_<pos:position pos:line="102" pos:column="41"/></name><argument_list pos:line="102" pos:column="41">(<argument><expr><literal type="string" pos:line="102" pos:column="42">"nothing to commit\n"<pos:position pos:line="102" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt></block></else></if>
		}<pos:position pos:line="103" pos:column="18"/></block></then></if></elseif> <elseif pos:line="103" pos:column="19">else <if pos:line="103" pos:column="24">if <condition pos:line="103" pos:column="27">(<expr><operator pos:line="103" pos:column="28">!<pos:position pos:line="103" pos:column="29"/></operator><name><name pos:line="103" pos:column="29">s<pos:position pos:line="103" pos:column="30"/></name><operator pos:line="103" pos:column="30">-&gt;<pos:position pos:line="103" pos:column="35"/></operator><name pos:line="103" pos:column="32">show_untracked_files<pos:position pos:line="103" pos:column="52"/></name></name></expr>)<pos:position pos:line="103" pos:column="53"/></condition><then pos:line="103" pos:column="53"> <block pos:line="103" pos:column="54">{
			<if pos:line="104" pos:column="25">if <condition pos:line="104" pos:column="28">(<expr><name><name pos:line="104" pos:column="29">s<pos:position pos:line="104" pos:column="30"/></name><operator pos:line="104" pos:column="30">-&gt;<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="32">hints<pos:position pos:line="104" pos:column="37"/></name></name></expr>)<pos:position pos:line="104" pos:column="38"/></condition><then pos:line="104" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="33">printf<pos:position pos:line="105" pos:column="39"/></name><argument_list pos:line="105" pos:column="39">(<argument><expr><call><name pos:line="105" pos:column="40">_<pos:position pos:line="105" pos:column="41"/></name><argument_list pos:line="105" pos:column="41">(<argument><expr><literal type="string" pos:line="105" pos:column="42">"nothing to commit (use -u to show untracked files)\n"<pos:position pos:line="105" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="99"/></expr_stmt></block></then>
			<else pos:line="106" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="33">printf<pos:position pos:line="107" pos:column="39"/></name><argument_list pos:line="107" pos:column="39">(<argument><expr><call><name pos:line="107" pos:column="40">_<pos:position pos:line="107" pos:column="41"/></name><argument_list pos:line="107" pos:column="41">(<argument><expr><literal type="string" pos:line="107" pos:column="42">"nothing to commit\n"<pos:position pos:line="107" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="66"/></expr_stmt></block></else></if>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if></elseif> <else pos:line="108" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="25">printf<pos:position pos:line="109" pos:column="31"/></name><argument_list pos:line="109" pos:column="31">(<argument><expr><call><name pos:line="109" pos:column="32">_<pos:position pos:line="109" pos:column="33"/></name><argument_list pos:line="109" pos:column="33">(<argument><expr><literal type="string" pos:line="109" pos:column="34">"nothing to commit, working directory clean\n"<pos:position pos:line="109" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="109" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="83"/></expr_stmt></block></else></if>
	}<pos:position pos:line="110" pos:column="10"/></block></then></if>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

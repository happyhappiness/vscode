<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6461_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">files_transaction_finish<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">ref_store<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ref_store<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">ref_transaction<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">transaction<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="3" pos:column="37">struct<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">strbuf<pos:position pos:line="3" pos:column="50"/></name></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">err<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">files_ref_store<pos:position pos:line="5" pos:column="31"/></name></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">refs<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">=
		<expr><call><name pos:line="6" pos:column="17">files_downcast<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">ref_store<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="46">"ref_transaction_finish"<pos:position pos:line="6" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="72"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">string_list<pos:position pos:line="9" pos:column="27"/></name></name></type> <name pos:line="9" pos:column="28">refs_to_delete<pos:position pos:line="9" pos:column="42"/></name> <init pos:line="9" pos:column="43">= <expr><name pos:line="9" pos:column="45">STRING_LIST_INIT_NODUP<pos:position pos:line="9" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">string_list_item<pos:position pos:line="10" pos:column="32"/></name></name> <modifier pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></modifier></type><name pos:line="10" pos:column="34">ref_to_delete<pos:position pos:line="10" pos:column="47"/></name></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">sb<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name pos:line="11" pos:column="28">STRBUF_INIT<pos:position pos:line="11" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">assert<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">err<pos:position pos:line="13" pos:column="19"/></name></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">transaction<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">nr<pos:position pos:line="15" pos:column="29"/></name></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30"> <block pos:line="15" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">transaction<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">state<pos:position pos:line="16" pos:column="35"/></name></name> <operator pos:line="16" pos:column="36">=<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">REF_TRANSACTION_CLOSED<pos:position pos:line="16" pos:column="60"/></name></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/* Perform updates first so live commits remain referenced */</comment>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="25">transaction<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">nr<pos:position pos:line="21" pos:column="40"/></name></name></expr>;<pos:position pos:line="21" pos:column="41"/></condition> <incr><expr><name pos:line="21" pos:column="42">i<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">++<pos:position pos:line="21" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="46"/></control> <block pos:line="21" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">ref_update<pos:position pos:line="22" pos:column="34"/></name></name> <modifier pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></modifier></type><name pos:line="22" pos:column="36">update<pos:position pos:line="22" pos:column="42"/></name> <init pos:line="22" pos:column="43">= <expr><name><name pos:line="22" pos:column="45">transaction<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">updates<pos:position pos:line="22" pos:column="65"/></name><index pos:line="22" pos:column="65">[<expr><name pos:line="22" pos:column="66">i<pos:position pos:line="22" pos:column="67"/></name></expr>]<pos:position pos:line="22" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="22" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">ref_lock<pos:position pos:line="23" pos:column="32"/></name></name> <modifier pos:line="23" pos:column="33">*<pos:position pos:line="23" pos:column="34"/></modifier></type><name pos:line="23" pos:column="34">lock<pos:position pos:line="23" pos:column="38"/></name> <init pos:line="23" pos:column="39">= <expr><name><name pos:line="23" pos:column="41">update<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">backend_data<pos:position pos:line="23" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="62"/></decl_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">update<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">flags<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">&amp;<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="37">REF_NEEDS_COMMIT<pos:position pos:line="25" pos:column="53"/></name> <operator pos:line="25" pos:column="54">||<pos:position pos:line="25" pos:column="56"/></operator>
		    <name><name pos:line="26" pos:column="21">update<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">flags<pos:position pos:line="26" pos:column="34"/></name></name> <operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="37">REF_LOG_ONLY<pos:position pos:line="26" pos:column="49"/></name></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50"> <block pos:line="26" pos:column="51">{
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">files_log_ref_write<pos:position pos:line="27" pos:column="48"/></name><argument_list pos:line="27" pos:column="48">(<argument><expr><name pos:line="27" pos:column="49">refs<pos:position pos:line="27" pos:column="53"/></name></expr></argument>,
						<argument><expr><name><name pos:line="28" pos:column="49">lock<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">-&gt;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="55">ref_name<pos:position pos:line="28" pos:column="63"/></name></name></expr></argument>,
						<argument><expr><operator pos:line="29" pos:column="49">&amp;<pos:position pos:line="29" pos:column="54"/></operator><name><name pos:line="29" pos:column="50">lock<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">-&gt;<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="56">old_oid<pos:position pos:line="29" pos:column="63"/></name></name></expr></argument>,
						<argument><expr><operator pos:line="30" pos:column="49">&amp;<pos:position pos:line="30" pos:column="54"/></operator><name><name pos:line="30" pos:column="50">update<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">-&gt;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="58">new_oid<pos:position pos:line="30" pos:column="65"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="31" pos:column="49">update<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">msg<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="62">update<pos:position pos:line="31" pos:column="68"/></name><operator pos:line="31" pos:column="68">-&gt;<pos:position pos:line="31" pos:column="73"/></operator><name pos:line="31" pos:column="70">flags<pos:position pos:line="31" pos:column="75"/></name></name></expr></argument>,
						<argument><expr><name pos:line="32" pos:column="49">err<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54"> <block pos:line="32" pos:column="55">{
				<decl_stmt><decl><type><name pos:line="33" pos:column="33">char<pos:position pos:line="33" pos:column="37"/></name> <modifier pos:line="33" pos:column="38">*<pos:position pos:line="33" pos:column="39"/></modifier></type><name pos:line="33" pos:column="39">old_msg<pos:position pos:line="33" pos:column="46"/></name> <init pos:line="33" pos:column="47">= <expr><call><name pos:line="33" pos:column="49">strbuf_detach<pos:position pos:line="33" pos:column="62"/></name><argument_list pos:line="33" pos:column="62">(<argument><expr><name pos:line="33" pos:column="63">err<pos:position pos:line="33" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="68">NULL<pos:position pos:line="33" pos:column="72"/></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="74"/></decl_stmt>

				<expr_stmt><expr><call><name pos:line="35" pos:column="33">strbuf_addf<pos:position pos:line="35" pos:column="44"/></name><argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">err<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="50">"cannot update the ref '%s': %s"<pos:position pos:line="35" pos:column="82"/></literal></expr></argument>,
					    <argument><expr><name><name pos:line="36" pos:column="45">lock<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">ref_name<pos:position pos:line="36" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">old_msg<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">free<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">old_msg<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">unlock_ref<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">lock<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="39" pos:column="33">update<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">backend_data<pos:position pos:line="39" pos:column="53"/></name></name> <operator pos:line="39" pos:column="54">=<pos:position pos:line="39" pos:column="55"/></operator> <name pos:line="39" pos:column="56">NULL<pos:position pos:line="39" pos:column="60"/></name></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><name pos:line="40" pos:column="33">ret<pos:position pos:line="40" pos:column="36"/></name> <operator pos:line="40" pos:column="37">=<pos:position pos:line="40" pos:column="38"/></operator> <name pos:line="40" pos:column="39">TRANSACTION_GENERIC_ERROR<pos:position pos:line="40" pos:column="64"/></name></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
				<goto pos:line="41" pos:column="33">goto <name pos:line="41" pos:column="38">cleanup<pos:position pos:line="41" pos:column="45"/></name>;<pos:position pos:line="41" pos:column="46"/></goto>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name><name pos:line="44" pos:column="21">update<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">flags<pos:position pos:line="44" pos:column="34"/></name></name> <operator pos:line="44" pos:column="35">&amp;<pos:position pos:line="44" pos:column="40"/></operator> <name pos:line="44" pos:column="37">REF_NEEDS_COMMIT<pos:position pos:line="44" pos:column="53"/></name></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54"> <block pos:line="44" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">clear_loose_ref_cache<pos:position pos:line="45" pos:column="46"/></name><argument_list pos:line="45" pos:column="46">(<argument><expr><name pos:line="45" pos:column="47">refs<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><call><name pos:line="46" pos:column="29">commit_ref<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">lock<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46"> <block pos:line="46" pos:column="47">{
				<expr_stmt><expr><call><name pos:line="47" pos:column="33">strbuf_addf<pos:position pos:line="47" pos:column="44"/></name><argument_list pos:line="47" pos:column="44">(<argument><expr><name pos:line="47" pos:column="45">err<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="50">"couldn't set '%s'"<pos:position pos:line="47" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="71">lock<pos:position pos:line="47" pos:column="75"/></name><operator pos:line="47" pos:column="75">-&gt;<pos:position pos:line="47" pos:column="80"/></operator><name pos:line="47" pos:column="77">ref_name<pos:position pos:line="47" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="87"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="48" pos:column="33">unlock_ref<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">lock<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="49" pos:column="33">update<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">-&gt;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="41">backend_data<pos:position pos:line="49" pos:column="53"/></name></name> <operator pos:line="49" pos:column="54">=<pos:position pos:line="49" pos:column="55"/></operator> <name pos:line="49" pos:column="56">NULL<pos:position pos:line="49" pos:column="60"/></name></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><name pos:line="50" pos:column="33">ret<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">=<pos:position pos:line="50" pos:column="38"/></operator> <name pos:line="50" pos:column="39">TRANSACTION_GENERIC_ERROR<pos:position pos:line="50" pos:column="64"/></name></expr>;<pos:position pos:line="50" pos:column="65"/></expr_stmt>
				<goto pos:line="51" pos:column="33">goto <name pos:line="51" pos:column="38">cleanup<pos:position pos:line="51" pos:column="45"/></name>;<pos:position pos:line="51" pos:column="46"/></goto>
			}<pos:position pos:line="52" pos:column="26"/></block></then></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></for>
	<comment type="block" pos:line="55" pos:column="9">/* Perform deletes now that updates are safely completed */</comment>
	<for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name><name pos:line="56" pos:column="25">transaction<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">nr<pos:position pos:line="56" pos:column="40"/></name></name></expr>;<pos:position pos:line="56" pos:column="41"/></condition> <incr><expr><name pos:line="56" pos:column="42">i<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">++<pos:position pos:line="56" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="46"/></control> <block pos:line="56" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="57" pos:column="17">struct<pos:position pos:line="57" pos:column="23"/></name> <name pos:line="57" pos:column="24">ref_update<pos:position pos:line="57" pos:column="34"/></name></name> <modifier pos:line="57" pos:column="35">*<pos:position pos:line="57" pos:column="36"/></modifier></type><name pos:line="57" pos:column="36">update<pos:position pos:line="57" pos:column="42"/></name> <init pos:line="57" pos:column="43">= <expr><name><name pos:line="57" pos:column="45">transaction<pos:position pos:line="57" pos:column="56"/></name><operator pos:line="57" pos:column="56">-&gt;<pos:position pos:line="57" pos:column="61"/></operator><name pos:line="57" pos:column="58">updates<pos:position pos:line="57" pos:column="65"/></name><index pos:line="57" pos:column="65">[<expr><name pos:line="57" pos:column="66">i<pos:position pos:line="57" pos:column="67"/></name></expr>]<pos:position pos:line="57" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="57" pos:column="69"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="58" pos:column="17">struct<pos:position pos:line="58" pos:column="23"/></name> <name pos:line="58" pos:column="24">ref_lock<pos:position pos:line="58" pos:column="32"/></name></name> <modifier pos:line="58" pos:column="33">*<pos:position pos:line="58" pos:column="34"/></modifier></type><name pos:line="58" pos:column="34">lock<pos:position pos:line="58" pos:column="38"/></name> <init pos:line="58" pos:column="39">= <expr><name><name pos:line="58" pos:column="41">update<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">-&gt;<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="49">backend_data<pos:position pos:line="58" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="58" pos:column="62"/></decl_stmt>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name><name pos:line="60" pos:column="21">update<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">flags<pos:position pos:line="60" pos:column="34"/></name></name> <operator pos:line="60" pos:column="35">&amp;<pos:position pos:line="60" pos:column="40"/></operator> <name pos:line="60" pos:column="37">REF_DELETING<pos:position pos:line="60" pos:column="49"/></name> <operator pos:line="60" pos:column="50">&amp;&amp;<pos:position pos:line="60" pos:column="60"/></operator>
		    <operator pos:line="61" pos:column="21">!<pos:position pos:line="61" pos:column="22"/></operator><operator pos:line="61" pos:column="22">(<pos:position pos:line="61" pos:column="23"/></operator><name><name pos:line="61" pos:column="23">update<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">flags<pos:position pos:line="61" pos:column="36"/></name></name> <operator pos:line="61" pos:column="37">&amp;<pos:position pos:line="61" pos:column="42"/></operator> <name pos:line="61" pos:column="39">REF_LOG_ONLY<pos:position pos:line="61" pos:column="51"/></name><operator pos:line="61" pos:column="51">)<pos:position pos:line="61" pos:column="52"/></operator></expr>)<pos:position pos:line="61" pos:column="53"/></condition><then pos:line="61" pos:column="53"> <block pos:line="61" pos:column="54">{
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><operator pos:line="62" pos:column="29">!<pos:position pos:line="62" pos:column="30"/></operator><operator pos:line="62" pos:column="30">(<pos:position pos:line="62" pos:column="31"/></operator><name><name pos:line="62" pos:column="31">update<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">-&gt;<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="39">type<pos:position pos:line="62" pos:column="43"/></name></name> <operator pos:line="62" pos:column="44">&amp;<pos:position pos:line="62" pos:column="49"/></operator> <name pos:line="62" pos:column="46">REF_ISPACKED<pos:position pos:line="62" pos:column="58"/></name><operator pos:line="62" pos:column="58">)<pos:position pos:line="62" pos:column="59"/></operator> <operator pos:line="62" pos:column="60">||<pos:position pos:line="62" pos:column="62"/></operator>
			    <name><name pos:line="63" pos:column="29">update<pos:position pos:line="63" pos:column="35"/></name><operator pos:line="63" pos:column="35">-&gt;<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="37">type<pos:position pos:line="63" pos:column="41"/></name></name> <operator pos:line="63" pos:column="42">&amp;<pos:position pos:line="63" pos:column="47"/></operator> <name pos:line="63" pos:column="44">REF_ISSYMREF<pos:position pos:line="63" pos:column="56"/></name></expr>)<pos:position pos:line="63" pos:column="57"/></condition><then pos:line="63" pos:column="57"> <block pos:line="63" pos:column="58">{
				<comment type="block" pos:line="64" pos:column="33">/* It is a loose reference. */</comment>
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">strbuf_reset<pos:position pos:line="65" pos:column="45"/></name><argument_list pos:line="65" pos:column="45">(<argument><expr><operator pos:line="65" pos:column="46">&amp;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="47">sb<pos:position pos:line="65" pos:column="49"/></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="66" pos:column="33">files_ref_path<pos:position pos:line="66" pos:column="47"/></name><argument_list pos:line="66" pos:column="47">(<argument><expr><name pos:line="66" pos:column="48">refs<pos:position pos:line="66" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="54">&amp;<pos:position pos:line="66" pos:column="59"/></operator><name pos:line="66" pos:column="55">sb<pos:position pos:line="66" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="59">lock<pos:position pos:line="66" pos:column="63"/></name><operator pos:line="66" pos:column="63">-&gt;<pos:position pos:line="66" pos:column="68"/></operator><name pos:line="66" pos:column="65">ref_name<pos:position pos:line="66" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt>
				<if pos:line="67" pos:column="33">if <condition pos:line="67" pos:column="36">(<expr><call><name pos:line="67" pos:column="37">unlink_or_msg<pos:position pos:line="67" pos:column="50"/></name><argument_list pos:line="67" pos:column="50">(<argument><expr><name><name pos:line="67" pos:column="51">sb<pos:position pos:line="67" pos:column="53"/></name><operator pos:line="67" pos:column="53">.<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="54">buf<pos:position pos:line="67" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="59">err<pos:position pos:line="67" pos:column="62"/></name></expr></argument>)<pos:position pos:line="67" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="64"/></condition><then pos:line="67" pos:column="64"> <block pos:line="67" pos:column="65">{
					<expr_stmt><expr><name pos:line="68" pos:column="41">ret<pos:position pos:line="68" pos:column="44"/></name> <operator pos:line="68" pos:column="45">=<pos:position pos:line="68" pos:column="46"/></operator> <name pos:line="68" pos:column="47">TRANSACTION_GENERIC_ERROR<pos:position pos:line="68" pos:column="72"/></name></expr>;<pos:position pos:line="68" pos:column="73"/></expr_stmt>
					<goto pos:line="69" pos:column="41">goto <name pos:line="69" pos:column="46">cleanup<pos:position pos:line="69" pos:column="53"/></name>;<pos:position pos:line="69" pos:column="54"/></goto>
				}<pos:position pos:line="70" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="71" pos:column="33">update<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">-&gt;<pos:position pos:line="71" pos:column="44"/></operator><name pos:line="71" pos:column="41">flags<pos:position pos:line="71" pos:column="46"/></name></name> <operator pos:line="71" pos:column="47">|=<pos:position pos:line="71" pos:column="49"/></operator> <name pos:line="71" pos:column="50">REF_DELETED_LOOSE<pos:position pos:line="71" pos:column="67"/></name></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="72" pos:column="26"/></block></then></if>

			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><operator pos:line="74" pos:column="29">!<pos:position pos:line="74" pos:column="30"/></operator><operator pos:line="74" pos:column="30">(<pos:position pos:line="74" pos:column="31"/></operator><name><name pos:line="74" pos:column="31">update<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">-&gt;<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="39">flags<pos:position pos:line="74" pos:column="44"/></name></name> <operator pos:line="74" pos:column="45">&amp;<pos:position pos:line="74" pos:column="50"/></operator> <name pos:line="74" pos:column="47">REF_ISPRUNING<pos:position pos:line="74" pos:column="60"/></name><operator pos:line="74" pos:column="60">)<pos:position pos:line="74" pos:column="61"/></operator></expr>)<pos:position pos:line="74" pos:column="62"/></condition><then pos:line="74" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="33">string_list_append<pos:position pos:line="75" pos:column="51"/></name><argument_list pos:line="75" pos:column="51">(<argument><expr><operator pos:line="75" pos:column="52">&amp;<pos:position pos:line="75" pos:column="57"/></operator><name pos:line="75" pos:column="53">refs_to_delete<pos:position pos:line="75" pos:column="67"/></name></expr></argument>,
						   <argument><expr><name><name pos:line="76" pos:column="52">lock<pos:position pos:line="76" pos:column="56"/></name><operator pos:line="76" pos:column="56">-&gt;<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="58">ref_name<pos:position pos:line="76" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="68"/></expr_stmt></block></then></if>
		}<pos:position pos:line="77" pos:column="18"/></block></then></if>
	}<pos:position pos:line="78" pos:column="10"/></block></for>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><call><name pos:line="80" pos:column="13">repack_without_refs<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">refs<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="39">&amp;<pos:position pos:line="80" pos:column="44"/></operator><name pos:line="80" pos:column="40">refs_to_delete<pos:position pos:line="80" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="56">err<pos:position pos:line="80" pos:column="59"/></name></expr></argument>)<pos:position pos:line="80" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="61"/></condition><then pos:line="80" pos:column="61"> <block pos:line="80" pos:column="62">{
		<expr_stmt><expr><name pos:line="81" pos:column="17">ret<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">=<pos:position pos:line="81" pos:column="22"/></operator> <name pos:line="81" pos:column="23">TRANSACTION_GENERIC_ERROR<pos:position pos:line="81" pos:column="48"/></name></expr>;<pos:position pos:line="81" pos:column="49"/></expr_stmt>
		<goto pos:line="82" pos:column="17">goto <name pos:line="82" pos:column="22">cleanup<pos:position pos:line="82" pos:column="29"/></name>;<pos:position pos:line="82" pos:column="30"/></goto>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="85" pos:column="9">/* Delete the reflogs of any references that were deleted: */</comment>
	<macro><name pos:line="86" pos:column="9">for_each_string_list_item<pos:position pos:line="86" pos:column="34"/></name><argument_list pos:line="86" pos:column="34">(<argument pos:line="86" pos:column="35">ref_to_delete<pos:position pos:line="86" pos:column="48"/></argument>, <argument pos:line="86" pos:column="50">&amp;refs_to_delete<pos:position pos:line="86" pos:column="65"/></argument>)<pos:position pos:line="86" pos:column="66"/></argument_list></macro> <block pos:line="86" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">strbuf_reset<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><operator pos:line="87" pos:column="30">&amp;<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="31">sb<pos:position pos:line="87" pos:column="33"/></name></expr></argument>)<pos:position pos:line="87" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">files_reflog_path<pos:position pos:line="88" pos:column="34"/></name><argument_list pos:line="88" pos:column="34">(<argument><expr><name pos:line="88" pos:column="35">refs<pos:position pos:line="88" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="41">&amp;<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="42">sb<pos:position pos:line="88" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="46">ref_to_delete<pos:position pos:line="88" pos:column="59"/></name><operator pos:line="88" pos:column="59">-&gt;<pos:position pos:line="88" pos:column="64"/></operator><name pos:line="88" pos:column="61">string<pos:position pos:line="88" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt>
		<if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><operator pos:line="89" pos:column="21">!<pos:position pos:line="89" pos:column="22"/></operator><call><name pos:line="89" pos:column="22">unlink_or_warn<pos:position pos:line="89" pos:column="36"/></name><argument_list pos:line="89" pos:column="36">(<argument><expr><name><name pos:line="89" pos:column="37">sb<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">.<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="40">buf<pos:position pos:line="89" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="45"/></condition><then pos:line="89" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="25">try_remove_empty_parents<pos:position pos:line="90" pos:column="49"/></name><argument_list pos:line="90" pos:column="49">(<argument><expr><name pos:line="90" pos:column="50">refs<pos:position pos:line="90" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="56">ref_to_delete<pos:position pos:line="90" pos:column="69"/></name><operator pos:line="90" pos:column="69">-&gt;<pos:position pos:line="90" pos:column="74"/></operator><name pos:line="90" pos:column="71">string<pos:position pos:line="90" pos:column="77"/></name></name></expr></argument>,
						 <argument><expr><name pos:line="91" pos:column="50">REMOVE_EMPTY_PARENTS_REFLOG<pos:position pos:line="91" pos:column="77"/></name></expr></argument>)<pos:position pos:line="91" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="79"/></expr_stmt></block></then></if>
	}<pos:position pos:line="92" pos:column="10"/></block>

	<expr_stmt><expr><call><name pos:line="94" pos:column="9">clear_loose_ref_cache<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">refs<pos:position pos:line="94" pos:column="35"/></name></expr></argument>)<pos:position pos:line="94" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="37"/></expr_stmt>

<label><name pos:line="96" pos:column="1">cleanup<pos:position pos:line="96" pos:column="8"/></name>:<pos:position pos:line="96" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">files_transaction_cleanup<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><name pos:line="97" pos:column="35">transaction<pos:position pos:line="97" pos:column="46"/></name></expr></argument>)<pos:position pos:line="97" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="48"/></expr_stmt>

	<for pos:line="99" pos:column="9">for <control pos:line="99" pos:column="13">(<init><expr><name pos:line="99" pos:column="14">i<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <literal type="number" pos:line="99" pos:column="18">0<pos:position pos:line="99" pos:column="19"/></literal></expr>;<pos:position pos:line="99" pos:column="20"/></init> <condition><expr><name pos:line="99" pos:column="21">i<pos:position pos:line="99" pos:column="22"/></name> <operator pos:line="99" pos:column="23">&lt;<pos:position pos:line="99" pos:column="27"/></operator> <name><name pos:line="99" pos:column="25">transaction<pos:position pos:line="99" pos:column="36"/></name><operator pos:line="99" pos:column="36">-&gt;<pos:position pos:line="99" pos:column="41"/></operator><name pos:line="99" pos:column="38">nr<pos:position pos:line="99" pos:column="40"/></name></name></expr>;<pos:position pos:line="99" pos:column="41"/></condition> <incr><expr><name pos:line="99" pos:column="42">i<pos:position pos:line="99" pos:column="43"/></name><operator pos:line="99" pos:column="43">++<pos:position pos:line="99" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="99" pos:column="46"/></control> <block pos:line="99" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="100" pos:column="17">struct<pos:position pos:line="100" pos:column="23"/></name> <name pos:line="100" pos:column="24">ref_update<pos:position pos:line="100" pos:column="34"/></name></name> <modifier pos:line="100" pos:column="35">*<pos:position pos:line="100" pos:column="36"/></modifier></type><name pos:line="100" pos:column="36">update<pos:position pos:line="100" pos:column="42"/></name> <init pos:line="100" pos:column="43">= <expr><name><name pos:line="100" pos:column="45">transaction<pos:position pos:line="100" pos:column="56"/></name><operator pos:line="100" pos:column="56">-&gt;<pos:position pos:line="100" pos:column="61"/></operator><name pos:line="100" pos:column="58">updates<pos:position pos:line="100" pos:column="65"/></name><index pos:line="100" pos:column="65">[<expr><name pos:line="100" pos:column="66">i<pos:position pos:line="100" pos:column="67"/></name></expr>]<pos:position pos:line="100" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="100" pos:column="69"/></decl_stmt>

		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name><name pos:line="102" pos:column="21">update<pos:position pos:line="102" pos:column="27"/></name><operator pos:line="102" pos:column="27">-&gt;<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="29">flags<pos:position pos:line="102" pos:column="34"/></name></name> <operator pos:line="102" pos:column="35">&amp;<pos:position pos:line="102" pos:column="40"/></operator> <name pos:line="102" pos:column="37">REF_DELETED_LOOSE<pos:position pos:line="102" pos:column="54"/></name></expr>)<pos:position pos:line="102" pos:column="55"/></condition><then pos:line="102" pos:column="55"> <block pos:line="102" pos:column="56">{
			<comment type="block" pos:line="103" pos:column="25">/*
			 * The loose reference was deleted. Delete any
			 * empty parent directories. (Note that this
			 * can only work because we have already
			 * removed the lockfile.)
			 */</comment>
			<expr_stmt><expr><call><name pos:line="109" pos:column="25">try_remove_empty_parents<pos:position pos:line="109" pos:column="49"/></name><argument_list pos:line="109" pos:column="49">(<argument><expr><name pos:line="109" pos:column="50">refs<pos:position pos:line="109" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="56">update<pos:position pos:line="109" pos:column="62"/></name><operator pos:line="109" pos:column="62">-&gt;<pos:position pos:line="109" pos:column="67"/></operator><name pos:line="109" pos:column="64">refname<pos:position pos:line="109" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><name pos:line="110" pos:column="50">REMOVE_EMPTY_PARENTS_REF<pos:position pos:line="110" pos:column="74"/></name></expr></argument>)<pos:position pos:line="110" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if>
	}<pos:position pos:line="112" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="114" pos:column="9">strbuf_release<pos:position pos:line="114" pos:column="23"/></name><argument_list pos:line="114" pos:column="23">(<argument><expr><operator pos:line="114" pos:column="24">&amp;<pos:position pos:line="114" pos:column="29"/></operator><name pos:line="114" pos:column="25">sb<pos:position pos:line="114" pos:column="27"/></name></expr></argument>)<pos:position pos:line="114" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="115" pos:column="9">string_list_clear<pos:position pos:line="115" pos:column="26"/></name><argument_list pos:line="115" pos:column="26">(<argument><expr><operator pos:line="115" pos:column="27">&amp;<pos:position pos:line="115" pos:column="32"/></operator><name pos:line="115" pos:column="28">refs_to_delete<pos:position pos:line="115" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="44">0<pos:position pos:line="115" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="47"/></expr_stmt>
	<return pos:line="116" pos:column="9">return <expr><name pos:line="116" pos:column="16">ret<pos:position pos:line="116" pos:column="19"/></name></expr>;<pos:position pos:line="116" pos:column="20"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

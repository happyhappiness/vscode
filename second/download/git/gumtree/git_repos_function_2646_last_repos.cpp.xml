<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2646_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">print_one_push_status<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">ref<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ref<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">dest<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">count<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">porcelain<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">summary_width<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">count<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">url<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">transport_anonymize_url<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name pos:line="5" pos:column="53">dest<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">fprintf<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><ternary><condition><expr><name pos:line="6" pos:column="25">porcelain<pos:position pos:line="6" pos:column="34"/></name></expr> ?<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <expr><name pos:line="6" pos:column="37">stdout<pos:position pos:line="6" pos:column="43"/></name></expr> <pos:position pos:line="6" pos:column="44"/></then><else pos:line="6" pos:column="44">: <expr><name pos:line="6" pos:column="46">stderr<pos:position pos:line="6" pos:column="52"/></name></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="54">"To %s\n"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="65">url<pos:position pos:line="6" pos:column="68"/></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">free<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">url<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<switch pos:line="10" pos:column="9">switch<condition pos:line="10" pos:column="15">(<expr><name><name pos:line="10" pos:column="16">ref<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">status<pos:position pos:line="10" pos:column="27"/></name></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition> <block pos:line="10" pos:column="29">{
	<case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">REF_STATUS_NONE<pos:position pos:line="11" pos:column="29"/></name></expr>:<pos:position pos:line="11" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">print_ref_status<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><literal type="char" pos:line="12" pos:column="34">'X'<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">"[no match]"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">ref<pos:position pos:line="12" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="58">NULL<pos:position pos:line="12" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="64">NULL<pos:position pos:line="12" pos:column="68"/></name></expr></argument>,
				 <argument><expr><name pos:line="13" pos:column="34">porcelain<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">summary_width<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
		<break pos:line="14" pos:column="17">break;<pos:position pos:line="14" pos:column="23"/></break>
	<case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">REF_STATUS_REJECT_NODELETE<pos:position pos:line="15" pos:column="40"/></name></expr>:<pos:position pos:line="15" pos:column="41"/></case>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">print_ref_status<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><literal type="char" pos:line="16" pos:column="34">'!'<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="39">"[rejected]"<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">ref<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">NULL<pos:position pos:line="16" pos:column="62"/></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="17" pos:column="34">"remote does not support deleting refs"<pos:position pos:line="17" pos:column="73"/></literal></expr></argument>,
				 <argument><expr><name pos:line="18" pos:column="34">porcelain<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">summary_width<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
		<break pos:line="19" pos:column="17">break;<pos:position pos:line="19" pos:column="23"/></break>
	<case pos:line="20" pos:column="9">case <expr><name pos:line="20" pos:column="14">REF_STATUS_UPTODATE<pos:position pos:line="20" pos:column="33"/></name></expr>:<pos:position pos:line="20" pos:column="34"/></case>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">print_ref_status<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><literal type="char" pos:line="21" pos:column="34">'='<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="39">"[up to date]"<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="55">ref<pos:position pos:line="21" pos:column="58"/></name></expr></argument>,
				 <argument><expr><name><name pos:line="22" pos:column="34">ref<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">peer_ref<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">NULL<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="55">porcelain<pos:position pos:line="22" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">summary_width<pos:position pos:line="22" pos:column="79"/></name></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="81"/></expr_stmt>
		<break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
	<case pos:line="24" pos:column="9">case <expr><name pos:line="24" pos:column="14">REF_STATUS_REJECT_NONFASTFORWARD<pos:position pos:line="24" pos:column="46"/></name></expr>:<pos:position pos:line="24" pos:column="47"/></case>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">print_ref_status<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><literal type="char" pos:line="25" pos:column="34">'!'<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"[rejected]"<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">ref<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="58">ref<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="63">peer_ref<pos:position pos:line="25" pos:column="71"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="26" pos:column="34">"non-fast-forward"<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">porcelain<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="65">summary_width<pos:position pos:line="26" pos:column="78"/></name></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="80"/></expr_stmt>
		<break pos:line="27" pos:column="17">break;<pos:position pos:line="27" pos:column="23"/></break>
	<case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">REF_STATUS_REJECT_ALREADY_EXISTS<pos:position pos:line="28" pos:column="46"/></name></expr>:<pos:position pos:line="28" pos:column="47"/></case>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">print_ref_status<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><literal type="char" pos:line="29" pos:column="34">'!'<pos:position pos:line="29" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="39">"[rejected]"<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">ref<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="58">ref<pos:position pos:line="29" pos:column="61"/></name><operator pos:line="29" pos:column="61">-&gt;<pos:position pos:line="29" pos:column="66"/></operator><name pos:line="29" pos:column="63">peer_ref<pos:position pos:line="29" pos:column="71"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="30" pos:column="34">"already exists"<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">porcelain<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="63">summary_width<pos:position pos:line="30" pos:column="76"/></name></expr></argument>)<pos:position pos:line="30" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="78"/></expr_stmt>
		<break pos:line="31" pos:column="17">break;<pos:position pos:line="31" pos:column="23"/></break>
	<case pos:line="32" pos:column="9">case <expr><name pos:line="32" pos:column="14">REF_STATUS_REJECT_FETCH_FIRST<pos:position pos:line="32" pos:column="43"/></name></expr>:<pos:position pos:line="32" pos:column="44"/></case>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">print_ref_status<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><literal type="char" pos:line="33" pos:column="34">'!'<pos:position pos:line="33" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="39">"[rejected]"<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">ref<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="58">ref<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">-&gt;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="63">peer_ref<pos:position pos:line="33" pos:column="71"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="34" pos:column="34">"fetch first"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">porcelain<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="60">summary_width<pos:position pos:line="34" pos:column="73"/></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt>
		<break pos:line="35" pos:column="17">break;<pos:position pos:line="35" pos:column="23"/></break>
	<case pos:line="36" pos:column="9">case <expr><name pos:line="36" pos:column="14">REF_STATUS_REJECT_NEEDS_FORCE<pos:position pos:line="36" pos:column="43"/></name></expr>:<pos:position pos:line="36" pos:column="44"/></case>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">print_ref_status<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><literal type="char" pos:line="37" pos:column="34">'!'<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="39">"[rejected]"<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">ref<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="58">ref<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">peer_ref<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="38" pos:column="34">"needs force"<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">porcelain<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">summary_width<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="75"/></expr_stmt>
		<break pos:line="39" pos:column="17">break;<pos:position pos:line="39" pos:column="23"/></break>
	<case pos:line="40" pos:column="9">case <expr><name pos:line="40" pos:column="14">REF_STATUS_REJECT_STALE<pos:position pos:line="40" pos:column="37"/></name></expr>:<pos:position pos:line="40" pos:column="38"/></case>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">print_ref_status<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><literal type="char" pos:line="41" pos:column="34">'!'<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="39">"[rejected]"<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">ref<pos:position pos:line="41" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="58">ref<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">-&gt;<pos:position pos:line="41" pos:column="66"/></operator><name pos:line="41" pos:column="63">peer_ref<pos:position pos:line="41" pos:column="71"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="42" pos:column="34">"stale info"<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">porcelain<pos:position pos:line="42" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="59">summary_width<pos:position pos:line="42" pos:column="72"/></name></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
		<break pos:line="43" pos:column="17">break;<pos:position pos:line="43" pos:column="23"/></break>
	<case pos:line="44" pos:column="9">case <expr><name pos:line="44" pos:column="14">REF_STATUS_REJECT_SHALLOW<pos:position pos:line="44" pos:column="39"/></name></expr>:<pos:position pos:line="44" pos:column="40"/></case>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">print_ref_status<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><literal type="char" pos:line="45" pos:column="34">'!'<pos:position pos:line="45" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="39">"[rejected]"<pos:position pos:line="45" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">ref<pos:position pos:line="45" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="58">ref<pos:position pos:line="45" pos:column="61"/></name><operator pos:line="45" pos:column="61">-&gt;<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="63">peer_ref<pos:position pos:line="45" pos:column="71"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="46" pos:column="34">"new shallow roots not allowed"<pos:position pos:line="46" pos:column="65"/></literal></expr></argument>,
				 <argument><expr><name pos:line="47" pos:column="34">porcelain<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="45">summary_width<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
		<break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>
	<case pos:line="49" pos:column="9">case <expr><name pos:line="49" pos:column="14">REF_STATUS_REMOTE_REJECT<pos:position pos:line="49" pos:column="38"/></name></expr>:<pos:position pos:line="49" pos:column="39"/></case>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">print_ref_status<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><literal type="char" pos:line="50" pos:column="34">'!'<pos:position pos:line="50" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="39">"[remote rejected]"<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="60">ref<pos:position pos:line="50" pos:column="63"/></name></expr></argument>,
				 <argument><expr><ternary><condition><expr><name><name pos:line="51" pos:column="34">ref<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">-&gt;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="39">deletion<pos:position pos:line="51" pos:column="47"/></name></name></expr> ?<pos:position pos:line="51" pos:column="49"/></condition><then pos:line="51" pos:column="49"> <expr><name pos:line="51" pos:column="50">NULL<pos:position pos:line="51" pos:column="54"/></name></expr> <pos:position pos:line="51" pos:column="55"/></then><else pos:line="51" pos:column="55">: <expr><name><name pos:line="51" pos:column="57">ref<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">-&gt;<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="62">peer_ref<pos:position pos:line="51" pos:column="70"/></name></name></expr></else></ternary></expr></argument>,
				 <argument><expr><name><name pos:line="52" pos:column="34">ref<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">-&gt;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="39">remote_status<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">porcelain<pos:position pos:line="52" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="65">summary_width<pos:position pos:line="52" pos:column="78"/></name></expr></argument>)<pos:position pos:line="52" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="80"/></expr_stmt>
		<break pos:line="53" pos:column="17">break;<pos:position pos:line="53" pos:column="23"/></break>
	<case pos:line="54" pos:column="9">case <expr><name pos:line="54" pos:column="14">REF_STATUS_EXPECTING_REPORT<pos:position pos:line="54" pos:column="41"/></name></expr>:<pos:position pos:line="54" pos:column="42"/></case>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">print_ref_status<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><literal type="char" pos:line="55" pos:column="34">'!'<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="39">"[remote failure]"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="59">ref<pos:position pos:line="55" pos:column="62"/></name></expr></argument>,
				 <argument><expr><ternary><condition><expr><name><name pos:line="56" pos:column="34">ref<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">-&gt;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="39">deletion<pos:position pos:line="56" pos:column="47"/></name></name></expr> ?<pos:position pos:line="56" pos:column="49"/></condition><then pos:line="56" pos:column="49"> <expr><name pos:line="56" pos:column="50">NULL<pos:position pos:line="56" pos:column="54"/></name></expr> <pos:position pos:line="56" pos:column="55"/></then><else pos:line="56" pos:column="55">: <expr><name><name pos:line="56" pos:column="57">ref<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">-&gt;<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="62">peer_ref<pos:position pos:line="56" pos:column="70"/></name></name></expr></else></ternary></expr></argument>,
				 <argument><expr><literal type="string" pos:line="57" pos:column="34">"remote failed to report status"<pos:position pos:line="57" pos:column="66"/></literal></expr></argument>,
				 <argument><expr><name pos:line="58" pos:column="34">porcelain<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">summary_width<pos:position pos:line="58" pos:column="58"/></name></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt>
		<break pos:line="59" pos:column="17">break;<pos:position pos:line="59" pos:column="23"/></break>
	<case pos:line="60" pos:column="9">case <expr><name pos:line="60" pos:column="14">REF_STATUS_ATOMIC_PUSH_FAILED<pos:position pos:line="60" pos:column="43"/></name></expr>:<pos:position pos:line="60" pos:column="44"/></case>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">print_ref_status<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><literal type="char" pos:line="61" pos:column="34">'!'<pos:position pos:line="61" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="39">"[rejected]"<pos:position pos:line="61" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="53">ref<pos:position pos:line="61" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="58">ref<pos:position pos:line="61" pos:column="61"/></name><operator pos:line="61" pos:column="61">-&gt;<pos:position pos:line="61" pos:column="66"/></operator><name pos:line="61" pos:column="63">peer_ref<pos:position pos:line="61" pos:column="71"/></name></name></expr></argument>,
				 <argument><expr><literal type="string" pos:line="62" pos:column="34">"atomic push failed"<pos:position pos:line="62" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="56">porcelain<pos:position pos:line="62" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="67">summary_width<pos:position pos:line="62" pos:column="80"/></name></expr></argument>)<pos:position pos:line="62" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="82"/></expr_stmt>
		<break pos:line="63" pos:column="17">break;<pos:position pos:line="63" pos:column="23"/></break>
	<case pos:line="64" pos:column="9">case <expr><name pos:line="64" pos:column="14">REF_STATUS_OK<pos:position pos:line="64" pos:column="27"/></name></expr>:<pos:position pos:line="64" pos:column="28"/></case>
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">print_ok_ref_status<pos:position pos:line="65" pos:column="36"/></name><argument_list pos:line="65" pos:column="36">(<argument><expr><name pos:line="65" pos:column="37">ref<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">porcelain<pos:position pos:line="65" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="53">summary_width<pos:position pos:line="65" pos:column="66"/></name></expr></argument>)<pos:position pos:line="65" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="68"/></expr_stmt>
		<break pos:line="66" pos:column="17">break;<pos:position pos:line="66" pos:column="23"/></break>
	}<pos:position pos:line="67" pos:column="10"/></block></switch>

	<return pos:line="69" pos:column="9">return <expr><literal type="number" pos:line="69" pos:column="16">1<pos:position pos:line="69" pos:column="17"/></literal></expr>;<pos:position pos:line="69" pos:column="18"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

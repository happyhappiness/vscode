<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3341_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">string_list<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">get_parameters<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">void<pos:position pos:line="1" pos:column="47"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">query_params<pos:position pos:line="3" pos:column="26"/></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27"> <block pos:line="3" pos:column="28">{
		<decl_stmt><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">query<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">getenv<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><literal type="string" pos:line="4" pos:column="44">"QUERY_STRING"<pos:position pos:line="4" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

		<expr_stmt><expr><name pos:line="6" pos:column="17">query_params<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <call><name pos:line="6" pos:column="32">xcalloc<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><literal type="number" pos:line="6" pos:column="40">1<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="43">sizeof<argument_list pos:line="6" pos:column="49">(<argument><expr><operator pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">query_params<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="66"/></expr_stmt>
		<while pos:line="7" pos:column="17">while <condition pos:line="7" pos:column="23">(<expr><name pos:line="7" pos:column="24">query<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">&amp;&amp;<pos:position pos:line="7" pos:column="40"/></operator> <operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">query<pos:position pos:line="7" pos:column="39"/></name></expr>)<pos:position pos:line="7" pos:column="40"/></condition> <block pos:line="7" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="8" pos:column="25">char<pos:position pos:line="8" pos:column="29"/></name> <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">name<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><call><name pos:line="8" pos:column="38">url_decode_parameter_name<pos:position pos:line="8" pos:column="63"/></name><argument_list pos:line="8" pos:column="63">(<argument><expr><operator pos:line="8" pos:column="64">&amp;<pos:position pos:line="8" pos:column="69"/></operator><name pos:line="8" pos:column="65">query<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="72"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="9" pos:column="25">char<pos:position pos:line="9" pos:column="29"/></name> <modifier pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></modifier></type><name pos:line="9" pos:column="31">value<pos:position pos:line="9" pos:column="36"/></name> <init pos:line="9" pos:column="37">= <expr><call><name pos:line="9" pos:column="39">url_decode_parameter_value<pos:position pos:line="9" pos:column="65"/></name><argument_list pos:line="9" pos:column="65">(<argument><expr><operator pos:line="9" pos:column="66">&amp;<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="67">query<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="74"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="10" pos:column="25">struct<pos:position pos:line="10" pos:column="31"/></name> <name pos:line="10" pos:column="32">string_list_item<pos:position pos:line="10" pos:column="48"/></name></name> <modifier pos:line="10" pos:column="49">*<pos:position pos:line="10" pos:column="50"/></modifier></type><name pos:line="10" pos:column="50">i<pos:position pos:line="10" pos:column="51"/></name></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>

			<expr_stmt><expr><name pos:line="12" pos:column="25">i<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="29">string_list_lookup<pos:position pos:line="12" pos:column="47"/></name><argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">query_params<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">name<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">i<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
				<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <call><name pos:line="14" pos:column="37">string_list_insert<pos:position pos:line="14" pos:column="55"/></name><argument_list pos:line="14" pos:column="55">(<argument><expr><name pos:line="14" pos:column="56">query_params<pos:position pos:line="14" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="70">name<pos:position pos:line="14" pos:column="74"/></name></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt></block></then>
			<else pos:line="15" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="33">free<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name><name pos:line="16" pos:column="38">i<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">util<pos:position pos:line="16" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name><name pos:line="17" pos:column="25">i<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">util<pos:position pos:line="17" pos:column="32"/></name></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">value<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></while>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">query_params<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

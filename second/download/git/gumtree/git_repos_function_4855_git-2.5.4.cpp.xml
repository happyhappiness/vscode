<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4855_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">command<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">commands<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">unpack_status<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">command<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">cmd<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">packet_buf_write<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><operator pos:line="6" pos:column="26">&amp;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="27">buf<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"unpack %s\n"<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>,
			 <argument><expr><ternary><condition><expr><name pos:line="7" pos:column="26">unpack_status<pos:position pos:line="7" pos:column="39"/></name></expr> ?<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41"> <expr><name pos:line="7" pos:column="42">unpack_status<pos:position pos:line="7" pos:column="55"/></name></expr> <pos:position pos:line="7" pos:column="56"/></then><else pos:line="7" pos:column="56">: <expr><literal type="string" pos:line="7" pos:column="58">"ok"<pos:position pos:line="7" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">cmd<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">commands<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></init> <condition><expr><name pos:line="8" pos:column="30">cmd<pos:position pos:line="8" pos:column="33"/></name></expr>;<pos:position pos:line="8" pos:column="34"/></condition> <incr><expr><name pos:line="8" pos:column="35">cmd<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">=<pos:position pos:line="8" pos:column="40"/></operator> <name><name pos:line="8" pos:column="41">cmd<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">next<pos:position pos:line="8" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="51"/></control> <block pos:line="8" pos:column="52">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><name><name pos:line="9" pos:column="22">cmd<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">error_string<pos:position pos:line="9" pos:column="39"/></name></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">packet_buf_write<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="43">buf<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="48">"ok %s\n"<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>,
					 <argument><expr><name><name pos:line="11" pos:column="42">cmd<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">-&gt;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="47">ref_name<pos:position pos:line="11" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt></block></then>
		<else pos:line="12" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">packet_buf_write<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><operator pos:line="13" pos:column="42">&amp;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="43">buf<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="48">"ng %s %s\n"<pos:position pos:line="13" pos:column="60"/></literal></expr></argument>,
					 <argument><expr><name><name pos:line="14" pos:column="42">cmd<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">ref_name<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="57">cmd<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">-&gt;<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="62">error_string<pos:position pos:line="14" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt></block></else></if>
	}<pos:position pos:line="15" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">packet_buf_flush<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="27">buf<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">use_sideband<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">send_sideband<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="number" pos:line="19" pos:column="31">1<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="37">buf<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">buf<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">buf<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">len<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">use_sideband<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">write_or_die<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><literal type="number" pos:line="21" pos:column="30">1<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="33">buf<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">.<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">buf<pos:position pos:line="21" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="42">buf<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">len<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">strbuf_release<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">&amp;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="25">buf<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

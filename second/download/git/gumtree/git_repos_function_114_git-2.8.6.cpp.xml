<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_114_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">format_commit_item<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">strbuf<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sb<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="53">/* in UTF-8 */</comment>
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">placeholder<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="3" pos:column="34">void<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">context<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">consumed<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">orig_len<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<enum pos:line="7" pos:column="9">enum <block pos:line="7" pos:column="14">{
		<decl><name pos:line="8" pos:column="17">NO_MAGIC<pos:position pos:line="8" pos:column="25"/></name></decl>,
		<decl><name pos:line="9" pos:column="17">ADD_LF_BEFORE_NON_EMPTY<pos:position pos:line="9" pos:column="40"/></name></decl>,
		<decl><name pos:line="10" pos:column="17">DEL_LF_BEFORE_EMPTY<pos:position pos:line="10" pos:column="36"/></name></decl>,
		<decl><name pos:line="11" pos:column="17">ADD_SP_BEFORE_NON_EMPTY<pos:position pos:line="11" pos:column="40"/></name></decl>
	}<pos:position pos:line="12" pos:column="10"/></block> <decl><name pos:line="12" pos:column="11">magic<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><name pos:line="12" pos:column="19">NO_MAGIC<pos:position pos:line="12" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="28"/></enum>

	<switch pos:line="14" pos:column="9">switch <condition pos:line="14" pos:column="16">(<expr><name><name pos:line="14" pos:column="17">placeholder<pos:position pos:line="14" pos:column="28"/></name><index pos:line="14" pos:column="28">[<expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr>]<pos:position pos:line="14" pos:column="31"/></index></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition> <block pos:line="14" pos:column="33">{
	<case pos:line="15" pos:column="9">case <expr><literal type="char" pos:line="15" pos:column="14">'-'<pos:position pos:line="15" pos:column="17"/></literal></expr>:<pos:position pos:line="15" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="16" pos:column="17">magic<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">DEL_LF_BEFORE_EMPTY<pos:position pos:line="16" pos:column="44"/></name></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
		<break pos:line="17" pos:column="17">break;<pos:position pos:line="17" pos:column="23"/></break>
	<case pos:line="18" pos:column="9">case <expr><literal type="char" pos:line="18" pos:column="14">'+'<pos:position pos:line="18" pos:column="17"/></literal></expr>:<pos:position pos:line="18" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="19" pos:column="17">magic<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">ADD_LF_BEFORE_NON_EMPTY<pos:position pos:line="19" pos:column="48"/></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
		<break pos:line="20" pos:column="17">break;<pos:position pos:line="20" pos:column="23"/></break>
	<case pos:line="21" pos:column="9">case <expr><literal type="char" pos:line="21" pos:column="14">' '<pos:position pos:line="21" pos:column="17"/></literal></expr>:<pos:position pos:line="21" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="22" pos:column="17">magic<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">ADD_SP_BEFORE_NON_EMPTY<pos:position pos:line="22" pos:column="48"/></name></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
		<break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
	<default pos:line="24" pos:column="9">default:<pos:position pos:line="24" pos:column="17"/></default>
		<break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>
	}<pos:position pos:line="26" pos:column="10"/></block></switch>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">magic<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">!=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">NO_MAGIC<pos:position pos:line="27" pos:column="30"/></name></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">placeholder<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">++<pos:position pos:line="28" pos:column="30"/></operator></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="30" pos:column="9">orig_len<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name><name pos:line="30" pos:column="20">sb<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">len<pos:position pos:line="30" pos:column="27"/></name></name></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator>struct <name pos:line="31" pos:column="22">format_commit_context<pos:position pos:line="31" pos:column="43"/></name> <operator pos:line="31" pos:column="44">*<pos:position pos:line="31" pos:column="45"/></operator><operator pos:line="31" pos:column="45">)<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">context<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">)<pos:position pos:line="31" pos:column="54"/></operator><operator pos:line="31" pos:column="54">-&gt;<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="56">flush_type<pos:position pos:line="31" pos:column="66"/></name> <operator pos:line="31" pos:column="67">!=<pos:position pos:line="31" pos:column="69"/></operator> <name pos:line="31" pos:column="70">no_flush<pos:position pos:line="31" pos:column="78"/></name></expr>)<pos:position pos:line="31" pos:column="79"/></condition><then pos:line="31" pos:column="79">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">consumed<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <call><name pos:line="32" pos:column="28">format_and_pad_commit<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">sb<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">placeholder<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">context<pos:position pos:line="32" pos:column="74"/></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt></block></then>
	<else pos:line="33" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">consumed<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <call><name pos:line="34" pos:column="28">format_commit_one<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">sb<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">placeholder<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">context<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt></block></else></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">magic<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">==<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">NO_MAGIC<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
		<block type="pseudo"><return pos:line="36" pos:column="17">return <expr><name pos:line="36" pos:column="24">consumed<pos:position pos:line="36" pos:column="32"/></name></expr>;<pos:position pos:line="36" pos:column="33"/></return></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">orig_len<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">==<pos:position pos:line="38" pos:column="25"/></operator> <name><name pos:line="38" pos:column="26">sb<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">len<pos:position pos:line="38" pos:column="33"/></name></name><operator pos:line="38" pos:column="33">)<pos:position pos:line="38" pos:column="34"/></operator> <operator pos:line="38" pos:column="35">&amp;&amp;<pos:position pos:line="38" pos:column="45"/></operator> <name pos:line="38" pos:column="38">magic<pos:position pos:line="38" pos:column="43"/></name> <operator pos:line="38" pos:column="44">==<pos:position pos:line="38" pos:column="46"/></operator> <name pos:line="38" pos:column="47">DEL_LF_BEFORE_EMPTY<pos:position pos:line="38" pos:column="66"/></name></expr>)<pos:position pos:line="38" pos:column="67"/></condition><then pos:line="38" pos:column="67"> <block pos:line="38" pos:column="68">{
		<while pos:line="39" pos:column="17">while <condition pos:line="39" pos:column="23">(<expr><name><name pos:line="39" pos:column="24">sb<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">len<pos:position pos:line="39" pos:column="31"/></name></name> <operator pos:line="39" pos:column="32">&amp;&amp;<pos:position pos:line="39" pos:column="42"/></operator> <name><name pos:line="39" pos:column="35">sb<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">buf<pos:position pos:line="39" pos:column="42"/></name><index pos:line="39" pos:column="42">[<expr><name><name pos:line="39" pos:column="43">sb<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">-&gt;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="47">len<pos:position pos:line="39" pos:column="50"/></name></name> <operator pos:line="39" pos:column="51">-<pos:position pos:line="39" pos:column="52"/></operator> <literal type="number" pos:line="39" pos:column="53">1<pos:position pos:line="39" pos:column="54"/></literal></expr>]<pos:position pos:line="39" pos:column="55"/></index></name> <operator pos:line="39" pos:column="56">==<pos:position pos:line="39" pos:column="58"/></operator> <literal type="char" pos:line="39" pos:column="59">'\n'<pos:position pos:line="39" pos:column="63"/></literal></expr>)<pos:position pos:line="39" pos:column="64"/></condition>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">strbuf_setlen<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">sb<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">sb<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">len<pos:position pos:line="40" pos:column="50"/></name></name> <operator pos:line="40" pos:column="51">-<pos:position pos:line="40" pos:column="52"/></operator> <literal type="number" pos:line="40" pos:column="53">1<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></while>
	}<pos:position pos:line="41" pos:column="10"/></block></then> <elseif pos:line="41" pos:column="11">else <if pos:line="41" pos:column="16">if <condition pos:line="41" pos:column="19">(<expr><name pos:line="41" pos:column="20">orig_len<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">!=<pos:position pos:line="41" pos:column="31"/></operator> <name><name pos:line="41" pos:column="32">sb<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">len<pos:position pos:line="41" pos:column="39"/></name></name></expr>)<pos:position pos:line="41" pos:column="40"/></condition><then pos:line="41" pos:column="40"> <block pos:line="41" pos:column="41">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">magic<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">==<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">ADD_LF_BEFORE_NON_EMPTY<pos:position pos:line="42" pos:column="53"/></name></expr>)<pos:position pos:line="42" pos:column="54"/></condition><then pos:line="42" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">strbuf_insert<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">sb<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="43">orig_len<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="53">"\n"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="59">1<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt></block></then>
		<elseif pos:line="44" pos:column="17">else <if pos:line="44" pos:column="22">if <condition pos:line="44" pos:column="25">(<expr><name pos:line="44" pos:column="26">magic<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">==<pos:position pos:line="44" pos:column="34"/></operator> <name pos:line="44" pos:column="35">ADD_SP_BEFORE_NON_EMPTY<pos:position pos:line="44" pos:column="58"/></name></expr>)<pos:position pos:line="44" pos:column="59"/></condition><then pos:line="44" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">strbuf_insert<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">sb<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">orig_len<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="53">" "<pos:position pos:line="45" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="58">1<pos:position pos:line="45" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="61"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif></if>
	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">consumed<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">+<pos:position pos:line="47" pos:column="26"/></operator> <literal type="number" pos:line="47" pos:column="27">1<pos:position pos:line="47" pos:column="28"/></literal></expr>;<pos:position pos:line="47" pos:column="29"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

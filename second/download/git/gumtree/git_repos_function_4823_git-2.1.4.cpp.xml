<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4823_git-2.1.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_fast_export<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">argc<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">argv<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">prefix<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_array<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">commits<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">OBJECT_ARRAY_INIT<pos:position pos:line="4" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">export_filename<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="40">import_filename<pos:position pos:line="6" pos:column="55"/></name> <init pos:line="6" pos:column="56">= <expr><name pos:line="6" pos:column="58">NULL<pos:position pos:line="6" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">uint32_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">lastimportid<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">string_list<pos:position pos:line="8" pos:column="27"/></name></name></type> <name pos:line="8" pos:column="28">refspecs_list<pos:position pos:line="8" pos:column="41"/></name> <init pos:line="8" pos:column="42">= <expr><name pos:line="8" pos:column="44">STRING_LIST_INIT_NODUP<pos:position pos:line="8" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">option<pos:position pos:line="9" pos:column="22"/></name></name></type> <name><name pos:line="9" pos:column="23">options<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[]<pos:position pos:line="9" pos:column="32"/></index></name> <init pos:line="9" pos:column="33">= <expr><block pos:line="9" pos:column="35">{
		<expr><call><name pos:line="10" pos:column="17">OPT_INTEGER<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"progress"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="45">progress<pos:position pos:line="10" pos:column="53"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="11" pos:column="29">N_<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><literal type="string" pos:line="11" pos:column="32">"show progress after &lt;n&gt; objects"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_CALLBACK<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="number" pos:line="12" pos:column="30">0<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"signed-tags"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="48">&amp;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="49">signed_tag_mode<pos:position pos:line="12" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="66">N_<pos:position pos:line="12" pos:column="68"/></name><argument_list pos:line="12" pos:column="68">(<argument><expr><literal type="string" pos:line="12" pos:column="69">"mode"<pos:position pos:line="12" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="13" pos:column="30">N_<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><literal type="string" pos:line="13" pos:column="33">"select handling of signed tags"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="14" pos:column="30">parse_opt_signed_tag_mode<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_CALLBACK<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"tag-of-filtered-object"<pos:position pos:line="15" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="59">&amp;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="60">tag_of_filtered_mode<pos:position pos:line="15" pos:column="80"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="82">N_<pos:position pos:line="15" pos:column="84"/></name><argument_list pos:line="15" pos:column="84">(<argument><expr><literal type="string" pos:line="15" pos:column="85">"mode"<pos:position pos:line="15" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="92"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="16" pos:column="30">N_<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><literal type="string" pos:line="16" pos:column="33">"select handling of tags that tag filtered objects"<pos:position pos:line="16" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="85"/></argument_list></call></expr></argument>,
			     <argument><expr><name pos:line="17" pos:column="30">parse_opt_tag_of_filtered_mode<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_STRING<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="number" pos:line="18" pos:column="28">0<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"export-marks"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="48">export_filename<pos:position pos:line="18" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="65">N_<pos:position pos:line="18" pos:column="67"/></name><argument_list pos:line="18" pos:column="67">(<argument><expr><literal type="string" pos:line="18" pos:column="68">"file"<pos:position pos:line="18" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="19" pos:column="30">N_<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><literal type="string" pos:line="19" pos:column="33">"Dump marks to this file"<pos:position pos:line="19" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>,
		<expr><call><name pos:line="20" pos:column="17">OPT_STRING<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"import-marks"<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="47">&amp;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="48">import_filename<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="65">N_<pos:position pos:line="20" pos:column="67"/></name><argument_list pos:line="20" pos:column="67">(<argument><expr><literal type="string" pos:line="20" pos:column="68">"file"<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="21" pos:column="30">N_<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><literal type="string" pos:line="21" pos:column="33">"Import marks from this file"<pos:position pos:line="21" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>,
		<expr><call><name pos:line="22" pos:column="17">OPT_BOOL<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="29">"fake-missing-tagger"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="52">&amp;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="53">fake_missing_tagger<pos:position pos:line="22" pos:column="72"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="23" pos:column="26">N_<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"Fake a tagger when tags lack one"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_BOOL<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="29">"full-tree"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="42">&amp;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="43">full_tree<pos:position pos:line="24" pos:column="52"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="25" pos:column="26">N_<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="string" pos:line="25" pos:column="29">"Output full tree for each commit"<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>,
		<expr><call><name pos:line="26" pos:column="17">OPT_BOOL<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="29">"use-done-feature"<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="49">&amp;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="50">use_done_feature<pos:position pos:line="26" pos:column="66"/></name></expr></argument>,
			     <argument><expr><call><name pos:line="27" pos:column="30">N_<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><literal type="string" pos:line="27" pos:column="33">"Use the done feature to terminate the stream"<pos:position pos:line="27" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr>,
		<expr><call><name pos:line="28" pos:column="17">OPT_BOOL<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"no-data"<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="40">&amp;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="41">no_data<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="50">N_<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><literal type="string" pos:line="28" pos:column="53">"Skip output of blob data"<pos:position pos:line="28" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="81"/></argument_list></call></expr>,
		<expr><call><name pos:line="29" pos:column="17">OPT_STRING_LIST<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><literal type="number" pos:line="29" pos:column="33">0<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="36">"refspec"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="47">&amp;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="48">refspecs_list<pos:position pos:line="29" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="63">N_<pos:position pos:line="29" pos:column="65"/></name><argument_list pos:line="29" pos:column="65">(<argument><expr><literal type="string" pos:line="29" pos:column="66">"refspec"<pos:position pos:line="29" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr></argument>,
			     <argument><expr><call><name pos:line="30" pos:column="30">N_<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><literal type="string" pos:line="30" pos:column="33">"Apply refspec to exported refs"<pos:position pos:line="30" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>,
		<macro><name pos:line="31" pos:column="17">OPT_END<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">()<pos:position pos:line="31" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="32" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="32" pos:column="11"/></decl_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">argc<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <literal type="number" pos:line="34" pos:column="21">1<pos:position pos:line="34" pos:column="22"/></literal></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">usage_with_options<pos:position pos:line="35" pos:column="35"/></name> <argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">fast_export_usage<pos:position pos:line="35" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="56">options<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="37" pos:column="9">/* we handle encodings */</comment>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">git_config<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">git_default_config<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">NULL<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">init_revisions<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><operator pos:line="40" pos:column="24">&amp;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="25">revs<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">prefix<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">revs<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">.<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">topo_order<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <literal type="number" pos:line="41" pos:column="27">1<pos:position pos:line="41" pos:column="28"/></literal></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">revs<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">.<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">show_source<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <literal type="number" pos:line="42" pos:column="28">1<pos:position pos:line="42" pos:column="29"/></literal></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">revs<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">.<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">rewrite_parents<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <literal type="number" pos:line="43" pos:column="32">1<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="44" pos:column="9">argc<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">parse_options<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">argc<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">argv<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">prefix<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="50">options<pos:position pos:line="44" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="59">fast_export_usage<pos:position pos:line="44" pos:column="76"/></name></expr></argument>,
			<argument><expr><name pos:line="45" pos:column="25">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="45" pos:column="45"/></name> <operator pos:line="45" pos:column="46">|<pos:position pos:line="45" pos:column="47"/></operator> <name pos:line="45" pos:column="48">PARSE_OPT_KEEP_UNKNOWN<pos:position pos:line="45" pos:column="70"/></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="46" pos:column="9">argc<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">setup_revisions<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">argc<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">argv<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="44">&amp;<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="45">revs<pos:position pos:line="46" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="51">NULL<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">argc<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">&gt;<pos:position pos:line="47" pos:column="22"/></operator> <literal type="number" pos:line="47" pos:column="20">1<pos:position pos:line="47" pos:column="21"/></literal></expr>)<pos:position pos:line="47" pos:column="22"/></condition><then pos:line="47" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">usage_with_options<pos:position pos:line="48" pos:column="35"/></name> <argument_list pos:line="48" pos:column="36">(<argument><expr><name pos:line="48" pos:column="37">fast_export_usage<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">options<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">refspecs_list<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">.<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">nr<pos:position pos:line="50" pos:column="29"/></name></name></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30"> <block pos:line="50" pos:column="31">{
		<decl_stmt><decl><type><specifier pos:line="51" pos:column="17">const<pos:position pos:line="51" pos:column="22"/></specifier> <name pos:line="51" pos:column="23">char<pos:position pos:line="51" pos:column="27"/></name> <modifier pos:line="51" pos:column="28">*<pos:position pos:line="51" pos:column="29"/></modifier><modifier pos:line="51" pos:column="29">*<pos:position pos:line="51" pos:column="30"/></modifier></type><name pos:line="51" pos:column="30">refspecs_str<pos:position pos:line="51" pos:column="42"/></name></decl>;<pos:position pos:line="51" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">int<pos:position pos:line="52" pos:column="20"/></name></type> <name pos:line="52" pos:column="21">i<pos:position pos:line="52" pos:column="22"/></name></decl>;<pos:position pos:line="52" pos:column="23"/></decl_stmt>

		<expr_stmt><expr><name pos:line="54" pos:column="17">refspecs_str<pos:position pos:line="54" pos:column="29"/></name> <operator pos:line="54" pos:column="30">=<pos:position pos:line="54" pos:column="31"/></operator> <call><name pos:line="54" pos:column="32">xmalloc<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><sizeof pos:line="54" pos:column="40">sizeof<argument_list pos:line="54" pos:column="46">(<argument><expr><operator pos:line="54" pos:column="47">*<pos:position pos:line="54" pos:column="48"/></operator><name pos:line="54" pos:column="48">refspecs_str<pos:position pos:line="54" pos:column="60"/></name></expr></argument>)<pos:position pos:line="54" pos:column="61"/></argument_list></sizeof> <operator pos:line="54" pos:column="62">*<pos:position pos:line="54" pos:column="63"/></operator> <name><name pos:line="54" pos:column="64">refspecs_list<pos:position pos:line="54" pos:column="77"/></name><operator pos:line="54" pos:column="77">.<pos:position pos:line="54" pos:column="78"/></operator><name pos:line="54" pos:column="78">nr<pos:position pos:line="54" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="82"/></expr_stmt>
		<for pos:line="55" pos:column="17">for <control pos:line="55" pos:column="21">(<init><expr><name pos:line="55" pos:column="22">i<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <literal type="number" pos:line="55" pos:column="26">0<pos:position pos:line="55" pos:column="27"/></literal></expr>;<pos:position pos:line="55" pos:column="28"/></init> <condition><expr><name pos:line="55" pos:column="29">i<pos:position pos:line="55" pos:column="30"/></name> <operator pos:line="55" pos:column="31">&lt;<pos:position pos:line="55" pos:column="35"/></operator> <name><name pos:line="55" pos:column="33">refspecs_list<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">.<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="47">nr<pos:position pos:line="55" pos:column="49"/></name></name></expr>;<pos:position pos:line="55" pos:column="50"/></condition> <incr><expr><name pos:line="55" pos:column="51">i<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">++<pos:position pos:line="55" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="55"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="25">refspecs_str<pos:position pos:line="56" pos:column="37"/></name><index pos:line="56" pos:column="37">[<expr><name pos:line="56" pos:column="38">i<pos:position pos:line="56" pos:column="39"/></name></expr>]<pos:position pos:line="56" pos:column="40"/></index></name> <operator pos:line="56" pos:column="41">=<pos:position pos:line="56" pos:column="42"/></operator> <name><name pos:line="56" pos:column="43">refspecs_list<pos:position pos:line="56" pos:column="56"/></name><operator pos:line="56" pos:column="56">.<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="57">items<pos:position pos:line="56" pos:column="62"/></name><index pos:line="56" pos:column="62">[<expr><name pos:line="56" pos:column="63">i<pos:position pos:line="56" pos:column="64"/></name></expr>]<pos:position pos:line="56" pos:column="65"/></index></name><operator pos:line="56" pos:column="65">.<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="66">string<pos:position pos:line="56" pos:column="72"/></name></expr>;<pos:position pos:line="56" pos:column="73"/></expr_stmt></block></for>

		<expr_stmt><expr><name pos:line="58" pos:column="17">refspecs_nr<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <name><name pos:line="58" pos:column="31">refspecs_list<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">.<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="45">nr<pos:position pos:line="58" pos:column="47"/></name></name></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="59" pos:column="17">refspecs<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">=<pos:position pos:line="59" pos:column="27"/></operator> <call><name pos:line="59" pos:column="28">parse_fetch_refspec<pos:position pos:line="59" pos:column="47"/></name><argument_list pos:line="59" pos:column="47">(<argument><expr><name pos:line="59" pos:column="48">refspecs_nr<pos:position pos:line="59" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">refspecs_str<pos:position pos:line="59" pos:column="73"/></name></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="61" pos:column="17">string_list_clear<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><operator pos:line="61" pos:column="35">&amp;<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="36">refspecs_list<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="51">1<pos:position pos:line="61" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">free<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">refspecs_str<pos:position pos:line="62" pos:column="34"/></name></expr></argument>)<pos:position pos:line="62" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">use_done_feature<pos:position pos:line="65" pos:column="29"/></name></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="17">printf<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><literal type="string" pos:line="66" pos:column="24">"feature done\n"<pos:position pos:line="66" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt></block></then></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">import_filename<pos:position pos:line="68" pos:column="28"/></name></expr>)<pos:position pos:line="68" pos:column="29"/></condition><then pos:line="68" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">import_marks<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">import_filename<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="70" pos:column="9">lastimportid<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">last_idnum<pos:position pos:line="70" pos:column="34"/></name></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>

	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">import_filename<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">&amp;&amp;<pos:position pos:line="72" pos:column="39"/></operator> <name><name pos:line="72" pos:column="32">revs<pos:position pos:line="72" pos:column="36"/></name><operator pos:line="72" pos:column="36">.<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="37">prune_data<pos:position pos:line="72" pos:column="47"/></name><operator pos:line="72" pos:column="47">.<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="48">nr<pos:position pos:line="72" pos:column="50"/></name></name></expr>)<pos:position pos:line="72" pos:column="51"/></condition><then pos:line="72" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="17">full_tree<pos:position pos:line="73" pos:column="26"/></name> <operator pos:line="73" pos:column="27">=<pos:position pos:line="73" pos:column="28"/></operator> <literal type="number" pos:line="73" pos:column="29">1<pos:position pos:line="73" pos:column="30"/></literal></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="75" pos:column="9">get_tags_and_duplicates<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><operator pos:line="75" pos:column="33">&amp;<pos:position pos:line="75" pos:column="38"/></operator><name><name pos:line="75" pos:column="34">revs<pos:position pos:line="75" pos:column="38"/></name><operator pos:line="75" pos:column="38">.<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="39">cmdline<pos:position pos:line="75" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name pos:line="77" pos:column="13">prepare_revision_walk<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><operator pos:line="77" pos:column="35">&amp;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="36">revs<pos:position pos:line="77" pos:column="40"/></name></expr></argument>)<pos:position pos:line="77" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="42"/></condition><then pos:line="77" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">die<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><literal type="string" pos:line="78" pos:column="21">"revision walk setup failed"<pos:position pos:line="78" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="51"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="79" pos:column="9">revs<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">.<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">diffopt<pos:position pos:line="79" pos:column="21"/></name><operator pos:line="79" pos:column="21">.<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="22">format_callback<pos:position pos:line="79" pos:column="37"/></name></name> <operator pos:line="79" pos:column="38">=<pos:position pos:line="79" pos:column="39"/></operator> <name pos:line="79" pos:column="40">show_filemodify<pos:position pos:line="79" pos:column="55"/></name></expr>;<pos:position pos:line="79" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">DIFF_OPT_SET<pos:position pos:line="80" pos:column="21"/></name><argument_list pos:line="80" pos:column="21">(<argument><expr><operator pos:line="80" pos:column="22">&amp;<pos:position pos:line="80" pos:column="27"/></operator><name><name pos:line="80" pos:column="23">revs<pos:position pos:line="80" pos:column="27"/></name><operator pos:line="80" pos:column="27">.<pos:position pos:line="80" pos:column="28"/></operator><name pos:line="80" pos:column="28">diffopt<pos:position pos:line="80" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="37">RECURSIVE<pos:position pos:line="80" pos:column="46"/></name></expr></argument>)<pos:position pos:line="80" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="48"/></expr_stmt>
	<while pos:line="81" pos:column="9">while <condition pos:line="81" pos:column="15">(<expr><operator pos:line="81" pos:column="16">(<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="17">commit<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">=<pos:position pos:line="81" pos:column="25"/></operator> <call><name pos:line="81" pos:column="26">get_revision<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><operator pos:line="81" pos:column="39">&amp;<pos:position pos:line="81" pos:column="44"/></operator><name pos:line="81" pos:column="40">revs<pos:position pos:line="81" pos:column="44"/></name></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call><operator pos:line="81" pos:column="45">)<pos:position pos:line="81" pos:column="46"/></operator></expr>)<pos:position pos:line="81" pos:column="47"/></condition> <block pos:line="81" pos:column="48">{
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><call><name pos:line="82" pos:column="21">has_unshown_parent<pos:position pos:line="82" pos:column="39"/></name><argument_list pos:line="82" pos:column="39">(<argument><expr><name pos:line="82" pos:column="40">commit<pos:position pos:line="82" pos:column="46"/></name></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="48"/></condition><then pos:line="82" pos:column="48"> <block pos:line="82" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">add_object_array<pos:position pos:line="83" pos:column="41"/></name><argument_list pos:line="83" pos:column="41">(<argument><expr><operator pos:line="83" pos:column="42">&amp;<pos:position pos:line="83" pos:column="47"/></operator><name><name pos:line="83" pos:column="43">commit<pos:position pos:line="83" pos:column="49"/></name><operator pos:line="83" pos:column="49">-&gt;<pos:position pos:line="83" pos:column="54"/></operator><name pos:line="83" pos:column="51">object<pos:position pos:line="83" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="59">NULL<pos:position pos:line="83" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="65">&amp;<pos:position pos:line="83" pos:column="70"/></operator><name pos:line="83" pos:column="66">commits<pos:position pos:line="83" pos:column="73"/></name></expr></argument>)<pos:position pos:line="83" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then>
		<else pos:line="85" pos:column="17">else <block pos:line="85" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="86" pos:column="25">handle_commit<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">commit<pos:position pos:line="86" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="47">&amp;<pos:position pos:line="86" pos:column="52"/></operator><name pos:line="86" pos:column="48">revs<pos:position pos:line="86" pos:column="52"/></name></expr></argument>)<pos:position pos:line="86" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">handle_tail<pos:position pos:line="87" pos:column="36"/></name><argument_list pos:line="87" pos:column="36">(<argument><expr><operator pos:line="87" pos:column="37">&amp;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="38">commits<pos:position pos:line="87" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="47">&amp;<pos:position pos:line="87" pos:column="52"/></operator><name pos:line="87" pos:column="48">revs<pos:position pos:line="87" pos:column="52"/></name></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="88" pos:column="18"/></block></else></if>
	}<pos:position pos:line="89" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="91" pos:column="9">handle_tags_and_duplicates<pos:position pos:line="91" pos:column="35"/></name><argument_list pos:line="91" pos:column="35">()<pos:position pos:line="91" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">handle_deletes<pos:position pos:line="92" pos:column="23"/></name><argument_list pos:line="92" pos:column="23">()<pos:position pos:line="92" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="26"/></expr_stmt>

	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">export_filename<pos:position pos:line="94" pos:column="28"/></name> <operator pos:line="94" pos:column="29">&amp;&amp;<pos:position pos:line="94" pos:column="39"/></operator> <name pos:line="94" pos:column="32">lastimportid<pos:position pos:line="94" pos:column="44"/></name> <operator pos:line="94" pos:column="45">!=<pos:position pos:line="94" pos:column="47"/></operator> <name pos:line="94" pos:column="48">last_idnum<pos:position pos:line="94" pos:column="58"/></name></expr>)<pos:position pos:line="94" pos:column="59"/></condition><then pos:line="94" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="17">export_marks<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name pos:line="95" pos:column="30">export_filename<pos:position pos:line="95" pos:column="45"/></name></expr></argument>)<pos:position pos:line="95" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">use_done_feature<pos:position pos:line="97" pos:column="29"/></name></expr>)<pos:position pos:line="97" pos:column="30"/></condition><then pos:line="97" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="17">printf<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><literal type="string" pos:line="98" pos:column="24">"done\n"<pos:position pos:line="98" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="100" pos:column="9">free_refspec<pos:position pos:line="100" pos:column="21"/></name><argument_list pos:line="100" pos:column="21">(<argument><expr><name pos:line="100" pos:column="22">refspecs_nr<pos:position pos:line="100" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="35">refspecs<pos:position pos:line="100" pos:column="43"/></name></expr></argument>)<pos:position pos:line="100" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="45"/></expr_stmt>

	<return pos:line="102" pos:column="9">return <expr><literal type="number" pos:line="102" pos:column="16">0<pos:position pos:line="102" pos:column="17"/></literal></expr>;<pos:position pos:line="102" pos:column="18"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1594.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_marks<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">lock_file<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">mark_lock<pos:position pos:line="3" pos:column="42"/></name></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">mark_fd<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">FILE<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">f<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">export_marks_file<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
		<block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">mark_fd<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">hold_lock_file_for_update<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><operator pos:line="10" pos:column="45">&amp;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="46">mark_lock<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="57">export_marks_file<pos:position pos:line="10" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="76">0<pos:position pos:line="10" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">mark_fd<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">failure<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">|=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">error<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><literal type="string" pos:line="12" pos:column="34">"Unable to write marks file %s: %s"<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>,
			<argument><expr><name pos:line="13" pos:column="25">export_marks_file<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="44">strerror<pos:position pos:line="13" pos:column="52"/></name><argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">errno<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
		<return pos:line="14" pos:column="17">return;<pos:position pos:line="14" pos:column="24"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">f<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">fdopen<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">mark_fd<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"w"<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">f<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">saved_errno<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><name pos:line="19" pos:column="35">errno<pos:position pos:line="19" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="41"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">rollback_lock_file<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">mark_lock<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">failure<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">|=<pos:position pos:line="21" pos:column="27"/></operator> <call><name pos:line="21" pos:column="28">error<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><literal type="string" pos:line="21" pos:column="34">"Unable to write marks file %s: %s"<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>,
			<argument><expr><name pos:line="22" pos:column="25">export_marks_file<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="44">strerror<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name pos:line="22" pos:column="53">saved_errno<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
		<return pos:line="23" pos:column="17">return;<pos:position pos:line="23" pos:column="24"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="26" pos:column="9">/*
	 * Since the lock file was fdopen()'ed, it should not be close()'ed.
	 * Assign -1 to the lock file descriptor so that commit_lock_file()
	 * won't try to close() it.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">mark_lock<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">fd<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">-<pos:position pos:line="31" pos:column="25"/></operator><literal type="number" pos:line="31" pos:column="25">1<pos:position pos:line="31" pos:column="26"/></literal></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">dump_marks_helper<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">f<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="30">0<pos:position pos:line="33" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">marks<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">ferror<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">f<pos:position pos:line="34" pos:column="21"/></name></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call> <operator pos:line="34" pos:column="23">||<pos:position pos:line="34" pos:column="25"/></operator> <call><name pos:line="34" pos:column="26">fclose<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">f<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36"> <block pos:line="34" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">saved_errno<pos:position pos:line="35" pos:column="32"/></name> <init pos:line="35" pos:column="33">= <expr><name pos:line="35" pos:column="35">errno<pos:position pos:line="35" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="41"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">rollback_lock_file<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><operator pos:line="36" pos:column="36">&amp;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="37">mark_lock<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">failure<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">|=<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">error<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><literal type="string" pos:line="37" pos:column="34">"Unable to write marks file %s: %s"<pos:position pos:line="37" pos:column="69"/></literal></expr></argument>,
			<argument><expr><name pos:line="38" pos:column="25">export_marks_file<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="44">strerror<pos:position pos:line="38" pos:column="52"/></name><argument_list pos:line="38" pos:column="52">(<argument><expr><name pos:line="38" pos:column="53">saved_errno<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="67"/></expr_stmt>
		<return pos:line="39" pos:column="17">return;<pos:position pos:line="39" pos:column="24"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">commit_lock_file<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><operator pos:line="42" pos:column="30">&amp;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="31">mark_lock<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42"> <block pos:line="42" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">int<pos:position pos:line="43" pos:column="20"/></name></type> <name pos:line="43" pos:column="21">saved_errno<pos:position pos:line="43" pos:column="32"/></name> <init pos:line="43" pos:column="33">= <expr><name pos:line="43" pos:column="35">errno<pos:position pos:line="43" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="41"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">rollback_lock_file<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><operator pos:line="44" pos:column="36">&amp;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="37">mark_lock<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">failure<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">|=<pos:position pos:line="45" pos:column="27"/></operator> <call><name pos:line="45" pos:column="28">error<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><literal type="string" pos:line="45" pos:column="34">"Unable to commit marks file %s: %s"<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>,
			<argument><expr><name pos:line="46" pos:column="25">export_marks_file<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="44">strerror<pos:position pos:line="46" pos:column="52"/></name><argument_list pos:line="46" pos:column="52">(<argument><expr><name pos:line="46" pos:column="53">saved_errno<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
		<return pos:line="47" pos:column="17">return;<pos:position pos:line="47" pos:column="24"/></return>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

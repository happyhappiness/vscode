<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3485_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">refs_for_each_reflog_ent<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">ref_store<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">refs<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">refname<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">each_reflog_ent_fn<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">fn<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">void<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">cb_data<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<return pos:line="4" pos:column="9">return <expr><call><name><name pos:line="4" pos:column="16">refs<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">be<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">for_each_reflog_ent<pos:position pos:line="4" pos:column="45"/></name></name><argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">refs<pos:position pos:line="4" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="52">refname<pos:position pos:line="4" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="61">fn<pos:position pos:line="4" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="65">cb_data<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="74"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

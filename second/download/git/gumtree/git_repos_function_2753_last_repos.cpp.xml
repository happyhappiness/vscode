<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2753_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">parse_options<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">argc<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">prefix<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">option<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">options<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier> <specifier pos:line="2" pos:column="62">const<pos:position pos:line="2" pos:column="67"/></specifier></type> <name><name pos:line="2" pos:column="68">usagestr<pos:position pos:line="2" pos:column="76"/></name><index pos:line="2" pos:column="76">[]<pos:position pos:line="2" pos:column="78"/></index></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="3" pos:column="19">int<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">flags<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="29"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">parse_opt_ctx_t<pos:position pos:line="5" pos:column="31"/></name></name></type> <name pos:line="5" pos:column="32">ctx<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">parse_options_start<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="30">ctx<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">argc<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">argv<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">prefix<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">options<pos:position pos:line="7" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="64">flags<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt>
	<switch pos:line="8" pos:column="9">switch <condition pos:line="8" pos:column="16">(<expr><call><name pos:line="8" pos:column="17">parse_options_step<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><operator pos:line="8" pos:column="36">&amp;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="37">ctx<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">options<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">usagestr<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="61"/></condition> <block pos:line="8" pos:column="62">{
	<case pos:line="9" pos:column="9">case <expr><name pos:line="9" pos:column="14">PARSE_OPT_HELP<pos:position pos:line="9" pos:column="28"/></name></expr>:<pos:position pos:line="9" pos:column="29"/></case>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">exit<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><literal type="number" pos:line="10" pos:column="22">129<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
	<case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">PARSE_OPT_NON_OPTION<pos:position pos:line="11" pos:column="34"/></name></expr>:<pos:position pos:line="11" pos:column="35"/></case>
	<case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">PARSE_OPT_DONE<pos:position pos:line="12" pos:column="28"/></name></expr>:<pos:position pos:line="12" pos:column="29"/></case>
		<break pos:line="13" pos:column="17">break;<pos:position pos:line="13" pos:column="23"/></break>
	<default pos:line="14" pos:column="9">default:<pos:position pos:line="14" pos:column="17"/></default> <comment type="block" pos:line="14" pos:column="18">/* PARSE_OPT_UNKNOWN */</comment>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">ctx<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">argv<pos:position pos:line="15" pos:column="29"/></name><index pos:line="15" pos:column="29">[<expr><literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr>]<pos:position pos:line="15" pos:column="32"/></index><index pos:line="15" pos:column="32">[<expr><literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal></expr>]<pos:position pos:line="15" pos:column="35"/></index></name> <operator pos:line="15" pos:column="36">==<pos:position pos:line="15" pos:column="38"/></operator> <literal type="char" pos:line="15" pos:column="39">'-'<pos:position pos:line="15" pos:column="42"/></literal></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">error<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><literal type="string" pos:line="16" pos:column="31">"unknown option `%s'"<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="54">ctx<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">.<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">argv<pos:position pos:line="16" pos:column="62"/></name><index pos:line="16" pos:column="62">[<expr><literal type="number" pos:line="16" pos:column="63">0<pos:position pos:line="16" pos:column="64"/></literal></expr>]<pos:position pos:line="16" pos:column="65"/></index></name> <operator pos:line="16" pos:column="66">+<pos:position pos:line="16" pos:column="67"/></operator> <literal type="number" pos:line="16" pos:column="68">2<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><call><name pos:line="17" pos:column="28">isascii<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><operator pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></operator><name><name pos:line="17" pos:column="37">ctx<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">.<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">opt<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46"> <block pos:line="17" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">error<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><literal type="string" pos:line="18" pos:column="31">"unknown switch `%c'"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="54">*<pos:position pos:line="18" pos:column="55"/></operator><name><name pos:line="18" pos:column="55">ctx<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">.<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">opt<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif> <else pos:line="19" pos:column="19">else <block pos:line="19" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">error<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><literal type="string" pos:line="20" pos:column="31">"unknown non-ascii option in string: `%s'"<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>,
			      <argument><expr><name><name pos:line="21" pos:column="31">ctx<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">argv<pos:position pos:line="21" pos:column="39"/></name><index pos:line="21" pos:column="39">[<expr><literal type="number" pos:line="21" pos:column="40">0<pos:position pos:line="21" pos:column="41"/></literal></expr>]<pos:position pos:line="21" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">usage_with_options<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">usagestr<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="46">options<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></switch>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">precompose_argv<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">argc<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="31">argv<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
	<return pos:line="27" pos:column="9">return <expr><call><name pos:line="27" pos:column="16">parse_options_end<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><operator pos:line="27" pos:column="34">&amp;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="35">ctx<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

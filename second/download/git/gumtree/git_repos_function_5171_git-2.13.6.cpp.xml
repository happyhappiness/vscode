<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5171_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">prepare_index<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">argc<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier><modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">argv<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">prefix<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">commit<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">current_head<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">int<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">is_status<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">partial<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">pathspec<pos:position pos:line="5" pos:column="24"/></name></name></type> <name pos:line="5" pos:column="25">pathspec<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">refresh_flags<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">REFRESH_QUIET<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ret<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">is_status<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">refresh_flags<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">|=<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="34">REFRESH_UNMERGED<pos:position pos:line="10" pos:column="50"/></name></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">parse_pathspec<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="25">pathspec<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>,
		       <argument><expr><name pos:line="12" pos:column="24">PATHSPEC_PREFER_FULL<pos:position pos:line="12" pos:column="44"/></name></expr></argument>,
		       <argument><expr><name pos:line="13" pos:column="24">prefix<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">argv<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">read_cache_preload<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="33">pathspec<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">&lt;<pos:position pos:line="15" pos:column="47"/></operator> <literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><call><name pos:line="16" pos:column="21">_<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"index file corrupt"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">interactive<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name> <modifier pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></modifier></type><name pos:line="19" pos:column="23">old_index_env<pos:position pos:line="19" pos:column="36"/></name> <init pos:line="19" pos:column="37">= <expr><name pos:line="19" pos:column="39">NULL<pos:position pos:line="19" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="44"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">hold_locked_index<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><operator pos:line="20" pos:column="35">&amp;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="36">index_lock<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">LOCK_DIE_ON_ERROR<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="22" pos:column="17">refresh_cache_or_die<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">refresh_flags<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">write_locked_index<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="41">the_index<pos:position pos:line="24" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="52">&amp;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="53">index_lock<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">CLOSE_LOCK<pos:position pos:line="24" pos:column="75"/></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="77"/></condition><then pos:line="24" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><call><name pos:line="25" pos:column="29">_<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"unable to create temporary index"<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="27" pos:column="17">old_index_env<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <call><name pos:line="27" pos:column="33">getenv<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">INDEX_ENVIRONMENT<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">setenv<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">INDEX_ENVIRONMENT<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="43">get_lock_file_path<pos:position pos:line="28" pos:column="61"/></name><argument_list pos:line="28" pos:column="61">(<argument><expr><operator pos:line="28" pos:column="62">&amp;<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="63">index_lock<pos:position pos:line="28" pos:column="73"/></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="76">1<pos:position pos:line="28" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="79"/></expr_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">interactive_add<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">argc<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">argv<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">prefix<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="57">patch_interactive<pos:position pos:line="30" pos:column="74"/></name></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call> <operator pos:line="30" pos:column="76">!=<pos:position pos:line="30" pos:column="78"/></operator> <literal type="number" pos:line="30" pos:column="79">0<pos:position pos:line="30" pos:column="80"/></literal></expr>)<pos:position pos:line="30" pos:column="81"/></condition><then pos:line="30" pos:column="81">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><call><name pos:line="31" pos:column="29">_<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><literal type="string" pos:line="31" pos:column="31">"interactive add failed"<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt></block></then></if>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">old_index_env<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">&amp;&amp;<pos:position pos:line="33" pos:column="45"/></operator> <operator pos:line="33" pos:column="38">*<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">old_index_env<pos:position pos:line="33" pos:column="52"/></name></expr>)<pos:position pos:line="33" pos:column="53"/></condition><then pos:line="33" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">setenv<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">INDEX_ENVIRONMENT<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">old_index_env<pos:position pos:line="34" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="66">1<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt></block></then>
		<else pos:line="35" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">unsetenv<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">INDEX_ENVIRONMENT<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt></block></else></if>

		<expr_stmt><expr><call><name pos:line="38" pos:column="17">discard_cache<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">()<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">read_cache_from<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><call><name pos:line="39" pos:column="33">get_lock_file_path<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">(<argument><expr><operator pos:line="39" pos:column="52">&amp;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="53">index_lock<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="66"/></expr_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><call><name pos:line="40" pos:column="21">update_main_cache_tree<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">WRITE_TREE_SILENT<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call> <operator pos:line="40" pos:column="63">==<pos:position pos:line="40" pos:column="65"/></operator> <literal type="number" pos:line="40" pos:column="66">0<pos:position pos:line="40" pos:column="67"/></literal></expr>)<pos:position pos:line="40" pos:column="68"/></condition><then pos:line="40" pos:column="68"> <block pos:line="40" pos:column="69">{
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><call><name pos:line="41" pos:column="29">reopen_lock_file<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><operator pos:line="41" pos:column="46">&amp;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="47">index_lock<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call> <operator pos:line="41" pos:column="59">&lt;<pos:position pos:line="41" pos:column="63"/></operator> <literal type="number" pos:line="41" pos:column="61">0<pos:position pos:line="41" pos:column="62"/></literal></expr>)<pos:position pos:line="41" pos:column="63"/></condition><then pos:line="41" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="33">die<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><call><name pos:line="42" pos:column="37">_<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><literal type="string" pos:line="42" pos:column="39">"unable to write index file"<pos:position pos:line="42" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt></block></then></if>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><call><name pos:line="43" pos:column="29">write_locked_index<pos:position pos:line="43" pos:column="47"/></name><argument_list pos:line="43" pos:column="47">(<argument><expr><operator pos:line="43" pos:column="48">&amp;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="49">the_index<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="60">&amp;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="61">index_lock<pos:position pos:line="43" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="73">CLOSE_LOCK<pos:position pos:line="43" pos:column="83"/></name></expr></argument>)<pos:position pos:line="43" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="85"/></condition><then pos:line="43" pos:column="85">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="33">die<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><call><name pos:line="44" pos:column="37">_<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><literal type="string" pos:line="44" pos:column="39">"unable to update temporary index"<pos:position pos:line="44" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="76"/></expr_stmt></block></then></if>
		}<pos:position pos:line="45" pos:column="18"/></block></then> <else pos:line="45" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">warning<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><call><name pos:line="46" pos:column="33">_<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><literal type="string" pos:line="46" pos:column="35">"Failed to update main cache tree"<pos:position pos:line="46" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="72"/></expr_stmt></block></else></if>

		<expr_stmt><expr><name pos:line="48" pos:column="17">commit_style<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">=<pos:position pos:line="48" pos:column="31"/></operator> <name pos:line="48" pos:column="32">COMMIT_NORMAL<pos:position pos:line="48" pos:column="45"/></name></expr>;<pos:position pos:line="48" pos:column="46"/></expr_stmt>
		<return pos:line="49" pos:column="17">return <expr><call><name pos:line="49" pos:column="24">get_lock_file_path<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><operator pos:line="49" pos:column="43">&amp;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="44">index_lock<pos:position pos:line="49" pos:column="54"/></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></return>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="52" pos:column="9">/*
	 * Non partial, non as-is commit.
	 *
	 * (1) get the real index;
	 * (2) update the_index as necessary;
	 * (3) write the_index out to the real index (still locked);
	 * (4) return the name of the locked index file.
	 *
	 * The caller should run hooks on the locked real index, and
	 * (A) if all goes well, commit the real index;
	 * (B) on failure, rollback the real index.
	 */</comment>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">all<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">||<pos:position pos:line="64" pos:column="19"/></operator> <operator pos:line="64" pos:column="20">(<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="21">also<pos:position pos:line="64" pos:column="25"/></name> <operator pos:line="64" pos:column="26">&amp;&amp;<pos:position pos:line="64" pos:column="36"/></operator> <name><name pos:line="64" pos:column="29">pathspec<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">.<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="38">nr<pos:position pos:line="64" pos:column="40"/></name></name><operator pos:line="64" pos:column="40">)<pos:position pos:line="64" pos:column="41"/></operator></expr>)<pos:position pos:line="64" pos:column="42"/></condition><then pos:line="64" pos:column="42"> <block pos:line="64" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">hold_locked_index<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><operator pos:line="65" pos:column="35">&amp;<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="36">index_lock<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="48">LOCK_DIE_ON_ERROR<pos:position pos:line="65" pos:column="65"/></name></expr></argument>)<pos:position pos:line="65" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">add_files_to_cache<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><ternary><condition><expr><name pos:line="66" pos:column="36">also<pos:position pos:line="66" pos:column="40"/></name></expr> ?<pos:position pos:line="66" pos:column="42"/></condition><then pos:line="66" pos:column="42"> <expr><name pos:line="66" pos:column="43">prefix<pos:position pos:line="66" pos:column="49"/></name></expr> <pos:position pos:line="66" pos:column="50"/></then><else pos:line="66" pos:column="50">: <expr><name pos:line="66" pos:column="52">NULL<pos:position pos:line="66" pos:column="56"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="66" pos:column="58">&amp;<pos:position pos:line="66" pos:column="63"/></operator><name pos:line="66" pos:column="59">pathspec<pos:position pos:line="66" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="69">0<pos:position pos:line="66" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">refresh_cache_or_die<pos:position pos:line="67" pos:column="37"/></name><argument_list pos:line="67" pos:column="37">(<argument><expr><name pos:line="67" pos:column="38">refresh_flags<pos:position pos:line="67" pos:column="51"/></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">update_main_cache_tree<pos:position pos:line="68" pos:column="39"/></name><argument_list pos:line="68" pos:column="39">(<argument><expr><name pos:line="68" pos:column="40">WRITE_TREE_SILENT<pos:position pos:line="68" pos:column="57"/></name></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><call><name pos:line="69" pos:column="21">write_locked_index<pos:position pos:line="69" pos:column="39"/></name><argument_list pos:line="69" pos:column="39">(<argument><expr><operator pos:line="69" pos:column="40">&amp;<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="41">the_index<pos:position pos:line="69" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="52">&amp;<pos:position pos:line="69" pos:column="57"/></operator><name pos:line="69" pos:column="53">index_lock<pos:position pos:line="69" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="65">CLOSE_LOCK<pos:position pos:line="69" pos:column="75"/></name></expr></argument>)<pos:position pos:line="69" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="77"/></condition><then pos:line="69" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="25">die<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><call><name pos:line="70" pos:column="29">_<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><literal type="string" pos:line="70" pos:column="31">"unable to write new_index file"<pos:position pos:line="70" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="66"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="71" pos:column="17">commit_style<pos:position pos:line="71" pos:column="29"/></name> <operator pos:line="71" pos:column="30">=<pos:position pos:line="71" pos:column="31"/></operator> <name pos:line="71" pos:column="32">COMMIT_NORMAL<pos:position pos:line="71" pos:column="45"/></name></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>
		<return pos:line="72" pos:column="17">return <expr><call><name pos:line="72" pos:column="24">get_lock_file_path<pos:position pos:line="72" pos:column="42"/></name><argument_list pos:line="72" pos:column="42">(<argument><expr><operator pos:line="72" pos:column="43">&amp;<pos:position pos:line="72" pos:column="48"/></operator><name pos:line="72" pos:column="44">index_lock<pos:position pos:line="72" pos:column="54"/></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="56"/></return>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="75" pos:column="9">/*
	 * As-is commit.
	 *
	 * (1) return the name of the real index file.
	 *
	 * The caller should run hooks on the real index,
	 * and create commit from the_index.
	 * We still need to refresh the index here.
	 */</comment>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">only<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">&amp;&amp;<pos:position pos:line="84" pos:column="29"/></operator> <operator pos:line="84" pos:column="22">!<pos:position pos:line="84" pos:column="23"/></operator><name><name pos:line="84" pos:column="23">pathspec<pos:position pos:line="84" pos:column="31"/></name><operator pos:line="84" pos:column="31">.<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="32">nr<pos:position pos:line="84" pos:column="34"/></name></name></expr>)<pos:position pos:line="84" pos:column="35"/></condition><then pos:line="84" pos:column="35"> <block pos:line="84" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">hold_locked_index<pos:position pos:line="85" pos:column="34"/></name><argument_list pos:line="85" pos:column="34">(<argument><expr><operator pos:line="85" pos:column="35">&amp;<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="36">index_lock<pos:position pos:line="85" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="48">LOCK_DIE_ON_ERROR<pos:position pos:line="85" pos:column="65"/></name></expr></argument>)<pos:position pos:line="85" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">refresh_cache_or_die<pos:position pos:line="86" pos:column="37"/></name><argument_list pos:line="86" pos:column="37">(<argument><expr><name pos:line="86" pos:column="38">refresh_flags<pos:position pos:line="86" pos:column="51"/></name></expr></argument>)<pos:position pos:line="86" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="53"/></expr_stmt>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">active_cache_changed<pos:position pos:line="87" pos:column="41"/></name>
		    <operator pos:line="88" pos:column="21">||<pos:position pos:line="88" pos:column="23"/></operator> <operator pos:line="88" pos:column="24">!<pos:position pos:line="88" pos:column="25"/></operator><call><name pos:line="88" pos:column="25">cache_tree_fully_valid<pos:position pos:line="88" pos:column="47"/></name><argument_list pos:line="88" pos:column="47">(<argument><expr><name pos:line="88" pos:column="48">active_cache_tree<pos:position pos:line="88" pos:column="65"/></name></expr></argument>)<pos:position pos:line="88" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="67"/></condition><then pos:line="88" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="25">update_main_cache_tree<pos:position pos:line="89" pos:column="47"/></name><argument_list pos:line="89" pos:column="47">(<argument><expr><name pos:line="89" pos:column="48">WRITE_TREE_SILENT<pos:position pos:line="89" pos:column="65"/></name></expr></argument>)<pos:position pos:line="89" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="67"/></expr_stmt></block></then></if>
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">active_cache_changed<pos:position pos:line="90" pos:column="41"/></name></expr>)<pos:position pos:line="90" pos:column="42"/></condition><then pos:line="90" pos:column="42"> <block pos:line="90" pos:column="43">{
			<if pos:line="91" pos:column="25">if <condition pos:line="91" pos:column="28">(<expr><call><name pos:line="91" pos:column="29">write_locked_index<pos:position pos:line="91" pos:column="47"/></name><argument_list pos:line="91" pos:column="47">(<argument><expr><operator pos:line="91" pos:column="48">&amp;<pos:position pos:line="91" pos:column="53"/></operator><name pos:line="91" pos:column="49">the_index<pos:position pos:line="91" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="60">&amp;<pos:position pos:line="91" pos:column="65"/></operator><name pos:line="91" pos:column="61">index_lock<pos:position pos:line="91" pos:column="71"/></name></expr></argument>,
					       <argument><expr><name pos:line="92" pos:column="48">COMMIT_LOCK<pos:position pos:line="92" pos:column="59"/></name></expr></argument>)<pos:position pos:line="92" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="61"/></condition><then pos:line="92" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="33">die<pos:position pos:line="93" pos:column="36"/></name><argument_list pos:line="93" pos:column="36">(<argument><expr><call><name pos:line="93" pos:column="37">_<pos:position pos:line="93" pos:column="38"/></name><argument_list pos:line="93" pos:column="38">(<argument><expr><literal type="string" pos:line="93" pos:column="39">"unable to write new_index file"<pos:position pos:line="93" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="74"/></expr_stmt></block></then></if>
		}<pos:position pos:line="94" pos:column="18"/></block></then> <else pos:line="94" pos:column="19">else <block pos:line="94" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">rollback_lock_file<pos:position pos:line="95" pos:column="43"/></name><argument_list pos:line="95" pos:column="43">(<argument><expr><operator pos:line="95" pos:column="44">&amp;<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="45">index_lock<pos:position pos:line="95" pos:column="55"/></name></expr></argument>)<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="96" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="97" pos:column="17">commit_style<pos:position pos:line="97" pos:column="29"/></name> <operator pos:line="97" pos:column="30">=<pos:position pos:line="97" pos:column="31"/></operator> <name pos:line="97" pos:column="32">COMMIT_AS_IS<pos:position pos:line="97" pos:column="44"/></name></expr>;<pos:position pos:line="97" pos:column="45"/></expr_stmt>
		<return pos:line="98" pos:column="17">return <expr><call><name pos:line="98" pos:column="24">get_index_file<pos:position pos:line="98" pos:column="38"/></name><argument_list pos:line="98" pos:column="38">()<pos:position pos:line="98" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="41"/></return>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="101" pos:column="9">/*
	 * A partial commit.
	 *
	 * (0) find the set of affected paths;
	 * (1) get lock on the real index file;
	 * (2) update the_index with the given paths;
	 * (3) write the_index out to the real index (still locked);
	 * (4) get lock on the false index file;
	 * (5) reset the_index from HEAD;
	 * (6) update the_index the same way as (2);
	 * (7) write the_index out to the false index file;
	 * (8) return the name of the false index file (still locked);
	 *
	 * The caller should run hooks on the locked false index, and
	 * create commit from it.  Then
	 * (A) if all goes well, commit the real index;
	 * (B) on failure, rollback the real index;
	 * In either case, rollback the false index.
	 */</comment>
	<expr_stmt><expr><name pos:line="120" pos:column="9">commit_style<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <name pos:line="120" pos:column="24">COMMIT_PARTIAL<pos:position pos:line="120" pos:column="38"/></name></expr>;<pos:position pos:line="120" pos:column="39"/></expr_stmt>

	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><name pos:line="122" pos:column="13">whence<pos:position pos:line="122" pos:column="19"/></name> <operator pos:line="122" pos:column="20">!=<pos:position pos:line="122" pos:column="22"/></operator> <name pos:line="122" pos:column="23">FROM_COMMIT<pos:position pos:line="122" pos:column="34"/></name></expr>)<pos:position pos:line="122" pos:column="35"/></condition><then pos:line="122" pos:column="35"> <block pos:line="122" pos:column="36">{
		<if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><name pos:line="123" pos:column="21">whence<pos:position pos:line="123" pos:column="27"/></name> <operator pos:line="123" pos:column="28">==<pos:position pos:line="123" pos:column="30"/></operator> <name pos:line="123" pos:column="31">FROM_MERGE<pos:position pos:line="123" pos:column="41"/></name></expr>)<pos:position pos:line="123" pos:column="42"/></condition><then pos:line="123" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="25">die<pos:position pos:line="124" pos:column="28"/></name><argument_list pos:line="124" pos:column="28">(<argument><expr><call><name pos:line="124" pos:column="29">_<pos:position pos:line="124" pos:column="30"/></name><argument_list pos:line="124" pos:column="30">(<argument><expr><literal type="string" pos:line="124" pos:column="31">"cannot do a partial commit during a merge."<pos:position pos:line="124" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="78"/></expr_stmt></block></then>
		<elseif pos:line="125" pos:column="17">else <if pos:line="125" pos:column="22">if <condition pos:line="125" pos:column="25">(<expr><name pos:line="125" pos:column="26">whence<pos:position pos:line="125" pos:column="32"/></name> <operator pos:line="125" pos:column="33">==<pos:position pos:line="125" pos:column="35"/></operator> <name pos:line="125" pos:column="36">FROM_CHERRY_PICK<pos:position pos:line="125" pos:column="52"/></name></expr>)<pos:position pos:line="125" pos:column="53"/></condition><then pos:line="125" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="25">die<pos:position pos:line="126" pos:column="28"/></name><argument_list pos:line="126" pos:column="28">(<argument><expr><call><name pos:line="126" pos:column="29">_<pos:position pos:line="126" pos:column="30"/></name><argument_list pos:line="126" pos:column="30">(<argument><expr><literal type="string" pos:line="126" pos:column="31">"cannot do a partial commit during a cherry-pick."<pos:position pos:line="126" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="126" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="84"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="129" pos:column="9">string_list_init<pos:position pos:line="129" pos:column="25"/></name><argument_list pos:line="129" pos:column="25">(<argument><expr><operator pos:line="129" pos:column="26">&amp;<pos:position pos:line="129" pos:column="31"/></operator><name pos:line="129" pos:column="27">partial<pos:position pos:line="129" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="36">1<pos:position pos:line="129" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="39"/></expr_stmt>
	<if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><call><name pos:line="130" pos:column="13">list_paths<pos:position pos:line="130" pos:column="23"/></name><argument_list pos:line="130" pos:column="23">(<argument><expr><operator pos:line="130" pos:column="24">&amp;<pos:position pos:line="130" pos:column="29"/></operator><name pos:line="130" pos:column="25">partial<pos:position pos:line="130" pos:column="32"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="130" pos:column="34">!<pos:position pos:line="130" pos:column="35"/></operator><name pos:line="130" pos:column="35">current_head<pos:position pos:line="130" pos:column="47"/></name></expr> ?<pos:position pos:line="130" pos:column="49"/></condition><then pos:line="130" pos:column="49"> <expr><name pos:line="130" pos:column="50">NULL<pos:position pos:line="130" pos:column="54"/></name></expr> <pos:position pos:line="130" pos:column="55"/></then><else pos:line="130" pos:column="55">: <expr><literal type="string" pos:line="130" pos:column="57">"HEAD"<pos:position pos:line="130" pos:column="63"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="130" pos:column="65">prefix<pos:position pos:line="130" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="73">&amp;<pos:position pos:line="130" pos:column="78"/></operator><name pos:line="130" pos:column="74">pathspec<pos:position pos:line="130" pos:column="82"/></name></expr></argument>)<pos:position pos:line="130" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="84"/></condition><then pos:line="130" pos:column="84">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="17">exit<pos:position pos:line="131" pos:column="21"/></name><argument_list pos:line="131" pos:column="21">(<argument><expr><literal type="number" pos:line="131" pos:column="22">1<pos:position pos:line="131" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="25"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="133" pos:column="9">discard_cache<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">()<pos:position pos:line="133" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="25"/></expr_stmt>
	<if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><call><name pos:line="134" pos:column="13">read_cache<pos:position pos:line="134" pos:column="23"/></name><argument_list pos:line="134" pos:column="23">()<pos:position pos:line="134" pos:column="25"/></argument_list></call> <operator pos:line="134" pos:column="26">&lt;<pos:position pos:line="134" pos:column="30"/></operator> <literal type="number" pos:line="134" pos:column="28">0<pos:position pos:line="134" pos:column="29"/></literal></expr>)<pos:position pos:line="134" pos:column="30"/></condition><then pos:line="134" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="135" pos:column="17">die<pos:position pos:line="135" pos:column="20"/></name><argument_list pos:line="135" pos:column="20">(<argument><expr><call><name pos:line="135" pos:column="21">_<pos:position pos:line="135" pos:column="22"/></name><argument_list pos:line="135" pos:column="22">(<argument><expr><literal type="string" pos:line="135" pos:column="23">"cannot read the index"<pos:position pos:line="135" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="135" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="137" pos:column="9">hold_locked_index<pos:position pos:line="137" pos:column="26"/></name><argument_list pos:line="137" pos:column="26">(<argument><expr><operator pos:line="137" pos:column="27">&amp;<pos:position pos:line="137" pos:column="32"/></operator><name pos:line="137" pos:column="28">index_lock<pos:position pos:line="137" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="40">LOCK_DIE_ON_ERROR<pos:position pos:line="137" pos:column="57"/></name></expr></argument>)<pos:position pos:line="137" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="138" pos:column="9">add_remove_files<pos:position pos:line="138" pos:column="25"/></name><argument_list pos:line="138" pos:column="25">(<argument><expr><operator pos:line="138" pos:column="26">&amp;<pos:position pos:line="138" pos:column="31"/></operator><name pos:line="138" pos:column="27">partial<pos:position pos:line="138" pos:column="34"/></name></expr></argument>)<pos:position pos:line="138" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="139" pos:column="9">refresh_cache<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><name pos:line="139" pos:column="23">REFRESH_QUIET<pos:position pos:line="139" pos:column="36"/></name></expr></argument>)<pos:position pos:line="139" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="140" pos:column="9">update_main_cache_tree<pos:position pos:line="140" pos:column="31"/></name><argument_list pos:line="140" pos:column="31">(<argument><expr><name pos:line="140" pos:column="32">WRITE_TREE_SILENT<pos:position pos:line="140" pos:column="49"/></name></expr></argument>)<pos:position pos:line="140" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="51"/></expr_stmt>
	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><call><name pos:line="141" pos:column="13">write_locked_index<pos:position pos:line="141" pos:column="31"/></name><argument_list pos:line="141" pos:column="31">(<argument><expr><operator pos:line="141" pos:column="32">&amp;<pos:position pos:line="141" pos:column="37"/></operator><name pos:line="141" pos:column="33">the_index<pos:position pos:line="141" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="44">&amp;<pos:position pos:line="141" pos:column="49"/></operator><name pos:line="141" pos:column="45">index_lock<pos:position pos:line="141" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="57">CLOSE_LOCK<pos:position pos:line="141" pos:column="67"/></name></expr></argument>)<pos:position pos:line="141" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="141" pos:column="69"/></condition><then pos:line="141" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="17">die<pos:position pos:line="142" pos:column="20"/></name><argument_list pos:line="142" pos:column="20">(<argument><expr><call><name pos:line="142" pos:column="21">_<pos:position pos:line="142" pos:column="22"/></name><argument_list pos:line="142" pos:column="22">(<argument><expr><literal type="string" pos:line="142" pos:column="23">"unable to write new_index file"<pos:position pos:line="142" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="144" pos:column="9">hold_lock_file_for_update<pos:position pos:line="144" pos:column="34"/></name><argument_list pos:line="144" pos:column="34">(<argument><expr><operator pos:line="144" pos:column="35">&amp;<pos:position pos:line="144" pos:column="40"/></operator><name pos:line="144" pos:column="36">false_lock<pos:position pos:line="144" pos:column="46"/></name></expr></argument>,
				  <argument><expr><call><name pos:line="145" pos:column="35">git_path<pos:position pos:line="145" pos:column="43"/></name><argument_list pos:line="145" pos:column="43">(<argument><expr><literal type="string" pos:line="145" pos:column="44">"next-index-%"<pos:position pos:line="145" pos:column="58"/></literal><name pos:line="145" pos:column="58">PRIuMAX<pos:position pos:line="145" pos:column="65"/></name></expr></argument>,
					   <argument><expr><operator pos:line="146" pos:column="44">(<pos:position pos:line="146" pos:column="45"/></operator><name pos:line="146" pos:column="45">uintmax_t<pos:position pos:line="146" pos:column="54"/></name><operator pos:line="146" pos:column="54">)<pos:position pos:line="146" pos:column="55"/></operator> <call><name pos:line="146" pos:column="56">getpid<pos:position pos:line="146" pos:column="62"/></name><argument_list pos:line="146" pos:column="62">()<pos:position pos:line="146" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="146" pos:column="65"/></argument_list></call></expr></argument>,
				  <argument><expr><name pos:line="147" pos:column="35">LOCK_DIE_ON_ERROR<pos:position pos:line="147" pos:column="52"/></name></expr></argument>)<pos:position pos:line="147" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="149" pos:column="9">create_base_index<pos:position pos:line="149" pos:column="26"/></name><argument_list pos:line="149" pos:column="26">(<argument><expr><name pos:line="149" pos:column="27">current_head<pos:position pos:line="149" pos:column="39"/></name></expr></argument>)<pos:position pos:line="149" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="150" pos:column="9">add_remove_files<pos:position pos:line="150" pos:column="25"/></name><argument_list pos:line="150" pos:column="25">(<argument><expr><operator pos:line="150" pos:column="26">&amp;<pos:position pos:line="150" pos:column="31"/></operator><name pos:line="150" pos:column="27">partial<pos:position pos:line="150" pos:column="34"/></name></expr></argument>)<pos:position pos:line="150" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="151" pos:column="9">refresh_cache<pos:position pos:line="151" pos:column="22"/></name><argument_list pos:line="151" pos:column="22">(<argument><expr><name pos:line="151" pos:column="23">REFRESH_QUIET<pos:position pos:line="151" pos:column="36"/></name></expr></argument>)<pos:position pos:line="151" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="38"/></expr_stmt>

	<if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><call><name pos:line="153" pos:column="13">write_locked_index<pos:position pos:line="153" pos:column="31"/></name><argument_list pos:line="153" pos:column="31">(<argument><expr><operator pos:line="153" pos:column="32">&amp;<pos:position pos:line="153" pos:column="37"/></operator><name pos:line="153" pos:column="33">the_index<pos:position pos:line="153" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="44">&amp;<pos:position pos:line="153" pos:column="49"/></operator><name pos:line="153" pos:column="45">false_lock<pos:position pos:line="153" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="57">CLOSE_LOCK<pos:position pos:line="153" pos:column="67"/></name></expr></argument>)<pos:position pos:line="153" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="153" pos:column="69"/></condition><then pos:line="153" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="154" pos:column="17">die<pos:position pos:line="154" pos:column="20"/></name><argument_list pos:line="154" pos:column="20">(<argument><expr><call><name pos:line="154" pos:column="21">_<pos:position pos:line="154" pos:column="22"/></name><argument_list pos:line="154" pos:column="22">(<argument><expr><literal type="string" pos:line="154" pos:column="23">"unable to write temporary index file"<pos:position pos:line="154" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="154" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="64"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="156" pos:column="9">discard_cache<pos:position pos:line="156" pos:column="22"/></name><argument_list pos:line="156" pos:column="22">()<pos:position pos:line="156" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="157" pos:column="9">ret<pos:position pos:line="157" pos:column="12"/></name> <operator pos:line="157" pos:column="13">=<pos:position pos:line="157" pos:column="14"/></operator> <call><name pos:line="157" pos:column="15">get_lock_file_path<pos:position pos:line="157" pos:column="33"/></name><argument_list pos:line="157" pos:column="33">(<argument><expr><operator pos:line="157" pos:column="34">&amp;<pos:position pos:line="157" pos:column="39"/></operator><name pos:line="157" pos:column="35">false_lock<pos:position pos:line="157" pos:column="45"/></name></expr></argument>)<pos:position pos:line="157" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="158" pos:column="9">read_cache_from<pos:position pos:line="158" pos:column="24"/></name><argument_list pos:line="158" pos:column="24">(<argument><expr><name pos:line="158" pos:column="25">ret<pos:position pos:line="158" pos:column="28"/></name></expr></argument>)<pos:position pos:line="158" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="30"/></expr_stmt>
	<return pos:line="159" pos:column="9">return <expr><name pos:line="159" pos:column="16">ret<pos:position pos:line="159" pos:column="19"/></name></expr>;<pos:position pos:line="159" pos:column="20"/></return>
}<pos:position pos:line="160" pos:column="2"/></block></function></unit>

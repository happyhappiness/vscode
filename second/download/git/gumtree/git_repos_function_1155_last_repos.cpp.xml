<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1155_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_utf8<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><specifier pos:line="1" pos:column="13">const<pos:position pos:line="1" pos:column="18"/></specifier> <name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">text<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">text<pos:position pos:line="3" pos:column="21"/></name></expr>)<pos:position pos:line="3" pos:column="22"/></condition> <block pos:line="3" pos:column="23">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">text<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">==<pos:position pos:line="4" pos:column="29"/></operator> <literal type="char" pos:line="4" pos:column="30">'\n'<pos:position pos:line="4" pos:column="34"/></literal> <operator pos:line="4" pos:column="35">||<pos:position pos:line="4" pos:column="37"/></operator> <operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">text<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">==<pos:position pos:line="4" pos:column="46"/></operator> <literal type="char" pos:line="4" pos:column="47">'\t'<pos:position pos:line="4" pos:column="51"/></literal> <operator pos:line="4" pos:column="52">||<pos:position pos:line="4" pos:column="54"/></operator> <operator pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="56">text<pos:position pos:line="4" pos:column="60"/></name> <operator pos:line="4" pos:column="61">==<pos:position pos:line="4" pos:column="63"/></operator> <literal type="char" pos:line="4" pos:column="64">'\r'<pos:position pos:line="4" pos:column="68"/></literal></expr>)<pos:position pos:line="4" pos:column="69"/></condition><then pos:line="4" pos:column="69"> <block pos:line="4" pos:column="70">{
			<expr_stmt><expr><name pos:line="5" pos:column="25">text<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">++<pos:position pos:line="5" pos:column="31"/></operator></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
			<continue pos:line="6" pos:column="25">continue;<pos:position pos:line="6" pos:column="34"/></continue>
		}<pos:position pos:line="7" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">utf8_width<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="29">text<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">NULL<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">text<pos:position pos:line="9" pos:column="26"/></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></while>
	<return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

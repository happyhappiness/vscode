<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6160_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">init_mparams<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
<cpp:ifdef pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">ifdef<pos:position pos:line="2" pos:column="7"/></cpp:directive> <name pos:line="2" pos:column="8">NEED_GLOBAL_LOCK_INIT<pos:position pos:line="2" pos:column="29"/></name></cpp:ifdef>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">malloc_global_mutex_status<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">&lt;=<pos:position pos:line="3" pos:column="39"/></operator> <literal type="number" pos:line="3" pos:column="37">0<pos:position pos:line="3" pos:column="38"/></literal></expr>)<pos:position pos:line="3" pos:column="39"/></condition><then pos:line="3" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="5">init_malloc_global_mutex<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="32"/></expr_stmt></block></then></if>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">ACQUIRE_MALLOC_GLOBAL_LOCK<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">()<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">mparams<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">magic<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">magic<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">psize<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">gsize<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

<cpp:ifndef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifndef<pos:position pos:line="13" pos:column="8"/></cpp:directive> <name pos:line="13" pos:column="9">WIN32<pos:position pos:line="13" pos:column="14"/></name></cpp:ifndef>
    <expr_stmt><expr><name pos:line="14" pos:column="5">psize<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">malloc_getpagesize<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">gsize<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><ternary><condition><expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">DEFAULT_GRANULARITY<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">!=<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="38">0<pos:position pos:line="15" pos:column="39"/></literal><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator></expr>?<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <expr><name pos:line="15" pos:column="42">DEFAULT_GRANULARITY<pos:position pos:line="15" pos:column="61"/></name></expr> <pos:position pos:line="15" pos:column="62"/></then><else pos:line="15" pos:column="62">: <expr><name pos:line="15" pos:column="64">psize<pos:position pos:line="15" pos:column="69"/></name></expr></else></ternary><operator pos:line="15" pos:column="69">)<pos:position pos:line="15" pos:column="70"/></operator></expr>;<pos:position pos:line="15" pos:column="71"/></expr_stmt>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="16" pos:column="7">/* WIN32 */</comment>
    <block pos:line="17" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">SYSTEM_INFO<pos:position pos:line="18" pos:column="18"/></name></type> <name pos:line="18" pos:column="19">system_info<pos:position pos:line="18" pos:column="30"/></name></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">GetSystemInfo<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="22">system_info<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">psize<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name><name pos:line="20" pos:column="15">system_info<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">.<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">dwPageSize<pos:position pos:line="20" pos:column="37"/></name></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">gsize<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <operator pos:line="21" pos:column="15">(<pos:position pos:line="21" pos:column="16"/></operator><ternary><condition><expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">DEFAULT_GRANULARITY<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">!=<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="40">0<pos:position pos:line="21" pos:column="41"/></literal><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator></expr>?<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43">
	       <expr><name pos:line="22" pos:column="16">DEFAULT_GRANULARITY<pos:position pos:line="22" pos:column="35"/></name></expr> <pos:position pos:line="22" pos:column="36"/></then><else pos:line="22" pos:column="36">: <expr><name><name pos:line="22" pos:column="38">system_info<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">.<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">dwAllocationGranularity<pos:position pos:line="22" pos:column="73"/></name></name></expr></else></ternary><operator pos:line="22" pos:column="73">)<pos:position pos:line="22" pos:column="74"/></operator></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="24" pos:column="8">/* WIN32 */</comment>

    <comment type="block" pos:line="26" pos:column="5">/* Sanity-check configuration:
       size_t must be unsigned and as wide as pointer type.
       ints must be at least 4 bytes.
       alignment must be at least 8.
       Alignment, min chunk size, and page size must all be powers of 2.
    */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><sizeof pos:line="32" pos:column="10">sizeof<argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">size_t<pos:position pos:line="32" pos:column="23"/></name></expr></argument>)<pos:position pos:line="32" pos:column="24"/></argument_list></sizeof> <operator pos:line="32" pos:column="25">!=<pos:position pos:line="32" pos:column="27"/></operator> <sizeof pos:line="32" pos:column="28">sizeof<argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">char<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">*<pos:position pos:line="32" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></sizeof><operator pos:line="32" pos:column="41">)<pos:position pos:line="32" pos:column="42"/></operator> <operator pos:line="32" pos:column="43">||<pos:position pos:line="32" pos:column="45"/></operator>
	<operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">MAX_SIZE_T<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">&lt;<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="23">MIN_CHUNK_SIZE<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">)<pos:position pos:line="33" pos:column="38"/></operator>  <operator pos:line="33" pos:column="40">||<pos:position pos:line="33" pos:column="42"/></operator>
	<operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><sizeof pos:line="34" pos:column="10">sizeof<argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">int<pos:position pos:line="34" pos:column="20"/></name></expr></argument>)<pos:position pos:line="34" pos:column="21"/></argument_list></sizeof> <operator pos:line="34" pos:column="22">&lt;<pos:position pos:line="34" pos:column="26"/></operator> <literal type="number" pos:line="34" pos:column="24">4<pos:position pos:line="34" pos:column="25"/></literal><operator pos:line="34" pos:column="25">)<pos:position pos:line="34" pos:column="26"/></operator>  <operator pos:line="34" pos:column="28">||<pos:position pos:line="34" pos:column="30"/></operator>
	<operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">MALLOC_ALIGNMENT<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&lt;<pos:position pos:line="35" pos:column="31"/></operator> <operator pos:line="35" pos:column="29">(<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">size_t<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">)<pos:position pos:line="35" pos:column="37"/></operator><literal type="number" pos:line="35" pos:column="37">8U<pos:position pos:line="35" pos:column="39"/></literal><operator pos:line="35" pos:column="39">)<pos:position pos:line="35" pos:column="40"/></operator> <operator pos:line="35" pos:column="41">||<pos:position pos:line="35" pos:column="43"/></operator>
	<operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">MALLOC_ALIGNMENT<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&amp;<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="30">(<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">MALLOC_ALIGNMENT<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="48">SIZE_T_ONE<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">)<pos:position pos:line="36" pos:column="59"/></operator><operator pos:line="36" pos:column="59">)<pos:position pos:line="36" pos:column="60"/></operator> <operator pos:line="36" pos:column="61">!=<pos:position pos:line="36" pos:column="63"/></operator> <literal type="number" pos:line="36" pos:column="64">0<pos:position pos:line="36" pos:column="65"/></literal><operator pos:line="36" pos:column="65">)<pos:position pos:line="36" pos:column="66"/></operator> <operator pos:line="36" pos:column="67">||<pos:position pos:line="36" pos:column="69"/></operator>
	<operator pos:line="37" pos:column="9">(<pos:position pos:line="37" pos:column="10"/></operator><operator pos:line="37" pos:column="10">(<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">MCHUNK_SIZE<pos:position pos:line="37" pos:column="22"/></name>      <operator pos:line="37" pos:column="28">&amp;<pos:position pos:line="37" pos:column="33"/></operator> <operator pos:line="37" pos:column="30">(<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">MCHUNK_SIZE<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">SIZE_T_ONE<pos:position pos:line="37" pos:column="53"/></name><operator pos:line="37" pos:column="53">)<pos:position pos:line="37" pos:column="54"/></operator><operator pos:line="37" pos:column="54">)<pos:position pos:line="37" pos:column="55"/></operator>      <operator pos:line="37" pos:column="61">!=<pos:position pos:line="37" pos:column="63"/></operator> <literal type="number" pos:line="37" pos:column="64">0<pos:position pos:line="37" pos:column="65"/></literal><operator pos:line="37" pos:column="65">)<pos:position pos:line="37" pos:column="66"/></operator> <operator pos:line="37" pos:column="67">||<pos:position pos:line="37" pos:column="69"/></operator>
	<operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">gsize<pos:position pos:line="38" pos:column="16"/></name>            <operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator> <operator pos:line="38" pos:column="30">(<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">gsize<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="37">SIZE_T_ONE<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">)<pos:position pos:line="38" pos:column="48"/></operator><operator pos:line="38" pos:column="48">)<pos:position pos:line="38" pos:column="49"/></operator>            <operator pos:line="38" pos:column="61">!=<pos:position pos:line="38" pos:column="63"/></operator> <literal type="number" pos:line="38" pos:column="64">0<pos:position pos:line="38" pos:column="65"/></literal><operator pos:line="38" pos:column="65">)<pos:position pos:line="38" pos:column="66"/></operator> <operator pos:line="38" pos:column="67">||<pos:position pos:line="38" pos:column="69"/></operator>
	<operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">psize<pos:position pos:line="39" pos:column="16"/></name>            <operator pos:line="39" pos:column="28">&amp;<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="30">(<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">psize<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="37">SIZE_T_ONE<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">)<pos:position pos:line="39" pos:column="48"/></operator><operator pos:line="39" pos:column="48">)<pos:position pos:line="39" pos:column="49"/></operator>            <operator pos:line="39" pos:column="61">!=<pos:position pos:line="39" pos:column="63"/></operator> <literal type="number" pos:line="39" pos:column="64">0<pos:position pos:line="39" pos:column="65"/></literal><operator pos:line="39" pos:column="65">)<pos:position pos:line="39" pos:column="66"/></operator></expr>)<pos:position pos:line="39" pos:column="67"/></condition><then pos:line="39" pos:column="67">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">ABORT<pos:position pos:line="40" pos:column="12"/></name></expr>;<pos:position pos:line="40" pos:column="13"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">mparams<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">.<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">granularity<pos:position pos:line="42" pos:column="24"/></name></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">gsize<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">mparams<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">.<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">page_size<pos:position pos:line="43" pos:column="22"/></name></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">psize<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">mparams<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">.<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">mmap_threshold<pos:position pos:line="44" pos:column="27"/></name></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">DEFAULT_MMAP_THRESHOLD<pos:position pos:line="44" pos:column="52"/></name></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">mparams<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">.<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">trim_threshold<pos:position pos:line="45" pos:column="27"/></name></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <name pos:line="45" pos:column="30">DEFAULT_TRIM_THRESHOLD<pos:position pos:line="45" pos:column="52"/></name></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><name pos:line="46" pos:column="5">MORECORE_CONTIGUOUS<pos:position pos:line="46" pos:column="24"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">mparams<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">.<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">default_mflags<pos:position pos:line="47" pos:column="27"/></name></name> <operator pos:line="47" pos:column="28">=<pos:position pos:line="47" pos:column="29"/></operator> <name pos:line="47" pos:column="30">USE_LOCK_BIT<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">|<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">USE_MMAP_BIT<pos:position pos:line="47" pos:column="55"/></name></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else<pos:position pos:line="48" pos:column="6"/></cpp:directive></cpp:else>  <comment type="block" pos:line="48" pos:column="8">/* MORECORE_CONTIGUOUS */</comment>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">mparams<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">.<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">default_mflags<pos:position pos:line="49" pos:column="27"/></name></name> <operator pos:line="49" pos:column="28">=<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">USE_LOCK_BIT<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">|<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="43">USE_MMAP_BIT<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">|<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="56">USE_NONCONTIGUOUS_BIT<pos:position pos:line="49" pos:column="77"/></name></expr>;<pos:position pos:line="49" pos:column="78"/></expr_stmt>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="50" pos:column="8">/* MORECORE_CONTIGUOUS */</comment>

<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><operator pos:line="52" pos:column="5">!<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">ONLY_MSPACES<pos:position pos:line="52" pos:column="18"/></name></expr></cpp:if>
    <comment type="block" pos:line="53" pos:column="5">/* Set up lock for main malloc area */</comment>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">gm<pos:position pos:line="54" pos:column="7"/></name><operator pos:line="54" pos:column="7">-&gt;<pos:position pos:line="54" pos:column="12"/></operator><name pos:line="54" pos:column="9">mflags<pos:position pos:line="54" pos:column="15"/></name></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <name><name pos:line="54" pos:column="18">mparams<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">.<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">default_mflags<pos:position pos:line="54" pos:column="40"/></name></name></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">INITIAL_LOCK<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><operator pos:line="55" pos:column="18">&amp;<pos:position pos:line="55" pos:column="23"/></operator><name><name pos:line="55" pos:column="19">gm<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">mutex<pos:position pos:line="55" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><operator pos:line="58" pos:column="5">(<pos:position pos:line="58" pos:column="6"/></operator><name pos:line="58" pos:column="6">FOOTERS<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">&amp;&amp;<pos:position pos:line="58" pos:column="24"/></operator> <operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">INSECURE<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">)<pos:position pos:line="58" pos:column="27"/></operator></expr></cpp:if>
    <block pos:line="59" pos:column="5">{
<cpp:if pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">if<pos:position pos:line="60" pos:column="4"/></cpp:directive> <expr><name pos:line="60" pos:column="5">USE_DEV_RANDOM<pos:position pos:line="60" pos:column="19"/></name></expr></cpp:if>
      <decl_stmt><decl><type><name pos:line="61" pos:column="7">int<pos:position pos:line="61" pos:column="10"/></name></type> <name pos:line="61" pos:column="11">fd<pos:position pos:line="61" pos:column="13"/></name></decl>;<pos:position pos:line="61" pos:column="14"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="62" pos:column="7">unsigned<pos:position pos:line="62" pos:column="15"/></name> <name pos:line="62" pos:column="16">char<pos:position pos:line="62" pos:column="20"/></name></type> <name><name pos:line="62" pos:column="21">buf<pos:position pos:line="62" pos:column="24"/></name><index pos:line="62" pos:column="24">[<expr><sizeof pos:line="62" pos:column="25">sizeof<argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">size_t<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></sizeof></expr>]<pos:position pos:line="62" pos:column="40"/></index></name></decl>;<pos:position pos:line="62" pos:column="41"/></decl_stmt>
      <comment type="block" pos:line="63" pos:column="7">/* Try to use /dev/urandom, else fall back on using time */</comment>
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><operator pos:line="64" pos:column="11">(<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="12">fd<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <call><name pos:line="64" pos:column="17">open<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><literal type="string" pos:line="64" pos:column="22">"/dev/urandom"<pos:position pos:line="64" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="38">O_RDONLY<pos:position pos:line="64" pos:column="46"/></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call><operator pos:line="64" pos:column="47">)<pos:position pos:line="64" pos:column="48"/></operator> <operator pos:line="64" pos:column="49">&gt;=<pos:position pos:line="64" pos:column="54"/></operator> <literal type="number" pos:line="64" pos:column="52">0<pos:position pos:line="64" pos:column="53"/></literal> <operator pos:line="64" pos:column="54">&amp;&amp;<pos:position pos:line="64" pos:column="64"/></operator>
	  <call><name pos:line="65" pos:column="11">read<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><name pos:line="65" pos:column="16">fd<pos:position pos:line="65" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="20">buf<pos:position pos:line="65" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="25">sizeof<argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">buf<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="37"/></argument_list></call> <operator pos:line="65" pos:column="38">==<pos:position pos:line="65" pos:column="40"/></operator> <sizeof pos:line="65" pos:column="41">sizeof<argument_list pos:line="65" pos:column="47">(<argument><expr><name pos:line="65" pos:column="48">buf<pos:position pos:line="65" pos:column="51"/></name></expr></argument>)<pos:position pos:line="65" pos:column="52"/></argument_list></sizeof></expr>)<pos:position pos:line="65" pos:column="53"/></condition><then pos:line="65" pos:column="53"> <block pos:line="65" pos:column="54">{
	<expr_stmt><expr><name pos:line="66" pos:column="9">magic<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><operator pos:line="66" pos:column="18">(<pos:position pos:line="66" pos:column="19"/></operator><operator pos:line="66" pos:column="19">(<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">size_t<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">*<pos:position pos:line="66" pos:column="28"/></operator><operator pos:line="66" pos:column="28">)<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">buf<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">)<pos:position pos:line="66" pos:column="34"/></operator></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">close<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><name pos:line="67" pos:column="15">fd<pos:position pos:line="67" pos:column="17"/></name></expr></argument>)<pos:position pos:line="67" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="19"/></expr_stmt>
      }<pos:position pos:line="68" pos:column="8"/></block></then>
      <else pos:line="69" pos:column="7">else
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="70" pos:column="8">/* USE_DEV_RANDOM */</comment>
<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">WIN32<pos:position pos:line="71" pos:column="13"/></name></cpp:ifdef>
	<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="9">magic<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <call pos:line="72" pos:column="17">(<name pos:line="72" pos:column="18">size_t<pos:position pos:line="72" pos:column="24"/></name>)<argument_list pos:line="72" pos:column="25">(<argument><expr><call><name pos:line="72" pos:column="26">GetTickCount<pos:position pos:line="72" pos:column="38"/></name><argument_list pos:line="72" pos:column="38">()<pos:position pos:line="72" pos:column="40"/></argument_list></call> <operator pos:line="72" pos:column="41">^<pos:position pos:line="72" pos:column="42"/></operator> <operator pos:line="72" pos:column="43">(<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="44">size_t<pos:position pos:line="72" pos:column="50"/></name><operator pos:line="72" pos:column="50">)<pos:position pos:line="72" pos:column="51"/></operator><literal type="number" pos:line="72" pos:column="51">0x55555555U<pos:position pos:line="72" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="64"/></expr_stmt></block></else></if>
<cpp:else pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">else<pos:position pos:line="73" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="74" pos:column="7">magic<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <call pos:line="74" pos:column="15">(<name pos:line="74" pos:column="16">size_t<pos:position pos:line="74" pos:column="22"/></name>)<argument_list pos:line="74" pos:column="23">(<argument><expr><call><name pos:line="74" pos:column="24">time<pos:position pos:line="74" pos:column="28"/></name><argument_list pos:line="74" pos:column="28">(<argument><expr><literal type="number" pos:line="74" pos:column="29">0<pos:position pos:line="74" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="31"/></argument_list></call> <operator pos:line="74" pos:column="32">^<pos:position pos:line="74" pos:column="33"/></operator> <operator pos:line="74" pos:column="34">(<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">size_t<pos:position pos:line="74" pos:column="41"/></name><operator pos:line="74" pos:column="41">)<pos:position pos:line="74" pos:column="42"/></operator><literal type="number" pos:line="74" pos:column="42">0x55555555U<pos:position pos:line="74" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name pos:line="76" pos:column="7">magic<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">|=<pos:position pos:line="76" pos:column="15"/></operator> <operator pos:line="76" pos:column="16">(<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">size_t<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">)<pos:position pos:line="76" pos:column="24"/></operator><literal type="number" pos:line="76" pos:column="24">8U<pos:position pos:line="76" pos:column="26"/></literal></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>    <comment type="block" pos:line="76" pos:column="31">/* ensure nonzero */</comment>
      <expr_stmt><expr><name pos:line="77" pos:column="7">magic<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">&amp;=<pos:position pos:line="77" pos:column="19"/></operator> <operator pos:line="77" pos:column="16">~<pos:position pos:line="77" pos:column="17"/></operator><operator pos:line="77" pos:column="17">(<pos:position pos:line="77" pos:column="18"/></operator><name pos:line="77" pos:column="18">size_t<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">)<pos:position pos:line="77" pos:column="25"/></operator><literal type="number" pos:line="77" pos:column="25">7U<pos:position pos:line="77" pos:column="27"/></literal></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt>   <comment type="block" pos:line="77" pos:column="31">/* improve chances of fault for bad values */</comment>
    }<pos:position pos:line="78" pos:column="6"/></block>
<cpp:else pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">else<pos:position pos:line="79" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="79" pos:column="7">/* (FOOTERS &amp;&amp; !INSECURE) */</comment>
    <expr_stmt><expr><name pos:line="80" pos:column="5">magic<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">=<pos:position pos:line="80" pos:column="12"/></operator> <operator pos:line="80" pos:column="13">(<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="14">size_t<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">)<pos:position pos:line="80" pos:column="21"/></operator><literal type="number" pos:line="80" pos:column="21">0x58585858U<pos:position pos:line="80" pos:column="32"/></literal></expr>;<pos:position pos:line="80" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="81" pos:column="8">/* (FOOTERS &amp;&amp; !INSECURE) */</comment>

    <expr_stmt><expr><name><name pos:line="83" pos:column="5">mparams<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">.<pos:position pos:line="83" pos:column="13"/></operator><name pos:line="83" pos:column="13">magic<pos:position pos:line="83" pos:column="18"/></name></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <name pos:line="83" pos:column="21">magic<pos:position pos:line="83" pos:column="26"/></name></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="86" pos:column="3">RELEASE_MALLOC_GLOBAL_LOCK<pos:position pos:line="86" pos:column="29"/></name><argument_list pos:line="86" pos:column="29">()<pos:position pos:line="86" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="32"/></expr_stmt>
  <return pos:line="87" pos:column="3">return <expr><literal type="number" pos:line="87" pos:column="10">1<pos:position pos:line="87" pos:column="11"/></literal></expr>;<pos:position pos:line="87" pos:column="12"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

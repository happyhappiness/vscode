<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6592_git-2.10.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">WCHAR<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">utf8_to_utf16_dup<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">str<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">wlen<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">MultiByteToWideChar<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name pos:line="3" pos:column="40">CP_UTF8<pos:position pos:line="3" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="49">0<pos:position pos:line="3" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="52">str<pos:position pos:line="3" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="57">-<pos:position pos:line="3" pos:column="58"/></operator><literal type="number" pos:line="3" pos:column="58">1<pos:position pos:line="3" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="61">NULL<pos:position pos:line="3" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="67">0<pos:position pos:line="3" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">WCHAR<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">wstr<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">xmalloc<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">(<argument><expr><sizeof pos:line="4" pos:column="31">sizeof<argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">WCHAR<pos:position pos:line="4" pos:column="43"/></name></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></sizeof> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator> <name pos:line="4" pos:column="47">wlen<pos:position pos:line="4" pos:column="51"/></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">MultiByteToWideChar<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">CP_UTF8<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="38">0<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="41">str<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="46">-<pos:position pos:line="5" pos:column="47"/></operator><literal type="number" pos:line="5" pos:column="47">1<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="50">wstr<pos:position pos:line="5" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="56">wlen<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="62"/></expr_stmt>
	<return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">wstr<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

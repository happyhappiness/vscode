<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2589_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_commit_msg<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">mailinfo<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">mi<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">strbuf<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">line<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">assert<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><operator pos:line="3" pos:column="16">!<pos:position pos:line="3" pos:column="17"/></operator><name><name pos:line="3" pos:column="17">mi<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">-&gt;<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="21">filter_stage<pos:position pos:line="3" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="35"/></expr_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">mi<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">header_stage<pos:position pos:line="5" pos:column="29"/></name></name></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30"> <block pos:line="5" pos:column="31">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><name><name pos:line="6" pos:column="22">line<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">len<pos:position pos:line="6" pos:column="31"/></name></name> <operator pos:line="6" pos:column="32">||<pos:position pos:line="6" pos:column="34"/></operator> <operator pos:line="6" pos:column="35">(<pos:position pos:line="6" pos:column="36"/></operator><name><name pos:line="6" pos:column="36">line<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">len<pos:position pos:line="6" pos:column="45"/></name></name> <operator pos:line="6" pos:column="46">==<pos:position pos:line="6" pos:column="48"/></operator> <literal type="number" pos:line="6" pos:column="49">1<pos:position pos:line="6" pos:column="50"/></literal> <operator pos:line="6" pos:column="51">&amp;&amp;<pos:position pos:line="6" pos:column="61"/></operator> <name><name pos:line="6" pos:column="54">line<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">buf<pos:position pos:line="6" pos:column="63"/></name><index pos:line="6" pos:column="63">[<expr><literal type="number" pos:line="6" pos:column="64">0<pos:position pos:line="6" pos:column="65"/></literal></expr>]<pos:position pos:line="6" pos:column="66"/></index></name> <operator pos:line="6" pos:column="67">==<pos:position pos:line="6" pos:column="69"/></operator> <literal type="char" pos:line="6" pos:column="70">'\n'<pos:position pos:line="6" pos:column="74"/></literal><operator pos:line="6" pos:column="74">)<pos:position pos:line="6" pos:column="75"/></operator></expr>)<pos:position pos:line="6" pos:column="76"/></condition><then pos:line="6" pos:column="76"> <block pos:line="6" pos:column="77">{
			<if pos:line="7" pos:column="25">if <condition pos:line="7" pos:column="28">(<expr><name><name pos:line="7" pos:column="29">mi<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">inbody_header_accum<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">.<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="53">len<pos:position pos:line="7" pos:column="56"/></name></name></expr>)<pos:position pos:line="7" pos:column="57"/></condition><then pos:line="7" pos:column="57"> <block pos:line="7" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="8" pos:column="33">flush_inbody_header_accum<pos:position pos:line="8" pos:column="58"/></name><argument_list pos:line="8" pos:column="58">(<argument><expr><name pos:line="8" pos:column="59">mi<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="9" pos:column="33">mi<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">header_stage<pos:position pos:line="9" pos:column="49"/></name></name> <operator pos:line="9" pos:column="50">=<pos:position pos:line="9" pos:column="51"/></operator> <literal type="number" pos:line="9" pos:column="52">0<pos:position pos:line="9" pos:column="53"/></literal></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="10" pos:column="26"/></block></then></if>
			<return pos:line="11" pos:column="25">return <expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></return>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">mi<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">use_inbody_headers<pos:position pos:line="15" pos:column="35"/></name></name> <operator pos:line="15" pos:column="36">&amp;&amp;<pos:position pos:line="15" pos:column="46"/></operator> <name><name pos:line="15" pos:column="39">mi<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">header_stage<pos:position pos:line="15" pos:column="55"/></name></name></expr>)<pos:position pos:line="15" pos:column="56"/></condition><then pos:line="15" pos:column="56"> <block pos:line="15" pos:column="57">{
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">mi<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">header_stage<pos:position pos:line="16" pos:column="33"/></name></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <call><name pos:line="16" pos:column="36">check_inbody_header<pos:position pos:line="16" pos:column="55"/></name><argument_list pos:line="16" pos:column="55">(<argument><expr><name pos:line="16" pos:column="56">mi<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">line<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">mi<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">header_stage<pos:position pos:line="17" pos:column="37"/></name></name></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else
		<comment type="block" pos:line="20" pos:column="17">/* Only trim the first (blank) line of the commit message
		 * when ignoring in-body headers.
		 */</comment>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">mi<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">header_stage<pos:position pos:line="23" pos:column="33"/></name></name> <operator pos:line="23" pos:column="34">=<pos:position pos:line="23" pos:column="35"/></operator> <literal type="number" pos:line="23" pos:column="36">0<pos:position pos:line="23" pos:column="37"/></literal></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="25" pos:column="9">/* normalize the log message to UTF-8. */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">convert_to_utf8<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">mi<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="33">line<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="39">mi<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">charset<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">.<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">buf<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="56"/></condition><then pos:line="26" pos:column="56">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="27" pos:column="27">/* mi-&gt;input_error already set */</comment>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">mi<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">use_scissors<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">&amp;&amp;<pos:position pos:line="29" pos:column="40"/></operator> <call><name pos:line="29" pos:column="33">is_scissors_line<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name><name pos:line="29" pos:column="50">line<pos:position pos:line="29" pos:column="54"/></name><operator pos:line="29" pos:column="54">-&gt;<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="56">buf<pos:position pos:line="29" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="61"/></condition><then pos:line="29" pos:column="61"> <block pos:line="29" pos:column="62">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">int<pos:position pos:line="30" pos:column="20"/></name></type> <name pos:line="30" pos:column="21">i<pos:position pos:line="30" pos:column="22"/></name></decl>;<pos:position pos:line="30" pos:column="23"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="32" pos:column="17">strbuf_setlen<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name><name pos:line="32" pos:column="32">mi<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">log_message<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="49">0<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">mi<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">header_stage<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <literal type="number" pos:line="33" pos:column="36">1<pos:position pos:line="33" pos:column="37"/></literal></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>

		<comment type="block" pos:line="35" pos:column="17">/*
		 * We may have already read "secondary headers"; purge
		 * them to give ourselves a clean restart.
		 */</comment>
		<for pos:line="39" pos:column="17">for <control pos:line="39" pos:column="21">(<init><expr><name pos:line="39" pos:column="22">i<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></init> <condition><expr><name><name pos:line="39" pos:column="29">header<pos:position pos:line="39" pos:column="35"/></name><index pos:line="39" pos:column="35">[<expr><name pos:line="39" pos:column="36">i<pos:position pos:line="39" pos:column="37"/></name></expr>]<pos:position pos:line="39" pos:column="38"/></index></name></expr>;<pos:position pos:line="39" pos:column="39"/></condition> <incr><expr><name pos:line="39" pos:column="40">i<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">++<pos:position pos:line="39" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="44"/></control> <block pos:line="39" pos:column="45">{
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name><name pos:line="40" pos:column="29">mi<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">s_hdr_data<pos:position pos:line="40" pos:column="43"/></name><index pos:line="40" pos:column="43">[<expr><name pos:line="40" pos:column="44">i<pos:position pos:line="40" pos:column="45"/></name></expr>]<pos:position pos:line="40" pos:column="46"/></index></name></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="33">strbuf_release<pos:position pos:line="41" pos:column="47"/></name><argument_list pos:line="41" pos:column="47">(<argument><expr><name><name pos:line="41" pos:column="48">mi<pos:position pos:line="41" pos:column="50"/></name><operator pos:line="41" pos:column="50">-&gt;<pos:position pos:line="41" pos:column="55"/></operator><name pos:line="41" pos:column="52">s_hdr_data<pos:position pos:line="41" pos:column="62"/></name><index pos:line="41" pos:column="62">[<expr><name pos:line="41" pos:column="63">i<pos:position pos:line="41" pos:column="64"/></name></expr>]<pos:position pos:line="41" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="42" pos:column="25">mi<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">s_hdr_data<pos:position pos:line="42" pos:column="39"/></name><index pos:line="42" pos:column="39">[<expr><name pos:line="42" pos:column="40">i<pos:position pos:line="42" pos:column="41"/></name></expr>]<pos:position pos:line="42" pos:column="42"/></index></name> <operator pos:line="42" pos:column="43">=<pos:position pos:line="42" pos:column="44"/></operator> <name pos:line="42" pos:column="45">NULL<pos:position pos:line="42" pos:column="49"/></name></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></for>
		<return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">patchbreak<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">line<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="30"/></condition><then pos:line="47" pos:column="30"> <block pos:line="47" pos:column="31">{
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name><name pos:line="48" pos:column="21">mi<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">message_id<pos:position pos:line="48" pos:column="35"/></name></name></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="25">strbuf_addf<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><operator pos:line="49" pos:column="37">&amp;<pos:position pos:line="49" pos:column="42"/></operator><name><name pos:line="49" pos:column="38">mi<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-&gt;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="42">log_message<pos:position pos:line="49" pos:column="53"/></name></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="50" pos:column="37">"Message-Id: %s\n"<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="57">mi<pos:position pos:line="50" pos:column="59"/></name><operator pos:line="50" pos:column="59">-&gt;<pos:position pos:line="50" pos:column="64"/></operator><name pos:line="50" pos:column="61">message_id<pos:position pos:line="50" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt></block></then></if>
		<return pos:line="51" pos:column="17">return <expr><literal type="number" pos:line="51" pos:column="24">1<pos:position pos:line="51" pos:column="25"/></literal></expr>;<pos:position pos:line="51" pos:column="26"/></return>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="54" pos:column="9">strbuf_addbuf<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><operator pos:line="54" pos:column="23">&amp;<pos:position pos:line="54" pos:column="28"/></operator><name><name pos:line="54" pos:column="24">mi<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">log_message<pos:position pos:line="54" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="41">line<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
	<return pos:line="55" pos:column="9">return <expr><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

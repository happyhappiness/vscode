<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5332_git-2.7.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_prune_packed<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">argc<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">prefix<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">opts<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><ternary><condition><expr><call><name pos:line="3" pos:column="20">isatty<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><literal type="number" pos:line="3" pos:column="27">2<pos:position pos:line="3" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="29"/></argument_list></call></expr> ?<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <expr><name pos:line="3" pos:column="32">PRUNE_PACKED_VERBOSE<pos:position pos:line="3" pos:column="52"/></name></expr> <pos:position pos:line="3" pos:column="53"/></then><else pos:line="3" pos:column="53">: <expr><literal type="number" pos:line="3" pos:column="55">0<pos:position pos:line="3" pos:column="56"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">option<pos:position pos:line="4" pos:column="28"/></name></name></type> <name><name pos:line="4" pos:column="29">prune_packed_options<pos:position pos:line="4" pos:column="49"/></name><index pos:line="4" pos:column="49">[]<pos:position pos:line="4" pos:column="51"/></index></name> <init pos:line="4" pos:column="52">= <expr><block pos:line="4" pos:column="54">{
		<expr><call><name pos:line="5" pos:column="17">OPT_BIT<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><literal type="char" pos:line="5" pos:column="25">'n'<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="30">"dry-run"<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="41">&amp;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="42">opts<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="48">N_<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><literal type="string" pos:line="5" pos:column="51">"dry run"<pos:position pos:line="5" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="6" pos:column="25">PRUNE_PACKED_DRY_RUN<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>,
		<expr><call><name pos:line="7" pos:column="17">OPT_NEGBIT<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="char" pos:line="7" pos:column="28">'q'<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"quiet"<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="42">&amp;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="43">opts<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="49">N_<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">(<argument><expr><literal type="string" pos:line="7" pos:column="52">"be quiet"<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr></argument>,
			   <argument><expr><name pos:line="8" pos:column="28">PRUNE_PACKED_VERBOSE<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>,
		<macro><name pos:line="9" pos:column="17">OPT_END<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">()<pos:position pos:line="9" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="10" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">argc<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">parse_options<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">argc<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">argv<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">prefix<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">prune_packed_options<pos:position pos:line="12" pos:column="70"/></name></expr></argument>,
			     <argument><expr><name pos:line="13" pos:column="30">prune_packed_usage<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="50">0<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">prune_packed_objects<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">opts<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

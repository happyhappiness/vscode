<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_238_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">load_bitmap_header<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">bitmap_index<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">index<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">bitmap_disk_header<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">header<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><operator pos:line="3" pos:column="45">(<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">void<pos:position pos:line="3" pos:column="50"/></name> <operator pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></operator><operator pos:line="3" pos:column="52">)<pos:position pos:line="3" pos:column="53"/></operator><name><name pos:line="3" pos:column="53">index<pos:position pos:line="3" pos:column="58"/></name><operator pos:line="3" pos:column="58">-&gt;<pos:position pos:line="3" pos:column="63"/></operator><name pos:line="3" pos:column="60">map<pos:position pos:line="3" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">index<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">map_size<pos:position pos:line="5" pos:column="28"/></name></name> <operator pos:line="5" pos:column="29">&lt;<pos:position pos:line="5" pos:column="33"/></operator> <sizeof pos:line="5" pos:column="31">sizeof<argument_list pos:line="5" pos:column="37">(<argument><expr><operator pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">header<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></sizeof> <operator pos:line="5" pos:column="47">+<pos:position pos:line="5" pos:column="48"/></operator> <literal type="number" pos:line="5" pos:column="49">20<pos:position pos:line="5" pos:column="51"/></literal></expr>)<pos:position pos:line="5" pos:column="52"/></condition><then pos:line="5" pos:column="52">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><call><name pos:line="6" pos:column="24">error<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><literal type="string" pos:line="6" pos:column="30">"Corrupted bitmap index (missing header data)"<pos:position pos:line="6" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="78"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">memcmp<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name><name pos:line="8" pos:column="20">header<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">magic<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">BITMAP_IDX_SIGNATURE<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="57">sizeof<argument_list pos:line="8" pos:column="63">(<argument><expr><name pos:line="8" pos:column="64">BITMAP_IDX_SIGNATURE<pos:position pos:line="8" pos:column="84"/></name></expr></argument>)<pos:position pos:line="8" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call> <operator pos:line="8" pos:column="87">!=<pos:position pos:line="8" pos:column="89"/></operator> <literal type="number" pos:line="8" pos:column="90">0<pos:position pos:line="8" pos:column="91"/></literal></expr>)<pos:position pos:line="8" pos:column="92"/></condition><then pos:line="8" pos:column="92">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">error<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><literal type="string" pos:line="9" pos:column="30">"Corrupted bitmap index file (wrong header)"<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">index<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">version<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <call><name pos:line="11" pos:column="26">ntohs<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">header<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">version<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">index<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">version<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">!=<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="31">1<pos:position pos:line="12" pos:column="32"/></literal></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><call><name pos:line="13" pos:column="24">error<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><literal type="string" pos:line="13" pos:column="30">"Unsupported version for bitmap index file (%d)"<pos:position pos:line="13" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="80">index<pos:position pos:line="13" pos:column="85"/></name><operator pos:line="13" pos:column="85">-&gt;<pos:position pos:line="13" pos:column="90"/></operator><name pos:line="13" pos:column="87">version<pos:position pos:line="13" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="96"/></return></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* Parse known bitmap format options */</comment>
	<block pos:line="16" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">uint32_t<pos:position pos:line="17" pos:column="25"/></name></type> <name pos:line="17" pos:column="26">flags<pos:position pos:line="17" pos:column="31"/></name> <init pos:line="17" pos:column="32">= <expr><call><name pos:line="17" pos:column="34">ntohs<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name><name pos:line="17" pos:column="40">header<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">options<pos:position pos:line="17" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="57"/></decl_stmt>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">flags<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="30">BITMAP_OPT_FULL_DAG<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">)<pos:position pos:line="19" pos:column="50"/></operator> <operator pos:line="19" pos:column="51">==<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="54">0<pos:position pos:line="19" pos:column="55"/></literal></expr>)<pos:position pos:line="19" pos:column="56"/></condition><then pos:line="19" pos:column="56">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><call><name pos:line="20" pos:column="32">error<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><literal type="string" pos:line="20" pos:column="38">"Unsupported options for bitmap index file "<pos:position pos:line="20" pos:column="82"/></literal>
				<literal type="string" pos:line="21" pos:column="33">"(Git requires BITMAP_OPT_FULL_DAG)"<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></return></block></then></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">flags<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">&amp;<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="29">BITMAP_OPT_HASH_CACHE<pos:position pos:line="23" pos:column="50"/></name></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51"> <block pos:line="23" pos:column="52">{
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">unsigned<pos:position pos:line="24" pos:column="33"/></name> <name pos:line="24" pos:column="34">char<pos:position pos:line="24" pos:column="38"/></name> <modifier pos:line="24" pos:column="39">*<pos:position pos:line="24" pos:column="40"/></modifier></type><name pos:line="24" pos:column="40">end<pos:position pos:line="24" pos:column="43"/></name> <init pos:line="24" pos:column="44">= <expr><name><name pos:line="24" pos:column="46">index<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">map<pos:position pos:line="24" pos:column="56"/></name></name> <operator pos:line="24" pos:column="57">+<pos:position pos:line="24" pos:column="58"/></operator> <name><name pos:line="24" pos:column="59">index<pos:position pos:line="24" pos:column="64"/></name><operator pos:line="24" pos:column="64">-&gt;<pos:position pos:line="24" pos:column="69"/></operator><name pos:line="24" pos:column="66">map_size<pos:position pos:line="24" pos:column="74"/></name></name> <operator pos:line="24" pos:column="75">-<pos:position pos:line="24" pos:column="76"/></operator> <literal type="number" pos:line="24" pos:column="77">20<pos:position pos:line="24" pos:column="79"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="80"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">index<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">hashes<pos:position pos:line="25" pos:column="38"/></name></name> <operator pos:line="25" pos:column="39">=<pos:position pos:line="25" pos:column="40"/></operator> <operator pos:line="25" pos:column="41">(<pos:position pos:line="25" pos:column="42"/></operator><operator pos:line="25" pos:column="42">(<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">uint32_t<pos:position pos:line="25" pos:column="51"/></name> <operator pos:line="25" pos:column="52">*<pos:position pos:line="25" pos:column="53"/></operator><operator pos:line="25" pos:column="53">)<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">end<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">)<pos:position pos:line="25" pos:column="58"/></operator> <operator pos:line="25" pos:column="59">-<pos:position pos:line="25" pos:column="60"/></operator> <name><name pos:line="25" pos:column="61">index<pos:position pos:line="25" pos:column="66"/></name><operator pos:line="25" pos:column="66">-&gt;<pos:position pos:line="25" pos:column="71"/></operator><name pos:line="25" pos:column="68">pack<pos:position pos:line="25" pos:column="72"/></name><operator pos:line="25" pos:column="72">-&gt;<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="74">num_objects<pos:position pos:line="25" pos:column="85"/></name></name></expr>;<pos:position pos:line="25" pos:column="86"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block>

	<expr_stmt><expr><name><name pos:line="29" pos:column="9">index<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">entry_count<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <call><name pos:line="29" pos:column="30">ntohl<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name><name pos:line="29" pos:column="36">header<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">entry_count<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">index<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">map_pos<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">+=<pos:position pos:line="30" pos:column="26"/></operator> <sizeof pos:line="30" pos:column="27">sizeof<argument_list pos:line="30" pos:column="33">(<argument><expr><operator pos:line="30" pos:column="34">*<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">header<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
	<return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

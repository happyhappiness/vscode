<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5821_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prune_worktree<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">id<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">strbuf<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">reason<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">path<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">len<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">is_directory<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><call><name pos:line="7" pos:column="27">git_path<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><literal type="string" pos:line="7" pos:column="36">"worktrees/%s"<pos:position pos:line="7" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">id<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="57"/></condition><then pos:line="7" pos:column="57"> <block pos:line="7" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addf<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">reason<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="37">_<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="string" pos:line="8" pos:column="39">"Removing worktrees/%s: not a valid directory"<pos:position pos:line="8" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="88">id<pos:position pos:line="8" pos:column="90"/></name></expr></argument>)<pos:position pos:line="8" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="92"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">file_exists<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><call><name pos:line="11" pos:column="25">git_path<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><literal type="string" pos:line="11" pos:column="34">"worktrees/%s/locked"<pos:position pos:line="11" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">id<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">stat<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><call><name pos:line="13" pos:column="18">git_path<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><literal type="string" pos:line="13" pos:column="27">"worktrees/%s/gitdir"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">id<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="56">st<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="60"/></condition><then pos:line="13" pos:column="60"> <block pos:line="13" pos:column="61">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_addf<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">reason<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="37">_<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><literal type="string" pos:line="14" pos:column="39">"Removing worktrees/%s: gitdir file does not exist"<pos:position pos:line="14" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="93">id<pos:position pos:line="14" pos:column="95"/></name></expr></argument>)<pos:position pos:line="14" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="97"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">fd<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">open<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><call><name pos:line="17" pos:column="19">git_path<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><literal type="string" pos:line="17" pos:column="28">"worktrees/%s/gitdir"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">id<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">O_RDONLY<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">fd<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&lt;<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20"> <block pos:line="18" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_addf<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">reason<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="37">_<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><literal type="string" pos:line="19" pos:column="39">"Removing worktrees/%s: unable to read gitdir file (%s)"<pos:position pos:line="19" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="96"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="20" pos:column="29">id<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="33">strerror<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">errno<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="23" pos:column="9">len<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name><name pos:line="23" pos:column="15">st<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">st_size<pos:position pos:line="23" pos:column="25"/></name></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">path<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">xmallocz<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">len<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">read_in_full<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">fd<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">path<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">len<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">close<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">fd<pos:position pos:line="26" pos:column="17"/></name></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">len<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">&amp;&amp;<pos:position pos:line="27" pos:column="30"/></operator> <operator pos:line="27" pos:column="23">(<pos:position pos:line="27" pos:column="24"/></operator><name><name pos:line="27" pos:column="24">path<pos:position pos:line="27" pos:column="28"/></name><index pos:line="27" pos:column="28">[<expr><name pos:line="27" pos:column="29">len<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">-<pos:position pos:line="27" pos:column="34"/></operator> <literal type="number" pos:line="27" pos:column="35">1<pos:position pos:line="27" pos:column="36"/></literal></expr>]<pos:position pos:line="27" pos:column="37"/></index></name> <operator pos:line="27" pos:column="38">==<pos:position pos:line="27" pos:column="40"/></operator> <literal type="char" pos:line="27" pos:column="41">'\n'<pos:position pos:line="27" pos:column="45"/></literal> <operator pos:line="27" pos:column="46">||<pos:position pos:line="27" pos:column="48"/></operator> <name><name pos:line="27" pos:column="49">path<pos:position pos:line="27" pos:column="53"/></name><index pos:line="27" pos:column="53">[<expr><name pos:line="27" pos:column="54">len<pos:position pos:line="27" pos:column="57"/></name> <operator pos:line="27" pos:column="58">-<pos:position pos:line="27" pos:column="59"/></operator> <literal type="number" pos:line="27" pos:column="60">1<pos:position pos:line="27" pos:column="61"/></literal></expr>]<pos:position pos:line="27" pos:column="62"/></index></name> <operator pos:line="27" pos:column="63">==<pos:position pos:line="27" pos:column="65"/></operator> <literal type="char" pos:line="27" pos:column="66">'\r'<pos:position pos:line="27" pos:column="70"/></literal><operator pos:line="27" pos:column="70">)<pos:position pos:line="27" pos:column="71"/></operator></expr>)<pos:position pos:line="27" pos:column="72"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">--<pos:position pos:line="28" pos:column="22"/></operator></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt></block></while>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">len<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_addf<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">reason<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="37">_<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><literal type="string" pos:line="30" pos:column="39">"Removing worktrees/%s: invalid gitdir file"<pos:position pos:line="30" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="86">id<pos:position pos:line="30" pos:column="88"/></name></expr></argument>)<pos:position pos:line="30" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="90"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">free<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">path<pos:position pos:line="31" pos:column="26"/></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">1<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">path<pos:position pos:line="34" pos:column="13"/></name><index pos:line="34" pos:column="13">[<expr><name pos:line="34" pos:column="14">len<pos:position pos:line="34" pos:column="17"/></name></expr>]<pos:position pos:line="34" pos:column="18"/></index></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <literal type="char" pos:line="34" pos:column="21">'\0'<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">file_exists<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">path<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32"> <block pos:line="35" pos:column="33">{
		<decl_stmt><decl><type><name><name pos:line="36" pos:column="17">struct<pos:position pos:line="36" pos:column="23"/></name> <name pos:line="36" pos:column="24">stat<pos:position pos:line="36" pos:column="28"/></name></name></type> <name pos:line="36" pos:column="29">st_link<pos:position pos:line="36" pos:column="36"/></name></decl>;<pos:position pos:line="36" pos:column="37"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">free<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">path<pos:position pos:line="37" pos:column="26"/></name></expr></argument>)<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
		<comment type="block" pos:line="38" pos:column="17">/*
		 * the repo is moved manually and has not been
		 * accessed since?
		 */</comment>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><call><name pos:line="42" pos:column="22">stat<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><call><name pos:line="42" pos:column="27">git_path<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><literal type="string" pos:line="42" pos:column="36">"worktrees/%s/link"<pos:position pos:line="42" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="57">id<pos:position pos:line="42" pos:column="59"/></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="42" pos:column="62">&amp;<pos:position pos:line="42" pos:column="67"/></operator><name pos:line="42" pos:column="63">st_link<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call> <operator pos:line="42" pos:column="72">&amp;&amp;<pos:position pos:line="42" pos:column="82"/></operator>
		    <name><name pos:line="43" pos:column="21">st_link<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">.<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">st_nlink<pos:position pos:line="43" pos:column="37"/></name></name> <operator pos:line="43" pos:column="38">&gt;<pos:position pos:line="43" pos:column="42"/></operator> <literal type="number" pos:line="43" pos:column="40">1<pos:position pos:line="43" pos:column="41"/></literal></expr>)<pos:position pos:line="43" pos:column="42"/></condition><then pos:line="43" pos:column="42">
			<block type="pseudo"><return pos:line="44" pos:column="25">return <expr><literal type="number" pos:line="44" pos:column="32">0<pos:position pos:line="44" pos:column="33"/></literal></expr>;<pos:position pos:line="44" pos:column="34"/></return></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">st<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">st_mtime<pos:position pos:line="45" pos:column="32"/></name></name> <operator pos:line="45" pos:column="33">&lt;=<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="36">expire<pos:position pos:line="45" pos:column="42"/></name></expr>)<pos:position pos:line="45" pos:column="43"/></condition><then pos:line="45" pos:column="43"> <block pos:line="45" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">strbuf_addf<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">reason<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="45">_<pos:position pos:line="46" pos:column="46"/></name><argument_list pos:line="46" pos:column="46">(<argument><expr><literal type="string" pos:line="46" pos:column="47">"Removing worktrees/%s: gitdir file points to non-existent location"<pos:position pos:line="46" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="116"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="118">id<pos:position pos:line="46" pos:column="120"/></name></expr></argument>)<pos:position pos:line="46" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="122"/></expr_stmt>
			<return pos:line="47" pos:column="25">return <expr><literal type="number" pos:line="47" pos:column="32">1<pos:position pos:line="47" pos:column="33"/></literal></expr>;<pos:position pos:line="47" pos:column="34"/></return>
		}<pos:position pos:line="48" pos:column="18"/></block></then> <else pos:line="48" pos:column="19">else <block pos:line="48" pos:column="24">{
			<return pos:line="49" pos:column="25">return <expr><literal type="number" pos:line="49" pos:column="32">0<pos:position pos:line="49" pos:column="33"/></literal></expr>;<pos:position pos:line="49" pos:column="34"/></return>
		}<pos:position pos:line="50" pos:column="18"/></block></else></if>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">free<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">path<pos:position pos:line="52" pos:column="18"/></name></expr></argument>)<pos:position pos:line="52" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

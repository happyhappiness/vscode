<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4800_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">NORETURN<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">die_user_resolve<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">am_state<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">state<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">state<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">resolvemsg<pos:position pos:line="3" pos:column="30"/></name></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <block pos:line="3" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">printf_ln<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><literal type="string" pos:line="4" pos:column="27">"%s"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="33">state<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">resolvemsg<pos:position pos:line="4" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="5" pos:column="10"/></block></then> <else pos:line="5" pos:column="11">else <block pos:line="5" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">cmdline<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><ternary><condition><expr><name><name pos:line="6" pos:column="39">state<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">interactive<pos:position pos:line="6" pos:column="57"/></name></name></expr> ?<pos:position pos:line="6" pos:column="59"/></condition><then pos:line="6" pos:column="59"> <expr><literal type="string" pos:line="6" pos:column="60">"git am -i"<pos:position pos:line="6" pos:column="71"/></literal></expr> <pos:position pos:line="6" pos:column="72"/></then><else pos:line="6" pos:column="72">: <expr><literal type="string" pos:line="6" pos:column="74">"git am"<pos:position pos:line="6" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="83"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="8" pos:column="17">printf_ln<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><call><name pos:line="8" pos:column="27">_<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><literal type="string" pos:line="8" pos:column="29">"When you have resolved this problem, run \"%s --continue\"."<pos:position pos:line="8" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="93">cmdline<pos:position pos:line="8" pos:column="100"/></name></expr></argument>)<pos:position pos:line="8" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="102"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">printf_ln<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><call><name pos:line="9" pos:column="27">_<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><literal type="string" pos:line="9" pos:column="29">"If you prefer to skip this patch, run \"%s --skip\" instead."<pos:position pos:line="9" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="94">cmdline<pos:position pos:line="9" pos:column="101"/></name></expr></argument>)<pos:position pos:line="9" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="103"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">printf_ln<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><call><name pos:line="10" pos:column="27">_<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="string" pos:line="10" pos:column="29">"To restore the original branch and stop patching, run \"%s --abort\"."<pos:position pos:line="10" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="101"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="103">cmdline<pos:position pos:line="10" pos:column="110"/></name></expr></argument>)<pos:position pos:line="10" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="112"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">exit<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><literal type="number" pos:line="13" pos:column="14">128<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

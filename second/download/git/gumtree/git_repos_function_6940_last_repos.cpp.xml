<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6940_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name>
<cpp:ifdef pos:line="2" pos:column="1"># <cpp:directive pos:line="2" pos:column="3">ifdef<pos:position pos:line="2" pos:column="8"/></cpp:directive> <name pos:line="2" pos:column="9">_LIBC<pos:position pos:line="2" pos:column="14"/></name></cpp:ifdef>
<name pos:line="3" pos:column="1">weak_function<pos:position pos:line="3" pos:column="14"/></name></type>
<cpp:endif pos:line="4" pos:column="1"># <cpp:directive pos:line="4" pos:column="3">endif<pos:position pos:line="4" pos:column="8"/></cpp:directive></cpp:endif>
<name pos:line="5" pos:column="1">re_exec<pos:position pos:line="5" pos:column="8"/></name> <argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">s<pos:position pos:line="5" pos:column="11"/></name></expr></argument>)<pos:position pos:line="5" pos:column="12"/></argument_list>
     const <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier><name pos:line="6" pos:column="18">s<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
<block pos:line="7" pos:column="1">{
  <return pos:line="8" pos:column="3">return <expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">regexec<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">&amp;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="25">re_comp_buf<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="38">s<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="41">0<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">NULL<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="50">0<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3314_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">git_inflate_end<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">git_zstream<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">strm<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">zlib_pre_call<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">strm<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">inflateEnd<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><operator pos:line="6" pos:column="29">&amp;<pos:position pos:line="6" pos:column="34"/></operator><name><name pos:line="6" pos:column="30">strm<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">z<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">zlib_post_call<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">strm<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">==<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">Z_OK<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">error<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="string" pos:line="10" pos:column="15">"inflateEnd: %s (%s)"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="38">zerr_to_string<pos:position pos:line="10" pos:column="52"/></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">status<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr></argument>,
	      <argument><expr><ternary><condition><expr><name><name pos:line="11" pos:column="15">strm<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">z<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">.<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">msg<pos:position pos:line="11" pos:column="26"/></name></name></expr> ?<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <expr><name><name pos:line="11" pos:column="29">strm<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">z<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">msg<pos:position pos:line="11" pos:column="40"/></name></name></expr> <pos:position pos:line="11" pos:column="41"/></then><else pos:line="11" pos:column="41">: <expr><literal type="string" pos:line="11" pos:column="43">"no message"<pos:position pos:line="11" pos:column="55"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

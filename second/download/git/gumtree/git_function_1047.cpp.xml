<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1047.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">checkout_entry<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">cache_entry<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ce<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">checkout<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">state<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">topath<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">strbuf<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">path<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">STRBUF_INIT<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">stat<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">st<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">topath<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><call><name pos:line="8" pos:column="24">write_entry<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">ce<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">topath<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">state<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="55">1<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_reset<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><operator pos:line="10" pos:column="22">&amp;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="23">path<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_add<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><operator pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="21">path<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="27">state<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">base_dir<pos:position pos:line="11" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="44">state<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">base_dir_len<pos:position pos:line="11" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strbuf_add<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="21">path<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="27">ce<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">name<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="37">ce_namelen<pos:position pos:line="12" pos:column="47"/></name><argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">ce<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">check_path<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name><name pos:line="14" pos:column="25">path<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">buf<pos:position pos:line="14" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="35">path<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">.<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">len<pos:position pos:line="14" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="45">&amp;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="46">st<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="50">state<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">base_dir_len<pos:position pos:line="14" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="71"/></condition><then pos:line="14" pos:column="71"> <block pos:line="14" pos:column="72">{
		<decl_stmt><decl><type><specifier pos:line="15" pos:column="17">const<pos:position pos:line="15" pos:column="22"/></specifier> <name><name pos:line="15" pos:column="23">struct<pos:position pos:line="15" pos:column="29"/></name> <name pos:line="15" pos:column="30">submodule<pos:position pos:line="15" pos:column="39"/></name></name> <modifier pos:line="15" pos:column="40">*<pos:position pos:line="15" pos:column="41"/></modifier></type><name pos:line="15" pos:column="41">sub<pos:position pos:line="15" pos:column="44"/></name></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">unsigned<pos:position pos:line="16" pos:column="25"/></name></type> <name pos:line="16" pos:column="26">changed<pos:position pos:line="16" pos:column="33"/></name> <init pos:line="16" pos:column="34">= <expr><call><name pos:line="16" pos:column="36">ce_match_stat<pos:position pos:line="16" pos:column="49"/></name><argument_list pos:line="16" pos:column="49">(<argument><expr><name pos:line="16" pos:column="50">ce<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="54">&amp;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="55">st<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">CE_MATCH_IGNORE_VALID<pos:position pos:line="16" pos:column="80"/></name><operator pos:line="16" pos:column="80">|<pos:position pos:line="16" pos:column="81"/></operator><name pos:line="16" pos:column="81">CE_MATCH_IGNORE_SKIP_WORKTREE<pos:position pos:line="16" pos:column="110"/></name></expr></argument>)<pos:position pos:line="16" pos:column="111"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="112"/></decl_stmt>
		<comment type="block" pos:line="17" pos:column="17">/*
		 * Needs to be checked before !changed returns early,
		 * as the possibly empty directory was not changed
		 */</comment>
		<expr_stmt><expr><name pos:line="21" pos:column="17">sub<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">submodule_from_ce<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">ce<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">sub<pos:position pos:line="22" pos:column="24"/></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <block pos:line="22" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="23" pos:column="25">int<pos:position pos:line="23" pos:column="28"/></name></type> <name pos:line="23" pos:column="29">err<pos:position pos:line="23" pos:column="32"/></name></decl>;<pos:position pos:line="23" pos:column="33"/></decl_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><operator pos:line="24" pos:column="29">!<pos:position pos:line="24" pos:column="30"/></operator><call><name pos:line="24" pos:column="30">is_submodule_populated_gently<pos:position pos:line="24" pos:column="59"/></name><argument_list pos:line="24" pos:column="59">(<argument><expr><name><name pos:line="24" pos:column="60">ce<pos:position pos:line="24" pos:column="62"/></name><operator pos:line="24" pos:column="62">-&gt;<pos:position pos:line="24" pos:column="67"/></operator><name pos:line="24" pos:column="64">name<pos:position pos:line="24" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="70">&amp;<pos:position pos:line="24" pos:column="75"/></operator><name pos:line="24" pos:column="71">err<pos:position pos:line="24" pos:column="74"/></name></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="76"/></condition><then pos:line="24" pos:column="76"> <block pos:line="24" pos:column="77">{
				<decl_stmt><decl><type><name><name pos:line="25" pos:column="33">struct<pos:position pos:line="25" pos:column="39"/></name> <name pos:line="25" pos:column="40">stat<pos:position pos:line="25" pos:column="44"/></name></name></type> <name pos:line="25" pos:column="45">sb<pos:position pos:line="25" pos:column="47"/></name></decl>;<pos:position pos:line="25" pos:column="48"/></decl_stmt>
				<if pos:line="26" pos:column="33">if <condition pos:line="26" pos:column="36">(<expr><call><name pos:line="26" pos:column="37">lstat<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name><name pos:line="26" pos:column="43">ce<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">name<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">sb<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="58"/></condition><then pos:line="26" pos:column="58">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="41">die<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><call><name pos:line="27" pos:column="45">_<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><literal type="string" pos:line="27" pos:column="47">"could not stat file '%s'"<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="76">ce<pos:position pos:line="27" pos:column="78"/></name><operator pos:line="27" pos:column="78">-&gt;<pos:position pos:line="27" pos:column="83"/></operator><name pos:line="27" pos:column="80">name<pos:position pos:line="27" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="86"/></expr_stmt></block></then></if>
				<if pos:line="28" pos:column="33">if <condition pos:line="28" pos:column="36">(<expr><operator pos:line="28" pos:column="37">!<pos:position pos:line="28" pos:column="38"/></operator><operator pos:line="28" pos:column="38">(<pos:position pos:line="28" pos:column="39"/></operator><name><name pos:line="28" pos:column="39">st<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">.<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">st_mode<pos:position pos:line="28" pos:column="49"/></name></name> <operator pos:line="28" pos:column="50">&amp;<pos:position pos:line="28" pos:column="55"/></operator> <name pos:line="28" pos:column="52">S_IFDIR<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator></expr>)<pos:position pos:line="28" pos:column="61"/></condition><then pos:line="28" pos:column="61">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="41">unlink_or_warn<pos:position pos:line="29" pos:column="55"/></name><argument_list pos:line="29" pos:column="55">(<argument><expr><name><name pos:line="29" pos:column="56">ce<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">-&gt;<pos:position pos:line="29" pos:column="63"/></operator><name pos:line="29" pos:column="60">name<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt></block></then></if>

				<return pos:line="31" pos:column="33">return <expr><call><name pos:line="31" pos:column="40">submodule_move_head<pos:position pos:line="31" pos:column="59"/></name><argument_list pos:line="31" pos:column="59">(<argument><expr><name><name pos:line="31" pos:column="60">ce<pos:position pos:line="31" pos:column="62"/></name><operator pos:line="31" pos:column="62">-&gt;<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="64">name<pos:position pos:line="31" pos:column="68"/></name></name></expr></argument>,
					<argument><expr><name pos:line="32" pos:column="41">NULL<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="47">oid_to_hex<pos:position pos:line="32" pos:column="57"/></name><argument_list pos:line="32" pos:column="57">(<argument><expr><operator pos:line="32" pos:column="58">&amp;<pos:position pos:line="32" pos:column="63"/></operator><name><name pos:line="32" pos:column="59">ce<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">-&gt;<pos:position pos:line="32" pos:column="66"/></operator><name pos:line="32" pos:column="63">oid<pos:position pos:line="32" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="33" pos:column="41">SUBMODULE_MOVE_HEAD_FORCE<pos:position pos:line="33" pos:column="66"/></name></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="68"/></return>
			}<pos:position pos:line="34" pos:column="26"/></block></then> <else pos:line="34" pos:column="27">else
				<block type="pseudo"><return pos:line="35" pos:column="33">return <expr><call><name pos:line="35" pos:column="40">submodule_move_head<pos:position pos:line="35" pos:column="59"/></name><argument_list pos:line="35" pos:column="59">(<argument><expr><name><name pos:line="35" pos:column="60">ce<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">-&gt;<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="64">name<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="36" pos:column="41">"HEAD"<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="49">oid_to_hex<pos:position pos:line="36" pos:column="59"/></name><argument_list pos:line="36" pos:column="59">(<argument><expr><operator pos:line="36" pos:column="60">&amp;<pos:position pos:line="36" pos:column="65"/></operator><name><name pos:line="36" pos:column="61">ce<pos:position pos:line="36" pos:column="63"/></name><operator pos:line="36" pos:column="63">-&gt;<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="65">oid<pos:position pos:line="36" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="37" pos:column="41">SUBMODULE_MOVE_HEAD_FORCE<pos:position pos:line="37" pos:column="66"/></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></return></block></else></if>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">changed<pos:position pos:line="40" pos:column="29"/></name></expr>)<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30">
			<block type="pseudo"><return pos:line="41" pos:column="25">return <expr><literal type="number" pos:line="41" pos:column="32">0<pos:position pos:line="41" pos:column="33"/></literal></expr>;<pos:position pos:line="41" pos:column="34"/></return></block></then></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><name><name pos:line="42" pos:column="22">state<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">force<pos:position pos:line="42" pos:column="34"/></name></name></expr>)<pos:position pos:line="42" pos:column="35"/></condition><then pos:line="42" pos:column="35"> <block pos:line="42" pos:column="36">{
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><operator pos:line="43" pos:column="29">!<pos:position pos:line="43" pos:column="30"/></operator><name><name pos:line="43" pos:column="30">state<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">-&gt;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="37">quiet<pos:position pos:line="43" pos:column="42"/></name></name></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="33">fprintf<pos:position pos:line="44" pos:column="40"/></name><argument_list pos:line="44" pos:column="40">(<argument><expr><name pos:line="44" pos:column="41">stderr<pos:position pos:line="44" pos:column="47"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="45" pos:column="41">"%s already exists, no checkout\n"<pos:position pos:line="45" pos:column="75"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="46" pos:column="41">path<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">.<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="46">buf<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt></block></then></if>
			<return pos:line="47" pos:column="25">return <expr><operator pos:line="47" pos:column="32">-<pos:position pos:line="47" pos:column="33"/></operator><literal type="number" pos:line="47" pos:column="33">1<pos:position pos:line="47" pos:column="34"/></literal></expr>;<pos:position pos:line="47" pos:column="35"/></return>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="50" pos:column="17">/*
		 * We unlink the old file, to get the new one with the
		 * right permissions (including umask, which is nasty
		 * to emulate by hand - much easier to let the system
		 * just do the right thing)
		 */</comment>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><call><name pos:line="56" pos:column="21">S_ISDIR<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name><name pos:line="56" pos:column="29">st<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">.<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="32">st_mode<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="41"/></condition><then pos:line="56" pos:column="41"> <block pos:line="56" pos:column="42">{
			<comment type="block" pos:line="57" pos:column="25">/* If it is a gitlink, leave it alone! */</comment>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><call><name pos:line="58" pos:column="29">S_ISGITLINK<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name><name pos:line="58" pos:column="41">ce<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">ce_mode<pos:position pos:line="58" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="54"/></condition><then pos:line="58" pos:column="54">
				<block type="pseudo"><return pos:line="59" pos:column="33">return <expr><literal type="number" pos:line="59" pos:column="40">0<pos:position pos:line="59" pos:column="41"/></literal></expr>;<pos:position pos:line="59" pos:column="42"/></return></block></then></if>
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><operator pos:line="60" pos:column="29">!<pos:position pos:line="60" pos:column="30"/></operator><name><name pos:line="60" pos:column="30">state<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">force<pos:position pos:line="60" pos:column="42"/></name></name></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43">
				<block type="pseudo"><return pos:line="61" pos:column="33">return <expr><call><name pos:line="61" pos:column="40">error<pos:position pos:line="61" pos:column="45"/></name><argument_list pos:line="61" pos:column="45">(<argument><expr><literal type="string" pos:line="61" pos:column="46">"%s is a directory"<pos:position pos:line="61" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="67">path<pos:position pos:line="61" pos:column="71"/></name><operator pos:line="61" pos:column="71">.<pos:position pos:line="61" pos:column="72"/></operator><name pos:line="61" pos:column="72">buf<pos:position pos:line="61" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="77"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">remove_subtree<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><operator pos:line="62" pos:column="40">&amp;<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="41">path<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="63" pos:column="18"/></block></then> <elseif pos:line="63" pos:column="19">else <if pos:line="63" pos:column="24">if <condition pos:line="63" pos:column="27">(<expr><call><name pos:line="63" pos:column="28">unlink<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">(<argument><expr><name><name pos:line="63" pos:column="35">path<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">.<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="40">buf<pos:position pos:line="63" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="45"/></condition><then pos:line="63" pos:column="45">
			<block type="pseudo"><return pos:line="64" pos:column="25">return <expr><call><name pos:line="64" pos:column="32">error_errno<pos:position pos:line="64" pos:column="43"/></name><argument_list pos:line="64" pos:column="43">(<argument><expr><literal type="string" pos:line="64" pos:column="44">"unable to unlink old '%s'"<pos:position pos:line="64" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="73">path<pos:position pos:line="64" pos:column="77"/></name><operator pos:line="64" pos:column="77">.<pos:position pos:line="64" pos:column="78"/></operator><name pos:line="64" pos:column="78">buf<pos:position pos:line="64" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="83"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="65" pos:column="10"/></block></then> <elseif pos:line="65" pos:column="11">else <if pos:line="65" pos:column="16">if <condition pos:line="65" pos:column="19">(<expr><name><name pos:line="65" pos:column="20">state<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">not_new<pos:position pos:line="65" pos:column="34"/></name></name></expr>)<pos:position pos:line="65" pos:column="35"/></condition><then pos:line="65" pos:column="35">
		<block type="pseudo"><return pos:line="66" pos:column="17">return <expr><literal type="number" pos:line="66" pos:column="24">0<pos:position pos:line="66" pos:column="25"/></literal></expr>;<pos:position pos:line="66" pos:column="26"/></return></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="68" pos:column="9">create_directories<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name><name pos:line="68" pos:column="28">path<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">.<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="33">buf<pos:position pos:line="68" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="38">path<pos:position pos:line="68" pos:column="42"/></name><operator pos:line="68" pos:column="42">.<pos:position pos:line="68" pos:column="43"/></operator><name pos:line="68" pos:column="43">len<pos:position pos:line="68" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="48">state<pos:position pos:line="68" pos:column="53"/></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="55"/></expr_stmt>
	<return pos:line="69" pos:column="9">return <expr><call><name pos:line="69" pos:column="16">write_entry<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name pos:line="69" pos:column="28">ce<pos:position pos:line="69" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="32">path<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">.<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="37">buf<pos:position pos:line="69" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">state<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="49">0<pos:position pos:line="69" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

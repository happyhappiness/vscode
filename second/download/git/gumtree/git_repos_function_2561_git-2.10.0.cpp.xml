<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2561_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">credential_cache_entry<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">lookup_credential<pos:position pos:line="1" pos:column="56"/></name><parameter_list pos:line="1" pos:column="56">(<parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name><name pos:line="1" pos:column="63">struct<pos:position pos:line="1" pos:column="69"/></name> <name pos:line="1" pos:column="70">credential<pos:position pos:line="1" pos:column="80"/></name></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="82">c<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="25">entries_nr<pos:position pos:line="4" pos:column="35"/></name></expr>;<pos:position pos:line="4" pos:column="36"/></condition> <incr><expr><name pos:line="4" pos:column="37">i<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">++<pos:position pos:line="4" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="41"/></control> <block pos:line="4" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">credential<pos:position pos:line="5" pos:column="34"/></name></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">e<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">= <expr><operator pos:line="5" pos:column="40">&amp;<pos:position pos:line="5" pos:column="45"/></operator><name><name pos:line="5" pos:column="41">entries<pos:position pos:line="5" pos:column="48"/></name><index pos:line="5" pos:column="48">[<expr><name pos:line="5" pos:column="49">i<pos:position pos:line="5" pos:column="50"/></name></expr>]<pos:position pos:line="5" pos:column="51"/></index></name><operator pos:line="5" pos:column="51">.<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">item<pos:position pos:line="5" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><call><name pos:line="6" pos:column="21">credential_match<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">c<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">e<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><operator pos:line="7" pos:column="32">&amp;<pos:position pos:line="7" pos:column="37"/></operator><name><name pos:line="7" pos:column="33">entries<pos:position pos:line="7" pos:column="40"/></name><index pos:line="7" pos:column="40">[<expr><name pos:line="7" pos:column="41">i<pos:position pos:line="7" pos:column="42"/></name></expr>]<pos:position pos:line="7" pos:column="43"/></index></name></expr>;<pos:position pos:line="7" pos:column="44"/></return></block></then></if>
	}<pos:position pos:line="8" pos:column="10"/></block></for>
	<return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

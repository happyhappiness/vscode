<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1761_git-2.9.5.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">string_list_item<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">string_list_append<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">string_list<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">list<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
					    <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">string<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<return pos:line="4" pos:column="9">return <expr><call><name pos:line="4" pos:column="16">string_list_append_nodup<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(
			<argument><expr><name pos:line="5" pos:column="25">list<pos:position pos:line="5" pos:column="29"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name pos:line="6" pos:column="25">list<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">strdup_strings<pos:position pos:line="6" pos:column="45"/></name></name></expr> ?<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47"> <expr><call><name pos:line="6" pos:column="48">xstrdup<pos:position pos:line="6" pos:column="55"/></name><argument_list pos:line="6" pos:column="55">(<argument><expr><name pos:line="6" pos:column="56">string<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr> <pos:position pos:line="6" pos:column="64"/></then><else pos:line="6" pos:column="64">: <expr><operator pos:line="6" pos:column="66">(<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="67">char<pos:position pos:line="6" pos:column="71"/></name> <operator pos:line="6" pos:column="72">*<pos:position pos:line="6" pos:column="73"/></operator><operator pos:line="6" pos:column="73">)<pos:position pos:line="6" pos:column="74"/></operator><name pos:line="6" pos:column="74">string<pos:position pos:line="6" pos:column="80"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="82"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

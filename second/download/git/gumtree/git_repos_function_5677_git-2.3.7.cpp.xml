<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5677_git-2.3.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">nedgetvalue<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">nedpool<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">p<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">mem<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <name pos:line="1" pos:column="43">THROWSPEC<pos:position pos:line="1" pos:column="52"/></name>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">nedpool<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">np<pos:position pos:line="3" pos:column="20"/></name><init pos:line="3" pos:column="20">=<expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">mchunkptr<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">mcp<pos:position pos:line="4" pos:column="22"/></name><init pos:line="4" pos:column="22">=<expr><call><name pos:line="4" pos:column="23">mem2chunk<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><name pos:line="4" pos:column="33">mem<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">mstate<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">fm<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<if pos:line="6" pos:column="9">if<condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">!<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">is_aligned<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><call><name pos:line="6" pos:column="25">chunk2mem<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">mcp<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call><operator pos:line="6" pos:column="40">)<pos:position pos:line="6" pos:column="41"/></operator> <operator pos:line="6" pos:column="42">&amp;&amp;<pos:position pos:line="6" pos:column="52"/></operator> <name><name pos:line="6" pos:column="45">mcp<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">head<pos:position pos:line="6" pos:column="54"/></name></name> <operator pos:line="6" pos:column="55">!=<pos:position pos:line="6" pos:column="57"/></operator> <name pos:line="6" pos:column="58">FENCEPOST_HEAD<pos:position pos:line="6" pos:column="72"/></name></expr>)<pos:position pos:line="6" pos:column="73"/></condition><then pos:line="6" pos:column="73"> <block type="pseudo"><return pos:line="6" pos:column="74">return <expr><literal type="number" pos:line="6" pos:column="81">0<pos:position pos:line="6" pos:column="82"/></literal></expr>;<pos:position pos:line="6" pos:column="83"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if<condition pos:line="7" pos:column="11">(<expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><call><name pos:line="7" pos:column="13">cinuse<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">mcp<pos:position pos:line="7" pos:column="23"/></name></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block type="pseudo"><return pos:line="7" pos:column="26">return <expr><literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr>;<pos:position pos:line="7" pos:column="35"/></return></block></then></if>
	<if pos:line="8" pos:column="9">if<condition pos:line="8" pos:column="11">(<expr><operator pos:line="8" pos:column="12">!<pos:position pos:line="8" pos:column="13"/></operator><call><name pos:line="8" pos:column="13">next_pinuse<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">mcp<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <block type="pseudo"><return pos:line="8" pos:column="31">return <expr><literal type="number" pos:line="8" pos:column="38">0<pos:position pos:line="8" pos:column="39"/></literal></expr>;<pos:position pos:line="8" pos:column="40"/></return></block></then></if>
	<if pos:line="9" pos:column="9">if<condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">!<pos:position pos:line="9" pos:column="13"/></operator><call><name pos:line="9" pos:column="13">is_mmapped<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">mcp<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call> <operator pos:line="9" pos:column="29">&amp;&amp;<pos:position pos:line="9" pos:column="39"/></operator> <operator pos:line="9" pos:column="32">!<pos:position pos:line="9" pos:column="33"/></operator><call><name pos:line="9" pos:column="33">pinuse<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">mcp<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
	<block pos:line="10" pos:column="9">{
		<if pos:line="11" pos:column="17">if<condition pos:line="11" pos:column="19">(<expr><call><name pos:line="11" pos:column="20">next_chunk<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><call><name pos:line="11" pos:column="31">prev_chunk<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">mcp<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call><operator pos:line="11" pos:column="47">!=<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="49">mcp<pos:position pos:line="11" pos:column="52"/></name></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53"> <block type="pseudo"><return pos:line="11" pos:column="54">return <expr><literal type="number" pos:line="11" pos:column="61">0<pos:position pos:line="11" pos:column="62"/></literal></expr>;<pos:position pos:line="11" pos:column="63"/></return></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">fm<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator><call><name pos:line="13" pos:column="12">get_mstate_for<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">mcp<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
	<if pos:line="14" pos:column="9">if<condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">!<pos:position pos:line="14" pos:column="13"/></operator><call><name pos:line="14" pos:column="13">ok_magic<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">fm<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block type="pseudo"><return pos:line="14" pos:column="27">return <expr><literal type="number" pos:line="14" pos:column="34">0<pos:position pos:line="14" pos:column="35"/></literal></expr>;<pos:position pos:line="14" pos:column="36"/></return></block></then></if>
	<if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">!<pos:position pos:line="15" pos:column="13"/></operator><call><name pos:line="15" pos:column="13">ok_address<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">fm<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">mcp<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block type="pseudo"><return pos:line="15" pos:column="34">return <expr><literal type="number" pos:line="15" pos:column="41">0<pos:position pos:line="15" pos:column="42"/></literal></expr>;<pos:position pos:line="15" pos:column="43"/></return></block></then></if>
	<if pos:line="16" pos:column="9">if<condition pos:line="16" pos:column="11">(<expr><operator pos:line="16" pos:column="12">!<pos:position pos:line="16" pos:column="13"/></operator><name><name pos:line="16" pos:column="13">fm<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">extp<pos:position pos:line="16" pos:column="21"/></name></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block type="pseudo"><return pos:line="16" pos:column="23">return <expr><literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">np<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">nedpool<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator> <name><name pos:line="17" pos:column="24">fm<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">extp<pos:position pos:line="17" pos:column="32"/></name></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
	<if pos:line="18" pos:column="9">if<condition pos:line="18" pos:column="11">(<expr><name pos:line="18" pos:column="12">p<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition><then pos:line="18" pos:column="14"> <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="15">*<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">p<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">np<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt></block></then></if>
	<return pos:line="19" pos:column="9">return <expr><name><name pos:line="19" pos:column="16">np<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">uservalue<pos:position pos:line="19" pos:column="29"/></name></name></expr>;<pos:position pos:line="19" pos:column="30"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

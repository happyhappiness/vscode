<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_270_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_directories<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">path<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">path_len<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name><name pos:line="2" pos:column="38">struct<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">checkout<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">state<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">buf<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">xmallocz<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">path_len<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">len<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&lt;<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="22">path_len<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition> <block pos:line="7" pos:column="32">{
		<do pos:line="8" pos:column="17">do <block pos:line="8" pos:column="20">{
			<expr_stmt><expr><name><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name> <operator pos:line="9" pos:column="34">=<pos:position pos:line="9" pos:column="35"/></operator> <name><name pos:line="9" pos:column="36">path<pos:position pos:line="9" pos:column="40"/></name><index pos:line="9" pos:column="40">[<expr><name pos:line="9" pos:column="41">len<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index></name></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="10" pos:column="25">len<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">++<pos:position pos:line="10" pos:column="30"/></operator></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="11" pos:column="18"/></block> while <condition pos:line="11" pos:column="25">(<expr><name pos:line="11" pos:column="26">len<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">&lt;<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="32">path_len<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <name><name pos:line="11" pos:column="44">path<pos:position pos:line="11" pos:column="48"/></name><index pos:line="11" pos:column="48">[<expr><name pos:line="11" pos:column="49">len<pos:position pos:line="11" pos:column="52"/></name></expr>]<pos:position pos:line="11" pos:column="53"/></index></name> <operator pos:line="11" pos:column="54">!=<pos:position pos:line="11" pos:column="56"/></operator> <literal type="char" pos:line="11" pos:column="57">'/'<pos:position pos:line="11" pos:column="60"/></literal></expr>)<pos:position pos:line="11" pos:column="61"/></condition>;<pos:position pos:line="11" pos:column="62"/></do>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">len<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&gt;=<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="28">path_len<pos:position pos:line="12" pos:column="36"/></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
			<block type="pseudo"><break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">buf<pos:position pos:line="14" pos:column="20"/></name><index pos:line="14" pos:column="20">[<expr><name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name></expr>]<pos:position pos:line="14" pos:column="25"/></index></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>

		<comment type="block" pos:line="16" pos:column="17">/*
		 * For 'checkout-index --prefix=&lt;dir&gt;', &lt;dir&gt; is
		 * allowed to be a symlink to an existing directory,
		 * and we set 'state-&gt;base_dir_len' below, such that
		 * we test the path components of the prefix with the
		 * stat() function instead of the lstat() function.
		 */</comment>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">has_dirs_only_path<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">buf<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">len<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="50">state<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">base_dir_len<pos:position pos:line="23" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="24" pos:column="35">/* ok, it is already a directory. */</comment>

		<comment type="block" pos:line="26" pos:column="17">/*
		 * If this mkdir() would fail, it could be that there
		 * is already a symlink or something else exists
		 * there, therefore we then try to unlink it and try
		 * one more time to create the directory.
		 */</comment>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">mkdir<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">buf<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="32">0777<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="38"/></condition><then pos:line="32" pos:column="38"> <block pos:line="32" pos:column="39">{
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name pos:line="33" pos:column="29">errno<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">==<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="38">EEXIST<pos:position pos:line="33" pos:column="44"/></name> <operator pos:line="33" pos:column="45">&amp;&amp;<pos:position pos:line="33" pos:column="55"/></operator> <name><name pos:line="33" pos:column="48">state<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">-&gt;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="55">force<pos:position pos:line="33" pos:column="60"/></name></name> <operator pos:line="33" pos:column="61">&amp;&amp;<pos:position pos:line="33" pos:column="71"/></operator>
			    <operator pos:line="34" pos:column="29">!<pos:position pos:line="34" pos:column="30"/></operator><call><name pos:line="34" pos:column="30">unlink_or_warn<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">buf<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call> <operator pos:line="34" pos:column="50">&amp;&amp;<pos:position pos:line="34" pos:column="60"/></operator> <operator pos:line="34" pos:column="53">!<pos:position pos:line="34" pos:column="54"/></operator><call><name pos:line="34" pos:column="54">mkdir<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><name pos:line="34" pos:column="60">buf<pos:position pos:line="34" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="65">0777<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="71"/></condition><then pos:line="34" pos:column="71">
				<block type="pseudo"><continue pos:line="35" pos:column="33">continue;<pos:position pos:line="35" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">die_errno<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><literal type="string" pos:line="36" pos:column="35">"cannot create directory at '%s'"<pos:position pos:line="36" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="70">buf<pos:position pos:line="36" pos:column="73"/></name></expr></argument>)<pos:position pos:line="36" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">free<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">buf<pos:position pos:line="39" pos:column="17"/></name></expr></argument>)<pos:position pos:line="39" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

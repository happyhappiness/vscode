<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1908_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">odb_pack_keep<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">name<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">fd<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <call><name pos:line="5" pos:column="14">open<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">name<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">O_RDWR<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">|<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">O_CREAT<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">|<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">O_EXCL<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="48">0600<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal> <operator pos:line="6" pos:column="15">&lt;=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="18">fd<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">fd<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="9" pos:column="9">/* slow path */</comment>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">safe_create_leading_directories_const<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">name<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
	<return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">open<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">name<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">O_RDWR<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">|<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">O_CREAT<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">|<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">O_EXCL<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="50">0600<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3434_git-2.6.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">buffer_gets<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">imap_buffer<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">b<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">n<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">start<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">b<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">offset<pos:position pos:line="4" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<expr_stmt><expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">s<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name><name pos:line="6" pos:column="14">b<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">buf<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">+<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">start<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init pos:line="8" pos:column="14">;<pos:position pos:line="8" pos:column="15"/></init><condition pos:line="8" pos:column="15">;<pos:position pos:line="8" pos:column="16"/></condition><incr/>)<pos:position pos:line="8" pos:column="17"/></control> <block pos:line="8" pos:column="18">{
		<comment type="block" pos:line="9" pos:column="17">/* make sure we have enough data to read the \r\n sequence */</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">b<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">offset<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">+<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal> <operator pos:line="10" pos:column="35">&gt;=<pos:position pos:line="10" pos:column="40"/></operator> <name><name pos:line="10" pos:column="38">b<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">bytes<pos:position pos:line="10" pos:column="46"/></name></name></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47"> <block pos:line="10" pos:column="48">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name pos:line="11" pos:column="29">start<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35"> <block pos:line="11" pos:column="36">{
				<comment type="block" pos:line="12" pos:column="33">/* shift down used bytes */</comment>
				<expr_stmt><expr><operator pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">s<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">=<pos:position pos:line="13" pos:column="37"/></operator> <name><name pos:line="13" pos:column="38">b<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">buf<pos:position pos:line="13" pos:column="44"/></name></name></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>

				<expr_stmt><expr><call><name pos:line="15" pos:column="33">assert<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">start<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">&lt;=<pos:position pos:line="15" pos:column="51"/></operator> <name><name pos:line="15" pos:column="49">b<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">bytes<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><name pos:line="16" pos:column="33">n<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <name><name pos:line="16" pos:column="37">b<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">bytes<pos:position pos:line="16" pos:column="45"/></name></name> <operator pos:line="16" pos:column="46">-<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">start<pos:position pos:line="16" pos:column="53"/></name></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>

				<if pos:line="18" pos:column="33">if <condition pos:line="18" pos:column="36">(<expr><name pos:line="18" pos:column="37">n<pos:position pos:line="18" pos:column="38"/></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="41">memmove<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><name><name pos:line="19" pos:column="49">b<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">buf<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="57">b<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">-&gt;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="60">buf<pos:position pos:line="19" pos:column="63"/></name></name> <operator pos:line="19" pos:column="64">+<pos:position pos:line="19" pos:column="65"/></operator> <name pos:line="19" pos:column="66">start<pos:position pos:line="19" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="73">n<pos:position pos:line="19" pos:column="74"/></name></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="76"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="20" pos:column="33">b<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">offset<pos:position pos:line="20" pos:column="42"/></name></name> <operator pos:line="20" pos:column="43">-=<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="46">start<pos:position pos:line="20" pos:column="51"/></name></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="21" pos:column="33">b<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">bytes<pos:position pos:line="21" pos:column="41"/></name></name> <operator pos:line="21" pos:column="42">=<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="44">n<pos:position pos:line="21" pos:column="45"/></name></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="22" pos:column="33">start<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">=<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="41">0<pos:position pos:line="22" pos:column="42"/></literal></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="25" pos:column="25">n<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="29">socket_read<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><operator pos:line="25" pos:column="41">&amp;<pos:position pos:line="25" pos:column="46"/></operator><name><name pos:line="25" pos:column="42">b<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">sock<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="51">b<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">buf<pos:position pos:line="25" pos:column="57"/></name></name> <operator pos:line="25" pos:column="58">+<pos:position pos:line="25" pos:column="59"/></operator> <name><name pos:line="25" pos:column="60">b<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="63">bytes<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>,
					 <argument><expr><sizeof pos:line="26" pos:column="42">sizeof<argument_list pos:line="26" pos:column="48">(<argument><expr><name><name pos:line="26" pos:column="49">b<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">buf<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></sizeof> <operator pos:line="26" pos:column="57">-<pos:position pos:line="26" pos:column="58"/></operator> <name><name pos:line="26" pos:column="59">b<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">-&gt;<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="62">bytes<pos:position pos:line="26" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt>

			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><name pos:line="28" pos:column="29">n<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">&lt;=<pos:position pos:line="28" pos:column="36"/></operator> <literal type="number" pos:line="28" pos:column="34">0<pos:position pos:line="28" pos:column="35"/></literal></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36">
				<block type="pseudo"><return pos:line="29" pos:column="33">return <expr><operator pos:line="29" pos:column="40">-<pos:position pos:line="29" pos:column="41"/></operator><literal type="number" pos:line="29" pos:column="41">1<pos:position pos:line="29" pos:column="42"/></literal></expr>;<pos:position pos:line="29" pos:column="43"/></return></block></then></if>

			<expr_stmt><expr><name><name pos:line="31" pos:column="25">b<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">bytes<pos:position pos:line="31" pos:column="33"/></name></name> <operator pos:line="31" pos:column="34">+=<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">n<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name><name pos:line="34" pos:column="21">b<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">buf<pos:position pos:line="34" pos:column="27"/></name><index pos:line="34" pos:column="27">[<expr><name><name pos:line="34" pos:column="28">b<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">offset<pos:position pos:line="34" pos:column="37"/></name></name></expr>]<pos:position pos:line="34" pos:column="38"/></index></name> <operator pos:line="34" pos:column="39">==<pos:position pos:line="34" pos:column="41"/></operator> <literal type="char" pos:line="34" pos:column="42">'\r'<pos:position pos:line="34" pos:column="46"/></literal></expr>)<pos:position pos:line="34" pos:column="47"/></condition><then pos:line="34" pos:column="47"> <block pos:line="34" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">assert<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name><name pos:line="35" pos:column="32">b<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">offset<pos:position pos:line="35" pos:column="41"/></name></name> <operator pos:line="35" pos:column="42">+<pos:position pos:line="35" pos:column="43"/></operator> <literal type="number" pos:line="35" pos:column="44">1<pos:position pos:line="35" pos:column="45"/></literal> <operator pos:line="35" pos:column="46">&lt;<pos:position pos:line="35" pos:column="50"/></operator> <name><name pos:line="35" pos:column="48">b<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">bytes<pos:position pos:line="35" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name><name pos:line="36" pos:column="29">b<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">buf<pos:position pos:line="36" pos:column="35"/></name><index pos:line="36" pos:column="35">[<expr><name><name pos:line="36" pos:column="36">b<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">offset<pos:position pos:line="36" pos:column="45"/></name></name> <operator pos:line="36" pos:column="46">+<pos:position pos:line="36" pos:column="47"/></operator> <literal type="number" pos:line="36" pos:column="48">1<pos:position pos:line="36" pos:column="49"/></literal></expr>]<pos:position pos:line="36" pos:column="50"/></index></name> <operator pos:line="36" pos:column="51">==<pos:position pos:line="36" pos:column="53"/></operator> <literal type="char" pos:line="36" pos:column="54">'\n'<pos:position pos:line="36" pos:column="58"/></literal></expr>)<pos:position pos:line="36" pos:column="59"/></condition><then pos:line="36" pos:column="59"> <block pos:line="36" pos:column="60">{
				<expr_stmt><expr><name><name pos:line="37" pos:column="33">b<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">buf<pos:position pos:line="37" pos:column="39"/></name><index pos:line="37" pos:column="39">[<expr><name><name pos:line="37" pos:column="40">b<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">offset<pos:position pos:line="37" pos:column="49"/></name></name></expr>]<pos:position pos:line="37" pos:column="50"/></index></name> <operator pos:line="37" pos:column="51">=<pos:position pos:line="37" pos:column="52"/></operator> <literal type="number" pos:line="37" pos:column="53">0<pos:position pos:line="37" pos:column="54"/></literal></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>  <comment type="block" pos:line="37" pos:column="57">/* terminate the string */</comment>
				<expr_stmt><expr><name><name pos:line="38" pos:column="33">b<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">offset<pos:position pos:line="38" pos:column="42"/></name></name> <operator pos:line="38" pos:column="43">+=<pos:position pos:line="38" pos:column="45"/></operator> <literal type="number" pos:line="38" pos:column="46">2<pos:position pos:line="38" pos:column="47"/></literal></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt> <comment type="block" pos:line="38" pos:column="49">/* next line */</comment>
				<if pos:line="39" pos:column="33">if <condition pos:line="39" pos:column="36">(<expr><literal type="number" pos:line="39" pos:column="37">0<pos:position pos:line="39" pos:column="38"/></literal> <operator pos:line="39" pos:column="39">&lt;<pos:position pos:line="39" pos:column="43"/></operator> <name pos:line="39" pos:column="41">verbosity<pos:position pos:line="39" pos:column="50"/></name></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="41">puts<pos:position pos:line="40" pos:column="45"/></name><argument_list pos:line="40" pos:column="45">(<argument><expr><operator pos:line="40" pos:column="46">*<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="47">s<pos:position pos:line="40" pos:column="48"/></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt></block></then></if>
				<return pos:line="41" pos:column="33">return <expr><literal type="number" pos:line="41" pos:column="40">0<pos:position pos:line="41" pos:column="41"/></literal></expr>;<pos:position pos:line="41" pos:column="42"/></return>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="45" pos:column="17">b<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">offset<pos:position pos:line="45" pos:column="26"/></name></name><operator pos:line="45" pos:column="26">++<pos:position pos:line="45" pos:column="28"/></operator></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></for>
	<comment type="block" pos:line="47" pos:column="9">/* not reached */</comment>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

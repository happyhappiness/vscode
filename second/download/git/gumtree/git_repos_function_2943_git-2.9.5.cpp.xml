<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2943_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">subtree_pos<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">cache_tree<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">it<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">path<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">pathlen<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">cache_tree_sub<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">down<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">= <expr><name><name pos:line="3" pos:column="40">it<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="44">down<pos:position pos:line="3" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">lo<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">hi<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">lo<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>;<pos:position pos:line="5" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">hi<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name><name pos:line="6" pos:column="14">it<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">subtree_nr<pos:position pos:line="6" pos:column="28"/></name></name></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">lo<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="21">hi<pos:position pos:line="7" pos:column="23"/></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition> <block pos:line="7" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">mi<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">lo<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">+<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="32">hi<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator> <operator pos:line="8" pos:column="36">/<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="38">2<pos:position pos:line="8" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">cache_tree_sub<pos:position pos:line="9" pos:column="38"/></name></name> <modifier pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></modifier></type><name pos:line="9" pos:column="40">mdl<pos:position pos:line="9" pos:column="43"/></name> <init pos:line="9" pos:column="44">= <expr><name><name pos:line="9" pos:column="46">down<pos:position pos:line="9" pos:column="50"/></name><index pos:line="9" pos:column="50">[<expr><name pos:line="9" pos:column="51">mi<pos:position pos:line="9" pos:column="53"/></name></expr>]<pos:position pos:line="9" pos:column="54"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">cmp<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><call><name pos:line="10" pos:column="27">subtree_name_cmp<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">path<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">pathlen<pos:position pos:line="10" pos:column="57"/></name></expr></argument>,
					   <argument><expr><name><name pos:line="11" pos:column="44">mdl<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">name<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="55">mdl<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">namelen<pos:position pos:line="11" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="69"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">cmp<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><name pos:line="13" pos:column="32">mi<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></return></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">cmp<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">&lt;<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">hi<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">mi<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt></block></then>
		<else pos:line="16" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">lo<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">mi<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">+<pos:position pos:line="17" pos:column="34"/></operator> <literal type="number" pos:line="17" pos:column="35">1<pos:position pos:line="17" pos:column="36"/></literal></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt></block></else></if>
	}<pos:position pos:line="18" pos:column="10"/></block></while>
	<return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">lo<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-<pos:position pos:line="19" pos:column="20"/></operator><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

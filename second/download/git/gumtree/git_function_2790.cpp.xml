<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2790.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">module_clone<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">argc<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">argv<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">prefix<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">NULL<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="35">url<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">NULL<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">reference<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="40">depth<pos:position pos:line="4" pos:column="45"/></name> <init pos:line="4" pos:column="46">= <expr><name pos:line="4" pos:column="48">NULL<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">quiet<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">submodule_dot_git<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">path<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="33">sm_gitdir<pos:position pos:line="7" pos:column="42"/></name></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">rel_path<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name pos:line="8" pos:column="34">STRBUF_INIT<pos:position pos:line="8" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">sb<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">STRBUF_INIT<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">option<pos:position pos:line="11" pos:column="22"/></name></name></type> <name><name pos:line="11" pos:column="23">module_clone_options<pos:position pos:line="11" pos:column="43"/></name><index pos:line="11" pos:column="43">[]<pos:position pos:line="11" pos:column="45"/></index></name> <init pos:line="11" pos:column="46">= <expr><block pos:line="11" pos:column="48">{
		<expr><call><name pos:line="12" pos:column="17">OPT_STRING<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"prefix"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="42">prefix<pos:position pos:line="12" pos:column="48"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="13" pos:column="28">N_<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"path"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="14" pos:column="28">N_<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><literal type="string" pos:line="14" pos:column="31">"alternative anchor for relative paths"<pos:position pos:line="14" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_STRING<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"path"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">path<pos:position pos:line="15" pos:column="44"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="16" pos:column="28">N_<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><literal type="string" pos:line="16" pos:column="31">"path"<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="17" pos:column="28">N_<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"where the new submodule will be cloned to"<pos:position pos:line="17" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_STRING<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="number" pos:line="18" pos:column="28">0<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"name"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="39">&amp;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="40">name<pos:position pos:line="18" pos:column="44"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="19" pos:column="28">N_<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"string"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="20" pos:column="28">N_<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><literal type="string" pos:line="20" pos:column="31">"name of the new submodule"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT_STRING<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="number" pos:line="21" pos:column="28">0<pos:position pos:line="21" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"url"<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="38">&amp;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="39">url<pos:position pos:line="21" pos:column="42"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="22" pos:column="28">N_<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><literal type="string" pos:line="22" pos:column="31">"string"<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="23" pos:column="28">N_<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><literal type="string" pos:line="23" pos:column="31">"url where to clone the submodule from"<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_STRING<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"reference"<pos:position pos:line="24" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="44">&amp;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="45">reference<pos:position pos:line="24" pos:column="54"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="25" pos:column="28">N_<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"string"<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="26" pos:column="28">N_<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><literal type="string" pos:line="26" pos:column="31">"reference repository"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>,
		<expr><call><name pos:line="27" pos:column="17">OPT_STRING<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><literal type="number" pos:line="27" pos:column="28">0<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">"depth"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="40">&amp;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="41">depth<pos:position pos:line="27" pos:column="46"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="28" pos:column="28">N_<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><literal type="string" pos:line="28" pos:column="31">"string"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="29" pos:column="28">N_<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><literal type="string" pos:line="29" pos:column="31">"depth for shallow clones"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>,
		<expr><call><name pos:line="30" pos:column="17">OPT__QUIET<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="29">quiet<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="36">"Suppress output for cloning a submodule"<pos:position pos:line="30" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>,
		<macro><name pos:line="31" pos:column="17">OPT_END<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">()<pos:position pos:line="31" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="32" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="32" pos:column="11"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier><specifier pos:line="34" pos:column="21">const<pos:position pos:line="34" pos:column="26"/></specifier></type> <name><name pos:line="34" pos:column="27">git_submodule_helper_usage<pos:position pos:line="34" pos:column="53"/></name><index pos:line="34" pos:column="53">[]<pos:position pos:line="34" pos:column="55"/></index></name> <init pos:line="34" pos:column="56">= <expr><block pos:line="34" pos:column="58">{
		<expr><call><name pos:line="35" pos:column="17">N_<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="string" pos:line="35" pos:column="20">"git submodule--helper clone [--prefix=&lt;path&gt;] [--quiet] "<pos:position pos:line="35" pos:column="84"/></literal>
		   <literal type="string" pos:line="36" pos:column="20">"[--reference &lt;repository&gt;] [--name &lt;name&gt;] [--url &lt;url&gt;]"<pos:position pos:line="36" pos:column="96"/></literal>
		   <literal type="string" pos:line="37" pos:column="20">"[--depth &lt;depth&gt;] [--] [&lt;path&gt;...]"<pos:position pos:line="37" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>,
		<expr><name pos:line="38" pos:column="17">NULL<pos:position pos:line="38" pos:column="21"/></name></expr>
	}<pos:position pos:line="39" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="39" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="41" pos:column="9">argc<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">parse_options<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">argc<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="36">argv<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">prefix<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">module_clone_options<pos:position pos:line="41" pos:column="70"/></name></expr></argument>,
			     <argument><expr><name pos:line="42" pos:column="30">git_submodule_helper_usage<pos:position pos:line="42" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="58">0<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">path<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">||<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="22">!<pos:position pos:line="44" pos:column="23"/></operator><operator pos:line="44" pos:column="23">*<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">path<pos:position pos:line="44" pos:column="28"/></name></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">die<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><call><name pos:line="45" pos:column="21">_<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><literal type="string" pos:line="45" pos:column="23">"submodule--helper: unspecified or empty --path"<pos:position pos:line="45" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strbuf_addf<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><operator pos:line="47" pos:column="21">&amp;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="22">sb<pos:position pos:line="47" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="26">"%s/modules/%s"<pos:position pos:line="47" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="43">get_git_dir<pos:position pos:line="47" pos:column="54"/></name><argument_list pos:line="47" pos:column="54">()<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">name<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">sm_gitdir<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <call><name pos:line="48" pos:column="21">xstrdup<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><call><name pos:line="48" pos:column="29">absolute_path<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><name><name pos:line="48" pos:column="43">sb<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">.<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">buf<pos:position pos:line="48" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">strbuf_reset<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><operator pos:line="49" pos:column="22">&amp;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="23">sb<pos:position pos:line="49" pos:column="25"/></name></expr></argument>)<pos:position pos:line="49" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><call><name pos:line="51" pos:column="14">is_absolute_path<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">path<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="37"/></condition><then pos:line="51" pos:column="37"> <block pos:line="51" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">strbuf_addf<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><operator pos:line="52" pos:column="29">&amp;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="30">sb<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="34">"%s/%s"<pos:position pos:line="52" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="43">get_git_work_tree<pos:position pos:line="52" pos:column="60"/></name><argument_list pos:line="52" pos:column="60">()<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="64">path<pos:position pos:line="52" pos:column="68"/></name></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="53" pos:column="17">path<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <call><name pos:line="53" pos:column="24">strbuf_detach<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="39">sb<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="43">NULL<pos:position pos:line="53" pos:column="47"/></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then> <else pos:line="54" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="17">path<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <call><name pos:line="55" pos:column="24">xstrdup<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">path<pos:position pos:line="55" pos:column="36"/></name></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt></block></else></if>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">!<pos:position pos:line="57" pos:column="14"/></operator><call><name pos:line="57" pos:column="14">file_exists<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">sm_gitdir<pos:position pos:line="57" pos:column="35"/></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="37"/></condition><then pos:line="57" pos:column="37"> <block pos:line="57" pos:column="38">{
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">safe_create_leading_directories_const<pos:position pos:line="58" pos:column="58"/></name><argument_list pos:line="58" pos:column="58">(<argument><expr><name pos:line="58" pos:column="59">sm_gitdir<pos:position pos:line="58" pos:column="68"/></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call> <operator pos:line="58" pos:column="70">&lt;<pos:position pos:line="58" pos:column="74"/></operator> <literal type="number" pos:line="58" pos:column="72">0<pos:position pos:line="58" pos:column="73"/></literal></expr>)<pos:position pos:line="58" pos:column="74"/></condition><then pos:line="58" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="25">die<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><call><name pos:line="59" pos:column="29">_<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><literal type="string" pos:line="59" pos:column="31">"could not create directory '%s'"<pos:position pos:line="59" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="59" pos:column="67">sm_gitdir<pos:position pos:line="59" pos:column="76"/></name></expr></argument>)<pos:position pos:line="59" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="78"/></expr_stmt></block></then></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">clone_submodule<pos:position pos:line="60" pos:column="36"/></name><argument_list pos:line="60" pos:column="36">(<argument><expr><name pos:line="60" pos:column="37">path<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">sm_gitdir<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="54">url<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="59">depth<pos:position pos:line="60" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="66">reference<pos:position pos:line="60" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="77">quiet<pos:position pos:line="60" pos:column="82"/></name></expr></argument>)<pos:position pos:line="60" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="84"/></condition><then pos:line="60" pos:column="84">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="25">die<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><call><name pos:line="61" pos:column="29">_<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><literal type="string" pos:line="61" pos:column="31">"clone of '%s' into submodule path '%s' failed"<pos:position pos:line="61" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="79"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="62" pos:column="29">url<pos:position pos:line="62" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="34">path<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="63" pos:column="10"/></block></then> <else pos:line="63" pos:column="11">else <block pos:line="63" pos:column="16">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><call><name pos:line="64" pos:column="21">safe_create_leading_directories_const<pos:position pos:line="64" pos:column="58"/></name><argument_list pos:line="64" pos:column="58">(<argument><expr><name pos:line="64" pos:column="59">path<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call> <operator pos:line="64" pos:column="65">&lt;<pos:position pos:line="64" pos:column="69"/></operator> <literal type="number" pos:line="64" pos:column="67">0<pos:position pos:line="64" pos:column="68"/></literal></expr>)<pos:position pos:line="64" pos:column="69"/></condition><then pos:line="64" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="25">die<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><call><name pos:line="65" pos:column="29">_<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><literal type="string" pos:line="65" pos:column="31">"could not create directory '%s'"<pos:position pos:line="65" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="67">path<pos:position pos:line="65" pos:column="71"/></name></expr></argument>)<pos:position pos:line="65" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="73"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">strbuf_addf<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><operator pos:line="66" pos:column="29">&amp;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="30">sb<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="34">"%s/index"<pos:position pos:line="66" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="46">sm_gitdir<pos:position pos:line="66" pos:column="55"/></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">unlink_or_warn<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><name><name pos:line="67" pos:column="32">sb<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">.<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">buf<pos:position pos:line="67" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">strbuf_reset<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><operator pos:line="68" pos:column="30">&amp;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="31">sb<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="71" pos:column="9">/* Write a .git file in the submodule to redirect to the superproject. */</comment>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">strbuf_addf<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><operator pos:line="72" pos:column="21">&amp;<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="22">sb<pos:position pos:line="72" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="26">"%s/.git"<pos:position pos:line="72" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">path<pos:position pos:line="72" pos:column="41"/></name></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><call><name pos:line="73" pos:column="13">safe_create_leading_directories_const<pos:position pos:line="73" pos:column="50"/></name><argument_list pos:line="73" pos:column="50">(<argument><expr><name><name pos:line="73" pos:column="51">sb<pos:position pos:line="73" pos:column="53"/></name><operator pos:line="73" pos:column="53">.<pos:position pos:line="73" pos:column="54"/></operator><name pos:line="73" pos:column="54">buf<pos:position pos:line="73" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></call> <operator pos:line="73" pos:column="59">&lt;<pos:position pos:line="73" pos:column="63"/></operator> <literal type="number" pos:line="73" pos:column="61">0<pos:position pos:line="73" pos:column="62"/></literal></expr>)<pos:position pos:line="73" pos:column="63"/></condition><then pos:line="73" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="17">die<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><call><name pos:line="74" pos:column="21">_<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><literal type="string" pos:line="74" pos:column="23">"could not create leading directories of '%s'"<pos:position pos:line="74" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="72">sb<pos:position pos:line="74" pos:column="74"/></name><operator pos:line="74" pos:column="74">.<pos:position pos:line="74" pos:column="75"/></operator><name pos:line="74" pos:column="75">buf<pos:position pos:line="74" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="80"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="75" pos:column="9">submodule_dot_git<pos:position pos:line="75" pos:column="26"/></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator> <call><name pos:line="75" pos:column="29">fopen<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">(<argument><expr><name><name pos:line="75" pos:column="35">sb<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">.<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">buf<pos:position pos:line="75" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="43">"w"<pos:position pos:line="75" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><operator pos:line="76" pos:column="13">!<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">submodule_dot_git<pos:position pos:line="76" pos:column="31"/></name></expr>)<pos:position pos:line="76" pos:column="32"/></condition><then pos:line="76" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="17">die_errno<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><call><name pos:line="77" pos:column="27">_<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><literal type="string" pos:line="77" pos:column="29">"cannot open file '%s'"<pos:position pos:line="77" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="55">sb<pos:position pos:line="77" pos:column="57"/></name><operator pos:line="77" pos:column="57">.<pos:position pos:line="77" pos:column="58"/></operator><name pos:line="77" pos:column="58">buf<pos:position pos:line="77" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="63"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="79" pos:column="9">fprintf_or_die<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><name pos:line="79" pos:column="24">submodule_dot_git<pos:position pos:line="79" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="43">"gitdir: %s\n"<pos:position pos:line="79" pos:column="57"/></literal></expr></argument>,
		       <argument><expr><call><name pos:line="80" pos:column="24">relative_path<pos:position pos:line="80" pos:column="37"/></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name pos:line="80" pos:column="38">sm_gitdir<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">path<pos:position pos:line="80" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="55">&amp;<pos:position pos:line="80" pos:column="60"/></operator><name pos:line="80" pos:column="56">rel_path<pos:position pos:line="80" pos:column="64"/></name></expr></argument>)<pos:position pos:line="80" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="67"/></expr_stmt>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><call><name pos:line="81" pos:column="13">fclose<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">submodule_dot_git<pos:position pos:line="81" pos:column="37"/></name></expr></argument>)<pos:position pos:line="81" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="39"/></condition><then pos:line="81" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="17">die<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><call><name pos:line="82" pos:column="21">_<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><literal type="string" pos:line="82" pos:column="23">"could not close file %s"<pos:position pos:line="82" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="51">sb<pos:position pos:line="82" pos:column="53"/></name><operator pos:line="82" pos:column="53">.<pos:position pos:line="82" pos:column="54"/></operator><name pos:line="82" pos:column="54">buf<pos:position pos:line="82" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="59"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">strbuf_reset<pos:position pos:line="83" pos:column="21"/></name><argument_list pos:line="83" pos:column="21">(<argument><expr><operator pos:line="83" pos:column="22">&amp;<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="23">sb<pos:position pos:line="83" pos:column="25"/></name></expr></argument>)<pos:position pos:line="83" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">strbuf_reset<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><operator pos:line="84" pos:column="22">&amp;<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="23">rel_path<pos:position pos:line="84" pos:column="31"/></name></expr></argument>)<pos:position pos:line="84" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="86" pos:column="9">/* Redirect the worktree of the submodule in the superproject's config */</comment>
	<expr_stmt><expr><name pos:line="87" pos:column="9">p<pos:position pos:line="87" pos:column="10"/></name> <operator pos:line="87" pos:column="11">=<pos:position pos:line="87" pos:column="12"/></operator> <call><name pos:line="87" pos:column="13">git_pathdup_submodule<pos:position pos:line="87" pos:column="34"/></name><argument_list pos:line="87" pos:column="34">(<argument><expr><name pos:line="87" pos:column="35">path<pos:position pos:line="87" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="41">"config"<pos:position pos:line="87" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>
	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><operator pos:line="88" pos:column="13">!<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="14">p<pos:position pos:line="88" pos:column="15"/></name></expr>)<pos:position pos:line="88" pos:column="16"/></condition><then pos:line="88" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="17">die<pos:position pos:line="89" pos:column="20"/></name><argument_list pos:line="89" pos:column="20">(<argument><expr><call><name pos:line="89" pos:column="21">_<pos:position pos:line="89" pos:column="22"/></name><argument_list pos:line="89" pos:column="22">(<argument><expr><literal type="string" pos:line="89" pos:column="23">"could not get submodule directory for '%s'"<pos:position pos:line="89" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="89" pos:column="70">path<pos:position pos:line="89" pos:column="74"/></name></expr></argument>)<pos:position pos:line="89" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="76"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">git_config_set_in_file<pos:position pos:line="90" pos:column="31"/></name><argument_list pos:line="90" pos:column="31">(<argument><expr><name pos:line="90" pos:column="32">p<pos:position pos:line="90" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="35">"core.worktree"<pos:position pos:line="90" pos:column="50"/></literal></expr></argument>,
			       <argument><expr><call><name pos:line="91" pos:column="32">relative_path<pos:position pos:line="91" pos:column="45"/></name><argument_list pos:line="91" pos:column="45">(<argument><expr><name pos:line="91" pos:column="46">path<pos:position pos:line="91" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="52">sm_gitdir<pos:position pos:line="91" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="63">&amp;<pos:position pos:line="91" pos:column="68"/></operator><name pos:line="91" pos:column="64">rel_path<pos:position pos:line="91" pos:column="72"/></name></expr></argument>)<pos:position pos:line="91" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">strbuf_release<pos:position pos:line="92" pos:column="23"/></name><argument_list pos:line="92" pos:column="23">(<argument><expr><operator pos:line="92" pos:column="24">&amp;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="25">sb<pos:position pos:line="92" pos:column="27"/></name></expr></argument>)<pos:position pos:line="92" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">strbuf_release<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><operator pos:line="93" pos:column="24">&amp;<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="25">rel_path<pos:position pos:line="93" pos:column="33"/></name></expr></argument>)<pos:position pos:line="93" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">free<pos:position pos:line="94" pos:column="13"/></name><argument_list pos:line="94" pos:column="13">(<argument><expr><name pos:line="94" pos:column="14">sm_gitdir<pos:position pos:line="94" pos:column="23"/></name></expr></argument>)<pos:position pos:line="94" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="95" pos:column="9">free<pos:position pos:line="95" pos:column="13"/></name><argument_list pos:line="95" pos:column="13">(<argument><expr><name pos:line="95" pos:column="14">path<pos:position pos:line="95" pos:column="18"/></name></expr></argument>)<pos:position pos:line="95" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">free<pos:position pos:line="96" pos:column="13"/></name><argument_list pos:line="96" pos:column="13">(<argument><expr><name pos:line="96" pos:column="14">p<pos:position pos:line="96" pos:column="15"/></name></expr></argument>)<pos:position pos:line="96" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="17"/></expr_stmt>
	<return pos:line="97" pos:column="9">return <expr><literal type="number" pos:line="97" pos:column="16">0<pos:position pos:line="97" pos:column="17"/></literal></expr>;<pos:position pos:line="97" pos:column="18"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

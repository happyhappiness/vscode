<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2109.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_push_config<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">k<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">v<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">void<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">cb<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">flags<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">cb<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">git_gpg_config<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">k<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">v<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">NULL<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">status<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">status<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">strcmp<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">k<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="24">"push.followtags"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">git_config_bool<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">k<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">v<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">flags<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">|=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">TRANSPORT_PUSH_FOLLOW_TAGS<pos:position pos:line="12" pos:column="61"/></name></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">flags<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">&amp;=<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="35">~<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">TRANSPORT_PUSH_FOLLOW_TAGS<pos:position pos:line="14" pos:column="62"/></name></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt></block></else></if>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><operator pos:line="16" pos:column="20">!<pos:position pos:line="16" pos:column="21"/></operator><call><name pos:line="16" pos:column="21">strcmp<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">k<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"push.gpgsign"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47"> <block pos:line="16" pos:column="48">{
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">value<pos:position pos:line="17" pos:column="34"/></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">git_config_get_value<pos:position pos:line="18" pos:column="42"/></name><argument_list pos:line="18" pos:column="42">(<argument><expr><literal type="string" pos:line="18" pos:column="43">"push.gpgsign"<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="59">&amp;<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="60">value<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="67"/></condition><then pos:line="18" pos:column="67"> <block pos:line="18" pos:column="68">{
			<switch pos:line="19" pos:column="25">switch <condition pos:line="19" pos:column="32">(<expr><call><name pos:line="19" pos:column="33">git_config_maybe_bool<pos:position pos:line="19" pos:column="54"/></name><argument_list pos:line="19" pos:column="54">(<argument><expr><literal type="string" pos:line="19" pos:column="55">"push.gpgsign"<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="71">value<pos:position pos:line="19" pos:column="76"/></name></expr></argument>)<pos:position pos:line="19" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="78"/></condition> <block pos:line="19" pos:column="79">{
			<case pos:line="20" pos:column="25">case <expr><literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>:<pos:position pos:line="20" pos:column="32"/></case>
				<expr_stmt><expr><call><name pos:line="21" pos:column="33">set_push_cert_flags<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">flags<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="60">SEND_PACK_PUSH_CERT_NEVER<pos:position pos:line="21" pos:column="85"/></name></expr></argument>)<pos:position pos:line="21" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="87"/></expr_stmt>
				<break pos:line="22" pos:column="33">break;<pos:position pos:line="22" pos:column="39"/></break>
			<case pos:line="23" pos:column="25">case <expr><literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal></expr>:<pos:position pos:line="23" pos:column="32"/></case>
				<expr_stmt><expr><call><name pos:line="24" pos:column="33">set_push_cert_flags<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">flags<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">SEND_PACK_PUSH_CERT_ALWAYS<pos:position pos:line="24" pos:column="86"/></name></expr></argument>)<pos:position pos:line="24" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="88"/></expr_stmt>
				<break pos:line="25" pos:column="33">break;<pos:position pos:line="25" pos:column="39"/></break>
			<default pos:line="26" pos:column="25">default:<pos:position pos:line="26" pos:column="33"/></default>
				<if pos:line="27" pos:column="33">if <condition pos:line="27" pos:column="36">(<expr><name pos:line="27" pos:column="37">value<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">&amp;&amp;<pos:position pos:line="27" pos:column="53"/></operator> <operator pos:line="27" pos:column="46">!<pos:position pos:line="27" pos:column="47"/></operator><call><name pos:line="27" pos:column="47">strcasecmp<pos:position pos:line="27" pos:column="57"/></name><argument_list pos:line="27" pos:column="57">(<argument><expr><name pos:line="27" pos:column="58">value<pos:position pos:line="27" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="65">"if-asked"<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="77"/></condition><then pos:line="27" pos:column="77">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="41">set_push_cert_flags<pos:position pos:line="28" pos:column="60"/></name><argument_list pos:line="28" pos:column="60">(<argument><expr><name pos:line="28" pos:column="61">flags<pos:position pos:line="28" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">SEND_PACK_PUSH_CERT_IF_ASKED<pos:position pos:line="28" pos:column="96"/></name></expr></argument>)<pos:position pos:line="28" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="98"/></expr_stmt></block></then>
				<else pos:line="29" pos:column="33">else
					<block type="pseudo"><return pos:line="30" pos:column="41">return <expr><call><name pos:line="30" pos:column="48">error<pos:position pos:line="30" pos:column="53"/></name><argument_list pos:line="30" pos:column="53">(<argument><expr><literal type="string" pos:line="30" pos:column="54">"Invalid value for '%s'"<pos:position pos:line="30" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="80">k<pos:position pos:line="30" pos:column="81"/></name></expr></argument>)<pos:position pos:line="30" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="83"/></return></block></else></if>
			}<pos:position pos:line="31" pos:column="26"/></block></switch>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="35" pos:column="9">return <expr><call><name pos:line="35" pos:column="16">git_default_config<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">k<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">v<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="41">NULL<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4973_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">unpack_raw_entry<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">object_entry<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">obj<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">off_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">ofs_offset<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">unsigned<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">char<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">ref_sha1<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="4" pos:column="31">unsigned<pos:position pos:line="4" pos:column="39"/></name> <name pos:line="4" pos:column="40">char<pos:position pos:line="4" pos:column="44"/></name> <modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier></type><name pos:line="4" pos:column="46">sha1<pos:position pos:line="4" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="51"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">p<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">long<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">size<pos:position pos:line="7" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="29">c<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">off_t<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">base_offset<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">shift<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">void<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">obj<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">idx<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">offset<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">consumed_bytes<pos:position pos:line="12" pos:column="41"/></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">input_crc32<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">crc32<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="38">0<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">fill<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><literal type="number" pos:line="15" pos:column="18">1<pos:position pos:line="15" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">c<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">p<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">use<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">obj<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">type<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">c<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">&gt;&gt;<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="27">4<pos:position pos:line="18" pos:column="28"/></literal><operator pos:line="18" pos:column="28">)<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="30">&amp;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="32">7<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">size<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">c<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&amp;<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="21">15<pos:position pos:line="19" pos:column="23"/></literal><operator pos:line="19" pos:column="23">)<pos:position pos:line="19" pos:column="24"/></operator></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">shift<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">4<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">c<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&amp;<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="20">0x80<pos:position pos:line="21" pos:column="24"/></literal></expr>)<pos:position pos:line="21" pos:column="25"/></condition> <block pos:line="21" pos:column="26">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">fill<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">c<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">p<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">use<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="number" pos:line="24" pos:column="21">1<pos:position pos:line="24" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">size<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">+=<pos:position pos:line="25" pos:column="24"/></operator> <operator pos:line="25" pos:column="25">(<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">c<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&amp;<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="30">0x7f<pos:position pos:line="25" pos:column="34"/></literal><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="36">&lt;&lt;<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="39">shift<pos:position pos:line="25" pos:column="44"/></name></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">shift<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">7<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></while>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">obj<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">size<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">size<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>

	<switch pos:line="30" pos:column="9">switch <condition pos:line="30" pos:column="16">(<expr><name><name pos:line="30" pos:column="17">obj<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">type<pos:position pos:line="30" pos:column="26"/></name></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition> <block pos:line="30" pos:column="28">{
	<case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">OBJ_REF_DELTA<pos:position pos:line="31" pos:column="27"/></name></expr>:<pos:position pos:line="31" pos:column="28"/></case>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">hashcpy<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">ref_sha1<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="35">fill<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><literal type="number" pos:line="32" pos:column="40">20<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">use<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="number" pos:line="33" pos:column="21">20<pos:position pos:line="33" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
		<break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
	<case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">OBJ_OFS_DELTA<pos:position pos:line="35" pos:column="27"/></name></expr>:<pos:position pos:line="35" pos:column="28"/></case>
		<expr_stmt><expr><name pos:line="36" pos:column="17">p<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <call><name pos:line="36" pos:column="21">fill<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">c<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <operator pos:line="37" pos:column="21">*<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">p<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">use<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">base_offset<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">c<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator> <literal type="number" pos:line="39" pos:column="35">127<pos:position pos:line="39" pos:column="38"/></literal></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
		<while pos:line="40" pos:column="17">while <condition pos:line="40" pos:column="23">(<expr><name pos:line="40" pos:column="24">c<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">&amp;<pos:position pos:line="40" pos:column="31"/></operator> <literal type="number" pos:line="40" pos:column="28">128<pos:position pos:line="40" pos:column="31"/></literal></expr>)<pos:position pos:line="40" pos:column="32"/></condition> <block pos:line="40" pos:column="33">{
			<expr_stmt><expr><name pos:line="41" pos:column="25">base_offset<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">+=<pos:position pos:line="41" pos:column="39"/></operator> <literal type="number" pos:line="41" pos:column="40">1<pos:position pos:line="41" pos:column="41"/></literal></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">!<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">base_offset<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">||<pos:position pos:line="42" pos:column="44"/></operator> <call><name pos:line="42" pos:column="45">MSB<pos:position pos:line="42" pos:column="48"/></name><argument_list pos:line="42" pos:column="48">(<argument><expr><name pos:line="42" pos:column="49">base_offset<pos:position pos:line="42" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="62">7<pos:position pos:line="42" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="65"/></condition><then pos:line="42" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="33">bad_object<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><name><name pos:line="43" pos:column="44">obj<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">-&gt;<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="49">idx<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">.<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="53">offset<pos:position pos:line="43" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="61">_<pos:position pos:line="43" pos:column="62"/></name><argument_list pos:line="43" pos:column="62">(<argument><expr><literal type="string" pos:line="43" pos:column="63">"offset value overflow for delta base object"<pos:position pos:line="43" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="111"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="44" pos:column="25">p<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <call><name pos:line="44" pos:column="29">fill<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><literal type="number" pos:line="44" pos:column="34">1<pos:position pos:line="44" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">c<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <operator pos:line="45" pos:column="29">*<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">p<pos:position pos:line="45" pos:column="31"/></name></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">use<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><literal type="number" pos:line="46" pos:column="29">1<pos:position pos:line="46" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">base_offset<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">=<pos:position pos:line="47" pos:column="38"/></operator> <operator pos:line="47" pos:column="39">(<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">base_offset<pos:position pos:line="47" pos:column="51"/></name> <operator pos:line="47" pos:column="52">&lt;&lt;<pos:position pos:line="47" pos:column="60"/></operator> <literal type="number" pos:line="47" pos:column="55">7<pos:position pos:line="47" pos:column="56"/></literal><operator pos:line="47" pos:column="56">)<pos:position pos:line="47" pos:column="57"/></operator> <operator pos:line="47" pos:column="58">+<pos:position pos:line="47" pos:column="59"/></operator> <operator pos:line="47" pos:column="60">(<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="61">c<pos:position pos:line="47" pos:column="62"/></name> <operator pos:line="47" pos:column="63">&amp;<pos:position pos:line="47" pos:column="68"/></operator> <literal type="number" pos:line="47" pos:column="65">127<pos:position pos:line="47" pos:column="68"/></literal><operator pos:line="47" pos:column="68">)<pos:position pos:line="47" pos:column="69"/></operator></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></while>
		<expr_stmt><expr><operator pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">ofs_offset<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">=<pos:position pos:line="49" pos:column="30"/></operator> <name><name pos:line="49" pos:column="31">obj<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">-&gt;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="36">idx<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">.<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="40">offset<pos:position pos:line="49" pos:column="46"/></name></name> <operator pos:line="49" pos:column="47">-<pos:position pos:line="49" pos:column="48"/></operator> <name pos:line="49" pos:column="49">base_offset<pos:position pos:line="49" pos:column="60"/></name></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">*<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">ofs_offset<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">&lt;=<pos:position pos:line="50" pos:column="38"/></operator> <literal type="number" pos:line="50" pos:column="36">0<pos:position pos:line="50" pos:column="37"/></literal> <operator pos:line="50" pos:column="38">||<pos:position pos:line="50" pos:column="40"/></operator> <operator pos:line="50" pos:column="41">*<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">ofs_offset<pos:position pos:line="50" pos:column="52"/></name> <operator pos:line="50" pos:column="53">&gt;=<pos:position pos:line="50" pos:column="58"/></operator> <name><name pos:line="50" pos:column="56">obj<pos:position pos:line="50" pos:column="59"/></name><operator pos:line="50" pos:column="59">-&gt;<pos:position pos:line="50" pos:column="64"/></operator><name pos:line="50" pos:column="61">idx<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">.<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="65">offset<pos:position pos:line="50" pos:column="71"/></name></name></expr>)<pos:position pos:line="50" pos:column="72"/></condition><then pos:line="50" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">bad_object<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name><name pos:line="51" pos:column="36">obj<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">-&gt;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="41">idx<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">.<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="45">offset<pos:position pos:line="51" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="53">_<pos:position pos:line="51" pos:column="54"/></name><argument_list pos:line="51" pos:column="54">(<argument><expr><literal type="string" pos:line="51" pos:column="55">"delta base offset is out of bound"<pos:position pos:line="51" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="93"/></expr_stmt></block></then></if>
		<break pos:line="52" pos:column="17">break;<pos:position pos:line="52" pos:column="23"/></break>
	<case pos:line="53" pos:column="9">case <expr><name pos:line="53" pos:column="14">OBJ_COMMIT<pos:position pos:line="53" pos:column="24"/></name></expr>:<pos:position pos:line="53" pos:column="25"/></case>
	<case pos:line="54" pos:column="9">case <expr><name pos:line="54" pos:column="14">OBJ_TREE<pos:position pos:line="54" pos:column="22"/></name></expr>:<pos:position pos:line="54" pos:column="23"/></case>
	<case pos:line="55" pos:column="9">case <expr><name pos:line="55" pos:column="14">OBJ_BLOB<pos:position pos:line="55" pos:column="22"/></name></expr>:<pos:position pos:line="55" pos:column="23"/></case>
	<case pos:line="56" pos:column="9">case <expr><name pos:line="56" pos:column="14">OBJ_TAG<pos:position pos:line="56" pos:column="21"/></name></expr>:<pos:position pos:line="56" pos:column="22"/></case>
		<break pos:line="57" pos:column="17">break;<pos:position pos:line="57" pos:column="23"/></break>
	<default pos:line="58" pos:column="9">default:<pos:position pos:line="58" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">bad_object<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name><name pos:line="59" pos:column="28">obj<pos:position pos:line="59" pos:column="31"/></name><operator pos:line="59" pos:column="31">-&gt;<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="33">idx<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">.<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="37">offset<pos:position pos:line="59" pos:column="43"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="45">_<pos:position pos:line="59" pos:column="46"/></name><argument_list pos:line="59" pos:column="46">(<argument><expr><literal type="string" pos:line="59" pos:column="47">"unknown object type %d"<pos:position pos:line="59" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="74">obj<pos:position pos:line="59" pos:column="77"/></name><operator pos:line="59" pos:column="77">-&gt;<pos:position pos:line="59" pos:column="82"/></operator><name pos:line="59" pos:column="79">type<pos:position pos:line="59" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="85"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></switch>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">obj<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">hdr_size<pos:position pos:line="61" pos:column="22"/></name></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <name pos:line="61" pos:column="25">consumed_bytes<pos:position pos:line="61" pos:column="39"/></name> <operator pos:line="61" pos:column="40">-<pos:position pos:line="61" pos:column="41"/></operator> <name><name pos:line="61" pos:column="42">obj<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">-&gt;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="47">idx<pos:position pos:line="61" pos:column="50"/></name><operator pos:line="61" pos:column="50">.<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="51">offset<pos:position pos:line="61" pos:column="57"/></name></name></expr>;<pos:position pos:line="61" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><name pos:line="63" pos:column="9">data<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">unpack_entry_data<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name><name pos:line="63" pos:column="34">obj<pos:position pos:line="63" pos:column="37"/></name><operator pos:line="63" pos:column="37">-&gt;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="39">idx<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">.<pos:position pos:line="63" pos:column="43"/></operator><name pos:line="63" pos:column="43">offset<pos:position pos:line="63" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="51">obj<pos:position pos:line="63" pos:column="54"/></name><operator pos:line="63" pos:column="54">-&gt;<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="56">size<pos:position pos:line="63" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="62">obj<pos:position pos:line="63" pos:column="65"/></name><operator pos:line="63" pos:column="65">-&gt;<pos:position pos:line="63" pos:column="70"/></operator><name pos:line="63" pos:column="67">type<pos:position pos:line="63" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="73">sha1<pos:position pos:line="63" pos:column="77"/></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="64" pos:column="9">obj<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">idx<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">.<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">crc32<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">input_crc32<pos:position pos:line="64" pos:column="37"/></name></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
	<return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">data<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

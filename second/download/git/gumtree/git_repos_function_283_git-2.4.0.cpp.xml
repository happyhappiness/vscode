<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_283_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compare_name<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">cache_entry<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ce<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">path<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">namelen<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<return pos:line="3" pos:column="9">return <expr><name pos:line="3" pos:column="16">namelen<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">!=<pos:position pos:line="3" pos:column="26"/></operator> <call><name pos:line="3" pos:column="27">ce_namelen<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><name pos:line="3" pos:column="38">ce<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call> <operator pos:line="3" pos:column="42">||<pos:position pos:line="3" pos:column="44"/></operator> <call><name pos:line="3" pos:column="45">memcmp<pos:position pos:line="3" pos:column="51"/></name><argument_list pos:line="3" pos:column="51">(<argument><expr><name pos:line="3" pos:column="52">path<pos:position pos:line="3" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="58">ce<pos:position pos:line="3" pos:column="60"/></name><operator pos:line="3" pos:column="60">-&gt;<pos:position pos:line="3" pos:column="65"/></operator><name pos:line="3" pos:column="62">name<pos:position pos:line="3" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="68">namelen<pos:position pos:line="3" pos:column="75"/></name></expr></argument>)<pos:position pos:line="3" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="77"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

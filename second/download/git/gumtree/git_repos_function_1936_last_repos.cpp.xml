<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1936_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">sane_case<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">x<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">high<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">sane_istest<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">x<pos:position pos:line="3" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="28">GIT_ALPHA<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="39"/></condition><then pos:line="3" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">x<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">=<pos:position pos:line="4" pos:column="20"/></operator> <operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">x<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&amp;<pos:position pos:line="4" pos:column="29"/></operator> <operator pos:line="4" pos:column="26">~<pos:position pos:line="4" pos:column="27"/></operator><literal type="number" pos:line="4" pos:column="27">0x20<pos:position pos:line="4" pos:column="31"/></literal><operator pos:line="4" pos:column="31">)<pos:position pos:line="4" pos:column="32"/></operator> <operator pos:line="4" pos:column="33">|<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="35">high<pos:position pos:line="4" pos:column="39"/></name></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt></block></then></if>
	<return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">x<pos:position pos:line="5" pos:column="17"/></name></expr>;<pos:position pos:line="5" pos:column="18"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

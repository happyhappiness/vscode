<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2626_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fetch_object<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">walker<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">walker<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">unsigned<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">sha1<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">hex<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">sha1_to_hex<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name pos:line="3" pos:column="33">sha1<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_request<pos:position pos:line="5" pos:column="30"/></name></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">obj_req<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><name pos:line="5" pos:column="42">NULL<pos:position pos:line="5" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">http_object_request<pos:position pos:line="6" pos:column="35"/></name></name> <modifier pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></modifier></type><name pos:line="6" pos:column="37">req<pos:position pos:line="6" pos:column="40"/></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">list_head<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">pos<pos:position pos:line="7" pos:column="30"/></name></decl>, <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="33">head<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="41">object_queue_head<pos:position pos:line="7" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>

	<macro><name pos:line="9" pos:column="9">list_for_each<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument pos:line="9" pos:column="23">pos<pos:position pos:line="9" pos:column="26"/></argument>, <argument pos:line="9" pos:column="28">head<pos:position pos:line="9" pos:column="32"/></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></macro> <block pos:line="9" pos:column="34">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">obj_req<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <call><name pos:line="10" pos:column="27">list_entry<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">pos<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr pos:line="10" pos:column="43">struct <name pos:line="10" pos:column="50">object_request<pos:position pos:line="10" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="66">node<pos:position pos:line="10" pos:column="70"/></name></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">hashcmp<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">obj_req<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">sha1<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">sha1<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51">
			<block type="pseudo"><break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">obj_req<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">==<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><call><name pos:line="15" pos:column="24">error<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><literal type="string" pos:line="15" pos:column="30">"Couldn't find request for %s in the queue"<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="75">hex<pos:position pos:line="15" pos:column="78"/></name></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></return></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">has_sha1_file<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">obj_req<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">sha1<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">obj_req<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">req<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">!=<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">NULL<pos:position pos:line="18" pos:column="41"/></name></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">abort_http_object_request<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name><name pos:line="19" pos:column="51">obj_req<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">-&gt;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="60">req<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">abort_object_request<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">obj_req<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">USE_CURL_MULTI<pos:position pos:line="24" pos:column="22"/></name></cpp:ifdef>
	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><name><name pos:line="25" pos:column="16">obj_req<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">state<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">==<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">WAITING<pos:position pos:line="25" pos:column="41"/></name></expr>)<pos:position pos:line="25" pos:column="42"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">step_active_slots<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">()<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt></block></while>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">start_object_request<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">walker<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">obj_req<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="31" pos:column="9">/*
	 * obj_req-&gt;req might change when fetching alternates in the callback
	 * process_object_response; therefore, the "shortcut" variable, req,
	 * is used only after we're done with slots.
	 */</comment>
	<while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><name><name pos:line="36" pos:column="16">obj_req<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">state<pos:position pos:line="36" pos:column="30"/></name></name> <operator pos:line="36" pos:column="31">==<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">ACTIVE<pos:position pos:line="36" pos:column="40"/></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">run_active_slot<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">obj_req<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">req<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">slot<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt></block></while>

	<expr_stmt><expr><name pos:line="39" pos:column="9">req<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name><name pos:line="39" pos:column="15">obj_req<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">req<pos:position pos:line="39" pos:column="27"/></name></name></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">req<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">localfile<pos:position pos:line="41" pos:column="27"/></name></name> <operator pos:line="41" pos:column="28">!=<pos:position pos:line="41" pos:column="30"/></operator> <operator pos:line="41" pos:column="31">-<pos:position pos:line="41" pos:column="32"/></operator><literal type="number" pos:line="41" pos:column="32">1<pos:position pos:line="41" pos:column="33"/></literal></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34"> <block pos:line="41" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">close<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name><name pos:line="42" pos:column="23">req<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">localfile<pos:position pos:line="42" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">req<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">localfile<pos:position pos:line="43" pos:column="31"/></name></name> <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <operator pos:line="43" pos:column="34">-<pos:position pos:line="43" pos:column="35"/></operator><literal type="number" pos:line="43" pos:column="35">1<pos:position pos:line="43" pos:column="36"/></literal></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="46" pos:column="9">/*
	 * we turned off CURLOPT_FAILONERROR to avoid losing a
	 * persistent connection and got CURLE_OK.
	 */</comment>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">req<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">http_code<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">&gt;=<pos:position pos:line="50" pos:column="33"/></operator> <literal type="number" pos:line="50" pos:column="31">300<pos:position pos:line="50" pos:column="34"/></literal> <operator pos:line="50" pos:column="35">&amp;&amp;<pos:position pos:line="50" pos:column="45"/></operator> <name><name pos:line="50" pos:column="38">req<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">curl_result<pos:position pos:line="50" pos:column="54"/></name></name> <operator pos:line="50" pos:column="55">==<pos:position pos:line="50" pos:column="57"/></operator> <name pos:line="50" pos:column="58">CURLE_OK<pos:position pos:line="50" pos:column="66"/></name> <operator pos:line="50" pos:column="67">&amp;&amp;<pos:position pos:line="50" pos:column="77"/></operator>
			<operator pos:line="51" pos:column="25">(<pos:position pos:line="51" pos:column="26"/></operator><call><name pos:line="51" pos:column="26">starts_with<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name><name pos:line="51" pos:column="38">req<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">-&gt;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="43">url<pos:position pos:line="51" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="48">"http://"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call> <operator pos:line="51" pos:column="59">||<pos:position pos:line="51" pos:column="61"/></operator>
			 <call><name pos:line="52" pos:column="26">starts_with<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name><name pos:line="52" pos:column="38">req<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">url<pos:position pos:line="52" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="48">"https://"<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call><operator pos:line="52" pos:column="59">)<pos:position pos:line="52" pos:column="60"/></operator></expr>)<pos:position pos:line="52" pos:column="61"/></condition><then pos:line="52" pos:column="61"> <block pos:line="52" pos:column="62">{
		<expr_stmt><expr><name><name pos:line="53" pos:column="17">req<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">curl_result<pos:position pos:line="53" pos:column="33"/></name></name> <operator pos:line="53" pos:column="34">=<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">CURLE_HTTP_RETURNED_ERROR<pos:position pos:line="53" pos:column="61"/></name></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">xsnprintf<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name><name pos:line="54" pos:column="27">req<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">-&gt;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="32">errorstr<pos:position pos:line="54" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="42">sizeof<argument_list pos:line="54" pos:column="48">(<argument><expr><name><name pos:line="54" pos:column="49">req<pos:position pos:line="54" pos:column="52"/></name><operator pos:line="54" pos:column="52">-&gt;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="54">errorstr<pos:position pos:line="54" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></sizeof></expr></argument>,
			  <argument><expr><literal type="string" pos:line="55" pos:column="27">"HTTP request failed"<pos:position pos:line="55" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">obj_req<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">state<pos:position pos:line="58" pos:column="27"/></name></name> <operator pos:line="58" pos:column="28">==<pos:position pos:line="58" pos:column="30"/></operator> <name pos:line="58" pos:column="31">ABORTED<pos:position pos:line="58" pos:column="38"/></name></expr>)<pos:position pos:line="58" pos:column="39"/></condition><then pos:line="58" pos:column="39"> <block pos:line="58" pos:column="40">{
		<expr_stmt><expr><name pos:line="59" pos:column="17">ret<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <call><name pos:line="59" pos:column="23">error<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><literal type="string" pos:line="59" pos:column="29">"Request for %s aborted"<pos:position pos:line="59" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="55">hex<pos:position pos:line="59" pos:column="58"/></name></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></then> <elseif pos:line="60" pos:column="11">else <if pos:line="60" pos:column="16">if <condition pos:line="60" pos:column="19">(<expr><name><name pos:line="60" pos:column="20">req<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">curl_result<pos:position pos:line="60" pos:column="36"/></name></name> <operator pos:line="60" pos:column="37">!=<pos:position pos:line="60" pos:column="39"/></operator> <name pos:line="60" pos:column="40">CURLE_OK<pos:position pos:line="60" pos:column="48"/></name> <operator pos:line="60" pos:column="49">&amp;&amp;<pos:position pos:line="60" pos:column="59"/></operator>
		   <name><name pos:line="61" pos:column="20">req<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">-&gt;<pos:position pos:line="61" pos:column="28"/></operator><name pos:line="61" pos:column="25">http_code<pos:position pos:line="61" pos:column="34"/></name></name> <operator pos:line="61" pos:column="35">!=<pos:position pos:line="61" pos:column="37"/></operator> <literal type="number" pos:line="61" pos:column="38">416<pos:position pos:line="61" pos:column="41"/></literal></expr>)<pos:position pos:line="61" pos:column="42"/></condition><then pos:line="61" pos:column="42"> <block pos:line="61" pos:column="43">{
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">missing_target<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">req<pos:position pos:line="62" pos:column="39"/></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="25">ret<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <operator pos:line="63" pos:column="31">-<pos:position pos:line="63" pos:column="32"/></operator><literal type="number" pos:line="63" pos:column="32">1<pos:position pos:line="63" pos:column="33"/></literal></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt></block></then> <comment type="block" pos:line="63" pos:column="35">/* Be silent, it is probably in a pack. */</comment>
		<else pos:line="64" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="25">ret<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <call><name pos:line="65" pos:column="31">error<pos:position pos:line="65" pos:column="36"/></name><argument_list pos:line="65" pos:column="36">(<argument><expr><literal type="string" pos:line="65" pos:column="37">"%s (curl_result = %d, http_code = %ld, sha1 = %s)"<pos:position pos:line="65" pos:column="88"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="66" pos:column="37">req<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">-&gt;<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="42">errorstr<pos:position pos:line="66" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="52">req<pos:position pos:line="66" pos:column="55"/></name><operator pos:line="66" pos:column="55">-&gt;<pos:position pos:line="66" pos:column="60"/></operator><name pos:line="66" pos:column="57">curl_result<pos:position pos:line="66" pos:column="68"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="67" pos:column="37">req<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">http_code<pos:position pos:line="67" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="53">hex<pos:position pos:line="67" pos:column="56"/></name></expr></argument>)<pos:position pos:line="67" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="58"/></expr_stmt></block></else></if>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if></elseif> <elseif pos:line="68" pos:column="11">else <if pos:line="68" pos:column="16">if <condition pos:line="68" pos:column="19">(<expr><name><name pos:line="68" pos:column="20">req<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">-&gt;<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="25">zret<pos:position pos:line="68" pos:column="29"/></name></name> <operator pos:line="68" pos:column="30">!=<pos:position pos:line="68" pos:column="32"/></operator> <name pos:line="68" pos:column="33">Z_STREAM_END<pos:position pos:line="68" pos:column="45"/></name></expr>)<pos:position pos:line="68" pos:column="46"/></condition><then pos:line="68" pos:column="46"> <block pos:line="68" pos:column="47">{
		<expr_stmt><expr><name><name pos:line="69" pos:column="17">walker<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">-&gt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">corrupt_object_found<pos:position pos:line="69" pos:column="45"/></name></name><operator pos:line="69" pos:column="45">++<pos:position pos:line="69" pos:column="47"/></operator></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="70" pos:column="17">ret<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <call><name pos:line="70" pos:column="23">error<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><literal type="string" pos:line="70" pos:column="29">"File %s (%s) corrupt"<pos:position pos:line="70" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="53">hex<pos:position pos:line="70" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="58">req<pos:position pos:line="70" pos:column="61"/></name><operator pos:line="70" pos:column="61">-&gt;<pos:position pos:line="70" pos:column="66"/></operator><name pos:line="70" pos:column="63">url<pos:position pos:line="70" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if></elseif> <elseif pos:line="71" pos:column="11">else <if pos:line="71" pos:column="16">if <condition pos:line="71" pos:column="19">(<expr><call><name pos:line="71" pos:column="20">hashcmp<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name><name pos:line="71" pos:column="28">obj_req<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">sha1<pos:position pos:line="71" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="43">req<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">real_sha1<pos:position pos:line="71" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="59"/></condition><then pos:line="71" pos:column="59"> <block pos:line="71" pos:column="60">{
		<expr_stmt><expr><name pos:line="72" pos:column="17">ret<pos:position pos:line="72" pos:column="20"/></name> <operator pos:line="72" pos:column="21">=<pos:position pos:line="72" pos:column="22"/></operator> <call><name pos:line="72" pos:column="23">error<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><literal type="string" pos:line="72" pos:column="29">"File %s has bad hash"<pos:position pos:line="72" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="53">hex<pos:position pos:line="72" pos:column="56"/></name></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if></elseif> <elseif pos:line="73" pos:column="11">else <if pos:line="73" pos:column="16">if <condition pos:line="73" pos:column="19">(<expr><name><name pos:line="73" pos:column="20">req<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">-&gt;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="25">rename<pos:position pos:line="73" pos:column="31"/></name></name> <operator pos:line="73" pos:column="32">&lt;<pos:position pos:line="73" pos:column="36"/></operator> <literal type="number" pos:line="73" pos:column="34">0<pos:position pos:line="73" pos:column="35"/></literal></expr>)<pos:position pos:line="73" pos:column="36"/></condition><then pos:line="73" pos:column="36"> <block pos:line="73" pos:column="37">{
		<expr_stmt><expr><name pos:line="74" pos:column="17">ret<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <call><name pos:line="74" pos:column="23">error<pos:position pos:line="74" pos:column="28"/></name><argument_list pos:line="74" pos:column="28">(<argument><expr><literal type="string" pos:line="74" pos:column="29">"unable to write sha1 filename %s"<pos:position pos:line="74" pos:column="63"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="75" pos:column="29">sha1_file_name<pos:position pos:line="75" pos:column="43"/></name><argument_list pos:line="75" pos:column="43">(<argument><expr><name><name pos:line="75" pos:column="44">req<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">-&gt;<pos:position pos:line="75" pos:column="52"/></operator><name pos:line="75" pos:column="49">sha1<pos:position pos:line="75" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="78" pos:column="9">release_http_object_request<pos:position pos:line="78" pos:column="36"/></name><argument_list pos:line="78" pos:column="36">(<argument><expr><name pos:line="78" pos:column="37">req<pos:position pos:line="78" pos:column="40"/></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">release_object_request<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><name pos:line="79" pos:column="32">obj_req<pos:position pos:line="79" pos:column="39"/></name></expr></argument>)<pos:position pos:line="79" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt>
	<return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">ret<pos:position pos:line="80" pos:column="19"/></name></expr>;<pos:position pos:line="80" pos:column="20"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

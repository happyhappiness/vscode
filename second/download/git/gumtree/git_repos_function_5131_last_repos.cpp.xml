<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5131_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_name_rev<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">argc<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">prefix<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object_array<pos:position pos:line="3" pos:column="28"/></name></name></type> <name pos:line="3" pos:column="29">revs<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">OBJECT_ARRAY_INIT<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">all<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">transform_stdin<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="43">allow_undefined<pos:position pos:line="4" pos:column="58"/></name> <init pos:line="4" pos:column="59">= <expr><literal type="number" pos:line="4" pos:column="61">1<pos:position pos:line="4" pos:column="62"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="64">always<pos:position pos:line="4" pos:column="70"/></name> <init pos:line="4" pos:column="71">= <expr><literal type="number" pos:line="4" pos:column="73">0<pos:position pos:line="4" pos:column="74"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="76">peel_tag<pos:position pos:line="4" pos:column="84"/></name> <init pos:line="4" pos:column="85">= <expr><literal type="number" pos:line="4" pos:column="87">0<pos:position pos:line="4" pos:column="88"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="89"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">name_ref_data<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">data<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><block pos:line="5" pos:column="37">{ <expr><literal type="number" pos:line="5" pos:column="39">0<pos:position pos:line="5" pos:column="40"/></literal></expr>, <expr><literal type="number" pos:line="5" pos:column="42">0<pos:position pos:line="5" pos:column="43"/></literal></expr>, <expr><name pos:line="5" pos:column="45">STRING_LIST_INIT_NODUP<pos:position pos:line="5" pos:column="67"/></name></expr>, <expr><name pos:line="5" pos:column="69">STRING_LIST_INIT_NODUP<pos:position pos:line="5" pos:column="91"/></name></expr> }<pos:position pos:line="5" pos:column="93"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="94"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">option<pos:position pos:line="6" pos:column="22"/></name></name></type> <name><name pos:line="6" pos:column="23">opts<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[]<pos:position pos:line="6" pos:column="29"/></index></name> <init pos:line="6" pos:column="30">= <expr><block pos:line="6" pos:column="32">{
		<expr><call><name pos:line="7" pos:column="17">OPT_BOOL<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="29">"name-only"<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="42">&amp;<pos:position pos:line="7" pos:column="47"/></operator><name><name pos:line="7" pos:column="43">data<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">.<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">name_only<pos:position pos:line="7" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="59">N_<pos:position pos:line="7" pos:column="61"/></name><argument_list pos:line="7" pos:column="61">(<argument><expr><literal type="string" pos:line="7" pos:column="62">"print only names (no SHA-1)"<pos:position pos:line="7" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr>,
		<expr><call><name pos:line="8" pos:column="17">OPT_BOOL<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="29">"tags"<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="37">&amp;<pos:position pos:line="8" pos:column="42"/></operator><name><name pos:line="8" pos:column="38">data<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">.<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">tags_only<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="54">N_<pos:position pos:line="8" pos:column="56"/></name><argument_list pos:line="8" pos:column="56">(<argument><expr><literal type="string" pos:line="8" pos:column="57">"only use tags to name the commits"<pos:position pos:line="8" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="94"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_STRING_LIST<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="36">"refs"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="44">&amp;<pos:position pos:line="9" pos:column="49"/></operator><name><name pos:line="9" pos:column="45">data<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">.<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">ref_filters<pos:position pos:line="9" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="63">N_<pos:position pos:line="9" pos:column="65"/></name><argument_list pos:line="9" pos:column="65">(<argument><expr><literal type="string" pos:line="9" pos:column="66">"pattern"<pos:position pos:line="9" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr></argument>,
				   <argument><expr><call><name pos:line="10" pos:column="36">N_<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><literal type="string" pos:line="10" pos:column="39">"only use refs matching &lt;pattern&gt;"<pos:position pos:line="10" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_STRING_LIST<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="36">"exclude"<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name><name pos:line="11" pos:column="48">data<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">.<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="53">exclude_filters<pos:position pos:line="11" pos:column="68"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="70">N_<pos:position pos:line="11" pos:column="72"/></name><argument_list pos:line="11" pos:column="72">(<argument><expr><literal type="string" pos:line="11" pos:column="73">"pattern"<pos:position pos:line="11" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="83"/></argument_list></call></expr></argument>,
				   <argument><expr><call><name pos:line="12" pos:column="36">N_<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><literal type="string" pos:line="12" pos:column="39">"ignore refs matching &lt;pattern&gt;"<pos:position pos:line="12" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_GROUP<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><literal type="string" pos:line="13" pos:column="27">""<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_BOOL<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="29">"all"<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="37">all<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="42">N_<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><literal type="string" pos:line="14" pos:column="45">"list all commits reachable from all refs"<pos:position pos:line="14" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="89"/></argument_list></call></expr>,
		<expr><call><name pos:line="15" pos:column="17">OPT_BOOL<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="29">"stdin"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="38">&amp;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="39">transform_stdin<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="56">N_<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">(<argument><expr><literal type="string" pos:line="15" pos:column="59">"read from stdin"<pos:position pos:line="15" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="16" pos:column="17">OPT_BOOL<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="29">"undefined"<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="43">allow_undefined<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="60">N_<pos:position pos:line="16" pos:column="62"/></name><argument_list pos:line="16" pos:column="62">(<argument><expr><literal type="string" pos:line="16" pos:column="63">"allow to print `undefined` names (default)"<pos:position pos:line="16" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="109"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_BOOL<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"always"<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>,     <argument><expr><operator pos:line="17" pos:column="43">&amp;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="44">always<pos:position pos:line="17" pos:column="50"/></name></expr></argument>,
			   <argument><expr><call><name pos:line="18" pos:column="28">N_<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><literal type="string" pos:line="18" pos:column="31">"show abbreviated commit object as fallback"<pos:position pos:line="18" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>,
		<expr><block pos:line="19" pos:column="17">{
			<comment type="block" pos:line="20" pos:column="25">/* A Hidden OPT_BOOL */</comment>
			<expr><name pos:line="21" pos:column="25">OPTION_SET_INT<pos:position pos:line="21" pos:column="39"/></name></expr>, <expr><literal type="number" pos:line="21" pos:column="41">0<pos:position pos:line="21" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="21" pos:column="44">"peel-tag"<pos:position pos:line="21" pos:column="54"/></literal></expr>, <expr><operator pos:line="21" pos:column="56">&amp;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="57">peel_tag<pos:position pos:line="21" pos:column="65"/></name></expr>, <expr><name pos:line="21" pos:column="67">NULL<pos:position pos:line="21" pos:column="71"/></name></expr>,
			<expr><call><name pos:line="22" pos:column="25">N_<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><literal type="string" pos:line="22" pos:column="28">"dereference tags in the input (internal use)"<pos:position pos:line="22" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>,
			<expr><name pos:line="23" pos:column="25">PARSE_OPT_NOARG<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">|<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">PARSE_OPT_HIDDEN<pos:position pos:line="23" pos:column="59"/></name></expr>, <expr><name pos:line="23" pos:column="61">NULL<pos:position pos:line="23" pos:column="65"/></name></expr>, <expr><literal type="number" pos:line="23" pos:column="67">1<pos:position pos:line="23" pos:column="68"/></literal></expr>,
		}<pos:position pos:line="24" pos:column="18"/></block></expr>,
		<expr><call><name pos:line="25" pos:column="17">OPT_END<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">()<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="26" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="26" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">git_config<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">git_default_config<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">NULL<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">argc<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">parse_options<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">argc<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">argv<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">prefix<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">opts<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">name_rev_usage<pos:position pos:line="29" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="72">0<pos:position pos:line="29" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="75"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">all<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">+<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">transform_stdin<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">+<pos:position pos:line="30" pos:column="36"/></operator> <operator pos:line="30" pos:column="37">!<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="38">!<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">argc<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">&gt;<pos:position pos:line="30" pos:column="48"/></operator> <literal type="number" pos:line="30" pos:column="46">1<pos:position pos:line="30" pos:column="47"/></literal></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48"> <block pos:line="30" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">error<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><literal type="string" pos:line="31" pos:column="23">"Specify either a list, or --all, not both!"<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">usage_with_options<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">name_rev_usage<pos:position pos:line="32" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">opts<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">all<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">||<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">transform_stdin<pos:position pos:line="34" pos:column="35"/></name></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">cutoff<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt></block></then></if>

	<for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init pos:line="37" pos:column="14">;<pos:position pos:line="37" pos:column="15"/></init> <condition><expr><name pos:line="37" pos:column="16">argc<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></condition> <incr><expr><name pos:line="37" pos:column="22">argc<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">--<pos:position pos:line="37" pos:column="28"/></operator></expr><operator pos:line="37" pos:column="28">,<pos:position pos:line="37" pos:column="29"/></operator> <expr><name pos:line="37" pos:column="30">argv<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">++<pos:position pos:line="37" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="37"/></control> <block pos:line="37" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="38" pos:column="17">struct<pos:position pos:line="38" pos:column="23"/></name> <name pos:line="38" pos:column="24">object_id<pos:position pos:line="38" pos:column="33"/></name></name></type> <name pos:line="38" pos:column="34">oid<pos:position pos:line="38" pos:column="37"/></name></decl>;<pos:position pos:line="38" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">struct<pos:position pos:line="39" pos:column="23"/></name> <name pos:line="39" pos:column="24">object<pos:position pos:line="39" pos:column="30"/></name></name> <modifier pos:line="39" pos:column="31">*<pos:position pos:line="39" pos:column="32"/></modifier></type><name pos:line="39" pos:column="32">object<pos:position pos:line="39" pos:column="38"/></name></decl>;<pos:position pos:line="39" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="40" pos:column="17">struct<pos:position pos:line="40" pos:column="23"/></name> <name pos:line="40" pos:column="24">commit<pos:position pos:line="40" pos:column="30"/></name></name> <modifier pos:line="40" pos:column="31">*<pos:position pos:line="40" pos:column="32"/></modifier></type><name pos:line="40" pos:column="32">commit<pos:position pos:line="40" pos:column="38"/></name></decl>;<pos:position pos:line="40" pos:column="39"/></decl_stmt>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name pos:line="42" pos:column="21">get_oid<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><operator pos:line="42" pos:column="29">*<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">argv<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="36">&amp;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="37">oid<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42"> <block pos:line="42" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">fprintf<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">stderr<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="41">"Could not get sha1 for %s. Skipping.\n"<pos:position pos:line="43" pos:column="81"/></literal></expr></argument>,
					<argument><expr><operator pos:line="44" pos:column="41">*<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">argv<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
			<continue pos:line="45" pos:column="25">continue;<pos:position pos:line="45" pos:column="34"/></continue>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="48" pos:column="17">commit<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">NULL<pos:position pos:line="48" pos:column="30"/></name></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">object<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <call><name pos:line="49" pos:column="26">parse_object<pos:position pos:line="49" pos:column="38"/></name><argument_list pos:line="49" pos:column="38">(<argument><expr><operator pos:line="49" pos:column="39">&amp;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="40">oid<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">object<pos:position pos:line="50" pos:column="27"/></name></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <block pos:line="50" pos:column="29">{
			<decl_stmt><decl><type><name><name pos:line="51" pos:column="25">struct<pos:position pos:line="51" pos:column="31"/></name> <name pos:line="51" pos:column="32">object<pos:position pos:line="51" pos:column="38"/></name></name> <modifier pos:line="51" pos:column="39">*<pos:position pos:line="51" pos:column="40"/></modifier></type><name pos:line="51" pos:column="40">peeled<pos:position pos:line="51" pos:column="46"/></name> <init pos:line="51" pos:column="47">= <expr><call><name pos:line="51" pos:column="49">deref_tag<pos:position pos:line="51" pos:column="58"/></name><argument_list pos:line="51" pos:column="58">(<argument><expr><name pos:line="51" pos:column="59">object<pos:position pos:line="51" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="67">*<pos:position pos:line="51" pos:column="68"/></operator><name pos:line="51" pos:column="68">argv<pos:position pos:line="51" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="74">0<pos:position pos:line="51" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="77"/></decl_stmt>
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name pos:line="52" pos:column="29">peeled<pos:position pos:line="52" pos:column="35"/></name> <operator pos:line="52" pos:column="36">&amp;&amp;<pos:position pos:line="52" pos:column="46"/></operator> <name><name pos:line="52" pos:column="39">peeled<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">-&gt;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="47">type<pos:position pos:line="52" pos:column="51"/></name></name> <operator pos:line="52" pos:column="52">==<pos:position pos:line="52" pos:column="54"/></operator> <name pos:line="52" pos:column="55">OBJ_COMMIT<pos:position pos:line="52" pos:column="65"/></name></expr>)<pos:position pos:line="52" pos:column="66"/></condition><then pos:line="52" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="33">commit<pos:position pos:line="53" pos:column="39"/></name> <operator pos:line="53" pos:column="40">=<pos:position pos:line="53" pos:column="41"/></operator> <operator pos:line="53" pos:column="42">(<pos:position pos:line="53" pos:column="43"/></operator>struct <name pos:line="53" pos:column="50">commit<pos:position pos:line="53" pos:column="56"/></name> <operator pos:line="53" pos:column="57">*<pos:position pos:line="53" pos:column="58"/></operator><operator pos:line="53" pos:column="58">)<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="59">peeled<pos:position pos:line="53" pos:column="65"/></name></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt></block></then></if>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">object<pos:position pos:line="56" pos:column="28"/></name></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29"> <block pos:line="56" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">fprintf<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">stderr<pos:position pos:line="57" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="41">"Could not get object for %s. Skipping.\n"<pos:position pos:line="57" pos:column="83"/></literal></expr></argument>,
					<argument><expr><operator pos:line="58" pos:column="41">*<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="42">argv<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
			<continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">commit<pos:position pos:line="62" pos:column="27"/></name></expr>)<pos:position pos:line="62" pos:column="28"/></condition><then pos:line="62" pos:column="28"> <block pos:line="62" pos:column="29">{
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><name pos:line="63" pos:column="29">cutoff<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">&gt;<pos:position pos:line="63" pos:column="40"/></operator> <name><name pos:line="63" pos:column="38">commit<pos:position pos:line="63" pos:column="44"/></name><operator pos:line="63" pos:column="44">-&gt;<pos:position pos:line="63" pos:column="49"/></operator><name pos:line="63" pos:column="46">date<pos:position pos:line="63" pos:column="50"/></name></name></expr>)<pos:position pos:line="63" pos:column="51"/></condition><then pos:line="63" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="33">cutoff<pos:position pos:line="64" pos:column="39"/></name> <operator pos:line="64" pos:column="40">=<pos:position pos:line="64" pos:column="41"/></operator> <name><name pos:line="64" pos:column="42">commit<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">date<pos:position pos:line="64" pos:column="54"/></name></name></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt></block></then></if>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>

		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">peel_tag<pos:position pos:line="67" pos:column="29"/></name></expr>)<pos:position pos:line="67" pos:column="30"/></condition><then pos:line="67" pos:column="30"> <block pos:line="67" pos:column="31">{
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><operator pos:line="68" pos:column="29">!<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">commit<pos:position pos:line="68" pos:column="36"/></name></expr>)<pos:position pos:line="68" pos:column="37"/></condition><then pos:line="68" pos:column="37"> <block pos:line="68" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="69" pos:column="33">fprintf<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name pos:line="69" pos:column="41">stderr<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="49">"Could not get commit for %s. Skipping.\n"<pos:position pos:line="69" pos:column="91"/></literal></expr></argument>,
					<argument><expr><operator pos:line="70" pos:column="41">*<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="42">argv<pos:position pos:line="70" pos:column="46"/></name></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="48"/></expr_stmt>
				<continue pos:line="71" pos:column="33">continue;<pos:position pos:line="71" pos:column="42"/></continue>
			}<pos:position pos:line="72" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="73" pos:column="25">object<pos:position pos:line="73" pos:column="31"/></name> <operator pos:line="73" pos:column="32">=<pos:position pos:line="73" pos:column="33"/></operator> <operator pos:line="73" pos:column="34">(<pos:position pos:line="73" pos:column="35"/></operator>struct <name pos:line="73" pos:column="42">object<pos:position pos:line="73" pos:column="48"/></name> <operator pos:line="73" pos:column="49">*<pos:position pos:line="73" pos:column="50"/></operator><operator pos:line="73" pos:column="50">)<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="51">commit<pos:position pos:line="73" pos:column="57"/></name></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">add_object_array<pos:position pos:line="75" pos:column="33"/></name><argument_list pos:line="75" pos:column="33">(<argument><expr><name pos:line="75" pos:column="34">object<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="42">*<pos:position pos:line="75" pos:column="43"/></operator><name pos:line="75" pos:column="43">argv<pos:position pos:line="75" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="49">&amp;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="50">revs<pos:position pos:line="75" pos:column="54"/></name></expr></argument>)<pos:position pos:line="75" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block></for>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">cutoff<pos:position pos:line="78" pos:column="19"/></name></expr>)<pos:position pos:line="78" pos:column="20"/></condition><then pos:line="78" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="17">cutoff<pos:position pos:line="79" pos:column="23"/></name> <operator pos:line="79" pos:column="24">=<pos:position pos:line="79" pos:column="25"/></operator> <name pos:line="79" pos:column="26">cutoff<pos:position pos:line="79" pos:column="32"/></name> <operator pos:line="79" pos:column="33">-<pos:position pos:line="79" pos:column="34"/></operator> <name pos:line="79" pos:column="35">CUTOFF_DATE_SLOP<pos:position pos:line="79" pos:column="51"/></name></expr>;<pos:position pos:line="79" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">for_each_ref<pos:position pos:line="80" pos:column="21"/></name><argument_list pos:line="80" pos:column="21">(<argument><expr><name pos:line="80" pos:column="22">name_ref<pos:position pos:line="80" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="32">&amp;<pos:position pos:line="80" pos:column="37"/></operator><name pos:line="80" pos:column="33">data<pos:position pos:line="80" pos:column="37"/></name></expr></argument>)<pos:position pos:line="80" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="39"/></expr_stmt>

	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">transform_stdin<pos:position pos:line="82" pos:column="28"/></name></expr>)<pos:position pos:line="82" pos:column="29"/></condition><then pos:line="82" pos:column="29"> <block pos:line="82" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="83" pos:column="17">char<pos:position pos:line="83" pos:column="21"/></name></type> <name><name pos:line="83" pos:column="22">buffer<pos:position pos:line="83" pos:column="28"/></name><index pos:line="83" pos:column="28">[<expr><literal type="number" pos:line="83" pos:column="29">2048<pos:position pos:line="83" pos:column="33"/></literal></expr>]<pos:position pos:line="83" pos:column="34"/></index></name></decl>;<pos:position pos:line="83" pos:column="35"/></decl_stmt>

		<while pos:line="85" pos:column="17">while <condition pos:line="85" pos:column="23">(<expr><operator pos:line="85" pos:column="24">!<pos:position pos:line="85" pos:column="25"/></operator><call><name pos:line="85" pos:column="25">feof<pos:position pos:line="85" pos:column="29"/></name><argument_list pos:line="85" pos:column="29">(<argument><expr><name pos:line="85" pos:column="30">stdin<pos:position pos:line="85" pos:column="35"/></name></expr></argument>)<pos:position pos:line="85" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="37"/></condition> <block pos:line="85" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="86" pos:column="25">char<pos:position pos:line="86" pos:column="29"/></name> <modifier pos:line="86" pos:column="30">*<pos:position pos:line="86" pos:column="31"/></modifier></type><name pos:line="86" pos:column="31">p<pos:position pos:line="86" pos:column="32"/></name> <init pos:line="86" pos:column="33">= <expr><call><name pos:line="86" pos:column="35">fgets<pos:position pos:line="86" pos:column="40"/></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name pos:line="86" pos:column="41">buffer<pos:position pos:line="86" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="49">sizeof<argument_list pos:line="86" pos:column="55">(<argument><expr><name pos:line="86" pos:column="56">buffer<pos:position pos:line="86" pos:column="62"/></name></expr></argument>)<pos:position pos:line="86" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="86" pos:column="65">stdin<pos:position pos:line="86" pos:column="70"/></name></expr></argument>)<pos:position pos:line="86" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="86" pos:column="72"/></decl_stmt>
			<if pos:line="87" pos:column="25">if <condition pos:line="87" pos:column="28">(<expr><operator pos:line="87" pos:column="29">!<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="30">p<pos:position pos:line="87" pos:column="31"/></name></expr>)<pos:position pos:line="87" pos:column="32"/></condition><then pos:line="87" pos:column="32">
				<block type="pseudo"><break pos:line="88" pos:column="33">break;<pos:position pos:line="88" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">name_rev_line<pos:position pos:line="89" pos:column="38"/></name><argument_list pos:line="89" pos:column="38">(<argument><expr><name pos:line="89" pos:column="39">p<pos:position pos:line="89" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="42">&amp;<pos:position pos:line="89" pos:column="47"/></operator><name pos:line="89" pos:column="43">data<pos:position pos:line="89" pos:column="47"/></name></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></while>
	}<pos:position pos:line="91" pos:column="10"/></block></then> <elseif pos:line="91" pos:column="11">else <if pos:line="91" pos:column="16">if <condition pos:line="91" pos:column="19">(<expr><name pos:line="91" pos:column="20">all<pos:position pos:line="91" pos:column="23"/></name></expr>)<pos:position pos:line="91" pos:column="24"/></condition><then pos:line="91" pos:column="24"> <block pos:line="91" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="92" pos:column="17">int<pos:position pos:line="92" pos:column="20"/></name></type> <name pos:line="92" pos:column="21">i<pos:position pos:line="92" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="92" pos:column="24">max<pos:position pos:line="92" pos:column="27"/></name></decl>;<pos:position pos:line="92" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="94" pos:column="17">max<pos:position pos:line="94" pos:column="20"/></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <call><name pos:line="94" pos:column="23">get_max_object_index<pos:position pos:line="94" pos:column="43"/></name><argument_list pos:line="94" pos:column="43">()<pos:position pos:line="94" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="46"/></expr_stmt>
		<for pos:line="95" pos:column="17">for <control pos:line="95" pos:column="21">(<init><expr><name pos:line="95" pos:column="22">i<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <literal type="number" pos:line="95" pos:column="26">0<pos:position pos:line="95" pos:column="27"/></literal></expr>;<pos:position pos:line="95" pos:column="28"/></init> <condition><expr><name pos:line="95" pos:column="29">i<pos:position pos:line="95" pos:column="30"/></name> <operator pos:line="95" pos:column="31">&lt;<pos:position pos:line="95" pos:column="35"/></operator> <name pos:line="95" pos:column="33">max<pos:position pos:line="95" pos:column="36"/></name></expr>;<pos:position pos:line="95" pos:column="37"/></condition> <incr><expr><name pos:line="95" pos:column="38">i<pos:position pos:line="95" pos:column="39"/></name><operator pos:line="95" pos:column="39">++<pos:position pos:line="95" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="95" pos:column="42"/></control> <block pos:line="95" pos:column="43">{
			<decl_stmt><decl><type><name><name pos:line="96" pos:column="25">struct<pos:position pos:line="96" pos:column="31"/></name> <name pos:line="96" pos:column="32">object<pos:position pos:line="96" pos:column="38"/></name></name> <modifier pos:line="96" pos:column="39">*<pos:position pos:line="96" pos:column="40"/></modifier></type><name pos:line="96" pos:column="40">obj<pos:position pos:line="96" pos:column="43"/></name> <init pos:line="96" pos:column="44">= <expr><call><name pos:line="96" pos:column="46">get_indexed_object<pos:position pos:line="96" pos:column="64"/></name><argument_list pos:line="96" pos:column="64">(<argument><expr><name pos:line="96" pos:column="65">i<pos:position pos:line="96" pos:column="66"/></name></expr></argument>)<pos:position pos:line="96" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="68"/></decl_stmt>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><operator pos:line="97" pos:column="29">!<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="30">obj<pos:position pos:line="97" pos:column="33"/></name> <operator pos:line="97" pos:column="34">||<pos:position pos:line="97" pos:column="36"/></operator> <name><name pos:line="97" pos:column="37">obj<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">-&gt;<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="42">type<pos:position pos:line="97" pos:column="46"/></name></name> <operator pos:line="97" pos:column="47">!=<pos:position pos:line="97" pos:column="49"/></operator> <name pos:line="97" pos:column="50">OBJ_COMMIT<pos:position pos:line="97" pos:column="60"/></name></expr>)<pos:position pos:line="97" pos:column="61"/></condition><then pos:line="97" pos:column="61">
				<block type="pseudo"><continue pos:line="98" pos:column="33">continue;<pos:position pos:line="98" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="99" pos:column="25">show_name<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><name pos:line="99" pos:column="35">obj<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="40">NULL<pos:position pos:line="99" pos:column="44"/></name></expr></argument>,
				  <argument><expr><name pos:line="100" pos:column="35">always<pos:position pos:line="100" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="43">allow_undefined<pos:position pos:line="100" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="60">data<pos:position pos:line="100" pos:column="64"/></name><operator pos:line="100" pos:column="64">.<pos:position pos:line="100" pos:column="65"/></operator><name pos:line="100" pos:column="65">name_only<pos:position pos:line="100" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="101" pos:column="18"/></block></for>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if></elseif> <else pos:line="102" pos:column="11">else <block pos:line="102" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">int<pos:position pos:line="103" pos:column="20"/></name></type> <name pos:line="103" pos:column="21">i<pos:position pos:line="103" pos:column="22"/></name></decl>;<pos:position pos:line="103" pos:column="23"/></decl_stmt>
		<for pos:line="104" pos:column="17">for <control pos:line="104" pos:column="21">(<init><expr><name pos:line="104" pos:column="22">i<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">=<pos:position pos:line="104" pos:column="25"/></operator> <literal type="number" pos:line="104" pos:column="26">0<pos:position pos:line="104" pos:column="27"/></literal></expr>;<pos:position pos:line="104" pos:column="28"/></init> <condition><expr><name pos:line="104" pos:column="29">i<pos:position pos:line="104" pos:column="30"/></name> <operator pos:line="104" pos:column="31">&lt;<pos:position pos:line="104" pos:column="35"/></operator> <name><name pos:line="104" pos:column="33">revs<pos:position pos:line="104" pos:column="37"/></name><operator pos:line="104" pos:column="37">.<pos:position pos:line="104" pos:column="38"/></operator><name pos:line="104" pos:column="38">nr<pos:position pos:line="104" pos:column="40"/></name></name></expr>;<pos:position pos:line="104" pos:column="41"/></condition> <incr><expr><name pos:line="104" pos:column="42">i<pos:position pos:line="104" pos:column="43"/></name><operator pos:line="104" pos:column="43">++<pos:position pos:line="104" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="104" pos:column="46"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="25">show_name<pos:position pos:line="105" pos:column="34"/></name><argument_list pos:line="105" pos:column="34">(<argument><expr><name><name pos:line="105" pos:column="35">revs<pos:position pos:line="105" pos:column="39"/></name><operator pos:line="105" pos:column="39">.<pos:position pos:line="105" pos:column="40"/></operator><name pos:line="105" pos:column="40">objects<pos:position pos:line="105" pos:column="47"/></name><index pos:line="105" pos:column="47">[<expr><name pos:line="105" pos:column="48">i<pos:position pos:line="105" pos:column="49"/></name></expr>]<pos:position pos:line="105" pos:column="50"/></index></name><operator pos:line="105" pos:column="50">.<pos:position pos:line="105" pos:column="51"/></operator><name pos:line="105" pos:column="51">item<pos:position pos:line="105" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="57">revs<pos:position pos:line="105" pos:column="61"/></name><operator pos:line="105" pos:column="61">.<pos:position pos:line="105" pos:column="62"/></operator><name pos:line="105" pos:column="62">objects<pos:position pos:line="105" pos:column="69"/></name><index pos:line="105" pos:column="69">[<expr><name pos:line="105" pos:column="70">i<pos:position pos:line="105" pos:column="71"/></name></expr>]<pos:position pos:line="105" pos:column="72"/></index></name><operator pos:line="105" pos:column="72">.<pos:position pos:line="105" pos:column="73"/></operator><name pos:line="105" pos:column="73">name<pos:position pos:line="105" pos:column="77"/></name></expr></argument>,
				  <argument><expr><name pos:line="106" pos:column="35">always<pos:position pos:line="106" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="43">allow_undefined<pos:position pos:line="106" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="60">data<pos:position pos:line="106" pos:column="64"/></name><operator pos:line="106" pos:column="64">.<pos:position pos:line="106" pos:column="65"/></operator><name pos:line="106" pos:column="65">name_only<pos:position pos:line="106" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="76"/></expr_stmt></block></for>
	}<pos:position pos:line="107" pos:column="10"/></block></else></if>

	<return pos:line="109" pos:column="9">return <expr><literal type="number" pos:line="109" pos:column="16">0<pos:position pos:line="109" pos:column="17"/></literal></expr>;<pos:position pos:line="109" pos:column="18"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_175_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_sline<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">sline<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">sline<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">line_prefix<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="2" pos:column="24">unsigned<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">long<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">cnt<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">num_parent<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="3" pos:column="24">int<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">use_color<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="39">int<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">result_deleted<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">mark<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><literal type="number" pos:line="5" pos:column="31">1UL<pos:position pos:line="5" pos:column="34"/></literal><operator pos:line="5" pos:column="34">&lt;&lt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="36">num_parent<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">)<pos:position pos:line="5" pos:column="47"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">no_pre_delete<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><operator pos:line="6" pos:column="39">(<pos:position pos:line="6" pos:column="40"/></operator><literal type="number" pos:line="6" pos:column="40">2UL<pos:position pos:line="6" pos:column="43"/></literal><operator pos:line="6" pos:column="43">&lt;&lt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="45">num_parent<pos:position pos:line="6" pos:column="55"/></name><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">lno<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">c_frag<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><call><name pos:line="9" pos:column="30">diff_get_color<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">use_color<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="56">DIFF_FRAGINFO<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">c_func<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><call><name pos:line="10" pos:column="30">diff_get_color<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">use_color<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="56">DIFF_FUNCINFO<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">c_new<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><call><name pos:line="11" pos:column="29">diff_get_color<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">use_color<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">DIFF_FILE_NEW<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">c_old<pos:position pos:line="12" pos:column="26"/></name> <init pos:line="12" pos:column="27">= <expr><call><name pos:line="12" pos:column="29">diff_get_color<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">use_color<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="55">DIFF_FILE_OLD<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">c_context<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><call><name pos:line="13" pos:column="33">diff_get_color<pos:position pos:line="13" pos:column="47"/></name><argument_list pos:line="13" pos:column="47">(<argument><expr><name pos:line="13" pos:column="48">use_color<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">DIFF_CONTEXT<pos:position pos:line="13" pos:column="71"/></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">c_reset<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><call><name pos:line="14" pos:column="31">diff_get_color<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name pos:line="14" pos:column="46">use_color<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">DIFF_RESET<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="69"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">result_deleted<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
		<block type="pseudo"><return pos:line="17" pos:column="17">return;<pos:position pos:line="17" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="17" pos:column="25">/* result deleted */</comment>

	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr>)<pos:position pos:line="19" pos:column="18"/></condition> <block pos:line="19" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">unsigned<pos:position pos:line="20" pos:column="25"/></name> <name pos:line="20" pos:column="26">long<pos:position pos:line="20" pos:column="30"/></name></type> <name pos:line="20" pos:column="31">hunk_end<pos:position pos:line="20" pos:column="39"/></name></decl>;<pos:position pos:line="20" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">unsigned<pos:position pos:line="21" pos:column="25"/></name> <name pos:line="21" pos:column="26">long<pos:position pos:line="21" pos:column="30"/></name></type> <name pos:line="21" pos:column="31">rlines<pos:position pos:line="21" pos:column="37"/></name></decl>;<pos:position pos:line="21" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <modifier pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></modifier></type><name pos:line="22" pos:column="29">hunk_comment<pos:position pos:line="22" pos:column="41"/></name> <init pos:line="22" pos:column="42">= <expr><name pos:line="22" pos:column="44">NULL<pos:position pos:line="22" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">unsigned<pos:position pos:line="23" pos:column="25"/></name> <name pos:line="23" pos:column="26">long<pos:position pos:line="23" pos:column="30"/></name></type> <name pos:line="23" pos:column="31">null_context<pos:position pos:line="23" pos:column="43"/></name> <init pos:line="23" pos:column="44">= <expr><literal type="number" pos:line="23" pos:column="46">0<pos:position pos:line="23" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="48"/></decl_stmt>

		<while pos:line="25" pos:column="17">while <condition pos:line="25" pos:column="23">(<expr><name pos:line="25" pos:column="24">lno<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&lt;=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="31">cnt<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">&amp;&amp;<pos:position pos:line="25" pos:column="45"/></operator> <operator pos:line="25" pos:column="38">!<pos:position pos:line="25" pos:column="39"/></operator><operator pos:line="25" pos:column="39">(<pos:position pos:line="25" pos:column="40"/></operator><name><name pos:line="25" pos:column="40">sline<pos:position pos:line="25" pos:column="45"/></name><index pos:line="25" pos:column="45">[<expr><name pos:line="25" pos:column="46">lno<pos:position pos:line="25" pos:column="49"/></name></expr>]<pos:position pos:line="25" pos:column="50"/></index></name><operator pos:line="25" pos:column="50">.<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">flag<pos:position pos:line="25" pos:column="55"/></name> <operator pos:line="25" pos:column="56">&amp;<pos:position pos:line="25" pos:column="61"/></operator> <name pos:line="25" pos:column="58">mark<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">)<pos:position pos:line="25" pos:column="63"/></operator></expr>)<pos:position pos:line="25" pos:column="64"/></condition> <block pos:line="25" pos:column="65">{
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><call><name pos:line="26" pos:column="29">hunk_comment_line<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name><name pos:line="26" pos:column="47">sline<pos:position pos:line="26" pos:column="52"/></name><index pos:line="26" pos:column="52">[<expr><name pos:line="26" pos:column="53">lno<pos:position pos:line="26" pos:column="56"/></name></expr>]<pos:position pos:line="26" pos:column="57"/></index></name><operator pos:line="26" pos:column="57">.<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="58">bol<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="33">hunk_comment<pos:position pos:line="27" pos:column="45"/></name> <operator pos:line="27" pos:column="46">=<pos:position pos:line="27" pos:column="47"/></operator> <name><name pos:line="27" pos:column="48">sline<pos:position pos:line="27" pos:column="53"/></name><index pos:line="27" pos:column="53">[<expr><name pos:line="27" pos:column="54">lno<pos:position pos:line="27" pos:column="57"/></name></expr>]<pos:position pos:line="27" pos:column="58"/></index></name><operator pos:line="27" pos:column="58">.<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="59">bol<pos:position pos:line="27" pos:column="62"/></name></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="28" pos:column="25">lno<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">++<pos:position pos:line="28" pos:column="30"/></operator></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></while>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">cnt<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">&lt;<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="27">lno<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31">
			<block type="pseudo"><break pos:line="31" pos:column="25">break;<pos:position pos:line="31" pos:column="31"/></break></block></then>
		<else pos:line="32" pos:column="17">else <block pos:line="32" pos:column="22">{
			<for pos:line="33" pos:column="25">for <control pos:line="33" pos:column="29">(<init><expr><name pos:line="33" pos:column="30">hunk_end<pos:position pos:line="33" pos:column="38"/></name> <operator pos:line="33" pos:column="39">=<pos:position pos:line="33" pos:column="40"/></operator> <name pos:line="33" pos:column="41">lno<pos:position pos:line="33" pos:column="44"/></name> <operator pos:line="33" pos:column="45">+<pos:position pos:line="33" pos:column="46"/></operator> <literal type="number" pos:line="33" pos:column="47">1<pos:position pos:line="33" pos:column="48"/></literal></expr>;<pos:position pos:line="33" pos:column="49"/></init> <condition><expr><name pos:line="33" pos:column="50">hunk_end<pos:position pos:line="33" pos:column="58"/></name> <operator pos:line="33" pos:column="59">&lt;=<pos:position pos:line="33" pos:column="64"/></operator> <name pos:line="33" pos:column="62">cnt<pos:position pos:line="33" pos:column="65"/></name></expr>;<pos:position pos:line="33" pos:column="66"/></condition> <incr><expr><name pos:line="33" pos:column="67">hunk_end<pos:position pos:line="33" pos:column="75"/></name><operator pos:line="33" pos:column="75">++<pos:position pos:line="33" pos:column="77"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="78"/></control>
				<block type="pseudo"><if pos:line="34" pos:column="33">if <condition pos:line="34" pos:column="36">(<expr><operator pos:line="34" pos:column="37">!<pos:position pos:line="34" pos:column="38"/></operator><operator pos:line="34" pos:column="38">(<pos:position pos:line="34" pos:column="39"/></operator><name><name pos:line="34" pos:column="39">sline<pos:position pos:line="34" pos:column="44"/></name><index pos:line="34" pos:column="44">[<expr><name pos:line="34" pos:column="45">hunk_end<pos:position pos:line="34" pos:column="53"/></name></expr>]<pos:position pos:line="34" pos:column="54"/></index></name><operator pos:line="34" pos:column="54">.<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="55">flag<pos:position pos:line="34" pos:column="59"/></name> <operator pos:line="34" pos:column="60">&amp;<pos:position pos:line="34" pos:column="65"/></operator> <name pos:line="34" pos:column="62">mark<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">)<pos:position pos:line="34" pos:column="67"/></operator></expr>)<pos:position pos:line="34" pos:column="68"/></condition><then pos:line="34" pos:column="68">
					<block type="pseudo"><break pos:line="35" pos:column="41">break;<pos:position pos:line="35" pos:column="47"/></break></block></then></if></block></for>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="37" pos:column="17">rlines<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">hunk_end<pos:position pos:line="37" pos:column="34"/></name> <operator pos:line="37" pos:column="35">-<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="37">lno<pos:position pos:line="37" pos:column="40"/></name></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">cnt<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">&lt;<pos:position pos:line="38" pos:column="29"/></operator> <name pos:line="38" pos:column="27">hunk_end<pos:position pos:line="38" pos:column="35"/></name></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">rlines<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">--<pos:position pos:line="39" pos:column="33"/></operator></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt></block></then></if> <comment type="block" pos:line="39" pos:column="35">/* pointing at the last delete hunk */</comment>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">context<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30"> <block pos:line="41" pos:column="31">{
			<comment type="block" pos:line="42" pos:column="25">/*
			 * Even when running with --unified=0, all
			 * lines in the hunk needs to be processed in
			 * the loop below in order to show the
			 * deletion recorded in lost_head.  However,
			 * we do not want to show the resulting line
			 * with all blank context markers in such a
			 * case.  Compensate.
			 */</comment>
			<decl_stmt><decl><type><name pos:line="51" pos:column="25">unsigned<pos:position pos:line="51" pos:column="33"/></name> <name pos:line="51" pos:column="34">long<pos:position pos:line="51" pos:column="38"/></name></type> <name pos:line="51" pos:column="39">j<pos:position pos:line="51" pos:column="40"/></name></decl>;<pos:position pos:line="51" pos:column="41"/></decl_stmt>
			<for pos:line="52" pos:column="25">for <control pos:line="52" pos:column="29">(<init><expr><name pos:line="52" pos:column="30">j<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">=<pos:position pos:line="52" pos:column="33"/></operator> <name pos:line="52" pos:column="34">lno<pos:position pos:line="52" pos:column="37"/></name></expr>;<pos:position pos:line="52" pos:column="38"/></init> <condition><expr><name pos:line="52" pos:column="39">j<pos:position pos:line="52" pos:column="40"/></name> <operator pos:line="52" pos:column="41">&lt;<pos:position pos:line="52" pos:column="45"/></operator> <name pos:line="52" pos:column="43">hunk_end<pos:position pos:line="52" pos:column="51"/></name></expr>;<pos:position pos:line="52" pos:column="52"/></condition> <incr><expr><name pos:line="52" pos:column="53">j<pos:position pos:line="52" pos:column="54"/></name><operator pos:line="52" pos:column="54">++<pos:position pos:line="52" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="57"/></control>
				<block type="pseudo"><if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><operator pos:line="53" pos:column="37">!<pos:position pos:line="53" pos:column="38"/></operator><operator pos:line="53" pos:column="38">(<pos:position pos:line="53" pos:column="39"/></operator><name><name pos:line="53" pos:column="39">sline<pos:position pos:line="53" pos:column="44"/></name><index pos:line="53" pos:column="44">[<expr><name pos:line="53" pos:column="45">j<pos:position pos:line="53" pos:column="46"/></name></expr>]<pos:position pos:line="53" pos:column="47"/></index></name><operator pos:line="53" pos:column="47">.<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="48">flag<pos:position pos:line="53" pos:column="52"/></name> <operator pos:line="53" pos:column="53">&amp;<pos:position pos:line="53" pos:column="58"/></operator> <operator pos:line="53" pos:column="55">(<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="56">mark<pos:position pos:line="53" pos:column="60"/></name><operator pos:line="53" pos:column="60">-<pos:position pos:line="53" pos:column="61"/></operator><literal type="number" pos:line="53" pos:column="61">1<pos:position pos:line="53" pos:column="62"/></literal><operator pos:line="53" pos:column="62">)<pos:position pos:line="53" pos:column="63"/></operator><operator pos:line="53" pos:column="63">)<pos:position pos:line="53" pos:column="64"/></operator></expr>)<pos:position pos:line="53" pos:column="65"/></condition><then pos:line="53" pos:column="65">
					<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="41">null_context<pos:position pos:line="54" pos:column="53"/></name><operator pos:line="54" pos:column="53">++<pos:position pos:line="54" pos:column="55"/></operator></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt></block></then></if></block></for>
			<expr_stmt><expr><name pos:line="55" pos:column="25">rlines<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">-=<pos:position pos:line="55" pos:column="34"/></operator> <name pos:line="55" pos:column="35">null_context<pos:position pos:line="55" pos:column="47"/></name></expr>;<pos:position pos:line="55" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="58" pos:column="17">printf<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><literal type="string" pos:line="58" pos:column="24">"%s%s"<pos:position pos:line="58" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">line_prefix<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">c_frag<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>
		<for pos:line="59" pos:column="17">for <control pos:line="59" pos:column="21">(<init><expr><name pos:line="59" pos:column="22">i<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <literal type="number" pos:line="59" pos:column="26">0<pos:position pos:line="59" pos:column="27"/></literal></expr>;<pos:position pos:line="59" pos:column="28"/></init> <condition><expr><name pos:line="59" pos:column="29">i<pos:position pos:line="59" pos:column="30"/></name> <operator pos:line="59" pos:column="31">&lt;=<pos:position pos:line="59" pos:column="36"/></operator> <name pos:line="59" pos:column="34">num_parent<pos:position pos:line="59" pos:column="44"/></name></expr>;<pos:position pos:line="59" pos:column="45"/></condition> <incr><expr><name pos:line="59" pos:column="46">i<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">++<pos:position pos:line="59" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="59" pos:column="50"/></control> <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="51">putchar<pos:position pos:line="59" pos:column="58"/></name><argument_list pos:line="59" pos:column="58">(<argument><expr><name pos:line="59" pos:column="59">combine_marker<pos:position pos:line="59" pos:column="73"/></name></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt></block></for>
		<for pos:line="60" pos:column="17">for <control pos:line="60" pos:column="21">(<init><expr><name pos:line="60" pos:column="22">i<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <literal type="number" pos:line="60" pos:column="26">0<pos:position pos:line="60" pos:column="27"/></literal></expr>;<pos:position pos:line="60" pos:column="28"/></init> <condition><expr><name pos:line="60" pos:column="29">i<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">&lt;<pos:position pos:line="60" pos:column="35"/></operator> <name pos:line="60" pos:column="33">num_parent<pos:position pos:line="60" pos:column="43"/></name></expr>;<pos:position pos:line="60" pos:column="44"/></condition> <incr><expr><name pos:line="60" pos:column="45">i<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">++<pos:position pos:line="60" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="60" pos:column="49"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="25">show_parent_lno<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">sline<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">lno<pos:position pos:line="61" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="53">hunk_end<pos:position pos:line="61" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="63">i<pos:position pos:line="61" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="66">null_context<pos:position pos:line="61" pos:column="78"/></name></expr></argument>)<pos:position pos:line="61" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="80"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">printf<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><literal type="string" pos:line="62" pos:column="24">" +%lu,%lu "<pos:position pos:line="62" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="38">lno<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">+<pos:position pos:line="62" pos:column="42"/></operator><literal type="number" pos:line="62" pos:column="42">1<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="45">rlines<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt>
		<for pos:line="63" pos:column="17">for <control pos:line="63" pos:column="21">(<init><expr><name pos:line="63" pos:column="22">i<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="26">0<pos:position pos:line="63" pos:column="27"/></literal></expr>;<pos:position pos:line="63" pos:column="28"/></init> <condition><expr><name pos:line="63" pos:column="29">i<pos:position pos:line="63" pos:column="30"/></name> <operator pos:line="63" pos:column="31">&lt;=<pos:position pos:line="63" pos:column="36"/></operator> <name pos:line="63" pos:column="34">num_parent<pos:position pos:line="63" pos:column="44"/></name></expr>;<pos:position pos:line="63" pos:column="45"/></condition> <incr><expr><name pos:line="63" pos:column="46">i<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">++<pos:position pos:line="63" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="63" pos:column="50"/></control> <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="51">putchar<pos:position pos:line="63" pos:column="58"/></name><argument_list pos:line="63" pos:column="58">(<argument><expr><name pos:line="63" pos:column="59">combine_marker<pos:position pos:line="63" pos:column="73"/></name></expr></argument>)<pos:position pos:line="63" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="75"/></expr_stmt></block></for>

		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">hunk_comment<pos:position pos:line="65" pos:column="33"/></name></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34"> <block pos:line="65" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="66" pos:column="25">int<pos:position pos:line="66" pos:column="28"/></name></type> <name pos:line="66" pos:column="29">comment_end<pos:position pos:line="66" pos:column="40"/></name> <init pos:line="66" pos:column="41">= <expr><literal type="number" pos:line="66" pos:column="43">0<pos:position pos:line="66" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="66" pos:column="45"/></decl_stmt>
			<for pos:line="67" pos:column="25">for <control pos:line="67" pos:column="29">(<init><expr><name pos:line="67" pos:column="30">i<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">=<pos:position pos:line="67" pos:column="33"/></operator> <literal type="number" pos:line="67" pos:column="34">0<pos:position pos:line="67" pos:column="35"/></literal></expr>;<pos:position pos:line="67" pos:column="36"/></init> <condition><expr><name pos:line="67" pos:column="37">i<pos:position pos:line="67" pos:column="38"/></name> <operator pos:line="67" pos:column="39">&lt;<pos:position pos:line="67" pos:column="43"/></operator> <literal type="number" pos:line="67" pos:column="41">40<pos:position pos:line="67" pos:column="43"/></literal></expr>;<pos:position pos:line="67" pos:column="44"/></condition> <incr><expr><name pos:line="67" pos:column="45">i<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">++<pos:position pos:line="67" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="49"/></control> <block pos:line="67" pos:column="50">{
				<decl_stmt><decl><type><name pos:line="68" pos:column="33">int<pos:position pos:line="68" pos:column="36"/></name></type> <name pos:line="68" pos:column="37">ch<pos:position pos:line="68" pos:column="39"/></name> <init pos:line="68" pos:column="40">= <expr><name><name pos:line="68" pos:column="42">hunk_comment<pos:position pos:line="68" pos:column="54"/></name><index pos:line="68" pos:column="54">[<expr><name pos:line="68" pos:column="55">i<pos:position pos:line="68" pos:column="56"/></name></expr>]<pos:position pos:line="68" pos:column="57"/></index></name> <operator pos:line="68" pos:column="58">&amp;<pos:position pos:line="68" pos:column="63"/></operator> <literal type="number" pos:line="68" pos:column="60">0xff<pos:position pos:line="68" pos:column="64"/></literal></expr></init></decl>;<pos:position pos:line="68" pos:column="65"/></decl_stmt>
				<if pos:line="69" pos:column="33">if <condition pos:line="69" pos:column="36">(<expr><operator pos:line="69" pos:column="37">!<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="38">ch<pos:position pos:line="69" pos:column="40"/></name> <operator pos:line="69" pos:column="41">||<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="44">ch<pos:position pos:line="69" pos:column="46"/></name> <operator pos:line="69" pos:column="47">==<pos:position pos:line="69" pos:column="49"/></operator> <literal type="char" pos:line="69" pos:column="50">'\n'<pos:position pos:line="69" pos:column="54"/></literal></expr>)<pos:position pos:line="69" pos:column="55"/></condition><then pos:line="69" pos:column="55">
					<block type="pseudo"><break pos:line="70" pos:column="41">break;<pos:position pos:line="70" pos:column="47"/></break></block></then></if>
				<if pos:line="71" pos:column="33">if <condition pos:line="71" pos:column="36">(<expr><operator pos:line="71" pos:column="37">!<pos:position pos:line="71" pos:column="38"/></operator><call><name pos:line="71" pos:column="38">isspace<pos:position pos:line="71" pos:column="45"/></name><argument_list pos:line="71" pos:column="45">(<argument><expr><name pos:line="71" pos:column="46">ch<pos:position pos:line="71" pos:column="48"/></name></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="50"/></condition><then pos:line="71" pos:column="50">
				    <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="37">comment_end<pos:position pos:line="72" pos:column="48"/></name> <operator pos:line="72" pos:column="49">=<pos:position pos:line="72" pos:column="50"/></operator> <name pos:line="72" pos:column="51">i<pos:position pos:line="72" pos:column="52"/></name></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt></block></then></if>
			}<pos:position pos:line="73" pos:column="26"/></block></for>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name pos:line="74" pos:column="29">comment_end<pos:position pos:line="74" pos:column="40"/></name></expr>)<pos:position pos:line="74" pos:column="41"/></condition><then pos:line="74" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="33">printf<pos:position pos:line="75" pos:column="39"/></name><argument_list pos:line="75" pos:column="39">(<argument><expr><literal type="string" pos:line="75" pos:column="40">"%s%s %s%s"<pos:position pos:line="75" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="53">c_reset<pos:position pos:line="75" pos:column="60"/></name></expr></argument>,
						    <argument><expr><name pos:line="76" pos:column="53">c_context<pos:position pos:line="76" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="64">c_reset<pos:position pos:line="76" pos:column="71"/></name></expr></argument>,
						    <argument><expr><name pos:line="77" pos:column="53">c_func<pos:position pos:line="77" pos:column="59"/></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="61"/></expr_stmt></block></then></if>
			<for pos:line="78" pos:column="25">for <control pos:line="78" pos:column="29">(<init><expr><name pos:line="78" pos:column="30">i<pos:position pos:line="78" pos:column="31"/></name> <operator pos:line="78" pos:column="32">=<pos:position pos:line="78" pos:column="33"/></operator> <literal type="number" pos:line="78" pos:column="34">0<pos:position pos:line="78" pos:column="35"/></literal></expr>;<pos:position pos:line="78" pos:column="36"/></init> <condition><expr><name pos:line="78" pos:column="37">i<pos:position pos:line="78" pos:column="38"/></name> <operator pos:line="78" pos:column="39">&lt;<pos:position pos:line="78" pos:column="43"/></operator> <name pos:line="78" pos:column="41">comment_end<pos:position pos:line="78" pos:column="52"/></name></expr>;<pos:position pos:line="78" pos:column="53"/></condition> <incr><expr><name pos:line="78" pos:column="54">i<pos:position pos:line="78" pos:column="55"/></name><operator pos:line="78" pos:column="55">++<pos:position pos:line="78" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="78" pos:column="58"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="33">putchar<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><name><name pos:line="79" pos:column="41">hunk_comment<pos:position pos:line="79" pos:column="53"/></name><index pos:line="79" pos:column="53">[<expr><name pos:line="79" pos:column="54">i<pos:position pos:line="79" pos:column="55"/></name></expr>]<pos:position pos:line="79" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="58"/></expr_stmt></block></for>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="82" pos:column="17">printf<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><literal type="string" pos:line="82" pos:column="24">"%s\n"<pos:position pos:line="82" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="32">c_reset<pos:position pos:line="82" pos:column="39"/></name></expr></argument>)<pos:position pos:line="82" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt>
		<while pos:line="83" pos:column="17">while <condition pos:line="83" pos:column="23">(<expr><name pos:line="83" pos:column="24">lno<pos:position pos:line="83" pos:column="27"/></name> <operator pos:line="83" pos:column="28">&lt;<pos:position pos:line="83" pos:column="32"/></operator> <name pos:line="83" pos:column="30">hunk_end<pos:position pos:line="83" pos:column="38"/></name></expr>)<pos:position pos:line="83" pos:column="39"/></condition> <block pos:line="83" pos:column="40">{
			<decl_stmt><decl><type><name><name pos:line="84" pos:column="25">struct<pos:position pos:line="84" pos:column="31"/></name> <name pos:line="84" pos:column="32">lline<pos:position pos:line="84" pos:column="37"/></name></name> <modifier pos:line="84" pos:column="38">*<pos:position pos:line="84" pos:column="39"/></modifier></type><name pos:line="84" pos:column="39">ll<pos:position pos:line="84" pos:column="41"/></name></decl>;<pos:position pos:line="84" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="85" pos:column="25">int<pos:position pos:line="85" pos:column="28"/></name></type> <name pos:line="85" pos:column="29">j<pos:position pos:line="85" pos:column="30"/></name></decl>;<pos:position pos:line="85" pos:column="31"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="86" pos:column="25">unsigned<pos:position pos:line="86" pos:column="33"/></name> <name pos:line="86" pos:column="34">long<pos:position pos:line="86" pos:column="38"/></name></type> <name pos:line="86" pos:column="39">p_mask<pos:position pos:line="86" pos:column="45"/></name></decl>;<pos:position pos:line="86" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="87" pos:column="25">struct<pos:position pos:line="87" pos:column="31"/></name> <name pos:line="87" pos:column="32">sline<pos:position pos:line="87" pos:column="37"/></name></name> <modifier pos:line="87" pos:column="38">*<pos:position pos:line="87" pos:column="39"/></modifier></type><name pos:line="87" pos:column="39">sl<pos:position pos:line="87" pos:column="41"/></name> <init pos:line="87" pos:column="42">= <expr><operator pos:line="87" pos:column="44">&amp;<pos:position pos:line="87" pos:column="49"/></operator><name><name pos:line="87" pos:column="45">sline<pos:position pos:line="87" pos:column="50"/></name><index pos:line="87" pos:column="50">[<expr><name pos:line="87" pos:column="51">lno<pos:position pos:line="87" pos:column="54"/></name><operator pos:line="87" pos:column="54">++<pos:position pos:line="87" pos:column="56"/></operator></expr>]<pos:position pos:line="87" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="87" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><name pos:line="88" pos:column="25">ll<pos:position pos:line="88" pos:column="27"/></name> <operator pos:line="88" pos:column="28">=<pos:position pos:line="88" pos:column="29"/></operator> <ternary><condition><expr><operator pos:line="88" pos:column="30">(<pos:position pos:line="88" pos:column="31"/></operator><name><name pos:line="88" pos:column="31">sl<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">-&gt;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="35">flag<pos:position pos:line="88" pos:column="39"/></name></name> <operator pos:line="88" pos:column="40">&amp;<pos:position pos:line="88" pos:column="45"/></operator> <name pos:line="88" pos:column="42">no_pre_delete<pos:position pos:line="88" pos:column="55"/></name><operator pos:line="88" pos:column="55">)<pos:position pos:line="88" pos:column="56"/></operator></expr> ?<pos:position pos:line="88" pos:column="58"/></condition><then pos:line="88" pos:column="58"> <expr><name pos:line="88" pos:column="59">NULL<pos:position pos:line="88" pos:column="63"/></name></expr> <pos:position pos:line="88" pos:column="64"/></then><else pos:line="88" pos:column="64">: <expr><name><name pos:line="88" pos:column="66">sl<pos:position pos:line="88" pos:column="68"/></name><operator pos:line="88" pos:column="68">-&gt;<pos:position pos:line="88" pos:column="73"/></operator><name pos:line="88" pos:column="70">lost<pos:position pos:line="88" pos:column="74"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="88" pos:column="75"/></expr_stmt>
			<while pos:line="89" pos:column="25">while <condition pos:line="89" pos:column="31">(<expr><name pos:line="89" pos:column="32">ll<pos:position pos:line="89" pos:column="34"/></name></expr>)<pos:position pos:line="89" pos:column="35"/></condition> <block pos:line="89" pos:column="36">{
				<expr_stmt><expr><call><name pos:line="90" pos:column="33">printf<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><literal type="string" pos:line="90" pos:column="40">"%s%s"<pos:position pos:line="90" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="48">line_prefix<pos:position pos:line="90" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="61">c_old<pos:position pos:line="90" pos:column="66"/></name></expr></argument>)<pos:position pos:line="90" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="68"/></expr_stmt>
				<for pos:line="91" pos:column="33">for <control pos:line="91" pos:column="37">(<init><expr><name pos:line="91" pos:column="38">j<pos:position pos:line="91" pos:column="39"/></name> <operator pos:line="91" pos:column="40">=<pos:position pos:line="91" pos:column="41"/></operator> <literal type="number" pos:line="91" pos:column="42">0<pos:position pos:line="91" pos:column="43"/></literal></expr>;<pos:position pos:line="91" pos:column="44"/></init> <condition><expr><name pos:line="91" pos:column="45">j<pos:position pos:line="91" pos:column="46"/></name> <operator pos:line="91" pos:column="47">&lt;<pos:position pos:line="91" pos:column="51"/></operator> <name pos:line="91" pos:column="49">num_parent<pos:position pos:line="91" pos:column="59"/></name></expr>;<pos:position pos:line="91" pos:column="60"/></condition> <incr><expr><name pos:line="91" pos:column="61">j<pos:position pos:line="91" pos:column="62"/></name><operator pos:line="91" pos:column="62">++<pos:position pos:line="91" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="91" pos:column="65"/></control> <block pos:line="91" pos:column="66">{
					<if pos:line="92" pos:column="41">if <condition pos:line="92" pos:column="44">(<expr><name><name pos:line="92" pos:column="45">ll<pos:position pos:line="92" pos:column="47"/></name><operator pos:line="92" pos:column="47">-&gt;<pos:position pos:line="92" pos:column="52"/></operator><name pos:line="92" pos:column="49">parent_map<pos:position pos:line="92" pos:column="59"/></name></name> <operator pos:line="92" pos:column="60">&amp;<pos:position pos:line="92" pos:column="65"/></operator> <operator pos:line="92" pos:column="62">(<pos:position pos:line="92" pos:column="63"/></operator><literal type="number" pos:line="92" pos:column="63">1UL<pos:position pos:line="92" pos:column="66"/></literal><operator pos:line="92" pos:column="66">&lt;&lt;<pos:position pos:line="92" pos:column="74"/></operator><name pos:line="92" pos:column="68">j<pos:position pos:line="92" pos:column="69"/></name><operator pos:line="92" pos:column="69">)<pos:position pos:line="92" pos:column="70"/></operator></expr>)<pos:position pos:line="92" pos:column="71"/></condition><then pos:line="92" pos:column="71">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="49">putchar<pos:position pos:line="93" pos:column="56"/></name><argument_list pos:line="93" pos:column="56">(<argument><expr><literal type="char" pos:line="93" pos:column="57">'-'<pos:position pos:line="93" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="62"/></expr_stmt></block></then>
					<else pos:line="94" pos:column="41">else
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="49">putchar<pos:position pos:line="95" pos:column="56"/></name><argument_list pos:line="95" pos:column="56">(<argument><expr><literal type="char" pos:line="95" pos:column="57">' '<pos:position pos:line="95" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="62"/></expr_stmt></block></else></if>
				}<pos:position pos:line="96" pos:column="34"/></block></for>
				<expr_stmt><expr><call><name pos:line="97" pos:column="33">show_line_to_eol<pos:position pos:line="97" pos:column="49"/></name><argument_list pos:line="97" pos:column="49">(<argument><expr><name><name pos:line="97" pos:column="50">ll<pos:position pos:line="97" pos:column="52"/></name><operator pos:line="97" pos:column="52">-&gt;<pos:position pos:line="97" pos:column="57"/></operator><name pos:line="97" pos:column="54">line<pos:position pos:line="97" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="60">-<pos:position pos:line="97" pos:column="61"/></operator><literal type="number" pos:line="97" pos:column="61">1<pos:position pos:line="97" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="64">c_reset<pos:position pos:line="97" pos:column="71"/></name></expr></argument>)<pos:position pos:line="97" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="73"/></expr_stmt>
				<expr_stmt><expr><name pos:line="98" pos:column="33">ll<pos:position pos:line="98" pos:column="35"/></name> <operator pos:line="98" pos:column="36">=<pos:position pos:line="98" pos:column="37"/></operator> <name><name pos:line="98" pos:column="38">ll<pos:position pos:line="98" pos:column="40"/></name><operator pos:line="98" pos:column="40">-&gt;<pos:position pos:line="98" pos:column="45"/></operator><name pos:line="98" pos:column="42">next<pos:position pos:line="98" pos:column="46"/></name></name></expr>;<pos:position pos:line="98" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="99" pos:column="26"/></block></while>
			<if pos:line="100" pos:column="25">if <condition pos:line="100" pos:column="28">(<expr><name pos:line="100" pos:column="29">cnt<pos:position pos:line="100" pos:column="32"/></name> <operator pos:line="100" pos:column="33">&lt;<pos:position pos:line="100" pos:column="37"/></operator> <name pos:line="100" pos:column="35">lno<pos:position pos:line="100" pos:column="38"/></name></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39">
				<block type="pseudo"><break pos:line="101" pos:column="33">break;<pos:position pos:line="101" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="102" pos:column="25">p_mask<pos:position pos:line="102" pos:column="31"/></name> <operator pos:line="102" pos:column="32">=<pos:position pos:line="102" pos:column="33"/></operator> <literal type="number" pos:line="102" pos:column="34">1<pos:position pos:line="102" pos:column="35"/></literal></expr>;<pos:position pos:line="102" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="103" pos:column="25">fputs<pos:position pos:line="103" pos:column="30"/></name><argument_list pos:line="103" pos:column="30">(<argument><expr><name pos:line="103" pos:column="31">line_prefix<pos:position pos:line="103" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="44">stdout<pos:position pos:line="103" pos:column="50"/></name></expr></argument>)<pos:position pos:line="103" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="52"/></expr_stmt>
			<if pos:line="104" pos:column="25">if <condition pos:line="104" pos:column="28">(<expr><operator pos:line="104" pos:column="29">!<pos:position pos:line="104" pos:column="30"/></operator><operator pos:line="104" pos:column="30">(<pos:position pos:line="104" pos:column="31"/></operator><name><name pos:line="104" pos:column="31">sl<pos:position pos:line="104" pos:column="33"/></name><operator pos:line="104" pos:column="33">-&gt;<pos:position pos:line="104" pos:column="38"/></operator><name pos:line="104" pos:column="35">flag<pos:position pos:line="104" pos:column="39"/></name></name> <operator pos:line="104" pos:column="40">&amp;<pos:position pos:line="104" pos:column="45"/></operator> <operator pos:line="104" pos:column="42">(<pos:position pos:line="104" pos:column="43"/></operator><name pos:line="104" pos:column="43">mark<pos:position pos:line="104" pos:column="47"/></name><operator pos:line="104" pos:column="47">-<pos:position pos:line="104" pos:column="48"/></operator><literal type="number" pos:line="104" pos:column="48">1<pos:position pos:line="104" pos:column="49"/></literal><operator pos:line="104" pos:column="49">)<pos:position pos:line="104" pos:column="50"/></operator><operator pos:line="104" pos:column="50">)<pos:position pos:line="104" pos:column="51"/></operator></expr>)<pos:position pos:line="104" pos:column="52"/></condition><then pos:line="104" pos:column="52"> <block pos:line="104" pos:column="53">{
				<comment type="block" pos:line="105" pos:column="33">/*
				 * This sline was here to hang the
				 * lost lines in front of it.
				 */</comment>
				<if pos:line="109" pos:column="33">if <condition pos:line="109" pos:column="36">(<expr><operator pos:line="109" pos:column="37">!<pos:position pos:line="109" pos:column="38"/></operator><name pos:line="109" pos:column="38">context<pos:position pos:line="109" pos:column="45"/></name></expr>)<pos:position pos:line="109" pos:column="46"/></condition><then pos:line="109" pos:column="46">
					<block type="pseudo"><continue pos:line="110" pos:column="41">continue;<pos:position pos:line="110" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><call><name pos:line="111" pos:column="33">fputs<pos:position pos:line="111" pos:column="38"/></name><argument_list pos:line="111" pos:column="38">(<argument><expr><name pos:line="111" pos:column="39">c_context<pos:position pos:line="111" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="50">stdout<pos:position pos:line="111" pos:column="56"/></name></expr></argument>)<pos:position pos:line="111" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="112" pos:column="26"/></block></then>
			<else pos:line="113" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="33">fputs<pos:position pos:line="114" pos:column="38"/></name><argument_list pos:line="114" pos:column="38">(<argument><expr><name pos:line="114" pos:column="39">c_new<pos:position pos:line="114" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="46">stdout<pos:position pos:line="114" pos:column="52"/></name></expr></argument>)<pos:position pos:line="114" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="54"/></expr_stmt></block></else></if>
			<for pos:line="115" pos:column="25">for <control pos:line="115" pos:column="29">(<init><expr><name pos:line="115" pos:column="30">j<pos:position pos:line="115" pos:column="31"/></name> <operator pos:line="115" pos:column="32">=<pos:position pos:line="115" pos:column="33"/></operator> <literal type="number" pos:line="115" pos:column="34">0<pos:position pos:line="115" pos:column="35"/></literal></expr>;<pos:position pos:line="115" pos:column="36"/></init> <condition><expr><name pos:line="115" pos:column="37">j<pos:position pos:line="115" pos:column="38"/></name> <operator pos:line="115" pos:column="39">&lt;<pos:position pos:line="115" pos:column="43"/></operator> <name pos:line="115" pos:column="41">num_parent<pos:position pos:line="115" pos:column="51"/></name></expr>;<pos:position pos:line="115" pos:column="52"/></condition> <incr><expr><name pos:line="115" pos:column="53">j<pos:position pos:line="115" pos:column="54"/></name><operator pos:line="115" pos:column="54">++<pos:position pos:line="115" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="115" pos:column="57"/></control> <block pos:line="115" pos:column="58">{
				<if pos:line="116" pos:column="33">if <condition pos:line="116" pos:column="36">(<expr><name pos:line="116" pos:column="37">p_mask<pos:position pos:line="116" pos:column="43"/></name> <operator pos:line="116" pos:column="44">&amp;<pos:position pos:line="116" pos:column="49"/></operator> <name><name pos:line="116" pos:column="46">sl<pos:position pos:line="116" pos:column="48"/></name><operator pos:line="116" pos:column="48">-&gt;<pos:position pos:line="116" pos:column="53"/></operator><name pos:line="116" pos:column="50">flag<pos:position pos:line="116" pos:column="54"/></name></name></expr>)<pos:position pos:line="116" pos:column="55"/></condition><then pos:line="116" pos:column="55">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="41">putchar<pos:position pos:line="117" pos:column="48"/></name><argument_list pos:line="117" pos:column="48">(<argument><expr><literal type="char" pos:line="117" pos:column="49">'+'<pos:position pos:line="117" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="54"/></expr_stmt></block></then>
				<else pos:line="118" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="41">putchar<pos:position pos:line="119" pos:column="48"/></name><argument_list pos:line="119" pos:column="48">(<argument><expr><literal type="char" pos:line="119" pos:column="49">' '<pos:position pos:line="119" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="54"/></expr_stmt></block></else></if>
				<expr_stmt><expr><name pos:line="120" pos:column="33">p_mask<pos:position pos:line="120" pos:column="39"/></name> <operator pos:line="120" pos:column="40">&lt;&lt;=<pos:position pos:line="120" pos:column="49"/></operator> <literal type="number" pos:line="120" pos:column="44">1<pos:position pos:line="120" pos:column="45"/></literal></expr>;<pos:position pos:line="120" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="121" pos:column="26"/></block></for>
			<expr_stmt><expr><call><name pos:line="122" pos:column="25">show_line_to_eol<pos:position pos:line="122" pos:column="41"/></name><argument_list pos:line="122" pos:column="41">(<argument><expr><name><name pos:line="122" pos:column="42">sl<pos:position pos:line="122" pos:column="44"/></name><operator pos:line="122" pos:column="44">-&gt;<pos:position pos:line="122" pos:column="49"/></operator><name pos:line="122" pos:column="46">bol<pos:position pos:line="122" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="51">sl<pos:position pos:line="122" pos:column="53"/></name><operator pos:line="122" pos:column="53">-&gt;<pos:position pos:line="122" pos:column="58"/></operator><name pos:line="122" pos:column="55">len<pos:position pos:line="122" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="60">c_reset<pos:position pos:line="122" pos:column="67"/></name></expr></argument>)<pos:position pos:line="122" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="123" pos:column="18"/></block></while>
	}<pos:position pos:line="124" pos:column="10"/></block></while>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

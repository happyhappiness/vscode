<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1438_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">apply_patch<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">apply_state<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">state<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">fd<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>,
		       <parameter><decl><type><specifier pos:line="3" pos:column="24">const<pos:position pos:line="3" pos:column="29"/></specifier> <name pos:line="3" pos:column="30">char<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">filename<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="4" pos:column="24">int<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">options<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="36"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">offset<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">STRBUF_INIT<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt> <comment type="block" pos:line="7" pos:column="42">/* owns the patch text */</comment>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">patch<pos:position pos:line="8" pos:column="21"/></name></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">list<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier><modifier pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="38">listp<pos:position pos:line="8" pos:column="43"/></name> <init pos:line="8" pos:column="44">= <expr><operator pos:line="8" pos:column="46">&amp;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="47">list<pos:position pos:line="8" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">skipped_patch<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><literal type="number" pos:line="9" pos:column="29">0<pos:position pos:line="9" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">res<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">state<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">patch_input_file<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">filename<pos:position pos:line="12" pos:column="43"/></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">read_patch_file<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="30">buf<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">fd<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call> <operator pos:line="13" pos:column="39">&lt;<pos:position pos:line="13" pos:column="43"/></operator> <literal type="number" pos:line="13" pos:column="41">0<pos:position pos:line="13" pos:column="42"/></literal></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">128<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="15" pos:column="9">offset<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">offset<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="25">buf<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">len<pos:position pos:line="16" pos:column="32"/></name></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition> <block pos:line="16" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">patch<pos:position pos:line="17" pos:column="29"/></name></name> <modifier pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></modifier></type><name pos:line="17" pos:column="31">patch<pos:position pos:line="17" pos:column="36"/></name></decl>;<pos:position pos:line="17" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">nr<pos:position pos:line="18" pos:column="23"/></name></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>

		<expr_stmt><expr><name pos:line="20" pos:column="17">patch<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <call><name pos:line="20" pos:column="25">xcalloc<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><literal type="number" pos:line="20" pos:column="33">1<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="36">sizeof<argument_list pos:line="20" pos:column="42">(<argument><expr><operator pos:line="20" pos:column="43">*<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">patch<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">patch<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">inaccurate_eof<pos:position pos:line="21" pos:column="38"/></name></name> <operator pos:line="21" pos:column="39">=<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="41">!<pos:position pos:line="21" pos:column="42"/></operator><operator pos:line="21" pos:column="42">!<pos:position pos:line="21" pos:column="43"/></operator><operator pos:line="21" pos:column="43">(<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">options<pos:position pos:line="21" pos:column="51"/></name> <operator pos:line="21" pos:column="52">&amp;<pos:position pos:line="21" pos:column="57"/></operator> <name pos:line="21" pos:column="54">APPLY_OPT_INACCURATE_EOF<pos:position pos:line="21" pos:column="78"/></name><operator pos:line="21" pos:column="78">)<pos:position pos:line="21" pos:column="79"/></operator></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">patch<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">recount<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator>  <operator pos:line="22" pos:column="35">!<pos:position pos:line="22" pos:column="36"/></operator><operator pos:line="22" pos:column="36">!<pos:position pos:line="22" pos:column="37"/></operator><operator pos:line="22" pos:column="37">(<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">options<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">&amp;<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="48">APPLY_OPT_RECOUNT<pos:position pos:line="22" pos:column="65"/></name><operator pos:line="22" pos:column="65">)<pos:position pos:line="22" pos:column="66"/></operator></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">nr<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">parse_chunk<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">state<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="41">buf<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">buf<pos:position pos:line="23" pos:column="48"/></name></name> <operator pos:line="23" pos:column="49">+<pos:position pos:line="23" pos:column="50"/></operator> <name pos:line="23" pos:column="51">offset<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="59">buf<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">.<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="63">len<pos:position pos:line="23" pos:column="66"/></name></name> <operator pos:line="23" pos:column="67">-<pos:position pos:line="23" pos:column="68"/></operator> <name pos:line="23" pos:column="69">offset<pos:position pos:line="23" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="77">patch<pos:position pos:line="23" pos:column="82"/></name></expr></argument>)<pos:position pos:line="23" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="84"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">nr<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&lt;<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">free_patch<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">patch<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">nr<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">==<pos:position pos:line="26" pos:column="34"/></operator> <operator pos:line="26" pos:column="35">-<pos:position pos:line="26" pos:column="36"/></operator><literal type="number" pos:line="26" pos:column="36">128<pos:position pos:line="26" pos:column="39"/></literal></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40"> <block pos:line="26" pos:column="41">{
				<expr_stmt><expr><name pos:line="27" pos:column="33">res<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <operator pos:line="27" pos:column="39">-<pos:position pos:line="27" pos:column="40"/></operator><literal type="number" pos:line="27" pos:column="40">128<pos:position pos:line="27" pos:column="43"/></literal></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
				<goto pos:line="28" pos:column="33">goto <name pos:line="28" pos:column="38">end<pos:position pos:line="28" pos:column="41"/></name>;<pos:position pos:line="28" pos:column="42"/></goto>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if>
			<break pos:line="30" pos:column="25">break;<pos:position pos:line="30" pos:column="31"/></break>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">state<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">apply_in_reverse<pos:position pos:line="32" pos:column="44"/></name></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">reverse_patches<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">patch<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">use_patch<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">state<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">patch<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="45"/></condition><then pos:line="34" pos:column="45"> <block pos:line="34" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">patch_stats<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">state<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">patch<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">listp<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">patch<pos:position pos:line="36" pos:column="39"/></name></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="37" pos:column="25">listp<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <operator pos:line="37" pos:column="33">&amp;<pos:position pos:line="37" pos:column="38"/></operator><name><name pos:line="37" pos:column="34">patch<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">next<pos:position pos:line="37" pos:column="45"/></name></name></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then>
		<else pos:line="39" pos:column="17">else <block pos:line="39" pos:column="22">{
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name><name pos:line="40" pos:column="29">state<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">apply_verbosity<pos:position pos:line="40" pos:column="51"/></name></name> <operator pos:line="40" pos:column="52">&gt;<pos:position pos:line="40" pos:column="56"/></operator> <name pos:line="40" pos:column="54">verbosity_normal<pos:position pos:line="40" pos:column="70"/></name></expr>)<pos:position pos:line="40" pos:column="71"/></condition><then pos:line="40" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="33">say_patch_name<pos:position pos:line="41" pos:column="47"/></name><argument_list pos:line="41" pos:column="47">(<argument><expr><name pos:line="41" pos:column="48">stderr<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="56">_<pos:position pos:line="41" pos:column="57"/></name><argument_list pos:line="41" pos:column="57">(<argument><expr><literal type="string" pos:line="41" pos:column="58">"Skipped patch '%s'."<pos:position pos:line="41" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="82">patch<pos:position pos:line="41" pos:column="87"/></name></expr></argument>)<pos:position pos:line="41" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="89"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">free_patch<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">patch<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">skipped_patch<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">++<pos:position pos:line="43" pos:column="40"/></operator></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="45" pos:column="17">offset<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">+=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">nr<pos:position pos:line="45" pos:column="29"/></name></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></while>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">list<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">&amp;&amp;<pos:position pos:line="48" pos:column="29"/></operator> <operator pos:line="48" pos:column="22">!<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">skipped_patch<pos:position pos:line="48" pos:column="36"/></name></expr>)<pos:position pos:line="48" pos:column="37"/></condition><then pos:line="48" pos:column="37"> <block pos:line="48" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">error<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><call><name pos:line="49" pos:column="23">_<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><literal type="string" pos:line="49" pos:column="25">"unrecognized input"<pos:position pos:line="49" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="50" pos:column="17">res<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <operator pos:line="50" pos:column="23">-<pos:position pos:line="50" pos:column="24"/></operator><literal type="number" pos:line="50" pos:column="24">128<pos:position pos:line="50" pos:column="27"/></literal></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
		<goto pos:line="51" pos:column="17">goto <name pos:line="51" pos:column="22">end<pos:position pos:line="51" pos:column="25"/></name>;<pos:position pos:line="51" pos:column="26"/></goto>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">state<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">whitespace_error<pos:position pos:line="54" pos:column="36"/></name></name> <operator pos:line="54" pos:column="37">&amp;&amp;<pos:position pos:line="54" pos:column="47"/></operator> <operator pos:line="54" pos:column="40">(<pos:position pos:line="54" pos:column="41"/></operator><name><name pos:line="54" pos:column="41">state<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">-&gt;<pos:position pos:line="54" pos:column="51"/></operator><name pos:line="54" pos:column="48">ws_error_action<pos:position pos:line="54" pos:column="63"/></name></name> <operator pos:line="54" pos:column="64">==<pos:position pos:line="54" pos:column="66"/></operator> <name pos:line="54" pos:column="67">die_on_ws_error<pos:position pos:line="54" pos:column="82"/></name><operator pos:line="54" pos:column="82">)<pos:position pos:line="54" pos:column="83"/></operator></expr>)<pos:position pos:line="54" pos:column="84"/></condition><then pos:line="54" pos:column="84">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="17">state<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">apply<pos:position pos:line="55" pos:column="29"/></name></name> <operator pos:line="55" pos:column="30">=<pos:position pos:line="55" pos:column="31"/></operator> <literal type="number" pos:line="55" pos:column="32">0<pos:position pos:line="55" pos:column="33"/></literal></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="57" pos:column="9">state<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">update_index<pos:position pos:line="57" pos:column="28"/></name></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <name><name pos:line="57" pos:column="31">state<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">-&gt;<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="38">check_index<pos:position pos:line="57" pos:column="49"/></name></name> <operator pos:line="57" pos:column="50">&amp;&amp;<pos:position pos:line="57" pos:column="60"/></operator> <name><name pos:line="57" pos:column="53">state<pos:position pos:line="57" pos:column="58"/></name><operator pos:line="57" pos:column="58">-&gt;<pos:position pos:line="57" pos:column="63"/></operator><name pos:line="57" pos:column="60">apply<pos:position pos:line="57" pos:column="65"/></name></name></expr>;<pos:position pos:line="57" pos:column="66"/></expr_stmt>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">state<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">update_index<pos:position pos:line="58" pos:column="32"/></name></name> <operator pos:line="58" pos:column="33">&amp;&amp;<pos:position pos:line="58" pos:column="43"/></operator> <name><name pos:line="58" pos:column="36">state<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">-&gt;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="43">newfd<pos:position pos:line="58" pos:column="48"/></name></name> <operator pos:line="58" pos:column="49">&lt;<pos:position pos:line="58" pos:column="53"/></operator> <literal type="number" pos:line="58" pos:column="51">0<pos:position pos:line="58" pos:column="52"/></literal></expr>)<pos:position pos:line="58" pos:column="53"/></condition><then pos:line="58" pos:column="53"> <block pos:line="58" pos:column="54">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name><name pos:line="59" pos:column="21">state<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">index_file<pos:position pos:line="59" pos:column="38"/></name></name></expr>)<pos:position pos:line="59" pos:column="39"/></condition><then pos:line="59" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="25">state<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">newfd<pos:position pos:line="60" pos:column="37"/></name></name> <operator pos:line="60" pos:column="38">=<pos:position pos:line="60" pos:column="39"/></operator> <call><name pos:line="60" pos:column="40">hold_lock_file_for_update<pos:position pos:line="60" pos:column="65"/></name><argument_list pos:line="60" pos:column="65">(<argument><expr><name><name pos:line="60" pos:column="66">state<pos:position pos:line="60" pos:column="71"/></name><operator pos:line="60" pos:column="71">-&gt;<pos:position pos:line="60" pos:column="76"/></operator><name pos:line="60" pos:column="73">lock_file<pos:position pos:line="60" pos:column="82"/></name></name></expr></argument>,
								 <argument><expr><name><name pos:line="61" pos:column="66">state<pos:position pos:line="61" pos:column="71"/></name><operator pos:line="61" pos:column="71">-&gt;<pos:position pos:line="61" pos:column="76"/></operator><name pos:line="61" pos:column="73">index_file<pos:position pos:line="61" pos:column="83"/></name></name></expr></argument>,
								 <argument><expr><name pos:line="62" pos:column="66">LOCK_DIE_ON_ERROR<pos:position pos:line="62" pos:column="83"/></name></expr></argument>)<pos:position pos:line="62" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="85"/></expr_stmt></block></then>
		<else pos:line="63" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="25">state<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">newfd<pos:position pos:line="64" pos:column="37"/></name></name> <operator pos:line="64" pos:column="38">=<pos:position pos:line="64" pos:column="39"/></operator> <call><name pos:line="64" pos:column="40">hold_locked_index<pos:position pos:line="64" pos:column="57"/></name><argument_list pos:line="64" pos:column="57">(<argument><expr><name><name pos:line="64" pos:column="58">state<pos:position pos:line="64" pos:column="63"/></name><operator pos:line="64" pos:column="63">-&gt;<pos:position pos:line="64" pos:column="68"/></operator><name pos:line="64" pos:column="65">lock_file<pos:position pos:line="64" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="76">LOCK_DIE_ON_ERROR<pos:position pos:line="64" pos:column="93"/></name></expr></argument>)<pos:position pos:line="64" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="95"/></expr_stmt></block></else></if>
	}<pos:position pos:line="65" pos:column="10"/></block></then></if>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">state<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">-&gt;<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="20">check_index<pos:position pos:line="67" pos:column="31"/></name></name> <operator pos:line="67" pos:column="32">&amp;&amp;<pos:position pos:line="67" pos:column="42"/></operator> <call><name pos:line="67" pos:column="35">read_apply_cache<pos:position pos:line="67" pos:column="51"/></name><argument_list pos:line="67" pos:column="51">(<argument><expr><name pos:line="67" pos:column="52">state<pos:position pos:line="67" pos:column="57"/></name></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call> <operator pos:line="67" pos:column="59">&lt;<pos:position pos:line="67" pos:column="63"/></operator> <literal type="number" pos:line="67" pos:column="61">0<pos:position pos:line="67" pos:column="62"/></literal></expr>)<pos:position pos:line="67" pos:column="63"/></condition><then pos:line="67" pos:column="63"> <block pos:line="67" pos:column="64">{
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">error<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><call><name pos:line="68" pos:column="23">_<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><literal type="string" pos:line="68" pos:column="25">"unable to read index file"<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="69" pos:column="17">res<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">=<pos:position pos:line="69" pos:column="22"/></operator> <operator pos:line="69" pos:column="23">-<pos:position pos:line="69" pos:column="24"/></operator><literal type="number" pos:line="69" pos:column="24">128<pos:position pos:line="69" pos:column="27"/></literal></expr>;<pos:position pos:line="69" pos:column="28"/></expr_stmt>
		<goto pos:line="70" pos:column="17">goto <name pos:line="70" pos:column="22">end<pos:position pos:line="70" pos:column="25"/></name>;<pos:position pos:line="70" pos:column="26"/></goto>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">state<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">-&gt;<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="20">check<pos:position pos:line="73" pos:column="25"/></name></name> <operator pos:line="73" pos:column="26">||<pos:position pos:line="73" pos:column="28"/></operator> <name><name pos:line="73" pos:column="29">state<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">apply<pos:position pos:line="73" pos:column="41"/></name></name></expr>)<pos:position pos:line="73" pos:column="42"/></condition><then pos:line="73" pos:column="42"> <block pos:line="73" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="74" pos:column="17">int<pos:position pos:line="74" pos:column="20"/></name></type> <name pos:line="74" pos:column="21">r<pos:position pos:line="74" pos:column="22"/></name> <init pos:line="74" pos:column="23">= <expr><call><name pos:line="74" pos:column="25">check_patch_list<pos:position pos:line="74" pos:column="41"/></name><argument_list pos:line="74" pos:column="41">(<argument><expr><name pos:line="74" pos:column="42">state<pos:position pos:line="74" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="49">list<pos:position pos:line="74" pos:column="53"/></name></expr></argument>)<pos:position pos:line="74" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="55"/></decl_stmt>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">r<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">==<pos:position pos:line="75" pos:column="25"/></operator> <operator pos:line="75" pos:column="26">-<pos:position pos:line="75" pos:column="27"/></operator><literal type="number" pos:line="75" pos:column="27">128<pos:position pos:line="75" pos:column="30"/></literal></expr>)<pos:position pos:line="75" pos:column="31"/></condition><then pos:line="75" pos:column="31"> <block pos:line="75" pos:column="32">{
			<expr_stmt><expr><name pos:line="76" pos:column="25">res<pos:position pos:line="76" pos:column="28"/></name> <operator pos:line="76" pos:column="29">=<pos:position pos:line="76" pos:column="30"/></operator> <operator pos:line="76" pos:column="31">-<pos:position pos:line="76" pos:column="32"/></operator><literal type="number" pos:line="76" pos:column="32">128<pos:position pos:line="76" pos:column="35"/></literal></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>
			<goto pos:line="77" pos:column="25">goto <name pos:line="77" pos:column="30">end<pos:position pos:line="77" pos:column="33"/></name>;<pos:position pos:line="77" pos:column="34"/></goto>
		}<pos:position pos:line="78" pos:column="18"/></block></then></if>
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">r<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">&lt;<pos:position pos:line="79" pos:column="27"/></operator> <literal type="number" pos:line="79" pos:column="25">0<pos:position pos:line="79" pos:column="26"/></literal> <operator pos:line="79" pos:column="27">&amp;&amp;<pos:position pos:line="79" pos:column="37"/></operator> <operator pos:line="79" pos:column="30">!<pos:position pos:line="79" pos:column="31"/></operator><name><name pos:line="79" pos:column="31">state<pos:position pos:line="79" pos:column="36"/></name><operator pos:line="79" pos:column="36">-&gt;<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="38">apply_with_reject<pos:position pos:line="79" pos:column="55"/></name></name></expr>)<pos:position pos:line="79" pos:column="56"/></condition><then pos:line="79" pos:column="56"> <block pos:line="79" pos:column="57">{
			<expr_stmt><expr><name pos:line="80" pos:column="25">res<pos:position pos:line="80" pos:column="28"/></name> <operator pos:line="80" pos:column="29">=<pos:position pos:line="80" pos:column="30"/></operator> <operator pos:line="80" pos:column="31">-<pos:position pos:line="80" pos:column="32"/></operator><literal type="number" pos:line="80" pos:column="32">1<pos:position pos:line="80" pos:column="33"/></literal></expr>;<pos:position pos:line="80" pos:column="34"/></expr_stmt>
			<goto pos:line="81" pos:column="25">goto <name pos:line="81" pos:column="30">end<pos:position pos:line="81" pos:column="33"/></name>;<pos:position pos:line="81" pos:column="34"/></goto>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name><name pos:line="85" pos:column="13">state<pos:position pos:line="85" pos:column="18"/></name><operator pos:line="85" pos:column="18">-&gt;<pos:position pos:line="85" pos:column="23"/></operator><name pos:line="85" pos:column="20">apply<pos:position pos:line="85" pos:column="25"/></name></name></expr>)<pos:position pos:line="85" pos:column="26"/></condition><then pos:line="85" pos:column="26"> <block pos:line="85" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="86" pos:column="17">int<pos:position pos:line="86" pos:column="20"/></name></type> <name pos:line="86" pos:column="21">write_res<pos:position pos:line="86" pos:column="30"/></name> <init pos:line="86" pos:column="31">= <expr><call><name pos:line="86" pos:column="33">write_out_results<pos:position pos:line="86" pos:column="50"/></name><argument_list pos:line="86" pos:column="50">(<argument><expr><name pos:line="86" pos:column="51">state<pos:position pos:line="86" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="58">list<pos:position pos:line="86" pos:column="62"/></name></expr></argument>)<pos:position pos:line="86" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="86" pos:column="64"/></decl_stmt>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">write_res<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">&lt;<pos:position pos:line="87" pos:column="35"/></operator> <literal type="number" pos:line="87" pos:column="33">0<pos:position pos:line="87" pos:column="34"/></literal></expr>)<pos:position pos:line="87" pos:column="35"/></condition><then pos:line="87" pos:column="35"> <block pos:line="87" pos:column="36">{
			<expr_stmt><expr><name pos:line="88" pos:column="25">res<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">=<pos:position pos:line="88" pos:column="30"/></operator> <operator pos:line="88" pos:column="31">-<pos:position pos:line="88" pos:column="32"/></operator><literal type="number" pos:line="88" pos:column="32">128<pos:position pos:line="88" pos:column="35"/></literal></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>
			<goto pos:line="89" pos:column="25">goto <name pos:line="89" pos:column="30">end<pos:position pos:line="89" pos:column="33"/></name>;<pos:position pos:line="89" pos:column="34"/></goto>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name pos:line="91" pos:column="21">write_res<pos:position pos:line="91" pos:column="30"/></name> <operator pos:line="91" pos:column="31">&gt;<pos:position pos:line="91" pos:column="35"/></operator> <literal type="number" pos:line="91" pos:column="33">0<pos:position pos:line="91" pos:column="34"/></literal></expr>)<pos:position pos:line="91" pos:column="35"/></condition><then pos:line="91" pos:column="35"> <block pos:line="91" pos:column="36">{
			<comment type="block" pos:line="92" pos:column="25">/* with --3way, we still need to write the index out */</comment>
			<expr_stmt><expr><name pos:line="93" pos:column="25">res<pos:position pos:line="93" pos:column="28"/></name> <operator pos:line="93" pos:column="29">=<pos:position pos:line="93" pos:column="30"/></operator> <ternary><condition><expr><name><name pos:line="93" pos:column="31">state<pos:position pos:line="93" pos:column="36"/></name><operator pos:line="93" pos:column="36">-&gt;<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="38">apply_with_reject<pos:position pos:line="93" pos:column="55"/></name></name></expr> ?<pos:position pos:line="93" pos:column="57"/></condition><then pos:line="93" pos:column="57"> <expr><operator pos:line="93" pos:column="58">-<pos:position pos:line="93" pos:column="59"/></operator><literal type="number" pos:line="93" pos:column="59">1<pos:position pos:line="93" pos:column="60"/></literal></expr> <pos:position pos:line="93" pos:column="61"/></then><else pos:line="93" pos:column="61">: <expr><literal type="number" pos:line="93" pos:column="63">1<pos:position pos:line="93" pos:column="64"/></literal></expr></else></ternary></expr>;<pos:position pos:line="93" pos:column="65"/></expr_stmt>
			<goto pos:line="94" pos:column="25">goto <name pos:line="94" pos:column="30">end<pos:position pos:line="94" pos:column="33"/></name>;<pos:position pos:line="94" pos:column="34"/></goto>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if>
	}<pos:position pos:line="96" pos:column="10"/></block></then></if>

	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name><name pos:line="98" pos:column="13">state<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">-&gt;<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="20">fake_ancestor<pos:position pos:line="98" pos:column="33"/></name></name> <operator pos:line="98" pos:column="34">&amp;&amp;<pos:position pos:line="98" pos:column="44"/></operator>
	    <call><name pos:line="99" pos:column="13">build_fake_ancestor<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name pos:line="99" pos:column="33">state<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="40">list<pos:position pos:line="99" pos:column="44"/></name></expr></argument>)<pos:position pos:line="99" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="46"/></condition><then pos:line="99" pos:column="46"> <block pos:line="99" pos:column="47">{
		<expr_stmt><expr><name pos:line="100" pos:column="17">res<pos:position pos:line="100" pos:column="20"/></name> <operator pos:line="100" pos:column="21">=<pos:position pos:line="100" pos:column="22"/></operator> <operator pos:line="100" pos:column="23">-<pos:position pos:line="100" pos:column="24"/></operator><literal type="number" pos:line="100" pos:column="24">128<pos:position pos:line="100" pos:column="27"/></literal></expr>;<pos:position pos:line="100" pos:column="28"/></expr_stmt>
		<goto pos:line="101" pos:column="17">goto <name pos:line="101" pos:column="22">end<pos:position pos:line="101" pos:column="25"/></name>;<pos:position pos:line="101" pos:column="26"/></goto>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if>

	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">state<pos:position pos:line="104" pos:column="18"/></name><operator pos:line="104" pos:column="18">-&gt;<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="20">diffstat<pos:position pos:line="104" pos:column="28"/></name></name> <operator pos:line="104" pos:column="29">&amp;&amp;<pos:position pos:line="104" pos:column="39"/></operator> <name><name pos:line="104" pos:column="32">state<pos:position pos:line="104" pos:column="37"/></name><operator pos:line="104" pos:column="37">-&gt;<pos:position pos:line="104" pos:column="42"/></operator><name pos:line="104" pos:column="39">apply_verbosity<pos:position pos:line="104" pos:column="54"/></name></name> <operator pos:line="104" pos:column="55">&gt;<pos:position pos:line="104" pos:column="59"/></operator> <name pos:line="104" pos:column="57">verbosity_silent<pos:position pos:line="104" pos:column="73"/></name></expr>)<pos:position pos:line="104" pos:column="74"/></condition><then pos:line="104" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="17">stat_patch_list<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><name pos:line="105" pos:column="33">state<pos:position pos:line="105" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="40">list<pos:position pos:line="105" pos:column="44"/></name></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name><name pos:line="107" pos:column="13">state<pos:position pos:line="107" pos:column="18"/></name><operator pos:line="107" pos:column="18">-&gt;<pos:position pos:line="107" pos:column="23"/></operator><name pos:line="107" pos:column="20">numstat<pos:position pos:line="107" pos:column="27"/></name></name> <operator pos:line="107" pos:column="28">&amp;&amp;<pos:position pos:line="107" pos:column="38"/></operator> <name><name pos:line="107" pos:column="31">state<pos:position pos:line="107" pos:column="36"/></name><operator pos:line="107" pos:column="36">-&gt;<pos:position pos:line="107" pos:column="41"/></operator><name pos:line="107" pos:column="38">apply_verbosity<pos:position pos:line="107" pos:column="53"/></name></name> <operator pos:line="107" pos:column="54">&gt;<pos:position pos:line="107" pos:column="58"/></operator> <name pos:line="107" pos:column="56">verbosity_silent<pos:position pos:line="107" pos:column="72"/></name></expr>)<pos:position pos:line="107" pos:column="73"/></condition><then pos:line="107" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="17">numstat_patch_list<pos:position pos:line="108" pos:column="35"/></name><argument_list pos:line="108" pos:column="35">(<argument><expr><name pos:line="108" pos:column="36">state<pos:position pos:line="108" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="43">list<pos:position pos:line="108" pos:column="47"/></name></expr></argument>)<pos:position pos:line="108" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="49"/></expr_stmt></block></then></if>

	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name><name pos:line="110" pos:column="13">state<pos:position pos:line="110" pos:column="18"/></name><operator pos:line="110" pos:column="18">-&gt;<pos:position pos:line="110" pos:column="23"/></operator><name pos:line="110" pos:column="20">summary<pos:position pos:line="110" pos:column="27"/></name></name> <operator pos:line="110" pos:column="28">&amp;&amp;<pos:position pos:line="110" pos:column="38"/></operator> <name><name pos:line="110" pos:column="31">state<pos:position pos:line="110" pos:column="36"/></name><operator pos:line="110" pos:column="36">-&gt;<pos:position pos:line="110" pos:column="41"/></operator><name pos:line="110" pos:column="38">apply_verbosity<pos:position pos:line="110" pos:column="53"/></name></name> <operator pos:line="110" pos:column="54">&gt;<pos:position pos:line="110" pos:column="58"/></operator> <name pos:line="110" pos:column="56">verbosity_silent<pos:position pos:line="110" pos:column="72"/></name></expr>)<pos:position pos:line="110" pos:column="73"/></condition><then pos:line="110" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="17">summary_patch_list<pos:position pos:line="111" pos:column="35"/></name><argument_list pos:line="111" pos:column="35">(<argument><expr><name pos:line="111" pos:column="36">list<pos:position pos:line="111" pos:column="40"/></name></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="42"/></expr_stmt></block></then></if>

<label><name pos:line="113" pos:column="1">end<pos:position pos:line="113" pos:column="4"/></name>:<pos:position pos:line="113" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="114" pos:column="9">free_patch_list<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name pos:line="114" pos:column="25">list<pos:position pos:line="114" pos:column="29"/></name></expr></argument>)<pos:position pos:line="114" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="115" pos:column="9">strbuf_release<pos:position pos:line="115" pos:column="23"/></name><argument_list pos:line="115" pos:column="23">(<argument><expr><operator pos:line="115" pos:column="24">&amp;<pos:position pos:line="115" pos:column="29"/></operator><name pos:line="115" pos:column="25">buf<pos:position pos:line="115" pos:column="28"/></name></expr></argument>)<pos:position pos:line="115" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="116" pos:column="9">string_list_clear<pos:position pos:line="116" pos:column="26"/></name><argument_list pos:line="116" pos:column="26">(<argument><expr><operator pos:line="116" pos:column="27">&amp;<pos:position pos:line="116" pos:column="32"/></operator><name><name pos:line="116" pos:column="28">state<pos:position pos:line="116" pos:column="33"/></name><operator pos:line="116" pos:column="33">-&gt;<pos:position pos:line="116" pos:column="38"/></operator><name pos:line="116" pos:column="35">fn_table<pos:position pos:line="116" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="45">0<pos:position pos:line="116" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="48"/></expr_stmt>
	<return pos:line="117" pos:column="9">return <expr><name pos:line="117" pos:column="16">res<pos:position pos:line="117" pos:column="19"/></name></expr>;<pos:position pos:line="117" pos:column="20"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1504.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">grab_single_ref<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">refname<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">unsigned<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">sha1<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">int<pos:position pos:line="1" pos:column="79"/></name></type> <name pos:line="1" pos:column="80">flag<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="86">void<pos:position pos:line="1" pos:column="90"/></name> <modifier pos:line="1" pos:column="91">*<pos:position pos:line="1" pos:column="92"/></modifier></type><name pos:line="1" pos:column="92">cb_data<pos:position pos:line="1" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="100"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">grab_ref_cbdata<pos:position pos:line="3" pos:column="31"/></name></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">cb<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">cb_data<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">refinfo<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">ref<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">cnt<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">flag<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&amp;<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="20">REF_BAD_NAME<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33"> <block pos:line="7" pos:column="34">{
		  <expr_stmt><expr><call><name pos:line="8" pos:column="19">warning<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><literal type="string" pos:line="8" pos:column="27">"ignoring ref with broken name %s"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="63">refname<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
		  <return pos:line="9" pos:column="19">return <expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">cb<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">grab_pattern<pos:position pos:line="12" pos:column="30"/></name></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier><modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">pattern<pos:position pos:line="13" pos:column="37"/></name></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">namelen<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><call><name pos:line="14" pos:column="31">strlen<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">refname<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="47"/></decl_stmt>
		<for pos:line="15" pos:column="17">for <control pos:line="15" pos:column="21">(<init><expr><name pos:line="15" pos:column="22">pattern<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="32">cb<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">grab_pattern<pos:position pos:line="15" pos:column="48"/></name></name></expr>;<pos:position pos:line="15" pos:column="49"/></init> <condition><expr><operator pos:line="15" pos:column="50">*<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">pattern<pos:position pos:line="15" pos:column="58"/></name></expr>;<pos:position pos:line="15" pos:column="59"/></condition> <incr><expr><name pos:line="15" pos:column="60">pattern<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">++<pos:position pos:line="15" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="70"/></control> <block pos:line="15" pos:column="71">{
			<decl_stmt><decl><type><specifier pos:line="16" pos:column="25">const<pos:position pos:line="16" pos:column="30"/></specifier> <name pos:line="16" pos:column="31">char<pos:position pos:line="16" pos:column="35"/></name> <modifier pos:line="16" pos:column="36">*<pos:position pos:line="16" pos:column="37"/></modifier></type><name pos:line="16" pos:column="37">p<pos:position pos:line="16" pos:column="38"/></name> <init pos:line="16" pos:column="39">= <expr><operator pos:line="16" pos:column="41">*<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">pattern<pos:position pos:line="16" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">int<pos:position pos:line="17" pos:column="28"/></name></type> <name pos:line="17" pos:column="29">plen<pos:position pos:line="17" pos:column="33"/></name> <init pos:line="17" pos:column="34">= <expr><call><name pos:line="17" pos:column="36">strlen<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">p<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="46"/></decl_stmt>

			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><operator pos:line="19" pos:column="29">(<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">plen<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">&lt;=<pos:position pos:line="19" pos:column="40"/></operator> <name pos:line="19" pos:column="38">namelen<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">)<pos:position pos:line="19" pos:column="46"/></operator> <operator pos:line="19" pos:column="47">&amp;&amp;<pos:position pos:line="19" pos:column="57"/></operator>
			    <operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><call><name pos:line="20" pos:column="30">strncmp<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">refname<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">p<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">plen<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call> <operator pos:line="20" pos:column="56">&amp;&amp;<pos:position pos:line="20" pos:column="66"/></operator>
			    <operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">refname<pos:position pos:line="21" pos:column="37"/></name><index pos:line="21" pos:column="37">[<expr><name pos:line="21" pos:column="38">plen<pos:position pos:line="21" pos:column="42"/></name></expr>]<pos:position pos:line="21" pos:column="43"/></index></name> <operator pos:line="21" pos:column="44">==<pos:position pos:line="21" pos:column="46"/></operator> <literal type="char" pos:line="21" pos:column="47">'\0'<pos:position pos:line="21" pos:column="51"/></literal> <operator pos:line="21" pos:column="52">||<pos:position pos:line="21" pos:column="54"/></operator>
			     <name><name pos:line="22" pos:column="30">refname<pos:position pos:line="22" pos:column="37"/></name><index pos:line="22" pos:column="37">[<expr><name pos:line="22" pos:column="38">plen<pos:position pos:line="22" pos:column="42"/></name></expr>]<pos:position pos:line="22" pos:column="43"/></index></name> <operator pos:line="22" pos:column="44">==<pos:position pos:line="22" pos:column="46"/></operator> <literal type="char" pos:line="22" pos:column="47">'/'<pos:position pos:line="22" pos:column="50"/></literal> <operator pos:line="22" pos:column="51">||<pos:position pos:line="22" pos:column="53"/></operator>
			     <name><name pos:line="23" pos:column="30">p<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><name pos:line="23" pos:column="32">plen<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-<pos:position pos:line="23" pos:column="37"/></operator><literal type="number" pos:line="23" pos:column="37">1<pos:position pos:line="23" pos:column="38"/></literal></expr>]<pos:position pos:line="23" pos:column="39"/></index></name> <operator pos:line="23" pos:column="40">==<pos:position pos:line="23" pos:column="42"/></operator> <literal type="char" pos:line="23" pos:column="43">'/'<pos:position pos:line="23" pos:column="46"/></literal><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48">
				<block type="pseudo"><break pos:line="24" pos:column="33">break;<pos:position pos:line="24" pos:column="39"/></break></block></then></if>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">wildmatch<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">p<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">refname<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">WM_PATHNAME<pos:position pos:line="25" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="65">NULL<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="71"/></condition><then pos:line="25" pos:column="71">
				<block type="pseudo"><break pos:line="26" pos:column="33">break;<pos:position pos:line="26" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></for>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><operator pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">pattern<pos:position pos:line="28" pos:column="30"/></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31">
			<block type="pseudo"><return pos:line="29" pos:column="25">return <expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="32" pos:column="9">/*
	 * We do not open the object yet; sort may only need refname
	 * to do its job and the resulting list may yet to be pruned
	 * by maxcount logic.
	 */</comment>
	<expr_stmt><expr><name pos:line="37" pos:column="9">ref<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">xcalloc<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="number" pos:line="37" pos:column="23">1<pos:position pos:line="37" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="26">sizeof<argument_list pos:line="37" pos:column="32">(<argument><expr><operator pos:line="37" pos:column="33">*<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">ref<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">ref<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">refname<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <call><name pos:line="38" pos:column="24">xstrdup<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">refname<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">hashcpy<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name><name pos:line="39" pos:column="17">ref<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">objectname<pos:position pos:line="39" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">sha1<pos:position pos:line="39" pos:column="38"/></name></expr></argument>)<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">ref<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">flag<pos:position pos:line="40" pos:column="18"/></name></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">flag<pos:position pos:line="40" pos:column="25"/></name></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><name pos:line="42" pos:column="9">cnt<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <name><name pos:line="42" pos:column="15">cb<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">grab_cnt<pos:position pos:line="42" pos:column="27"/></name></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">REALLOC_ARRAY<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><name><name pos:line="43" pos:column="23">cb<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">grab_array<pos:position pos:line="43" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">cnt<pos:position pos:line="43" pos:column="42"/></name> <operator pos:line="43" pos:column="43">+<pos:position pos:line="43" pos:column="44"/></operator> <literal type="number" pos:line="43" pos:column="45">1<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">cb<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="13">grab_array<pos:position pos:line="44" pos:column="23"/></name><index pos:line="44" pos:column="23">[<expr><name pos:line="44" pos:column="24">cnt<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">++<pos:position pos:line="44" pos:column="29"/></operator></expr>]<pos:position pos:line="44" pos:column="30"/></index></name> <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">ref<pos:position pos:line="44" pos:column="36"/></name></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">cb<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">grab_cnt<pos:position pos:line="45" pos:column="21"/></name></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">cnt<pos:position pos:line="45" pos:column="27"/></name></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
	<return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

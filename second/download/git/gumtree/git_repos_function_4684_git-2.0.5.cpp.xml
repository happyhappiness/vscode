<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4684_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_repo_path<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">repo<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">is_bundle<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name><name pos:line="3" pos:column="22">suffix<pos:position pos:line="3" pos:column="28"/></name><index pos:line="3" pos:column="28">[]<pos:position pos:line="3" pos:column="30"/></index></name> <init pos:line="3" pos:column="31">= <expr><block pos:line="3" pos:column="33">{ <expr><literal type="string" pos:line="3" pos:column="35">"/.git"<pos:position pos:line="3" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="44">""<pos:position pos:line="3" pos:column="46"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="48">".git/.git"<pos:position pos:line="3" pos:column="59"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="61">".git"<pos:position pos:line="3" pos:column="67"/></literal></expr> }<pos:position pos:line="3" pos:column="69"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name><name pos:line="4" pos:column="22">bundle_suffix<pos:position pos:line="4" pos:column="35"/></name><index pos:line="4" pos:column="35">[]<pos:position pos:line="4" pos:column="37"/></index></name> <init pos:line="4" pos:column="38">= <expr><block pos:line="4" pos:column="40">{ <expr><literal type="string" pos:line="4" pos:column="42">".bundle"<pos:position pos:line="4" pos:column="51"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="53">""<pos:position pos:line="4" pos:column="55"/></literal></expr> }<pos:position pos:line="4" pos:column="57"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">stat<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">st<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="25">ARRAY_SIZE<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">suffix<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></condition> <incr><expr><name pos:line="8" pos:column="45">i<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">++<pos:position pos:line="8" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="49"/></control> <block pos:line="8" pos:column="50">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">path<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">path<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">mkpath<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"%s%s"<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">repo<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="45">suffix<pos:position pos:line="10" pos:column="51"/></name><index pos:line="10" pos:column="51">[<expr><name pos:line="10" pos:column="52">i<pos:position pos:line="10" pos:column="53"/></name></expr>]<pos:position pos:line="10" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">stat<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">path<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="33">st<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">S_ISDIR<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name><name pos:line="13" pos:column="29">st<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">.<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">st_mode<pos:position pos:line="13" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call> <operator pos:line="13" pos:column="41">&amp;&amp;<pos:position pos:line="13" pos:column="51"/></operator> <call><name pos:line="13" pos:column="44">is_git_directory<pos:position pos:line="13" pos:column="60"/></name><argument_list pos:line="13" pos:column="60">(<argument><expr><name pos:line="13" pos:column="61">path<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="67"/></condition><then pos:line="13" pos:column="67"> <block pos:line="13" pos:column="68">{
			<expr_stmt><expr><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">is_bundle<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <literal type="number" pos:line="14" pos:column="38">0<pos:position pos:line="14" pos:column="39"/></literal></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
			<return pos:line="15" pos:column="25">return <expr><call><name pos:line="15" pos:column="32">xstrdup<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><call><name pos:line="15" pos:column="40">absolute_path<pos:position pos:line="15" pos:column="53"/></name><argument_list pos:line="15" pos:column="53">(<argument><expr><name pos:line="15" pos:column="54">path<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></return>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <elseif pos:line="16" pos:column="19">else <if pos:line="16" pos:column="24">if <condition pos:line="16" pos:column="27">(<expr><call><name pos:line="16" pos:column="28">S_ISREG<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name><name pos:line="16" pos:column="36">st<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">.<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">st_mode<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call> <operator pos:line="16" pos:column="48">&amp;&amp;<pos:position pos:line="16" pos:column="58"/></operator> <name><name pos:line="16" pos:column="51">st<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">.<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="54">st_size<pos:position pos:line="16" pos:column="61"/></name></name> <operator pos:line="16" pos:column="62">&gt;<pos:position pos:line="16" pos:column="66"/></operator> <literal type="number" pos:line="16" pos:column="64">8<pos:position pos:line="16" pos:column="65"/></literal></expr>)<pos:position pos:line="16" pos:column="66"/></condition><then pos:line="16" pos:column="66"> <block pos:line="16" pos:column="67">{
			<comment type="block" pos:line="17" pos:column="25">/* Is it a "gitfile"? */</comment>
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">char<pos:position pos:line="18" pos:column="29"/></name></type> <name><name pos:line="18" pos:column="30">signature<pos:position pos:line="18" pos:column="39"/></name><index pos:line="18" pos:column="39">[<expr><literal type="number" pos:line="18" pos:column="40">8<pos:position pos:line="18" pos:column="41"/></literal></expr>]<pos:position pos:line="18" pos:column="42"/></index></name></decl>;<pos:position pos:line="18" pos:column="43"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="19" pos:column="25">int<pos:position pos:line="19" pos:column="28"/></name></type> <name pos:line="19" pos:column="29">len<pos:position pos:line="19" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="34">fd<pos:position pos:line="19" pos:column="36"/></name> <init pos:line="19" pos:column="37">= <expr><call><name pos:line="19" pos:column="39">open<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">path<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">O_RDONLY<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="60"/></decl_stmt>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><name pos:line="20" pos:column="29">fd<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">&lt;<pos:position pos:line="20" pos:column="36"/></operator> <literal type="number" pos:line="20" pos:column="34">0<pos:position pos:line="20" pos:column="35"/></literal></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36">
				<block type="pseudo"><continue pos:line="21" pos:column="33">continue;<pos:position pos:line="21" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <call><name pos:line="22" pos:column="31">read_in_full<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><name pos:line="22" pos:column="44">fd<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">signature<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="59">8<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">close<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">fd<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name pos:line="24" pos:column="29">len<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">!=<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">8<pos:position pos:line="24" pos:column="37"/></literal> <operator pos:line="24" pos:column="38">||<pos:position pos:line="24" pos:column="40"/></operator> <call><name pos:line="24" pos:column="41">strncmp<pos:position pos:line="24" pos:column="48"/></name><argument_list pos:line="24" pos:column="48">(<argument><expr><name pos:line="24" pos:column="49">signature<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="60">"gitdir: "<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="72">8<pos:position pos:line="24" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="75"/></condition><then pos:line="24" pos:column="75">
				<block type="pseudo"><continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="26" pos:column="25">path<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">read_gitfile<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">path<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name pos:line="27" pos:column="29">path<pos:position pos:line="27" pos:column="33"/></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <block pos:line="27" pos:column="35">{
				<expr_stmt><expr><operator pos:line="28" pos:column="33">*<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">is_bundle<pos:position pos:line="28" pos:column="43"/></name> <operator pos:line="28" pos:column="44">=<pos:position pos:line="28" pos:column="45"/></operator> <literal type="number" pos:line="28" pos:column="46">0<pos:position pos:line="28" pos:column="47"/></literal></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
				<return pos:line="29" pos:column="33">return <expr><call><name pos:line="29" pos:column="40">xstrdup<pos:position pos:line="29" pos:column="47"/></name><argument_list pos:line="29" pos:column="47">(<argument><expr><call><name pos:line="29" pos:column="48">absolute_path<pos:position pos:line="29" pos:column="61"/></name><argument_list pos:line="29" pos:column="61">(<argument><expr><name pos:line="29" pos:column="62">path<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></return>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="32" pos:column="10"/></block></for>

	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><expr><name pos:line="34" pos:column="14">i<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></init> <condition><expr><name pos:line="34" pos:column="21">i<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">&lt;<pos:position pos:line="34" pos:column="27"/></operator> <call><name pos:line="34" pos:column="25">ARRAY_SIZE<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">bundle_suffix<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></condition> <incr><expr><name pos:line="34" pos:column="52">i<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">++<pos:position pos:line="34" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="56"/></control> <block pos:line="34" pos:column="57">{
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">const<pos:position pos:line="35" pos:column="22"/></specifier> <name pos:line="35" pos:column="23">char<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">path<pos:position pos:line="35" pos:column="33"/></name></decl>;<pos:position pos:line="35" pos:column="34"/></decl_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">path<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <call><name pos:line="36" pos:column="24">mkpath<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><literal type="string" pos:line="36" pos:column="31">"%s%s"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">repo<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="45">bundle_suffix<pos:position pos:line="36" pos:column="58"/></name><index pos:line="36" pos:column="58">[<expr><name pos:line="36" pos:column="59">i<pos:position pos:line="36" pos:column="60"/></name></expr>]<pos:position pos:line="36" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><call><name pos:line="37" pos:column="22">stat<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">path<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="33">&amp;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="34">st<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call> <operator pos:line="37" pos:column="38">&amp;&amp;<pos:position pos:line="37" pos:column="48"/></operator> <call><name pos:line="37" pos:column="41">S_ISREG<pos:position pos:line="37" pos:column="48"/></name><argument_list pos:line="37" pos:column="48">(<argument><expr><name><name pos:line="37" pos:column="49">st<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">.<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="52">st_mode<pos:position pos:line="37" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="61"/></condition><then pos:line="37" pos:column="61"> <block pos:line="37" pos:column="62">{
			<expr_stmt><expr><operator pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">is_bundle<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">=<pos:position pos:line="38" pos:column="37"/></operator> <literal type="number" pos:line="38" pos:column="38">1<pos:position pos:line="38" pos:column="39"/></literal></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
			<return pos:line="39" pos:column="25">return <expr><call><name pos:line="39" pos:column="32">xstrdup<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><call><name pos:line="39" pos:column="40">absolute_path<pos:position pos:line="39" pos:column="53"/></name><argument_list pos:line="39" pos:column="53">(<argument><expr><name pos:line="39" pos:column="54">path<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></return>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></for>

	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">NULL<pos:position pos:line="43" pos:column="20"/></name></expr>;<pos:position pos:line="43" pos:column="21"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2876_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_decorate_color_slot<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">slot<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * We're comparing with 'ignore-case' on
	 * (because config.c sets them all tolower),
	 * but let's match the letters in the literal
	 * string values here with how they are
	 * documented in Documentation/config.txt, for
	 * consistency.
	 *
	 * We love being consistent, don't we?
	 */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">slot<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"branch"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">DECORATION_REF_LOCAL<pos:position pos:line="14" pos:column="44"/></name></expr>;<pos:position pos:line="14" pos:column="45"/></return></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">strcasecmp<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">slot<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"remoteBranch"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">DECORATION_REF_REMOTE<pos:position pos:line="16" pos:column="45"/></name></expr>;<pos:position pos:line="16" pos:column="46"/></return></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">strcasecmp<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">slot<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="31">"tag"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">DECORATION_REF_TAG<pos:position pos:line="18" pos:column="42"/></name></expr>;<pos:position pos:line="18" pos:column="43"/></return></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">strcasecmp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">slot<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"stash"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">DECORATION_REF_STASH<pos:position pos:line="20" pos:column="44"/></name></expr>;<pos:position pos:line="20" pos:column="45"/></return></block></then></if>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">slot<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"HEAD"<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">DECORATION_REF_HEAD<pos:position pos:line="22" pos:column="43"/></name></expr>;<pos:position pos:line="22" pos:column="44"/></return></block></then></if>
	<return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6232_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit_list<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">reduce_parents<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">commit<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">head_commit<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
					  <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">head_subsumed<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
					  <parameter><decl><type><name><name pos:line="3" pos:column="43">struct<pos:position pos:line="3" pos:column="49"/></name> <name pos:line="3" pos:column="50">commit_list<pos:position pos:line="3" pos:column="61"/></name></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">remoteheads<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="75"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">parents<pos:position pos:line="5" pos:column="36"/></name></decl>, <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier><modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="40">remotes<pos:position pos:line="5" pos:column="47"/></name></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * Is the current HEAD reachable from another commit being
	 * merged?  If so we do not want to record it as a parent of
	 * the resulting merge, unless --no-ff is given.  We will flip
	 * this variable to 0 when we find HEAD among the independent
	 * tips being merged.
	 */</comment>
	<expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">head_subsumed<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* Find what parents to record by checking independent ones. */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">parents<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">reduce_heads<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">remoteheads<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name pos:line="19" pos:column="9">remoteheads<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">NULL<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">remotes<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">&amp;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="20">remoteheads<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">parents<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition> <block pos:line="21" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">commit<pos:position pos:line="22" pos:column="30"/></name></name> <modifier pos:line="22" pos:column="31">*<pos:position pos:line="22" pos:column="32"/></modifier></type><name pos:line="22" pos:column="32">commit<pos:position pos:line="22" pos:column="38"/></name> <init pos:line="22" pos:column="39">= <expr><call><name pos:line="22" pos:column="41">pop_commit<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><operator pos:line="22" pos:column="52">&amp;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="53">parents<pos:position pos:line="22" pos:column="60"/></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="62"/></decl_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">commit<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">==<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">head_commit<pos:position pos:line="23" pos:column="42"/></name></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">head_subsumed<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">=<pos:position pos:line="24" pos:column="41"/></operator> <literal type="number" pos:line="24" pos:column="42">0<pos:position pos:line="24" pos:column="43"/></literal></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt></block></then>
		<else pos:line="25" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">remotes<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><call><name pos:line="26" pos:column="36">commit_list_insert<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><name pos:line="26" pos:column="55">commit<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">remotes<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call><operator pos:line="26" pos:column="71">-&gt;<pos:position pos:line="26" pos:column="76"/></operator><name pos:line="26" pos:column="73">next<pos:position pos:line="26" pos:column="77"/></name></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></while>
	<return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">remoteheads<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

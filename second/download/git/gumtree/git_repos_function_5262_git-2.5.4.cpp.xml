<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5262_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">maildir_filename_cmp<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">a<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">b<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">a<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">&amp;&amp;<pos:position pos:line="3" pos:column="29"/></operator> <operator pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">b<pos:position pos:line="3" pos:column="24"/></name></expr>)<pos:position pos:line="3" pos:column="25"/></condition> <block pos:line="3" pos:column="26">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><call><name pos:line="4" pos:column="21">isdigit<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><operator pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">a<pos:position pos:line="4" pos:column="31"/></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call> <operator pos:line="4" pos:column="33">&amp;&amp;<pos:position pos:line="4" pos:column="43"/></operator> <call><name pos:line="4" pos:column="36">isdigit<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">b<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="48"/></condition><then pos:line="4" pos:column="48"> <block pos:line="4" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="5" pos:column="25">long<pos:position pos:line="5" pos:column="29"/></name> <name pos:line="5" pos:column="30">int<pos:position pos:line="5" pos:column="33"/></name></type> <name pos:line="5" pos:column="34">na<pos:position pos:line="5" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="38">nb<pos:position pos:line="5" pos:column="40"/></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
			<expr_stmt><expr><name pos:line="6" pos:column="25">na<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">=<pos:position pos:line="6" pos:column="29"/></operator> <call><name pos:line="6" pos:column="30">strtol<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">a<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="40">(<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">char<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">*<pos:position pos:line="6" pos:column="47"/></operator><operator pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></operator><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator><operator pos:line="6" pos:column="49">&amp;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="50">a<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="53">10<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="7" pos:column="25">nb<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <call><name pos:line="7" pos:column="30">strtol<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">b<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="40">(<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">char<pos:position pos:line="7" pos:column="45"/></name> <operator pos:line="7" pos:column="46">*<pos:position pos:line="7" pos:column="47"/></operator><operator pos:line="7" pos:column="47">*<pos:position pos:line="7" pos:column="48"/></operator><operator pos:line="7" pos:column="48">)<pos:position pos:line="7" pos:column="49"/></operator><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="50">b<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="53">10<pos:position pos:line="7" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>
			<if pos:line="8" pos:column="25">if <condition pos:line="8" pos:column="28">(<expr><name pos:line="8" pos:column="29">na<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">!=<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="35">nb<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
				<block type="pseudo"><return pos:line="9" pos:column="33">return <expr><name pos:line="9" pos:column="40">na<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">-<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">nb<pos:position pos:line="9" pos:column="47"/></name></expr>;<pos:position pos:line="9" pos:column="48"/></return></block></then></if>
			<comment type="block" pos:line="10" pos:column="25">/* strtol advanced our pointers */</comment>
		}<pos:position pos:line="11" pos:column="18"/></block></then>
		<else pos:line="12" pos:column="17">else <block pos:line="12" pos:column="22">{
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">a<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">!=<pos:position pos:line="13" pos:column="34"/></operator> <operator pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">b<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
				<block type="pseudo"><return pos:line="14" pos:column="33">return <expr><operator pos:line="14" pos:column="40">(<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">unsigned<pos:position pos:line="14" pos:column="49"/></name> <name pos:line="14" pos:column="50">char<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">)<pos:position pos:line="14" pos:column="55"/></operator><operator pos:line="14" pos:column="55">*<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">a<pos:position pos:line="14" pos:column="57"/></name> <operator pos:line="14" pos:column="58">-<pos:position pos:line="14" pos:column="59"/></operator> <operator pos:line="14" pos:column="60">(<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">unsigned<pos:position pos:line="14" pos:column="69"/></name> <name pos:line="14" pos:column="70">char<pos:position pos:line="14" pos:column="74"/></name><operator pos:line="14" pos:column="74">)<pos:position pos:line="14" pos:column="75"/></operator><operator pos:line="14" pos:column="75">*<pos:position pos:line="14" pos:column="76"/></operator><name pos:line="14" pos:column="76">b<pos:position pos:line="14" pos:column="77"/></name></expr>;<pos:position pos:line="14" pos:column="78"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="15" pos:column="25">a<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">++<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">b<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">++<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></else></if>
	}<pos:position pos:line="18" pos:column="10"/></block></while>
	<return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">unsigned<pos:position pos:line="19" pos:column="25"/></name> <name pos:line="19" pos:column="26">char<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">)<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">a<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">-<pos:position pos:line="19" pos:column="35"/></operator> <operator pos:line="19" pos:column="36">(<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">unsigned<pos:position pos:line="19" pos:column="45"/></name> <name pos:line="19" pos:column="46">char<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator><operator pos:line="19" pos:column="51">*<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="52">b<pos:position pos:line="19" pos:column="53"/></name></expr>;<pos:position pos:line="19" pos:column="54"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

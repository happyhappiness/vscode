<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_95_git-2.12.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">pp_user_info<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">pretty_print_context<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pp<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">what<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">strbuf<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">sb<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="3" pos:column="19">const<pos:position pos:line="3" pos:column="24"/></specifier> <name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">line<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">encoding<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ident_split<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">ident<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">line_end<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">mailbuf<pos:position pos:line="7" pos:column="28"/></name></decl>, <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="31">namebuf<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">namelen<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">maillen<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">max_length<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><literal type="number" pos:line="9" pos:column="26">78<pos:position pos:line="9" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt> <comment type="block" pos:line="9" pos:column="30">/* per rfc2822 */</comment>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">pp<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">fmt<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">==<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">CMIT_FMT_ONELINE<pos:position pos:line="11" pos:column="40"/></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">line_end<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">strchrnul<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">line<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="36">'\n'<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">split_ident_line<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="31">ident<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">line<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">line_end<pos:position pos:line="15" pos:column="52"/></name> <operator pos:line="15" pos:column="53">-<pos:position pos:line="15" pos:column="54"/></operator> <name pos:line="15" pos:column="55">line<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="61"/></condition><then pos:line="15" pos:column="61">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">mailbuf<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="19">ident<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">mail_begin<pos:position pos:line="18" pos:column="35"/></name></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">maillen<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name><name pos:line="19" pos:column="19">ident<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">.<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">mail_end<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">-<pos:position pos:line="19" pos:column="35"/></operator> <name><name pos:line="19" pos:column="36">ident<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">mail_begin<pos:position pos:line="19" pos:column="52"/></name></name></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">namebuf<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name><name pos:line="20" pos:column="19">ident<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">name_begin<pos:position pos:line="20" pos:column="35"/></name></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">namelen<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name><name pos:line="21" pos:column="19">ident<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">name_end<pos:position pos:line="21" pos:column="33"/></name></name> <operator pos:line="21" pos:column="34">-<pos:position pos:line="21" pos:column="35"/></operator> <name><name pos:line="21" pos:column="36">ident<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">.<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">name_begin<pos:position pos:line="21" pos:column="52"/></name></name></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">pp<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">mailmap<pos:position pos:line="23" pos:column="24"/></name></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">map_user<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name><name pos:line="24" pos:column="26">pp<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">mailmap<pos:position pos:line="24" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="39">&amp;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="40">mailbuf<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="50">maillen<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="59">&amp;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="60">namebuf<pos:position pos:line="24" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="69">&amp;<pos:position pos:line="24" pos:column="74"/></operator><name pos:line="24" pos:column="70">namelen<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">cmit_fmt_is_mail<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name><name pos:line="26" pos:column="30">pp<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">fmt<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <block pos:line="26" pos:column="40">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name><name pos:line="27" pos:column="21">pp<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">from_ident<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">&amp;&amp;<pos:position pos:line="27" pos:column="46"/></operator> <call><name pos:line="27" pos:column="39">ident_cmp<pos:position pos:line="27" pos:column="48"/></name><argument_list pos:line="27" pos:column="48">(<argument><expr><name><name pos:line="27" pos:column="49">pp<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">-&gt;<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="53">from_ident<pos:position pos:line="27" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="65">&amp;<pos:position pos:line="27" pos:column="70"/></operator><name pos:line="27" pos:column="66">ident<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="73"/></condition><then pos:line="27" pos:column="73"> <block pos:line="27" pos:column="74">{
			<decl_stmt><decl><type><name><name pos:line="28" pos:column="25">struct<pos:position pos:line="28" pos:column="31"/></name> <name pos:line="28" pos:column="32">strbuf<pos:position pos:line="28" pos:column="38"/></name></name></type> <name pos:line="28" pos:column="39">buf<pos:position pos:line="28" pos:column="42"/></name> <init pos:line="28" pos:column="43">= <expr><name pos:line="28" pos:column="45">STRBUF_INIT<pos:position pos:line="28" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="57"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="30" pos:column="25">strbuf_addstr<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="40">buf<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="45">"From: "<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">strbuf_add<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><operator pos:line="31" pos:column="36">&amp;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="37">buf<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">namebuf<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">namelen<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">strbuf_addstr<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="40">buf<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="45">" &lt;"<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">strbuf_add<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><operator pos:line="33" pos:column="36">&amp;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="37">buf<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">mailbuf<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">maillen<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">strbuf_addstr<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><operator pos:line="34" pos:column="39">&amp;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="40">buf<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="45">"&gt;\n"<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">string_list_append<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name><name pos:line="35" pos:column="45">pp<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">in_body_headers<pos:position pos:line="35" pos:column="64"/></name></name></expr></argument>,
					   <argument><expr><call><name pos:line="36" pos:column="44">strbuf_detach<pos:position pos:line="36" pos:column="57"/></name><argument_list pos:line="36" pos:column="57">(<argument><expr><operator pos:line="36" pos:column="58">&amp;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="59">buf<pos:position pos:line="36" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">NULL<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>

			<expr_stmt><expr><name pos:line="38" pos:column="25">mailbuf<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <name><name pos:line="38" pos:column="35">pp<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">from_ident<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">mail_begin<pos:position pos:line="38" pos:column="61"/></name></name></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="39" pos:column="25">maillen<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <name><name pos:line="39" pos:column="35">pp<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">from_ident<pos:position pos:line="39" pos:column="49"/></name><operator pos:line="39" pos:column="49">-&gt;<pos:position pos:line="39" pos:column="54"/></operator><name pos:line="39" pos:column="51">mail_end<pos:position pos:line="39" pos:column="59"/></name></name> <operator pos:line="39" pos:column="60">-<pos:position pos:line="39" pos:column="61"/></operator> <name pos:line="39" pos:column="62">mailbuf<pos:position pos:line="39" pos:column="69"/></name></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">namebuf<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <name><name pos:line="40" pos:column="35">pp<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">from_ident<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">name_begin<pos:position pos:line="40" pos:column="61"/></name></name></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">namelen<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <name><name pos:line="41" pos:column="35">pp<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">from_ident<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">-&gt;<pos:position pos:line="41" pos:column="54"/></operator><name pos:line="41" pos:column="51">name_end<pos:position pos:line="41" pos:column="59"/></name></name> <operator pos:line="41" pos:column="60">-<pos:position pos:line="41" pos:column="61"/></operator> <name pos:line="41" pos:column="62">namebuf<pos:position pos:line="41" pos:column="69"/></name></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="44" pos:column="17">strbuf_addstr<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">sb<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="35">"From: "<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">needs_rfc2047_encoding<pos:position pos:line="45" pos:column="43"/></name><argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">namebuf<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">namelen<pos:position pos:line="45" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="62">RFC2047_ADDRESS<pos:position pos:line="45" pos:column="77"/></name></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="79"/></condition><then pos:line="45" pos:column="79"> <block pos:line="45" pos:column="80">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">add_rfc2047<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">sb<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">namebuf<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">namelen<pos:position pos:line="46" pos:column="57"/></name></expr></argument>,
				    <argument><expr><name pos:line="47" pos:column="37">encoding<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">RFC2047_ADDRESS<pos:position pos:line="47" pos:column="62"/></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="48" pos:column="25">max_length<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">=<pos:position pos:line="48" pos:column="37"/></operator> <literal type="number" pos:line="48" pos:column="38">76<pos:position pos:line="48" pos:column="40"/></literal></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt> <comment type="block" pos:line="48" pos:column="42">/* per rfc2047 */</comment>
		}<pos:position pos:line="49" pos:column="18"/></block></then> <elseif pos:line="49" pos:column="19">else <if pos:line="49" pos:column="24">if <condition pos:line="49" pos:column="27">(<expr><call><name pos:line="49" pos:column="28">needs_rfc822_quoting<pos:position pos:line="49" pos:column="48"/></name><argument_list pos:line="49" pos:column="48">(<argument><expr><name pos:line="49" pos:column="49">namebuf<pos:position pos:line="49" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="58">namelen<pos:position pos:line="49" pos:column="65"/></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="67"/></condition><then pos:line="49" pos:column="67"> <block pos:line="49" pos:column="68">{
			<decl_stmt><decl><type><name><name pos:line="50" pos:column="25">struct<pos:position pos:line="50" pos:column="31"/></name> <name pos:line="50" pos:column="32">strbuf<pos:position pos:line="50" pos:column="38"/></name></name></type> <name pos:line="50" pos:column="39">quoted<pos:position pos:line="50" pos:column="45"/></name> <init pos:line="50" pos:column="46">= <expr><name pos:line="50" pos:column="48">STRBUF_INIT<pos:position pos:line="50" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="60"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">add_rfc822_quoted<pos:position pos:line="51" pos:column="42"/></name><argument_list pos:line="51" pos:column="42">(<argument><expr><operator pos:line="51" pos:column="43">&amp;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="44">quoted<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">namebuf<pos:position pos:line="51" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="61">namelen<pos:position pos:line="51" pos:column="68"/></name></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">strbuf_add_wrapped_bytes<pos:position pos:line="52" pos:column="49"/></name><argument_list pos:line="52" pos:column="49">(<argument><expr><name pos:line="52" pos:column="50">sb<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="54">quoted<pos:position pos:line="52" pos:column="60"/></name><operator pos:line="52" pos:column="60">.<pos:position pos:line="52" pos:column="61"/></operator><name pos:line="52" pos:column="61">buf<pos:position pos:line="52" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="66">quoted<pos:position pos:line="52" pos:column="72"/></name><operator pos:line="52" pos:column="72">.<pos:position pos:line="52" pos:column="73"/></operator><name pos:line="52" pos:column="73">len<pos:position pos:line="52" pos:column="76"/></name></name></expr></argument>,
							<argument><expr><operator pos:line="53" pos:column="57">-<pos:position pos:line="53" pos:column="58"/></operator><literal type="number" pos:line="53" pos:column="58">6<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="61">1<pos:position pos:line="53" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="64">max_length<pos:position pos:line="53" pos:column="74"/></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">strbuf_release<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><operator pos:line="54" pos:column="40">&amp;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="41">quoted<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if></elseif> <else pos:line="55" pos:column="19">else <block pos:line="55" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">strbuf_add_wrapped_bytes<pos:position pos:line="56" pos:column="49"/></name><argument_list pos:line="56" pos:column="49">(<argument><expr><name pos:line="56" pos:column="50">sb<pos:position pos:line="56" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="54">namebuf<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="63">namelen<pos:position pos:line="56" pos:column="70"/></name></expr></argument>,
						 <argument><expr><operator pos:line="57" pos:column="50">-<pos:position pos:line="57" pos:column="51"/></operator><literal type="number" pos:line="57" pos:column="51">6<pos:position pos:line="57" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="54">1<pos:position pos:line="57" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="57">max_length<pos:position pos:line="57" pos:column="67"/></name></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></else></if>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">max_length<pos:position pos:line="60" pos:column="31"/></name> <operator pos:line="60" pos:column="32">&lt;<pos:position pos:line="60" pos:column="36"/></operator>
		    <call><name pos:line="61" pos:column="21">last_line_length<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">sb<pos:position pos:line="61" pos:column="40"/></name></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call> <operator pos:line="61" pos:column="42">+<pos:position pos:line="61" pos:column="43"/></operator> <call><name pos:line="61" pos:column="44">strlen<pos:position pos:line="61" pos:column="50"/></name><argument_list pos:line="61" pos:column="50">(<argument><expr><literal type="string" pos:line="61" pos:column="51">" &lt;"<pos:position pos:line="61" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call> <operator pos:line="61" pos:column="57">+<pos:position pos:line="61" pos:column="58"/></operator> <name pos:line="61" pos:column="59">maillen<pos:position pos:line="61" pos:column="66"/></name> <operator pos:line="61" pos:column="67">+<pos:position pos:line="61" pos:column="68"/></operator> <call><name pos:line="61" pos:column="69">strlen<pos:position pos:line="61" pos:column="75"/></name><argument_list pos:line="61" pos:column="75">(<argument><expr><literal type="string" pos:line="61" pos:column="76">"&gt;"<pos:position pos:line="61" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="81"/></condition><then pos:line="61" pos:column="81">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">strbuf_addch<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">sb<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="62" pos:column="42">'\n'<pos:position pos:line="62" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">strbuf_addf<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">sb<pos:position pos:line="63" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="33">" &lt;%.*s&gt;\n"<pos:position pos:line="63" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="46">(<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="47">int<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">)<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="51">maillen<pos:position pos:line="63" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="60">mailbuf<pos:position pos:line="63" pos:column="67"/></name></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="64" pos:column="10"/></block></then> <else pos:line="64" pos:column="11">else <block pos:line="64" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">strbuf_addf<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">sb<pos:position pos:line="65" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="33">"%s: %.*s%.*s &lt;%.*s&gt;\n"<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="58">what<pos:position pos:line="65" pos:column="62"/></name></expr></argument>,
			    <argument><expr><ternary><condition><expr><operator pos:line="66" pos:column="29">(<pos:position pos:line="66" pos:column="30"/></operator><name><name pos:line="66" pos:column="30">pp<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">-&gt;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="34">fmt<pos:position pos:line="66" pos:column="37"/></name></name> <operator pos:line="66" pos:column="38">==<pos:position pos:line="66" pos:column="40"/></operator> <name pos:line="66" pos:column="41">CMIT_FMT_FULLER<pos:position pos:line="66" pos:column="56"/></name><operator pos:line="66" pos:column="56">)<pos:position pos:line="66" pos:column="57"/></operator></expr> ?<pos:position pos:line="66" pos:column="59"/></condition><then pos:line="66" pos:column="59"> <expr><literal type="number" pos:line="66" pos:column="60">4<pos:position pos:line="66" pos:column="61"/></literal></expr> <pos:position pos:line="66" pos:column="62"/></then><else pos:line="66" pos:column="62">: <expr><literal type="number" pos:line="66" pos:column="64">0<pos:position pos:line="66" pos:column="65"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="67">"    "<pos:position pos:line="66" pos:column="73"/></literal></expr></argument>,
			    <argument><expr><operator pos:line="67" pos:column="29">(<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">int<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">)<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">namelen<pos:position pos:line="67" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="43">namebuf<pos:position pos:line="67" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="52">(<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="53">int<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">)<pos:position pos:line="67" pos:column="57"/></operator><name pos:line="67" pos:column="57">maillen<pos:position pos:line="67" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="66">mailbuf<pos:position pos:line="67" pos:column="73"/></name></expr></argument>)<pos:position pos:line="67" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></else></if>

	<switch pos:line="70" pos:column="9">switch <condition pos:line="70" pos:column="16">(<expr><name><name pos:line="70" pos:column="17">pp<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">fmt<pos:position pos:line="70" pos:column="24"/></name></name></expr>)<pos:position pos:line="70" pos:column="25"/></condition> <block pos:line="70" pos:column="26">{
	<case pos:line="71" pos:column="9">case <expr><name pos:line="71" pos:column="14">CMIT_FMT_MEDIUM<pos:position pos:line="71" pos:column="29"/></name></expr>:<pos:position pos:line="71" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">strbuf_addf<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">sb<pos:position pos:line="72" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="33">"Date:   %s\n"<pos:position pos:line="72" pos:column="47"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="73" pos:column="29">show_ident_date<pos:position pos:line="73" pos:column="44"/></name><argument_list pos:line="73" pos:column="44">(<argument><expr><operator pos:line="73" pos:column="45">&amp;<pos:position pos:line="73" pos:column="50"/></operator><name pos:line="73" pos:column="46">ident<pos:position pos:line="73" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="53">&amp;<pos:position pos:line="73" pos:column="58"/></operator><name><name pos:line="73" pos:column="54">pp<pos:position pos:line="73" pos:column="56"/></name><operator pos:line="73" pos:column="56">-&gt;<pos:position pos:line="73" pos:column="61"/></operator><name pos:line="73" pos:column="58">date_mode<pos:position pos:line="73" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="70"/></expr_stmt>
		<break pos:line="74" pos:column="17">break;<pos:position pos:line="74" pos:column="23"/></break>
	<case pos:line="75" pos:column="9">case <expr><name pos:line="75" pos:column="14">CMIT_FMT_EMAIL<pos:position pos:line="75" pos:column="28"/></name></expr>:<pos:position pos:line="75" pos:column="29"/></case>
	<case pos:line="76" pos:column="9">case <expr><name pos:line="76" pos:column="14">CMIT_FMT_MBOXRD<pos:position pos:line="76" pos:column="29"/></name></expr>:<pos:position pos:line="76" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">strbuf_addf<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><name pos:line="77" pos:column="29">sb<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="33">"Date: %s\n"<pos:position pos:line="77" pos:column="45"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="78" pos:column="29">show_ident_date<pos:position pos:line="78" pos:column="44"/></name><argument_list pos:line="78" pos:column="44">(<argument><expr><operator pos:line="78" pos:column="45">&amp;<pos:position pos:line="78" pos:column="50"/></operator><name pos:line="78" pos:column="46">ident<pos:position pos:line="78" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="53">DATE_MODE<pos:position pos:line="78" pos:column="62"/></name><argument_list pos:line="78" pos:column="62">(<argument><expr><name pos:line="78" pos:column="63">RFC2822<pos:position pos:line="78" pos:column="70"/></name></expr></argument>)<pos:position pos:line="78" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="74"/></expr_stmt>
		<break pos:line="79" pos:column="17">break;<pos:position pos:line="79" pos:column="23"/></break>
	<case pos:line="80" pos:column="9">case <expr><name pos:line="80" pos:column="14">CMIT_FMT_FULLER<pos:position pos:line="80" pos:column="29"/></name></expr>:<pos:position pos:line="80" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="81" pos:column="17">strbuf_addf<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name pos:line="81" pos:column="29">sb<pos:position pos:line="81" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="33">"%sDate: %s\n"<pos:position pos:line="81" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="49">what<pos:position pos:line="81" pos:column="53"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="82" pos:column="29">show_ident_date<pos:position pos:line="82" pos:column="44"/></name><argument_list pos:line="82" pos:column="44">(<argument><expr><operator pos:line="82" pos:column="45">&amp;<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="46">ident<pos:position pos:line="82" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="53">&amp;<pos:position pos:line="82" pos:column="58"/></operator><name><name pos:line="82" pos:column="54">pp<pos:position pos:line="82" pos:column="56"/></name><operator pos:line="82" pos:column="56">-&gt;<pos:position pos:line="82" pos:column="61"/></operator><name pos:line="82" pos:column="58">date_mode<pos:position pos:line="82" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="70"/></expr_stmt>
		<break pos:line="83" pos:column="17">break;<pos:position pos:line="83" pos:column="23"/></break>
	<default pos:line="84" pos:column="9">default:<pos:position pos:line="84" pos:column="17"/></default>
		<comment type="block" pos:line="85" pos:column="17">/* notin' */</comment>
		<break pos:line="86" pos:column="17">break;<pos:position pos:line="86" pos:column="23"/></break>
	}<pos:position pos:line="87" pos:column="10"/></block></switch>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4122_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_header<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">line<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">unsigned<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">long<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">size<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">hdrsize<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="76">struct<pos:position pos:line="1" pos:column="82"/></name> <name pos:line="1" pos:column="83">patch<pos:position pos:line="1" pos:column="88"/></name></name> <modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type><name pos:line="1" pos:column="90">patch<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">offset<pos:position pos:line="3" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="31">len<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="5" pos:column="9">patch<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">is_toplevel_relative<pos:position pos:line="5" pos:column="36"/></name></name> <operator pos:line="5" pos:column="37">=<pos:position pos:line="5" pos:column="38"/></operator> <literal type="number" pos:line="5" pos:column="39">0<pos:position pos:line="5" pos:column="40"/></literal></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">patch<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">is_rename<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <name><name pos:line="6" pos:column="28">patch<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">is_copy<pos:position pos:line="6" pos:column="42"/></name></name> <operator pos:line="6" pos:column="43">=<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">patch<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">is_new<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <name><name pos:line="7" pos:column="25">patch<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">is_delete<pos:position pos:line="7" pos:column="41"/></name></name> <operator pos:line="7" pos:column="42">=<pos:position pos:line="7" pos:column="43"/></operator> <operator pos:line="7" pos:column="44">-<pos:position pos:line="7" pos:column="45"/></operator><literal type="number" pos:line="7" pos:column="45">1<pos:position pos:line="7" pos:column="46"/></literal></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">patch<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">old_mode<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <name><name pos:line="8" pos:column="27">patch<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">new_mode<pos:position pos:line="8" pos:column="42"/></name></name> <operator pos:line="8" pos:column="43">=<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">patch<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">old_name<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <name><name pos:line="9" pos:column="27">patch<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">new_name<pos:position pos:line="9" pos:column="42"/></name></name> <operator pos:line="9" pos:column="43">=<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">offset<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></init> <condition><expr><name pos:line="10" pos:column="26">size<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&gt;<pos:position pos:line="10" pos:column="35"/></operator> <literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal></expr>;<pos:position pos:line="10" pos:column="35"/></condition> <incr><expr><name pos:line="10" pos:column="36">offset<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">+=<pos:position pos:line="10" pos:column="45"/></operator> <name pos:line="10" pos:column="46">len<pos:position pos:line="10" pos:column="49"/></name></expr><operator pos:line="10" pos:column="49">,<pos:position pos:line="10" pos:column="50"/></operator> <expr><name pos:line="10" pos:column="51">size<pos:position pos:line="10" pos:column="55"/></name> <operator pos:line="10" pos:column="56">-=<pos:position pos:line="10" pos:column="58"/></operator> <name pos:line="10" pos:column="59">len<pos:position pos:line="10" pos:column="62"/></name></expr><operator pos:line="10" pos:column="62">,<pos:position pos:line="10" pos:column="63"/></operator> <expr><name pos:line="10" pos:column="64">line<pos:position pos:line="10" pos:column="68"/></name> <operator pos:line="10" pos:column="69">+=<pos:position pos:line="10" pos:column="71"/></operator> <name pos:line="10" pos:column="72">len<pos:position pos:line="10" pos:column="75"/></name></expr><operator pos:line="10" pos:column="75">,<pos:position pos:line="10" pos:column="76"/></operator> <expr><name pos:line="10" pos:column="77">linenr<pos:position pos:line="10" pos:column="83"/></name><operator pos:line="10" pos:column="83">++<pos:position pos:line="10" pos:column="85"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="86"/></control> <block pos:line="10" pos:column="87">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">unsigned<pos:position pos:line="11" pos:column="25"/></name> <name pos:line="11" pos:column="26">long<pos:position pos:line="11" pos:column="30"/></name></type> <name pos:line="11" pos:column="31">nextlen<pos:position pos:line="11" pos:column="38"/></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><name pos:line="13" pos:column="17">len<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">linelen<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">line<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">size<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">len<pos:position pos:line="14" pos:column="25"/></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
			<block type="pseudo"><break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="17" pos:column="17">/* Testing this early allows us to take a few shortcuts.. */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">len<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">&lt;<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="27">6<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="21" pos:column="17">/*
		 * Make sure we don't find any unconnected patch fragments.
		 * That's a sign that we didn't find a header, and that a
		 * patch has become corrupted/broken up.
		 */</comment>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">memcmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><literal type="string" pos:line="26" pos:column="29">"@@ -"<pos:position pos:line="26" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">line<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="43">4<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46"> <block pos:line="26" pos:column="47">{
			<decl_stmt><decl><type><name><name pos:line="27" pos:column="25">struct<pos:position pos:line="27" pos:column="31"/></name> <name pos:line="27" pos:column="32">fragment<pos:position pos:line="27" pos:column="40"/></name></name></type> <name pos:line="27" pos:column="41">dummy<pos:position pos:line="27" pos:column="46"/></name></decl>;<pos:position pos:line="27" pos:column="47"/></decl_stmt>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><call><name pos:line="28" pos:column="29">parse_fragment_header<pos:position pos:line="28" pos:column="50"/></name><argument_list pos:line="28" pos:column="50">(<argument><expr><name pos:line="28" pos:column="51">line<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">len<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="62">&amp;<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="63">dummy<pos:position pos:line="28" pos:column="68"/></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call> <operator pos:line="28" pos:column="70">&lt;<pos:position pos:line="28" pos:column="74"/></operator> <literal type="number" pos:line="28" pos:column="72">0<pos:position pos:line="28" pos:column="73"/></literal></expr>)<pos:position pos:line="28" pos:column="74"/></condition><then pos:line="28" pos:column="74">
				<block type="pseudo"><continue pos:line="29" pos:column="33">continue;<pos:position pos:line="29" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">die<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><call><name pos:line="30" pos:column="29">_<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><literal type="string" pos:line="30" pos:column="31">"patch fragment without header at line %d: %.*s"<pos:position pos:line="30" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="31" pos:column="29">linenr<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="37">(<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">int<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">)<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">len<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-<pos:position pos:line="31" pos:column="46"/></operator><literal type="number" pos:line="31" pos:column="46">1<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">line<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">size<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">&lt;<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="28">len<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">+<pos:position pos:line="34" pos:column="33"/></operator> <literal type="number" pos:line="34" pos:column="34">6<pos:position pos:line="34" pos:column="35"/></literal></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36">
			<block type="pseudo"><break pos:line="35" pos:column="25">break;<pos:position pos:line="35" pos:column="31"/></break></block></then></if>

		<comment type="block" pos:line="37" pos:column="17">/*
		 * Git patch? It might not have a real patch, just a rename
		 * or mode change, so we handle that specially
		 */</comment>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><call><name pos:line="41" pos:column="22">memcmp<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><literal type="string" pos:line="41" pos:column="29">"diff --git "<pos:position pos:line="41" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">line<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="50">11<pos:position pos:line="41" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54"> <block pos:line="41" pos:column="55">{
			<decl_stmt><decl><type><name pos:line="42" pos:column="25">int<pos:position pos:line="42" pos:column="28"/></name></type> <name pos:line="42" pos:column="29">git_hdr_len<pos:position pos:line="42" pos:column="40"/></name> <init pos:line="42" pos:column="41">= <expr><call><name pos:line="42" pos:column="43">parse_git_header<pos:position pos:line="42" pos:column="59"/></name><argument_list pos:line="42" pos:column="59">(<argument><expr><name pos:line="42" pos:column="60">line<pos:position pos:line="42" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="66">len<pos:position pos:line="42" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="71">size<pos:position pos:line="42" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="77">patch<pos:position pos:line="42" pos:column="82"/></name></expr></argument>)<pos:position pos:line="42" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="84"/></decl_stmt>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">git_hdr_len<pos:position pos:line="43" pos:column="40"/></name> <operator pos:line="43" pos:column="41">&lt;=<pos:position pos:line="43" pos:column="46"/></operator> <name pos:line="43" pos:column="44">len<pos:position pos:line="43" pos:column="47"/></name></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48">
				<block type="pseudo"><continue pos:line="44" pos:column="33">continue;<pos:position pos:line="44" pos:column="42"/></continue></block></then></if>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><operator pos:line="45" pos:column="29">!<pos:position pos:line="45" pos:column="30"/></operator><name><name pos:line="45" pos:column="30">patch<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">old_name<pos:position pos:line="45" pos:column="45"/></name></name> <operator pos:line="45" pos:column="46">&amp;&amp;<pos:position pos:line="45" pos:column="56"/></operator> <operator pos:line="45" pos:column="49">!<pos:position pos:line="45" pos:column="50"/></operator><name><name pos:line="45" pos:column="50">patch<pos:position pos:line="45" pos:column="55"/></name><operator pos:line="45" pos:column="55">-&gt;<pos:position pos:line="45" pos:column="60"/></operator><name pos:line="45" pos:column="57">new_name<pos:position pos:line="45" pos:column="65"/></name></name></expr>)<pos:position pos:line="45" pos:column="66"/></condition><then pos:line="45" pos:column="66"> <block pos:line="45" pos:column="67">{
				<if pos:line="46" pos:column="33">if <condition pos:line="46" pos:column="36">(<expr><operator pos:line="46" pos:column="37">!<pos:position pos:line="46" pos:column="38"/></operator><name><name pos:line="46" pos:column="38">patch<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">-&gt;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="45">def_name<pos:position pos:line="46" pos:column="53"/></name></name></expr>)<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="41">die<pos:position pos:line="47" pos:column="44"/></name><argument_list pos:line="47" pos:column="44">(<argument><expr><call><name pos:line="47" pos:column="45">Q_<pos:position pos:line="47" pos:column="47"/></name><argument_list pos:line="47" pos:column="47">(<argument><expr><literal type="string" pos:line="47" pos:column="48">"git diff header lacks filename information when removing "<pos:position pos:line="47" pos:column="107"/></literal>
					       <literal type="string" pos:line="48" pos:column="48">"%d leading pathname component (line %d)"<pos:position pos:line="48" pos:column="89"/></literal></expr></argument>,
					       <argument><expr><literal type="string" pos:line="49" pos:column="48">"git diff header lacks filename information when removing "<pos:position pos:line="49" pos:column="107"/></literal>
					       <literal type="string" pos:line="50" pos:column="48">"%d leading pathname components (line %d)"<pos:position pos:line="50" pos:column="90"/></literal></expr></argument>,
					       <argument><expr><name pos:line="51" pos:column="48">p_value<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr></argument>,
					    <argument><expr><name pos:line="52" pos:column="45">p_value<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">linenr<pos:position pos:line="52" pos:column="60"/></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="53" pos:column="33">patch<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">old_name<pos:position pos:line="53" pos:column="48"/></name></name> <operator pos:line="53" pos:column="49">=<pos:position pos:line="53" pos:column="50"/></operator> <call><name pos:line="53" pos:column="51">xstrdup<pos:position pos:line="53" pos:column="58"/></name><argument_list pos:line="53" pos:column="58">(<argument><expr><name><name pos:line="53" pos:column="59">patch<pos:position pos:line="53" pos:column="64"/></name><operator pos:line="53" pos:column="64">-&gt;<pos:position pos:line="53" pos:column="69"/></operator><name pos:line="53" pos:column="66">def_name<pos:position pos:line="53" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="54" pos:column="33">patch<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">new_name<pos:position pos:line="54" pos:column="48"/></name></name> <operator pos:line="54" pos:column="49">=<pos:position pos:line="54" pos:column="50"/></operator> <call><name pos:line="54" pos:column="51">xstrdup<pos:position pos:line="54" pos:column="58"/></name><argument_list pos:line="54" pos:column="58">(<argument><expr><name><name pos:line="54" pos:column="59">patch<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">-&gt;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="66">def_name<pos:position pos:line="54" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><operator pos:line="56" pos:column="29">!<pos:position pos:line="56" pos:column="30"/></operator><name><name pos:line="56" pos:column="30">patch<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">is_delete<pos:position pos:line="56" pos:column="46"/></name></name> <operator pos:line="56" pos:column="47">&amp;&amp;<pos:position pos:line="56" pos:column="57"/></operator> <operator pos:line="56" pos:column="50">!<pos:position pos:line="56" pos:column="51"/></operator><name><name pos:line="56" pos:column="51">patch<pos:position pos:line="56" pos:column="56"/></name><operator pos:line="56" pos:column="56">-&gt;<pos:position pos:line="56" pos:column="61"/></operator><name pos:line="56" pos:column="58">new_name<pos:position pos:line="56" pos:column="66"/></name></name></expr>)<pos:position pos:line="56" pos:column="67"/></condition><then pos:line="56" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="33">die<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><literal type="string" pos:line="57" pos:column="37">"git diff header lacks filename information "<pos:position pos:line="57" pos:column="82"/></literal>
				    <literal type="string" pos:line="58" pos:column="37">"(line %d)"<pos:position pos:line="58" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">linenr<pos:position pos:line="58" pos:column="56"/></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="59" pos:column="25">patch<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">is_toplevel_relative<pos:position pos:line="59" pos:column="52"/></name></name> <operator pos:line="59" pos:column="53">=<pos:position pos:line="59" pos:column="54"/></operator> <literal type="number" pos:line="59" pos:column="55">1<pos:position pos:line="59" pos:column="56"/></literal></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="60" pos:column="25">*<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="26">hdrsize<pos:position pos:line="60" pos:column="33"/></name> <operator pos:line="60" pos:column="34">=<pos:position pos:line="60" pos:column="35"/></operator> <name pos:line="60" pos:column="36">git_hdr_len<pos:position pos:line="60" pos:column="47"/></name></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt>
			<return pos:line="61" pos:column="25">return <expr><name pos:line="61" pos:column="32">offset<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></return>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="64" pos:column="17">/* --- followed by +++ ? */</comment>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">memcmp<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><literal type="string" pos:line="65" pos:column="28">"--- "<pos:position pos:line="65" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="36">line<pos:position pos:line="65" pos:column="40"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="65" pos:column="43">4<pos:position pos:line="65" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call> <operator pos:line="65" pos:column="46">||<pos:position pos:line="65" pos:column="48"/></operator> <call><name pos:line="65" pos:column="49">memcmp<pos:position pos:line="65" pos:column="55"/></name><argument_list pos:line="65" pos:column="55">(<argument><expr><literal type="string" pos:line="65" pos:column="56">"+++ "<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">line<pos:position pos:line="65" pos:column="68"/></name> <operator pos:line="65" pos:column="69">+<pos:position pos:line="65" pos:column="70"/></operator> <name pos:line="65" pos:column="71">len<pos:position pos:line="65" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="76">4<pos:position pos:line="65" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="79"/></condition><then pos:line="65" pos:column="79">
			<block type="pseudo"><continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="68" pos:column="17">/*
		 * We only accept unified patches, so we want it to
		 * at least have "@@ -a,b +c,d @@\n", which is 14 chars
		 * minimum ("@@ -0,0 +1 @@\n" is the shortest).
		 */</comment>
		<expr_stmt><expr><name pos:line="73" pos:column="17">nextlen<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <call><name pos:line="73" pos:column="27">linelen<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">line<pos:position pos:line="73" pos:column="39"/></name> <operator pos:line="73" pos:column="40">+<pos:position pos:line="73" pos:column="41"/></operator> <name pos:line="73" pos:column="42">len<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">size<pos:position pos:line="73" pos:column="51"/></name> <operator pos:line="73" pos:column="52">-<pos:position pos:line="73" pos:column="53"/></operator> <name pos:line="73" pos:column="54">len<pos:position pos:line="73" pos:column="57"/></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="59"/></expr_stmt>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">size<pos:position pos:line="74" pos:column="25"/></name> <operator pos:line="74" pos:column="26">&lt;<pos:position pos:line="74" pos:column="30"/></operator> <name pos:line="74" pos:column="28">nextlen<pos:position pos:line="74" pos:column="35"/></name> <operator pos:line="74" pos:column="36">+<pos:position pos:line="74" pos:column="37"/></operator> <literal type="number" pos:line="74" pos:column="38">14<pos:position pos:line="74" pos:column="40"/></literal> <operator pos:line="74" pos:column="41">||<pos:position pos:line="74" pos:column="43"/></operator> <call><name pos:line="74" pos:column="44">memcmp<pos:position pos:line="74" pos:column="50"/></name><argument_list pos:line="74" pos:column="50">(<argument><expr><literal type="string" pos:line="74" pos:column="51">"@@ -"<pos:position pos:line="74" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="59">line<pos:position pos:line="74" pos:column="63"/></name> <operator pos:line="74" pos:column="64">+<pos:position pos:line="74" pos:column="65"/></operator> <name pos:line="74" pos:column="66">len<pos:position pos:line="74" pos:column="69"/></name> <operator pos:line="74" pos:column="70">+<pos:position pos:line="74" pos:column="71"/></operator> <name pos:line="74" pos:column="72">nextlen<pos:position pos:line="74" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="81">4<pos:position pos:line="74" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="84"/></condition><then pos:line="74" pos:column="84">
			<block type="pseudo"><continue pos:line="75" pos:column="25">continue;<pos:position pos:line="75" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="77" pos:column="17">/* Ok, we'll consider it a patch */</comment>
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">parse_traditional_patch<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><name pos:line="78" pos:column="41">line<pos:position pos:line="78" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="47">line<pos:position pos:line="78" pos:column="51"/></name><operator pos:line="78" pos:column="51">+<pos:position pos:line="78" pos:column="52"/></operator><name pos:line="78" pos:column="52">len<pos:position pos:line="78" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="57">patch<pos:position pos:line="78" pos:column="62"/></name></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="79" pos:column="17">*<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">hdrsize<pos:position pos:line="79" pos:column="25"/></name> <operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator> <name pos:line="79" pos:column="28">len<pos:position pos:line="79" pos:column="31"/></name> <operator pos:line="79" pos:column="32">+<pos:position pos:line="79" pos:column="33"/></operator> <name pos:line="79" pos:column="34">nextlen<pos:position pos:line="79" pos:column="41"/></name></expr>;<pos:position pos:line="79" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="80" pos:column="17">linenr<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">+=<pos:position pos:line="80" pos:column="26"/></operator> <literal type="number" pos:line="80" pos:column="27">2<pos:position pos:line="80" pos:column="28"/></literal></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
		<return pos:line="81" pos:column="17">return <expr><name pos:line="81" pos:column="24">offset<pos:position pos:line="81" pos:column="30"/></name></expr>;<pos:position pos:line="81" pos:column="31"/></return>
	}<pos:position pos:line="82" pos:column="10"/></block></for>
	<return pos:line="83" pos:column="9">return <expr><operator pos:line="83" pos:column="16">-<pos:position pos:line="83" pos:column="17"/></operator><literal type="number" pos:line="83" pos:column="17">1<pos:position pos:line="83" pos:column="18"/></literal></expr>;<pos:position pos:line="83" pos:column="19"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

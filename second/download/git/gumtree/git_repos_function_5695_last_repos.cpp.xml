<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5695_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_format_config<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">var<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">value<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">void<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">cb<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">var<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="26">"format.headers"<pos:position pos:line="3" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44"> <block pos:line="3" pos:column="45">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">value<pos:position pos:line="4" pos:column="27"/></name></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="25">die<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><call><name pos:line="5" pos:column="29">_<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><literal type="string" pos:line="5" pos:column="31">"format.headers without value"<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">add_header<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">value<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strcmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">var<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"format.suffix"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">git_config_string<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="43">fmt_patch_suffix<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">var<pos:position pos:line="10" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="66">value<pos:position pos:line="10" pos:column="71"/></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></return></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">strcmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">var<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="26">"format.to"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">value<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><call><name pos:line="13" pos:column="32">config_error_nonbool<pos:position pos:line="13" pos:column="52"/></name><argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">var<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">string_list_append<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="37">extra_to<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">value<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">strcmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">var<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="26">"format.cc"<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">value<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><call><name pos:line="19" pos:column="32">config_error_nonbool<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">var<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">string_list_append<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">extra_cc<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">value<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">strcmp<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">var<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="26">"diff.color"<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call> <operator pos:line="23" pos:column="40">||<pos:position pos:line="23" pos:column="42"/></operator> <operator pos:line="23" pos:column="43">!<pos:position pos:line="23" pos:column="44"/></operator><call><name pos:line="23" pos:column="44">strcmp<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name pos:line="23" pos:column="51">var<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="56">"color.diff"<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call> <operator pos:line="23" pos:column="70">||<pos:position pos:line="23" pos:column="72"/></operator>
	    <operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">strcmp<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">var<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="26">"color.ui"<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call> <operator pos:line="24" pos:column="38">||<pos:position pos:line="24" pos:column="40"/></operator> <operator pos:line="24" pos:column="41">!<pos:position pos:line="24" pos:column="42"/></operator><call><name pos:line="24" pos:column="42">strcmp<pos:position pos:line="24" pos:column="48"/></name><argument_list pos:line="24" pos:column="48">(<argument><expr><name pos:line="24" pos:column="49">var<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="54">"diff.submodule"<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="72"/></condition><then pos:line="24" pos:column="72"> <block pos:line="24" pos:column="73">{
		<return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">strcmp<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">var<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="26">"format.numbered"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">value<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">&amp;&amp;<pos:position pos:line="28" pos:column="37"/></operator> <operator pos:line="28" pos:column="30">!<pos:position pos:line="28" pos:column="31"/></operator><call><name pos:line="28" pos:column="31">strcasecmp<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">value<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="49">"auto"<pos:position pos:line="28" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57"> <block pos:line="28" pos:column="58">{
			<expr_stmt><expr><name pos:line="29" pos:column="25">auto_number<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="number" pos:line="29" pos:column="39">1<pos:position pos:line="29" pos:column="40"/></literal></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
			<return pos:line="30" pos:column="25">return <expr><literal type="number" pos:line="30" pos:column="32">0<pos:position pos:line="30" pos:column="33"/></literal></expr>;<pos:position pos:line="30" pos:column="34"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">numbered<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <call><name pos:line="32" pos:column="28">git_config_bool<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">var<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">value<pos:position pos:line="32" pos:column="54"/></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">auto_number<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">auto_number<pos:position pos:line="33" pos:column="42"/></name> <operator pos:line="33" pos:column="43">&amp;&amp;<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="46">numbered<pos:position pos:line="33" pos:column="54"/></name></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
		<return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">strcmp<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">var<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="26">"format.attach"<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="43"/></condition><then pos:line="36" pos:column="43"> <block pos:line="36" pos:column="44">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">value<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">&amp;&amp;<pos:position pos:line="37" pos:column="37"/></operator> <operator pos:line="37" pos:column="30">*<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">value<pos:position pos:line="37" pos:column="36"/></name></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">default_attach<pos:position pos:line="38" pos:column="39"/></name> <operator pos:line="38" pos:column="40">=<pos:position pos:line="38" pos:column="41"/></operator> <call><name pos:line="38" pos:column="42">xstrdup<pos:position pos:line="38" pos:column="49"/></name><argument_list pos:line="38" pos:column="49">(<argument><expr><name pos:line="38" pos:column="50">value<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt></block></then>
		<else pos:line="39" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">default_attach<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">=<pos:position pos:line="40" pos:column="41"/></operator> <call><name pos:line="40" pos:column="42">xstrdup<pos:position pos:line="40" pos:column="49"/></name><argument_list pos:line="40" pos:column="49">(<argument><expr><name pos:line="40" pos:column="50">git_version_string<pos:position pos:line="40" pos:column="68"/></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt></block></else></if>
		<return pos:line="41" pos:column="17">return <expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><call><name pos:line="43" pos:column="14">strcmp<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">var<pos:position pos:line="43" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="26">"format.thread"<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43"> <block pos:line="43" pos:column="44">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">value<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&amp;&amp;<pos:position pos:line="44" pos:column="37"/></operator> <operator pos:line="44" pos:column="30">!<pos:position pos:line="44" pos:column="31"/></operator><call><name pos:line="44" pos:column="31">strcasecmp<pos:position pos:line="44" pos:column="41"/></name><argument_list pos:line="44" pos:column="41">(<argument><expr><name pos:line="44" pos:column="42">value<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="49">"deep"<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <block pos:line="44" pos:column="58">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">thread<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">=<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">THREAD_DEEP<pos:position pos:line="45" pos:column="45"/></name></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt>
			<return pos:line="46" pos:column="25">return <expr><literal type="number" pos:line="46" pos:column="32">0<pos:position pos:line="46" pos:column="33"/></literal></expr>;<pos:position pos:line="46" pos:column="34"/></return>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">value<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">&amp;&amp;<pos:position pos:line="48" pos:column="37"/></operator> <operator pos:line="48" pos:column="30">!<pos:position pos:line="48" pos:column="31"/></operator><call><name pos:line="48" pos:column="31">strcasecmp<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">(<argument><expr><name pos:line="48" pos:column="42">value<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="49">"shallow"<pos:position pos:line="48" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60"> <block pos:line="48" pos:column="61">{
			<expr_stmt><expr><name pos:line="49" pos:column="25">thread<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <name pos:line="49" pos:column="34">THREAD_SHALLOW<pos:position pos:line="49" pos:column="48"/></name></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
			<return pos:line="50" pos:column="25">return <expr><literal type="number" pos:line="50" pos:column="32">0<pos:position pos:line="50" pos:column="33"/></literal></expr>;<pos:position pos:line="50" pos:column="34"/></return>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="52" pos:column="17">thread<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">=<pos:position pos:line="52" pos:column="25"/></operator> <call><name pos:line="52" pos:column="26">git_config_bool<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">var<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">value<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call> <operator pos:line="52" pos:column="54">&amp;&amp;<pos:position pos:line="52" pos:column="64"/></operator> <name pos:line="52" pos:column="57">THREAD_SHALLOW<pos:position pos:line="52" pos:column="71"/></name></expr>;<pos:position pos:line="52" pos:column="72"/></expr_stmt>
		<return pos:line="53" pos:column="17">return <expr><literal type="number" pos:line="53" pos:column="24">0<pos:position pos:line="53" pos:column="25"/></literal></expr>;<pos:position pos:line="53" pos:column="26"/></return>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><call><name pos:line="55" pos:column="14">strcmp<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">var<pos:position pos:line="55" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="26">"format.signoff"<pos:position pos:line="55" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="44"/></condition><then pos:line="55" pos:column="44"> <block pos:line="55" pos:column="45">{
		<expr_stmt><expr><name pos:line="56" pos:column="17">do_signoff<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <call><name pos:line="56" pos:column="30">git_config_bool<pos:position pos:line="56" pos:column="45"/></name><argument_list pos:line="56" pos:column="45">(<argument><expr><name pos:line="56" pos:column="46">var<pos:position pos:line="56" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="51">value<pos:position pos:line="56" pos:column="56"/></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="58"/></expr_stmt>
		<return pos:line="57" pos:column="17">return <expr><literal type="number" pos:line="57" pos:column="24">0<pos:position pos:line="57" pos:column="25"/></literal></expr>;<pos:position pos:line="57" pos:column="26"/></return>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><call><name pos:line="59" pos:column="14">strcmp<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">var<pos:position pos:line="59" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="26">"format.signature"<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="46"/></condition><then pos:line="59" pos:column="46">
		<block type="pseudo"><return pos:line="60" pos:column="17">return <expr><call><name pos:line="60" pos:column="24">git_config_string<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><operator pos:line="60" pos:column="42">&amp;<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="43">signature<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="54">var<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="59">value<pos:position pos:line="60" pos:column="64"/></name></expr></argument>)<pos:position pos:line="60" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="66"/></return></block></then></if>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><call><name pos:line="61" pos:column="14">strcmp<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">var<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="26">"format.signaturefile"<pos:position pos:line="61" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="50"/></condition><then pos:line="61" pos:column="50">
		<block type="pseudo"><return pos:line="62" pos:column="17">return <expr><call><name pos:line="62" pos:column="24">git_config_pathname<pos:position pos:line="62" pos:column="43"/></name><argument_list pos:line="62" pos:column="43">(<argument><expr><operator pos:line="62" pos:column="44">&amp;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="45">signature_file<pos:position pos:line="62" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="61">var<pos:position pos:line="62" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="66">value<pos:position pos:line="62" pos:column="71"/></name></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="73"/></return></block></then></if>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><call><name pos:line="63" pos:column="14">strcmp<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">var<pos:position pos:line="63" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="26">"format.coverletter"<pos:position pos:line="63" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="48"/></condition><then pos:line="63" pos:column="48"> <block pos:line="63" pos:column="49">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">value<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">&amp;&amp;<pos:position pos:line="64" pos:column="37"/></operator> <operator pos:line="64" pos:column="30">!<pos:position pos:line="64" pos:column="31"/></operator><call><name pos:line="64" pos:column="31">strcasecmp<pos:position pos:line="64" pos:column="41"/></name><argument_list pos:line="64" pos:column="41">(<argument><expr><name pos:line="64" pos:column="42">value<pos:position pos:line="64" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="49">"auto"<pos:position pos:line="64" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="57"/></condition><then pos:line="64" pos:column="57"> <block pos:line="64" pos:column="58">{
			<expr_stmt><expr><name pos:line="65" pos:column="25">config_cover_letter<pos:position pos:line="65" pos:column="44"/></name> <operator pos:line="65" pos:column="45">=<pos:position pos:line="65" pos:column="46"/></operator> <name pos:line="65" pos:column="47">COVER_AUTO<pos:position pos:line="65" pos:column="57"/></name></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>
			<return pos:line="66" pos:column="25">return <expr><literal type="number" pos:line="66" pos:column="32">0<pos:position pos:line="66" pos:column="33"/></literal></expr>;<pos:position pos:line="66" pos:column="34"/></return>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="68" pos:column="17">config_cover_letter<pos:position pos:line="68" pos:column="36"/></name> <operator pos:line="68" pos:column="37">=<pos:position pos:line="68" pos:column="38"/></operator> <ternary><condition><expr><call><name pos:line="68" pos:column="39">git_config_bool<pos:position pos:line="68" pos:column="54"/></name><argument_list pos:line="68" pos:column="54">(<argument><expr><name pos:line="68" pos:column="55">var<pos:position pos:line="68" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="60">value<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr> ?<pos:position pos:line="68" pos:column="68"/></condition><then pos:line="68" pos:column="68"> <expr><name pos:line="68" pos:column="69">COVER_ON<pos:position pos:line="68" pos:column="77"/></name></expr> <pos:position pos:line="68" pos:column="78"/></then><else pos:line="68" pos:column="78">: <expr><name pos:line="68" pos:column="80">COVER_OFF<pos:position pos:line="68" pos:column="89"/></name></expr></else></ternary></expr>;<pos:position pos:line="68" pos:column="90"/></expr_stmt>
		<return pos:line="69" pos:column="17">return <expr><literal type="number" pos:line="69" pos:column="24">0<pos:position pos:line="69" pos:column="25"/></literal></expr>;<pos:position pos:line="69" pos:column="26"/></return>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">!<pos:position pos:line="71" pos:column="14"/></operator><call><name pos:line="71" pos:column="14">strcmp<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">var<pos:position pos:line="71" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="26">"format.outputdirectory"<pos:position pos:line="71" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="52"/></condition><then pos:line="71" pos:column="52">
		<block type="pseudo"><return pos:line="72" pos:column="17">return <expr><call><name pos:line="72" pos:column="24">git_config_string<pos:position pos:line="72" pos:column="41"/></name><argument_list pos:line="72" pos:column="41">(<argument><expr><operator pos:line="72" pos:column="42">&amp;<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="43">config_output_directory<pos:position pos:line="72" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="68">var<pos:position pos:line="72" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="73">value<pos:position pos:line="72" pos:column="78"/></name></expr></argument>)<pos:position pos:line="72" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="80"/></return></block></then></if>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><operator pos:line="73" pos:column="13">!<pos:position pos:line="73" pos:column="14"/></operator><call><name pos:line="73" pos:column="14">strcmp<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">var<pos:position pos:line="73" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="26">"format.useautobase"<pos:position pos:line="73" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="48"/></condition><then pos:line="73" pos:column="48"> <block pos:line="73" pos:column="49">{
		<expr_stmt><expr><name pos:line="74" pos:column="17">base_auto<pos:position pos:line="74" pos:column="26"/></name> <operator pos:line="74" pos:column="27">=<pos:position pos:line="74" pos:column="28"/></operator> <call><name pos:line="74" pos:column="29">git_config_bool<pos:position pos:line="74" pos:column="44"/></name><argument_list pos:line="74" pos:column="44">(<argument><expr><name pos:line="74" pos:column="45">var<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">value<pos:position pos:line="74" pos:column="55"/></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt>
		<return pos:line="75" pos:column="17">return <expr><literal type="number" pos:line="75" pos:column="24">0<pos:position pos:line="75" pos:column="25"/></literal></expr>;<pos:position pos:line="75" pos:column="26"/></return>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><call><name pos:line="77" pos:column="14">strcmp<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">var<pos:position pos:line="77" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="26">"format.from"<pos:position pos:line="77" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41"> <block pos:line="77" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="78" pos:column="17">int<pos:position pos:line="78" pos:column="20"/></name></type> <name pos:line="78" pos:column="21">b<pos:position pos:line="78" pos:column="22"/></name> <init pos:line="78" pos:column="23">= <expr><call><name pos:line="78" pos:column="25">git_config_maybe_bool<pos:position pos:line="78" pos:column="46"/></name><argument_list pos:line="78" pos:column="46">(<argument><expr><name pos:line="78" pos:column="47">var<pos:position pos:line="78" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="52">value<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="78" pos:column="59"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">free<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><name pos:line="79" pos:column="22">from<pos:position pos:line="79" pos:column="26"/></name></expr></argument>)<pos:position pos:line="79" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="28"/></expr_stmt>
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">b<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">&lt;<pos:position pos:line="80" pos:column="27"/></operator> <literal type="number" pos:line="80" pos:column="25">0<pos:position pos:line="80" pos:column="26"/></literal></expr>)<pos:position pos:line="80" pos:column="27"/></condition><then pos:line="80" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="25">from<pos:position pos:line="81" pos:column="29"/></name> <operator pos:line="81" pos:column="30">=<pos:position pos:line="81" pos:column="31"/></operator> <call><name pos:line="81" pos:column="32">xstrdup<pos:position pos:line="81" pos:column="39"/></name><argument_list pos:line="81" pos:column="39">(<argument><expr><name pos:line="81" pos:column="40">value<pos:position pos:line="81" pos:column="45"/></name></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt></block></then>
		<elseif pos:line="82" pos:column="17">else <if pos:line="82" pos:column="22">if <condition pos:line="82" pos:column="25">(<expr><name pos:line="82" pos:column="26">b<pos:position pos:line="82" pos:column="27"/></name></expr>)<pos:position pos:line="82" pos:column="28"/></condition><then pos:line="82" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="25">from<pos:position pos:line="83" pos:column="29"/></name> <operator pos:line="83" pos:column="30">=<pos:position pos:line="83" pos:column="31"/></operator> <call><name pos:line="83" pos:column="32">xstrdup<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><call><name pos:line="83" pos:column="40">git_committer_info<pos:position pos:line="83" pos:column="58"/></name><argument_list pos:line="83" pos:column="58">(<argument><expr><name pos:line="83" pos:column="59">IDENT_NO_DATE<pos:position pos:line="83" pos:column="72"/></name></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="75"/></expr_stmt></block></then></if></elseif>
		<else pos:line="84" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="25">from<pos:position pos:line="85" pos:column="29"/></name> <operator pos:line="85" pos:column="30">=<pos:position pos:line="85" pos:column="31"/></operator> <name pos:line="85" pos:column="32">NULL<pos:position pos:line="85" pos:column="36"/></name></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt></block></else></if>
		<return pos:line="86" pos:column="17">return <expr><literal type="number" pos:line="86" pos:column="24">0<pos:position pos:line="86" pos:column="25"/></literal></expr>;<pos:position pos:line="86" pos:column="26"/></return>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if>

	<return pos:line="89" pos:column="9">return <expr><call><name pos:line="89" pos:column="16">git_log_config<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><name pos:line="89" pos:column="31">var<pos:position pos:line="89" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="36">value<pos:position pos:line="89" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="43">cb<pos:position pos:line="89" pos:column="45"/></name></expr></argument>)<pos:position pos:line="89" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="47"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

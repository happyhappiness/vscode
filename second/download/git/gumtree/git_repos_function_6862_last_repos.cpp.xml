<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6862_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_check_top_chunk<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">mstate<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">m<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">mchunkptr<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <block pos:line="1" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">msegmentptr<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">sp<pos:position pos:line="2" pos:column="17"/></name> <init pos:line="2" pos:column="18">= <expr><call><name pos:line="2" pos:column="20">segment_holding<pos:position pos:line="2" pos:column="35"/></name><argument_list pos:line="2" pos:column="35">(<argument><expr><name pos:line="2" pos:column="36">m<pos:position pos:line="2" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="2" pos:column="39">(<pos:position pos:line="2" pos:column="40"/></operator><name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name><operator pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></operator><operator pos:line="2" pos:column="45">)<pos:position pos:line="2" pos:column="46"/></operator><name pos:line="2" pos:column="46">p<pos:position pos:line="2" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type>  <name pos:line="3" pos:column="11">sz<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name><name pos:line="3" pos:column="16">p<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">head<pos:position pos:line="3" pos:column="23"/></name></name> <operator pos:line="3" pos:column="24">&amp;<pos:position pos:line="3" pos:column="29"/></operator> <operator pos:line="3" pos:column="26">~<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">INUSE_BITS<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt> <comment type="block" pos:line="3" pos:column="39">/* third-lowest bit can be set! */</comment>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">assert<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">sp<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">!=<pos:position pos:line="4" pos:column="15"/></operator> <literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><call><name pos:line="5" pos:column="11">is_aligned<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><call><name pos:line="5" pos:column="22">chunk2mem<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><name pos:line="5" pos:column="32">p<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="37">||<pos:position pos:line="5" pos:column="39"/></operator> <operator pos:line="5" pos:column="40">(<pos:position pos:line="5" pos:column="41"/></operator><name><name pos:line="5" pos:column="41">p<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">head<pos:position pos:line="5" pos:column="48"/></name></name> <operator pos:line="5" pos:column="49">==<pos:position pos:line="5" pos:column="51"/></operator> <name pos:line="5" pos:column="52">FENCEPOST_HEAD<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">)<pos:position pos:line="5" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><call><name pos:line="6" pos:column="10">ok_address<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">m<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">p<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">sz<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">==<pos:position pos:line="7" pos:column="15"/></operator> <name><name pos:line="7" pos:column="16">m<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">topsize<pos:position pos:line="7" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">sz<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&gt;<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">sz<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">==<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name><name pos:line="9" pos:column="18">sp<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">base<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">+<pos:position pos:line="9" pos:column="28"/></operator> <name><name pos:line="9" pos:column="29">sp<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">size<pos:position pos:line="9" pos:column="37"/></name></name><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">-<pos:position pos:line="9" pos:column="40"/></operator> <operator pos:line="9" pos:column="41">(<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">char<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">*<pos:position pos:line="9" pos:column="47"/></operator><operator pos:line="9" pos:column="47">)<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">p<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator> <operator pos:line="9" pos:column="51">-<pos:position pos:line="9" pos:column="52"/></operator> <name pos:line="9" pos:column="53">TOP_FOOT_SIZE<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">assert<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><call><name pos:line="10" pos:column="10">pinuse<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">p<pos:position pos:line="10" pos:column="18"/></name></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">assert<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><operator pos:line="11" pos:column="10">!<pos:position pos:line="11" pos:column="11"/></operator><call><name pos:line="11" pos:column="11">pinuse<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><call><name pos:line="11" pos:column="18">chunk_plus_offset<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">p<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">sz<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

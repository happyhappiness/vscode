<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_930_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_extra_header<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">strbuf<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buffer<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">commit_extra_header<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">extra<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">strbuf_addstr<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">buffer<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="31">extra<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">key<pos:position pos:line="4" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">extra<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">len<pos:position pos:line="5" pos:column="23"/></name></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">strbuf_add_lines<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">buffer<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="42">" "<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="47">extra<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">value<pos:position pos:line="6" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="61">extra<pos:position pos:line="6" pos:column="66"/></name><operator pos:line="6" pos:column="66">-&gt;<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="68">len<pos:position pos:line="6" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt></block></then>
	<else pos:line="7" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addch<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">buffer<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="38">'\n'<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1759.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">expire_reflog_ent<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">unsigned<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">osha1<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">unsigned<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">nsha1<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">email<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">unsigned<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">long<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">timestamp<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">tz<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">message<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="38">void<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">cb_data<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">expire_reflog_cb<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">cb<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><name pos:line="5" pos:column="39">cb_data<pos:position pos:line="5" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">old<pos:position pos:line="6" pos:column="27"/></name></decl>, <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier>new;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">timestamp<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <name><name pos:line="8" pos:column="25">cb<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">cmd<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">expire_total<pos:position pos:line="8" pos:column="46"/></name></name></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
		<block type="pseudo"><goto pos:line="9" pos:column="17">goto <name pos:line="9" pos:column="22">prune<pos:position pos:line="9" pos:column="27"/></name>;<pos:position pos:line="9" pos:column="28"/></goto></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">cb<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">cmd<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">rewrite<pos:position pos:line="11" pos:column="29"/></name></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">osha1<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name><name pos:line="12" pos:column="25">cb<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">last_kept_sha1<pos:position pos:line="12" pos:column="43"/></name></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">old<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">new<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">cb<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">cmd<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">stalefix<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">&amp;&amp;<pos:position pos:line="15" pos:column="41"/></operator>
	    <operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">!<pos:position pos:line="16" pos:column="15"/></operator><call><name pos:line="16" pos:column="15">keep_entry<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="27">old<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">osha1<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call> <operator pos:line="16" pos:column="39">||<pos:position pos:line="16" pos:column="41"/></operator> <operator pos:line="16" pos:column="42">!<pos:position pos:line="16" pos:column="43"/></operator><call><name pos:line="16" pos:column="43">keep_entry<pos:position pos:line="16" pos:column="53"/></name><argument_list pos:line="16" pos:column="53">(<argument><expr><operator pos:line="16" pos:column="54">&amp;<pos:position pos:line="16" pos:column="59"/></operator><operator pos:line="16" pos:column="55">new<pos:position pos:line="16" pos:column="58"/></operator></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">nsha1<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call><operator pos:line="16" pos:column="66">)<pos:position pos:line="16" pos:column="67"/></operator></expr>)<pos:position pos:line="16" pos:column="68"/></condition><then pos:line="16" pos:column="68">
		<block type="pseudo"><goto pos:line="17" pos:column="17">goto <name pos:line="17" pos:column="22">prune<pos:position pos:line="17" pos:column="27"/></name>;<pos:position pos:line="17" pos:column="28"/></goto></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">timestamp<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="25">cb<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">cmd<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">expire_unreachable<pos:position pos:line="19" pos:column="52"/></name></name></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53"> <block pos:line="19" pos:column="54">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">cb<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">unreachable_expire_kind<pos:position pos:line="20" pos:column="48"/></name></name> <operator pos:line="20" pos:column="49">==<pos:position pos:line="20" pos:column="51"/></operator> <name pos:line="20" pos:column="52">UE_ALWAYS<pos:position pos:line="20" pos:column="61"/></name></expr>)<pos:position pos:line="20" pos:column="62"/></condition><then pos:line="20" pos:column="62">
			<block type="pseudo"><goto pos:line="21" pos:column="25">goto <name pos:line="21" pos:column="30">prune<pos:position pos:line="21" pos:column="35"/></name>;<pos:position pos:line="21" pos:column="36"/></goto></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">unreachable<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">cb<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">old<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">osha1<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call> <operator pos:line="22" pos:column="49">||<pos:position pos:line="22" pos:column="51"/></operator> <call><name pos:line="22" pos:column="52">unreachable<pos:position pos:line="22" pos:column="63"/></name><argument_list pos:line="22" pos:column="63">(<argument><expr><name pos:line="22" pos:column="64">cb<pos:position pos:line="22" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="68">new<pos:position pos:line="22" pos:column="71"/></operator></expr></argument>, <argument><expr><name pos:line="22" pos:column="73">nsha1<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="80"/></condition><then pos:line="22" pos:column="80">
			<block type="pseudo"><goto pos:line="23" pos:column="25">goto <name pos:line="23" pos:column="30">prune<pos:position pos:line="23" pos:column="35"/></name>;<pos:position pos:line="23" pos:column="36"/></goto></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">cb<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">cmd<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">recno<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">&amp;&amp;<pos:position pos:line="26" pos:column="38"/></operator> <operator pos:line="26" pos:column="31">--<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">(<pos:position pos:line="26" pos:column="34"/></operator><name><name pos:line="26" pos:column="34">cb<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">cmd<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">recno<pos:position pos:line="26" pos:column="48"/></name></name><operator pos:line="26" pos:column="48">)<pos:position pos:line="26" pos:column="49"/></operator> <operator pos:line="26" pos:column="50">==<pos:position pos:line="26" pos:column="52"/></operator> <literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr>)<pos:position pos:line="26" pos:column="55"/></condition><then pos:line="26" pos:column="55">
		<block type="pseudo"><goto pos:line="27" pos:column="17">goto <name pos:line="27" pos:column="22">prune<pos:position pos:line="27" pos:column="27"/></name>;<pos:position pos:line="27" pos:column="28"/></goto></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">cb<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">newlog<pos:position pos:line="29" pos:column="23"/></name></name></expr>)<pos:position pos:line="29" pos:column="24"/></condition><then pos:line="29" pos:column="24"> <block pos:line="29" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">char<pos:position pos:line="30" pos:column="21"/></name></type> <name pos:line="30" pos:column="22">sign<pos:position pos:line="30" pos:column="26"/></name> <init pos:line="30" pos:column="27">= <expr><ternary><condition><expr><operator pos:line="30" pos:column="29">(<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">tz<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">&lt;<pos:position pos:line="30" pos:column="37"/></operator> <literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal><operator pos:line="30" pos:column="36">)<pos:position pos:line="30" pos:column="37"/></operator></expr> ?<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39"> <expr><literal type="char" pos:line="30" pos:column="40">'-'<pos:position pos:line="30" pos:column="43"/></literal></expr> <pos:position pos:line="30" pos:column="44"/></then><else pos:line="30" pos:column="44">: <expr><literal type="char" pos:line="30" pos:column="46">'+'<pos:position pos:line="30" pos:column="49"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="30" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name></type> <name pos:line="31" pos:column="21">zone<pos:position pos:line="31" pos:column="25"/></name> <init pos:line="31" pos:column="26">= <expr><ternary><condition><expr><operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">tz<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">&lt;<pos:position pos:line="31" pos:column="36"/></operator> <literal type="number" pos:line="31" pos:column="34">0<pos:position pos:line="31" pos:column="35"/></literal><operator pos:line="31" pos:column="35">)<pos:position pos:line="31" pos:column="36"/></operator></expr> ?<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38"> <expr><operator pos:line="31" pos:column="39">(<pos:position pos:line="31" pos:column="40"/></operator><operator pos:line="31" pos:column="40">-<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">tz<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">)<pos:position pos:line="31" pos:column="44"/></operator></expr> <pos:position pos:line="31" pos:column="45"/></then><else pos:line="31" pos:column="45">: <expr><name pos:line="31" pos:column="47">tz<pos:position pos:line="31" pos:column="49"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="31" pos:column="50"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">fprintf<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name><name pos:line="32" pos:column="25">cb<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">newlog<pos:position pos:line="32" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="37">"%s %s %s %lu %c%04d\t%s"<pos:position pos:line="32" pos:column="62"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="33" pos:column="25">sha1_to_hex<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">osha1<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="45">sha1_to_hex<pos:position pos:line="33" pos:column="56"/></name><argument_list pos:line="33" pos:column="56">(<argument><expr><name pos:line="33" pos:column="57">nsha1<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="34" pos:column="25">email<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">timestamp<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">sign<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">zone<pos:position pos:line="34" pos:column="53"/></name></expr></argument>,
			<argument><expr><name pos:line="35" pos:column="25">message<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">hashcpy<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name><name pos:line="36" pos:column="25">cb<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">last_kept_sha1<pos:position pos:line="36" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">nsha1<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">cb<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">cmd<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">verbose<pos:position pos:line="38" pos:column="29"/></name></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">printf<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><literal type="string" pos:line="39" pos:column="24">"keep %s"<pos:position pos:line="39" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">message<pos:position pos:line="39" pos:column="42"/></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt></block></then></if>
	<return pos:line="40" pos:column="9">return <expr><literal type="number" pos:line="40" pos:column="16">0<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></return>
 <label><name pos:line="41" pos:column="2">prune<pos:position pos:line="41" pos:column="7"/></name>:<pos:position pos:line="41" pos:column="8"/></label>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name><name pos:line="42" pos:column="14">cb<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">newlog<pos:position pos:line="42" pos:column="24"/></name></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">printf<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><literal type="string" pos:line="43" pos:column="24">"would prune %s"<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">message<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt></block></then>
	<elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><name><name pos:line="44" pos:column="18">cb<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">cmd<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">verbose<pos:position pos:line="44" pos:column="34"/></name></name></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">printf<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><literal type="string" pos:line="45" pos:column="24">"prune %s"<pos:position pos:line="45" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">message<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
	<return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

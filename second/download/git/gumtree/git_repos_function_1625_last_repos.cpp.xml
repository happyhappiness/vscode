<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1625_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">diff_fill_oid_info<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">diff_filespec<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">one<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">DIFF_FILE_VALID<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">one<pos:position pos:line="3" pos:column="32"/></name></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="34"/></condition><then pos:line="3" pos:column="34"> <block pos:line="3" pos:column="35">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><name><name pos:line="4" pos:column="22">one<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">oid_valid<pos:position pos:line="4" pos:column="36"/></name></name></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37"> <block pos:line="4" pos:column="38">{
			<decl_stmt><decl><type><name><name pos:line="5" pos:column="25">struct<pos:position pos:line="5" pos:column="31"/></name> <name pos:line="5" pos:column="32">stat<pos:position pos:line="5" pos:column="36"/></name></name></type> <name pos:line="5" pos:column="37">st<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
			<if pos:line="6" pos:column="25">if <condition pos:line="6" pos:column="28">(<expr><name><name pos:line="6" pos:column="29">one<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">is_stdin<pos:position pos:line="6" pos:column="42"/></name></name></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <block pos:line="6" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="7" pos:column="33">oidclr<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name><name pos:line="7" pos:column="41">one<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">oid<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
				<return pos:line="8" pos:column="33">return;<pos:position pos:line="8" pos:column="40"/></return>
			}<pos:position pos:line="9" pos:column="26"/></block></then></if>
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><call><name pos:line="10" pos:column="29">lstat<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name><name pos:line="10" pos:column="35">one<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">path<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="46">&amp;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="47">st<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call> <operator pos:line="10" pos:column="51">&lt;<pos:position pos:line="10" pos:column="55"/></operator> <literal type="number" pos:line="10" pos:column="53">0<pos:position pos:line="10" pos:column="54"/></literal></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="33">die_errno<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><literal type="string" pos:line="11" pos:column="43">"stat '%s'"<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="56">one<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">path<pos:position pos:line="11" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt></block></then></if>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">index_path<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name><name pos:line="12" pos:column="40">one<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">oid<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">.<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">hash<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="55">one<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">-&gt;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="60">path<pos:position pos:line="12" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="66">&amp;<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="67">st<pos:position pos:line="12" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="71">0<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="74"/></condition><then pos:line="12" pos:column="74">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="33">die<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><literal type="string" pos:line="13" pos:column="37">"cannot hash %s"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="55">one<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">path<pos:position pos:line="13" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
	}<pos:position pos:line="15" pos:column="10"/></block></then>
	<else pos:line="16" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">oidclr<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">&amp;<pos:position pos:line="17" pos:column="29"/></operator><name><name pos:line="17" pos:column="25">one<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">oid<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt></block></else></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

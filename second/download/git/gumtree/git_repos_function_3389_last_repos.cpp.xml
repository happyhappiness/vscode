<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3389_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">filter_refs<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">refname<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">object_id<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">oid<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">flags<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">void<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">data<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref_filter<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">filter<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><operator pos:line="4" pos:column="37">(<pos:position pos:line="4" pos:column="38"/></operator>struct <name pos:line="4" pos:column="45">ref_filter<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></operator><operator pos:line="4" pos:column="57">)<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">data<pos:position pos:line="4" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">wildmatch<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name><name pos:line="6" pos:column="23">filter<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">pattern<pos:position pos:line="6" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">refname<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="52"/></condition><then pos:line="6" pos:column="52">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>
	<return pos:line="8" pos:column="9">return <expr><call><name><name pos:line="8" pos:column="16">filter<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">fn<pos:position pos:line="8" pos:column="26"/></name></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">refname<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">oid<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">flags<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="48">filter<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">cb_data<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

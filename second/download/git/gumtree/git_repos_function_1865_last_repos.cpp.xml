<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1865_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">alloc_object_node<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">object<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">obj<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><call><name pos:line="3" pos:column="30">alloc_node<pos:position pos:line="3" pos:column="40"/></name><argument_list pos:line="3" pos:column="40">(<argument><expr><operator pos:line="3" pos:column="41">&amp;<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="42">object_state<pos:position pos:line="3" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="56">sizeof<argument_list pos:line="3" pos:column="62">(<argument><expr pos:line="3" pos:column="63">union <name pos:line="3" pos:column="69">any_object<pos:position pos:line="3" pos:column="79"/></name></expr></argument>)<pos:position pos:line="3" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="82"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="4" pos:column="9">obj<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">type<pos:position pos:line="4" pos:column="18"/></name></name> <operator pos:line="4" pos:column="19">=<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">OBJ_NONE<pos:position pos:line="4" pos:column="29"/></name></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>
	<return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">obj<pos:position pos:line="5" pos:column="19"/></name></expr>;<pos:position pos:line="5" pos:column="20"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

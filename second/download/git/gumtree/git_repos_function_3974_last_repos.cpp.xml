<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3974_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_ls_ref<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">remote_ls_ctx<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ls<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name><name pos:line="3" pos:column="21">ls<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">path<pos:position pos:line="3" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="31">ls<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">dentry_name<pos:position pos:line="3" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call> <operator pos:line="3" pos:column="48">&amp;&amp;<pos:position pos:line="3" pos:column="58"/></operator> <operator pos:line="3" pos:column="51">(<pos:position pos:line="3" pos:column="52"/></operator><name><name pos:line="3" pos:column="52">ls<pos:position pos:line="3" pos:column="54"/></name><operator pos:line="3" pos:column="54">-&gt;<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="56">dentry_flags<pos:position pos:line="3" pos:column="68"/></name></name> <operator pos:line="3" pos:column="69">&amp;<pos:position pos:line="3" pos:column="74"/></operator> <name pos:line="3" pos:column="71">IS_DIR<pos:position pos:line="3" pos:column="77"/></name><operator pos:line="3" pos:column="77">)<pos:position pos:line="3" pos:column="78"/></operator></expr>)<pos:position pos:line="3" pos:column="79"/></condition><then pos:line="3" pos:column="79"> <block pos:line="3" pos:column="80">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">fprintf<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">stderr<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="33">"  %s\n"<pos:position pos:line="4" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="43">ls<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">dentry_name<pos:position pos:line="4" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="60"/></expr_stmt>
		<return pos:line="5" pos:column="17">return;<pos:position pos:line="5" pos:column="24"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><name><name pos:line="8" pos:column="15">ls<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">dentry_flags<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="34">IS_DIR<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">one_remote_ref<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name><name pos:line="9" pos:column="32">ls<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">dentry_name<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

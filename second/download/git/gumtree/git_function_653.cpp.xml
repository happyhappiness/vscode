<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_653.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">sha1_file_name<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">unsigned<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">sha1<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name><index pos:line="3" pos:column="24">[<expr><name pos:line="3" pos:column="25">PATH_MAX<pos:position pos:line="3" pos:column="33"/></name></expr>]<pos:position pos:line="3" pos:column="34"/></index></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">objdir<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">objdir<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">get_object_directory<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">()<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">len<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">strlen<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">objdir<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* '/' + sha1(2) + '/' + sha1(38) + '\0' */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">len<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">+<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">43<pos:position pos:line="11" pos:column="21"/></literal> <operator pos:line="11" pos:column="22">&gt;<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="24">PATH_MAX<pos:position pos:line="11" pos:column="32"/></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"insanely long object directory %s"<pos:position pos:line="12" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="58">objdir<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">memcpy<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">buf<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="21">objdir<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">len<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">buf<pos:position pos:line="14" pos:column="12"/></name><index pos:line="14" pos:column="12">[<expr><name pos:line="14" pos:column="13">len<pos:position pos:line="14" pos:column="16"/></name></expr>]<pos:position pos:line="14" pos:column="17"/></index></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="char" pos:line="14" pos:column="20">'/'<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">buf<pos:position pos:line="15" pos:column="12"/></name><index pos:line="15" pos:column="12">[<expr><name pos:line="15" pos:column="13">len<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">+<pos:position pos:line="15" pos:column="17"/></operator><literal type="number" pos:line="15" pos:column="17">3<pos:position pos:line="15" pos:column="18"/></literal></expr>]<pos:position pos:line="15" pos:column="19"/></index></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="char" pos:line="15" pos:column="22">'/'<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">buf<pos:position pos:line="16" pos:column="12"/></name><index pos:line="16" pos:column="12">[<expr><name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">+<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">42<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <literal type="char" pos:line="16" pos:column="23">'\0'<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fill_sha1_path<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">buf<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">+<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">len<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">+<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">1<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">sha1<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">buf<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

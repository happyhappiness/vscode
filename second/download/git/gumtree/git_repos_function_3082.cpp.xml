<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3082.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">check_for_new_submodule_commits<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">unsigned<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name></type> <name><name pos:line="1" pos:column="52">new_sha1<pos:position pos:line="1" pos:column="60"/></name><index pos:line="1" pos:column="60">[<expr><literal type="number" pos:line="1" pos:column="61">20<pos:position pos:line="1" pos:column="63"/></literal></expr>]<pos:position pos:line="1" pos:column="64"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">initialized_fetch_ref_tips<pos:position pos:line="3" pos:column="40"/></name></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41"> <block pos:line="3" pos:column="42">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">for_each_ref<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">add_sha1_to_array<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="49">&amp;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="50">ref_tips_before_fetch<pos:position pos:line="4" pos:column="71"/></name></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name pos:line="5" pos:column="17">initialized_fetch_ref_tips<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">=<pos:position pos:line="5" pos:column="45"/></operator> <literal type="number" pos:line="5" pos:column="46">1<pos:position pos:line="5" pos:column="47"/></literal></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">sha1_array_append<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="28">ref_tips_after_fetch<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">new_sha1<pos:position pos:line="8" pos:column="58"/></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="60"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

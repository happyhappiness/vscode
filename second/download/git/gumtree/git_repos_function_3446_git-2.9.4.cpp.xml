<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3446_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">push_refs_with_push<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">transport<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">transport<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			       <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">ref<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">remote_refs<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">flags<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">force_all<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">flags<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">&amp;<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="33">TRANSPORT_PUSH_FORCE<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">mirror<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">flags<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&amp;<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="30">TRANSPORT_PUSH_MIRROR<pos:position pos:line="5" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">helper_data<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">data<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name><name pos:line="6" pos:column="36">transport<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">data<pos:position pos:line="6" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">STRBUF_INIT<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">ref<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">ref<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">string_list<pos:position pos:line="9" pos:column="27"/></name></name></type> <name pos:line="9" pos:column="28">cas_options<pos:position pos:line="9" pos:column="39"/></name> <init pos:line="9" pos:column="40">= <expr><name pos:line="9" pos:column="42">STRING_LIST_INIT_DUP<pos:position pos:line="9" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">string_list_item<pos:position pos:line="10" pos:column="32"/></name></name> <modifier pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></modifier></type><name pos:line="10" pos:column="34">cas_option<pos:position pos:line="10" pos:column="44"/></name></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">get_helper<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">transport<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">data<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">push<pos:position pos:line="13" pos:column="24"/></name></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">ref<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">remote_refs<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></init> <condition><expr><name pos:line="16" pos:column="33">ref<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></condition> <incr><expr><name pos:line="16" pos:column="38">ref<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">=<pos:position pos:line="16" pos:column="43"/></operator> <name><name pos:line="16" pos:column="44">ref<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">next<pos:position pos:line="16" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="54"/></control> <block pos:line="16" pos:column="55">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name><name pos:line="17" pos:column="22">ref<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">peer_ref<pos:position pos:line="17" pos:column="35"/></name></name> <operator pos:line="17" pos:column="36">&amp;&amp;<pos:position pos:line="17" pos:column="46"/></operator> <operator pos:line="17" pos:column="39">!<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">mirror<pos:position pos:line="17" pos:column="46"/></name></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="20" pos:column="17">/* Check for statuses set by set_ref_status_for_push() */</comment>
		<switch pos:line="21" pos:column="17">switch <condition pos:line="21" pos:column="24">(<expr><name><name pos:line="21" pos:column="25">ref<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">status<pos:position pos:line="21" pos:column="36"/></name></name></expr>)<pos:position pos:line="21" pos:column="37"/></condition> <block pos:line="21" pos:column="38">{
		<case pos:line="22" pos:column="17">case <expr><name pos:line="22" pos:column="22">REF_STATUS_REJECT_NONFASTFORWARD<pos:position pos:line="22" pos:column="54"/></name></expr>:<pos:position pos:line="22" pos:column="55"/></case>
		<case pos:line="23" pos:column="17">case <expr><name pos:line="23" pos:column="22">REF_STATUS_REJECT_STALE<pos:position pos:line="23" pos:column="45"/></name></expr>:<pos:position pos:line="23" pos:column="46"/></case>
		<case pos:line="24" pos:column="17">case <expr><name pos:line="24" pos:column="22">REF_STATUS_REJECT_ALREADY_EXISTS<pos:position pos:line="24" pos:column="54"/></name></expr>:<pos:position pos:line="24" pos:column="55"/></case>
		<case pos:line="25" pos:column="17">case <expr><name pos:line="25" pos:column="22">REF_STATUS_UPTODATE<pos:position pos:line="25" pos:column="41"/></name></expr>:<pos:position pos:line="25" pos:column="42"/></case>
			<continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue>
		<default pos:line="27" pos:column="17">default:<pos:position pos:line="27" pos:column="25"/></default>
			<empty_stmt pos:line="28" pos:column="25">;<pos:position pos:line="28" pos:column="26"/></empty_stmt> <comment type="block" pos:line="28" pos:column="27">/* do nothing */</comment>
		}<pos:position pos:line="29" pos:column="18"/></block></switch>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">force_all<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="25">ref<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">force<pos:position pos:line="32" pos:column="35"/></name></name> <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="38">1<pos:position pos:line="32" pos:column="39"/></literal></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_addstr<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><operator pos:line="34" pos:column="31">&amp;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="32">buf<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="37">"push "<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><name><name pos:line="35" pos:column="22">ref<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">deletion<pos:position pos:line="35" pos:column="35"/></name></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name><name pos:line="36" pos:column="29">ref<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">force<pos:position pos:line="36" pos:column="39"/></name></name></expr>)<pos:position pos:line="36" pos:column="40"/></condition><then pos:line="36" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="33">strbuf_addch<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><operator pos:line="37" pos:column="46">&amp;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="47">buf<pos:position pos:line="37" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="52">'+'<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt></block></then></if>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><name><name pos:line="38" pos:column="29">ref<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">peer_ref<pos:position pos:line="38" pos:column="42"/></name></name></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="33">strbuf_addstr<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">(<argument><expr><operator pos:line="39" pos:column="47">&amp;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="48">buf<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="53">ref<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">peer_ref<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">-&gt;<pos:position pos:line="39" pos:column="71"/></operator><name pos:line="39" pos:column="68">name<pos:position pos:line="39" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="74"/></expr_stmt></block></then>
			<else pos:line="40" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="33">strbuf_addstr<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">(<argument><expr><operator pos:line="41" pos:column="47">&amp;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="48">buf<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="53">oid_to_hex<pos:position pos:line="41" pos:column="63"/></name><argument_list pos:line="41" pos:column="63">(<argument><expr><operator pos:line="41" pos:column="64">&amp;<pos:position pos:line="41" pos:column="69"/></operator><name><name pos:line="41" pos:column="65">ref<pos:position pos:line="41" pos:column="68"/></name><operator pos:line="41" pos:column="68">-&gt;<pos:position pos:line="41" pos:column="73"/></operator><name pos:line="41" pos:column="70">new_oid<pos:position pos:line="41" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="80"/></expr_stmt></block></else></if>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">strbuf_addch<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><operator pos:line="43" pos:column="30">&amp;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="31">buf<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="43" pos:column="36">':'<pos:position pos:line="43" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">strbuf_addstr<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><operator pos:line="44" pos:column="31">&amp;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="32">buf<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="37">ref<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">name<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">strbuf_addch<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><operator pos:line="45" pos:column="30">&amp;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="31">buf<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="45" pos:column="36">'\n'<pos:position pos:line="45" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>

		<comment type="block" pos:line="47" pos:column="17">/*
		 * The "--force-with-lease" options without explicit
		 * values to expect have already been expanded into
		 * the ref-&gt;old_oid_expect[] field; we can ignore
		 * transport-&gt;smart_options-&gt;cas altogether and instead
		 * can enumerate them from the refs.
		 */</comment>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name><name pos:line="54" pos:column="21">ref<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">-&gt;<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="26">expect_old_sha1<pos:position pos:line="54" pos:column="41"/></name></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42"> <block pos:line="54" pos:column="43">{
			<decl_stmt><decl><type><name><name pos:line="55" pos:column="25">struct<pos:position pos:line="55" pos:column="31"/></name> <name pos:line="55" pos:column="32">strbuf<pos:position pos:line="55" pos:column="38"/></name></name></type> <name pos:line="55" pos:column="39">cas<pos:position pos:line="55" pos:column="42"/></name> <init pos:line="55" pos:column="43">= <expr><name pos:line="55" pos:column="45">STRBUF_INIT<pos:position pos:line="55" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="55" pos:column="57"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">strbuf_addf<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><operator pos:line="56" pos:column="37">&amp;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="38">cas<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="43">"%s:%s"<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="57" pos:column="37">ref<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">name<pos:position pos:line="57" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="48">oid_to_hex<pos:position pos:line="57" pos:column="58"/></name><argument_list pos:line="57" pos:column="58">(<argument><expr><operator pos:line="57" pos:column="59">&amp;<pos:position pos:line="57" pos:column="64"/></operator><name><name pos:line="57" pos:column="60">ref<pos:position pos:line="57" pos:column="63"/></name><operator pos:line="57" pos:column="63">-&gt;<pos:position pos:line="57" pos:column="68"/></operator><name pos:line="57" pos:column="65">old_oid_expect<pos:position pos:line="57" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">string_list_append<pos:position pos:line="58" pos:column="43"/></name><argument_list pos:line="58" pos:column="43">(<argument><expr><operator pos:line="58" pos:column="44">&amp;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="45">cas_options<pos:position pos:line="58" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="58">strbuf_detach<pos:position pos:line="58" pos:column="71"/></name><argument_list pos:line="58" pos:column="71">(<argument><expr><operator pos:line="58" pos:column="72">&amp;<pos:position pos:line="58" pos:column="77"/></operator><name pos:line="58" pos:column="73">cas<pos:position pos:line="58" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="78">NULL<pos:position pos:line="58" pos:column="82"/></name></expr></argument>)<pos:position pos:line="58" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>
	}<pos:position pos:line="60" pos:column="10"/></block></for>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">buf<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">.<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">len<pos:position pos:line="61" pos:column="20"/></name></name> <operator pos:line="61" pos:column="21">==<pos:position pos:line="61" pos:column="23"/></operator> <literal type="number" pos:line="61" pos:column="24">0<pos:position pos:line="61" pos:column="25"/></literal></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26"> <block pos:line="61" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">string_list_clear<pos:position pos:line="62" pos:column="34"/></name><argument_list pos:line="62" pos:column="34">(<argument><expr><operator pos:line="62" pos:column="35">&amp;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="36">cas_options<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="49">0<pos:position pos:line="62" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>
		<return pos:line="63" pos:column="17">return <expr><literal type="number" pos:line="63" pos:column="24">0<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></return>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

	<macro><name pos:line="66" pos:column="9">for_each_string_list_item<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument pos:line="66" pos:column="35">cas_option<pos:position pos:line="66" pos:column="45"/></argument>, <argument pos:line="66" pos:column="47">&amp;cas_options<pos:position pos:line="66" pos:column="59"/></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></macro>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">set_helper_option<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">transport<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="46">"cas"<pos:position pos:line="67" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="53">cas_option<pos:position pos:line="67" pos:column="63"/></name><operator pos:line="67" pos:column="63">-&gt;<pos:position pos:line="67" pos:column="68"/></operator><name pos:line="67" pos:column="65">string<pos:position pos:line="67" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">set_common_push_options<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">transport<pos:position pos:line="68" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="44">data<pos:position pos:line="68" pos:column="48"/></name><operator pos:line="68" pos:column="48">-&gt;<pos:position pos:line="68" pos:column="53"/></operator><name pos:line="68" pos:column="50">name<pos:position pos:line="68" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="56">flags<pos:position pos:line="68" pos:column="61"/></name></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="70" pos:column="9">strbuf_addch<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><operator pos:line="70" pos:column="22">&amp;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="23">buf<pos:position pos:line="70" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="28">'\n'<pos:position pos:line="70" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">sendline<pos:position pos:line="71" pos:column="17"/></name><argument_list pos:line="71" pos:column="17">(<argument><expr><name pos:line="71" pos:column="18">data<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="24">&amp;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="25">buf<pos:position pos:line="71" pos:column="28"/></name></expr></argument>)<pos:position pos:line="71" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">strbuf_release<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><operator pos:line="72" pos:column="24">&amp;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="25">buf<pos:position pos:line="72" pos:column="28"/></name></expr></argument>)<pos:position pos:line="72" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>

	<return pos:line="74" pos:column="9">return <expr><call><name pos:line="74" pos:column="16">push_update_refs_status<pos:position pos:line="74" pos:column="39"/></name><argument_list pos:line="74" pos:column="39">(<argument><expr><name pos:line="74" pos:column="40">data<pos:position pos:line="74" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="46">remote_refs<pos:position pos:line="74" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="59">flags<pos:position pos:line="74" pos:column="64"/></name></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="66"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

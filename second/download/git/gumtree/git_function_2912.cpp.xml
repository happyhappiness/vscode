<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2912.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_config_set_multivar_in_file_gently<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">config_filename<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">key<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <name pos:line="2" pos:column="67">char<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">value<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>,
					   <parameter><decl><type><specifier pos:line="3" pos:column="44">const<pos:position pos:line="3" pos:column="49"/></specifier> <name pos:line="3" pos:column="50">char<pos:position pos:line="3" pos:column="54"/></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">value_regex<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>,
					   <parameter><decl><type><name pos:line="4" pos:column="44">int<pos:position pos:line="4" pos:column="47"/></name></type> <name pos:line="4" pos:column="48">multi_replace<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="62"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">fd<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><operator pos:line="6" pos:column="18">-<pos:position pos:line="6" pos:column="19"/></operator><literal type="number" pos:line="6" pos:column="19">1<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">in_fd<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><operator pos:line="6" pos:column="30">-<pos:position pos:line="6" pos:column="31"/></operator><literal type="number" pos:line="6" pos:column="31">1<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">lock_file<pos:position pos:line="8" pos:column="25"/></name></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">lock<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name pos:line="8" pos:column="34">NULL<pos:position pos:line="8" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">filename_buf<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">contents<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">contents_sz<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* parse-key returns negative; flip the sign to feed exit(3) */</comment>
	<expr_stmt><expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal> <operator pos:line="14" pos:column="17">-<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">git_config_parse_key<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">key<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="45">&amp;<pos:position pos:line="14" pos:column="50"/></operator><name><name pos:line="14" pos:column="46">store<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">.<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="52">key<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="57">&amp;<pos:position pos:line="14" pos:column="62"/></operator><name><name pos:line="14" pos:column="58">store<pos:position pos:line="14" pos:column="63"/></name><operator pos:line="14" pos:column="63">.<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="64">baselen<pos:position pos:line="14" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">ret<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
		<block type="pseudo"><goto pos:line="16" pos:column="17">goto <name pos:line="16" pos:column="22">out_free<pos:position pos:line="16" pos:column="30"/></name>;<pos:position pos:line="16" pos:column="31"/></goto></block></then></if>

	<expr_stmt><expr><name><name pos:line="18" pos:column="9">store<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">multi_replace<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">multi_replace<pos:position pos:line="18" pos:column="44"/></name></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">config_filename<pos:position pos:line="20" pos:column="29"/></name></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">config_filename<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">filename_buf<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">=<pos:position pos:line="21" pos:column="49"/></operator> <call><name pos:line="21" pos:column="50">git_pathdup<pos:position pos:line="21" pos:column="61"/></name><argument_list pos:line="21" pos:column="61">(<argument><expr><literal type="string" pos:line="21" pos:column="62">"config"<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="23" pos:column="9">/*
	 * The lock serves a purpose in addition to locking: the new
	 * contents of .git/config will be written into it.
	 */</comment>
	<expr_stmt><expr><name pos:line="27" pos:column="9">lock<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">xcalloc<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="number" pos:line="27" pos:column="24">1<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="27">sizeof<argument_list pos:line="27" pos:column="33">(<argument><expr pos:line="27" pos:column="34">struct <name pos:line="27" pos:column="41">lock_file<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">fd<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">hold_lock_file_for_update<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name pos:line="28" pos:column="40">lock<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">config_filename<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="63">0<pos:position pos:line="28" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">fd<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">&lt;<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20"> <block pos:line="29" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">error<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><literal type="string" pos:line="30" pos:column="23">"could not lock config file %s: %s"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">config_filename<pos:position pos:line="30" pos:column="75"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="77">strerror<pos:position pos:line="30" pos:column="85"/></name><argument_list pos:line="30" pos:column="85">(<argument><expr><name pos:line="30" pos:column="86">errno<pos:position pos:line="30" pos:column="91"/></name></expr></argument>)<pos:position pos:line="30" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="94"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">free<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name><name pos:line="31" pos:column="22">store<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">key<pos:position pos:line="31" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">ret<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">CONFIG_NO_LOCK<pos:position pos:line="32" pos:column="37"/></name></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
		<goto pos:line="33" pos:column="17">goto <name pos:line="33" pos:column="22">out_free<pos:position pos:line="33" pos:column="30"/></name>;<pos:position pos:line="33" pos:column="31"/></goto>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="36" pos:column="9">/*
	 * If .git/config does not exist yet, write a minimal version.
	 */</comment>
	<expr_stmt><expr><name pos:line="39" pos:column="9">in_fd<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <call><name pos:line="39" pos:column="17">open<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">config_filename<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">O_RDONLY<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">( <expr><name pos:line="40" pos:column="14">in_fd<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">&lt;<pos:position pos:line="40" pos:column="24"/></operator> <literal type="number" pos:line="40" pos:column="22">0<pos:position pos:line="40" pos:column="23"/></literal></expr> )<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">free<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name><name pos:line="41" pos:column="22">store<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">.<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="28">key<pos:position pos:line="41" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">( <expr><name pos:line="43" pos:column="22">ENOENT<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">!=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">errno<pos:position pos:line="43" pos:column="37"/></name></expr> )<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39"> <block pos:line="43" pos:column="40">{
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">error<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><literal type="string" pos:line="44" pos:column="31">"opening %s: %s"<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">config_filename<pos:position pos:line="44" pos:column="64"/></name></expr></argument>,
			      <argument><expr><call><name pos:line="45" pos:column="31">strerror<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">errno<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="46" pos:column="25">ret<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">CONFIG_INVALID_FILE<pos:position pos:line="46" pos:column="50"/></name></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt> <comment type="block" pos:line="46" pos:column="52">/* same as "invalid config file" */</comment>
			<goto pos:line="47" pos:column="25">goto <name pos:line="47" pos:column="30">out_free<pos:position pos:line="47" pos:column="38"/></name>;<pos:position pos:line="47" pos:column="39"/></goto>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="49" pos:column="17">/* if nothing to unset, error out */</comment>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">value<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">==<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">NULL<pos:position pos:line="50" pos:column="34"/></name></expr>)<pos:position pos:line="50" pos:column="35"/></condition><then pos:line="50" pos:column="35"> <block pos:line="50" pos:column="36">{
			<expr_stmt><expr><name pos:line="51" pos:column="25">ret<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">CONFIG_NOTHING_SET<pos:position pos:line="51" pos:column="49"/></name></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
			<goto pos:line="52" pos:column="25">goto <name pos:line="52" pos:column="30">out_free<pos:position pos:line="52" pos:column="38"/></name>;<pos:position pos:line="52" pos:column="39"/></goto>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="55" pos:column="17">store<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">.<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">key<pos:position pos:line="55" pos:column="26"/></name></name> <operator pos:line="55" pos:column="27">=<pos:position pos:line="55" pos:column="28"/></operator> <operator pos:line="55" pos:column="29">(<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">char<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">*<pos:position pos:line="55" pos:column="36"/></operator><operator pos:line="55" pos:column="36">)<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="37">key<pos:position pos:line="55" pos:column="40"/></name></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">!<pos:position pos:line="56" pos:column="22"/></operator><call><name pos:line="56" pos:column="22">store_write_section<pos:position pos:line="56" pos:column="41"/></name><argument_list pos:line="56" pos:column="41">(<argument><expr><name pos:line="56" pos:column="42">fd<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">key<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call> <operator pos:line="56" pos:column="51">||<pos:position pos:line="56" pos:column="53"/></operator>
		    <operator pos:line="57" pos:column="21">!<pos:position pos:line="57" pos:column="22"/></operator><call><name pos:line="57" pos:column="22">store_write_pair<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">fd<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="43">key<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="48">value<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="55"/></condition><then pos:line="57" pos:column="55">
			<block type="pseudo"><goto pos:line="58" pos:column="25">goto <name pos:line="58" pos:column="30">write_err_out<pos:position pos:line="58" pos:column="43"/></name>;<pos:position pos:line="58" pos:column="44"/></goto></block></then></if>
	}<pos:position pos:line="59" pos:column="10"/></block></then> <else pos:line="59" pos:column="11">else <block pos:line="59" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="60" pos:column="17">struct<pos:position pos:line="60" pos:column="23"/></name> <name pos:line="60" pos:column="24">stat<pos:position pos:line="60" pos:column="28"/></name></name></type> <name pos:line="60" pos:column="29">st<pos:position pos:line="60" pos:column="31"/></name></decl>;<pos:position pos:line="60" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="61" pos:column="17">size_t<pos:position pos:line="61" pos:column="23"/></name></type> <name pos:line="61" pos:column="24">copy_begin<pos:position pos:line="61" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="61" pos:column="36">copy_end<pos:position pos:line="61" pos:column="44"/></name></decl>;<pos:position pos:line="61" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">int<pos:position pos:line="62" pos:column="20"/></name></type> <name pos:line="62" pos:column="21">i<pos:position pos:line="62" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="62" pos:column="24">new_line<pos:position pos:line="62" pos:column="32"/></name> <init pos:line="62" pos:column="33">= <expr><literal type="number" pos:line="62" pos:column="35">0<pos:position pos:line="62" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="37"/></decl_stmt>

		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">value_regex<pos:position pos:line="64" pos:column="32"/></name> <operator pos:line="64" pos:column="33">==<pos:position pos:line="64" pos:column="35"/></operator> <name pos:line="64" pos:column="36">NULL<pos:position pos:line="64" pos:column="40"/></name></expr>)<pos:position pos:line="64" pos:column="41"/></condition><then pos:line="64" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="25">store<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">.<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">value_regex<pos:position pos:line="65" pos:column="42"/></name></name> <operator pos:line="65" pos:column="43">=<pos:position pos:line="65" pos:column="44"/></operator> <name pos:line="65" pos:column="45">NULL<pos:position pos:line="65" pos:column="49"/></name></expr>;<pos:position pos:line="65" pos:column="50"/></expr_stmt></block></then>
		<elseif pos:line="66" pos:column="17">else <if pos:line="66" pos:column="22">if <condition pos:line="66" pos:column="25">(<expr><name pos:line="66" pos:column="26">value_regex<pos:position pos:line="66" pos:column="37"/></name> <operator pos:line="66" pos:column="38">==<pos:position pos:line="66" pos:column="40"/></operator> <name pos:line="66" pos:column="41">CONFIG_REGEX_NONE<pos:position pos:line="66" pos:column="58"/></name></expr>)<pos:position pos:line="66" pos:column="59"/></condition><then pos:line="66" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="25">store<pos:position pos:line="67" pos:column="30"/></name><operator pos:line="67" pos:column="30">.<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="31">value_regex<pos:position pos:line="67" pos:column="42"/></name></name> <operator pos:line="67" pos:column="43">=<pos:position pos:line="67" pos:column="44"/></operator> <name pos:line="67" pos:column="45">CONFIG_REGEX_NONE<pos:position pos:line="67" pos:column="62"/></name></expr>;<pos:position pos:line="67" pos:column="63"/></expr_stmt></block></then></if></elseif>
		<else pos:line="68" pos:column="17">else <block pos:line="68" pos:column="22">{
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><name><name pos:line="69" pos:column="29">value_regex<pos:position pos:line="69" pos:column="40"/></name><index pos:line="69" pos:column="40">[<expr><literal type="number" pos:line="69" pos:column="41">0<pos:position pos:line="69" pos:column="42"/></literal></expr>]<pos:position pos:line="69" pos:column="43"/></index></name> <operator pos:line="69" pos:column="44">==<pos:position pos:line="69" pos:column="46"/></operator> <literal type="char" pos:line="69" pos:column="47">'!'<pos:position pos:line="69" pos:column="50"/></literal></expr>)<pos:position pos:line="69" pos:column="51"/></condition><then pos:line="69" pos:column="51"> <block pos:line="69" pos:column="52">{
				<expr_stmt><expr><name><name pos:line="70" pos:column="33">store<pos:position pos:line="70" pos:column="38"/></name><operator pos:line="70" pos:column="38">.<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="39">do_not_match<pos:position pos:line="70" pos:column="51"/></name></name> <operator pos:line="70" pos:column="52">=<pos:position pos:line="70" pos:column="53"/></operator> <literal type="number" pos:line="70" pos:column="54">1<pos:position pos:line="70" pos:column="55"/></literal></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="71" pos:column="33">value_regex<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">++<pos:position pos:line="71" pos:column="46"/></operator></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="72" pos:column="26"/></block></then> <else pos:line="72" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="33">store<pos:position pos:line="73" pos:column="38"/></name><operator pos:line="73" pos:column="38">.<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="39">do_not_match<pos:position pos:line="73" pos:column="51"/></name></name> <operator pos:line="73" pos:column="52">=<pos:position pos:line="73" pos:column="53"/></operator> <literal type="number" pos:line="73" pos:column="54">0<pos:position pos:line="73" pos:column="55"/></literal></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt></block></else></if>

			<expr_stmt><expr><name><name pos:line="75" pos:column="25">store<pos:position pos:line="75" pos:column="30"/></name><operator pos:line="75" pos:column="30">.<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="31">value_regex<pos:position pos:line="75" pos:column="42"/></name></name> <operator pos:line="75" pos:column="43">=<pos:position pos:line="75" pos:column="44"/></operator> <operator pos:line="75" pos:column="45">(<pos:position pos:line="75" pos:column="46"/></operator><name pos:line="75" pos:column="46">regex_t<pos:position pos:line="75" pos:column="53"/></name><operator pos:line="75" pos:column="53">*<pos:position pos:line="75" pos:column="54"/></operator><operator pos:line="75" pos:column="54">)<pos:position pos:line="75" pos:column="55"/></operator><call><name pos:line="75" pos:column="55">xmalloc<pos:position pos:line="75" pos:column="62"/></name><argument_list pos:line="75" pos:column="62">(<argument><expr><sizeof pos:line="75" pos:column="63">sizeof<argument_list pos:line="75" pos:column="69">(<argument><expr><name pos:line="75" pos:column="70">regex_t<pos:position pos:line="75" pos:column="77"/></name></expr></argument>)<pos:position pos:line="75" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="80"/></expr_stmt>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><call><name pos:line="76" pos:column="29">regcomp<pos:position pos:line="76" pos:column="36"/></name><argument_list pos:line="76" pos:column="36">(<argument><expr><name><name pos:line="76" pos:column="37">store<pos:position pos:line="76" pos:column="42"/></name><operator pos:line="76" pos:column="42">.<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="43">value_regex<pos:position pos:line="76" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="56">value_regex<pos:position pos:line="76" pos:column="67"/></name></expr></argument>,
					<argument><expr><name pos:line="77" pos:column="41">REG_EXTENDED<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="55"/></condition><then pos:line="77" pos:column="55"> <block pos:line="77" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="78" pos:column="33">error<pos:position pos:line="78" pos:column="38"/></name><argument_list pos:line="78" pos:column="38">(<argument><expr><literal type="string" pos:line="78" pos:column="39">"invalid pattern: %s"<pos:position pos:line="78" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="62">value_regex<pos:position pos:line="78" pos:column="73"/></name></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="79" pos:column="33">free<pos:position pos:line="79" pos:column="37"/></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name><name pos:line="79" pos:column="38">store<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">.<pos:position pos:line="79" pos:column="44"/></operator><name pos:line="79" pos:column="44">value_regex<pos:position pos:line="79" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name pos:line="80" pos:column="33">ret<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <name pos:line="80" pos:column="39">CONFIG_INVALID_PATTERN<pos:position pos:line="80" pos:column="61"/></name></expr>;<pos:position pos:line="80" pos:column="62"/></expr_stmt>
				<goto pos:line="81" pos:column="33">goto <name pos:line="81" pos:column="38">out_free<pos:position pos:line="81" pos:column="46"/></name>;<pos:position pos:line="81" pos:column="47"/></goto>
			}<pos:position pos:line="82" pos:column="26"/></block></then></if>
		}<pos:position pos:line="83" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name pos:line="85" pos:column="17">ALLOC_GROW<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><name><name pos:line="85" pos:column="28">store<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">.<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="34">offset<pos:position pos:line="85" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="42">1<pos:position pos:line="85" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="45">store<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">.<pos:position pos:line="85" pos:column="51"/></operator><name pos:line="85" pos:column="51">offset_alloc<pos:position pos:line="85" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="86" pos:column="17">store<pos:position pos:line="86" pos:column="22"/></name><operator pos:line="86" pos:column="22">.<pos:position pos:line="86" pos:column="23"/></operator><name pos:line="86" pos:column="23">offset<pos:position pos:line="86" pos:column="29"/></name><index pos:line="86" pos:column="29">[<expr><literal type="number" pos:line="86" pos:column="30">0<pos:position pos:line="86" pos:column="31"/></literal></expr>]<pos:position pos:line="86" pos:column="32"/></index></name> <operator pos:line="86" pos:column="33">=<pos:position pos:line="86" pos:column="34"/></operator> <literal type="number" pos:line="86" pos:column="35">0<pos:position pos:line="86" pos:column="36"/></literal></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="87" pos:column="17">store<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">.<pos:position pos:line="87" pos:column="23"/></operator><name pos:line="87" pos:column="23">state<pos:position pos:line="87" pos:column="28"/></name></name> <operator pos:line="87" pos:column="29">=<pos:position pos:line="87" pos:column="30"/></operator> <name pos:line="87" pos:column="31">START<pos:position pos:line="87" pos:column="36"/></name></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="88" pos:column="17">store<pos:position pos:line="88" pos:column="22"/></name><operator pos:line="88" pos:column="22">.<pos:position pos:line="88" pos:column="23"/></operator><name pos:line="88" pos:column="23">seen<pos:position pos:line="88" pos:column="27"/></name></name> <operator pos:line="88" pos:column="28">=<pos:position pos:line="88" pos:column="29"/></operator> <literal type="number" pos:line="88" pos:column="30">0<pos:position pos:line="88" pos:column="31"/></literal></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>

		<comment type="block" pos:line="90" pos:column="17">/*
		 * After this, store.offset will contain the *end* offset
		 * of the last match, or remain at 0 if no match was found.
		 * As a side effect, we make sure to transform only a valid
		 * existing config file.
		 */</comment>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><call><name pos:line="96" pos:column="21">git_config_from_file<pos:position pos:line="96" pos:column="41"/></name><argument_list pos:line="96" pos:column="41">(<argument><expr><name pos:line="96" pos:column="42">store_aux<pos:position pos:line="96" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="53">config_filename<pos:position pos:line="96" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="70">NULL<pos:position pos:line="96" pos:column="74"/></name></expr></argument>)<pos:position pos:line="96" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="76"/></condition><then pos:line="96" pos:column="76"> <block pos:line="96" pos:column="77">{
			<expr_stmt><expr><call><name pos:line="97" pos:column="25">error<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><literal type="string" pos:line="97" pos:column="31">"invalid config file %s"<pos:position pos:line="97" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="57">config_filename<pos:position pos:line="97" pos:column="72"/></name></expr></argument>)<pos:position pos:line="97" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="98" pos:column="25">free<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">(<argument><expr><name><name pos:line="98" pos:column="30">store<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">.<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="36">key<pos:position pos:line="98" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt>
			<if pos:line="99" pos:column="25">if <condition pos:line="99" pos:column="28">(<expr><name><name pos:line="99" pos:column="29">store<pos:position pos:line="99" pos:column="34"/></name><operator pos:line="99" pos:column="34">.<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="35">value_regex<pos:position pos:line="99" pos:column="46"/></name></name> <operator pos:line="99" pos:column="47">!=<pos:position pos:line="99" pos:column="49"/></operator> <name pos:line="99" pos:column="50">NULL<pos:position pos:line="99" pos:column="54"/></name> <operator pos:line="99" pos:column="55">&amp;&amp;<pos:position pos:line="99" pos:column="65"/></operator>
			    <name><name pos:line="100" pos:column="29">store<pos:position pos:line="100" pos:column="34"/></name><operator pos:line="100" pos:column="34">.<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="35">value_regex<pos:position pos:line="100" pos:column="46"/></name></name> <operator pos:line="100" pos:column="47">!=<pos:position pos:line="100" pos:column="49"/></operator> <name pos:line="100" pos:column="50">CONFIG_REGEX_NONE<pos:position pos:line="100" pos:column="67"/></name></expr>)<pos:position pos:line="100" pos:column="68"/></condition><then pos:line="100" pos:column="68"> <block pos:line="100" pos:column="69">{
				<expr_stmt><expr><call><name pos:line="101" pos:column="33">regfree<pos:position pos:line="101" pos:column="40"/></name><argument_list pos:line="101" pos:column="40">(<argument><expr><name><name pos:line="101" pos:column="41">store<pos:position pos:line="101" pos:column="46"/></name><operator pos:line="101" pos:column="46">.<pos:position pos:line="101" pos:column="47"/></operator><name pos:line="101" pos:column="47">value_regex<pos:position pos:line="101" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="102" pos:column="33">free<pos:position pos:line="102" pos:column="37"/></name><argument_list pos:line="102" pos:column="37">(<argument><expr><name><name pos:line="102" pos:column="38">store<pos:position pos:line="102" pos:column="43"/></name><operator pos:line="102" pos:column="43">.<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="44">value_regex<pos:position pos:line="102" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="103" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="104" pos:column="25">ret<pos:position pos:line="104" pos:column="28"/></name> <operator pos:line="104" pos:column="29">=<pos:position pos:line="104" pos:column="30"/></operator> <name pos:line="104" pos:column="31">CONFIG_INVALID_FILE<pos:position pos:line="104" pos:column="50"/></name></expr>;<pos:position pos:line="104" pos:column="51"/></expr_stmt>
			<goto pos:line="105" pos:column="25">goto <name pos:line="105" pos:column="30">out_free<pos:position pos:line="105" pos:column="38"/></name>;<pos:position pos:line="105" pos:column="39"/></goto>
		}<pos:position pos:line="106" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="108" pos:column="17">free<pos:position pos:line="108" pos:column="21"/></name><argument_list pos:line="108" pos:column="21">(<argument><expr><name><name pos:line="108" pos:column="22">store<pos:position pos:line="108" pos:column="27"/></name><operator pos:line="108" pos:column="27">.<pos:position pos:line="108" pos:column="28"/></operator><name pos:line="108" pos:column="28">key<pos:position pos:line="108" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt>
		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name><name pos:line="109" pos:column="21">store<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">.<pos:position pos:line="109" pos:column="27"/></operator><name pos:line="109" pos:column="27">value_regex<pos:position pos:line="109" pos:column="38"/></name></name> <operator pos:line="109" pos:column="39">!=<pos:position pos:line="109" pos:column="41"/></operator> <name pos:line="109" pos:column="42">NULL<pos:position pos:line="109" pos:column="46"/></name> <operator pos:line="109" pos:column="47">&amp;&amp;<pos:position pos:line="109" pos:column="57"/></operator>
		    <name><name pos:line="110" pos:column="21">store<pos:position pos:line="110" pos:column="26"/></name><operator pos:line="110" pos:column="26">.<pos:position pos:line="110" pos:column="27"/></operator><name pos:line="110" pos:column="27">value_regex<pos:position pos:line="110" pos:column="38"/></name></name> <operator pos:line="110" pos:column="39">!=<pos:position pos:line="110" pos:column="41"/></operator> <name pos:line="110" pos:column="42">CONFIG_REGEX_NONE<pos:position pos:line="110" pos:column="59"/></name></expr>)<pos:position pos:line="110" pos:column="60"/></condition><then pos:line="110" pos:column="60"> <block pos:line="110" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="111" pos:column="25">regfree<pos:position pos:line="111" pos:column="32"/></name><argument_list pos:line="111" pos:column="32">(<argument><expr><name><name pos:line="111" pos:column="33">store<pos:position pos:line="111" pos:column="38"/></name><operator pos:line="111" pos:column="38">.<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="39">value_regex<pos:position pos:line="111" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="112" pos:column="25">free<pos:position pos:line="112" pos:column="29"/></name><argument_list pos:line="112" pos:column="29">(<argument><expr><name><name pos:line="112" pos:column="30">store<pos:position pos:line="112" pos:column="35"/></name><operator pos:line="112" pos:column="35">.<pos:position pos:line="112" pos:column="36"/></operator><name pos:line="112" pos:column="36">value_regex<pos:position pos:line="112" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="113" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="115" pos:column="17">/* if nothing to unset, or too many matches, error out */</comment>
		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><operator pos:line="116" pos:column="21">(<pos:position pos:line="116" pos:column="22"/></operator><name><name pos:line="116" pos:column="22">store<pos:position pos:line="116" pos:column="27"/></name><operator pos:line="116" pos:column="27">.<pos:position pos:line="116" pos:column="28"/></operator><name pos:line="116" pos:column="28">seen<pos:position pos:line="116" pos:column="32"/></name></name> <operator pos:line="116" pos:column="33">==<pos:position pos:line="116" pos:column="35"/></operator> <literal type="number" pos:line="116" pos:column="36">0<pos:position pos:line="116" pos:column="37"/></literal> <operator pos:line="116" pos:column="38">&amp;&amp;<pos:position pos:line="116" pos:column="48"/></operator> <name pos:line="116" pos:column="41">value<pos:position pos:line="116" pos:column="46"/></name> <operator pos:line="116" pos:column="47">==<pos:position pos:line="116" pos:column="49"/></operator> <name pos:line="116" pos:column="50">NULL<pos:position pos:line="116" pos:column="54"/></name><operator pos:line="116" pos:column="54">)<pos:position pos:line="116" pos:column="55"/></operator> <operator pos:line="116" pos:column="56">||<pos:position pos:line="116" pos:column="58"/></operator>
				<operator pos:line="117" pos:column="33">(<pos:position pos:line="117" pos:column="34"/></operator><name><name pos:line="117" pos:column="34">store<pos:position pos:line="117" pos:column="39"/></name><operator pos:line="117" pos:column="39">.<pos:position pos:line="117" pos:column="40"/></operator><name pos:line="117" pos:column="40">seen<pos:position pos:line="117" pos:column="44"/></name></name> <operator pos:line="117" pos:column="45">&gt;<pos:position pos:line="117" pos:column="49"/></operator> <literal type="number" pos:line="117" pos:column="47">1<pos:position pos:line="117" pos:column="48"/></literal> <operator pos:line="117" pos:column="49">&amp;&amp;<pos:position pos:line="117" pos:column="59"/></operator> <name pos:line="117" pos:column="52">multi_replace<pos:position pos:line="117" pos:column="65"/></name> <operator pos:line="117" pos:column="66">==<pos:position pos:line="117" pos:column="68"/></operator> <literal type="number" pos:line="117" pos:column="69">0<pos:position pos:line="117" pos:column="70"/></literal><operator pos:line="117" pos:column="70">)<pos:position pos:line="117" pos:column="71"/></operator></expr>)<pos:position pos:line="117" pos:column="72"/></condition><then pos:line="117" pos:column="72"> <block pos:line="117" pos:column="73">{
			<expr_stmt><expr><name pos:line="118" pos:column="25">ret<pos:position pos:line="118" pos:column="28"/></name> <operator pos:line="118" pos:column="29">=<pos:position pos:line="118" pos:column="30"/></operator> <name pos:line="118" pos:column="31">CONFIG_NOTHING_SET<pos:position pos:line="118" pos:column="49"/></name></expr>;<pos:position pos:line="118" pos:column="50"/></expr_stmt>
			<goto pos:line="119" pos:column="25">goto <name pos:line="119" pos:column="30">out_free<pos:position pos:line="119" pos:column="38"/></name>;<pos:position pos:line="119" pos:column="39"/></goto>
		}<pos:position pos:line="120" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="122" pos:column="17">fstat<pos:position pos:line="122" pos:column="22"/></name><argument_list pos:line="122" pos:column="22">(<argument><expr><name pos:line="122" pos:column="23">in_fd<pos:position pos:line="122" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="30">&amp;<pos:position pos:line="122" pos:column="35"/></operator><name pos:line="122" pos:column="31">st<pos:position pos:line="122" pos:column="33"/></name></expr></argument>)<pos:position pos:line="122" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="123" pos:column="17">contents_sz<pos:position pos:line="123" pos:column="28"/></name> <operator pos:line="123" pos:column="29">=<pos:position pos:line="123" pos:column="30"/></operator> <call><name pos:line="123" pos:column="31">xsize_t<pos:position pos:line="123" pos:column="38"/></name><argument_list pos:line="123" pos:column="38">(<argument><expr><name><name pos:line="123" pos:column="39">st<pos:position pos:line="123" pos:column="41"/></name><operator pos:line="123" pos:column="41">.<pos:position pos:line="123" pos:column="42"/></operator><name pos:line="123" pos:column="42">st_size<pos:position pos:line="123" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="124" pos:column="17">contents<pos:position pos:line="124" pos:column="25"/></name> <operator pos:line="124" pos:column="26">=<pos:position pos:line="124" pos:column="27"/></operator> <call><name pos:line="124" pos:column="28">xmmap_gently<pos:position pos:line="124" pos:column="40"/></name><argument_list pos:line="124" pos:column="40">(<argument><expr><name pos:line="124" pos:column="41">NULL<pos:position pos:line="124" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="47">contents_sz<pos:position pos:line="124" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="60">PROT_READ<pos:position pos:line="124" pos:column="69"/></name></expr></argument>,
					<argument><expr><name pos:line="125" pos:column="41">MAP_PRIVATE<pos:position pos:line="125" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="54">in_fd<pos:position pos:line="125" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="61">0<pos:position pos:line="125" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="64"/></expr_stmt>
		<if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><name pos:line="126" pos:column="21">contents<pos:position pos:line="126" pos:column="29"/></name> <operator pos:line="126" pos:column="30">==<pos:position pos:line="126" pos:column="32"/></operator> <name pos:line="126" pos:column="33">MAP_FAILED<pos:position pos:line="126" pos:column="43"/></name></expr>)<pos:position pos:line="126" pos:column="44"/></condition><then pos:line="126" pos:column="44"> <block pos:line="126" pos:column="45">{
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><name pos:line="127" pos:column="29">errno<pos:position pos:line="127" pos:column="34"/></name> <operator pos:line="127" pos:column="35">==<pos:position pos:line="127" pos:column="37"/></operator> <name pos:line="127" pos:column="38">ENODEV<pos:position pos:line="127" pos:column="44"/></name> <operator pos:line="127" pos:column="45">&amp;&amp;<pos:position pos:line="127" pos:column="55"/></operator> <call><name pos:line="127" pos:column="48">S_ISDIR<pos:position pos:line="127" pos:column="55"/></name><argument_list pos:line="127" pos:column="55">(<argument><expr><name><name pos:line="127" pos:column="56">st<pos:position pos:line="127" pos:column="58"/></name><operator pos:line="127" pos:column="58">.<pos:position pos:line="127" pos:column="59"/></operator><name pos:line="127" pos:column="59">st_mode<pos:position pos:line="127" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="68"/></condition><then pos:line="127" pos:column="68">
				<block type="pseudo"><expr_stmt><expr><name pos:line="128" pos:column="33">errno<pos:position pos:line="128" pos:column="38"/></name> <operator pos:line="128" pos:column="39">=<pos:position pos:line="128" pos:column="40"/></operator> <name pos:line="128" pos:column="41">EISDIR<pos:position pos:line="128" pos:column="47"/></name></expr>;<pos:position pos:line="128" pos:column="48"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="129" pos:column="25">error<pos:position pos:line="129" pos:column="30"/></name><argument_list pos:line="129" pos:column="30">(<argument><expr><literal type="string" pos:line="129" pos:column="31">"unable to mmap '%s': %s"<pos:position pos:line="129" pos:column="56"/></literal></expr></argument>,
			      <argument><expr><name pos:line="130" pos:column="31">config_filename<pos:position pos:line="130" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="130" pos:column="48">strerror<pos:position pos:line="130" pos:column="56"/></name><argument_list pos:line="130" pos:column="56">(<argument><expr><name pos:line="130" pos:column="57">errno<pos:position pos:line="130" pos:column="62"/></name></expr></argument>)<pos:position pos:line="130" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><name pos:line="131" pos:column="25">ret<pos:position pos:line="131" pos:column="28"/></name> <operator pos:line="131" pos:column="29">=<pos:position pos:line="131" pos:column="30"/></operator> <name pos:line="131" pos:column="31">CONFIG_INVALID_FILE<pos:position pos:line="131" pos:column="50"/></name></expr>;<pos:position pos:line="131" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="132" pos:column="25">contents<pos:position pos:line="132" pos:column="33"/></name> <operator pos:line="132" pos:column="34">=<pos:position pos:line="132" pos:column="35"/></operator> <name pos:line="132" pos:column="36">NULL<pos:position pos:line="132" pos:column="40"/></name></expr>;<pos:position pos:line="132" pos:column="41"/></expr_stmt>
			<goto pos:line="133" pos:column="25">goto <name pos:line="133" pos:column="30">out_free<pos:position pos:line="133" pos:column="38"/></name>;<pos:position pos:line="133" pos:column="39"/></goto>
		}<pos:position pos:line="134" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="135" pos:column="17">close<pos:position pos:line="135" pos:column="22"/></name><argument_list pos:line="135" pos:column="22">(<argument><expr><name pos:line="135" pos:column="23">in_fd<pos:position pos:line="135" pos:column="28"/></name></expr></argument>)<pos:position pos:line="135" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="136" pos:column="17">in_fd<pos:position pos:line="136" pos:column="22"/></name> <operator pos:line="136" pos:column="23">=<pos:position pos:line="136" pos:column="24"/></operator> <operator pos:line="136" pos:column="25">-<pos:position pos:line="136" pos:column="26"/></operator><literal type="number" pos:line="136" pos:column="26">1<pos:position pos:line="136" pos:column="27"/></literal></expr>;<pos:position pos:line="136" pos:column="28"/></expr_stmt>

		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><call><name pos:line="138" pos:column="21">chmod<pos:position pos:line="138" pos:column="26"/></name><argument_list pos:line="138" pos:column="26">(<argument><expr><call><name pos:line="138" pos:column="27">get_lock_file_path<pos:position pos:line="138" pos:column="45"/></name><argument_list pos:line="138" pos:column="45">(<argument><expr><name pos:line="138" pos:column="46">lock<pos:position pos:line="138" pos:column="50"/></name></expr></argument>)<pos:position pos:line="138" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="53">st<pos:position pos:line="138" pos:column="55"/></name><operator pos:line="138" pos:column="55">.<pos:position pos:line="138" pos:column="56"/></operator><name pos:line="138" pos:column="56">st_mode<pos:position pos:line="138" pos:column="63"/></name></name> <operator pos:line="138" pos:column="64">&amp;<pos:position pos:line="138" pos:column="69"/></operator> <literal type="number" pos:line="138" pos:column="66">07777<pos:position pos:line="138" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="72"/></argument_list></call> <operator pos:line="138" pos:column="73">&lt;<pos:position pos:line="138" pos:column="77"/></operator> <literal type="number" pos:line="138" pos:column="75">0<pos:position pos:line="138" pos:column="76"/></literal></expr>)<pos:position pos:line="138" pos:column="77"/></condition><then pos:line="138" pos:column="77"> <block pos:line="138" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="139" pos:column="25">error<pos:position pos:line="139" pos:column="30"/></name><argument_list pos:line="139" pos:column="30">(<argument><expr><literal type="string" pos:line="139" pos:column="31">"chmod on %s failed: %s"<pos:position pos:line="139" pos:column="55"/></literal></expr></argument>,
			      <argument><expr><call><name pos:line="140" pos:column="31">get_lock_file_path<pos:position pos:line="140" pos:column="49"/></name><argument_list pos:line="140" pos:column="49">(<argument><expr><name pos:line="140" pos:column="50">lock<pos:position pos:line="140" pos:column="54"/></name></expr></argument>)<pos:position pos:line="140" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="140" pos:column="57">strerror<pos:position pos:line="140" pos:column="65"/></name><argument_list pos:line="140" pos:column="65">(<argument><expr><name pos:line="140" pos:column="66">errno<pos:position pos:line="140" pos:column="71"/></name></expr></argument>)<pos:position pos:line="140" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name pos:line="141" pos:column="25">ret<pos:position pos:line="141" pos:column="28"/></name> <operator pos:line="141" pos:column="29">=<pos:position pos:line="141" pos:column="30"/></operator> <name pos:line="141" pos:column="31">CONFIG_NO_WRITE<pos:position pos:line="141" pos:column="46"/></name></expr>;<pos:position pos:line="141" pos:column="47"/></expr_stmt>
			<goto pos:line="142" pos:column="25">goto <name pos:line="142" pos:column="30">out_free<pos:position pos:line="142" pos:column="38"/></name>;<pos:position pos:line="142" pos:column="39"/></goto>
		}<pos:position pos:line="143" pos:column="18"/></block></then></if>

		<if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><name><name pos:line="145" pos:column="21">store<pos:position pos:line="145" pos:column="26"/></name><operator pos:line="145" pos:column="26">.<pos:position pos:line="145" pos:column="27"/></operator><name pos:line="145" pos:column="27">seen<pos:position pos:line="145" pos:column="31"/></name></name> <operator pos:line="145" pos:column="32">==<pos:position pos:line="145" pos:column="34"/></operator> <literal type="number" pos:line="145" pos:column="35">0<pos:position pos:line="145" pos:column="36"/></literal></expr>)<pos:position pos:line="145" pos:column="37"/></condition><then pos:line="145" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="146" pos:column="25">store<pos:position pos:line="146" pos:column="30"/></name><operator pos:line="146" pos:column="30">.<pos:position pos:line="146" pos:column="31"/></operator><name pos:line="146" pos:column="31">seen<pos:position pos:line="146" pos:column="35"/></name></name> <operator pos:line="146" pos:column="36">=<pos:position pos:line="146" pos:column="37"/></operator> <literal type="number" pos:line="146" pos:column="38">1<pos:position pos:line="146" pos:column="39"/></literal></expr>;<pos:position pos:line="146" pos:column="40"/></expr_stmt></block></then></if>

		<for pos:line="148" pos:column="17">for <control pos:line="148" pos:column="21">(<init><expr><name pos:line="148" pos:column="22">i<pos:position pos:line="148" pos:column="23"/></name> <operator pos:line="148" pos:column="24">=<pos:position pos:line="148" pos:column="25"/></operator> <literal type="number" pos:line="148" pos:column="26">0<pos:position pos:line="148" pos:column="27"/></literal></expr><operator pos:line="148" pos:column="27">,<pos:position pos:line="148" pos:column="28"/></operator> <expr><name pos:line="148" pos:column="29">copy_begin<pos:position pos:line="148" pos:column="39"/></name> <operator pos:line="148" pos:column="40">=<pos:position pos:line="148" pos:column="41"/></operator> <literal type="number" pos:line="148" pos:column="42">0<pos:position pos:line="148" pos:column="43"/></literal></expr>;<pos:position pos:line="148" pos:column="44"/></init> <condition><expr><name pos:line="148" pos:column="45">i<pos:position pos:line="148" pos:column="46"/></name> <operator pos:line="148" pos:column="47">&lt;<pos:position pos:line="148" pos:column="51"/></operator> <name><name pos:line="148" pos:column="49">store<pos:position pos:line="148" pos:column="54"/></name><operator pos:line="148" pos:column="54">.<pos:position pos:line="148" pos:column="55"/></operator><name pos:line="148" pos:column="55">seen<pos:position pos:line="148" pos:column="59"/></name></name></expr>;<pos:position pos:line="148" pos:column="60"/></condition> <incr><expr><name pos:line="148" pos:column="61">i<pos:position pos:line="148" pos:column="62"/></name><operator pos:line="148" pos:column="62">++<pos:position pos:line="148" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="148" pos:column="65"/></control> <block pos:line="148" pos:column="66">{
			<if pos:line="149" pos:column="25">if <condition pos:line="149" pos:column="28">(<expr><name><name pos:line="149" pos:column="29">store<pos:position pos:line="149" pos:column="34"/></name><operator pos:line="149" pos:column="34">.<pos:position pos:line="149" pos:column="35"/></operator><name pos:line="149" pos:column="35">offset<pos:position pos:line="149" pos:column="41"/></name><index pos:line="149" pos:column="41">[<expr><name pos:line="149" pos:column="42">i<pos:position pos:line="149" pos:column="43"/></name></expr>]<pos:position pos:line="149" pos:column="44"/></index></name> <operator pos:line="149" pos:column="45">==<pos:position pos:line="149" pos:column="47"/></operator> <literal type="number" pos:line="149" pos:column="48">0<pos:position pos:line="149" pos:column="49"/></literal></expr>)<pos:position pos:line="149" pos:column="50"/></condition><then pos:line="149" pos:column="50"> <block pos:line="149" pos:column="51">{
				<expr_stmt><expr><name><name pos:line="150" pos:column="33">store<pos:position pos:line="150" pos:column="38"/></name><operator pos:line="150" pos:column="38">.<pos:position pos:line="150" pos:column="39"/></operator><name pos:line="150" pos:column="39">offset<pos:position pos:line="150" pos:column="45"/></name><index pos:line="150" pos:column="45">[<expr><name pos:line="150" pos:column="46">i<pos:position pos:line="150" pos:column="47"/></name></expr>]<pos:position pos:line="150" pos:column="48"/></index></name> <operator pos:line="150" pos:column="49">=<pos:position pos:line="150" pos:column="50"/></operator> <name pos:line="150" pos:column="51">copy_end<pos:position pos:line="150" pos:column="59"/></name> <operator pos:line="150" pos:column="60">=<pos:position pos:line="150" pos:column="61"/></operator> <name pos:line="150" pos:column="62">contents_sz<pos:position pos:line="150" pos:column="73"/></name></expr>;<pos:position pos:line="150" pos:column="74"/></expr_stmt>
			}<pos:position pos:line="151" pos:column="26"/></block></then> <elseif pos:line="151" pos:column="27">else <if pos:line="151" pos:column="32">if <condition pos:line="151" pos:column="35">(<expr><name><name pos:line="151" pos:column="36">store<pos:position pos:line="151" pos:column="41"/></name><operator pos:line="151" pos:column="41">.<pos:position pos:line="151" pos:column="42"/></operator><name pos:line="151" pos:column="42">state<pos:position pos:line="151" pos:column="47"/></name></name> <operator pos:line="151" pos:column="48">!=<pos:position pos:line="151" pos:column="50"/></operator> <name pos:line="151" pos:column="51">KEY_SEEN<pos:position pos:line="151" pos:column="59"/></name></expr>)<pos:position pos:line="151" pos:column="60"/></condition><then pos:line="151" pos:column="60"> <block pos:line="151" pos:column="61">{
				<expr_stmt><expr><name pos:line="152" pos:column="33">copy_end<pos:position pos:line="152" pos:column="41"/></name> <operator pos:line="152" pos:column="42">=<pos:position pos:line="152" pos:column="43"/></operator> <name><name pos:line="152" pos:column="44">store<pos:position pos:line="152" pos:column="49"/></name><operator pos:line="152" pos:column="49">.<pos:position pos:line="152" pos:column="50"/></operator><name pos:line="152" pos:column="50">offset<pos:position pos:line="152" pos:column="56"/></name><index pos:line="152" pos:column="56">[<expr><name pos:line="152" pos:column="57">i<pos:position pos:line="152" pos:column="58"/></name></expr>]<pos:position pos:line="152" pos:column="59"/></index></name></expr>;<pos:position pos:line="152" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="153" pos:column="26"/></block></then></if></elseif> <else pos:line="153" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="154" pos:column="33">copy_end<pos:position pos:line="154" pos:column="41"/></name> <operator pos:line="154" pos:column="42">=<pos:position pos:line="154" pos:column="43"/></operator> <call><name pos:line="154" pos:column="44">find_beginning_of_line<pos:position pos:line="154" pos:column="66"/></name><argument_list pos:line="154" pos:column="66">(
					<argument><expr><name pos:line="155" pos:column="41">contents<pos:position pos:line="155" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="51">contents_sz<pos:position pos:line="155" pos:column="62"/></name></expr></argument>,
					<argument><expr><name><name pos:line="156" pos:column="41">store<pos:position pos:line="156" pos:column="46"/></name><operator pos:line="156" pos:column="46">.<pos:position pos:line="156" pos:column="47"/></operator><name pos:line="156" pos:column="47">offset<pos:position pos:line="156" pos:column="53"/></name><index pos:line="156" pos:column="53">[<expr><name pos:line="156" pos:column="54">i<pos:position pos:line="156" pos:column="55"/></name></expr>]<pos:position pos:line="156" pos:column="56"/></index></name><operator pos:line="156" pos:column="56">-<pos:position pos:line="156" pos:column="57"/></operator><literal type="number" pos:line="156" pos:column="57">2<pos:position pos:line="156" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="156" pos:column="60">&amp;<pos:position pos:line="156" pos:column="65"/></operator><name pos:line="156" pos:column="61">new_line<pos:position pos:line="156" pos:column="69"/></name></expr></argument>)<pos:position pos:line="156" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="71"/></expr_stmt></block></else></if>

			<if pos:line="158" pos:column="25">if <condition pos:line="158" pos:column="28">(<expr><name pos:line="158" pos:column="29">copy_end<pos:position pos:line="158" pos:column="37"/></name> <operator pos:line="158" pos:column="38">&gt;<pos:position pos:line="158" pos:column="42"/></operator> <literal type="number" pos:line="158" pos:column="40">0<pos:position pos:line="158" pos:column="41"/></literal> <operator pos:line="158" pos:column="42">&amp;&amp;<pos:position pos:line="158" pos:column="52"/></operator> <name><name pos:line="158" pos:column="45">contents<pos:position pos:line="158" pos:column="53"/></name><index pos:line="158" pos:column="53">[<expr><name pos:line="158" pos:column="54">copy_end<pos:position pos:line="158" pos:column="62"/></name><operator pos:line="158" pos:column="62">-<pos:position pos:line="158" pos:column="63"/></operator><literal type="number" pos:line="158" pos:column="63">1<pos:position pos:line="158" pos:column="64"/></literal></expr>]<pos:position pos:line="158" pos:column="65"/></index></name> <operator pos:line="158" pos:column="66">!=<pos:position pos:line="158" pos:column="68"/></operator> <literal type="char" pos:line="158" pos:column="69">'\n'<pos:position pos:line="158" pos:column="73"/></literal></expr>)<pos:position pos:line="158" pos:column="74"/></condition><then pos:line="158" pos:column="74">
				<block type="pseudo"><expr_stmt><expr><name pos:line="159" pos:column="33">new_line<pos:position pos:line="159" pos:column="41"/></name> <operator pos:line="159" pos:column="42">=<pos:position pos:line="159" pos:column="43"/></operator> <literal type="number" pos:line="159" pos:column="44">1<pos:position pos:line="159" pos:column="45"/></literal></expr>;<pos:position pos:line="159" pos:column="46"/></expr_stmt></block></then></if>

			<comment type="block" pos:line="161" pos:column="25">/* write the first part of the config */</comment>
			<if pos:line="162" pos:column="25">if <condition pos:line="162" pos:column="28">(<expr><name pos:line="162" pos:column="29">copy_end<pos:position pos:line="162" pos:column="37"/></name> <operator pos:line="162" pos:column="38">&gt;<pos:position pos:line="162" pos:column="42"/></operator> <name pos:line="162" pos:column="40">copy_begin<pos:position pos:line="162" pos:column="50"/></name></expr>)<pos:position pos:line="162" pos:column="51"/></condition><then pos:line="162" pos:column="51"> <block pos:line="162" pos:column="52">{
				<if pos:line="163" pos:column="33">if <condition pos:line="163" pos:column="36">(<expr><call><name pos:line="163" pos:column="37">write_in_full<pos:position pos:line="163" pos:column="50"/></name><argument_list pos:line="163" pos:column="50">(<argument><expr><name pos:line="163" pos:column="51">fd<pos:position pos:line="163" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="55">contents<pos:position pos:line="163" pos:column="63"/></name> <operator pos:line="163" pos:column="64">+<pos:position pos:line="163" pos:column="65"/></operator> <name pos:line="163" pos:column="66">copy_begin<pos:position pos:line="163" pos:column="76"/></name></expr></argument>,
						  <argument><expr><name pos:line="164" pos:column="51">copy_end<pos:position pos:line="164" pos:column="59"/></name> <operator pos:line="164" pos:column="60">-<pos:position pos:line="164" pos:column="61"/></operator> <name pos:line="164" pos:column="62">copy_begin<pos:position pos:line="164" pos:column="72"/></name></expr></argument>)<pos:position pos:line="164" pos:column="73"/></argument_list></call> <operator pos:line="164" pos:column="74">&lt;<pos:position pos:line="164" pos:column="78"/></operator>
				    <name pos:line="165" pos:column="37">copy_end<pos:position pos:line="165" pos:column="45"/></name> <operator pos:line="165" pos:column="46">-<pos:position pos:line="165" pos:column="47"/></operator> <name pos:line="165" pos:column="48">copy_begin<pos:position pos:line="165" pos:column="58"/></name></expr>)<pos:position pos:line="165" pos:column="59"/></condition><then pos:line="165" pos:column="59">
					<block type="pseudo"><goto pos:line="166" pos:column="41">goto <name pos:line="166" pos:column="46">write_err_out<pos:position pos:line="166" pos:column="59"/></name>;<pos:position pos:line="166" pos:column="60"/></goto></block></then></if>
				<if pos:line="167" pos:column="33">if <condition pos:line="167" pos:column="36">(<expr><name pos:line="167" pos:column="37">new_line<pos:position pos:line="167" pos:column="45"/></name> <operator pos:line="167" pos:column="46">&amp;&amp;<pos:position pos:line="167" pos:column="56"/></operator>
				    <call><name pos:line="168" pos:column="37">write_str_in_full<pos:position pos:line="168" pos:column="54"/></name><argument_list pos:line="168" pos:column="54">(<argument><expr><name pos:line="168" pos:column="55">fd<pos:position pos:line="168" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="59">"\n"<pos:position pos:line="168" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="64"/></argument_list></call> <operator pos:line="168" pos:column="65">!=<pos:position pos:line="168" pos:column="67"/></operator> <literal type="number" pos:line="168" pos:column="68">1<pos:position pos:line="168" pos:column="69"/></literal></expr>)<pos:position pos:line="168" pos:column="70"/></condition><then pos:line="168" pos:column="70">
					<block type="pseudo"><goto pos:line="169" pos:column="41">goto <name pos:line="169" pos:column="46">write_err_out<pos:position pos:line="169" pos:column="59"/></name>;<pos:position pos:line="169" pos:column="60"/></goto></block></then></if>
			}<pos:position pos:line="170" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="171" pos:column="25">copy_begin<pos:position pos:line="171" pos:column="35"/></name> <operator pos:line="171" pos:column="36">=<pos:position pos:line="171" pos:column="37"/></operator> <name><name pos:line="171" pos:column="38">store<pos:position pos:line="171" pos:column="43"/></name><operator pos:line="171" pos:column="43">.<pos:position pos:line="171" pos:column="44"/></operator><name pos:line="171" pos:column="44">offset<pos:position pos:line="171" pos:column="50"/></name><index pos:line="171" pos:column="50">[<expr><name pos:line="171" pos:column="51">i<pos:position pos:line="171" pos:column="52"/></name></expr>]<pos:position pos:line="171" pos:column="53"/></index></name></expr>;<pos:position pos:line="171" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="172" pos:column="18"/></block></for>

		<comment type="block" pos:line="174" pos:column="17">/* write the pair (value == NULL means unset) */</comment>
		<if pos:line="175" pos:column="17">if <condition pos:line="175" pos:column="20">(<expr><name pos:line="175" pos:column="21">value<pos:position pos:line="175" pos:column="26"/></name> <operator pos:line="175" pos:column="27">!=<pos:position pos:line="175" pos:column="29"/></operator> <name pos:line="175" pos:column="30">NULL<pos:position pos:line="175" pos:column="34"/></name></expr>)<pos:position pos:line="175" pos:column="35"/></condition><then pos:line="175" pos:column="35"> <block pos:line="175" pos:column="36">{
			<if pos:line="176" pos:column="25">if <condition pos:line="176" pos:column="28">(<expr><name><name pos:line="176" pos:column="29">store<pos:position pos:line="176" pos:column="34"/></name><operator pos:line="176" pos:column="34">.<pos:position pos:line="176" pos:column="35"/></operator><name pos:line="176" pos:column="35">state<pos:position pos:line="176" pos:column="40"/></name></name> <operator pos:line="176" pos:column="41">==<pos:position pos:line="176" pos:column="43"/></operator> <name pos:line="176" pos:column="44">START<pos:position pos:line="176" pos:column="49"/></name></expr>)<pos:position pos:line="176" pos:column="50"/></condition><then pos:line="176" pos:column="50"> <block pos:line="176" pos:column="51">{
				<if pos:line="177" pos:column="33">if <condition pos:line="177" pos:column="36">(<expr><operator pos:line="177" pos:column="37">!<pos:position pos:line="177" pos:column="38"/></operator><call><name pos:line="177" pos:column="38">store_write_section<pos:position pos:line="177" pos:column="57"/></name><argument_list pos:line="177" pos:column="57">(<argument><expr><name pos:line="177" pos:column="58">fd<pos:position pos:line="177" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="62">key<pos:position pos:line="177" pos:column="65"/></name></expr></argument>)<pos:position pos:line="177" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="67"/></condition><then pos:line="177" pos:column="67">
					<block type="pseudo"><goto pos:line="178" pos:column="41">goto <name pos:line="178" pos:column="46">write_err_out<pos:position pos:line="178" pos:column="59"/></name>;<pos:position pos:line="178" pos:column="60"/></goto></block></then></if>
			}<pos:position pos:line="179" pos:column="26"/></block></then></if>
			<if pos:line="180" pos:column="25">if <condition pos:line="180" pos:column="28">(<expr><operator pos:line="180" pos:column="29">!<pos:position pos:line="180" pos:column="30"/></operator><call><name pos:line="180" pos:column="30">store_write_pair<pos:position pos:line="180" pos:column="46"/></name><argument_list pos:line="180" pos:column="46">(<argument><expr><name pos:line="180" pos:column="47">fd<pos:position pos:line="180" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="51">key<pos:position pos:line="180" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="56">value<pos:position pos:line="180" pos:column="61"/></name></expr></argument>)<pos:position pos:line="180" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="180" pos:column="63"/></condition><then pos:line="180" pos:column="63">
				<block type="pseudo"><goto pos:line="181" pos:column="33">goto <name pos:line="181" pos:column="38">write_err_out<pos:position pos:line="181" pos:column="51"/></name>;<pos:position pos:line="181" pos:column="52"/></goto></block></then></if>
		}<pos:position pos:line="182" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="184" pos:column="17">/* write the rest of the config */</comment>
		<if pos:line="185" pos:column="17">if <condition pos:line="185" pos:column="20">(<expr><name pos:line="185" pos:column="21">copy_begin<pos:position pos:line="185" pos:column="31"/></name> <operator pos:line="185" pos:column="32">&lt;<pos:position pos:line="185" pos:column="36"/></operator> <name pos:line="185" pos:column="34">contents_sz<pos:position pos:line="185" pos:column="45"/></name></expr>)<pos:position pos:line="185" pos:column="46"/></condition><then pos:line="185" pos:column="46">
			<block type="pseudo"><if pos:line="186" pos:column="25">if <condition pos:line="186" pos:column="28">(<expr><call><name pos:line="186" pos:column="29">write_in_full<pos:position pos:line="186" pos:column="42"/></name><argument_list pos:line="186" pos:column="42">(<argument><expr><name pos:line="186" pos:column="43">fd<pos:position pos:line="186" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="47">contents<pos:position pos:line="186" pos:column="55"/></name> <operator pos:line="186" pos:column="56">+<pos:position pos:line="186" pos:column="57"/></operator> <name pos:line="186" pos:column="58">copy_begin<pos:position pos:line="186" pos:column="68"/></name></expr></argument>,
					  <argument><expr><name pos:line="187" pos:column="43">contents_sz<pos:position pos:line="187" pos:column="54"/></name> <operator pos:line="187" pos:column="55">-<pos:position pos:line="187" pos:column="56"/></operator> <name pos:line="187" pos:column="57">copy_begin<pos:position pos:line="187" pos:column="67"/></name></expr></argument>)<pos:position pos:line="187" pos:column="68"/></argument_list></call> <operator pos:line="187" pos:column="69">&lt;<pos:position pos:line="187" pos:column="73"/></operator>
			    <name pos:line="188" pos:column="29">contents_sz<pos:position pos:line="188" pos:column="40"/></name> <operator pos:line="188" pos:column="41">-<pos:position pos:line="188" pos:column="42"/></operator> <name pos:line="188" pos:column="43">copy_begin<pos:position pos:line="188" pos:column="53"/></name></expr>)<pos:position pos:line="188" pos:column="54"/></condition><then pos:line="188" pos:column="54">
				<block type="pseudo"><goto pos:line="189" pos:column="33">goto <name pos:line="189" pos:column="38">write_err_out<pos:position pos:line="189" pos:column="51"/></name>;<pos:position pos:line="189" pos:column="52"/></goto></block></then></if></block></then></if>

		<expr_stmt><expr><call><name pos:line="191" pos:column="17">munmap<pos:position pos:line="191" pos:column="23"/></name><argument_list pos:line="191" pos:column="23">(<argument><expr><name pos:line="191" pos:column="24">contents<pos:position pos:line="191" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="34">contents_sz<pos:position pos:line="191" pos:column="45"/></name></expr></argument>)<pos:position pos:line="191" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="192" pos:column="17">contents<pos:position pos:line="192" pos:column="25"/></name> <operator pos:line="192" pos:column="26">=<pos:position pos:line="192" pos:column="27"/></operator> <name pos:line="192" pos:column="28">NULL<pos:position pos:line="192" pos:column="32"/></name></expr>;<pos:position pos:line="192" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="193" pos:column="10"/></block></else></if>

	<if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><call><name pos:line="195" pos:column="13">commit_lock_file<pos:position pos:line="195" pos:column="29"/></name><argument_list pos:line="195" pos:column="29">(<argument><expr><name pos:line="195" pos:column="30">lock<pos:position pos:line="195" pos:column="34"/></name></expr></argument>)<pos:position pos:line="195" pos:column="35"/></argument_list></call> <operator pos:line="195" pos:column="36">&lt;<pos:position pos:line="195" pos:column="40"/></operator> <literal type="number" pos:line="195" pos:column="38">0<pos:position pos:line="195" pos:column="39"/></literal></expr>)<pos:position pos:line="195" pos:column="40"/></condition><then pos:line="195" pos:column="40"> <block pos:line="195" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="196" pos:column="17">error<pos:position pos:line="196" pos:column="22"/></name><argument_list pos:line="196" pos:column="22">(<argument><expr><literal type="string" pos:line="196" pos:column="23">"could not write config file %s: %s"<pos:position pos:line="196" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="196" pos:column="61">config_filename<pos:position pos:line="196" pos:column="76"/></name></expr></argument>,
		      <argument><expr><call><name pos:line="197" pos:column="23">strerror<pos:position pos:line="197" pos:column="31"/></name><argument_list pos:line="197" pos:column="31">(<argument><expr><name pos:line="197" pos:column="32">errno<pos:position pos:line="197" pos:column="37"/></name></expr></argument>)<pos:position pos:line="197" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="197" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="198" pos:column="17">ret<pos:position pos:line="198" pos:column="20"/></name> <operator pos:line="198" pos:column="21">=<pos:position pos:line="198" pos:column="22"/></operator> <name pos:line="198" pos:column="23">CONFIG_NO_WRITE<pos:position pos:line="198" pos:column="38"/></name></expr>;<pos:position pos:line="198" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="199" pos:column="17">lock<pos:position pos:line="199" pos:column="21"/></name> <operator pos:line="199" pos:column="22">=<pos:position pos:line="199" pos:column="23"/></operator> <name pos:line="199" pos:column="24">NULL<pos:position pos:line="199" pos:column="28"/></name></expr>;<pos:position pos:line="199" pos:column="29"/></expr_stmt>
		<goto pos:line="200" pos:column="17">goto <name pos:line="200" pos:column="22">out_free<pos:position pos:line="200" pos:column="30"/></name>;<pos:position pos:line="200" pos:column="31"/></goto>
	}<pos:position pos:line="201" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="203" pos:column="9">/*
	 * lock is committed, so don't try to roll it back below.
	 * NOTE: Since lockfile.c keeps a linked list of all created
	 * lock_file structures, it isn't safe to free(lock).  It's
	 * better to just leave it hanging around.
	 */</comment>
	<expr_stmt><expr><name pos:line="209" pos:column="9">lock<pos:position pos:line="209" pos:column="13"/></name> <operator pos:line="209" pos:column="14">=<pos:position pos:line="209" pos:column="15"/></operator> <name pos:line="209" pos:column="16">NULL<pos:position pos:line="209" pos:column="20"/></name></expr>;<pos:position pos:line="209" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="210" pos:column="9">ret<pos:position pos:line="210" pos:column="12"/></name> <operator pos:line="210" pos:column="13">=<pos:position pos:line="210" pos:column="14"/></operator> <literal type="number" pos:line="210" pos:column="15">0<pos:position pos:line="210" pos:column="16"/></literal></expr>;<pos:position pos:line="210" pos:column="17"/></expr_stmt>

	<comment type="block" pos:line="212" pos:column="9">/* Invalidate the config cache */</comment>
	<expr_stmt><expr><call><name pos:line="213" pos:column="9">git_config_clear<pos:position pos:line="213" pos:column="25"/></name><argument_list pos:line="213" pos:column="25">()<pos:position pos:line="213" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="28"/></expr_stmt>

<label><name pos:line="215" pos:column="1">out_free<pos:position pos:line="215" pos:column="9"/></name>:<pos:position pos:line="215" pos:column="10"/></label>
	<if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><name pos:line="216" pos:column="13">lock<pos:position pos:line="216" pos:column="17"/></name></expr>)<pos:position pos:line="216" pos:column="18"/></condition><then pos:line="216" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="217" pos:column="17">rollback_lock_file<pos:position pos:line="217" pos:column="35"/></name><argument_list pos:line="217" pos:column="35">(<argument><expr><name pos:line="217" pos:column="36">lock<pos:position pos:line="217" pos:column="40"/></name></expr></argument>)<pos:position pos:line="217" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="42"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="218" pos:column="9">free<pos:position pos:line="218" pos:column="13"/></name><argument_list pos:line="218" pos:column="13">(<argument><expr><name pos:line="218" pos:column="14">filename_buf<pos:position pos:line="218" pos:column="26"/></name></expr></argument>)<pos:position pos:line="218" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="28"/></expr_stmt>
	<if pos:line="219" pos:column="9">if <condition pos:line="219" pos:column="12">(<expr><name pos:line="219" pos:column="13">contents<pos:position pos:line="219" pos:column="21"/></name></expr>)<pos:position pos:line="219" pos:column="22"/></condition><then pos:line="219" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="220" pos:column="17">munmap<pos:position pos:line="220" pos:column="23"/></name><argument_list pos:line="220" pos:column="23">(<argument><expr><name pos:line="220" pos:column="24">contents<pos:position pos:line="220" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="34">contents_sz<pos:position pos:line="220" pos:column="45"/></name></expr></argument>)<pos:position pos:line="220" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="47"/></expr_stmt></block></then></if>
	<if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><name pos:line="221" pos:column="13">in_fd<pos:position pos:line="221" pos:column="18"/></name> <operator pos:line="221" pos:column="19">&gt;=<pos:position pos:line="221" pos:column="24"/></operator> <literal type="number" pos:line="221" pos:column="22">0<pos:position pos:line="221" pos:column="23"/></literal></expr>)<pos:position pos:line="221" pos:column="24"/></condition><then pos:line="221" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="17">close<pos:position pos:line="222" pos:column="22"/></name><argument_list pos:line="222" pos:column="22">(<argument><expr><name pos:line="222" pos:column="23">in_fd<pos:position pos:line="222" pos:column="28"/></name></expr></argument>)<pos:position pos:line="222" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="30"/></expr_stmt></block></then></if>
	<return pos:line="223" pos:column="9">return <expr><name pos:line="223" pos:column="16">ret<pos:position pos:line="223" pos:column="19"/></name></expr>;<pos:position pos:line="223" pos:column="20"/></return>

<label><name pos:line="225" pos:column="1">write_err_out<pos:position pos:line="225" pos:column="14"/></name>:<pos:position pos:line="225" pos:column="15"/></label>
	<expr_stmt><expr><name pos:line="226" pos:column="9">ret<pos:position pos:line="226" pos:column="12"/></name> <operator pos:line="226" pos:column="13">=<pos:position pos:line="226" pos:column="14"/></operator> <call><name pos:line="226" pos:column="15">write_error<pos:position pos:line="226" pos:column="26"/></name><argument_list pos:line="226" pos:column="26">(<argument><expr><call><name pos:line="226" pos:column="27">get_lock_file_path<pos:position pos:line="226" pos:column="45"/></name><argument_list pos:line="226" pos:column="45">(<argument><expr><name pos:line="226" pos:column="46">lock<pos:position pos:line="226" pos:column="50"/></name></expr></argument>)<pos:position pos:line="226" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="226" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="53"/></expr_stmt>
	<goto pos:line="227" pos:column="9">goto <name pos:line="227" pos:column="14">out_free<pos:position pos:line="227" pos:column="22"/></name>;<pos:position pos:line="227" pos:column="23"/></goto>

}<pos:position pos:line="229" pos:column="2"/></block></function></unit>

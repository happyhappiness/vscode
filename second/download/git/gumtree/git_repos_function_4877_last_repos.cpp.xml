<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4877_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fill_hashmap<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">mmfile_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">file1<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">mmfile_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">file2<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">xpparam_t<pos:position pos:line="2" pos:column="26"/></name> <specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">xpp<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">xdfenv_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">env<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="3" pos:column="17">struct<pos:position pos:line="3" pos:column="23"/></name> <name pos:line="3" pos:column="24">hashmap<pos:position pos:line="3" pos:column="31"/></name></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">result<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">line1<pos:position pos:line="4" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="28">int<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">count1<pos:position pos:line="4" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="40">int<pos:position pos:line="4" pos:column="43"/></name></type> <name pos:line="4" pos:column="44">line2<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="51">int<pos:position pos:line="4" pos:column="54"/></name></type> <name pos:line="4" pos:column="55">count2<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="62"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">result<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">file1<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">file1<pos:position pos:line="6" pos:column="30"/></name></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">file2<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">file2<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">result<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">xpp<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">xpp<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">result<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">env<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">env<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* We know exactly how large we want the hash map */</comment>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">result<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">alloc<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">count1<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">2<pos:position pos:line="12" pos:column="35"/></literal></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">entries<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="27">(<pos:position pos:line="13" pos:column="28"/></operator>struct <name pos:line="13" pos:column="35">entry<pos:position pos:line="13" pos:column="40"/></name> <operator pos:line="13" pos:column="41">*<pos:position pos:line="13" pos:column="42"/></operator><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator>
		<call><name pos:line="14" pos:column="17">xdl_malloc<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name><name pos:line="14" pos:column="28">result<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">alloc<pos:position pos:line="14" pos:column="41"/></name></name> <operator pos:line="14" pos:column="42">*<pos:position pos:line="14" pos:column="43"/></operator> <sizeof pos:line="14" pos:column="44">sizeof<argument_list pos:line="14" pos:column="50">(<argument><expr pos:line="14" pos:column="51">struct <name pos:line="14" pos:column="58">entry<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">result<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">entries<pos:position pos:line="15" pos:column="29"/></name></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name><name pos:line="17" pos:column="16">result<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">entries<pos:position pos:line="17" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="36">result<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">alloc<pos:position pos:line="17" pos:column="49"/></name></name> <operator pos:line="17" pos:column="50">*<pos:position pos:line="17" pos:column="51"/></operator> <sizeof pos:line="17" pos:column="52">sizeof<argument_list pos:line="17" pos:column="58">(<argument><expr pos:line="17" pos:column="59">struct <name pos:line="17" pos:column="66">entry<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/* First, fill with entries from the first file */</comment>
	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">count1<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">--<pos:position pos:line="20" pos:column="24"/></operator></expr>)<pos:position pos:line="20" pos:column="25"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">insert_record<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">line1<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">++<pos:position pos:line="21" pos:column="38"/></operator></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">result<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="48">1<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt></block></while>

	<comment type="block" pos:line="23" pos:column="9">/* Then search for matches in the second file */</comment>
	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><name pos:line="24" pos:column="16">count2<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">--<pos:position pos:line="24" pos:column="24"/></operator></expr>)<pos:position pos:line="24" pos:column="25"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">insert_record<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">line2<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">++<pos:position pos:line="25" pos:column="38"/></operator></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">result<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="48">2<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt></block></while>

	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3463_git-2.12.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">gitmodules_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">work_tree<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><call><name pos:line="3" pos:column="33">get_git_work_tree<pos:position pos:line="3" pos:column="50"/></name><argument_list pos:line="3" pos:column="50">()<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">work_tree<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block pos:line="4" pos:column="24">{
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">strbuf<pos:position pos:line="5" pos:column="30"/></name></name></type> <name pos:line="5" pos:column="31">gitmodules_path<pos:position pos:line="5" pos:column="46"/></name> <init pos:line="5" pos:column="47">= <expr><name pos:line="5" pos:column="49">STRBUF_INIT<pos:position pos:line="5" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">pos<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">strbuf_addstr<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><operator pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="32">gitmodules_path<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="49">work_tree<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addstr<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><operator pos:line="8" pos:column="31">&amp;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="32">gitmodules_path<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="49">"/.gitmodules"<pos:position pos:line="8" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">read_cache<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call> <operator pos:line="9" pos:column="34">&lt;<pos:position pos:line="9" pos:column="38"/></operator> <literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">die<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="string" pos:line="10" pos:column="29">"index file corrupt"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">pos<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">cache_name_pos<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><literal type="string" pos:line="11" pos:column="38">".gitmodules"<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="53">11<pos:position pos:line="11" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">pos<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&lt;<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29"> <block pos:line="12" pos:column="30">{ <comment type="block" pos:line="12" pos:column="32">/* .gitmodules not found or isn't merged */</comment>
			<expr_stmt><expr><name pos:line="13" pos:column="25">pos<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="31">-<pos:position pos:line="13" pos:column="32"/></operator><literal type="number" pos:line="13" pos:column="32">1<pos:position pos:line="13" pos:column="33"/></literal> <operator pos:line="13" pos:column="34">-<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">pos<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">active_nr<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">&gt;<pos:position pos:line="14" pos:column="43"/></operator> <name pos:line="14" pos:column="41">pos<pos:position pos:line="14" pos:column="44"/></name></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{  <comment type="block" pos:line="14" pos:column="49">/* there is a .gitmodules */</comment>
				<decl_stmt><decl><type><specifier pos:line="15" pos:column="33">const<pos:position pos:line="15" pos:column="38"/></specifier> <name><name pos:line="15" pos:column="39">struct<pos:position pos:line="15" pos:column="45"/></name> <name pos:line="15" pos:column="46">cache_entry<pos:position pos:line="15" pos:column="57"/></name></name> <modifier pos:line="15" pos:column="58">*<pos:position pos:line="15" pos:column="59"/></modifier></type><name pos:line="15" pos:column="59">ce<pos:position pos:line="15" pos:column="61"/></name> <init pos:line="15" pos:column="62">= <expr><name><name pos:line="15" pos:column="64">active_cache<pos:position pos:line="15" pos:column="76"/></name><index pos:line="15" pos:column="76">[<expr><name pos:line="15" pos:column="77">pos<pos:position pos:line="15" pos:column="80"/></name></expr>]<pos:position pos:line="15" pos:column="81"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="82"/></decl_stmt>
				<if pos:line="16" pos:column="33">if <condition pos:line="16" pos:column="36">(<expr><call><name pos:line="16" pos:column="37">ce_namelen<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">ce<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call> <operator pos:line="16" pos:column="52">==<pos:position pos:line="16" pos:column="54"/></operator> <literal type="number" pos:line="16" pos:column="55">11<pos:position pos:line="16" pos:column="57"/></literal> <operator pos:line="16" pos:column="58">&amp;&amp;<pos:position pos:line="16" pos:column="68"/></operator>
				    <operator pos:line="17" pos:column="37">!<pos:position pos:line="17" pos:column="38"/></operator><call><name pos:line="17" pos:column="38">memcmp<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name><name pos:line="17" pos:column="45">ce<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">-&gt;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="49">name<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="55">".gitmodules"<pos:position pos:line="17" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="70">11<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="74"/></condition><then pos:line="17" pos:column="74">
					<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="41">gitmodules_is_unmerged<pos:position pos:line="18" pos:column="63"/></name> <operator pos:line="18" pos:column="64">=<pos:position pos:line="18" pos:column="65"/></operator> <literal type="number" pos:line="18" pos:column="66">1<pos:position pos:line="18" pos:column="67"/></literal></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt></block></then></if>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <elseif pos:line="20" pos:column="19">else <if pos:line="20" pos:column="24">if <condition pos:line="20" pos:column="27">(<expr><name pos:line="20" pos:column="28">pos<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">&lt;<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="34">active_nr<pos:position pos:line="20" pos:column="43"/></name></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
			<decl_stmt><decl><type><name><name pos:line="21" pos:column="25">struct<pos:position pos:line="21" pos:column="31"/></name> <name pos:line="21" pos:column="32">stat<pos:position pos:line="21" pos:column="36"/></name></name></type> <name pos:line="21" pos:column="37">st<pos:position pos:line="21" pos:column="39"/></name></decl>;<pos:position pos:line="21" pos:column="40"/></decl_stmt>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><call><name pos:line="22" pos:column="29">lstat<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><literal type="string" pos:line="22" pos:column="35">".gitmodules"<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="50">&amp;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="51">st<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call> <operator pos:line="22" pos:column="55">==<pos:position pos:line="22" pos:column="57"/></operator> <literal type="number" pos:line="22" pos:column="58">0<pos:position pos:line="22" pos:column="59"/></literal> <operator pos:line="22" pos:column="60">&amp;&amp;<pos:position pos:line="22" pos:column="70"/></operator>
			    <call><name pos:line="23" pos:column="29">ce_match_stat<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name><name pos:line="23" pos:column="43">active_cache<pos:position pos:line="23" pos:column="55"/></name><index pos:line="23" pos:column="55">[<expr><name pos:line="23" pos:column="56">pos<pos:position pos:line="23" pos:column="59"/></name></expr>]<pos:position pos:line="23" pos:column="60"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="62">&amp;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="63">st<pos:position pos:line="23" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="67">0<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call> <operator pos:line="23" pos:column="70">&amp;<pos:position pos:line="23" pos:column="75"/></operator> <name pos:line="23" pos:column="72">DATA_CHANGED<pos:position pos:line="23" pos:column="84"/></name></expr>)<pos:position pos:line="23" pos:column="85"/></condition><then pos:line="23" pos:column="85">
				<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="33">gitmodules_is_modified<pos:position pos:line="24" pos:column="55"/></name> <operator pos:line="24" pos:column="56">=<pos:position pos:line="24" pos:column="57"/></operator> <literal type="number" pos:line="24" pos:column="58">1<pos:position pos:line="24" pos:column="59"/></literal></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt></block></then></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">gitmodules_is_unmerged<pos:position pos:line="27" pos:column="44"/></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">git_config_from_file<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name pos:line="28" pos:column="46">submodule_config<pos:position pos:line="28" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="64">gitmodules_path<pos:position pos:line="28" pos:column="79"/></name><operator pos:line="28" pos:column="79">.<pos:position pos:line="28" pos:column="80"/></operator><name pos:line="28" pos:column="80">buf<pos:position pos:line="28" pos:column="83"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="85">NULL<pos:position pos:line="28" pos:column="89"/></name></expr></argument>)<pos:position pos:line="28" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="91"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">strbuf_release<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">&amp;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="33">gitmodules_path<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3694_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">compile_pcre_regexp<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">grep_pat<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name><name pos:line="1" pos:column="59">struct<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">grep_opt<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">opt<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">error<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">erroffset<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">options<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">PCRE_MULTILINE<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">opt<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">ignore_case<pos:position pos:line="7" pos:column="29"/></name></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30"> <block pos:line="7" pos:column="31">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">has_non_ascii<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name><name pos:line="8" pos:column="35">p<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">pattern<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="25">p<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">pcre_tables<pos:position pos:line="9" pos:column="39"/></name></name> <operator pos:line="9" pos:column="40">=<pos:position pos:line="9" pos:column="41"/></operator> <call><name pos:line="9" pos:column="42">pcre_maketables<pos:position pos:line="9" pos:column="57"/></name><argument_list pos:line="9" pos:column="57">()<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="10" pos:column="17">options<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">|=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">PCRE_CASELESS<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">is_utf8_locale<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">()<pos:position pos:line="12" pos:column="29"/></argument_list></call> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <call><name pos:line="12" pos:column="33">has_non_ascii<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name><name pos:line="12" pos:column="47">p<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">pattern<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">options<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">|=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">PCRE_UTF8<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">pcre_regexp<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">pcre_compile<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name><name pos:line="15" pos:column="39">p<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">pattern<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">options<pos:position pos:line="15" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="60">&amp;<pos:position pos:line="15" pos:column="65"/></operator><name pos:line="15" pos:column="61">error<pos:position pos:line="15" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="68">&amp;<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="69">erroffset<pos:position pos:line="15" pos:column="78"/></name></expr></argument>,
				      <argument><expr><name><name pos:line="16" pos:column="39">p<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">pcre_tables<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">p<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">pcre_regexp<pos:position pos:line="17" pos:column="28"/></name></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">compile_regexp_failed<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">p<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">error<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">p<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">pcre_extra_info<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">pcre_study<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name><name pos:line="20" pos:column="41">p<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">pcre_regexp<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="57">0<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="60">&amp;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="61">error<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">p<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">pcre_extra_info<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">&amp;&amp;<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="36">error<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">die<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><literal type="string" pos:line="22" pos:column="21">"%s"<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">error<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></then></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

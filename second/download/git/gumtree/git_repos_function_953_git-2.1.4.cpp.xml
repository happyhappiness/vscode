<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_953_git-2.1.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">end_url_with_slash<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">strbuf<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">buf<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">url<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">strbuf_addstr<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="28">url<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="33"/></expr_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">buf<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">len<pos:position pos:line="4" pos:column="21"/></name></name> <operator pos:line="4" pos:column="22">&amp;&amp;<pos:position pos:line="4" pos:column="32"/></operator> <name><name pos:line="4" pos:column="25">buf<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">buf<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><name><name pos:line="4" pos:column="34">buf<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">-&gt;<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="39">len<pos:position pos:line="4" pos:column="42"/></name></name> <operator pos:line="4" pos:column="43">-<pos:position pos:line="4" pos:column="44"/></operator> <literal type="number" pos:line="4" pos:column="45">1<pos:position pos:line="4" pos:column="46"/></literal></expr>]<pos:position pos:line="4" pos:column="47"/></index></name> <operator pos:line="4" pos:column="48">!=<pos:position pos:line="4" pos:column="50"/></operator> <literal type="char" pos:line="4" pos:column="51">'/'<pos:position pos:line="4" pos:column="54"/></literal></expr>)<pos:position pos:line="4" pos:column="55"/></condition><then pos:line="4" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">strbuf_addch<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">buf<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="35">'/'<pos:position pos:line="5" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="40"/></expr_stmt></block></then></if>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

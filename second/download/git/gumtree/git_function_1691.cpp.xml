<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1691.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">walker_fetch<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">walker<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">walker<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">targets<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">target<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		 <parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier><modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">write_ref<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">write_ref_log_details<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref_lock<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">lock<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><call><name pos:line="4" pos:column="34">xcalloc<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><name pos:line="4" pos:column="42">targets<pos:position pos:line="4" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="51">sizeof<argument_list pos:line="4" pos:column="57">(<argument><expr pos:line="4" pos:column="58">struct <name pos:line="4" pos:column="65">ref_lock<pos:position pos:line="4" pos:column="73"/></name> <operator pos:line="4" pos:column="74">*<pos:position pos:line="4" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="78"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">sha1<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">xmalloc<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">targets<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">*<pos:position pos:line="5" pos:column="48"/></operator> <literal type="number" pos:line="5" pos:column="49">20<pos:position pos:line="5" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">msg<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">to_free<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">save_commit_buffer<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="25">targets<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></condition> <incr><expr><name pos:line="13" pos:column="34">i<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">++<pos:position pos:line="13" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="38"/></control> <block pos:line="13" pos:column="39">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">write_ref<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">||<pos:position pos:line="14" pos:column="34"/></operator> <operator pos:line="14" pos:column="35">!<pos:position pos:line="14" pos:column="36"/></operator><name><name pos:line="14" pos:column="36">write_ref<pos:position pos:line="14" pos:column="45"/></name><index pos:line="14" pos:column="45">[<expr><name pos:line="14" pos:column="46">i<pos:position pos:line="14" pos:column="47"/></name></expr>]<pos:position pos:line="14" pos:column="48"/></index></name></expr>)<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name><name pos:line="17" pos:column="17">lock<pos:position pos:line="17" pos:column="21"/></name><index pos:line="17" pos:column="21">[<expr><name pos:line="17" pos:column="22">i<pos:position pos:line="17" pos:column="23"/></name></expr>]<pos:position pos:line="17" pos:column="24"/></index></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">lock_ref_sha1<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name><name pos:line="17" pos:column="41">write_ref<pos:position pos:line="17" pos:column="50"/></name><index pos:line="17" pos:column="50">[<expr><name pos:line="17" pos:column="51">i<pos:position pos:line="17" pos:column="52"/></name></expr>]<pos:position pos:line="17" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">NULL<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name><name pos:line="18" pos:column="22">lock<pos:position pos:line="18" pos:column="26"/></name><index pos:line="18" pos:column="26">[<expr><name pos:line="18" pos:column="27">i<pos:position pos:line="18" pos:column="28"/></name></expr>]<pos:position pos:line="18" pos:column="29"/></index></name></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30"> <block pos:line="18" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">error<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"Can't lock ref %s"<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="52">write_ref<pos:position pos:line="19" pos:column="61"/></name><index pos:line="19" pos:column="61">[<expr><name pos:line="19" pos:column="62">i<pos:position pos:line="19" pos:column="63"/></name></expr>]<pos:position pos:line="19" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
			<goto pos:line="20" pos:column="25">goto <name pos:line="20" pos:column="30">unlock_and_fail<pos:position pos:line="20" pos:column="45"/></name>;<pos:position pos:line="20" pos:column="46"/></goto>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></for>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">walker<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">get_recover<pos:position pos:line="24" pos:column="33"/></name></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">for_each_ref<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">mark_complete<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">NULL<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt></block></then></if>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="25">targets<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></condition> <incr><expr><name pos:line="27" pos:column="34">i<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">++<pos:position pos:line="27" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="38"/></control> <block pos:line="27" pos:column="39">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">interpret_target<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">walker<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="46">target<pos:position pos:line="28" pos:column="52"/></name><index pos:line="28" pos:column="52">[<expr><name pos:line="28" pos:column="53">i<pos:position pos:line="28" pos:column="54"/></name></expr>]<pos:position pos:line="28" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="57">&amp;<pos:position pos:line="28" pos:column="62"/></operator><name><name pos:line="28" pos:column="58">sha1<pos:position pos:line="28" pos:column="62"/></name><index pos:line="28" pos:column="62">[<expr><literal type="number" pos:line="28" pos:column="63">20<pos:position pos:line="28" pos:column="65"/></literal> <operator pos:line="28" pos:column="66">*<pos:position pos:line="28" pos:column="67"/></operator> <name pos:line="28" pos:column="68">i<pos:position pos:line="28" pos:column="69"/></name></expr>]<pos:position pos:line="28" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="72"/></condition><then pos:line="28" pos:column="72"> <block pos:line="28" pos:column="73">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">error<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><literal type="string" pos:line="29" pos:column="31">"Could not interpret response from server '%s' as something to pull"<pos:position pos:line="29" pos:column="99"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="101">target<pos:position pos:line="29" pos:column="107"/></name><index pos:line="29" pos:column="107">[<expr><name pos:line="29" pos:column="108">i<pos:position pos:line="29" pos:column="109"/></name></expr>]<pos:position pos:line="29" pos:column="110"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="112"/></expr_stmt>
			<goto pos:line="30" pos:column="25">goto <name pos:line="30" pos:column="30">unlock_and_fail<pos:position pos:line="30" pos:column="45"/></name>;<pos:position pos:line="30" pos:column="46"/></goto>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">process<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">walker<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="37">lookup_unknown_object<pos:position pos:line="32" pos:column="58"/></name><argument_list pos:line="32" pos:column="58">(<argument><expr><operator pos:line="32" pos:column="59">&amp;<pos:position pos:line="32" pos:column="64"/></operator><name><name pos:line="32" pos:column="60">sha1<pos:position pos:line="32" pos:column="64"/></name><index pos:line="32" pos:column="64">[<expr><literal type="number" pos:line="32" pos:column="65">20<pos:position pos:line="32" pos:column="67"/></literal> <operator pos:line="32" pos:column="68">*<pos:position pos:line="32" pos:column="69"/></operator> <name pos:line="32" pos:column="70">i<pos:position pos:line="32" pos:column="71"/></name></expr>]<pos:position pos:line="32" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="75"/></condition><then pos:line="32" pos:column="75">
			<block type="pseudo"><goto pos:line="33" pos:column="25">goto <name pos:line="33" pos:column="30">unlock_and_fail<pos:position pos:line="33" pos:column="45"/></name>;<pos:position pos:line="33" pos:column="46"/></goto></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></for>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">loop<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">walker<pos:position pos:line="36" pos:column="24"/></name></expr></argument>)<pos:position pos:line="36" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="26"/></condition><then pos:line="36" pos:column="26">
		<block type="pseudo"><goto pos:line="37" pos:column="17">goto <name pos:line="37" pos:column="22">unlock_and_fail<pos:position pos:line="37" pos:column="37"/></name>;<pos:position pos:line="37" pos:column="38"/></goto></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">write_ref_log_details<pos:position pos:line="39" pos:column="34"/></name></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">msg<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">to_free<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <call><name pos:line="40" pos:column="33">xstrfmt<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><literal type="string" pos:line="40" pos:column="41">"fetch from %s"<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="58">write_ref_log_details<pos:position pos:line="40" pos:column="79"/></name></expr></argument>)<pos:position pos:line="40" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="81"/></expr_stmt></block></then>
	<else pos:line="41" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">msg<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <literal type="string" pos:line="42" pos:column="23">"fetch (unknown)"<pos:position pos:line="42" pos:column="40"/></literal></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt></block></else></if>
	<for pos:line="43" pos:column="9">for <control pos:line="43" pos:column="13">(<init><expr><name pos:line="43" pos:column="14">i<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <literal type="number" pos:line="43" pos:column="18">0<pos:position pos:line="43" pos:column="19"/></literal></expr>;<pos:position pos:line="43" pos:column="20"/></init> <condition><expr><name pos:line="43" pos:column="21">i<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">&lt;<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="25">targets<pos:position pos:line="43" pos:column="32"/></name></expr>;<pos:position pos:line="43" pos:column="33"/></condition> <incr><expr><name pos:line="43" pos:column="34">i<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">++<pos:position pos:line="43" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="38"/></control> <block pos:line="43" pos:column="39">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">write_ref<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">||<pos:position pos:line="44" pos:column="34"/></operator> <operator pos:line="44" pos:column="35">!<pos:position pos:line="44" pos:column="36"/></operator><name><name pos:line="44" pos:column="36">write_ref<pos:position pos:line="44" pos:column="45"/></name><index pos:line="44" pos:column="45">[<expr><name pos:line="44" pos:column="46">i<pos:position pos:line="44" pos:column="47"/></name></expr>]<pos:position pos:line="44" pos:column="48"/></index></name></expr>)<pos:position pos:line="44" pos:column="49"/></condition><then pos:line="44" pos:column="49">
			<block type="pseudo"><continue pos:line="45" pos:column="25">continue;<pos:position pos:line="45" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="46" pos:column="17">ret<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">write_ref_sha1<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name><name pos:line="46" pos:column="38">lock<pos:position pos:line="46" pos:column="42"/></name><index pos:line="46" pos:column="42">[<expr><name pos:line="46" pos:column="43">i<pos:position pos:line="46" pos:column="44"/></name></expr>]<pos:position pos:line="46" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="47">&amp;<pos:position pos:line="46" pos:column="52"/></operator><name><name pos:line="46" pos:column="48">sha1<pos:position pos:line="46" pos:column="52"/></name><index pos:line="46" pos:column="52">[<expr><literal type="number" pos:line="46" pos:column="53">20<pos:position pos:line="46" pos:column="55"/></literal> <operator pos:line="46" pos:column="56">*<pos:position pos:line="46" pos:column="57"/></operator> <name pos:line="46" pos:column="58">i<pos:position pos:line="46" pos:column="59"/></name></expr>]<pos:position pos:line="46" pos:column="60"/></index></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">msg<pos:position pos:line="46" pos:column="65"/></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">lock<pos:position pos:line="47" pos:column="21"/></name><index pos:line="47" pos:column="21">[<expr><name pos:line="47" pos:column="22">i<pos:position pos:line="47" pos:column="23"/></name></expr>]<pos:position pos:line="47" pos:column="24"/></index></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="27">NULL<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">ret<pos:position pos:line="48" pos:column="24"/></name></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
			<block type="pseudo"><goto pos:line="49" pos:column="25">goto <name pos:line="49" pos:column="30">unlock_and_fail<pos:position pos:line="49" pos:column="45"/></name>;<pos:position pos:line="49" pos:column="46"/></goto></block></then></if>
	}<pos:position pos:line="50" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">free<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">to_free<pos:position pos:line="51" pos:column="21"/></name></expr></argument>)<pos:position pos:line="51" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>

	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>

<label><name pos:line="55" pos:column="1">unlock_and_fail<pos:position pos:line="55" pos:column="16"/></name>:<pos:position pos:line="55" pos:column="17"/></label>
	<for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="25">targets<pos:position pos:line="56" pos:column="32"/></name></expr>;<pos:position pos:line="56" pos:column="33"/></condition> <incr><expr><name pos:line="56" pos:column="34">i<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">++<pos:position pos:line="56" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="38"/></control>
		<block type="pseudo"><if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name><name pos:line="57" pos:column="21">lock<pos:position pos:line="57" pos:column="25"/></name><index pos:line="57" pos:column="25">[<expr><name pos:line="57" pos:column="26">i<pos:position pos:line="57" pos:column="27"/></name></expr>]<pos:position pos:line="57" pos:column="28"/></index></name></expr>)<pos:position pos:line="57" pos:column="29"/></condition><then pos:line="57" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">unlock_ref<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><name><name pos:line="58" pos:column="36">lock<pos:position pos:line="58" pos:column="40"/></name><index pos:line="58" pos:column="40">[<expr><name pos:line="58" pos:column="41">i<pos:position pos:line="58" pos:column="42"/></name></expr>]<pos:position pos:line="58" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt></block></then></if></block></for>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">free<pos:position pos:line="59" pos:column="13"/></name><argument_list pos:line="59" pos:column="13">(<argument><expr><name pos:line="59" pos:column="14">to_free<pos:position pos:line="59" pos:column="21"/></name></expr></argument>)<pos:position pos:line="59" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt>

	<return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_35.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">cut_ident_timestamp_part<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">string<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">ket<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">strrchr<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">string<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="37">'&gt;'<pos:position pos:line="3" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">ket<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">||<pos:position pos:line="4" pos:column="20"/></operator> <name><name pos:line="4" pos:column="21">ket<pos:position pos:line="4" pos:column="24"/></name><index pos:line="4" pos:column="24">[<expr><literal type="number" pos:line="4" pos:column="25">1<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name> <operator pos:line="4" pos:column="28">!=<pos:position pos:line="4" pos:column="30"/></operator> <literal type="char" pos:line="4" pos:column="31">' '<pos:position pos:line="4" pos:column="34"/></literal></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">die<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><call><name pos:line="5" pos:column="21">_<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><literal type="string" pos:line="5" pos:column="23">"Malformed ident string: '%s'"<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="56">string<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">++<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">ket<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="char" pos:line="6" pos:column="18">'\0'<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
	<return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">ket<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

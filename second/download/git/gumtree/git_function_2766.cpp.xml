<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2766.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_refs_to_temp_dir<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">strbuf<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">temp_dir<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">refspec_nr<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier><modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">refspec<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">refspec_nr<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></condition> <incr><expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">++<pos:position pos:line="6" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="41"/></control> <block pos:line="6" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">object_id<pos:position pos:line="7" pos:column="33"/></name></name></type> <name pos:line="7" pos:column="34">oid<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">ref<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">dwim_ref<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">refspec<pos:position pos:line="10" pos:column="37"/></name><index pos:line="10" pos:column="37">[<expr><name pos:line="10" pos:column="38">i<pos:position pos:line="10" pos:column="39"/></name></expr>]<pos:position pos:line="10" pos:column="40"/></index></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="42">strlen<pos:position pos:line="10" pos:column="48"/></name><argument_list pos:line="10" pos:column="48">(<argument><expr><name><name pos:line="10" pos:column="49">refspec<pos:position pos:line="10" pos:column="56"/></name><index pos:line="10" pos:column="56">[<expr><name pos:line="10" pos:column="57">i<pos:position pos:line="10" pos:column="58"/></name></expr>]<pos:position pos:line="10" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="62">oid<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">.<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">hash<pos:position pos:line="10" pos:column="70"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="72">&amp;<pos:position pos:line="10" pos:column="77"/></operator><name pos:line="10" pos:column="73">ref<pos:position pos:line="10" pos:column="76"/></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call> <operator pos:line="10" pos:column="78">!=<pos:position pos:line="10" pos:column="80"/></operator> <literal type="number" pos:line="10" pos:column="81">1<pos:position pos:line="10" pos:column="82"/></literal></expr>)<pos:position pos:line="10" pos:column="83"/></condition><then pos:line="10" pos:column="83">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><call><name pos:line="11" pos:column="32">error<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><literal type="string" pos:line="11" pos:column="38">"Could not get ref %s"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="62">refspec<pos:position pos:line="11" pos:column="69"/></name><index pos:line="11" pos:column="69">[<expr><name pos:line="11" pos:column="70">i<pos:position pos:line="11" pos:column="71"/></name></expr>]<pos:position pos:line="11" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></return></block></then></if>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">write_one_ref<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">ref<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="40">&amp;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="41">oid<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="46">0<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">temp_dir<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">free<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">ref<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
			<return pos:line="15" pos:column="25">return <expr><operator pos:line="15" pos:column="32">-<pos:position pos:line="15" pos:column="33"/></operator><literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></return>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">free<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">ref<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

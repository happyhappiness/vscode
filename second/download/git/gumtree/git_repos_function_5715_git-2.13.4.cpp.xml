<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5715_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">remove_dirs<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">strbuf<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">path<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">force_flag<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">dry_run<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">quiet<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">dir_gone<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">DIR<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">dir<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">quoted<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">STRBUF_INIT<pos:position pos:line="5" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">dirent<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">e<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">res<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="22">ret<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="31">gone<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><literal type="number" pos:line="7" pos:column="38">1<pos:position pos:line="7" pos:column="39"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="41">original_len<pos:position pos:line="7" pos:column="53"/></name> <init pos:line="7" pos:column="54">= <expr><name><name pos:line="7" pos:column="56">path<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">-&gt;<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="62">len<pos:position pos:line="7" pos:column="65"/></name></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="67">len<pos:position pos:line="7" pos:column="70"/></name></decl>;<pos:position pos:line="7" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">string_list<pos:position pos:line="8" pos:column="27"/></name></name></type> <name pos:line="8" pos:column="28">dels<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">STRING_LIST_INIT_DUP<pos:position pos:line="8" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>

	<expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">dir_gone<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">force_flag<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&amp;<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="27">REMOVE_DIR_KEEP_NESTED_GIT<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">)<pos:position pos:line="12" pos:column="54"/></operator> <operator pos:line="12" pos:column="55">&amp;&amp;<pos:position pos:line="12" pos:column="65"/></operator> <call><name pos:line="12" pos:column="58">is_nonbare_repository_dir<pos:position pos:line="12" pos:column="83"/></name><argument_list pos:line="12" pos:column="83">(<argument><expr><name pos:line="12" pos:column="84">path<pos:position pos:line="12" pos:column="88"/></name></expr></argument>)<pos:position pos:line="12" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="90"/></condition><then pos:line="12" pos:column="90"> <block pos:line="12" pos:column="91">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">quiet<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">quote_path_relative<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name><name pos:line="14" pos:column="45">path<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">buf<pos:position pos:line="14" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">prefix<pos:position pos:line="14" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="64">&amp;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="65">quoted<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">printf<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><ternary><condition><expr><name pos:line="15" pos:column="32">dry_run<pos:position pos:line="15" pos:column="39"/></name></expr> ?<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41">  <expr><call><name pos:line="15" pos:column="43">_<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><name pos:line="15" pos:column="45">msg_would_skip_git_dir<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="15" pos:column="69"/></then><else pos:line="15" pos:column="69">: <expr><call><name pos:line="15" pos:column="71">_<pos:position pos:line="15" pos:column="72"/></name><argument_list pos:line="15" pos:column="72">(<argument><expr><name pos:line="15" pos:column="73">msg_skip_git_dir<pos:position pos:line="15" pos:column="89"/></name></expr></argument>)<pos:position pos:line="15" pos:column="90"/></argument_list></call></expr></else></ternary></expr></argument>,
					<argument><expr><name><name pos:line="16" pos:column="41">quoted<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">.<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="48">buf<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>

		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">dir_gone<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">dir<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">opendir<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name><name pos:line="23" pos:column="23">path<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">buf<pos:position pos:line="23" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">dir<pos:position pos:line="24" pos:column="17"/></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18"> <block pos:line="24" pos:column="19">{
		<comment type="block" pos:line="25" pos:column="17">/* an empty dir could be removed even if it is unreadble */</comment>
		<expr_stmt><expr><name pos:line="26" pos:column="17">res<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="26" pos:column="23">dry_run<pos:position pos:line="26" pos:column="30"/></name></expr> ?<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32"> <expr><literal type="number" pos:line="26" pos:column="33">0<pos:position pos:line="26" pos:column="34"/></literal></expr> <pos:position pos:line="26" pos:column="35"/></then><else pos:line="26" pos:column="35">: <expr><call><name pos:line="26" pos:column="37">rmdir<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name><name pos:line="26" pos:column="43">path<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">buf<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">res<pos:position pos:line="27" pos:column="24"/></name></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25"> <block pos:line="27" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">int<pos:position pos:line="28" pos:column="28"/></name></type> <name pos:line="28" pos:column="29">saved_errno<pos:position pos:line="28" pos:column="40"/></name> <init pos:line="28" pos:column="41">= <expr><name pos:line="28" pos:column="43">errno<pos:position pos:line="28" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="49"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">quote_path_relative<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name><name pos:line="29" pos:column="45">path<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">buf<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">prefix<pos:position pos:line="29" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="64">&amp;<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="65">quoted<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">errno<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">saved_errno<pos:position pos:line="30" pos:column="44"/></name></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">warning_errno<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><call><name pos:line="31" pos:column="39">_<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">msg_warn_remove_failed<pos:position pos:line="31" pos:column="63"/></name></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="66">quoted<pos:position pos:line="31" pos:column="72"/></name><operator pos:line="31" pos:column="72">.<pos:position pos:line="31" pos:column="73"/></operator><name pos:line="31" pos:column="73">buf<pos:position pos:line="31" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">dir_gone<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">=<pos:position pos:line="32" pos:column="36"/></operator> <literal type="number" pos:line="32" pos:column="37">0<pos:position pos:line="32" pos:column="38"/></literal></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<return pos:line="34" pos:column="17">return <expr><name pos:line="34" pos:column="24">res<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">strbuf_complete<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">path<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="31">'/'<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name pos:line="39" pos:column="9">len<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name><name pos:line="39" pos:column="15">path<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">len<pos:position pos:line="39" pos:column="24"/></name></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">e<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <call><name pos:line="40" pos:column="21">readdir<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">dir<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call><operator pos:line="40" pos:column="33">)<pos:position pos:line="40" pos:column="34"/></operator> <operator pos:line="40" pos:column="35">!=<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">NULL<pos:position pos:line="40" pos:column="42"/></name></expr>)<pos:position pos:line="40" pos:column="43"/></condition> <block pos:line="40" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="41" pos:column="17">struct<pos:position pos:line="41" pos:column="23"/></name> <name pos:line="41" pos:column="24">stat<pos:position pos:line="41" pos:column="28"/></name></name></type> <name pos:line="41" pos:column="29">st<pos:position pos:line="41" pos:column="31"/></name></decl>;<pos:position pos:line="41" pos:column="32"/></decl_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name pos:line="42" pos:column="21">is_dot_or_dotdot<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name><name pos:line="42" pos:column="38">e<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">d_name<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49">
			<block type="pseudo"><continue pos:line="43" pos:column="25">continue;<pos:position pos:line="43" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="45" pos:column="17">strbuf_setlen<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">path<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="37">len<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">strbuf_addstr<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">path<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="37">e<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">d_name<pos:position pos:line="46" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><call><name pos:line="47" pos:column="21">lstat<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name><name pos:line="47" pos:column="27">path<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">buf<pos:position pos:line="47" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="38">&amp;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="39">st<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="43"/></condition><then pos:line="47" pos:column="43">
			<block type="pseudo"><empty_stmt pos:line="48" pos:column="25">;<pos:position pos:line="48" pos:column="26"/></empty_stmt></block></then> <comment type="block" pos:line="48" pos:column="27">/* fall thru */</comment>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><call><name pos:line="49" pos:column="26">S_ISDIR<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name><name pos:line="49" pos:column="34">st<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">.<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="37">st_mode<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="46"/></condition><then pos:line="49" pos:column="46"> <block pos:line="49" pos:column="47">{
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><call><name pos:line="50" pos:column="29">remove_dirs<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">path<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">prefix<pos:position pos:line="50" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="55">force_flag<pos:position pos:line="50" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="67">dry_run<pos:position pos:line="50" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="76">quiet<pos:position pos:line="50" pos:column="81"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="83">&amp;<pos:position pos:line="50" pos:column="88"/></operator><name pos:line="50" pos:column="84">gone<pos:position pos:line="50" pos:column="88"/></name></expr></argument>)<pos:position pos:line="50" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="90"/></condition><then pos:line="50" pos:column="90">
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">ret<pos:position pos:line="51" pos:column="36"/></name> <operator pos:line="51" pos:column="37">=<pos:position pos:line="51" pos:column="38"/></operator> <literal type="number" pos:line="51" pos:column="39">1<pos:position pos:line="51" pos:column="40"/></literal></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt></block></then></if>
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name pos:line="52" pos:column="29">gone<pos:position pos:line="52" pos:column="33"/></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
				<expr_stmt><expr><call><name pos:line="53" pos:column="33">quote_path_relative<pos:position pos:line="53" pos:column="52"/></name><argument_list pos:line="53" pos:column="52">(<argument><expr><name><name pos:line="53" pos:column="53">path<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">-&gt;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="59">buf<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="64">prefix<pos:position pos:line="53" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="72">&amp;<pos:position pos:line="53" pos:column="77"/></operator><name pos:line="53" pos:column="73">quoted<pos:position pos:line="53" pos:column="79"/></name></expr></argument>)<pos:position pos:line="53" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="81"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="54" pos:column="33">string_list_append<pos:position pos:line="54" pos:column="51"/></name><argument_list pos:line="54" pos:column="51">(<argument><expr><operator pos:line="54" pos:column="52">&amp;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="53">dels<pos:position pos:line="54" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="59">quoted<pos:position pos:line="54" pos:column="65"/></name><operator pos:line="54" pos:column="65">.<pos:position pos:line="54" pos:column="66"/></operator><name pos:line="54" pos:column="66">buf<pos:position pos:line="54" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="55" pos:column="26"/></block></then> <else pos:line="55" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><operator pos:line="56" pos:column="33">*<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="34">dir_gone<pos:position pos:line="56" pos:column="42"/></name> <operator pos:line="56" pos:column="43">=<pos:position pos:line="56" pos:column="44"/></operator> <literal type="number" pos:line="56" pos:column="45">0<pos:position pos:line="56" pos:column="46"/></literal></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt></block></else></if>
			<continue pos:line="57" pos:column="25">continue;<pos:position pos:line="57" pos:column="34"/></continue>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if></elseif> <else pos:line="58" pos:column="19">else <block pos:line="58" pos:column="24">{
			<expr_stmt><expr><name pos:line="59" pos:column="25">res<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">=<pos:position pos:line="59" pos:column="30"/></operator> <ternary><condition><expr><name pos:line="59" pos:column="31">dry_run<pos:position pos:line="59" pos:column="38"/></name></expr> ?<pos:position pos:line="59" pos:column="40"/></condition><then pos:line="59" pos:column="40"> <expr><literal type="number" pos:line="59" pos:column="41">0<pos:position pos:line="59" pos:column="42"/></literal></expr> <pos:position pos:line="59" pos:column="43"/></then><else pos:line="59" pos:column="43">: <expr><call><name pos:line="59" pos:column="45">unlink<pos:position pos:line="59" pos:column="51"/></name><argument_list pos:line="59" pos:column="51">(<argument><expr><name><name pos:line="59" pos:column="52">path<pos:position pos:line="59" pos:column="56"/></name><operator pos:line="59" pos:column="56">-&gt;<pos:position pos:line="59" pos:column="61"/></operator><name pos:line="59" pos:column="58">buf<pos:position pos:line="59" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="62"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="59" pos:column="63"/></expr_stmt>
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><operator pos:line="60" pos:column="29">!<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="30">res<pos:position pos:line="60" pos:column="33"/></name></expr>)<pos:position pos:line="60" pos:column="34"/></condition><then pos:line="60" pos:column="34"> <block pos:line="60" pos:column="35">{
				<expr_stmt><expr><call><name pos:line="61" pos:column="33">quote_path_relative<pos:position pos:line="61" pos:column="52"/></name><argument_list pos:line="61" pos:column="52">(<argument><expr><name><name pos:line="61" pos:column="53">path<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">-&gt;<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="59">buf<pos:position pos:line="61" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="64">prefix<pos:position pos:line="61" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="72">&amp;<pos:position pos:line="61" pos:column="77"/></operator><name pos:line="61" pos:column="73">quoted<pos:position pos:line="61" pos:column="79"/></name></expr></argument>)<pos:position pos:line="61" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="81"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="62" pos:column="33">string_list_append<pos:position pos:line="62" pos:column="51"/></name><argument_list pos:line="62" pos:column="51">(<argument><expr><operator pos:line="62" pos:column="52">&amp;<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="53">dels<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="59">quoted<pos:position pos:line="62" pos:column="65"/></name><operator pos:line="62" pos:column="65">.<pos:position pos:line="62" pos:column="66"/></operator><name pos:line="62" pos:column="66">buf<pos:position pos:line="62" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="71"/></expr_stmt>
			}<pos:position pos:line="63" pos:column="26"/></block></then> <else pos:line="63" pos:column="27">else <block pos:line="63" pos:column="32">{
				<decl_stmt><decl><type><name pos:line="64" pos:column="33">int<pos:position pos:line="64" pos:column="36"/></name></type> <name pos:line="64" pos:column="37">saved_errno<pos:position pos:line="64" pos:column="48"/></name> <init pos:line="64" pos:column="49">= <expr><name pos:line="64" pos:column="51">errno<pos:position pos:line="64" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="64" pos:column="57"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">quote_path_relative<pos:position pos:line="65" pos:column="52"/></name><argument_list pos:line="65" pos:column="52">(<argument><expr><name><name pos:line="65" pos:column="53">path<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">-&gt;<pos:position pos:line="65" pos:column="62"/></operator><name pos:line="65" pos:column="59">buf<pos:position pos:line="65" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">prefix<pos:position pos:line="65" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="72">&amp;<pos:position pos:line="65" pos:column="77"/></operator><name pos:line="65" pos:column="73">quoted<pos:position pos:line="65" pos:column="79"/></name></expr></argument>)<pos:position pos:line="65" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="81"/></expr_stmt>
				<expr_stmt><expr><name pos:line="66" pos:column="33">errno<pos:position pos:line="66" pos:column="38"/></name> <operator pos:line="66" pos:column="39">=<pos:position pos:line="66" pos:column="40"/></operator> <name pos:line="66" pos:column="41">saved_errno<pos:position pos:line="66" pos:column="52"/></name></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="67" pos:column="33">warning_errno<pos:position pos:line="67" pos:column="46"/></name><argument_list pos:line="67" pos:column="46">(<argument><expr><call><name pos:line="67" pos:column="47">_<pos:position pos:line="67" pos:column="48"/></name><argument_list pos:line="67" pos:column="48">(<argument><expr><name pos:line="67" pos:column="49">msg_warn_remove_failed<pos:position pos:line="67" pos:column="71"/></name></expr></argument>)<pos:position pos:line="67" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="74">quoted<pos:position pos:line="67" pos:column="80"/></name><operator pos:line="67" pos:column="80">.<pos:position pos:line="67" pos:column="81"/></operator><name pos:line="67" pos:column="81">buf<pos:position pos:line="67" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="86"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="68" pos:column="33">*<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="34">dir_gone<pos:position pos:line="68" pos:column="42"/></name> <operator pos:line="68" pos:column="43">=<pos:position pos:line="68" pos:column="44"/></operator> <literal type="number" pos:line="68" pos:column="45">0<pos:position pos:line="68" pos:column="46"/></literal></expr>;<pos:position pos:line="68" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="69" pos:column="33">ret<pos:position pos:line="69" pos:column="36"/></name> <operator pos:line="69" pos:column="37">=<pos:position pos:line="69" pos:column="38"/></operator> <literal type="number" pos:line="69" pos:column="39">1<pos:position pos:line="69" pos:column="40"/></literal></expr>;<pos:position pos:line="69" pos:column="41"/></expr_stmt>
			}<pos:position pos:line="70" pos:column="26"/></block></else></if>
			<continue pos:line="71" pos:column="25">continue;<pos:position pos:line="71" pos:column="34"/></continue>
		}<pos:position pos:line="72" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="74" pos:column="17">/* path too long, stat fails, or non-directory still exists */</comment>
		<expr_stmt><expr><operator pos:line="75" pos:column="17">*<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">dir_gone<pos:position pos:line="75" pos:column="26"/></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator> <literal type="number" pos:line="75" pos:column="29">0<pos:position pos:line="75" pos:column="30"/></literal></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="76" pos:column="17">ret<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <literal type="number" pos:line="76" pos:column="23">1<pos:position pos:line="76" pos:column="24"/></literal></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt>
		<break pos:line="77" pos:column="17">break;<pos:position pos:line="77" pos:column="23"/></break>
	}<pos:position pos:line="78" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">closedir<pos:position pos:line="79" pos:column="17"/></name><argument_list pos:line="79" pos:column="17">(<argument><expr><name pos:line="79" pos:column="18">dir<pos:position pos:line="79" pos:column="21"/></name></expr></argument>)<pos:position pos:line="79" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="81" pos:column="9">strbuf_setlen<pos:position pos:line="81" pos:column="22"/></name><argument_list pos:line="81" pos:column="22">(<argument><expr><name pos:line="81" pos:column="23">path<pos:position pos:line="81" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="29">original_len<pos:position pos:line="81" pos:column="41"/></name></expr></argument>)<pos:position pos:line="81" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="43"/></expr_stmt>

	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><operator pos:line="83" pos:column="13">*<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="14">dir_gone<pos:position pos:line="83" pos:column="22"/></name></expr>)<pos:position pos:line="83" pos:column="23"/></condition><then pos:line="83" pos:column="23"> <block pos:line="83" pos:column="24">{
		<expr_stmt><expr><name pos:line="84" pos:column="17">res<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="84" pos:column="23">dry_run<pos:position pos:line="84" pos:column="30"/></name></expr> ?<pos:position pos:line="84" pos:column="32"/></condition><then pos:line="84" pos:column="32"> <expr><literal type="number" pos:line="84" pos:column="33">0<pos:position pos:line="84" pos:column="34"/></literal></expr> <pos:position pos:line="84" pos:column="35"/></then><else pos:line="84" pos:column="35">: <expr><call><name pos:line="84" pos:column="37">rmdir<pos:position pos:line="84" pos:column="42"/></name><argument_list pos:line="84" pos:column="42">(<argument><expr><name><name pos:line="84" pos:column="43">path<pos:position pos:line="84" pos:column="47"/></name><operator pos:line="84" pos:column="47">-&gt;<pos:position pos:line="84" pos:column="52"/></operator><name pos:line="84" pos:column="49">buf<pos:position pos:line="84" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><operator pos:line="85" pos:column="21">!<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">res<pos:position pos:line="85" pos:column="25"/></name></expr>)<pos:position pos:line="85" pos:column="26"/></condition><then pos:line="85" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="86" pos:column="25">*<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="26">dir_gone<pos:position pos:line="86" pos:column="34"/></name> <operator pos:line="86" pos:column="35">=<pos:position pos:line="86" pos:column="36"/></operator> <literal type="number" pos:line="86" pos:column="37">1<pos:position pos:line="86" pos:column="38"/></literal></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt></block></then>
		<else pos:line="87" pos:column="17">else <block pos:line="87" pos:column="22">{
			<decl_stmt><decl><type><name pos:line="88" pos:column="25">int<pos:position pos:line="88" pos:column="28"/></name></type> <name pos:line="88" pos:column="29">saved_errno<pos:position pos:line="88" pos:column="40"/></name> <init pos:line="88" pos:column="41">= <expr><name pos:line="88" pos:column="43">errno<pos:position pos:line="88" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="88" pos:column="49"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">quote_path_relative<pos:position pos:line="89" pos:column="44"/></name><argument_list pos:line="89" pos:column="44">(<argument><expr><name><name pos:line="89" pos:column="45">path<pos:position pos:line="89" pos:column="49"/></name><operator pos:line="89" pos:column="49">-&gt;<pos:position pos:line="89" pos:column="54"/></operator><name pos:line="89" pos:column="51">buf<pos:position pos:line="89" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="56">prefix<pos:position pos:line="89" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="64">&amp;<pos:position pos:line="89" pos:column="69"/></operator><name pos:line="89" pos:column="65">quoted<pos:position pos:line="89" pos:column="71"/></name></expr></argument>)<pos:position pos:line="89" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="90" pos:column="25">errno<pos:position pos:line="90" pos:column="30"/></name> <operator pos:line="90" pos:column="31">=<pos:position pos:line="90" pos:column="32"/></operator> <name pos:line="90" pos:column="33">saved_errno<pos:position pos:line="90" pos:column="44"/></name></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">warning_errno<pos:position pos:line="91" pos:column="38"/></name><argument_list pos:line="91" pos:column="38">(<argument><expr><call><name pos:line="91" pos:column="39">_<pos:position pos:line="91" pos:column="40"/></name><argument_list pos:line="91" pos:column="40">(<argument><expr><name pos:line="91" pos:column="41">msg_warn_remove_failed<pos:position pos:line="91" pos:column="63"/></name></expr></argument>)<pos:position pos:line="91" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="66">quoted<pos:position pos:line="91" pos:column="72"/></name><operator pos:line="91" pos:column="72">.<pos:position pos:line="91" pos:column="73"/></operator><name pos:line="91" pos:column="73">buf<pos:position pos:line="91" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="92" pos:column="25">*<pos:position pos:line="92" pos:column="26"/></operator><name pos:line="92" pos:column="26">dir_gone<pos:position pos:line="92" pos:column="34"/></name> <operator pos:line="92" pos:column="35">=<pos:position pos:line="92" pos:column="36"/></operator> <literal type="number" pos:line="92" pos:column="37">0<pos:position pos:line="92" pos:column="38"/></literal></expr>;<pos:position pos:line="92" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="93" pos:column="25">ret<pos:position pos:line="93" pos:column="28"/></name> <operator pos:line="93" pos:column="29">=<pos:position pos:line="93" pos:column="30"/></operator> <literal type="number" pos:line="93" pos:column="31">1<pos:position pos:line="93" pos:column="32"/></literal></expr>;<pos:position pos:line="93" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="94" pos:column="18"/></block></else></if>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><operator pos:line="97" pos:column="13">!<pos:position pos:line="97" pos:column="14"/></operator><operator pos:line="97" pos:column="14">*<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">dir_gone<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">&amp;&amp;<pos:position pos:line="97" pos:column="34"/></operator> <operator pos:line="97" pos:column="27">!<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="28">quiet<pos:position pos:line="97" pos:column="33"/></name></expr>)<pos:position pos:line="97" pos:column="34"/></condition><then pos:line="97" pos:column="34"> <block pos:line="97" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="98" pos:column="17">int<pos:position pos:line="98" pos:column="20"/></name></type> <name pos:line="98" pos:column="21">i<pos:position pos:line="98" pos:column="22"/></name></decl>;<pos:position pos:line="98" pos:column="23"/></decl_stmt>
		<for pos:line="99" pos:column="17">for <control pos:line="99" pos:column="21">(<init><expr><name pos:line="99" pos:column="22">i<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="26">0<pos:position pos:line="99" pos:column="27"/></literal></expr>;<pos:position pos:line="99" pos:column="28"/></init> <condition><expr><name pos:line="99" pos:column="29">i<pos:position pos:line="99" pos:column="30"/></name> <operator pos:line="99" pos:column="31">&lt;<pos:position pos:line="99" pos:column="35"/></operator> <name><name pos:line="99" pos:column="33">dels<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">.<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="38">nr<pos:position pos:line="99" pos:column="40"/></name></name></expr>;<pos:position pos:line="99" pos:column="41"/></condition> <incr><expr><name pos:line="99" pos:column="42">i<pos:position pos:line="99" pos:column="43"/></name><operator pos:line="99" pos:column="43">++<pos:position pos:line="99" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="99" pos:column="46"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="25">printf<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><ternary><condition><expr><name pos:line="100" pos:column="32">dry_run<pos:position pos:line="100" pos:column="39"/></name></expr> ?<pos:position pos:line="100" pos:column="41"/></condition><then pos:line="100" pos:column="41">  <expr><call><name pos:line="100" pos:column="43">_<pos:position pos:line="100" pos:column="44"/></name><argument_list pos:line="100" pos:column="44">(<argument><expr><name pos:line="100" pos:column="45">msg_would_remove<pos:position pos:line="100" pos:column="61"/></name></expr></argument>)<pos:position pos:line="100" pos:column="62"/></argument_list></call></expr> <pos:position pos:line="100" pos:column="63"/></then><else pos:line="100" pos:column="63">: <expr><call><name pos:line="100" pos:column="65">_<pos:position pos:line="100" pos:column="66"/></name><argument_list pos:line="100" pos:column="66">(<argument><expr><name pos:line="100" pos:column="67">msg_remove<pos:position pos:line="100" pos:column="77"/></name></expr></argument>)<pos:position pos:line="100" pos:column="78"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="80">dels<pos:position pos:line="100" pos:column="84"/></name><operator pos:line="100" pos:column="84">.<pos:position pos:line="100" pos:column="85"/></operator><name pos:line="100" pos:column="85">items<pos:position pos:line="100" pos:column="90"/></name><index pos:line="100" pos:column="90">[<expr><name pos:line="100" pos:column="91">i<pos:position pos:line="100" pos:column="92"/></name></expr>]<pos:position pos:line="100" pos:column="93"/></index></name><operator pos:line="100" pos:column="93">.<pos:position pos:line="100" pos:column="94"/></operator><name pos:line="100" pos:column="94">string<pos:position pos:line="100" pos:column="100"/></name></expr></argument>)<pos:position pos:line="100" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="102"/></expr_stmt></block></for>
	}<pos:position pos:line="101" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">string_list_clear<pos:position pos:line="102" pos:column="26"/></name><argument_list pos:line="102" pos:column="26">(<argument><expr><operator pos:line="102" pos:column="27">&amp;<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="28">dels<pos:position pos:line="102" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="34">0<pos:position pos:line="102" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="37"/></expr_stmt>
	<return pos:line="103" pos:column="9">return <expr><name pos:line="103" pos:column="16">ret<pos:position pos:line="103" pos:column="19"/></name></expr>;<pos:position pos:line="103" pos:column="20"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_293_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">notes_rewrite_config<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">k<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">v<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">void<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">cb<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">notes_rewrite_cfg<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">c<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><name pos:line="3" pos:column="39">cb<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">starts_with<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">k<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="28">"notes.rewrite."<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call> <operator pos:line="4" pos:column="46">&amp;&amp;<pos:position pos:line="4" pos:column="56"/></operator> <operator pos:line="4" pos:column="49">!<pos:position pos:line="4" pos:column="50"/></operator><call><name pos:line="4" pos:column="50">strcmp<pos:position pos:line="4" pos:column="56"/></name><argument_list pos:line="4" pos:column="56">(<argument><expr><name pos:line="4" pos:column="57">k<pos:position pos:line="4" pos:column="58"/></name><operator pos:line="4" pos:column="58">+<pos:position pos:line="4" pos:column="59"/></operator><literal type="number" pos:line="4" pos:column="59">14<pos:position pos:line="4" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="63">c<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">-&gt;<pos:position pos:line="4" pos:column="69"/></operator><name pos:line="4" pos:column="66">cmd<pos:position pos:line="4" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="71"/></condition><then pos:line="4" pos:column="71"> <block pos:line="4" pos:column="72">{
		<expr_stmt><expr><name><name pos:line="5" pos:column="17">c<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">enabled<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">=<pos:position pos:line="5" pos:column="29"/></operator> <call><name pos:line="5" pos:column="30">git_config_bool<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name pos:line="5" pos:column="46">k<pos:position pos:line="5" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="49">v<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
		<return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then> <elseif pos:line="7" pos:column="11">else <if pos:line="7" pos:column="16">if <condition pos:line="7" pos:column="19">(<expr><operator pos:line="7" pos:column="20">!<pos:position pos:line="7" pos:column="21"/></operator><name><name pos:line="7" pos:column="21">c<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">mode_from_env<pos:position pos:line="7" pos:column="37"/></name></name> <operator pos:line="7" pos:column="38">&amp;&amp;<pos:position pos:line="7" pos:column="48"/></operator> <operator pos:line="7" pos:column="41">!<pos:position pos:line="7" pos:column="42"/></operator><call><name pos:line="7" pos:column="42">strcmp<pos:position pos:line="7" pos:column="48"/></name><argument_list pos:line="7" pos:column="48">(<argument><expr><name pos:line="7" pos:column="49">k<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="52">"notes.rewritemode"<pos:position pos:line="7" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73"> <block pos:line="7" pos:column="74">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">v<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><call><name pos:line="9" pos:column="32">config_error_nonbool<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">k<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">c<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">combine<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">parse_combine_notes_fn<pos:position pos:line="10" pos:column="52"/></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">v<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="22">c<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">combine<pos:position pos:line="11" pos:column="32"/></name></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">error<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><call><name pos:line="12" pos:column="31">_<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><literal type="string" pos:line="12" pos:column="33">"Bad notes.rewriteMode value: '%s'"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="71">v<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>
			<return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">1<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><operator pos:line="16" pos:column="20">!<pos:position pos:line="16" pos:column="21"/></operator><name><name pos:line="16" pos:column="21">c<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">refs_from_env<pos:position pos:line="16" pos:column="37"/></name></name> <operator pos:line="16" pos:column="38">&amp;&amp;<pos:position pos:line="16" pos:column="48"/></operator> <operator pos:line="16" pos:column="41">!<pos:position pos:line="16" pos:column="42"/></operator><call><name pos:line="16" pos:column="42">strcmp<pos:position pos:line="16" pos:column="48"/></name><argument_list pos:line="16" pos:column="48">(<argument><expr><name pos:line="16" pos:column="49">k<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="52">"notes.rewriteref"<pos:position pos:line="16" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="72"/></condition><then pos:line="16" pos:column="72"> <block pos:line="16" pos:column="73">{
		<comment type="block" pos:line="17" pos:column="17">/* note that a refs/ prefix is implied in the
		 * underlying for_each_glob_ref */</comment>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">starts_with<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">v<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="36">"refs/notes/"<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">string_list_add_refs_by_glob<pos:position pos:line="20" pos:column="53"/></name><argument_list pos:line="20" pos:column="53">(<argument><expr><name><name pos:line="20" pos:column="54">c<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">refs<pos:position pos:line="20" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">v<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt></block></then>
		<else pos:line="21" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">warning<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><call><name pos:line="22" pos:column="33">_<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><literal type="string" pos:line="22" pos:column="35">"Refusing to rewrite notes in %s"<pos:position pos:line="22" pos:column="68"/></literal>
				<literal type="string" pos:line="23" pos:column="33">" (outside of refs/notes/)"<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">v<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt></block></else></if>
		<return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

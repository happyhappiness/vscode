<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5015_git-2.11.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">init_db<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><specifier pos:line="1" pos:column="13">const<pos:position pos:line="1" pos:column="18"/></specifier> <name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">git_dir<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">real_git_dir<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
	    <parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">template_dir<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">unsigned<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">flags<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">reinit<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">exist_ok<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">flags<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="32">INIT_DB_EXIST_OK<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">original_git_dir<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><call><name pos:line="6" pos:column="34">xstrdup<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><call><name pos:line="6" pos:column="42">real_path<pos:position pos:line="6" pos:column="51"/></name><argument_list pos:line="6" pos:column="51">(<argument><expr><name pos:line="6" pos:column="52">git_dir<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">real_git_dir<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
		<decl_stmt><decl><type><name><name pos:line="9" pos:column="17">struct<pos:position pos:line="9" pos:column="23"/></name> <name pos:line="9" pos:column="24">stat<pos:position pos:line="9" pos:column="28"/></name></name></type> <name pos:line="9" pos:column="29">st<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">exist_ok<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&amp;&amp;<pos:position pos:line="11" pos:column="41"/></operator> <operator pos:line="11" pos:column="34">!<pos:position pos:line="11" pos:column="35"/></operator><call><name pos:line="11" pos:column="35">stat<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">git_dir<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="50">st<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">die<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><call><name pos:line="12" pos:column="29">_<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><literal type="string" pos:line="12" pos:column="31">"%s already exists"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">git_dir<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt></block></then></if>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">exist_ok<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&amp;&amp;<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="34">!<pos:position pos:line="14" pos:column="35"/></operator><call><name pos:line="14" pos:column="35">stat<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">real_git_dir<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="54">&amp;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="55">st<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">die<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><call><name pos:line="15" pos:column="29">_<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><literal type="string" pos:line="15" pos:column="31">"%s already exists"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">real_git_dir<pos:position pos:line="15" pos:column="65"/></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="17" pos:column="17">set_git_dir<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><call><name pos:line="17" pos:column="29">real_path<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">real_git_dir<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">git_dir<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <call><name pos:line="18" pos:column="27">get_git_dir<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">()<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">separate_git_dir<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">git_dir<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">original_git_dir<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then>
	<else pos:line="21" pos:column="9">else <block pos:line="21" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">set_git_dir<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><call><name pos:line="22" pos:column="29">real_path<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">git_dir<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">git_dir<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <call><name pos:line="23" pos:column="27">get_git_dir<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">()<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">startup_info<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">have_repository<pos:position pos:line="25" pos:column="38"/></name></name> <operator pos:line="25" pos:column="39">=<pos:position pos:line="25" pos:column="40"/></operator> <literal type="number" pos:line="25" pos:column="41">1<pos:position pos:line="25" pos:column="42"/></literal></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">safe_create_dir<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">git_dir<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="34">0<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="29" pos:column="9">init_is_bare_repository<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <call><name pos:line="29" pos:column="35">is_bare_repository<pos:position pos:line="29" pos:column="53"/></name><argument_list pos:line="29" pos:column="53">()<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>

	<comment type="block" pos:line="31" pos:column="9">/* Check to see if the repository version is right.
	 * Note that a newly created repository does not have
	 * config file, so this will not fail.  What we are catching
	 * is an attempt to reinitialize new repository with an old tool.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">check_repository_format<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">()<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="38" pos:column="9">reinit<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <call><name pos:line="38" pos:column="18">create_default_files<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">template_dir<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="53">original_git_dir<pos:position pos:line="38" pos:column="69"/></name></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">create_object_directory<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">()<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">get_shared_repository<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">()<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37"> <block pos:line="42" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">char<pos:position pos:line="43" pos:column="21"/></name></type> <name><name pos:line="43" pos:column="22">buf<pos:position pos:line="43" pos:column="25"/></name><index pos:line="43" pos:column="25">[<expr><literal type="number" pos:line="43" pos:column="26">10<pos:position pos:line="43" pos:column="28"/></literal></expr>]<pos:position pos:line="43" pos:column="29"/></index></name></decl>;<pos:position pos:line="43" pos:column="30"/></decl_stmt>
		<comment type="block" pos:line="44" pos:column="17">/* We do not spell "group" and such, so that
		 * the configuration can be read by older version
		 * of git. Note, we use octal numbers for new share modes,
		 * and compatibility values for PERM_GROUP and
		 * PERM_EVERYBODY.
		 */</comment>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">get_shared_repository<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">()<pos:position pos:line="50" pos:column="44"/></argument_list></call> <operator pos:line="50" pos:column="45">&lt;<pos:position pos:line="50" pos:column="49"/></operator> <literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal></expr>)<pos:position pos:line="50" pos:column="49"/></condition><then pos:line="50" pos:column="49">
			<comment type="block" pos:line="51" pos:column="25">/* force to the mode value */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">xsnprintf<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">buf<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="40">sizeof<argument_list pos:line="52" pos:column="46">(<argument><expr><name pos:line="52" pos:column="47">buf<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="53">"0%o"<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="60">-<pos:position pos:line="52" pos:column="61"/></operator><call><name pos:line="52" pos:column="61">get_shared_repository<pos:position pos:line="52" pos:column="82"/></name><argument_list pos:line="52" pos:column="82">()<pos:position pos:line="52" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="86"/></expr_stmt></block></then>
		<elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><call><name pos:line="53" pos:column="26">get_shared_repository<pos:position pos:line="53" pos:column="47"/></name><argument_list pos:line="53" pos:column="47">()<pos:position pos:line="53" pos:column="49"/></argument_list></call> <operator pos:line="53" pos:column="50">==<pos:position pos:line="53" pos:column="52"/></operator> <name pos:line="53" pos:column="53">PERM_GROUP<pos:position pos:line="53" pos:column="63"/></name></expr>)<pos:position pos:line="53" pos:column="64"/></condition><then pos:line="53" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="25">xsnprintf<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">buf<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="40">sizeof<argument_list pos:line="54" pos:column="46">(<argument><expr><name pos:line="54" pos:column="47">buf<pos:position pos:line="54" pos:column="50"/></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="53">"%d"<pos:position pos:line="54" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="59">OLD_PERM_GROUP<pos:position pos:line="54" pos:column="73"/></name></expr></argument>)<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="75"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="55" pos:column="17">else <if pos:line="55" pos:column="22">if <condition pos:line="55" pos:column="25">(<expr><call><name pos:line="55" pos:column="26">get_shared_repository<pos:position pos:line="55" pos:column="47"/></name><argument_list pos:line="55" pos:column="47">()<pos:position pos:line="55" pos:column="49"/></argument_list></call> <operator pos:line="55" pos:column="50">==<pos:position pos:line="55" pos:column="52"/></operator> <name pos:line="55" pos:column="53">PERM_EVERYBODY<pos:position pos:line="55" pos:column="67"/></name></expr>)<pos:position pos:line="55" pos:column="68"/></condition><then pos:line="55" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="25">xsnprintf<pos:position pos:line="56" pos:column="34"/></name><argument_list pos:line="56" pos:column="34">(<argument><expr><name pos:line="56" pos:column="35">buf<pos:position pos:line="56" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="40">sizeof<argument_list pos:line="56" pos:column="46">(<argument><expr><name pos:line="56" pos:column="47">buf<pos:position pos:line="56" pos:column="50"/></name></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="53">"%d"<pos:position pos:line="56" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="59">OLD_PERM_EVERYBODY<pos:position pos:line="56" pos:column="77"/></name></expr></argument>)<pos:position pos:line="56" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="79"/></expr_stmt></block></then></if></elseif>
		<else pos:line="57" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">die<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><literal type="string" pos:line="58" pos:column="29">"BUG: invalid value for shared_repository"<pos:position pos:line="58" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">git_config_set<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><literal type="string" pos:line="59" pos:column="32">"core.sharedrepository"<pos:position pos:line="59" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="57">buf<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">git_config_set<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><literal type="string" pos:line="60" pos:column="32">"receive.denyNonFastforwards"<pos:position pos:line="60" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="63">"true"<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><operator pos:line="63" pos:column="14">(<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="15">flags<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">&amp;<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="23">INIT_DB_QUIET<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">)<pos:position pos:line="63" pos:column="37"/></operator></expr>)<pos:position pos:line="63" pos:column="38"/></condition><then pos:line="63" pos:column="38"> <block pos:line="63" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="64" pos:column="17">int<pos:position pos:line="64" pos:column="20"/></name></type> <name pos:line="64" pos:column="21">len<pos:position pos:line="64" pos:column="24"/></name> <init pos:line="64" pos:column="25">= <expr><call><name pos:line="64" pos:column="27">strlen<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">git_dir<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="43"/></decl_stmt>

		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name pos:line="66" pos:column="21">reinit<pos:position pos:line="66" pos:column="27"/></name></expr>)<pos:position pos:line="66" pos:column="28"/></condition><then pos:line="66" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="25">printf<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><ternary><condition><expr><call><name pos:line="67" pos:column="32">get_shared_repository<pos:position pos:line="67" pos:column="53"/></name><argument_list pos:line="67" pos:column="53">()<pos:position pos:line="67" pos:column="55"/></argument_list></call></expr>
			       ?<pos:position pos:line="68" pos:column="33"/></condition><then pos:line="68" pos:column="33"> <expr><call><name pos:line="68" pos:column="34">_<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(<argument><expr><literal type="string" pos:line="68" pos:column="36">"Reinitialized existing shared Git repository in %s%s\n"<pos:position pos:line="68" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="93"/></argument_list></call></expr>
			       <pos:position pos:line="69" pos:column="11"/></then><else pos:line="69" pos:column="32">: <expr><call><name pos:line="69" pos:column="34">_<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><literal type="string" pos:line="69" pos:column="36">"Reinitialized existing Git repository in %s%s\n"<pos:position pos:line="69" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="86"/></argument_list></call></expr></else></ternary></expr></argument>,
			       <argument><expr><name pos:line="70" pos:column="32">git_dir<pos:position pos:line="70" pos:column="39"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="70" pos:column="41">len<pos:position pos:line="70" pos:column="44"/></name> <operator pos:line="70" pos:column="45">&amp;&amp;<pos:position pos:line="70" pos:column="55"/></operator> <name><name pos:line="70" pos:column="48">git_dir<pos:position pos:line="70" pos:column="55"/></name><index pos:line="70" pos:column="55">[<expr><name pos:line="70" pos:column="56">len<pos:position pos:line="70" pos:column="59"/></name><operator pos:line="70" pos:column="59">-<pos:position pos:line="70" pos:column="60"/></operator><literal type="number" pos:line="70" pos:column="60">1<pos:position pos:line="70" pos:column="61"/></literal></expr>]<pos:position pos:line="70" pos:column="62"/></index></name> <operator pos:line="70" pos:column="63">!=<pos:position pos:line="70" pos:column="65"/></operator> <literal type="char" pos:line="70" pos:column="66">'/'<pos:position pos:line="70" pos:column="69"/></literal></expr> ?<pos:position pos:line="70" pos:column="71"/></condition><then pos:line="70" pos:column="71"> <expr><literal type="string" pos:line="70" pos:column="72">"/"<pos:position pos:line="70" pos:column="75"/></literal></expr> <pos:position pos:line="70" pos:column="76"/></then><else pos:line="70" pos:column="76">: <expr><literal type="string" pos:line="70" pos:column="78">""<pos:position pos:line="70" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="70" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="82"/></expr_stmt></block></then>
		<else pos:line="71" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="25">printf<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><ternary><condition><expr><call><name pos:line="72" pos:column="32">get_shared_repository<pos:position pos:line="72" pos:column="53"/></name><argument_list pos:line="72" pos:column="53">()<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>
			       ?<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33"> <expr><call><name pos:line="73" pos:column="34">_<pos:position pos:line="73" pos:column="35"/></name><argument_list pos:line="73" pos:column="35">(<argument><expr><literal type="string" pos:line="73" pos:column="36">"Initialized empty shared Git repository in %s%s\n"<pos:position pos:line="73" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="88"/></argument_list></call></expr>
			       <pos:position pos:line="74" pos:column="11"/></then><else pos:line="74" pos:column="32">: <expr><call><name pos:line="74" pos:column="34">_<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><literal type="string" pos:line="74" pos:column="36">"Initialized empty Git repository in %s%s\n"<pos:position pos:line="74" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="81"/></argument_list></call></expr></else></ternary></expr></argument>,
			       <argument><expr><name pos:line="75" pos:column="32">git_dir<pos:position pos:line="75" pos:column="39"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="75" pos:column="41">len<pos:position pos:line="75" pos:column="44"/></name> <operator pos:line="75" pos:column="45">&amp;&amp;<pos:position pos:line="75" pos:column="55"/></operator> <name><name pos:line="75" pos:column="48">git_dir<pos:position pos:line="75" pos:column="55"/></name><index pos:line="75" pos:column="55">[<expr><name pos:line="75" pos:column="56">len<pos:position pos:line="75" pos:column="59"/></name><operator pos:line="75" pos:column="59">-<pos:position pos:line="75" pos:column="60"/></operator><literal type="number" pos:line="75" pos:column="60">1<pos:position pos:line="75" pos:column="61"/></literal></expr>]<pos:position pos:line="75" pos:column="62"/></index></name> <operator pos:line="75" pos:column="63">!=<pos:position pos:line="75" pos:column="65"/></operator> <literal type="char" pos:line="75" pos:column="66">'/'<pos:position pos:line="75" pos:column="69"/></literal></expr> ?<pos:position pos:line="75" pos:column="71"/></condition><then pos:line="75" pos:column="71"> <expr><literal type="string" pos:line="75" pos:column="72">"/"<pos:position pos:line="75" pos:column="75"/></literal></expr> <pos:position pos:line="75" pos:column="76"/></then><else pos:line="75" pos:column="76">: <expr><literal type="string" pos:line="75" pos:column="78">""<pos:position pos:line="75" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="75" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="82"/></expr_stmt></block></else></if>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="78" pos:column="9">free<pos:position pos:line="78" pos:column="13"/></name><argument_list pos:line="78" pos:column="13">(<argument><expr><name pos:line="78" pos:column="14">original_git_dir<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
	<return pos:line="79" pos:column="9">return <expr><literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

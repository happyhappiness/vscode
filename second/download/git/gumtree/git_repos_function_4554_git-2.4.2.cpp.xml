<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4554_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cmd_reflog_expire<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">argc<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">argv<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">prefix<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">expire_reflog_policy_cb<pos:position pos:line="3" pos:column="39"/></name></name></type> <name pos:line="3" pos:column="40">cb<pos:position pos:line="3" pos:column="42"/></name></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">long<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">now<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name pos:line="4" pos:column="29">time<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">NULL<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">status<pos:position pos:line="5" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">do_all<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">explicit_expiry<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">flags<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">default_reflog_expire_unreachable<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">=<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">now<pos:position pos:line="9" pos:column="48"/></name> <operator pos:line="9" pos:column="49">-<pos:position pos:line="9" pos:column="50"/></operator> <literal type="number" pos:line="9" pos:column="51">30<pos:position pos:line="9" pos:column="53"/></literal> <operator pos:line="9" pos:column="54">*<pos:position pos:line="9" pos:column="55"/></operator> <literal type="number" pos:line="9" pos:column="56">24<pos:position pos:line="9" pos:column="58"/></literal> <operator pos:line="9" pos:column="59">*<pos:position pos:line="9" pos:column="60"/></operator> <literal type="number" pos:line="9" pos:column="61">3600<pos:position pos:line="9" pos:column="65"/></literal></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">default_reflog_expire<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">now<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">-<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="39">90<pos:position pos:line="10" pos:column="41"/></literal> <operator pos:line="10" pos:column="42">*<pos:position pos:line="10" pos:column="43"/></operator> <literal type="number" pos:line="10" pos:column="44">24<pos:position pos:line="10" pos:column="46"/></literal> <operator pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></operator> <literal type="number" pos:line="10" pos:column="49">3600<pos:position pos:line="10" pos:column="53"/></literal></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">git_config<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">reflog_expire_config<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">NULL<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">save_commit_buffer<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">do_all<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">status<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">&amp;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="17">cb<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="24">sizeof<argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">cb<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="17" pos:column="9">cb<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">cmd<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">expire_total<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">default_reflog_expire<pos:position pos:line="17" pos:column="52"/></name></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">cb<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">cmd<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">expire_unreachable<pos:position pos:line="18" pos:column="34"/></name></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">default_reflog_expire_unreachable<pos:position pos:line="18" pos:column="70"/></name></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">argc<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></condition> <incr><expr><name pos:line="20" pos:column="31">i<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">++<pos:position pos:line="20" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="35"/></control> <block pos:line="20" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name pos:line="21" pos:column="23">char<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">arg<pos:position pos:line="21" pos:column="32"/></name> <init pos:line="21" pos:column="33">= <expr><name><name pos:line="21" pos:column="35">argv<pos:position pos:line="21" pos:column="39"/></name><index pos:line="21" pos:column="39">[<expr><name pos:line="21" pos:column="40">i<pos:position pos:line="21" pos:column="41"/></name></expr>]<pos:position pos:line="21" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="21" pos:column="43"/></decl_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">strcmp<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">arg<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"--dry-run"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call> <operator pos:line="22" pos:column="47">||<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">!<pos:position pos:line="22" pos:column="51"/></operator><call><name pos:line="22" pos:column="51">strcmp<pos:position pos:line="22" pos:column="57"/></name><argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">arg<pos:position pos:line="22" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="63">"-n"<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="69"/></condition><then pos:line="22" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">flags<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">|=<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">EXPIRE_REFLOGS_DRY_RUN<pos:position pos:line="23" pos:column="56"/></name></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt></block></then>
		<elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><call><name pos:line="24" pos:column="26">starts_with<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">arg<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="43">"--expire="<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="56"/></condition><then pos:line="24" pos:column="56"> <block pos:line="24" pos:column="57">{
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><call><name pos:line="25" pos:column="29">parse_expiry_date<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name pos:line="25" pos:column="47">arg<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">+<pos:position pos:line="25" pos:column="52"/></operator> <literal type="number" pos:line="25" pos:column="53">9<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="56">&amp;<pos:position pos:line="25" pos:column="61"/></operator><name><name pos:line="25" pos:column="57">cb<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">.<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">cmd<pos:position pos:line="25" pos:column="63"/></name><operator pos:line="25" pos:column="63">.<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="64">expire_total<pos:position pos:line="25" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="78"/></condition><then pos:line="25" pos:column="78">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="33">die<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><call><name pos:line="26" pos:column="37">_<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><literal type="string" pos:line="26" pos:column="39">"'%s' is not a valid timestamp"<pos:position pos:line="26" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="73">arg<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="78"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="27" pos:column="25">explicit_expiry<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">|=<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="44">EXPIRE_TOTAL<pos:position pos:line="27" pos:column="56"/></name></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="29" pos:column="17">else <if pos:line="29" pos:column="22">if <condition pos:line="29" pos:column="25">(<expr><call><name pos:line="29" pos:column="26">starts_with<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">arg<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="43">"--expire-unreachable="<pos:position pos:line="29" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="68"/></condition><then pos:line="29" pos:column="68"> <block pos:line="29" pos:column="69">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><call><name pos:line="30" pos:column="29">parse_expiry_date<pos:position pos:line="30" pos:column="46"/></name><argument_list pos:line="30" pos:column="46">(<argument><expr><name pos:line="30" pos:column="47">arg<pos:position pos:line="30" pos:column="50"/></name> <operator pos:line="30" pos:column="51">+<pos:position pos:line="30" pos:column="52"/></operator> <literal type="number" pos:line="30" pos:column="53">21<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="57">&amp;<pos:position pos:line="30" pos:column="62"/></operator><name><name pos:line="30" pos:column="58">cb<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">.<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="61">cmd<pos:position pos:line="30" pos:column="64"/></name><operator pos:line="30" pos:column="64">.<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="65">expire_unreachable<pos:position pos:line="30" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="85"/></condition><then pos:line="30" pos:column="85">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="33">die<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><call><name pos:line="31" pos:column="37">_<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><literal type="string" pos:line="31" pos:column="39">"'%s' is not a valid timestamp"<pos:position pos:line="31" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="73">arg<pos:position pos:line="31" pos:column="76"/></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="32" pos:column="25">explicit_expiry<pos:position pos:line="32" pos:column="40"/></name> <operator pos:line="32" pos:column="41">|=<pos:position pos:line="32" pos:column="43"/></operator> <name pos:line="32" pos:column="44">EXPIRE_UNREACH<pos:position pos:line="32" pos:column="58"/></name></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="34" pos:column="17">else <if pos:line="34" pos:column="22">if <condition pos:line="34" pos:column="25">(<expr><operator pos:line="34" pos:column="26">!<pos:position pos:line="34" pos:column="27"/></operator><call><name pos:line="34" pos:column="27">strcmp<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">arg<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">"--stale-fix"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="54"/></condition><then pos:line="34" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="25">cb<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">cmd<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">.<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">stalefix<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">=<pos:position pos:line="35" pos:column="42"/></operator> <literal type="number" pos:line="35" pos:column="43">1<pos:position pos:line="35" pos:column="44"/></literal></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="36" pos:column="17">else <if pos:line="36" pos:column="22">if <condition pos:line="36" pos:column="25">(<expr><operator pos:line="36" pos:column="26">!<pos:position pos:line="36" pos:column="27"/></operator><call><name pos:line="36" pos:column="27">strcmp<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">arg<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="39">"--rewrite"<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">flags<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">|=<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="34">EXPIRE_REFLOGS_REWRITE<pos:position pos:line="37" pos:column="56"/></name></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="38" pos:column="17">else <if pos:line="38" pos:column="22">if <condition pos:line="38" pos:column="25">(<expr><operator pos:line="38" pos:column="26">!<pos:position pos:line="38" pos:column="27"/></operator><call><name pos:line="38" pos:column="27">strcmp<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">arg<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="39">"--updateref"<pos:position pos:line="38" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="54"/></condition><then pos:line="38" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">flags<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">|=<pos:position pos:line="39" pos:column="33"/></operator> <name pos:line="39" pos:column="34">EXPIRE_REFLOGS_UPDATE_REF<pos:position pos:line="39" pos:column="59"/></name></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="40" pos:column="17">else <if pos:line="40" pos:column="22">if <condition pos:line="40" pos:column="25">(<expr><operator pos:line="40" pos:column="26">!<pos:position pos:line="40" pos:column="27"/></operator><call><name pos:line="40" pos:column="27">strcmp<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">arg<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="39">"--all"<pos:position pos:line="40" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="25">do_all<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="42" pos:column="17">else <if pos:line="42" pos:column="22">if <condition pos:line="42" pos:column="25">(<expr><operator pos:line="42" pos:column="26">!<pos:position pos:line="42" pos:column="27"/></operator><call><name pos:line="42" pos:column="27">strcmp<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">arg<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="39">"--verbose"<pos:position pos:line="42" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="52"/></condition><then pos:line="42" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="25">flags<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">|=<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">EXPIRE_REFLOGS_VERBOSE<pos:position pos:line="43" pos:column="56"/></name></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="44" pos:column="17">else <if pos:line="44" pos:column="22">if <condition pos:line="44" pos:column="25">(<expr><operator pos:line="44" pos:column="26">!<pos:position pos:line="44" pos:column="27"/></operator><call><name pos:line="44" pos:column="27">strcmp<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">arg<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="39">"--"<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45"> <block pos:line="44" pos:column="46">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">i<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">++<pos:position pos:line="45" pos:column="28"/></operator></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
			<break pos:line="46" pos:column="25">break;<pos:position pos:line="46" pos:column="31"/></break>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="48" pos:column="17">else <if pos:line="48" pos:column="22">if <condition pos:line="48" pos:column="25">(<expr><name><name pos:line="48" pos:column="26">arg<pos:position pos:line="48" pos:column="29"/></name><index pos:line="48" pos:column="29">[<expr><literal type="number" pos:line="48" pos:column="30">0<pos:position pos:line="48" pos:column="31"/></literal></expr>]<pos:position pos:line="48" pos:column="32"/></index></name> <operator pos:line="48" pos:column="33">==<pos:position pos:line="48" pos:column="35"/></operator> <literal type="char" pos:line="48" pos:column="36">'-'<pos:position pos:line="48" pos:column="39"/></literal></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="25">usage<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">reflog_expire_usage<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt></block></then></if></elseif>
		<else pos:line="50" pos:column="17">else
			<block type="pseudo"><break pos:line="51" pos:column="25">break;<pos:position pos:line="51" pos:column="31"/></break></block></else></if>
	}<pos:position pos:line="52" pos:column="10"/></block></for>

	<comment type="block" pos:line="54" pos:column="9">/*
	 * We can trust the commits and objects reachable from refs
	 * even in older repository.  We cannot trust what's reachable
	 * from reflog if the repository was pruned with older git.
	 */</comment>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">cb<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">.<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">cmd<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">.<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">stalefix<pos:position pos:line="59" pos:column="28"/></name></name></expr>)<pos:position pos:line="59" pos:column="29"/></condition><then pos:line="59" pos:column="29"> <block pos:line="59" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">init_revisions<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><operator pos:line="60" pos:column="32">&amp;<pos:position pos:line="60" pos:column="37"/></operator><name><name pos:line="60" pos:column="33">cb<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">.<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="36">cmd<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">.<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="40">revs<pos:position pos:line="60" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="46">prefix<pos:position pos:line="60" pos:column="52"/></name></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">flags<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="29">EXPIRE_REFLOGS_VERBOSE<pos:position pos:line="61" pos:column="51"/></name></expr>)<pos:position pos:line="61" pos:column="52"/></condition><then pos:line="61" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">printf<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><literal type="string" pos:line="62" pos:column="32">"Marking reachable objects..."<pos:position pos:line="62" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">mark_reachable_objects<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><operator pos:line="63" pos:column="40">&amp;<pos:position pos:line="63" pos:column="45"/></operator><name><name pos:line="63" pos:column="41">cb<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">.<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="44">cmd<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">.<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="48">revs<pos:position pos:line="63" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="54">0<pos:position pos:line="63" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="57">0<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="60">NULL<pos:position pos:line="63" pos:column="64"/></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">flags<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">&amp;<pos:position pos:line="64" pos:column="32"/></operator> <name pos:line="64" pos:column="29">EXPIRE_REFLOGS_VERBOSE<pos:position pos:line="64" pos:column="51"/></name></expr>)<pos:position pos:line="64" pos:column="52"/></condition><then pos:line="64" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="25">putchar<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><literal type="char" pos:line="65" pos:column="33">'\n'<pos:position pos:line="65" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">do_all<pos:position pos:line="68" pos:column="19"/></name></expr>)<pos:position pos:line="68" pos:column="20"/></condition><then pos:line="68" pos:column="20"> <block pos:line="68" pos:column="21">{
		<decl_stmt><decl><type><name><name pos:line="69" pos:column="17">struct<pos:position pos:line="69" pos:column="23"/></name> <name pos:line="69" pos:column="24">collect_reflog_cb<pos:position pos:line="69" pos:column="41"/></name></name></type> <name pos:line="69" pos:column="42">collected<pos:position pos:line="69" pos:column="51"/></name></decl>;<pos:position pos:line="69" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="70" pos:column="17">int<pos:position pos:line="70" pos:column="20"/></name></type> <name pos:line="70" pos:column="21">i<pos:position pos:line="70" pos:column="22"/></name></decl>;<pos:position pos:line="70" pos:column="23"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="72" pos:column="17">memset<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><operator pos:line="72" pos:column="24">&amp;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="25">collected<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="36">0<pos:position pos:line="72" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="39">sizeof<argument_list pos:line="72" pos:column="45">(<argument><expr><name pos:line="72" pos:column="46">collected<pos:position pos:line="72" pos:column="55"/></name></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">for_each_reflog<pos:position pos:line="73" pos:column="32"/></name><argument_list pos:line="73" pos:column="32">(<argument><expr><name pos:line="73" pos:column="33">collect_reflog<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="49">&amp;<pos:position pos:line="73" pos:column="54"/></operator><name pos:line="73" pos:column="50">collected<pos:position pos:line="73" pos:column="59"/></name></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="61"/></expr_stmt>
		<for pos:line="74" pos:column="17">for <control pos:line="74" pos:column="21">(<init><expr><name pos:line="74" pos:column="22">i<pos:position pos:line="74" pos:column="23"/></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <literal type="number" pos:line="74" pos:column="26">0<pos:position pos:line="74" pos:column="27"/></literal></expr>;<pos:position pos:line="74" pos:column="28"/></init> <condition><expr><name pos:line="74" pos:column="29">i<pos:position pos:line="74" pos:column="30"/></name> <operator pos:line="74" pos:column="31">&lt;<pos:position pos:line="74" pos:column="35"/></operator> <name><name pos:line="74" pos:column="33">collected<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">.<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="43">nr<pos:position pos:line="74" pos:column="45"/></name></name></expr>;<pos:position pos:line="74" pos:column="46"/></condition> <incr><expr><name pos:line="74" pos:column="47">i<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">++<pos:position pos:line="74" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="74" pos:column="51"/></control> <block pos:line="74" pos:column="52">{
			<decl_stmt><decl><type><name><name pos:line="75" pos:column="25">struct<pos:position pos:line="75" pos:column="31"/></name> <name pos:line="75" pos:column="32">collected_reflog<pos:position pos:line="75" pos:column="48"/></name></name> <modifier pos:line="75" pos:column="49">*<pos:position pos:line="75" pos:column="50"/></modifier></type><name pos:line="75" pos:column="50">e<pos:position pos:line="75" pos:column="51"/></name> <init pos:line="75" pos:column="52">= <expr><name><name pos:line="75" pos:column="54">collected<pos:position pos:line="75" pos:column="63"/></name><operator pos:line="75" pos:column="63">.<pos:position pos:line="75" pos:column="64"/></operator><name pos:line="75" pos:column="64">e<pos:position pos:line="75" pos:column="65"/></name><index pos:line="75" pos:column="65">[<expr><name pos:line="75" pos:column="66">i<pos:position pos:line="75" pos:column="67"/></name></expr>]<pos:position pos:line="75" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="75" pos:column="69"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">set_reflog_expiry_param<pos:position pos:line="76" pos:column="48"/></name><argument_list pos:line="76" pos:column="48">(<argument><expr><operator pos:line="76" pos:column="49">&amp;<pos:position pos:line="76" pos:column="54"/></operator><name><name pos:line="76" pos:column="50">cb<pos:position pos:line="76" pos:column="52"/></name><operator pos:line="76" pos:column="52">.<pos:position pos:line="76" pos:column="53"/></operator><name pos:line="76" pos:column="53">cmd<pos:position pos:line="76" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="58">explicit_expiry<pos:position pos:line="76" pos:column="73"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="75">e<pos:position pos:line="76" pos:column="76"/></name><operator pos:line="76" pos:column="76">-&gt;<pos:position pos:line="76" pos:column="81"/></operator><name pos:line="76" pos:column="78">reflog<pos:position pos:line="76" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><name pos:line="77" pos:column="25">status<pos:position pos:line="77" pos:column="31"/></name> <operator pos:line="77" pos:column="32">|=<pos:position pos:line="77" pos:column="34"/></operator> <call><name pos:line="77" pos:column="35">reflog_expire<pos:position pos:line="77" pos:column="48"/></name><argument_list pos:line="77" pos:column="48">(<argument><expr><name><name pos:line="77" pos:column="49">e<pos:position pos:line="77" pos:column="50"/></name><operator pos:line="77" pos:column="50">-&gt;<pos:position pos:line="77" pos:column="55"/></operator><name pos:line="77" pos:column="52">reflog<pos:position pos:line="77" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="60">e<pos:position pos:line="77" pos:column="61"/></name><operator pos:line="77" pos:column="61">-&gt;<pos:position pos:line="77" pos:column="66"/></operator><name pos:line="77" pos:column="63">sha1<pos:position pos:line="77" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="69">flags<pos:position pos:line="77" pos:column="74"/></name></expr></argument>,
						<argument><expr><name pos:line="78" pos:column="49">reflog_expiry_prepare<pos:position pos:line="78" pos:column="70"/></name></expr></argument>,
						<argument><expr><name pos:line="79" pos:column="49">should_expire_reflog_ent<pos:position pos:line="79" pos:column="73"/></name></expr></argument>,
						<argument><expr><name pos:line="80" pos:column="49">reflog_expiry_cleanup<pos:position pos:line="80" pos:column="70"/></name></expr></argument>,
						<argument><expr><operator pos:line="81" pos:column="49">&amp;<pos:position pos:line="81" pos:column="54"/></operator><name pos:line="81" pos:column="50">cb<pos:position pos:line="81" pos:column="52"/></name></expr></argument>)<pos:position pos:line="81" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="82" pos:column="25">free<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">e<pos:position pos:line="82" pos:column="31"/></name></expr></argument>)<pos:position pos:line="82" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="83" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">free<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><name><name pos:line="84" pos:column="22">collected<pos:position pos:line="84" pos:column="31"/></name><operator pos:line="84" pos:column="31">.<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="32">e<pos:position pos:line="84" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>

	<for pos:line="87" pos:column="9">for <control pos:line="87" pos:column="13">(<init pos:line="87" pos:column="14">;<pos:position pos:line="87" pos:column="15"/></init> <condition><expr><name pos:line="87" pos:column="16">i<pos:position pos:line="87" pos:column="17"/></name> <operator pos:line="87" pos:column="18">&lt;<pos:position pos:line="87" pos:column="22"/></operator> <name pos:line="87" pos:column="20">argc<pos:position pos:line="87" pos:column="24"/></name></expr>;<pos:position pos:line="87" pos:column="25"/></condition> <incr><expr><name pos:line="87" pos:column="26">i<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">++<pos:position pos:line="87" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="30"/></control> <block pos:line="87" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="88" pos:column="17">char<pos:position pos:line="88" pos:column="21"/></name> <modifier pos:line="88" pos:column="22">*<pos:position pos:line="88" pos:column="23"/></modifier></type><name pos:line="88" pos:column="23">ref<pos:position pos:line="88" pos:column="26"/></name></decl>;<pos:position pos:line="88" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="89" pos:column="17">unsigned<pos:position pos:line="89" pos:column="25"/></name> <name pos:line="89" pos:column="26">char<pos:position pos:line="89" pos:column="30"/></name></type> <name><name pos:line="89" pos:column="31">sha1<pos:position pos:line="89" pos:column="35"/></name><index pos:line="89" pos:column="35">[<expr><literal type="number" pos:line="89" pos:column="36">20<pos:position pos:line="89" pos:column="38"/></literal></expr>]<pos:position pos:line="89" pos:column="39"/></index></name></decl>;<pos:position pos:line="89" pos:column="40"/></decl_stmt>
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><operator pos:line="90" pos:column="21">!<pos:position pos:line="90" pos:column="22"/></operator><call><name pos:line="90" pos:column="22">dwim_log<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><name><name pos:line="90" pos:column="31">argv<pos:position pos:line="90" pos:column="35"/></name><index pos:line="90" pos:column="35">[<expr><name pos:line="90" pos:column="36">i<pos:position pos:line="90" pos:column="37"/></name></expr>]<pos:position pos:line="90" pos:column="38"/></index></name></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="40">strlen<pos:position pos:line="90" pos:column="46"/></name><argument_list pos:line="90" pos:column="46">(<argument><expr><name><name pos:line="90" pos:column="47">argv<pos:position pos:line="90" pos:column="51"/></name><index pos:line="90" pos:column="51">[<expr><name pos:line="90" pos:column="52">i<pos:position pos:line="90" pos:column="53"/></name></expr>]<pos:position pos:line="90" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="90" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="90" pos:column="57">sha1<pos:position pos:line="90" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="63">&amp;<pos:position pos:line="90" pos:column="68"/></operator><name pos:line="90" pos:column="64">ref<pos:position pos:line="90" pos:column="67"/></name></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="69"/></condition><then pos:line="90" pos:column="69"> <block pos:line="90" pos:column="70">{
			<expr_stmt><expr><name pos:line="91" pos:column="25">status<pos:position pos:line="91" pos:column="31"/></name> <operator pos:line="91" pos:column="32">|=<pos:position pos:line="91" pos:column="34"/></operator> <call><name pos:line="91" pos:column="35">error<pos:position pos:line="91" pos:column="40"/></name><argument_list pos:line="91" pos:column="40">(<argument><expr><literal type="string" pos:line="91" pos:column="41">"%s points nowhere!"<pos:position pos:line="91" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="63">argv<pos:position pos:line="91" pos:column="67"/></name><index pos:line="91" pos:column="67">[<expr><name pos:line="91" pos:column="68">i<pos:position pos:line="91" pos:column="69"/></name></expr>]<pos:position pos:line="91" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="72"/></expr_stmt>
			<continue pos:line="92" pos:column="25">continue;<pos:position pos:line="92" pos:column="34"/></continue>
		}<pos:position pos:line="93" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">set_reflog_expiry_param<pos:position pos:line="94" pos:column="40"/></name><argument_list pos:line="94" pos:column="40">(<argument><expr><operator pos:line="94" pos:column="41">&amp;<pos:position pos:line="94" pos:column="46"/></operator><name><name pos:line="94" pos:column="42">cb<pos:position pos:line="94" pos:column="44"/></name><operator pos:line="94" pos:column="44">.<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="45">cmd<pos:position pos:line="94" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">explicit_expiry<pos:position pos:line="94" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="67">ref<pos:position pos:line="94" pos:column="70"/></name></expr></argument>)<pos:position pos:line="94" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name pos:line="95" pos:column="17">status<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">|=<pos:position pos:line="95" pos:column="26"/></operator> <call><name pos:line="95" pos:column="27">reflog_expire<pos:position pos:line="95" pos:column="40"/></name><argument_list pos:line="95" pos:column="40">(<argument><expr><name pos:line="95" pos:column="41">ref<pos:position pos:line="95" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="46">sha1<pos:position pos:line="95" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="52">flags<pos:position pos:line="95" pos:column="57"/></name></expr></argument>,
					<argument><expr><name pos:line="96" pos:column="41">reflog_expiry_prepare<pos:position pos:line="96" pos:column="62"/></name></expr></argument>,
					<argument><expr><name pos:line="97" pos:column="41">should_expire_reflog_ent<pos:position pos:line="97" pos:column="65"/></name></expr></argument>,
					<argument><expr><name pos:line="98" pos:column="41">reflog_expiry_cleanup<pos:position pos:line="98" pos:column="62"/></name></expr></argument>,
					<argument><expr><operator pos:line="99" pos:column="41">&amp;<pos:position pos:line="99" pos:column="46"/></operator><name pos:line="99" pos:column="42">cb<pos:position pos:line="99" pos:column="44"/></name></expr></argument>)<pos:position pos:line="99" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="100" pos:column="10"/></block></for>
	<return pos:line="101" pos:column="9">return <expr><name pos:line="101" pos:column="16">status<pos:position pos:line="101" pos:column="22"/></name></expr>;<pos:position pos:line="101" pos:column="23"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

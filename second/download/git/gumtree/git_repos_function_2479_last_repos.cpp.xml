<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2479_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">exclude<pos:position pos:line="1" pos:column="22"/></name></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">last_exclude_matching_from_list<pos:position pos:line="1" pos:column="55"/></name><parameter_list pos:line="1" pos:column="55">(<parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">pathname<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
						       <parameter><decl><type><name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">pathlen<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
						       <parameter><decl><type><specifier pos:line="3" pos:column="56">const<pos:position pos:line="3" pos:column="61"/></specifier> <name pos:line="3" pos:column="62">char<pos:position pos:line="3" pos:column="66"/></name> <modifier pos:line="3" pos:column="67">*<pos:position pos:line="3" pos:column="68"/></modifier></type><name pos:line="3" pos:column="68">basename<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>,
						       <parameter><decl><type><name pos:line="4" pos:column="56">int<pos:position pos:line="4" pos:column="59"/></name> <modifier pos:line="4" pos:column="60">*<pos:position pos:line="4" pos:column="61"/></modifier></type><name pos:line="4" pos:column="61">dtype<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>,
						       <parameter><decl><type><name><name pos:line="5" pos:column="56">struct<pos:position pos:line="5" pos:column="62"/></name> <name pos:line="5" pos:column="63">exclude_list<pos:position pos:line="5" pos:column="75"/></name></name> <modifier pos:line="5" pos:column="76">*<pos:position pos:line="5" pos:column="77"/></modifier></type><name pos:line="5" pos:column="77">el<pos:position pos:line="5" pos:column="79"/></name></decl></parameter>,
						       <parameter><decl><type><name><name pos:line="6" pos:column="56">struct<pos:position pos:line="6" pos:column="62"/></name> <name pos:line="6" pos:column="63">index_state<pos:position pos:line="6" pos:column="74"/></name></name> <modifier pos:line="6" pos:column="75">*<pos:position pos:line="6" pos:column="76"/></modifier></type><name pos:line="6" pos:column="76">istate<pos:position pos:line="6" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="83"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">exclude<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">exc<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt> <comment type="block" pos:line="8" pos:column="37">/* undecided */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">el<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">nr<pos:position pos:line="11" pos:column="20"/></name></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>	<comment type="block" pos:line="12" pos:column="33">/* undefined */</comment>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name><name pos:line="14" pos:column="18">el<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">nr<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></init> <condition><expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal> <operator pos:line="14" pos:column="32">&lt;=<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="35">i<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></condition> <incr><expr><name pos:line="14" pos:column="38">i<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">--<pos:position pos:line="14" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="42"/></control> <block pos:line="14" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">exclude<pos:position pos:line="15" pos:column="31"/></name></name> <modifier pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></modifier></type><name pos:line="15" pos:column="33">x<pos:position pos:line="15" pos:column="34"/></name> <init pos:line="15" pos:column="35">= <expr><name><name pos:line="15" pos:column="37">el<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">excludes<pos:position pos:line="15" pos:column="49"/></name><index pos:line="15" pos:column="49">[<expr><name pos:line="15" pos:column="50">i<pos:position pos:line="15" pos:column="51"/></name></expr>]<pos:position pos:line="15" pos:column="52"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">const<pos:position pos:line="16" pos:column="22"/></specifier> <name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">exclude<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><name><name pos:line="16" pos:column="39">x<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">pattern<pos:position pos:line="16" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">prefix<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><name><name pos:line="17" pos:column="30">x<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">nowildcardlen<pos:position pos:line="17" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="47"/></decl_stmt>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">x<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">flags<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">&amp;<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="32">EXC_FLAG_MUSTBEDIR<pos:position pos:line="19" pos:column="50"/></name></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <block pos:line="19" pos:column="52">{
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">*<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">dtype<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">DT_UNKNOWN<pos:position pos:line="20" pos:column="49"/></name></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">dtype<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">=<pos:position pos:line="21" pos:column="41"/></operator> <call><name pos:line="21" pos:column="42">get_dtype<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">NULL<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">istate<pos:position pos:line="21" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">pathname<pos:position pos:line="21" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="76">pathlen<pos:position pos:line="21" pos:column="83"/></name></expr></argument>)<pos:position pos:line="21" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="85"/></expr_stmt></block></then></if>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">dtype<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">!=<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">DT_DIR<pos:position pos:line="22" pos:column="45"/></name></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
				<block type="pseudo"><continue pos:line="23" pos:column="33">continue;<pos:position pos:line="23" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">x<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">flags<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">&amp;<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="32">EXC_FLAG_NODIR<pos:position pos:line="26" pos:column="46"/></name></expr>)<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47"> <block pos:line="26" pos:column="48">{
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">match_basename<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">basename<pos:position pos:line="27" pos:column="52"/></name></expr></argument>,
					   <argument><expr><name pos:line="28" pos:column="44">pathlen<pos:position pos:line="28" pos:column="51"/></name> <operator pos:line="28" pos:column="52">-<pos:position pos:line="28" pos:column="53"/></operator> <operator pos:line="28" pos:column="54">(<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="55">basename<pos:position pos:line="28" pos:column="63"/></name> <operator pos:line="28" pos:column="64">-<pos:position pos:line="28" pos:column="65"/></operator> <name pos:line="28" pos:column="66">pathname<pos:position pos:line="28" pos:column="74"/></name><operator pos:line="28" pos:column="74">)<pos:position pos:line="28" pos:column="75"/></operator></expr></argument>,
					   <argument><expr><name pos:line="29" pos:column="44">exclude<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">prefix<pos:position pos:line="29" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="61">x<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">-&gt;<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="64">patternlen<pos:position pos:line="29" pos:column="74"/></name></name></expr></argument>,
					   <argument><expr><name><name pos:line="30" pos:column="44">x<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">flags<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="54"/></condition><then pos:line="30" pos:column="54"> <block pos:line="30" pos:column="55">{
				<expr_stmt><expr><name pos:line="31" pos:column="33">exc<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">=<pos:position pos:line="31" pos:column="38"/></operator> <name pos:line="31" pos:column="39">x<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
				<break pos:line="32" pos:column="33">break;<pos:position pos:line="32" pos:column="39"/></break>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
			<continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">assert<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name><name pos:line="37" pos:column="24">x<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">baselen<pos:position pos:line="37" pos:column="34"/></name></name> <operator pos:line="37" pos:column="35">==<pos:position pos:line="37" pos:column="37"/></operator> <literal type="number" pos:line="37" pos:column="38">0<pos:position pos:line="37" pos:column="39"/></literal> <operator pos:line="37" pos:column="40">||<pos:position pos:line="37" pos:column="42"/></operator> <name><name pos:line="37" pos:column="43">x<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">base<pos:position pos:line="37" pos:column="50"/></name><index pos:line="37" pos:column="50">[<expr><name><name pos:line="37" pos:column="51">x<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">-&gt;<pos:position pos:line="37" pos:column="57"/></operator><name pos:line="37" pos:column="54">baselen<pos:position pos:line="37" pos:column="61"/></name></name> <operator pos:line="37" pos:column="62">-<pos:position pos:line="37" pos:column="63"/></operator> <literal type="number" pos:line="37" pos:column="64">1<pos:position pos:line="37" pos:column="65"/></literal></expr>]<pos:position pos:line="37" pos:column="66"/></index></name> <operator pos:line="37" pos:column="67">==<pos:position pos:line="37" pos:column="69"/></operator> <literal type="char" pos:line="37" pos:column="70">'/'<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="75"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">match_pathname<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">pathname<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">pathlen<pos:position pos:line="38" pos:column="53"/></name></expr></argument>,
				   <argument><expr><name><name pos:line="39" pos:column="36">x<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">base<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="39" pos:column="45">x<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">-&gt;<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="48">baselen<pos:position pos:line="39" pos:column="55"/></name></name></expr> ?<pos:position pos:line="39" pos:column="57"/></condition><then pos:line="39" pos:column="57"> <expr><name><name pos:line="39" pos:column="58">x<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">baselen<pos:position pos:line="39" pos:column="68"/></name></name> <operator pos:line="39" pos:column="69">-<pos:position pos:line="39" pos:column="70"/></operator> <literal type="number" pos:line="39" pos:column="71">1<pos:position pos:line="39" pos:column="72"/></literal></expr> <pos:position pos:line="39" pos:column="73"/></then><else pos:line="39" pos:column="73">: <expr><literal type="number" pos:line="39" pos:column="75">0<pos:position pos:line="39" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
				   <argument><expr><name pos:line="40" pos:column="36">exclude<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">prefix<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="53">x<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">-&gt;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="56">patternlen<pos:position pos:line="40" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="68">x<pos:position pos:line="40" pos:column="69"/></name><operator pos:line="40" pos:column="69">-&gt;<pos:position pos:line="40" pos:column="74"/></operator><name pos:line="40" pos:column="71">flags<pos:position pos:line="40" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="78"/></condition><then pos:line="40" pos:column="78"> <block pos:line="40" pos:column="79">{
			<expr_stmt><expr><name pos:line="41" pos:column="25">exc<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">x<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
			<break pos:line="42" pos:column="25">break;<pos:position pos:line="42" pos:column="31"/></break>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
	}<pos:position pos:line="44" pos:column="10"/></block></for>
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">exc<pos:position pos:line="45" pos:column="19"/></name></expr>;<pos:position pos:line="45" pos:column="20"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

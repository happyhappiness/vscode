<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6908_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">mspace<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">create_mspace_with_base<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type> <name pos:line="1" pos:column="38">base<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">size_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">capacity<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">locked<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list> <block pos:line="1" pos:column="73">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">mstate<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">m<pos:position pos:line="2" pos:column="11"/></name> <init pos:line="2" pos:column="12">= <expr><literal type="number" pos:line="2" pos:column="14">0<pos:position pos:line="2" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">msize<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">ensure_initialization<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">msize<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <call><name pos:line="5" pos:column="11">pad_request<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><sizeof pos:line="5" pos:column="23">sizeof<argument_list pos:line="5" pos:column="29">(<argument><expr pos:line="5" pos:column="30">struct <name pos:line="5" pos:column="37">malloc_state<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">capacity<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&gt;<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="18">msize<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">+<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">TOP_FOOT_SIZE<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">&amp;&amp;<pos:position pos:line="6" pos:column="50"/></operator>
      <name pos:line="7" pos:column="7">capacity<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">&lt;<pos:position pos:line="7" pos:column="20"/></operator> <operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">size_t<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">)<pos:position pos:line="7" pos:column="26"/></operator> <operator pos:line="7" pos:column="27">-<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">msize<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">+<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="37">TOP_FOOT_SIZE<pos:position pos:line="7" pos:column="50"/></name> <operator pos:line="7" pos:column="51">+<pos:position pos:line="7" pos:column="52"/></operator> <name><name pos:line="7" pos:column="53">mparams<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">.<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="61">page_size<pos:position pos:line="7" pos:column="70"/></name></name><operator pos:line="7" pos:column="70">)<pos:position pos:line="7" pos:column="71"/></operator></expr>)<pos:position pos:line="7" pos:column="72"/></condition><then pos:line="7" pos:column="72"> <block pos:line="7" pos:column="73">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">m<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">init_user_mstate<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">char<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></operator><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">base<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">capacity<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">m<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">seg<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">sflags<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">EXTERN_BIT<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">set_lock<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">m<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">locked<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <return pos:line="12" pos:column="3">return <expr><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">mspace<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">)<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">m<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

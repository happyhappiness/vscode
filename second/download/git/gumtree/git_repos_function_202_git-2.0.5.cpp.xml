<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_202_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">should_include<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">commit<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">commit<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">void<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">_data<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">include_data<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">data<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><name pos:line="3" pos:column="37">_data<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">bitmap_pos<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">bitmap_pos<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <call><name pos:line="6" pos:column="22">bitmap_position<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name><name pos:line="6" pos:column="38">commit<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">object<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">.<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="53">sha1<pos:position pos:line="6" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">bitmap_pos<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">bitmap_pos<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">ext_index_add_object<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><operator pos:line="8" pos:column="51">(<pos:position pos:line="8" pos:column="52"/></operator>struct <name pos:line="8" pos:column="59">object<pos:position pos:line="8" pos:column="65"/></name> <operator pos:line="8" pos:column="66">*<pos:position pos:line="8" pos:column="67"/></operator><operator pos:line="8" pos:column="67">)<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="68">commit<pos:position pos:line="8" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="76">NULL<pos:position pos:line="8" pos:column="80"/></name></expr></argument>)<pos:position pos:line="8" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="82"/></expr_stmt></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">add_to_include_set<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">data<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="39">commit<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">object<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">.<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">sha1<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="60">bitmap_pos<pos:position pos:line="10" pos:column="70"/></name></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="72"/></condition><then pos:line="10" pos:column="72"> <block pos:line="10" pos:column="73">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">commit_list<pos:position pos:line="11" pos:column="35"/></name></name> <modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier></type><name pos:line="11" pos:column="37">parent<pos:position pos:line="11" pos:column="43"/></name> <init pos:line="11" pos:column="44">= <expr><name><name pos:line="11" pos:column="46">commit<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">-&gt;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="54">parents<pos:position pos:line="11" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="62"/></decl_stmt>

		<while pos:line="13" pos:column="17">while <condition pos:line="13" pos:column="23">(<expr><name pos:line="13" pos:column="24">parent<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition> <block pos:line="13" pos:column="32">{
			<expr_stmt><expr><name><name pos:line="14" pos:column="25">parent<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">item<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">object<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">.<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">flags<pos:position pos:line="14" pos:column="51"/></name></name> <operator pos:line="14" pos:column="52">|=<pos:position pos:line="14" pos:column="54"/></operator> <name pos:line="14" pos:column="55">SEEN<pos:position pos:line="14" pos:column="59"/></name></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">parent<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <name><name pos:line="15" pos:column="34">parent<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">next<pos:position pos:line="15" pos:column="46"/></name></name></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></while>

		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5736_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_send_pack<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">argc<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">prefix<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">nr_refspecs<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">refspecs<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">remote_name<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">NULL<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">remote<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">remote<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">dest<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name><name pos:line="8" pos:column="13">fd<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><literal type="number" pos:line="8" pos:column="16">2<pos:position pos:line="8" pos:column="17"/></literal></expr>]<pos:position pos:line="8" pos:column="18"/></index></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">child_process<pos:position pos:line="9" pos:column="29"/></name></name> <modifier pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></modifier></type><name pos:line="9" pos:column="31">conn<pos:position pos:line="9" pos:column="35"/></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">oid_array<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">extra_have<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><name pos:line="10" pos:column="39">OID_ARRAY_INIT<pos:position pos:line="10" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">oid_array<pos:position pos:line="11" pos:column="25"/></name></name></type> <name pos:line="11" pos:column="26">shallow<pos:position pos:line="11" pos:column="33"/></name> <init pos:line="11" pos:column="34">= <expr><name pos:line="11" pos:column="36">OID_ARRAY_INIT<pos:position pos:line="11" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">ref<pos:position pos:line="12" pos:column="19"/></name></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">remote_refs<pos:position pos:line="12" pos:column="32"/></name></decl>, <modifier pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="35">local_refs<pos:position pos:line="12" pos:column="45"/></name></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">ret<pos:position pos:line="13" pos:column="16"/></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">helper_status<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">send_all<pos:position pos:line="15" pos:column="21"/></name> <init pos:line="15" pos:column="22">= <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">verbose<pos:position pos:line="16" pos:column="20"/></name> <init pos:line="16" pos:column="21">= <expr><literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">receivepack<pos:position pos:line="17" pos:column="32"/></name> <init pos:line="17" pos:column="33">= <expr><literal type="string" pos:line="17" pos:column="35">"git-receive-pack"<pos:position pos:line="17" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">unsigned<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">dry_run<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><literal type="number" pos:line="18" pos:column="28">0<pos:position pos:line="18" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">unsigned<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">send_mirror<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><literal type="number" pos:line="19" pos:column="32">0<pos:position pos:line="19" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">unsigned<pos:position pos:line="20" pos:column="17"/></name></type> <name pos:line="20" pos:column="18">force_update<pos:position pos:line="20" pos:column="30"/></name> <init pos:line="20" pos:column="31">= <expr><literal type="number" pos:line="20" pos:column="33">0<pos:position pos:line="20" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">unsigned<pos:position pos:line="21" pos:column="17"/></name></type> <name pos:line="21" pos:column="18">quiet<pos:position pos:line="21" pos:column="23"/></name> <init pos:line="21" pos:column="24">= <expr><literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">push_cert<pos:position pos:line="22" pos:column="22"/></name> <init pos:line="22" pos:column="23">= <expr><literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="23" pos:column="9">struct<pos:position pos:line="23" pos:column="15"/></name> <name pos:line="23" pos:column="16">string_list<pos:position pos:line="23" pos:column="27"/></name></name></type> <name pos:line="23" pos:column="28">push_options<pos:position pos:line="23" pos:column="40"/></name> <init pos:line="23" pos:column="41">= <expr><name pos:line="23" pos:column="43">STRING_LIST_INIT_NODUP<pos:position pos:line="23" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">unsigned<pos:position pos:line="24" pos:column="17"/></name></type> <name pos:line="24" pos:column="18">use_thin_pack<pos:position pos:line="24" pos:column="31"/></name> <init pos:line="24" pos:column="32">= <expr><literal type="number" pos:line="24" pos:column="34">0<pos:position pos:line="24" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="25" pos:column="9">unsigned<pos:position pos:line="25" pos:column="17"/></name></type> <name pos:line="25" pos:column="18">atomic<pos:position pos:line="25" pos:column="24"/></name> <init pos:line="25" pos:column="25">= <expr><literal type="number" pos:line="25" pos:column="27">0<pos:position pos:line="25" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="26" pos:column="9">unsigned<pos:position pos:line="26" pos:column="17"/></name></type> <name pos:line="26" pos:column="18">stateless_rpc<pos:position pos:line="26" pos:column="31"/></name> <init pos:line="26" pos:column="32">= <expr><literal type="number" pos:line="26" pos:column="34">0<pos:position pos:line="26" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="27" pos:column="9">int<pos:position pos:line="27" pos:column="12"/></name></type> <name pos:line="27" pos:column="13">flags<pos:position pos:line="27" pos:column="18"/></name></decl>;<pos:position pos:line="27" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="28" pos:column="9">unsigned<pos:position pos:line="28" pos:column="17"/></name> <name pos:line="28" pos:column="18">int<pos:position pos:line="28" pos:column="21"/></name></type> <name pos:line="28" pos:column="22">reject_reasons<pos:position pos:line="28" pos:column="36"/></name></decl>;<pos:position pos:line="28" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">int<pos:position pos:line="29" pos:column="12"/></name></type> <name pos:line="29" pos:column="13">progress<pos:position pos:line="29" pos:column="21"/></name> <init pos:line="29" pos:column="22">= <expr><operator pos:line="29" pos:column="24">-<pos:position pos:line="29" pos:column="25"/></operator><literal type="number" pos:line="29" pos:column="25">1<pos:position pos:line="29" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="30" pos:column="9">int<pos:position pos:line="30" pos:column="12"/></name></type> <name pos:line="30" pos:column="13">from_stdin<pos:position pos:line="30" pos:column="23"/></name> <init pos:line="30" pos:column="24">= <expr><literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="31" pos:column="9">struct<pos:position pos:line="31" pos:column="15"/></name> <name pos:line="31" pos:column="16">push_cas_option<pos:position pos:line="31" pos:column="31"/></name></name></type> <name pos:line="31" pos:column="32">cas<pos:position pos:line="31" pos:column="35"/></name> <init pos:line="31" pos:column="36">= <expr><block pos:line="31" pos:column="38">{<expr><literal type="number" pos:line="31" pos:column="39">0<pos:position pos:line="31" pos:column="40"/></literal></expr>}<pos:position pos:line="31" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="31" pos:column="42"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="33" pos:column="9">struct<pos:position pos:line="33" pos:column="15"/></name> <name pos:line="33" pos:column="16">option<pos:position pos:line="33" pos:column="22"/></name></name></type> <name><name pos:line="33" pos:column="23">options<pos:position pos:line="33" pos:column="30"/></name><index pos:line="33" pos:column="30">[]<pos:position pos:line="33" pos:column="32"/></index></name> <init pos:line="33" pos:column="33">= <expr><block pos:line="33" pos:column="35">{
		<expr><call><name pos:line="34" pos:column="17">OPT__VERBOSITY<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><operator pos:line="34" pos:column="32">&amp;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="33">verbose<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>,
		<expr><call><name pos:line="35" pos:column="17">OPT_STRING<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><literal type="number" pos:line="35" pos:column="28">0<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="31">"receive-pack"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="47">&amp;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="48">receivepack<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="61">"receive-pack"<pos:position pos:line="35" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="77">N_<pos:position pos:line="35" pos:column="79"/></name><argument_list pos:line="35" pos:column="79">(<argument><expr><literal type="string" pos:line="35" pos:column="80">"receive pack program"<pos:position pos:line="35" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="104"/></argument_list></call></expr>,
		<expr><call><name pos:line="36" pos:column="17">OPT_STRING<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><literal type="number" pos:line="36" pos:column="28">0<pos:position pos:line="36" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="31">"exec"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="39">&amp;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="40">receivepack<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="53">"receive-pack"<pos:position pos:line="36" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="69">N_<pos:position pos:line="36" pos:column="71"/></name><argument_list pos:line="36" pos:column="71">(<argument><expr><literal type="string" pos:line="36" pos:column="72">"receive pack program"<pos:position pos:line="36" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="96"/></argument_list></call></expr>,
		<expr><call><name pos:line="37" pos:column="17">OPT_STRING<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><literal type="number" pos:line="37" pos:column="28">0<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="31">"remote"<pos:position pos:line="37" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="41">&amp;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="42">remote_name<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="55">"remote"<pos:position pos:line="37" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="65">N_<pos:position pos:line="37" pos:column="67"/></name><argument_list pos:line="37" pos:column="67">(<argument><expr><literal type="string" pos:line="37" pos:column="68">"remote name"<pos:position pos:line="37" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="38" pos:column="17">OPT_BOOL<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="29">"all"<pos:position pos:line="38" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="36">&amp;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="37">send_all<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="47">N_<pos:position pos:line="38" pos:column="49"/></name><argument_list pos:line="38" pos:column="49">(<argument><expr><literal type="string" pos:line="38" pos:column="50">"push all refs"<pos:position pos:line="38" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>,
		<expr><call><name pos:line="39" pos:column="17">OPT_BOOL<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="char" pos:line="39" pos:column="26">'n'<pos:position pos:line="39" pos:column="29"/></literal></expr></argument> , <argument><expr><literal type="string" pos:line="39" pos:column="32">"dry-run"<pos:position pos:line="39" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="43">&amp;<pos:position pos:line="39" pos:column="48"/></operator><name pos:line="39" pos:column="44">dry_run<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="53">N_<pos:position pos:line="39" pos:column="55"/></name><argument_list pos:line="39" pos:column="55">(<argument><expr><literal type="string" pos:line="39" pos:column="56">"dry run"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>,
		<expr><call><name pos:line="40" pos:column="17">OPT_BOOL<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><literal type="number" pos:line="40" pos:column="26">0<pos:position pos:line="40" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="29">"mirror"<pos:position pos:line="40" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="39">&amp;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="40">send_mirror<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="53">N_<pos:position pos:line="40" pos:column="55"/></name><argument_list pos:line="40" pos:column="55">(<argument><expr><literal type="string" pos:line="40" pos:column="56">"mirror all refs"<pos:position pos:line="40" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="41" pos:column="17">OPT_BOOL<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="char" pos:line="41" pos:column="26">'f'<pos:position pos:line="41" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="31">"force"<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">&amp;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="41">force_update<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="55">N_<pos:position pos:line="41" pos:column="57"/></name><argument_list pos:line="41" pos:column="57">(<argument><expr><literal type="string" pos:line="41" pos:column="58">"force updates"<pos:position pos:line="41" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr>,
		<expr><block pos:line="42" pos:column="17">{ <expr><name pos:line="42" pos:column="19">OPTION_CALLBACK<pos:position pos:line="42" pos:column="34"/></name></expr>,
		  <expr><literal type="number" pos:line="43" pos:column="19">0<pos:position pos:line="43" pos:column="20"/></literal></expr>, <expr><literal type="string" pos:line="43" pos:column="22">"signed"<pos:position pos:line="43" pos:column="30"/></literal></expr>, <expr><operator pos:line="43" pos:column="32">&amp;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="33">push_cert<pos:position pos:line="43" pos:column="42"/></name></expr>, <expr><literal type="string" pos:line="43" pos:column="44">"yes|no|if-asked"<pos:position pos:line="43" pos:column="61"/></literal></expr>, <expr><call><name pos:line="43" pos:column="63">N_<pos:position pos:line="43" pos:column="65"/></name><argument_list pos:line="43" pos:column="65">(<argument><expr><literal type="string" pos:line="43" pos:column="66">"GPG sign the push"<pos:position pos:line="43" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="86"/></argument_list></call></expr>,
		  <expr><name pos:line="44" pos:column="19">PARSE_OPT_OPTARG<pos:position pos:line="44" pos:column="35"/></name></expr>, <expr><name pos:line="44" pos:column="37">option_parse_push_signed<pos:position pos:line="44" pos:column="61"/></name></expr> }<pos:position pos:line="44" pos:column="63"/></block></expr>,
		<expr><call><name pos:line="45" pos:column="17">OPT_STRING_LIST<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><literal type="number" pos:line="45" pos:column="33">0<pos:position pos:line="45" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="36">"push-option"<pos:position pos:line="45" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="51">&amp;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="52">push_options<pos:position pos:line="45" pos:column="64"/></name></expr></argument>,
				<argument><expr><call><name pos:line="46" pos:column="33">N_<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><literal type="string" pos:line="46" pos:column="36">"server-specific"<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="47" pos:column="33">N_<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><literal type="string" pos:line="47" pos:column="36">"option to transmit"<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="48" pos:column="17">OPT_BOOL<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="29">"progress"<pos:position pos:line="48" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="41">&amp;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="42">progress<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="52">N_<pos:position pos:line="48" pos:column="54"/></name><argument_list pos:line="48" pos:column="54">(<argument><expr><literal type="string" pos:line="48" pos:column="55">"force progress reporting"<pos:position pos:line="48" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="49" pos:column="17">OPT_BOOL<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><literal type="number" pos:line="49" pos:column="26">0<pos:position pos:line="49" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="29">"thin"<pos:position pos:line="49" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="37">&amp;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="38">use_thin_pack<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="53">N_<pos:position pos:line="49" pos:column="55"/></name><argument_list pos:line="49" pos:column="55">(<argument><expr><literal type="string" pos:line="49" pos:column="56">"use thin pack"<pos:position pos:line="49" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></call></expr>,
		<expr><call><name pos:line="50" pos:column="17">OPT_BOOL<pos:position pos:line="50" pos:column="25"/></name><argument_list pos:line="50" pos:column="25">(<argument><expr><literal type="number" pos:line="50" pos:column="26">0<pos:position pos:line="50" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="29">"atomic"<pos:position pos:line="50" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="39">&amp;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="40">atomic<pos:position pos:line="50" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="48">N_<pos:position pos:line="50" pos:column="50"/></name><argument_list pos:line="50" pos:column="50">(<argument><expr><literal type="string" pos:line="50" pos:column="51">"request atomic transaction on remote side"<pos:position pos:line="50" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="96"/></argument_list></call></expr>,
		<expr><call><name pos:line="51" pos:column="17">OPT_BOOL<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="29">"stateless-rpc"<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="46">&amp;<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="47">stateless_rpc<pos:position pos:line="51" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="62">N_<pos:position pos:line="51" pos:column="64"/></name><argument_list pos:line="51" pos:column="64">(<argument><expr><literal type="string" pos:line="51" pos:column="65">"use stateless RPC protocol"<pos:position pos:line="51" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="95"/></argument_list></call></expr>,
		<expr><call><name pos:line="52" pos:column="17">OPT_BOOL<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><literal type="number" pos:line="52" pos:column="26">0<pos:position pos:line="52" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="29">"stdin"<pos:position pos:line="52" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="38">&amp;<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="39">from_stdin<pos:position pos:line="52" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="51">N_<pos:position pos:line="52" pos:column="53"/></name><argument_list pos:line="52" pos:column="53">(<argument><expr><literal type="string" pos:line="52" pos:column="54">"read refs from stdin"<pos:position pos:line="52" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="78"/></argument_list></call></expr>,
		<expr><call><name pos:line="53" pos:column="17">OPT_BOOL<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><literal type="number" pos:line="53" pos:column="26">0<pos:position pos:line="53" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="29">"helper-status"<pos:position pos:line="53" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="46">&amp;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="47">helper_status<pos:position pos:line="53" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="62">N_<pos:position pos:line="53" pos:column="64"/></name><argument_list pos:line="53" pos:column="64">(<argument><expr><literal type="string" pos:line="53" pos:column="65">"print status from remote helper"<pos:position pos:line="53" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="100"/></argument_list></call></expr>,
		<expr><block pos:line="54" pos:column="17">{ <expr><name pos:line="54" pos:column="19">OPTION_CALLBACK<pos:position pos:line="54" pos:column="34"/></name></expr>,
		  <expr><literal type="number" pos:line="55" pos:column="19">0<pos:position pos:line="55" pos:column="20"/></literal></expr>, <expr><name pos:line="55" pos:column="22">CAS_OPT_NAME<pos:position pos:line="55" pos:column="34"/></name></expr>, <expr><operator pos:line="55" pos:column="36">&amp;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="37">cas<pos:position pos:line="55" pos:column="40"/></name></expr>, <expr><call><name pos:line="55" pos:column="42">N_<pos:position pos:line="55" pos:column="44"/></name><argument_list pos:line="55" pos:column="44">(<argument><expr><literal type="string" pos:line="55" pos:column="45">"refname&gt;:&lt;expect"<pos:position pos:line="55" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>,
		  <expr><call><name pos:line="56" pos:column="19">N_<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><literal type="string" pos:line="56" pos:column="22">"require old value of ref to be at this value"<pos:position pos:line="56" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>,
		  <expr><name pos:line="57" pos:column="19">PARSE_OPT_OPTARG<pos:position pos:line="57" pos:column="35"/></name></expr>, <expr><name pos:line="57" pos:column="37">parseopt_push_cas_option<pos:position pos:line="57" pos:column="61"/></name></expr> }<pos:position pos:line="57" pos:column="63"/></block></expr>,
		<macro><name pos:line="58" pos:column="17">OPT_END<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">()<pos:position pos:line="58" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="59" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="59" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="61" pos:column="9">git_config<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><name pos:line="61" pos:column="20">send_pack_config<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">NULL<pos:position pos:line="61" pos:column="42"/></name></expr></argument>)<pos:position pos:line="61" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="62" pos:column="9">argc<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name pos:line="62" pos:column="16">parse_options<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">argc<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="36">argv<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">prefix<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">options<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="59">send_pack_usage<pos:position pos:line="62" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="76">0<pos:position pos:line="62" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="79"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">argc<pos:position pos:line="63" pos:column="17"/></name> <operator pos:line="63" pos:column="18">&gt;<pos:position pos:line="63" pos:column="22"/></operator> <literal type="number" pos:line="63" pos:column="20">0<pos:position pos:line="63" pos:column="21"/></literal></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block pos:line="63" pos:column="23">{
		<expr_stmt><expr><name pos:line="64" pos:column="17">dest<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <name><name pos:line="64" pos:column="24">argv<pos:position pos:line="64" pos:column="28"/></name><index pos:line="64" pos:column="28">[<expr><literal type="number" pos:line="64" pos:column="29">0<pos:position pos:line="64" pos:column="30"/></literal></expr>]<pos:position pos:line="64" pos:column="31"/></index></name></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="65" pos:column="17">refspecs<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">=<pos:position pos:line="65" pos:column="27"/></operator> <operator pos:line="65" pos:column="28">(<pos:position pos:line="65" pos:column="29"/></operator><specifier pos:line="65" pos:column="29">const<pos:position pos:line="65" pos:column="34"/></specifier> <name pos:line="65" pos:column="35">char<pos:position pos:line="65" pos:column="39"/></name> <operator pos:line="65" pos:column="40">*<pos:position pos:line="65" pos:column="41"/></operator><operator pos:line="65" pos:column="41">*<pos:position pos:line="65" pos:column="42"/></operator><operator pos:line="65" pos:column="42">)<pos:position pos:line="65" pos:column="43"/></operator><operator pos:line="65" pos:column="43">(<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="44">argv<pos:position pos:line="65" pos:column="48"/></name> <operator pos:line="65" pos:column="49">+<pos:position pos:line="65" pos:column="50"/></operator> <literal type="number" pos:line="65" pos:column="51">1<pos:position pos:line="65" pos:column="52"/></literal><operator pos:line="65" pos:column="52">)<pos:position pos:line="65" pos:column="53"/></operator></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="66" pos:column="17">nr_refspecs<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">argc<pos:position pos:line="66" pos:column="35"/></name> <operator pos:line="66" pos:column="36">-<pos:position pos:line="66" pos:column="37"/></operator> <literal type="number" pos:line="66" pos:column="38">1<pos:position pos:line="66" pos:column="39"/></literal></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">dest<pos:position pos:line="69" pos:column="18"/></name></expr>)<pos:position pos:line="69" pos:column="19"/></condition><then pos:line="69" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="17">usage_with_options<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">send_pack_usage<pos:position pos:line="70" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="53">options<pos:position pos:line="70" pos:column="60"/></name></expr></argument>)<pos:position pos:line="70" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="62"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="72" pos:column="9">args<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">.<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">verbose<pos:position pos:line="72" pos:column="21"/></name></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <name pos:line="72" pos:column="24">verbose<pos:position pos:line="72" pos:column="31"/></name></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="73" pos:column="9">args<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">.<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">dry_run<pos:position pos:line="73" pos:column="21"/></name></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">dry_run<pos:position pos:line="73" pos:column="31"/></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="74" pos:column="9">args<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">.<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">send_mirror<pos:position pos:line="74" pos:column="25"/></name></name> <operator pos:line="74" pos:column="26">=<pos:position pos:line="74" pos:column="27"/></operator> <name pos:line="74" pos:column="28">send_mirror<pos:position pos:line="74" pos:column="39"/></name></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="75" pos:column="9">args<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">.<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="14">force_update<pos:position pos:line="75" pos:column="26"/></name></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator> <name pos:line="75" pos:column="29">force_update<pos:position pos:line="75" pos:column="41"/></name></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">args<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">.<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">quiet<pos:position pos:line="76" pos:column="19"/></name></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">quiet<pos:position pos:line="76" pos:column="27"/></name></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="77" pos:column="9">args<pos:position pos:line="77" pos:column="13"/></name><operator pos:line="77" pos:column="13">.<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">push_cert<pos:position pos:line="77" pos:column="23"/></name></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <name pos:line="77" pos:column="26">push_cert<pos:position pos:line="77" pos:column="35"/></name></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="78" pos:column="9">args<pos:position pos:line="78" pos:column="13"/></name><operator pos:line="78" pos:column="13">.<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="14">progress<pos:position pos:line="78" pos:column="22"/></name></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <name pos:line="78" pos:column="25">progress<pos:position pos:line="78" pos:column="33"/></name></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="79" pos:column="9">args<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">.<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">use_thin_pack<pos:position pos:line="79" pos:column="27"/></name></name> <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="30">use_thin_pack<pos:position pos:line="79" pos:column="43"/></name></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="80" pos:column="9">args<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">.<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="14">atomic<pos:position pos:line="80" pos:column="20"/></name></name> <operator pos:line="80" pos:column="21">=<pos:position pos:line="80" pos:column="22"/></operator> <name pos:line="80" pos:column="23">atomic<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="81" pos:column="9">args<pos:position pos:line="81" pos:column="13"/></name><operator pos:line="81" pos:column="13">.<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">stateless_rpc<pos:position pos:line="81" pos:column="27"/></name></name> <operator pos:line="81" pos:column="28">=<pos:position pos:line="81" pos:column="29"/></operator> <name pos:line="81" pos:column="30">stateless_rpc<pos:position pos:line="81" pos:column="43"/></name></expr>;<pos:position pos:line="81" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="82" pos:column="9">args<pos:position pos:line="82" pos:column="13"/></name><operator pos:line="82" pos:column="13">.<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="14">push_options<pos:position pos:line="82" pos:column="26"/></name></name> <operator pos:line="82" pos:column="27">=<pos:position pos:line="82" pos:column="28"/></operator> <ternary><condition><expr><name><name pos:line="82" pos:column="29">push_options<pos:position pos:line="82" pos:column="41"/></name><operator pos:line="82" pos:column="41">.<pos:position pos:line="82" pos:column="42"/></operator><name pos:line="82" pos:column="42">nr<pos:position pos:line="82" pos:column="44"/></name></name></expr> ?<pos:position pos:line="82" pos:column="46"/></condition><then pos:line="82" pos:column="46"> <expr><operator pos:line="82" pos:column="47">&amp;<pos:position pos:line="82" pos:column="52"/></operator><name pos:line="82" pos:column="48">push_options<pos:position pos:line="82" pos:column="60"/></name></expr> <pos:position pos:line="82" pos:column="61"/></then><else pos:line="82" pos:column="61">: <expr><name pos:line="82" pos:column="63">NULL<pos:position pos:line="82" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="82" pos:column="68"/></expr_stmt>

	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">from_stdin<pos:position pos:line="84" pos:column="23"/></name></expr>)<pos:position pos:line="84" pos:column="24"/></condition><then pos:line="84" pos:column="24"> <block pos:line="84" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="85" pos:column="17">struct<pos:position pos:line="85" pos:column="23"/></name> <name pos:line="85" pos:column="24">argv_array<pos:position pos:line="85" pos:column="34"/></name></name></type> <name pos:line="85" pos:column="35">all_refspecs<pos:position pos:line="85" pos:column="47"/></name> <init pos:line="85" pos:column="48">= <expr><name pos:line="85" pos:column="50">ARGV_ARRAY_INIT<pos:position pos:line="85" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="85" pos:column="66"/></decl_stmt>

		<for pos:line="87" pos:column="17">for <control pos:line="87" pos:column="21">(<init><expr><name pos:line="87" pos:column="22">i<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <literal type="number" pos:line="87" pos:column="26">0<pos:position pos:line="87" pos:column="27"/></literal></expr>;<pos:position pos:line="87" pos:column="28"/></init> <condition><expr><name pos:line="87" pos:column="29">i<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">&lt;<pos:position pos:line="87" pos:column="35"/></operator> <name pos:line="87" pos:column="33">nr_refspecs<pos:position pos:line="87" pos:column="44"/></name></expr>;<pos:position pos:line="87" pos:column="45"/></condition> <incr><expr><name pos:line="87" pos:column="46">i<pos:position pos:line="87" pos:column="47"/></name><operator pos:line="87" pos:column="47">++<pos:position pos:line="87" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="87" pos:column="50"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="25">argv_array_push<pos:position pos:line="88" pos:column="40"/></name><argument_list pos:line="88" pos:column="40">(<argument><expr><operator pos:line="88" pos:column="41">&amp;<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="42">all_refspecs<pos:position pos:line="88" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="56">refspecs<pos:position pos:line="88" pos:column="64"/></name><index pos:line="88" pos:column="64">[<expr><name pos:line="88" pos:column="65">i<pos:position pos:line="88" pos:column="66"/></name></expr>]<pos:position pos:line="88" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt></block></for>

		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name><name pos:line="90" pos:column="21">args<pos:position pos:line="90" pos:column="25"/></name><operator pos:line="90" pos:column="25">.<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="26">stateless_rpc<pos:position pos:line="90" pos:column="39"/></name></name></expr>)<pos:position pos:line="90" pos:column="40"/></condition><then pos:line="90" pos:column="40"> <block pos:line="90" pos:column="41">{
			<decl_stmt><decl><type><specifier pos:line="91" pos:column="25">const<pos:position pos:line="91" pos:column="30"/></specifier> <name pos:line="91" pos:column="31">char<pos:position pos:line="91" pos:column="35"/></name> <modifier pos:line="91" pos:column="36">*<pos:position pos:line="91" pos:column="37"/></modifier></type><name pos:line="91" pos:column="37">buf<pos:position pos:line="91" pos:column="40"/></name></decl>;<pos:position pos:line="91" pos:column="41"/></decl_stmt>
			<while pos:line="92" pos:column="25">while <condition pos:line="92" pos:column="31">(<expr><operator pos:line="92" pos:column="32">(<pos:position pos:line="92" pos:column="33"/></operator><name pos:line="92" pos:column="33">buf<pos:position pos:line="92" pos:column="36"/></name> <operator pos:line="92" pos:column="37">=<pos:position pos:line="92" pos:column="38"/></operator> <call><name pos:line="92" pos:column="39">packet_read_line<pos:position pos:line="92" pos:column="55"/></name><argument_list pos:line="92" pos:column="55">(<argument><expr><literal type="number" pos:line="92" pos:column="56">0<pos:position pos:line="92" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="59">NULL<pos:position pos:line="92" pos:column="63"/></name></expr></argument>)<pos:position pos:line="92" pos:column="64"/></argument_list></call><operator pos:line="92" pos:column="64">)<pos:position pos:line="92" pos:column="65"/></operator></expr>)<pos:position pos:line="92" pos:column="66"/></condition>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="33">argv_array_push<pos:position pos:line="93" pos:column="48"/></name><argument_list pos:line="93" pos:column="48">(<argument><expr><operator pos:line="93" pos:column="49">&amp;<pos:position pos:line="93" pos:column="54"/></operator><name pos:line="93" pos:column="50">all_refspecs<pos:position pos:line="93" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="64">buf<pos:position pos:line="93" pos:column="67"/></name></expr></argument>)<pos:position pos:line="93" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="69"/></expr_stmt></block></while>
		}<pos:position pos:line="94" pos:column="18"/></block></then> <else pos:line="94" pos:column="19">else <block pos:line="94" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="95" pos:column="25">struct<pos:position pos:line="95" pos:column="31"/></name> <name pos:line="95" pos:column="32">strbuf<pos:position pos:line="95" pos:column="38"/></name></name></type> <name pos:line="95" pos:column="39">line<pos:position pos:line="95" pos:column="43"/></name> <init pos:line="95" pos:column="44">= <expr><name pos:line="95" pos:column="46">STRBUF_INIT<pos:position pos:line="95" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="95" pos:column="58"/></decl_stmt>
			<while pos:line="96" pos:column="25">while <condition pos:line="96" pos:column="31">(<expr><call><name pos:line="96" pos:column="32">strbuf_getline<pos:position pos:line="96" pos:column="46"/></name><argument_list pos:line="96" pos:column="46">(<argument><expr><operator pos:line="96" pos:column="47">&amp;<pos:position pos:line="96" pos:column="52"/></operator><name pos:line="96" pos:column="48">line<pos:position pos:line="96" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="54">stdin<pos:position pos:line="96" pos:column="59"/></name></expr></argument>)<pos:position pos:line="96" pos:column="60"/></argument_list></call> <operator pos:line="96" pos:column="61">!=<pos:position pos:line="96" pos:column="63"/></operator> <name pos:line="96" pos:column="64">EOF<pos:position pos:line="96" pos:column="67"/></name></expr>)<pos:position pos:line="96" pos:column="68"/></condition>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="33">argv_array_push<pos:position pos:line="97" pos:column="48"/></name><argument_list pos:line="97" pos:column="48">(<argument><expr><operator pos:line="97" pos:column="49">&amp;<pos:position pos:line="97" pos:column="54"/></operator><name pos:line="97" pos:column="50">all_refspecs<pos:position pos:line="97" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="64">line<pos:position pos:line="97" pos:column="68"/></name><operator pos:line="97" pos:column="68">.<pos:position pos:line="97" pos:column="69"/></operator><name pos:line="97" pos:column="69">buf<pos:position pos:line="97" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="74"/></expr_stmt></block></while>
			<expr_stmt><expr><call><name pos:line="98" pos:column="25">strbuf_release<pos:position pos:line="98" pos:column="39"/></name><argument_list pos:line="98" pos:column="39">(<argument><expr><operator pos:line="98" pos:column="40">&amp;<pos:position pos:line="98" pos:column="45"/></operator><name pos:line="98" pos:column="41">line<pos:position pos:line="98" pos:column="45"/></name></expr></argument>)<pos:position pos:line="98" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="99" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="101" pos:column="17">refspecs<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">=<pos:position pos:line="101" pos:column="27"/></operator> <name><name pos:line="101" pos:column="28">all_refspecs<pos:position pos:line="101" pos:column="40"/></name><operator pos:line="101" pos:column="40">.<pos:position pos:line="101" pos:column="41"/></operator><name pos:line="101" pos:column="41">argv<pos:position pos:line="101" pos:column="45"/></name></name></expr>;<pos:position pos:line="101" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="102" pos:column="17">nr_refspecs<pos:position pos:line="102" pos:column="28"/></name> <operator pos:line="102" pos:column="29">=<pos:position pos:line="102" pos:column="30"/></operator> <name><name pos:line="102" pos:column="31">all_refspecs<pos:position pos:line="102" pos:column="43"/></name><operator pos:line="102" pos:column="43">.<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="44">argc<pos:position pos:line="102" pos:column="48"/></name></name></expr>;<pos:position pos:line="102" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="103" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="105" pos:column="9">/*
	 * --all and --mirror are incompatible; neither makes sense
	 * with any refspecs.
	 */</comment>
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">(<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">nr_refspecs<pos:position pos:line="109" pos:column="25"/></name> <operator pos:line="109" pos:column="26">&gt;<pos:position pos:line="109" pos:column="30"/></operator> <literal type="number" pos:line="109" pos:column="28">0<pos:position pos:line="109" pos:column="29"/></literal> <operator pos:line="109" pos:column="30">&amp;&amp;<pos:position pos:line="109" pos:column="40"/></operator> <operator pos:line="109" pos:column="33">(<pos:position pos:line="109" pos:column="34"/></operator><name pos:line="109" pos:column="34">send_all<pos:position pos:line="109" pos:column="42"/></name> <operator pos:line="109" pos:column="43">||<pos:position pos:line="109" pos:column="45"/></operator> <name><name pos:line="109" pos:column="46">args<pos:position pos:line="109" pos:column="50"/></name><operator pos:line="109" pos:column="50">.<pos:position pos:line="109" pos:column="51"/></operator><name pos:line="109" pos:column="51">send_mirror<pos:position pos:line="109" pos:column="62"/></name></name><operator pos:line="109" pos:column="62">)<pos:position pos:line="109" pos:column="63"/></operator><operator pos:line="109" pos:column="63">)<pos:position pos:line="109" pos:column="64"/></operator> <operator pos:line="109" pos:column="65">||<pos:position pos:line="109" pos:column="67"/></operator>
	    <operator pos:line="110" pos:column="13">(<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="14">send_all<pos:position pos:line="110" pos:column="22"/></name> <operator pos:line="110" pos:column="23">&amp;&amp;<pos:position pos:line="110" pos:column="33"/></operator> <name><name pos:line="110" pos:column="26">args<pos:position pos:line="110" pos:column="30"/></name><operator pos:line="110" pos:column="30">.<pos:position pos:line="110" pos:column="31"/></operator><name pos:line="110" pos:column="31">send_mirror<pos:position pos:line="110" pos:column="42"/></name></name><operator pos:line="110" pos:column="42">)<pos:position pos:line="110" pos:column="43"/></operator></expr>)<pos:position pos:line="110" pos:column="44"/></condition><then pos:line="110" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="17">usage_with_options<pos:position pos:line="111" pos:column="35"/></name><argument_list pos:line="111" pos:column="35">(<argument><expr><name pos:line="111" pos:column="36">send_pack_usage<pos:position pos:line="111" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="53">options<pos:position pos:line="111" pos:column="60"/></name></expr></argument>)<pos:position pos:line="111" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="62"/></expr_stmt></block></then></if>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">remote_name<pos:position pos:line="113" pos:column="24"/></name></expr>)<pos:position pos:line="113" pos:column="25"/></condition><then pos:line="113" pos:column="25"> <block pos:line="113" pos:column="26">{
		<expr_stmt><expr><name pos:line="114" pos:column="17">remote<pos:position pos:line="114" pos:column="23"/></name> <operator pos:line="114" pos:column="24">=<pos:position pos:line="114" pos:column="25"/></operator> <call><name pos:line="114" pos:column="26">remote_get<pos:position pos:line="114" pos:column="36"/></name><argument_list pos:line="114" pos:column="36">(<argument><expr><name pos:line="114" pos:column="37">remote_name<pos:position pos:line="114" pos:column="48"/></name></expr></argument>)<pos:position pos:line="114" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="50"/></expr_stmt>
		<if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><operator pos:line="115" pos:column="21">!<pos:position pos:line="115" pos:column="22"/></operator><call><name pos:line="115" pos:column="22">remote_has_url<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><name pos:line="115" pos:column="37">remote<pos:position pos:line="115" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="45">dest<pos:position pos:line="115" pos:column="49"/></name></expr></argument>)<pos:position pos:line="115" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="51"/></condition><then pos:line="115" pos:column="51"> <block pos:line="115" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="116" pos:column="25">die<pos:position pos:line="116" pos:column="28"/></name><argument_list pos:line="116" pos:column="28">(<argument><expr><literal type="string" pos:line="116" pos:column="29">"Destination %s is not a uri for %s"<pos:position pos:line="116" pos:column="65"/></literal></expr></argument>,
			    <argument><expr><name pos:line="117" pos:column="29">dest<pos:position pos:line="117" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="35">remote_name<pos:position pos:line="117" pos:column="46"/></name></expr></argument>)<pos:position pos:line="117" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="118" pos:column="18"/></block></then></if>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if>

	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">progress<pos:position pos:line="121" pos:column="21"/></name> <operator pos:line="121" pos:column="22">==<pos:position pos:line="121" pos:column="24"/></operator> <operator pos:line="121" pos:column="25">-<pos:position pos:line="121" pos:column="26"/></operator><literal type="number" pos:line="121" pos:column="26">1<pos:position pos:line="121" pos:column="27"/></literal></expr>)<pos:position pos:line="121" pos:column="28"/></condition><then pos:line="121" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="17">progress<pos:position pos:line="122" pos:column="25"/></name> <operator pos:line="122" pos:column="26">=<pos:position pos:line="122" pos:column="27"/></operator> <operator pos:line="122" pos:column="28">!<pos:position pos:line="122" pos:column="29"/></operator><name><name pos:line="122" pos:column="29">args<pos:position pos:line="122" pos:column="33"/></name><operator pos:line="122" pos:column="33">.<pos:position pos:line="122" pos:column="34"/></operator><name pos:line="122" pos:column="34">quiet<pos:position pos:line="122" pos:column="39"/></name></name> <operator pos:line="122" pos:column="40">&amp;&amp;<pos:position pos:line="122" pos:column="50"/></operator> <call><name pos:line="122" pos:column="43">isatty<pos:position pos:line="122" pos:column="49"/></name><argument_list pos:line="122" pos:column="49">(<argument><expr><literal type="number" pos:line="122" pos:column="50">2<pos:position pos:line="122" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="53"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="123" pos:column="9">args<pos:position pos:line="123" pos:column="13"/></name><operator pos:line="123" pos:column="13">.<pos:position pos:line="123" pos:column="14"/></operator><name pos:line="123" pos:column="14">progress<pos:position pos:line="123" pos:column="22"/></name></name> <operator pos:line="123" pos:column="23">=<pos:position pos:line="123" pos:column="24"/></operator> <name pos:line="123" pos:column="25">progress<pos:position pos:line="123" pos:column="33"/></name></expr>;<pos:position pos:line="123" pos:column="34"/></expr_stmt>

	<if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><name><name pos:line="125" pos:column="13">args<pos:position pos:line="125" pos:column="17"/></name><operator pos:line="125" pos:column="17">.<pos:position pos:line="125" pos:column="18"/></operator><name pos:line="125" pos:column="18">stateless_rpc<pos:position pos:line="125" pos:column="31"/></name></name></expr>)<pos:position pos:line="125" pos:column="32"/></condition><then pos:line="125" pos:column="32"> <block pos:line="125" pos:column="33">{
		<expr_stmt><expr><name pos:line="126" pos:column="17">conn<pos:position pos:line="126" pos:column="21"/></name> <operator pos:line="126" pos:column="22">=<pos:position pos:line="126" pos:column="23"/></operator> <name pos:line="126" pos:column="24">NULL<pos:position pos:line="126" pos:column="28"/></name></expr>;<pos:position pos:line="126" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="127" pos:column="17">fd<pos:position pos:line="127" pos:column="19"/></name><index pos:line="127" pos:column="19">[<expr><literal type="number" pos:line="127" pos:column="20">0<pos:position pos:line="127" pos:column="21"/></literal></expr>]<pos:position pos:line="127" pos:column="22"/></index></name> <operator pos:line="127" pos:column="23">=<pos:position pos:line="127" pos:column="24"/></operator> <literal type="number" pos:line="127" pos:column="25">0<pos:position pos:line="127" pos:column="26"/></literal></expr>;<pos:position pos:line="127" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="128" pos:column="17">fd<pos:position pos:line="128" pos:column="19"/></name><index pos:line="128" pos:column="19">[<expr><literal type="number" pos:line="128" pos:column="20">1<pos:position pos:line="128" pos:column="21"/></literal></expr>]<pos:position pos:line="128" pos:column="22"/></index></name> <operator pos:line="128" pos:column="23">=<pos:position pos:line="128" pos:column="24"/></operator> <literal type="number" pos:line="128" pos:column="25">1<pos:position pos:line="128" pos:column="26"/></literal></expr>;<pos:position pos:line="128" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="129" pos:column="10"/></block></then> <else pos:line="129" pos:column="11">else <block pos:line="129" pos:column="16">{
		<expr_stmt><expr><name pos:line="130" pos:column="17">conn<pos:position pos:line="130" pos:column="21"/></name> <operator pos:line="130" pos:column="22">=<pos:position pos:line="130" pos:column="23"/></operator> <call><name pos:line="130" pos:column="24">git_connect<pos:position pos:line="130" pos:column="35"/></name><argument_list pos:line="130" pos:column="35">(<argument><expr><name pos:line="130" pos:column="36">fd<pos:position pos:line="130" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="40">dest<pos:position pos:line="130" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="46">receivepack<pos:position pos:line="130" pos:column="57"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name pos:line="131" pos:column="25">args<pos:position pos:line="131" pos:column="29"/></name><operator pos:line="131" pos:column="29">.<pos:position pos:line="131" pos:column="30"/></operator><name pos:line="131" pos:column="30">verbose<pos:position pos:line="131" pos:column="37"/></name></name></expr> ?<pos:position pos:line="131" pos:column="39"/></condition><then pos:line="131" pos:column="39"> <expr><name pos:line="131" pos:column="40">CONNECT_VERBOSE<pos:position pos:line="131" pos:column="55"/></name></expr> <pos:position pos:line="131" pos:column="56"/></then><else pos:line="131" pos:column="56">: <expr><literal type="number" pos:line="131" pos:column="58">0<pos:position pos:line="131" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="131" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="132" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="134" pos:column="9">get_remote_heads<pos:position pos:line="134" pos:column="25"/></name><argument_list pos:line="134" pos:column="25">(<argument><expr><name><name pos:line="134" pos:column="26">fd<pos:position pos:line="134" pos:column="28"/></name><index pos:line="134" pos:column="28">[<expr><literal type="number" pos:line="134" pos:column="29">0<pos:position pos:line="134" pos:column="30"/></literal></expr>]<pos:position pos:line="134" pos:column="31"/></index></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="33">NULL<pos:position pos:line="134" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="39">0<pos:position pos:line="134" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="134" pos:column="42">&amp;<pos:position pos:line="134" pos:column="47"/></operator><name pos:line="134" pos:column="43">remote_refs<pos:position pos:line="134" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="56">REF_NORMAL<pos:position pos:line="134" pos:column="66"/></name></expr></argument>,
			 <argument><expr><operator pos:line="135" pos:column="26">&amp;<pos:position pos:line="135" pos:column="31"/></operator><name pos:line="135" pos:column="27">extra_have<pos:position pos:line="135" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="39">&amp;<pos:position pos:line="135" pos:column="44"/></operator><name pos:line="135" pos:column="40">shallow<pos:position pos:line="135" pos:column="47"/></name></expr></argument>)<pos:position pos:line="135" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="137" pos:column="9">transport_verify_remote_names<pos:position pos:line="137" pos:column="38"/></name><argument_list pos:line="137" pos:column="38">(<argument><expr><name pos:line="137" pos:column="39">nr_refspecs<pos:position pos:line="137" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="52">refspecs<pos:position pos:line="137" pos:column="60"/></name></expr></argument>)<pos:position pos:line="137" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><name pos:line="139" pos:column="9">local_refs<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <call><name pos:line="139" pos:column="22">get_local_heads<pos:position pos:line="139" pos:column="37"/></name><argument_list pos:line="139" pos:column="37">()<pos:position pos:line="139" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name pos:line="141" pos:column="9">flags<pos:position pos:line="141" pos:column="14"/></name> <operator pos:line="141" pos:column="15">=<pos:position pos:line="141" pos:column="16"/></operator> <name pos:line="141" pos:column="17">MATCH_REFS_NONE<pos:position pos:line="141" pos:column="32"/></name></expr>;<pos:position pos:line="141" pos:column="33"/></expr_stmt>

	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">send_all<pos:position pos:line="143" pos:column="21"/></name></expr>)<pos:position pos:line="143" pos:column="22"/></condition><then pos:line="143" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="17">flags<pos:position pos:line="144" pos:column="22"/></name> <operator pos:line="144" pos:column="23">|=<pos:position pos:line="144" pos:column="25"/></operator> <name pos:line="144" pos:column="26">MATCH_REFS_ALL<pos:position pos:line="144" pos:column="40"/></name></expr>;<pos:position pos:line="144" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name><name pos:line="145" pos:column="13">args<pos:position pos:line="145" pos:column="17"/></name><operator pos:line="145" pos:column="17">.<pos:position pos:line="145" pos:column="18"/></operator><name pos:line="145" pos:column="18">send_mirror<pos:position pos:line="145" pos:column="29"/></name></name></expr>)<pos:position pos:line="145" pos:column="30"/></condition><then pos:line="145" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="17">flags<pos:position pos:line="146" pos:column="22"/></name> <operator pos:line="146" pos:column="23">|=<pos:position pos:line="146" pos:column="25"/></operator> <name pos:line="146" pos:column="26">MATCH_REFS_MIRROR<pos:position pos:line="146" pos:column="43"/></name></expr>;<pos:position pos:line="146" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="148" pos:column="9">/* match them up */</comment>
	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><call><name pos:line="149" pos:column="13">match_push_refs<pos:position pos:line="149" pos:column="28"/></name><argument_list pos:line="149" pos:column="28">(<argument><expr><name pos:line="149" pos:column="29">local_refs<pos:position pos:line="149" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="149" pos:column="41">&amp;<pos:position pos:line="149" pos:column="46"/></operator><name pos:line="149" pos:column="42">remote_refs<pos:position pos:line="149" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="55">nr_refspecs<pos:position pos:line="149" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="68">refspecs<pos:position pos:line="149" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="78">flags<pos:position pos:line="149" pos:column="83"/></name></expr></argument>)<pos:position pos:line="149" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="149" pos:column="85"/></condition><then pos:line="149" pos:column="85">
		<block type="pseudo"><return pos:line="150" pos:column="17">return <expr><operator pos:line="150" pos:column="24">-<pos:position pos:line="150" pos:column="25"/></operator><literal type="number" pos:line="150" pos:column="25">1<pos:position pos:line="150" pos:column="26"/></literal></expr>;<pos:position pos:line="150" pos:column="27"/></return></block></then></if>

	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><operator pos:line="152" pos:column="13">!<pos:position pos:line="152" pos:column="14"/></operator><call><name pos:line="152" pos:column="14">is_empty_cas<pos:position pos:line="152" pos:column="26"/></name><argument_list pos:line="152" pos:column="26">(<argument><expr><operator pos:line="152" pos:column="27">&amp;<pos:position pos:line="152" pos:column="32"/></operator><name pos:line="152" pos:column="28">cas<pos:position pos:line="152" pos:column="31"/></name></expr></argument>)<pos:position pos:line="152" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="33"/></condition><then pos:line="152" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="153" pos:column="17">apply_push_cas<pos:position pos:line="153" pos:column="31"/></name><argument_list pos:line="153" pos:column="31">(<argument><expr><operator pos:line="153" pos:column="32">&amp;<pos:position pos:line="153" pos:column="37"/></operator><name pos:line="153" pos:column="33">cas<pos:position pos:line="153" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="38">remote<pos:position pos:line="153" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="46">remote_refs<pos:position pos:line="153" pos:column="57"/></name></expr></argument>)<pos:position pos:line="153" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="155" pos:column="9">set_ref_status_for_push<pos:position pos:line="155" pos:column="32"/></name><argument_list pos:line="155" pos:column="32">(<argument><expr><name pos:line="155" pos:column="33">remote_refs<pos:position pos:line="155" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="46">args<pos:position pos:line="155" pos:column="50"/></name><operator pos:line="155" pos:column="50">.<pos:position pos:line="155" pos:column="51"/></operator><name pos:line="155" pos:column="51">send_mirror<pos:position pos:line="155" pos:column="62"/></name></name></expr></argument>,
		<argument><expr><name><name pos:line="156" pos:column="17">args<pos:position pos:line="156" pos:column="21"/></name><operator pos:line="156" pos:column="21">.<pos:position pos:line="156" pos:column="22"/></operator><name pos:line="156" pos:column="22">force_update<pos:position pos:line="156" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name pos:line="158" pos:column="9">ret<pos:position pos:line="158" pos:column="12"/></name> <operator pos:line="158" pos:column="13">=<pos:position pos:line="158" pos:column="14"/></operator> <call><name pos:line="158" pos:column="15">send_pack<pos:position pos:line="158" pos:column="24"/></name><argument_list pos:line="158" pos:column="24">(<argument><expr><operator pos:line="158" pos:column="25">&amp;<pos:position pos:line="158" pos:column="30"/></operator><name pos:line="158" pos:column="26">args<pos:position pos:line="158" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="32">fd<pos:position pos:line="158" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="36">conn<pos:position pos:line="158" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="42">remote_refs<pos:position pos:line="158" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="55">&amp;<pos:position pos:line="158" pos:column="60"/></operator><name pos:line="158" pos:column="56">extra_have<pos:position pos:line="158" pos:column="66"/></name></expr></argument>)<pos:position pos:line="158" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="68"/></expr_stmt>

	<if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><name pos:line="160" pos:column="13">helper_status<pos:position pos:line="160" pos:column="26"/></name></expr>)<pos:position pos:line="160" pos:column="27"/></condition><then pos:line="160" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="161" pos:column="17">print_helper_status<pos:position pos:line="161" pos:column="36"/></name><argument_list pos:line="161" pos:column="36">(<argument><expr><name pos:line="161" pos:column="37">remote_refs<pos:position pos:line="161" pos:column="48"/></name></expr></argument>)<pos:position pos:line="161" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="50"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="163" pos:column="9">close<pos:position pos:line="163" pos:column="14"/></name><argument_list pos:line="163" pos:column="14">(<argument><expr><name><name pos:line="163" pos:column="15">fd<pos:position pos:line="163" pos:column="17"/></name><index pos:line="163" pos:column="17">[<expr><literal type="number" pos:line="163" pos:column="18">1<pos:position pos:line="163" pos:column="19"/></literal></expr>]<pos:position pos:line="163" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="163" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="164" pos:column="9">close<pos:position pos:line="164" pos:column="14"/></name><argument_list pos:line="164" pos:column="14">(<argument><expr><name><name pos:line="164" pos:column="15">fd<pos:position pos:line="164" pos:column="17"/></name><index pos:line="164" pos:column="17">[<expr><literal type="number" pos:line="164" pos:column="18">0<pos:position pos:line="164" pos:column="19"/></literal></expr>]<pos:position pos:line="164" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="164" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><name pos:line="166" pos:column="9">ret<pos:position pos:line="166" pos:column="12"/></name> <operator pos:line="166" pos:column="13">|=<pos:position pos:line="166" pos:column="15"/></operator> <call><name pos:line="166" pos:column="16">finish_connect<pos:position pos:line="166" pos:column="30"/></name><argument_list pos:line="166" pos:column="30">(<argument><expr><name pos:line="166" pos:column="31">conn<pos:position pos:line="166" pos:column="35"/></name></expr></argument>)<pos:position pos:line="166" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="37"/></expr_stmt>

	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><operator pos:line="168" pos:column="13">!<pos:position pos:line="168" pos:column="14"/></operator><name pos:line="168" pos:column="14">helper_status<pos:position pos:line="168" pos:column="27"/></name></expr>)<pos:position pos:line="168" pos:column="28"/></condition><then pos:line="168" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="169" pos:column="17">transport_print_push_status<pos:position pos:line="169" pos:column="44"/></name><argument_list pos:line="169" pos:column="44">(<argument><expr><name pos:line="169" pos:column="45">dest<pos:position pos:line="169" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="51">remote_refs<pos:position pos:line="169" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="169" pos:column="64">args<pos:position pos:line="169" pos:column="68"/></name><operator pos:line="169" pos:column="68">.<pos:position pos:line="169" pos:column="69"/></operator><name pos:line="169" pos:column="69">verbose<pos:position pos:line="169" pos:column="76"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="78">0<pos:position pos:line="169" pos:column="79"/></literal></expr></argument>, <argument><expr><operator pos:line="169" pos:column="81">&amp;<pos:position pos:line="169" pos:column="86"/></operator><name pos:line="169" pos:column="82">reject_reasons<pos:position pos:line="169" pos:column="96"/></name></expr></argument>)<pos:position pos:line="169" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="98"/></expr_stmt></block></then></if>

	<if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><operator pos:line="171" pos:column="13">!<pos:position pos:line="171" pos:column="14"/></operator><name><name pos:line="171" pos:column="14">args<pos:position pos:line="171" pos:column="18"/></name><operator pos:line="171" pos:column="18">.<pos:position pos:line="171" pos:column="19"/></operator><name pos:line="171" pos:column="19">dry_run<pos:position pos:line="171" pos:column="26"/></name></name> <operator pos:line="171" pos:column="27">&amp;&amp;<pos:position pos:line="171" pos:column="37"/></operator> <name pos:line="171" pos:column="30">remote<pos:position pos:line="171" pos:column="36"/></name></expr>)<pos:position pos:line="171" pos:column="37"/></condition><then pos:line="171" pos:column="37"> <block pos:line="171" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="172" pos:column="17">struct<pos:position pos:line="172" pos:column="23"/></name> <name pos:line="172" pos:column="24">ref<pos:position pos:line="172" pos:column="27"/></name></name> <modifier pos:line="172" pos:column="28">*<pos:position pos:line="172" pos:column="29"/></modifier></type><name pos:line="172" pos:column="29">ref<pos:position pos:line="172" pos:column="32"/></name></decl>;<pos:position pos:line="172" pos:column="33"/></decl_stmt>
		<for pos:line="173" pos:column="17">for <control pos:line="173" pos:column="21">(<init><expr><name pos:line="173" pos:column="22">ref<pos:position pos:line="173" pos:column="25"/></name> <operator pos:line="173" pos:column="26">=<pos:position pos:line="173" pos:column="27"/></operator> <name pos:line="173" pos:column="28">remote_refs<pos:position pos:line="173" pos:column="39"/></name></expr>;<pos:position pos:line="173" pos:column="40"/></init> <condition><expr><name pos:line="173" pos:column="41">ref<pos:position pos:line="173" pos:column="44"/></name></expr>;<pos:position pos:line="173" pos:column="45"/></condition> <incr><expr><name pos:line="173" pos:column="46">ref<pos:position pos:line="173" pos:column="49"/></name> <operator pos:line="173" pos:column="50">=<pos:position pos:line="173" pos:column="51"/></operator> <name><name pos:line="173" pos:column="52">ref<pos:position pos:line="173" pos:column="55"/></name><operator pos:line="173" pos:column="55">-&gt;<pos:position pos:line="173" pos:column="60"/></operator><name pos:line="173" pos:column="57">next<pos:position pos:line="173" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="173" pos:column="62"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="25">transport_update_tracking_ref<pos:position pos:line="174" pos:column="54"/></name><argument_list pos:line="174" pos:column="54">(<argument><expr><name pos:line="174" pos:column="55">remote<pos:position pos:line="174" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="63">ref<pos:position pos:line="174" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="68">args<pos:position pos:line="174" pos:column="72"/></name><operator pos:line="174" pos:column="72">.<pos:position pos:line="174" pos:column="73"/></operator><name pos:line="174" pos:column="73">verbose<pos:position pos:line="174" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="82"/></expr_stmt></block></for>
	}<pos:position pos:line="175" pos:column="10"/></block></then></if>

	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><operator pos:line="177" pos:column="13">!<pos:position pos:line="177" pos:column="14"/></operator><name pos:line="177" pos:column="14">ret<pos:position pos:line="177" pos:column="17"/></name> <operator pos:line="177" pos:column="18">&amp;&amp;<pos:position pos:line="177" pos:column="28"/></operator> <operator pos:line="177" pos:column="21">!<pos:position pos:line="177" pos:column="22"/></operator><call><name pos:line="177" pos:column="22">transport_refs_pushed<pos:position pos:line="177" pos:column="43"/></name><argument_list pos:line="177" pos:column="43">(<argument><expr><name pos:line="177" pos:column="44">remote_refs<pos:position pos:line="177" pos:column="55"/></name></expr></argument>)<pos:position pos:line="177" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="57"/></condition><then pos:line="177" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="17">fprintf<pos:position pos:line="178" pos:column="24"/></name><argument_list pos:line="178" pos:column="24">(<argument><expr><name pos:line="178" pos:column="25">stderr<pos:position pos:line="178" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="33">"Everything up-to-date\n"<pos:position pos:line="178" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="60"/></expr_stmt></block></then></if>

	<return pos:line="180" pos:column="9">return <expr><name pos:line="180" pos:column="16">ret<pos:position pos:line="180" pos:column="19"/></name></expr>;<pos:position pos:line="180" pos:column="20"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

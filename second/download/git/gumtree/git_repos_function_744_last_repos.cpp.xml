<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_744_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">section_name_is_ok<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">name<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* Empty section names are bogus. */</comment>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><operator pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">name<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * Before a dot, we must be alphanumeric or dash. After the first dot,
	 * anything goes, so we can stop checking.
	 */</comment>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init pos:line="11" pos:column="14">;<pos:position pos:line="11" pos:column="15"/></init> <condition><expr><operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">name<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&amp;&amp;<pos:position pos:line="11" pos:column="32"/></operator> <operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">name<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">!=<pos:position pos:line="11" pos:column="33"/></operator> <literal type="char" pos:line="11" pos:column="34">'.'<pos:position pos:line="11" pos:column="37"/></literal></expr>;<pos:position pos:line="11" pos:column="38"/></condition> <incr><expr><name pos:line="11" pos:column="39">name<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">++<pos:position pos:line="11" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="46"/></control>
		<block type="pseudo"><if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">name<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <literal type="char" pos:line="12" pos:column="30">'-'<pos:position pos:line="12" pos:column="33"/></literal> <operator pos:line="12" pos:column="34">&amp;&amp;<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="37">!<pos:position pos:line="12" pos:column="38"/></operator><call><name pos:line="12" pos:column="38">isalnum<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><operator pos:line="12" pos:column="46">*<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">name<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return></block></then></if></block></for>
	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

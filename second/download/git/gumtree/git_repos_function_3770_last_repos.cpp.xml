<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3770_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_first_merges<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">object_array<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">result<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">path<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">commit<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">a<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">commit<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">b<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">j<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_array<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">merges<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><name pos:line="5" pos:column="38">OBJECT_ARRAY_INIT<pos:position pos:line="5" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">commit<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">contains_another<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">merged_revision<pos:position pos:line="9" pos:column="29"/></name><index pos:line="9" pos:column="29">[<expr><literal type="number" pos:line="9" pos:column="30">42<pos:position pos:line="9" pos:column="32"/></literal></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name><name pos:line="10" pos:column="21">rev_args<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[]<pos:position pos:line="10" pos:column="31"/></index></name> <init pos:line="10" pos:column="32">= <expr><block pos:line="10" pos:column="34">{ <expr><literal type="string" pos:line="10" pos:column="36">"rev-list"<pos:position pos:line="10" pos:column="46"/></literal></expr>, <expr><literal type="string" pos:line="10" pos:column="48">"--merges"<pos:position pos:line="10" pos:column="58"/></literal></expr>, <expr><literal type="string" pos:line="10" pos:column="60">"--ancestry-path"<pos:position pos:line="10" pos:column="77"/></literal></expr>,
				   <expr><literal type="string" pos:line="11" pos:column="36">"--all"<pos:position pos:line="11" pos:column="43"/></literal></expr>, <expr><name pos:line="11" pos:column="45">merged_revision<pos:position pos:line="11" pos:column="60"/></name></expr>, <expr><name pos:line="11" pos:column="62">NULL<pos:position pos:line="11" pos:column="66"/></name></expr> }<pos:position pos:line="11" pos:column="68"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">rev_info<pos:position pos:line="12" pos:column="24"/></name></name></type> <name pos:line="12" pos:column="25">revs<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">setup_revision_opt<pos:position pos:line="13" pos:column="34"/></name></name></type> <name pos:line="13" pos:column="35">rev_opts<pos:position pos:line="13" pos:column="43"/></name></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">result<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="27">sizeof<argument_list pos:line="15" pos:column="33">(<argument><expr pos:line="15" pos:column="34">struct <name pos:line="15" pos:column="41">object_array<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">memset<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="17">rev_opts<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="30">sizeof<argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">rev_opts<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* get all revisions that merge commit a */</comment>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">xsnprintf<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">merged_revision<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="36">sizeof<argument_list pos:line="19" pos:column="42">(<argument><expr><name pos:line="19" pos:column="43">merged_revision<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="61">"^%s"<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="20" pos:column="25">oid_to_hex<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name><name pos:line="20" pos:column="37">a<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">object<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">oid<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">init_revisions<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><operator pos:line="21" pos:column="24">&amp;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="25">revs<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">NULL<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">rev_opts<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">submodule<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">path<pos:position pos:line="22" pos:column="34"/></name></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">setup_revisions<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><call><name pos:line="23" pos:column="25">ARRAY_SIZE<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">rev_args<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call><operator pos:line="23" pos:column="45">-<pos:position pos:line="23" pos:column="46"/></operator><literal type="number" pos:line="23" pos:column="46">1<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">rev_args<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="59">&amp;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="60">revs<pos:position pos:line="23" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="66">&amp;<pos:position pos:line="23" pos:column="71"/></operator><name pos:line="23" pos:column="67">rev_opts<pos:position pos:line="23" pos:column="75"/></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>

	<comment type="block" pos:line="25" pos:column="9">/* save all revisions from the above list that contain b */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">prepare_revision_walk<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="36">revs<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">die<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><literal type="string" pos:line="27" pos:column="21">"revision walk setup failed"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt></block></then></if>
	<while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">commit<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">get_revision<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">revs<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call><operator pos:line="28" pos:column="45">)<pos:position pos:line="28" pos:column="46"/></operator> <operator pos:line="28" pos:column="47">!=<pos:position pos:line="28" pos:column="49"/></operator> <name pos:line="28" pos:column="50">NULL<pos:position pos:line="28" pos:column="54"/></name></expr>)<pos:position pos:line="28" pos:column="55"/></condition> <block pos:line="28" pos:column="56">{
		<decl_stmt><decl><type><name><name pos:line="29" pos:column="17">struct<pos:position pos:line="29" pos:column="23"/></name> <name pos:line="29" pos:column="24">object<pos:position pos:line="29" pos:column="30"/></name></name> <modifier pos:line="29" pos:column="31">*<pos:position pos:line="29" pos:column="32"/></modifier></type><name pos:line="29" pos:column="32">o<pos:position pos:line="29" pos:column="33"/></name> <init pos:line="29" pos:column="34">= <expr><operator pos:line="29" pos:column="36">&amp;<pos:position pos:line="29" pos:column="41"/></operator><operator pos:line="29" pos:column="37">(<pos:position pos:line="29" pos:column="38"/></operator><name><name pos:line="29" pos:column="38">commit<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">object<pos:position pos:line="29" pos:column="52"/></name></name><operator pos:line="29" pos:column="52">)<pos:position pos:line="29" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="29" pos:column="54"/></decl_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">in_merge_bases<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">b<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">commit<pos:position pos:line="30" pos:column="45"/></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">add_object_array<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">o<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">NULL<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="51">&amp;<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="52">merges<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">reset_revision_walk<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">()<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="35" pos:column="9">/* Now we've got all merges that contain a and b. Prune all
	 * merges that contain another found merge and save them in
	 * result.
	 */</comment>
	<for pos:line="39" pos:column="9">for <control pos:line="39" pos:column="13">(<init><expr><name pos:line="39" pos:column="14">i<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></init> <condition><expr><name pos:line="39" pos:column="21">i<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">&lt;<pos:position pos:line="39" pos:column="27"/></operator> <name><name pos:line="39" pos:column="25">merges<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">nr<pos:position pos:line="39" pos:column="34"/></name></name></expr>;<pos:position pos:line="39" pos:column="35"/></condition> <incr><expr><name pos:line="39" pos:column="36">i<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">++<pos:position pos:line="39" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="40"/></control> <block pos:line="39" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="40" pos:column="17">struct<pos:position pos:line="40" pos:column="23"/></name> <name pos:line="40" pos:column="24">commit<pos:position pos:line="40" pos:column="30"/></name></name> <modifier pos:line="40" pos:column="31">*<pos:position pos:line="40" pos:column="32"/></modifier></type><name pos:line="40" pos:column="32">m1<pos:position pos:line="40" pos:column="34"/></name> <init pos:line="40" pos:column="35">= <expr><operator pos:line="40" pos:column="37">(<pos:position pos:line="40" pos:column="38"/></operator>struct <name pos:line="40" pos:column="45">commit<pos:position pos:line="40" pos:column="51"/></name> <operator pos:line="40" pos:column="52">*<pos:position pos:line="40" pos:column="53"/></operator><operator pos:line="40" pos:column="53">)<pos:position pos:line="40" pos:column="54"/></operator> <name><name pos:line="40" pos:column="55">merges<pos:position pos:line="40" pos:column="61"/></name><operator pos:line="40" pos:column="61">.<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="62">objects<pos:position pos:line="40" pos:column="69"/></name><index pos:line="40" pos:column="69">[<expr><name pos:line="40" pos:column="70">i<pos:position pos:line="40" pos:column="71"/></name></expr>]<pos:position pos:line="40" pos:column="72"/></index></name><operator pos:line="40" pos:column="72">.<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="73">item<pos:position pos:line="40" pos:column="77"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="78"/></decl_stmt>

		<expr_stmt><expr><name pos:line="42" pos:column="17">contains_another<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <literal type="number" pos:line="42" pos:column="36">0<pos:position pos:line="42" pos:column="37"/></literal></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
		<for pos:line="43" pos:column="17">for <control pos:line="43" pos:column="21">(<init><expr><name pos:line="43" pos:column="22">j<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="26">0<pos:position pos:line="43" pos:column="27"/></literal></expr>;<pos:position pos:line="43" pos:column="28"/></init> <condition><expr><name pos:line="43" pos:column="29">j<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">&lt;<pos:position pos:line="43" pos:column="35"/></operator> <name><name pos:line="43" pos:column="33">merges<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">nr<pos:position pos:line="43" pos:column="42"/></name></name></expr>;<pos:position pos:line="43" pos:column="43"/></condition> <incr><expr><name pos:line="43" pos:column="44">j<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">++<pos:position pos:line="43" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="48"/></control> <block pos:line="43" pos:column="49">{
			<decl_stmt><decl><type><name><name pos:line="44" pos:column="25">struct<pos:position pos:line="44" pos:column="31"/></name> <name pos:line="44" pos:column="32">commit<pos:position pos:line="44" pos:column="38"/></name></name> <modifier pos:line="44" pos:column="39">*<pos:position pos:line="44" pos:column="40"/></modifier></type><name pos:line="44" pos:column="40">m2<pos:position pos:line="44" pos:column="42"/></name> <init pos:line="44" pos:column="43">= <expr><operator pos:line="44" pos:column="45">(<pos:position pos:line="44" pos:column="46"/></operator>struct <name pos:line="44" pos:column="53">commit<pos:position pos:line="44" pos:column="59"/></name> <operator pos:line="44" pos:column="60">*<pos:position pos:line="44" pos:column="61"/></operator><operator pos:line="44" pos:column="61">)<pos:position pos:line="44" pos:column="62"/></operator> <name><name pos:line="44" pos:column="63">merges<pos:position pos:line="44" pos:column="69"/></name><operator pos:line="44" pos:column="69">.<pos:position pos:line="44" pos:column="70"/></operator><name pos:line="44" pos:column="70">objects<pos:position pos:line="44" pos:column="77"/></name><index pos:line="44" pos:column="77">[<expr><name pos:line="44" pos:column="78">j<pos:position pos:line="44" pos:column="79"/></name></expr>]<pos:position pos:line="44" pos:column="80"/></index></name><operator pos:line="44" pos:column="80">.<pos:position pos:line="44" pos:column="81"/></operator><name pos:line="44" pos:column="81">item<pos:position pos:line="44" pos:column="85"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="86"/></decl_stmt>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">i<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">!=<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">j<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">&amp;&amp;<pos:position pos:line="45" pos:column="46"/></operator> <call><name pos:line="45" pos:column="39">in_merge_bases<pos:position pos:line="45" pos:column="53"/></name><argument_list pos:line="45" pos:column="53">(<argument><expr><name pos:line="45" pos:column="54">m2<pos:position pos:line="45" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="58">m1<pos:position pos:line="45" pos:column="60"/></name></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="62"/></condition><then pos:line="45" pos:column="62"> <block pos:line="45" pos:column="63">{
				<expr_stmt><expr><name pos:line="46" pos:column="33">contains_another<pos:position pos:line="46" pos:column="49"/></name> <operator pos:line="46" pos:column="50">=<pos:position pos:line="46" pos:column="51"/></operator> <literal type="number" pos:line="46" pos:column="52">1<pos:position pos:line="46" pos:column="53"/></literal></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
				<break pos:line="47" pos:column="33">break;<pos:position pos:line="47" pos:column="39"/></break>
			}<pos:position pos:line="48" pos:column="26"/></block></then></if>
		}<pos:position pos:line="49" pos:column="18"/></block></for>

		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">!<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">contains_another<pos:position pos:line="51" pos:column="38"/></name></expr>)<pos:position pos:line="51" pos:column="39"/></condition><then pos:line="51" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">add_object_array<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><name><name pos:line="52" pos:column="42">merges<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">.<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="49">objects<pos:position pos:line="52" pos:column="56"/></name><index pos:line="52" pos:column="56">[<expr><name pos:line="52" pos:column="57">i<pos:position pos:line="52" pos:column="58"/></name></expr>]<pos:position pos:line="52" pos:column="59"/></index></name><operator pos:line="52" pos:column="59">.<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="60">item<pos:position pos:line="52" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">NULL<pos:position pos:line="52" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="72">result<pos:position pos:line="52" pos:column="78"/></name></expr></argument>)<pos:position pos:line="52" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="80"/></expr_stmt></block></then></if>
	}<pos:position pos:line="53" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">free<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name><name pos:line="55" pos:column="14">merges<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">.<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">objects<pos:position pos:line="55" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><name><name pos:line="56" pos:column="16">result<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">-&gt;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="24">nr<pos:position pos:line="56" pos:column="26"/></name></name></expr>;<pos:position pos:line="56" pos:column="27"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5913_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">void<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">anonymize_mem<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">hashmap<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">map<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
				 <parameter><function_decl><type><name pos:line="2" pos:column="34">void<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type>(<modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier><name pos:line="2" pos:column="42">generate<pos:position pos:line="2" pos:column="50"/></name>)<parameter_list pos:line="2" pos:column="51">(<parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">void<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">size_t<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list></function_decl></parameter>,
				 <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name pos:line="3" pos:column="40">void<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">orig<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">size_t<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">len<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">anonymized_entry<pos:position pos:line="5" pos:column="32"/></name></name></type> <name pos:line="5" pos:column="33">key<pos:position pos:line="5" pos:column="36"/></name></decl>, <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="39">ret<pos:position pos:line="5" pos:column="42"/></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">map<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">cmpfn<pos:position pos:line="7" pos:column="24"/></name></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">hashmap_init<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">map<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">anonymized_entry_cmp<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="57">NULL<pos:position pos:line="8" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="63">0<pos:position pos:line="8" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">hashmap_entry_init<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">key<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="34">memhash<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">orig<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="48">*<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">len<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">key<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">.<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">orig<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">orig<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">key<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">orig_len<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">len<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ret<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">hashmap_get<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">map<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="33">key<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">NULL<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">ret<pos:position pos:line="15" pos:column="17"/></name></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18"> <block pos:line="15" pos:column="19">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">ret<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">xmalloc<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><sizeof pos:line="16" pos:column="31">sizeof<argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">ret<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">hashmap_entry_init<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator><name><name pos:line="17" pos:column="37">ret<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">hash<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="48">key<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">.<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">hash<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">hash<pos:position pos:line="17" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">ret<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">orig<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="29">xstrdup<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">orig<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">ret<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">orig_len<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">len<pos:position pos:line="19" pos:column="37"/></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">ret<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">anon<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <call><name pos:line="20" pos:column="29">generate<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">orig<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">len<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">ret<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">anon_len<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">len<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">hashmap_put<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">map<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">ret<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">len<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name><name pos:line="25" pos:column="16">ret<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">anon_len<pos:position pos:line="25" pos:column="29"/></name></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><name><name pos:line="26" pos:column="16">ret<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">anon<pos:position pos:line="26" pos:column="25"/></name></name></expr>;<pos:position pos:line="26" pos:column="26"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

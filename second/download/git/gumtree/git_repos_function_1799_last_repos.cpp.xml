<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1799_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_branch<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">branch<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">b<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">msg<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><literal type="string" pos:line="3" pos:column="34">"fast-import"<pos:position pos:line="3" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ref_transaction<pos:position pos:line="4" pos:column="31"/></name></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">transaction<pos:position pos:line="4" pos:column="44"/></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">old_oid<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">err<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">is_null_oid<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><operator pos:line="8" pos:column="25">&amp;<pos:position pos:line="8" pos:column="30"/></operator><name><name pos:line="8" pos:column="26">b<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">oid<pos:position pos:line="8" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">b<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator></name><operator pos:line="9" pos:column="24">delete<pos:position pos:line="9" pos:column="30"/></operator></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">delete_ref<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">NULL<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="42">b<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">name<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">NULL<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt></block></then></if>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">read_ref<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name><name pos:line="13" pos:column="22">b<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">name<pos:position pos:line="13" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="31">old_oid<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">.<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">hash<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">oidclr<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="25">old_oid<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">force_update<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <operator pos:line="15" pos:column="30">!<pos:position pos:line="15" pos:column="31"/></operator><call><name pos:line="15" pos:column="31">is_null_oid<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><operator pos:line="15" pos:column="43">&amp;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="44">old_oid<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53"> <block pos:line="15" pos:column="54">{
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">commit<pos:position pos:line="16" pos:column="30"/></name></name> <modifier pos:line="16" pos:column="31">*<pos:position pos:line="16" pos:column="32"/></modifier></type><name pos:line="16" pos:column="32">old_cmit<pos:position pos:line="16" pos:column="40"/></name></decl>, <modifier pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="16" pos:column="43">new_cmit<pos:position pos:line="16" pos:column="51"/></name></decl>;<pos:position pos:line="16" pos:column="52"/></decl_stmt>

		<expr_stmt><expr><name pos:line="18" pos:column="17">old_cmit<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="28">lookup_commit_reference_gently<pos:position pos:line="18" pos:column="58"/></name><argument_list pos:line="18" pos:column="58">(<argument><expr><operator pos:line="18" pos:column="59">&amp;<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="60">old_oid<pos:position pos:line="18" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="69">0<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">new_cmit<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">lookup_commit_reference_gently<pos:position pos:line="19" pos:column="58"/></name><argument_list pos:line="19" pos:column="58">(<argument><expr><operator pos:line="19" pos:column="59">&amp;<pos:position pos:line="19" pos:column="64"/></operator><name><name pos:line="19" pos:column="60">b<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">-&gt;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="63">oid<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="68">0<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">old_cmit<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">||<pos:position pos:line="20" pos:column="33"/></operator> <operator pos:line="20" pos:column="34">!<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">new_cmit<pos:position pos:line="20" pos:column="43"/></name></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><call><name pos:line="21" pos:column="32">error<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><literal type="string" pos:line="21" pos:column="38">"Branch %s is missing commits."<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="71">b<pos:position pos:line="21" pos:column="72"/></name><operator pos:line="21" pos:column="72">-&gt;<pos:position pos:line="21" pos:column="77"/></operator><name pos:line="21" pos:column="74">name<pos:position pos:line="21" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></return></block></then></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">in_merge_bases<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">old_cmit<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">new_cmit<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="57"/></condition><then pos:line="23" pos:column="57"> <block pos:line="23" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">warning<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><literal type="string" pos:line="24" pos:column="33">"Not updating %s"<pos:position pos:line="24" pos:column="50"/></literal>
				<literal type="string" pos:line="25" pos:column="33">" (new tip %s does not contain %s)"<pos:position pos:line="25" pos:column="68"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="26" pos:column="33">b<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">name<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="42">oid_to_hex<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name><name pos:line="26" pos:column="54">b<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-&gt;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="57">oid<pos:position pos:line="26" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="27" pos:column="33">oid_to_hex<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><operator pos:line="27" pos:column="44">&amp;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="45">old_oid<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
			<return pos:line="28" pos:column="25">return <expr><operator pos:line="28" pos:column="32">-<pos:position pos:line="28" pos:column="33"/></operator><literal type="number" pos:line="28" pos:column="33">1<pos:position pos:line="28" pos:column="34"/></literal></expr>;<pos:position pos:line="28" pos:column="35"/></return>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="31" pos:column="9">transaction<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <call><name pos:line="31" pos:column="23">ref_transaction_begin<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><operator pos:line="31" pos:column="45">&amp;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="46">err<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">transaction<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">||<pos:position pos:line="32" pos:column="28"/></operator>
	    <call><name pos:line="33" pos:column="13">ref_transaction_update<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">transaction<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="49">b<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">name<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="58">b<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">-&gt;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="61">oid<pos:position pos:line="33" pos:column="64"/></name><operator pos:line="33" pos:column="64">.<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="65">hash<pos:position pos:line="33" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="71">old_oid<pos:position pos:line="33" pos:column="78"/></name><operator pos:line="33" pos:column="78">.<pos:position pos:line="33" pos:column="79"/></operator><name pos:line="33" pos:column="79">hash<pos:position pos:line="33" pos:column="83"/></name></name></expr></argument>,
				   <argument><expr><literal type="number" pos:line="34" pos:column="36">0<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">msg<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="44">&amp;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="45">err<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call> <operator pos:line="34" pos:column="50">||<pos:position pos:line="34" pos:column="52"/></operator>
	    <call><name pos:line="35" pos:column="13">ref_transaction_commit<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">transaction<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">err<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="55"/></condition><then pos:line="35" pos:column="55"> <block pos:line="35" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">ref_transaction_free<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">transaction<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">error<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"%s"<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="29">err<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">.<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">buf<pos:position pos:line="37" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">strbuf_release<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><operator pos:line="38" pos:column="32">&amp;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="33">err<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">-<pos:position pos:line="39" pos:column="25"/></operator><literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">ref_transaction_free<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">transaction<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_release<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><operator pos:line="42" pos:column="24">&amp;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="25">err<pos:position pos:line="42" pos:column="28"/></name></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
	<return pos:line="43" pos:column="9">return <expr><literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

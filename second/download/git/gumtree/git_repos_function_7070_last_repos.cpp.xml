<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7070_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">re_node_set_merge<pos:position pos:line="3" pos:column="18"/></name> <parameter_list pos:line="3" pos:column="19">(<parameter><decl><type><name pos:line="3" pos:column="20">re_node_set<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">dest<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <name pos:line="3" pos:column="45">re_node_set<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">src<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">is<pos:position pos:line="5" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="11">id<pos:position pos:line="5" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="15">sbase<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">delta<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">src<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">||<pos:position pos:line="6" pos:column="21"/></operator> <name><name pos:line="6" pos:column="22">src<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">nelem<pos:position pos:line="6" pos:column="32"/></name></name> <operator pos:line="6" pos:column="33">==<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">REG_NOERROR<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">dest<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">alloc<pos:position pos:line="8" pos:column="18"/></name></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">2<pos:position pos:line="8" pos:column="22"/></literal> <operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator> <name><name pos:line="8" pos:column="25">src<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">nelem<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">+<pos:position pos:line="8" pos:column="37"/></operator> <name><name pos:line="8" pos:column="38">dest<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">nelem<pos:position pos:line="8" pos:column="49"/></name></name></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
    <block pos:line="9" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">int<pos:position pos:line="10" pos:column="10"/></name></type> <name pos:line="10" pos:column="11">new_alloc<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><literal type="number" pos:line="10" pos:column="23">2<pos:position pos:line="10" pos:column="24"/></literal> <operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="27">(<pos:position pos:line="10" pos:column="28"/></operator><name><name pos:line="10" pos:column="28">src<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">nelem<pos:position pos:line="10" pos:column="38"/></name></name> <operator pos:line="10" pos:column="39">+<pos:position pos:line="10" pos:column="40"/></operator> <name><name pos:line="10" pos:column="41">dest<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">alloc<pos:position pos:line="10" pos:column="52"/></name></name><operator pos:line="10" pos:column="52">)<pos:position pos:line="10" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="10" pos:column="54"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="11" pos:column="7">int<pos:position pos:line="11" pos:column="10"/></name> <modifier pos:line="11" pos:column="11">*<pos:position pos:line="11" pos:column="12"/></modifier></type><name pos:line="11" pos:column="12">new_buffer<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><call><name pos:line="11" pos:column="25">re_realloc<pos:position pos:line="11" pos:column="35"/></name> <argument_list pos:line="11" pos:column="36">(<argument><expr><name><name pos:line="11" pos:column="37">dest<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">elems<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">int<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">new_alloc<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="66"/></decl_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><call><name pos:line="12" pos:column="11">BE<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">new_buffer<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">==<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">NULL<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">REG_ESPACE<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">dest<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">elems<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">new_buffer<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">dest<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">alloc<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">new_alloc<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">BE<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name><name pos:line="18" pos:column="11">dest<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">nelem<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="29">0<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">dest<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">nelem<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="21">src<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">nelem<pos:position pos:line="20" pos:column="31"/></name></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">memcpy<pos:position pos:line="21" pos:column="13"/></name> <argument_list pos:line="21" pos:column="14">(<argument><expr><name><name pos:line="21" pos:column="15">dest<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">elems<pos:position pos:line="21" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="28">src<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">elems<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">src<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">nelem<pos:position pos:line="21" pos:column="50"/></name></name> <operator pos:line="21" pos:column="51">*<pos:position pos:line="21" pos:column="52"/></operator> <sizeof pos:line="21" pos:column="53">sizeof <argument_list pos:line="21" pos:column="60">(<argument><expr><name pos:line="21" pos:column="61">int<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><name pos:line="22" pos:column="14">REG_NOERROR<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="25" pos:column="3">/* Copy into the top of DEST the items of SRC that are not
     found in DEST.  Maybe we could binary search in DEST?  */</comment>
  <for pos:line="27" pos:column="3">for <control pos:line="27" pos:column="7">(<init><expr><name pos:line="27" pos:column="8">sbase<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name><name pos:line="27" pos:column="16">dest<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">nelem<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">+<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="30">2<pos:position pos:line="27" pos:column="31"/></literal> <operator pos:line="27" pos:column="32">*<pos:position pos:line="27" pos:column="33"/></operator> <name><name pos:line="27" pos:column="34">src<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">nelem<pos:position pos:line="27" pos:column="44"/></name></name></expr><operator pos:line="27" pos:column="44">,<pos:position pos:line="27" pos:column="45"/></operator>
       <expr><name pos:line="28" pos:column="8">is<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <name><name pos:line="28" pos:column="13">src<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">nelem<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">-<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="26">1<pos:position pos:line="28" pos:column="27"/></literal></expr><operator pos:line="28" pos:column="27">,<pos:position pos:line="28" pos:column="28"/></operator> <expr><name pos:line="28" pos:column="29">id<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">=<pos:position pos:line="28" pos:column="33"/></operator> <name><name pos:line="28" pos:column="34">dest<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">nelem<pos:position pos:line="28" pos:column="45"/></name></name> <operator pos:line="28" pos:column="46">-<pos:position pos:line="28" pos:column="47"/></operator> <literal type="number" pos:line="28" pos:column="48">1<pos:position pos:line="28" pos:column="49"/></literal></expr>;<pos:position pos:line="28" pos:column="50"/></init> <condition><expr><name pos:line="28" pos:column="51">is<pos:position pos:line="28" pos:column="53"/></name> <operator pos:line="28" pos:column="54">&gt;=<pos:position pos:line="28" pos:column="59"/></operator> <literal type="number" pos:line="28" pos:column="57">0<pos:position pos:line="28" pos:column="58"/></literal> <operator pos:line="28" pos:column="59">&amp;&amp;<pos:position pos:line="28" pos:column="69"/></operator> <name pos:line="28" pos:column="62">id<pos:position pos:line="28" pos:column="64"/></name> <operator pos:line="28" pos:column="65">&gt;=<pos:position pos:line="28" pos:column="70"/></operator> <literal type="number" pos:line="28" pos:column="68">0<pos:position pos:line="28" pos:column="69"/></literal></expr>;<pos:position pos:line="28" pos:column="70"/></condition> <incr/>)<pos:position pos:line="28" pos:column="72"/></control>
    <block pos:line="29" pos:column="5">{
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">dest<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">elems<pos:position pos:line="30" pos:column="22"/></name><index pos:line="30" pos:column="22">[<expr><name pos:line="30" pos:column="23">id<pos:position pos:line="30" pos:column="25"/></name></expr>]<pos:position pos:line="30" pos:column="26"/></index></name> <operator pos:line="30" pos:column="27">==<pos:position pos:line="30" pos:column="29"/></operator> <name><name pos:line="30" pos:column="30">src<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">elems<pos:position pos:line="30" pos:column="40"/></name><index pos:line="30" pos:column="40">[<expr><name pos:line="30" pos:column="41">is<pos:position pos:line="30" pos:column="43"/></name></expr>]<pos:position pos:line="30" pos:column="44"/></index></name></expr>)<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45">
	<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">is<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">--<pos:position pos:line="31" pos:column="13"/></operator></expr><operator pos:line="31" pos:column="13">,<pos:position pos:line="31" pos:column="14"/></operator> <expr><name pos:line="31" pos:column="15">id<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">--<pos:position pos:line="31" pos:column="19"/></operator></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt></block></then>
      <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><name><name pos:line="32" pos:column="16">dest<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">elems<pos:position pos:line="32" pos:column="27"/></name><index pos:line="32" pos:column="27">[<expr><name pos:line="32" pos:column="28">id<pos:position pos:line="32" pos:column="30"/></name></expr>]<pos:position pos:line="32" pos:column="31"/></index></name> <operator pos:line="32" pos:column="32">&lt;<pos:position pos:line="32" pos:column="36"/></operator> <name><name pos:line="32" pos:column="34">src<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">elems<pos:position pos:line="32" pos:column="44"/></name><index pos:line="32" pos:column="44">[<expr><name pos:line="32" pos:column="45">is<pos:position pos:line="32" pos:column="47"/></name></expr>]<pos:position pos:line="32" pos:column="48"/></index></name></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="9">dest<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">elems<pos:position pos:line="33" pos:column="20"/></name><index pos:line="33" pos:column="20">[<expr><operator pos:line="33" pos:column="21">--<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">sbase<pos:position pos:line="33" pos:column="28"/></name></expr>]<pos:position pos:line="33" pos:column="29"/></index></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">src<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">elems<pos:position pos:line="33" pos:column="42"/></name><index pos:line="33" pos:column="42">[<expr><name pos:line="33" pos:column="43">is<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">--<pos:position pos:line="33" pos:column="47"/></operator></expr>]<pos:position pos:line="33" pos:column="48"/></index></name></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt></block></then></if></elseif>
      <else pos:line="34" pos:column="7">else <comment type="block" pos:line="34" pos:column="12">/* if (dest-&gt;elems[id] &gt; src-&gt;elems[is]) */</comment>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="35" pos:column="9">--<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">id<pos:position pos:line="35" pos:column="13"/></name></expr>;<pos:position pos:line="35" pos:column="14"/></expr_stmt></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></for>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">is<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">&gt;=<pos:position pos:line="38" pos:column="15"/></operator> <literal type="number" pos:line="38" pos:column="13">0<pos:position pos:line="38" pos:column="14"/></literal></expr>)<pos:position pos:line="38" pos:column="15"/></condition><then pos:line="38" pos:column="15">
    <block pos:line="39" pos:column="5">{
      <comment type="block" pos:line="40" pos:column="7">/* If DEST is exhausted, the remaining items of SRC must be unique.  */</comment>
      <expr_stmt><expr><name pos:line="41" pos:column="7">sbase<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">-=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">is<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">+<pos:position pos:line="41" pos:column="20"/></operator> <literal type="number" pos:line="41" pos:column="21">1<pos:position pos:line="41" pos:column="22"/></literal></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">memcpy<pos:position pos:line="42" pos:column="13"/></name> <argument_list pos:line="42" pos:column="14">(<argument><expr><name><name pos:line="42" pos:column="15">dest<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">elems<pos:position pos:line="42" pos:column="26"/></name></name> <operator pos:line="42" pos:column="27">+<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">sbase<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="36">src<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">elems<pos:position pos:line="42" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="48">(<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="49">is<pos:position pos:line="42" pos:column="51"/></name> <operator pos:line="42" pos:column="52">+<pos:position pos:line="42" pos:column="53"/></operator> <literal type="number" pos:line="42" pos:column="54">1<pos:position pos:line="42" pos:column="55"/></literal><operator pos:line="42" pos:column="55">)<pos:position pos:line="42" pos:column="56"/></operator> <operator pos:line="42" pos:column="57">*<pos:position pos:line="42" pos:column="58"/></operator> <sizeof pos:line="42" pos:column="59">sizeof <argument_list pos:line="42" pos:column="66">(<argument><expr><name pos:line="42" pos:column="67">int<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="45" pos:column="3">id<pos:position pos:line="45" pos:column="5"/></name> <operator pos:line="45" pos:column="6">=<pos:position pos:line="45" pos:column="7"/></operator> <name><name pos:line="45" pos:column="8">dest<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">nelem<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">-<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">1<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="46" pos:column="3">is<pos:position pos:line="46" pos:column="5"/></name> <operator pos:line="46" pos:column="6">=<pos:position pos:line="46" pos:column="7"/></operator> <name><name pos:line="46" pos:column="8">dest<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">nelem<pos:position pos:line="46" pos:column="19"/></name></name> <operator pos:line="46" pos:column="20">+<pos:position pos:line="46" pos:column="21"/></operator> <literal type="number" pos:line="46" pos:column="22">2<pos:position pos:line="46" pos:column="23"/></literal> <operator pos:line="46" pos:column="24">*<pos:position pos:line="46" pos:column="25"/></operator> <name><name pos:line="46" pos:column="26">src<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">nelem<pos:position pos:line="46" pos:column="36"/></name></name> <operator pos:line="46" pos:column="37">-<pos:position pos:line="46" pos:column="38"/></operator> <literal type="number" pos:line="46" pos:column="39">1<pos:position pos:line="46" pos:column="40"/></literal></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">delta<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <name pos:line="47" pos:column="11">is<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">-<pos:position pos:line="47" pos:column="15"/></operator> <name pos:line="47" pos:column="16">sbase<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">+<pos:position pos:line="47" pos:column="23"/></operator> <literal type="number" pos:line="47" pos:column="24">1<pos:position pos:line="47" pos:column="25"/></literal></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">delta<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">==<pos:position pos:line="48" pos:column="15"/></operator> <literal type="number" pos:line="48" pos:column="16">0<pos:position pos:line="48" pos:column="17"/></literal></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18">
    <block type="pseudo"><return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">REG_NOERROR<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></return></block></then></if>

  <comment type="block" pos:line="51" pos:column="3">/* Now copy.  When DELTA becomes zero, the remaining
     DEST elements are already in place.  */</comment>
  <expr_stmt><expr><name><name pos:line="53" pos:column="3">dest<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">-&gt;<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="9">nelem<pos:position pos:line="53" pos:column="14"/></name></name> <operator pos:line="53" pos:column="15">+=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">delta<pos:position pos:line="53" pos:column="23"/></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
  <for pos:line="54" pos:column="3">for <control pos:line="54" pos:column="7">(<init pos:line="54" pos:column="8">;<pos:position pos:line="54" pos:column="9"/></init><condition pos:line="54" pos:column="9">;<pos:position pos:line="54" pos:column="10"/></condition><incr/>)<pos:position pos:line="54" pos:column="11"/></control>
    <block pos:line="55" pos:column="5">{
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name><name pos:line="56" pos:column="11">dest<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">elems<pos:position pos:line="56" pos:column="22"/></name><index pos:line="56" pos:column="22">[<expr><name pos:line="56" pos:column="23">is<pos:position pos:line="56" pos:column="25"/></name></expr>]<pos:position pos:line="56" pos:column="26"/></index></name> <operator pos:line="56" pos:column="27">&gt;<pos:position pos:line="56" pos:column="31"/></operator> <name><name pos:line="56" pos:column="29">dest<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">elems<pos:position pos:line="56" pos:column="40"/></name><index pos:line="56" pos:column="40">[<expr><name pos:line="56" pos:column="41">id<pos:position pos:line="56" pos:column="43"/></name></expr>]<pos:position pos:line="56" pos:column="44"/></index></name></expr>)<pos:position pos:line="56" pos:column="45"/></condition><then pos:line="56" pos:column="45">
	<block pos:line="57" pos:column="9">{
	  <comment type="block" pos:line="58" pos:column="11">/* Copy from the top.  */</comment>
	  <expr_stmt><expr><name><name pos:line="59" pos:column="11">dest<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">elems<pos:position pos:line="59" pos:column="22"/></name><index pos:line="59" pos:column="22">[<expr><name pos:line="59" pos:column="23">id<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">+<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">delta<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">--<pos:position pos:line="59" pos:column="35"/></operator></expr>]<pos:position pos:line="59" pos:column="36"/></index></name> <operator pos:line="59" pos:column="37">=<pos:position pos:line="59" pos:column="38"/></operator> <name><name pos:line="59" pos:column="39">dest<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">elems<pos:position pos:line="59" pos:column="50"/></name><index pos:line="59" pos:column="50">[<expr><name pos:line="59" pos:column="51">is<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">--<pos:position pos:line="59" pos:column="55"/></operator></expr>]<pos:position pos:line="59" pos:column="56"/></index></name></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt>
	  <if pos:line="60" pos:column="11">if <condition pos:line="60" pos:column="14">(<expr><name pos:line="60" pos:column="15">delta<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">==<pos:position pos:line="60" pos:column="23"/></operator> <literal type="number" pos:line="60" pos:column="24">0<pos:position pos:line="60" pos:column="25"/></literal></expr>)<pos:position pos:line="60" pos:column="26"/></condition><then pos:line="60" pos:column="26">
	    <block type="pseudo"><break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></then>
      <else pos:line="63" pos:column="7">else
	<block pos:line="64" pos:column="9">{
	  <comment type="block" pos:line="65" pos:column="11">/* Slide from the bottom.  */</comment>
	  <expr_stmt><expr><name><name pos:line="66" pos:column="11">dest<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-&gt;<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="17">elems<pos:position pos:line="66" pos:column="22"/></name><index pos:line="66" pos:column="22">[<expr><name pos:line="66" pos:column="23">id<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">+<pos:position pos:line="66" pos:column="27"/></operator> <name pos:line="66" pos:column="28">delta<pos:position pos:line="66" pos:column="33"/></name></expr>]<pos:position pos:line="66" pos:column="34"/></index></name> <operator pos:line="66" pos:column="35">=<pos:position pos:line="66" pos:column="36"/></operator> <name><name pos:line="66" pos:column="37">dest<pos:position pos:line="66" pos:column="41"/></name><operator pos:line="66" pos:column="41">-&gt;<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="43">elems<pos:position pos:line="66" pos:column="48"/></name><index pos:line="66" pos:column="48">[<expr><name pos:line="66" pos:column="49">id<pos:position pos:line="66" pos:column="51"/></name></expr>]<pos:position pos:line="66" pos:column="52"/></index></name></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>
	  <if pos:line="67" pos:column="11">if <condition pos:line="67" pos:column="14">(<expr><operator pos:line="67" pos:column="15">--<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">id<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">&lt;<pos:position pos:line="67" pos:column="24"/></operator> <literal type="number" pos:line="67" pos:column="22">0<pos:position pos:line="67" pos:column="23"/></literal></expr>)<pos:position pos:line="67" pos:column="24"/></condition><then pos:line="67" pos:column="24">
	    <block pos:line="68" pos:column="13">{
	      <comment type="block" pos:line="69" pos:column="15">/* Copy remaining SRC elements.  */</comment>
	      <expr_stmt><expr><call><name pos:line="70" pos:column="15">memcpy<pos:position pos:line="70" pos:column="21"/></name> <argument_list pos:line="70" pos:column="22">(<argument><expr><name><name pos:line="70" pos:column="23">dest<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">elems<pos:position pos:line="70" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="36">dest<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">elems<pos:position pos:line="70" pos:column="47"/></name></name> <operator pos:line="70" pos:column="48">+<pos:position pos:line="70" pos:column="49"/></operator> <name pos:line="70" pos:column="50">sbase<pos:position pos:line="70" pos:column="55"/></name></expr></argument>,
		      <argument><expr><name pos:line="71" pos:column="23">delta<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">*<pos:position pos:line="71" pos:column="30"/></operator> <sizeof pos:line="71" pos:column="31">sizeof <argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">int<pos:position pos:line="71" pos:column="42"/></name></expr></argument>)<pos:position pos:line="71" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
	      <break pos:line="72" pos:column="15">break;<pos:position pos:line="72" pos:column="21"/></break>
	    }<pos:position pos:line="73" pos:column="14"/></block></then></if>
	}<pos:position pos:line="74" pos:column="10"/></block></else></if>
    }<pos:position pos:line="75" pos:column="6"/></block></for>

  <return pos:line="77" pos:column="3">return <expr><name pos:line="77" pos:column="10">REG_NOERROR<pos:position pos:line="77" pos:column="21"/></name></expr>;<pos:position pos:line="77" pos:column="22"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_656.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">link_alt_odb_entry<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">entry<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">relative_base<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">depth<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">normalized_objdir<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">alternate_object_database<pos:position pos:line="4" pos:column="41"/></name></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">ent<pos:position pos:line="4" pos:column="46"/></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">pathbuf<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">STRBUF_INIT<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">is_absolute_path<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">entry<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">&amp;&amp;<pos:position pos:line="7" pos:column="48"/></operator> <name pos:line="7" pos:column="41">relative_base<pos:position pos:line="7" pos:column="54"/></name></expr>)<pos:position pos:line="7" pos:column="55"/></condition><then pos:line="7" pos:column="55"> <block pos:line="7" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addstr<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><operator pos:line="8" pos:column="31">&amp;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="32">pathbuf<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="41">real_path<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><name pos:line="8" pos:column="51">relative_base<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addch<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">pathbuf<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="40">'/'<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">strbuf_addstr<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="24">pathbuf<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">entry<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">strbuf_normalize_path<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><operator pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="36">pathbuf<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call> <operator pos:line="13" pos:column="45">&lt;<pos:position pos:line="13" pos:column="49"/></operator> <literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal> <operator pos:line="13" pos:column="49">&amp;&amp;<pos:position pos:line="13" pos:column="59"/></operator> <name pos:line="13" pos:column="52">relative_base<pos:position pos:line="13" pos:column="65"/></name></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66"> <block pos:line="13" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">error<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"unable to normalize alternate object path: %s"<pos:position pos:line="14" pos:column="70"/></literal></expr></argument>,
		      <argument><expr><name><name pos:line="15" pos:column="23">pathbuf<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">buf<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_release<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><operator pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="33">pathbuf<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/*
	 * The trailing slash after the directory name is given by
	 * this function at the end. Remove duplicates.
	 */</comment>
	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><name><name pos:line="24" pos:column="16">pathbuf<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">len<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">&amp;&amp;<pos:position pos:line="24" pos:column="38"/></operator> <name><name pos:line="24" pos:column="31">pathbuf<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">.<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">buf<pos:position pos:line="24" pos:column="42"/></name><index pos:line="24" pos:column="42">[<expr><name><name pos:line="24" pos:column="43">pathbuf<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">len<pos:position pos:line="24" pos:column="54"/></name></name> <operator pos:line="24" pos:column="55">-<pos:position pos:line="24" pos:column="56"/></operator> <literal type="number" pos:line="24" pos:column="57">1<pos:position pos:line="24" pos:column="58"/></literal></expr>]<pos:position pos:line="24" pos:column="59"/></index></name> <operator pos:line="24" pos:column="60">==<pos:position pos:line="24" pos:column="62"/></operator> <literal type="char" pos:line="24" pos:column="63">'/'<pos:position pos:line="24" pos:column="66"/></literal></expr>)<pos:position pos:line="24" pos:column="67"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_setlen<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><operator pos:line="25" pos:column="31">&amp;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="32">pathbuf<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="41">pathbuf<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">.<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">len<pos:position pos:line="25" pos:column="52"/></name></name> <operator pos:line="25" pos:column="53">-<pos:position pos:line="25" pos:column="54"/></operator> <literal type="number" pos:line="25" pos:column="55">1<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt></block></while>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">alt_odb_usable<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">&amp;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="30">pathbuf<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">normalized_objdir<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="58"/></condition><then pos:line="27" pos:column="58"> <block pos:line="27" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strbuf_release<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="33">pathbuf<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">-<pos:position pos:line="29" pos:column="25"/></operator><literal type="number" pos:line="29" pos:column="25">1<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="32" pos:column="9">ent<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">alloc_alt_odb<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name><name pos:line="32" pos:column="29">pathbuf<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">.<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="37">buf<pos:position pos:line="32" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>

	<comment type="block" pos:line="34" pos:column="9">/* add the alternate entry */</comment>
	<expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">alt_odb_tail<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">ent<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="36" pos:column="9">alt_odb_tail<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <operator pos:line="36" pos:column="24">&amp;<pos:position pos:line="36" pos:column="29"/></operator><operator pos:line="36" pos:column="25">(<pos:position pos:line="36" pos:column="26"/></operator><name><name pos:line="36" pos:column="26">ent<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">next<pos:position pos:line="36" pos:column="35"/></name></name><operator pos:line="36" pos:column="35">)<pos:position pos:line="36" pos:column="36"/></operator></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="37" pos:column="9">ent<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">next<pos:position pos:line="37" pos:column="18"/></name></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">NULL<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="39" pos:column="9">/* recursively add alternates */</comment>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">read_info_alternates<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name><name pos:line="40" pos:column="30">pathbuf<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">.<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">buf<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">depth<pos:position pos:line="40" pos:column="48"/></name> <operator pos:line="40" pos:column="49">+<pos:position pos:line="40" pos:column="50"/></operator> <literal type="number" pos:line="40" pos:column="51">1<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_release<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><operator pos:line="42" pos:column="24">&amp;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="25">pathbuf<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
	<return pos:line="43" pos:column="9">return <expr><literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4841_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">xdl_recmatch<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">l1<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">long<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">s1<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">l2<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">long<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">s2<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">long<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">flags<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i1<pos:position pos:line="3" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">i2<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">s1<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">s2<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">&amp;&amp;<pos:position pos:line="5" pos:column="32"/></operator> <operator pos:line="5" pos:column="25">!<pos:position pos:line="5" pos:column="26"/></operator><call><name pos:line="5" pos:column="26">memcmp<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">l1<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="37">l2<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="41">s1<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="45"/></condition><then pos:line="5" pos:column="45">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">flags<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="23">XDF_WHITESPACE_FLAGS<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">i1<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">i2<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * -w matches everything that matches with -b, and -b in turn
	 * matches everything that matches with --ignore-space-at-eol.
	 *
	 * Each flavor of ignoring needs different logic to skip whitespaces
	 * while we have both sides to compare.
	 */</comment>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">flags<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&amp;<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="21">XDF_IGNORE_WHITESPACE<pos:position pos:line="20" pos:column="42"/></name></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
		<goto pos:line="21" pos:column="17">goto <name pos:line="21" pos:column="22">skip_ws<pos:position pos:line="21" pos:column="29"/></name>;<pos:position pos:line="21" pos:column="30"/></goto>
		<while pos:line="22" pos:column="17">while <condition pos:line="22" pos:column="23">(<expr><name pos:line="22" pos:column="24">i1<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">&lt;<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="29">s1<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">&amp;&amp;<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="35">i2<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">&lt;<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="40">s2<pos:position pos:line="22" pos:column="42"/></name></expr>)<pos:position pos:line="22" pos:column="43"/></condition> <block pos:line="22" pos:column="44">{
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name><name pos:line="23" pos:column="29">l1<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><name pos:line="23" pos:column="32">i1<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">++<pos:position pos:line="23" pos:column="36"/></operator></expr>]<pos:position pos:line="23" pos:column="37"/></index></name> <operator pos:line="23" pos:column="38">!=<pos:position pos:line="23" pos:column="40"/></operator> <name><name pos:line="23" pos:column="41">l2<pos:position pos:line="23" pos:column="43"/></name><index pos:line="23" pos:column="43">[<expr><name pos:line="23" pos:column="44">i2<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">++<pos:position pos:line="23" pos:column="48"/></operator></expr>]<pos:position pos:line="23" pos:column="49"/></index></name></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50">
				<block type="pseudo"><return pos:line="24" pos:column="33">return <expr><literal type="number" pos:line="24" pos:column="40">0<pos:position pos:line="24" pos:column="41"/></literal></expr>;<pos:position pos:line="24" pos:column="42"/></return></block></then></if>
		<label><name pos:line="25" pos:column="17">skip_ws<pos:position pos:line="25" pos:column="24"/></name>:<pos:position pos:line="25" pos:column="25"/></label>
			<while pos:line="26" pos:column="25">while <condition pos:line="26" pos:column="31">(<expr><name pos:line="26" pos:column="32">i1<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">&lt;<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="37">s1<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">&amp;&amp;<pos:position pos:line="26" pos:column="50"/></operator> <call><name pos:line="26" pos:column="43">XDL_ISSPACE<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><name><name pos:line="26" pos:column="55">l1<pos:position pos:line="26" pos:column="57"/></name><index pos:line="26" pos:column="57">[<expr><name pos:line="26" pos:column="58">i1<pos:position pos:line="26" pos:column="60"/></name></expr>]<pos:position pos:line="26" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="63"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="33">i1<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">++<pos:position pos:line="27" pos:column="37"/></operator></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></while>
			<while pos:line="28" pos:column="25">while <condition pos:line="28" pos:column="31">(<expr><name pos:line="28" pos:column="32">i2<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">&lt;<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="37">s2<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">&amp;&amp;<pos:position pos:line="28" pos:column="50"/></operator> <call><name pos:line="28" pos:column="43">XDL_ISSPACE<pos:position pos:line="28" pos:column="54"/></name><argument_list pos:line="28" pos:column="54">(<argument><expr><name><name pos:line="28" pos:column="55">l2<pos:position pos:line="28" pos:column="57"/></name><index pos:line="28" pos:column="57">[<expr><name pos:line="28" pos:column="58">i2<pos:position pos:line="28" pos:column="60"/></name></expr>]<pos:position pos:line="28" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="63"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="33">i2<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">++<pos:position pos:line="29" pos:column="37"/></operator></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt></block></while>
		}<pos:position pos:line="30" pos:column="18"/></block></while>
	}<pos:position pos:line="31" pos:column="10"/></block></then> <elseif pos:line="31" pos:column="11">else <if pos:line="31" pos:column="16">if <condition pos:line="31" pos:column="19">(<expr><name pos:line="31" pos:column="20">flags<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="28">XDF_IGNORE_WHITESPACE_CHANGE<pos:position pos:line="31" pos:column="56"/></name></expr>)<pos:position pos:line="31" pos:column="57"/></condition><then pos:line="31" pos:column="57"> <block pos:line="31" pos:column="58">{
		<while pos:line="32" pos:column="17">while <condition pos:line="32" pos:column="23">(<expr><name pos:line="32" pos:column="24">i1<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">&lt;<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="29">s1<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">&amp;&amp;<pos:position pos:line="32" pos:column="42"/></operator> <name pos:line="32" pos:column="35">i2<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">&lt;<pos:position pos:line="32" pos:column="42"/></operator> <name pos:line="32" pos:column="40">s2<pos:position pos:line="32" pos:column="42"/></name></expr>)<pos:position pos:line="32" pos:column="43"/></condition> <block pos:line="32" pos:column="44">{
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><call><name pos:line="33" pos:column="29">XDL_ISSPACE<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name><name pos:line="33" pos:column="41">l1<pos:position pos:line="33" pos:column="43"/></name><index pos:line="33" pos:column="43">[<expr><name pos:line="33" pos:column="44">i1<pos:position pos:line="33" pos:column="46"/></name></expr>]<pos:position pos:line="33" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call> <operator pos:line="33" pos:column="49">&amp;&amp;<pos:position pos:line="33" pos:column="59"/></operator> <call><name pos:line="33" pos:column="52">XDL_ISSPACE<pos:position pos:line="33" pos:column="63"/></name><argument_list pos:line="33" pos:column="63">(<argument><expr><name><name pos:line="33" pos:column="64">l2<pos:position pos:line="33" pos:column="66"/></name><index pos:line="33" pos:column="66">[<expr><name pos:line="33" pos:column="67">i2<pos:position pos:line="33" pos:column="69"/></name></expr>]<pos:position pos:line="33" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="72"/></condition><then pos:line="33" pos:column="72"> <block pos:line="33" pos:column="73">{
				<comment type="block" pos:line="34" pos:column="33">/* Skip matching spaces and try again */</comment>
				<while pos:line="35" pos:column="33">while <condition pos:line="35" pos:column="39">(<expr><name pos:line="35" pos:column="40">i1<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">&lt;<pos:position pos:line="35" pos:column="47"/></operator> <name pos:line="35" pos:column="45">s1<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">&amp;&amp;<pos:position pos:line="35" pos:column="58"/></operator> <call><name pos:line="35" pos:column="51">XDL_ISSPACE<pos:position pos:line="35" pos:column="62"/></name><argument_list pos:line="35" pos:column="62">(<argument><expr><name><name pos:line="35" pos:column="63">l1<pos:position pos:line="35" pos:column="65"/></name><index pos:line="35" pos:column="65">[<expr><name pos:line="35" pos:column="66">i1<pos:position pos:line="35" pos:column="68"/></name></expr>]<pos:position pos:line="35" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="71"/></condition>
					<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="41">i1<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">++<pos:position pos:line="36" pos:column="45"/></operator></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt></block></while>
				<while pos:line="37" pos:column="33">while <condition pos:line="37" pos:column="39">(<expr><name pos:line="37" pos:column="40">i2<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">&lt;<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="45">s2<pos:position pos:line="37" pos:column="47"/></name> <operator pos:line="37" pos:column="48">&amp;&amp;<pos:position pos:line="37" pos:column="58"/></operator> <call><name pos:line="37" pos:column="51">XDL_ISSPACE<pos:position pos:line="37" pos:column="62"/></name><argument_list pos:line="37" pos:column="62">(<argument><expr><name><name pos:line="37" pos:column="63">l2<pos:position pos:line="37" pos:column="65"/></name><index pos:line="37" pos:column="65">[<expr><name pos:line="37" pos:column="66">i2<pos:position pos:line="37" pos:column="68"/></name></expr>]<pos:position pos:line="37" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="71"/></condition>
					<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="41">i2<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">++<pos:position pos:line="38" pos:column="45"/></operator></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt></block></while>
				<continue pos:line="39" pos:column="33">continue;<pos:position pos:line="39" pos:column="42"/></continue>
			}<pos:position pos:line="40" pos:column="26"/></block></then></if>
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name><name pos:line="41" pos:column="29">l1<pos:position pos:line="41" pos:column="31"/></name><index pos:line="41" pos:column="31">[<expr><name pos:line="41" pos:column="32">i1<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">++<pos:position pos:line="41" pos:column="36"/></operator></expr>]<pos:position pos:line="41" pos:column="37"/></index></name> <operator pos:line="41" pos:column="38">!=<pos:position pos:line="41" pos:column="40"/></operator> <name><name pos:line="41" pos:column="41">l2<pos:position pos:line="41" pos:column="43"/></name><index pos:line="41" pos:column="43">[<expr><name pos:line="41" pos:column="44">i2<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">++<pos:position pos:line="41" pos:column="48"/></operator></expr>]<pos:position pos:line="41" pos:column="49"/></index></name></expr>)<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50">
				<block type="pseudo"><return pos:line="42" pos:column="33">return <expr><literal type="number" pos:line="42" pos:column="40">0<pos:position pos:line="42" pos:column="41"/></literal></expr>;<pos:position pos:line="42" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></while>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <elseif pos:line="44" pos:column="11">else <if pos:line="44" pos:column="16">if <condition pos:line="44" pos:column="19">(<expr><name pos:line="44" pos:column="20">flags<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">&amp;<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="28">XDF_IGNORE_WHITESPACE_AT_EOL<pos:position pos:line="44" pos:column="56"/></name></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57"> <block pos:line="44" pos:column="58">{
		<while pos:line="45" pos:column="17">while <condition pos:line="45" pos:column="23">(<expr><name pos:line="45" pos:column="24">i1<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">&lt;<pos:position pos:line="45" pos:column="31"/></operator> <name pos:line="45" pos:column="29">s1<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">&amp;&amp;<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="35">i2<pos:position pos:line="45" pos:column="37"/></name> <operator pos:line="45" pos:column="38">&lt;<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="40">s2<pos:position pos:line="45" pos:column="42"/></name> <operator pos:line="45" pos:column="43">&amp;&amp;<pos:position pos:line="45" pos:column="53"/></operator> <name><name pos:line="45" pos:column="46">l1<pos:position pos:line="45" pos:column="48"/></name><index pos:line="45" pos:column="48">[<expr><name pos:line="45" pos:column="49">i1<pos:position pos:line="45" pos:column="51"/></name></expr>]<pos:position pos:line="45" pos:column="52"/></index></name> <operator pos:line="45" pos:column="53">==<pos:position pos:line="45" pos:column="55"/></operator> <name><name pos:line="45" pos:column="56">l2<pos:position pos:line="45" pos:column="58"/></name><index pos:line="45" pos:column="58">[<expr><name pos:line="45" pos:column="59">i2<pos:position pos:line="45" pos:column="61"/></name></expr>]<pos:position pos:line="45" pos:column="62"/></index></name></expr>)<pos:position pos:line="45" pos:column="63"/></condition> <block pos:line="45" pos:column="64">{
			<expr_stmt><expr><name pos:line="46" pos:column="25">i1<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">++<pos:position pos:line="46" pos:column="29"/></operator></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">i2<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">++<pos:position pos:line="47" pos:column="29"/></operator></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></while>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif></if>

	<comment type="block" pos:line="51" pos:column="9">/*
	 * After running out of one side, the remaining side must have
	 * nothing but whitespace for the lines to match.  Note that
	 * ignore-whitespace-at-eol case may break out of the loop
	 * while there still are characters remaining on both lines.
	 */</comment>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">i1<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">&lt;<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="18">s1<pos:position pos:line="57" pos:column="20"/></name></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21"> <block pos:line="57" pos:column="22">{
		<while pos:line="58" pos:column="17">while <condition pos:line="58" pos:column="23">(<expr><name pos:line="58" pos:column="24">i1<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">&lt;<pos:position pos:line="58" pos:column="31"/></operator> <name pos:line="58" pos:column="29">s1<pos:position pos:line="58" pos:column="31"/></name> <operator pos:line="58" pos:column="32">&amp;&amp;<pos:position pos:line="58" pos:column="42"/></operator> <call><name pos:line="58" pos:column="35">XDL_ISSPACE<pos:position pos:line="58" pos:column="46"/></name><argument_list pos:line="58" pos:column="46">(<argument><expr><name><name pos:line="58" pos:column="47">l1<pos:position pos:line="58" pos:column="49"/></name><index pos:line="58" pos:column="49">[<expr><name pos:line="58" pos:column="50">i1<pos:position pos:line="58" pos:column="52"/></name></expr>]<pos:position pos:line="58" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="55"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="25">i1<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">++<pos:position pos:line="59" pos:column="29"/></operator></expr>;<pos:position pos:line="59" pos:column="30"/></expr_stmt></block></while>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">s1<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">!=<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">i1<pos:position pos:line="60" pos:column="29"/></name></expr>)<pos:position pos:line="60" pos:column="30"/></condition><then pos:line="60" pos:column="30">
			<block type="pseudo"><return pos:line="61" pos:column="25">return <expr><literal type="number" pos:line="61" pos:column="32">0<pos:position pos:line="61" pos:column="33"/></literal></expr>;<pos:position pos:line="61" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">i2<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">&lt;<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="18">s2<pos:position pos:line="63" pos:column="20"/></name></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21"> <block pos:line="63" pos:column="22">{
		<while pos:line="64" pos:column="17">while <condition pos:line="64" pos:column="23">(<expr><name pos:line="64" pos:column="24">i2<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">&lt;<pos:position pos:line="64" pos:column="31"/></operator> <name pos:line="64" pos:column="29">s2<pos:position pos:line="64" pos:column="31"/></name> <operator pos:line="64" pos:column="32">&amp;&amp;<pos:position pos:line="64" pos:column="42"/></operator> <call><name pos:line="64" pos:column="35">XDL_ISSPACE<pos:position pos:line="64" pos:column="46"/></name><argument_list pos:line="64" pos:column="46">(<argument><expr><name><name pos:line="64" pos:column="47">l2<pos:position pos:line="64" pos:column="49"/></name><index pos:line="64" pos:column="49">[<expr><name pos:line="64" pos:column="50">i2<pos:position pos:line="64" pos:column="52"/></name></expr>]<pos:position pos:line="64" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="55"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="25">i2<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">++<pos:position pos:line="65" pos:column="29"/></operator></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt></block></while>
		<return pos:line="66" pos:column="17">return <expr><operator pos:line="66" pos:column="24">(<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="25">s2<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">==<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">i2<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">)<pos:position pos:line="66" pos:column="34"/></operator></expr>;<pos:position pos:line="66" pos:column="35"/></return>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>
	<return pos:line="68" pos:column="9">return <expr><literal type="number" pos:line="68" pos:column="16">1<pos:position pos:line="68" pos:column="17"/></literal></expr>;<pos:position pos:line="68" pos:column="18"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

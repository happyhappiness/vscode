<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2204_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_pick_commit<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">commit<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">commit<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">replay_opts<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">opts<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">head<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">base<pos:position pos:line="4" pos:column="28"/></name></decl>, <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="31">next<pos:position pos:line="4" pos:column="35"/></name></decl>, <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="38">parent<pos:position pos:line="4" pos:column="44"/></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">base_label<pos:position pos:line="5" pos:column="31"/></name></decl>, <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="34">next_label<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_message<pos:position pos:line="6" pos:column="30"/></name></name></type> <name pos:line="6" pos:column="31">msg<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><block pos:line="6" pos:column="37">{ <expr><name pos:line="6" pos:column="39">NULL<pos:position pos:line="6" pos:column="43"/></name></expr>, <expr><name pos:line="6" pos:column="45">NULL<pos:position pos:line="6" pos:column="49"/></name></expr>, <expr><name pos:line="6" pos:column="51">NULL<pos:position pos:line="6" pos:column="55"/></name></expr>, <expr><name pos:line="6" pos:column="57">NULL<pos:position pos:line="6" pos:column="61"/></name></expr> }<pos:position pos:line="6" pos:column="63"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">defmsg<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">msgbuf<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><name pos:line="8" pos:column="32">STRBUF_INIT<pos:position pos:line="8" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">res<pos:position pos:line="9" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="18">unborn<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="30">allow<pos:position pos:line="9" pos:column="35"/></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">opts<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">no_commit<pos:position pos:line="11" pos:column="28"/></name></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <block pos:line="11" pos:column="30">{
		<comment type="block" pos:line="12" pos:column="17">/*
		 * We do not intend to commit immediately.  We just want to
		 * merge the differences in, so let's compute the tree
		 * that represents the "current" state for merge-recursive
		 * to work on.
		 */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">write_cache_as_tree<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">head<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="47">0<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">NULL<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name> <argument_list pos:line="19" pos:column="29">(<argument><expr><call><name pos:line="19" pos:column="30">_<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><literal type="string" pos:line="19" pos:column="32">"Your index file is unmerged."<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">unborn<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <call><name pos:line="21" pos:column="26">get_sha1<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><literal type="string" pos:line="21" pos:column="35">"HEAD"<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">head<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">unborn<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">hashcpy<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">head<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">EMPTY_TREE_SHA1_BIN<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">index_differs_from<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><ternary><condition><expr><name pos:line="24" pos:column="40">unborn<pos:position pos:line="24" pos:column="46"/></name></expr> ?<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48"> <expr><name pos:line="24" pos:column="49">EMPTY_TREE_SHA1_HEX<pos:position pos:line="24" pos:column="68"/></name></expr> <pos:position pos:line="24" pos:column="69"/></then><else pos:line="24" pos:column="69">: <expr><literal type="string" pos:line="24" pos:column="71">"HEAD"<pos:position pos:line="24" pos:column="77"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="79">0<pos:position pos:line="24" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="82"/></condition><then pos:line="24" pos:column="82">
			<block type="pseudo"><return pos:line="25" pos:column="25">return <expr><call><name pos:line="25" pos:column="32">error_dirty_index<pos:position pos:line="25" pos:column="49"/></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name pos:line="25" pos:column="50">opts<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></return></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">discard_cache<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">()<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">commit<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">parents<pos:position pos:line="29" pos:column="29"/></name></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
		<expr_stmt><expr><name pos:line="30" pos:column="17">parent<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">NULL<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then>
	<elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><name><name pos:line="32" pos:column="18">commit<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">parents<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">next<pos:position pos:line="32" pos:column="39"/></name></name></expr>)<pos:position pos:line="32" pos:column="40"/></condition><then pos:line="32" pos:column="40"> <block pos:line="32" pos:column="41">{
		<comment type="block" pos:line="33" pos:column="17">/* Reverting or cherry-picking a merge commit */</comment>
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">int<pos:position pos:line="34" pos:column="20"/></name></type> <name pos:line="34" pos:column="21">cnt<pos:position pos:line="34" pos:column="24"/></name></decl>;<pos:position pos:line="34" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="35" pos:column="17">struct<pos:position pos:line="35" pos:column="23"/></name> <name pos:line="35" pos:column="24">commit_list<pos:position pos:line="35" pos:column="35"/></name></name> <modifier pos:line="35" pos:column="36">*<pos:position pos:line="35" pos:column="37"/></modifier></type><name pos:line="35" pos:column="37">p<pos:position pos:line="35" pos:column="38"/></name></decl>;<pos:position pos:line="35" pos:column="39"/></decl_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><name><name pos:line="37" pos:column="22">opts<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">-&gt;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="28">mainline<pos:position pos:line="37" pos:column="36"/></name></name></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37">
			<block type="pseudo"><return pos:line="38" pos:column="25">return <expr><call><name pos:line="38" pos:column="32">error<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><call><name pos:line="38" pos:column="38">_<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><literal type="string" pos:line="38" pos:column="40">"Commit %s is a merge but no -m option was given."<pos:position pos:line="38" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="91"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="39" pos:column="33">sha1_to_hex<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name><name pos:line="39" pos:column="45">commit<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">-&gt;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="53">object<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">.<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="60">sha1<pos:position pos:line="39" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></return></block></then></if>

		<for pos:line="41" pos:column="17">for <control pos:line="41" pos:column="21">(<init><expr><name pos:line="41" pos:column="22">cnt<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <literal type="number" pos:line="41" pos:column="28">1<pos:position pos:line="41" pos:column="29"/></literal></expr><operator pos:line="41" pos:column="29">,<pos:position pos:line="41" pos:column="30"/></operator> <expr><name pos:line="41" pos:column="31">p<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <name><name pos:line="41" pos:column="35">commit<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">parents<pos:position pos:line="41" pos:column="50"/></name></name></expr>;<pos:position pos:line="41" pos:column="51"/></init>
		     <condition><expr><name pos:line="42" pos:column="22">cnt<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">!=<pos:position pos:line="42" pos:column="28"/></operator> <name><name pos:line="42" pos:column="29">opts<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">mainline<pos:position pos:line="42" pos:column="43"/></name></name> <operator pos:line="42" pos:column="44">&amp;&amp;<pos:position pos:line="42" pos:column="54"/></operator> <name pos:line="42" pos:column="47">p<pos:position pos:line="42" pos:column="48"/></name></expr>;<pos:position pos:line="42" pos:column="49"/></condition>
		     <incr><expr><name pos:line="43" pos:column="22">cnt<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">++<pos:position pos:line="43" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="28"/></control>
			<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">p<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name><name pos:line="44" pos:column="29">p<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">next<pos:position pos:line="44" pos:column="36"/></name></name></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt></block></for>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">cnt<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">!=<pos:position pos:line="45" pos:column="27"/></operator> <name><name pos:line="45" pos:column="28">opts<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">mainline<pos:position pos:line="45" pos:column="42"/></name></name> <operator pos:line="45" pos:column="43">||<pos:position pos:line="45" pos:column="45"/></operator> <operator pos:line="45" pos:column="46">!<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="47">p<pos:position pos:line="45" pos:column="48"/></name></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49">
			<block type="pseudo"><return pos:line="46" pos:column="25">return <expr><call><name pos:line="46" pos:column="32">error<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><call><name pos:line="46" pos:column="38">_<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><literal type="string" pos:line="46" pos:column="40">"Commit %s does not have parent %d"<pos:position pos:line="46" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="47" pos:column="33">sha1_to_hex<pos:position pos:line="47" pos:column="44"/></name><argument_list pos:line="47" pos:column="44">(<argument><expr><name><name pos:line="47" pos:column="45">commit<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">object<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">.<pos:position pos:line="47" pos:column="60"/></operator><name pos:line="47" pos:column="60">sha1<pos:position pos:line="47" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="67">opts<pos:position pos:line="47" pos:column="71"/></name><operator pos:line="47" pos:column="71">-&gt;<pos:position pos:line="47" pos:column="76"/></operator><name pos:line="47" pos:column="73">mainline<pos:position pos:line="47" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="83"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="48" pos:column="17">parent<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <name><name pos:line="48" pos:column="26">p<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">item<pos:position pos:line="48" pos:column="33"/></name></name></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif> <elseif pos:line="49" pos:column="11">else <if pos:line="49" pos:column="16">if <condition pos:line="49" pos:column="19">(<expr><literal type="number" pos:line="49" pos:column="20">0<pos:position pos:line="49" pos:column="21"/></literal> <operator pos:line="49" pos:column="22">&lt;<pos:position pos:line="49" pos:column="26"/></operator> <name><name pos:line="49" pos:column="24">opts<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">mainline<pos:position pos:line="49" pos:column="38"/></name></name></expr>)<pos:position pos:line="49" pos:column="39"/></condition><then pos:line="49" pos:column="39">
		<block type="pseudo"><return pos:line="50" pos:column="17">return <expr><call><name pos:line="50" pos:column="24">error<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><call><name pos:line="50" pos:column="30">_<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><literal type="string" pos:line="50" pos:column="32">"Mainline was specified but commit %s is not a merge."<pos:position pos:line="50" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="87"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="51" pos:column="25">sha1_to_hex<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name><name pos:line="51" pos:column="37">commit<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">object<pos:position pos:line="51" pos:column="51"/></name><operator pos:line="51" pos:column="51">.<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="52">sha1<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></return></block></then></if></elseif>
	<else pos:line="52" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="17">parent<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <name><name pos:line="53" pos:column="26">commit<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">parents<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">-&gt;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="43">item<pos:position pos:line="53" pos:column="47"/></name></name></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt></block></else></if>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">opts<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">allow_ff<pos:position pos:line="55" pos:column="27"/></name></name> <operator pos:line="55" pos:column="28">&amp;&amp;<pos:position pos:line="55" pos:column="38"/></operator>
	    <operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><operator pos:line="56" pos:column="14">(<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="15">parent<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">&amp;&amp;<pos:position pos:line="56" pos:column="32"/></operator> <operator pos:line="56" pos:column="25">!<pos:position pos:line="56" pos:column="26"/></operator><call><name pos:line="56" pos:column="26">hashcmp<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name><name pos:line="56" pos:column="34">parent<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="42">object<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">.<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="49">sha1<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="55">head<pos:position pos:line="56" pos:column="59"/></name></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call><operator pos:line="56" pos:column="60">)<pos:position pos:line="56" pos:column="61"/></operator> <operator pos:line="56" pos:column="62">||<pos:position pos:line="56" pos:column="64"/></operator>
	     <operator pos:line="57" pos:column="14">(<pos:position pos:line="57" pos:column="15"/></operator><operator pos:line="57" pos:column="15">!<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">parent<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">&amp;&amp;<pos:position pos:line="57" pos:column="33"/></operator> <name pos:line="57" pos:column="26">unborn<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">)<pos:position pos:line="57" pos:column="33"/></operator><operator pos:line="57" pos:column="33">)<pos:position pos:line="57" pos:column="34"/></operator></expr>)<pos:position pos:line="57" pos:column="35"/></condition><then pos:line="57" pos:column="35">
		<block type="pseudo"><return pos:line="58" pos:column="17">return <expr><call><name pos:line="58" pos:column="24">fast_forward_to<pos:position pos:line="58" pos:column="39"/></name><argument_list pos:line="58" pos:column="39">(<argument><expr><name><name pos:line="58" pos:column="40">commit<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">-&gt;<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="48">object<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">.<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="55">sha1<pos:position pos:line="58" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">head<pos:position pos:line="58" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="67">unborn<pos:position pos:line="58" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="75">opts<pos:position pos:line="58" pos:column="79"/></name></expr></argument>)<pos:position pos:line="58" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="81"/></return></block></then></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">parent<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">&amp;&amp;<pos:position pos:line="60" pos:column="30"/></operator> <call><name pos:line="60" pos:column="23">parse_commit<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">parent<pos:position pos:line="60" pos:column="42"/></name></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call> <operator pos:line="60" pos:column="44">&lt;<pos:position pos:line="60" pos:column="48"/></operator> <literal type="number" pos:line="60" pos:column="46">0<pos:position pos:line="60" pos:column="47"/></literal></expr>)<pos:position pos:line="60" pos:column="48"/></condition><then pos:line="60" pos:column="48">
		<comment type="block" pos:line="61" pos:column="17">/* TRANSLATORS: The first %s will be "revert" or
		   "cherry-pick", the second %s a SHA1 */</comment>
		<block type="pseudo"><return pos:line="63" pos:column="17">return <expr><call><name pos:line="63" pos:column="24">error<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">(<argument><expr><call><name pos:line="63" pos:column="30">_<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><literal type="string" pos:line="63" pos:column="32">"%s: cannot parse parent commit %s"<pos:position pos:line="63" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="64" pos:column="25">action_name<pos:position pos:line="64" pos:column="36"/></name><argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">opts<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="44">sha1_to_hex<pos:position pos:line="64" pos:column="55"/></name><argument_list pos:line="64" pos:column="55">(<argument><expr><name><name pos:line="64" pos:column="56">parent<pos:position pos:line="64" pos:column="62"/></name><operator pos:line="64" pos:column="62">-&gt;<pos:position pos:line="64" pos:column="67"/></operator><name pos:line="64" pos:column="64">object<pos:position pos:line="64" pos:column="70"/></name><operator pos:line="64" pos:column="70">.<pos:position pos:line="64" pos:column="71"/></operator><name pos:line="64" pos:column="71">sha1<pos:position pos:line="64" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="78"/></return></block></then></if>

	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><call><name pos:line="66" pos:column="13">get_message<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">commit<pos:position pos:line="66" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="33">&amp;<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="34">msg<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call> <operator pos:line="66" pos:column="39">!=<pos:position pos:line="66" pos:column="41"/></operator> <literal type="number" pos:line="66" pos:column="42">0<pos:position pos:line="66" pos:column="43"/></literal></expr>)<pos:position pos:line="66" pos:column="44"/></condition><then pos:line="66" pos:column="44">
		<block type="pseudo"><return pos:line="67" pos:column="17">return <expr><call><name pos:line="67" pos:column="24">error<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><call><name pos:line="67" pos:column="30">_<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><literal type="string" pos:line="67" pos:column="32">"Cannot get commit message for %s"<pos:position pos:line="67" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="67"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="68" pos:column="25">sha1_to_hex<pos:position pos:line="68" pos:column="36"/></name><argument_list pos:line="68" pos:column="36">(<argument><expr><name><name pos:line="68" pos:column="37">commit<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">object<pos:position pos:line="68" pos:column="51"/></name><operator pos:line="68" pos:column="51">.<pos:position pos:line="68" pos:column="52"/></operator><name pos:line="68" pos:column="52">sha1<pos:position pos:line="68" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="59"/></return></block></then></if>

	<comment type="block" pos:line="70" pos:column="9">/*
	 * "commit" is an existing commit.  We would want to apply
	 * the difference it introduces since its first parent "prev"
	 * on top of the current HEAD if we are cherry-pick.  Or the
	 * reverse of it if we are revert.
	 */</comment>

	<expr_stmt><expr><name pos:line="77" pos:column="9">defmsg<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <call><name pos:line="77" pos:column="18">git_pathdup<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><literal type="string" pos:line="77" pos:column="30">"MERGE_MSG"<pos:position pos:line="77" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="43"/></expr_stmt>

	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name><name pos:line="79" pos:column="13">opts<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">action<pos:position pos:line="79" pos:column="25"/></name></name> <operator pos:line="79" pos:column="26">==<pos:position pos:line="79" pos:column="28"/></operator> <name pos:line="79" pos:column="29">REPLAY_REVERT<pos:position pos:line="79" pos:column="42"/></name></expr>)<pos:position pos:line="79" pos:column="43"/></condition><then pos:line="79" pos:column="43"> <block pos:line="79" pos:column="44">{
		<expr_stmt><expr><name pos:line="80" pos:column="17">base<pos:position pos:line="80" pos:column="21"/></name> <operator pos:line="80" pos:column="22">=<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="24">commit<pos:position pos:line="80" pos:column="30"/></name></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="81" pos:column="17">base_label<pos:position pos:line="81" pos:column="27"/></name> <operator pos:line="81" pos:column="28">=<pos:position pos:line="81" pos:column="29"/></operator> <name><name pos:line="81" pos:column="30">msg<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">.<pos:position pos:line="81" pos:column="34"/></operator><name pos:line="81" pos:column="34">label<pos:position pos:line="81" pos:column="39"/></name></name></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="82" pos:column="17">next<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">=<pos:position pos:line="82" pos:column="23"/></operator> <name pos:line="82" pos:column="24">parent<pos:position pos:line="82" pos:column="30"/></name></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="83" pos:column="17">next_label<pos:position pos:line="83" pos:column="27"/></name> <operator pos:line="83" pos:column="28">=<pos:position pos:line="83" pos:column="29"/></operator> <name><name pos:line="83" pos:column="30">msg<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">.<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="34">parent_label<pos:position pos:line="83" pos:column="46"/></name></name></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">strbuf_addstr<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><operator pos:line="84" pos:column="31">&amp;<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="32">msgbuf<pos:position pos:line="84" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="40">"Revert \""<pos:position pos:line="84" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">strbuf_addstr<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><operator pos:line="85" pos:column="31">&amp;<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="32">msgbuf<pos:position pos:line="85" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="40">msg<pos:position pos:line="85" pos:column="43"/></name><operator pos:line="85" pos:column="43">.<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="44">subject<pos:position pos:line="85" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">strbuf_addstr<pos:position pos:line="86" pos:column="30"/></name><argument_list pos:line="86" pos:column="30">(<argument><expr><operator pos:line="86" pos:column="31">&amp;<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="32">msgbuf<pos:position pos:line="86" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="40">"\"\n\nThis reverts commit "<pos:position pos:line="86" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">strbuf_addstr<pos:position pos:line="87" pos:column="30"/></name><argument_list pos:line="87" pos:column="30">(<argument><expr><operator pos:line="87" pos:column="31">&amp;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="32">msgbuf<pos:position pos:line="87" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="40">sha1_to_hex<pos:position pos:line="87" pos:column="51"/></name><argument_list pos:line="87" pos:column="51">(<argument><expr><name><name pos:line="87" pos:column="52">commit<pos:position pos:line="87" pos:column="58"/></name><operator pos:line="87" pos:column="58">-&gt;<pos:position pos:line="87" pos:column="63"/></operator><name pos:line="87" pos:column="60">object<pos:position pos:line="87" pos:column="66"/></name><operator pos:line="87" pos:column="66">.<pos:position pos:line="87" pos:column="67"/></operator><name pos:line="87" pos:column="67">sha1<pos:position pos:line="87" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="74"/></expr_stmt>

		<if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><name><name pos:line="89" pos:column="21">commit<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">-&gt;<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="29">parents<pos:position pos:line="89" pos:column="36"/></name></name> <operator pos:line="89" pos:column="37">&amp;&amp;<pos:position pos:line="89" pos:column="47"/></operator> <name><name pos:line="89" pos:column="40">commit<pos:position pos:line="89" pos:column="46"/></name><operator pos:line="89" pos:column="46">-&gt;<pos:position pos:line="89" pos:column="51"/></operator><name pos:line="89" pos:column="48">parents<pos:position pos:line="89" pos:column="55"/></name><operator pos:line="89" pos:column="55">-&gt;<pos:position pos:line="89" pos:column="60"/></operator><name pos:line="89" pos:column="57">next<pos:position pos:line="89" pos:column="61"/></name></name></expr>)<pos:position pos:line="89" pos:column="62"/></condition><then pos:line="89" pos:column="62"> <block pos:line="89" pos:column="63">{
			<expr_stmt><expr><call><name pos:line="90" pos:column="25">strbuf_addstr<pos:position pos:line="90" pos:column="38"/></name><argument_list pos:line="90" pos:column="38">(<argument><expr><operator pos:line="90" pos:column="39">&amp;<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="40">msgbuf<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="48">", reversing\nchanges made to "<pos:position pos:line="90" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">strbuf_addstr<pos:position pos:line="91" pos:column="38"/></name><argument_list pos:line="91" pos:column="38">(<argument><expr><operator pos:line="91" pos:column="39">&amp;<pos:position pos:line="91" pos:column="44"/></operator><name pos:line="91" pos:column="40">msgbuf<pos:position pos:line="91" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="48">sha1_to_hex<pos:position pos:line="91" pos:column="59"/></name><argument_list pos:line="91" pos:column="59">(<argument><expr><name><name pos:line="91" pos:column="60">parent<pos:position pos:line="91" pos:column="66"/></name><operator pos:line="91" pos:column="66">-&gt;<pos:position pos:line="91" pos:column="71"/></operator><name pos:line="91" pos:column="68">object<pos:position pos:line="91" pos:column="74"/></name><operator pos:line="91" pos:column="74">.<pos:position pos:line="91" pos:column="75"/></operator><name pos:line="91" pos:column="75">sha1<pos:position pos:line="91" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="82"/></expr_stmt>
		}<pos:position pos:line="92" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">strbuf_addstr<pos:position pos:line="93" pos:column="30"/></name><argument_list pos:line="93" pos:column="30">(<argument><expr><operator pos:line="93" pos:column="31">&amp;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="32">msgbuf<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="40">".\n"<pos:position pos:line="93" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="94" pos:column="10"/></block></then> <else pos:line="94" pos:column="11">else <block pos:line="94" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="95" pos:column="17">const<pos:position pos:line="95" pos:column="22"/></specifier> <name pos:line="95" pos:column="23">char<pos:position pos:line="95" pos:column="27"/></name> <modifier pos:line="95" pos:column="28">*<pos:position pos:line="95" pos:column="29"/></modifier></type><name pos:line="95" pos:column="29">p<pos:position pos:line="95" pos:column="30"/></name></decl>;<pos:position pos:line="95" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><name pos:line="97" pos:column="17">base<pos:position pos:line="97" pos:column="21"/></name> <operator pos:line="97" pos:column="22">=<pos:position pos:line="97" pos:column="23"/></operator> <name pos:line="97" pos:column="24">parent<pos:position pos:line="97" pos:column="30"/></name></expr>;<pos:position pos:line="97" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="98" pos:column="17">base_label<pos:position pos:line="98" pos:column="27"/></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <name><name pos:line="98" pos:column="30">msg<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">.<pos:position pos:line="98" pos:column="34"/></operator><name pos:line="98" pos:column="34">parent_label<pos:position pos:line="98" pos:column="46"/></name></name></expr>;<pos:position pos:line="98" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="99" pos:column="17">next<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <name pos:line="99" pos:column="24">commit<pos:position pos:line="99" pos:column="30"/></name></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="100" pos:column="17">next_label<pos:position pos:line="100" pos:column="27"/></name> <operator pos:line="100" pos:column="28">=<pos:position pos:line="100" pos:column="29"/></operator> <name><name pos:line="100" pos:column="30">msg<pos:position pos:line="100" pos:column="33"/></name><operator pos:line="100" pos:column="33">.<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="34">label<pos:position pos:line="100" pos:column="39"/></name></name></expr>;<pos:position pos:line="100" pos:column="40"/></expr_stmt>

		<comment type="block" pos:line="102" pos:column="17">/*
		 * Append the commit log message to msgbuf; it starts
		 * after the tree, parent, author, committer
		 * information followed by "\n\n".
		 */</comment>
		<expr_stmt><expr><name pos:line="107" pos:column="17">p<pos:position pos:line="107" pos:column="18"/></name> <operator pos:line="107" pos:column="19">=<pos:position pos:line="107" pos:column="20"/></operator> <call><name pos:line="107" pos:column="21">strstr<pos:position pos:line="107" pos:column="27"/></name><argument_list pos:line="107" pos:column="27">(<argument><expr><name><name pos:line="107" pos:column="28">msg<pos:position pos:line="107" pos:column="31"/></name><operator pos:line="107" pos:column="31">.<pos:position pos:line="107" pos:column="32"/></operator><name pos:line="107" pos:column="32">message<pos:position pos:line="107" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="41">"\n\n"<pos:position pos:line="107" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="49"/></expr_stmt>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">p<pos:position pos:line="108" pos:column="22"/></name></expr>)<pos:position pos:line="108" pos:column="23"/></condition><then pos:line="108" pos:column="23"> <block pos:line="108" pos:column="24">{
			<expr_stmt><expr><name pos:line="109" pos:column="25">p<pos:position pos:line="109" pos:column="26"/></name> <operator pos:line="109" pos:column="27">+=<pos:position pos:line="109" pos:column="29"/></operator> <literal type="number" pos:line="109" pos:column="30">2<pos:position pos:line="109" pos:column="31"/></literal></expr>;<pos:position pos:line="109" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">strbuf_addstr<pos:position pos:line="110" pos:column="38"/></name><argument_list pos:line="110" pos:column="38">(<argument><expr><operator pos:line="110" pos:column="39">&amp;<pos:position pos:line="110" pos:column="44"/></operator><name pos:line="110" pos:column="40">msgbuf<pos:position pos:line="110" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="48">p<pos:position pos:line="110" pos:column="49"/></name></expr></argument>)<pos:position pos:line="110" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if>

		<if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><name><name pos:line="113" pos:column="21">opts<pos:position pos:line="113" pos:column="25"/></name><operator pos:line="113" pos:column="25">-&gt;<pos:position pos:line="113" pos:column="30"/></operator><name pos:line="113" pos:column="27">record_origin<pos:position pos:line="113" pos:column="40"/></name></name></expr>)<pos:position pos:line="113" pos:column="41"/></condition><then pos:line="113" pos:column="41"> <block pos:line="113" pos:column="42">{
			<if pos:line="114" pos:column="25">if <condition pos:line="114" pos:column="28">(<expr><operator pos:line="114" pos:column="29">!<pos:position pos:line="114" pos:column="30"/></operator><call><name pos:line="114" pos:column="30">has_conforming_footer<pos:position pos:line="114" pos:column="51"/></name><argument_list pos:line="114" pos:column="51">(<argument><expr><operator pos:line="114" pos:column="52">&amp;<pos:position pos:line="114" pos:column="57"/></operator><name pos:line="114" pos:column="53">msgbuf<pos:position pos:line="114" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="61">NULL<pos:position pos:line="114" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="67">0<pos:position pos:line="114" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="70"/></condition><then pos:line="114" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="33">strbuf_addch<pos:position pos:line="115" pos:column="45"/></name><argument_list pos:line="115" pos:column="45">(<argument><expr><operator pos:line="115" pos:column="46">&amp;<pos:position pos:line="115" pos:column="51"/></operator><name pos:line="115" pos:column="47">msgbuf<pos:position pos:line="115" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="115" pos:column="55">'\n'<pos:position pos:line="115" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="61"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="116" pos:column="25">strbuf_addstr<pos:position pos:line="116" pos:column="38"/></name><argument_list pos:line="116" pos:column="38">(<argument><expr><operator pos:line="116" pos:column="39">&amp;<pos:position pos:line="116" pos:column="44"/></operator><name pos:line="116" pos:column="40">msgbuf<pos:position pos:line="116" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="48">cherry_picked_prefix<pos:position pos:line="116" pos:column="68"/></name></expr></argument>)<pos:position pos:line="116" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="117" pos:column="25">strbuf_addstr<pos:position pos:line="117" pos:column="38"/></name><argument_list pos:line="117" pos:column="38">(<argument><expr><operator pos:line="117" pos:column="39">&amp;<pos:position pos:line="117" pos:column="44"/></operator><name pos:line="117" pos:column="40">msgbuf<pos:position pos:line="117" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="117" pos:column="48">sha1_to_hex<pos:position pos:line="117" pos:column="59"/></name><argument_list pos:line="117" pos:column="59">(<argument><expr><name><name pos:line="117" pos:column="60">commit<pos:position pos:line="117" pos:column="66"/></name><operator pos:line="117" pos:column="66">-&gt;<pos:position pos:line="117" pos:column="71"/></operator><name pos:line="117" pos:column="68">object<pos:position pos:line="117" pos:column="74"/></name><operator pos:line="117" pos:column="74">.<pos:position pos:line="117" pos:column="75"/></operator><name pos:line="117" pos:column="75">sha1<pos:position pos:line="117" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="118" pos:column="25">strbuf_addstr<pos:position pos:line="118" pos:column="38"/></name><argument_list pos:line="118" pos:column="38">(<argument><expr><operator pos:line="118" pos:column="39">&amp;<pos:position pos:line="118" pos:column="44"/></operator><name pos:line="118" pos:column="40">msgbuf<pos:position pos:line="118" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="48">")\n"<pos:position pos:line="118" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="119" pos:column="18"/></block></then></if>
	}<pos:position pos:line="120" pos:column="10"/></block></else></if>

	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><operator pos:line="122" pos:column="13">!<pos:position pos:line="122" pos:column="14"/></operator><name><name pos:line="122" pos:column="14">opts<pos:position pos:line="122" pos:column="18"/></name><operator pos:line="122" pos:column="18">-&gt;<pos:position pos:line="122" pos:column="23"/></operator><name pos:line="122" pos:column="20">strategy<pos:position pos:line="122" pos:column="28"/></name></name> <operator pos:line="122" pos:column="29">||<pos:position pos:line="122" pos:column="31"/></operator> <operator pos:line="122" pos:column="32">!<pos:position pos:line="122" pos:column="33"/></operator><call><name pos:line="122" pos:column="33">strcmp<pos:position pos:line="122" pos:column="39"/></name><argument_list pos:line="122" pos:column="39">(<argument><expr><name><name pos:line="122" pos:column="40">opts<pos:position pos:line="122" pos:column="44"/></name><operator pos:line="122" pos:column="44">-&gt;<pos:position pos:line="122" pos:column="49"/></operator><name pos:line="122" pos:column="46">strategy<pos:position pos:line="122" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="56">"recursive"<pos:position pos:line="122" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="68"/></argument_list></call> <operator pos:line="122" pos:column="69">||<pos:position pos:line="122" pos:column="71"/></operator> <name><name pos:line="122" pos:column="72">opts<pos:position pos:line="122" pos:column="76"/></name><operator pos:line="122" pos:column="76">-&gt;<pos:position pos:line="122" pos:column="81"/></operator><name pos:line="122" pos:column="78">action<pos:position pos:line="122" pos:column="84"/></name></name> <operator pos:line="122" pos:column="85">==<pos:position pos:line="122" pos:column="87"/></operator> <name pos:line="122" pos:column="88">REPLAY_REVERT<pos:position pos:line="122" pos:column="101"/></name></expr>)<pos:position pos:line="122" pos:column="102"/></condition><then pos:line="122" pos:column="102"> <block pos:line="122" pos:column="103">{
		<expr_stmt><expr><name pos:line="123" pos:column="17">res<pos:position pos:line="123" pos:column="20"/></name> <operator pos:line="123" pos:column="21">=<pos:position pos:line="123" pos:column="22"/></operator> <call><name pos:line="123" pos:column="23">do_recursive_merge<pos:position pos:line="123" pos:column="41"/></name><argument_list pos:line="123" pos:column="41">(<argument><expr><name pos:line="123" pos:column="42">base<pos:position pos:line="123" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="48">next<pos:position pos:line="123" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="54">base_label<pos:position pos:line="123" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="66">next_label<pos:position pos:line="123" pos:column="76"/></name></expr></argument>,
					 <argument><expr><name pos:line="124" pos:column="42">head<pos:position pos:line="124" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="48">&amp;<pos:position pos:line="124" pos:column="53"/></operator><name pos:line="124" pos:column="49">msgbuf<pos:position pos:line="124" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="57">opts<pos:position pos:line="124" pos:column="61"/></name></expr></argument>)<pos:position pos:line="124" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="125" pos:column="17">write_message<pos:position pos:line="125" pos:column="30"/></name><argument_list pos:line="125" pos:column="30">(<argument><expr><operator pos:line="125" pos:column="31">&amp;<pos:position pos:line="125" pos:column="36"/></operator><name pos:line="125" pos:column="32">msgbuf<pos:position pos:line="125" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="40">defmsg<pos:position pos:line="125" pos:column="46"/></name></expr></argument>)<pos:position pos:line="125" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="126" pos:column="10"/></block></then> <else pos:line="126" pos:column="11">else <block pos:line="126" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="127" pos:column="17">struct<pos:position pos:line="127" pos:column="23"/></name> <name pos:line="127" pos:column="24">commit_list<pos:position pos:line="127" pos:column="35"/></name></name> <modifier pos:line="127" pos:column="36">*<pos:position pos:line="127" pos:column="37"/></modifier></type><name pos:line="127" pos:column="37">common<pos:position pos:line="127" pos:column="43"/></name> <init pos:line="127" pos:column="44">= <expr><name pos:line="127" pos:column="46">NULL<pos:position pos:line="127" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="127" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="128" pos:column="17">struct<pos:position pos:line="128" pos:column="23"/></name> <name pos:line="128" pos:column="24">commit_list<pos:position pos:line="128" pos:column="35"/></name></name> <modifier pos:line="128" pos:column="36">*<pos:position pos:line="128" pos:column="37"/></modifier></type><name pos:line="128" pos:column="37">remotes<pos:position pos:line="128" pos:column="44"/></name> <init pos:line="128" pos:column="45">= <expr><name pos:line="128" pos:column="47">NULL<pos:position pos:line="128" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="128" pos:column="52"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="130" pos:column="17">write_message<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><operator pos:line="130" pos:column="31">&amp;<pos:position pos:line="130" pos:column="36"/></operator><name pos:line="130" pos:column="32">msgbuf<pos:position pos:line="130" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="40">defmsg<pos:position pos:line="130" pos:column="46"/></name></expr></argument>)<pos:position pos:line="130" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="132" pos:column="17">commit_list_insert<pos:position pos:line="132" pos:column="35"/></name><argument_list pos:line="132" pos:column="35">(<argument><expr><name pos:line="132" pos:column="36">base<pos:position pos:line="132" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="42">&amp;<pos:position pos:line="132" pos:column="47"/></operator><name pos:line="132" pos:column="43">common<pos:position pos:line="132" pos:column="49"/></name></expr></argument>)<pos:position pos:line="132" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="133" pos:column="17">commit_list_insert<pos:position pos:line="133" pos:column="35"/></name><argument_list pos:line="133" pos:column="35">(<argument><expr><name pos:line="133" pos:column="36">next<pos:position pos:line="133" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="42">&amp;<pos:position pos:line="133" pos:column="47"/></operator><name pos:line="133" pos:column="43">remotes<pos:position pos:line="133" pos:column="50"/></name></expr></argument>)<pos:position pos:line="133" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="134" pos:column="17">res<pos:position pos:line="134" pos:column="20"/></name> <operator pos:line="134" pos:column="21">=<pos:position pos:line="134" pos:column="22"/></operator> <call><name pos:line="134" pos:column="23">try_merge_command<pos:position pos:line="134" pos:column="40"/></name><argument_list pos:line="134" pos:column="40">(<argument><expr><name><name pos:line="134" pos:column="41">opts<pos:position pos:line="134" pos:column="45"/></name><operator pos:line="134" pos:column="45">-&gt;<pos:position pos:line="134" pos:column="50"/></operator><name pos:line="134" pos:column="47">strategy<pos:position pos:line="134" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="57">opts<pos:position pos:line="134" pos:column="61"/></name><operator pos:line="134" pos:column="61">-&gt;<pos:position pos:line="134" pos:column="66"/></operator><name pos:line="134" pos:column="63">xopts_nr<pos:position pos:line="134" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="73">opts<pos:position pos:line="134" pos:column="77"/></name><operator pos:line="134" pos:column="77">-&gt;<pos:position pos:line="134" pos:column="82"/></operator><name pos:line="134" pos:column="79">xopts<pos:position pos:line="134" pos:column="84"/></name></name></expr></argument>,
					<argument><expr><name pos:line="135" pos:column="41">common<pos:position pos:line="135" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="135" pos:column="49">sha1_to_hex<pos:position pos:line="135" pos:column="60"/></name><argument_list pos:line="135" pos:column="60">(<argument><expr><name pos:line="135" pos:column="61">head<pos:position pos:line="135" pos:column="65"/></name></expr></argument>)<pos:position pos:line="135" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="135" pos:column="68">remotes<pos:position pos:line="135" pos:column="75"/></name></expr></argument>)<pos:position pos:line="135" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="136" pos:column="17">free_commit_list<pos:position pos:line="136" pos:column="33"/></name><argument_list pos:line="136" pos:column="33">(<argument><expr><name pos:line="136" pos:column="34">common<pos:position pos:line="136" pos:column="40"/></name></expr></argument>)<pos:position pos:line="136" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="137" pos:column="17">free_commit_list<pos:position pos:line="137" pos:column="33"/></name><argument_list pos:line="137" pos:column="33">(<argument><expr><name pos:line="137" pos:column="34">remotes<pos:position pos:line="137" pos:column="41"/></name></expr></argument>)<pos:position pos:line="137" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="138" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="140" pos:column="9">/*
	 * If the merge was clean or if it failed due to conflict, we write
	 * CHERRY_PICK_HEAD for the subsequent invocation of commit to use.
	 * However, if the merge did not even start, then we don't want to
	 * write it at all.
	 */</comment>
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name><name pos:line="146" pos:column="13">opts<pos:position pos:line="146" pos:column="17"/></name><operator pos:line="146" pos:column="17">-&gt;<pos:position pos:line="146" pos:column="22"/></operator><name pos:line="146" pos:column="19">action<pos:position pos:line="146" pos:column="25"/></name></name> <operator pos:line="146" pos:column="26">==<pos:position pos:line="146" pos:column="28"/></operator> <name pos:line="146" pos:column="29">REPLAY_PICK<pos:position pos:line="146" pos:column="40"/></name> <operator pos:line="146" pos:column="41">&amp;&amp;<pos:position pos:line="146" pos:column="51"/></operator> <operator pos:line="146" pos:column="44">!<pos:position pos:line="146" pos:column="45"/></operator><name><name pos:line="146" pos:column="45">opts<pos:position pos:line="146" pos:column="49"/></name><operator pos:line="146" pos:column="49">-&gt;<pos:position pos:line="146" pos:column="54"/></operator><name pos:line="146" pos:column="51">no_commit<pos:position pos:line="146" pos:column="60"/></name></name> <operator pos:line="146" pos:column="61">&amp;&amp;<pos:position pos:line="146" pos:column="71"/></operator> <operator pos:line="146" pos:column="64">(<pos:position pos:line="146" pos:column="65"/></operator><name pos:line="146" pos:column="65">res<pos:position pos:line="146" pos:column="68"/></name> <operator pos:line="146" pos:column="69">==<pos:position pos:line="146" pos:column="71"/></operator> <literal type="number" pos:line="146" pos:column="72">0<pos:position pos:line="146" pos:column="73"/></literal> <operator pos:line="146" pos:column="74">||<pos:position pos:line="146" pos:column="76"/></operator> <name pos:line="146" pos:column="77">res<pos:position pos:line="146" pos:column="80"/></name> <operator pos:line="146" pos:column="81">==<pos:position pos:line="146" pos:column="83"/></operator> <literal type="number" pos:line="146" pos:column="84">1<pos:position pos:line="146" pos:column="85"/></literal><operator pos:line="146" pos:column="85">)<pos:position pos:line="146" pos:column="86"/></operator></expr>)<pos:position pos:line="146" pos:column="87"/></condition><then pos:line="146" pos:column="87">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="17">write_cherry_pick_head<pos:position pos:line="147" pos:column="39"/></name><argument_list pos:line="147" pos:column="39">(<argument><expr><name pos:line="147" pos:column="40">commit<pos:position pos:line="147" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="48">"CHERRY_PICK_HEAD"<pos:position pos:line="147" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name><name pos:line="148" pos:column="13">opts<pos:position pos:line="148" pos:column="17"/></name><operator pos:line="148" pos:column="17">-&gt;<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="19">action<pos:position pos:line="148" pos:column="25"/></name></name> <operator pos:line="148" pos:column="26">==<pos:position pos:line="148" pos:column="28"/></operator> <name pos:line="148" pos:column="29">REPLAY_REVERT<pos:position pos:line="148" pos:column="42"/></name> <operator pos:line="148" pos:column="43">&amp;&amp;<pos:position pos:line="148" pos:column="53"/></operator> <operator pos:line="148" pos:column="46">(<pos:position pos:line="148" pos:column="47"/></operator><operator pos:line="148" pos:column="47">(<pos:position pos:line="148" pos:column="48"/></operator><name><name pos:line="148" pos:column="48">opts<pos:position pos:line="148" pos:column="52"/></name><operator pos:line="148" pos:column="52">-&gt;<pos:position pos:line="148" pos:column="57"/></operator><name pos:line="148" pos:column="54">no_commit<pos:position pos:line="148" pos:column="63"/></name></name> <operator pos:line="148" pos:column="64">&amp;&amp;<pos:position pos:line="148" pos:column="74"/></operator> <name pos:line="148" pos:column="67">res<pos:position pos:line="148" pos:column="70"/></name> <operator pos:line="148" pos:column="71">==<pos:position pos:line="148" pos:column="73"/></operator> <literal type="number" pos:line="148" pos:column="74">0<pos:position pos:line="148" pos:column="75"/></literal><operator pos:line="148" pos:column="75">)<pos:position pos:line="148" pos:column="76"/></operator> <operator pos:line="148" pos:column="77">||<pos:position pos:line="148" pos:column="79"/></operator> <name pos:line="148" pos:column="80">res<pos:position pos:line="148" pos:column="83"/></name> <operator pos:line="148" pos:column="84">==<pos:position pos:line="148" pos:column="86"/></operator> <literal type="number" pos:line="148" pos:column="87">1<pos:position pos:line="148" pos:column="88"/></literal><operator pos:line="148" pos:column="88">)<pos:position pos:line="148" pos:column="89"/></operator></expr>)<pos:position pos:line="148" pos:column="90"/></condition><then pos:line="148" pos:column="90">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="17">write_cherry_pick_head<pos:position pos:line="149" pos:column="39"/></name><argument_list pos:line="149" pos:column="39">(<argument><expr><name pos:line="149" pos:column="40">commit<pos:position pos:line="149" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="48">"REVERT_HEAD"<pos:position pos:line="149" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="63"/></expr_stmt></block></then></if>

	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">res<pos:position pos:line="151" pos:column="16"/></name></expr>)<pos:position pos:line="151" pos:column="17"/></condition><then pos:line="151" pos:column="17"> <block pos:line="151" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="152" pos:column="17">error<pos:position pos:line="152" pos:column="22"/></name><argument_list pos:line="152" pos:column="22">(<argument><expr><ternary><condition><expr><name><name pos:line="152" pos:column="23">opts<pos:position pos:line="152" pos:column="27"/></name><operator pos:line="152" pos:column="27">-&gt;<pos:position pos:line="152" pos:column="32"/></operator><name pos:line="152" pos:column="29">action<pos:position pos:line="152" pos:column="35"/></name></name> <operator pos:line="152" pos:column="36">==<pos:position pos:line="152" pos:column="38"/></operator> <name pos:line="152" pos:column="39">REPLAY_REVERT<pos:position pos:line="152" pos:column="52"/></name></expr>
		      ?<pos:position pos:line="153" pos:column="24"/></condition><then pos:line="153" pos:column="24"> <expr><call><name pos:line="153" pos:column="25">_<pos:position pos:line="153" pos:column="26"/></name><argument_list pos:line="153" pos:column="26">(<argument><expr><literal type="string" pos:line="153" pos:column="27">"could not revert %s... %s"<pos:position pos:line="153" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="55"/></argument_list></call></expr>
		      <pos:position pos:line="154" pos:column="9"/></then><else pos:line="154" pos:column="23">: <expr><call><name pos:line="154" pos:column="25">_<pos:position pos:line="154" pos:column="26"/></name><argument_list pos:line="154" pos:column="26">(<argument><expr><literal type="string" pos:line="154" pos:column="27">"could not apply %s... %s"<pos:position pos:line="154" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="54"/></argument_list></call></expr></else></ternary></expr></argument>,
		      <argument><expr><call><name pos:line="155" pos:column="23">find_unique_abbrev<pos:position pos:line="155" pos:column="41"/></name><argument_list pos:line="155" pos:column="41">(<argument><expr><name><name pos:line="155" pos:column="42">commit<pos:position pos:line="155" pos:column="48"/></name><operator pos:line="155" pos:column="48">-&gt;<pos:position pos:line="155" pos:column="53"/></operator><name pos:line="155" pos:column="50">object<pos:position pos:line="155" pos:column="56"/></name><operator pos:line="155" pos:column="56">.<pos:position pos:line="155" pos:column="57"/></operator><name pos:line="155" pos:column="57">sha1<pos:position pos:line="155" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="63">DEFAULT_ABBREV<pos:position pos:line="155" pos:column="77"/></name></expr></argument>)<pos:position pos:line="155" pos:column="78"/></argument_list></call></expr></argument>,
		      <argument><expr><name><name pos:line="156" pos:column="23">msg<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">.<pos:position pos:line="156" pos:column="27"/></operator><name pos:line="156" pos:column="27">subject<pos:position pos:line="156" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="157" pos:column="17">print_advice<pos:position pos:line="157" pos:column="29"/></name><argument_list pos:line="157" pos:column="29">(<argument><expr><name pos:line="157" pos:column="30">res<pos:position pos:line="157" pos:column="33"/></name> <operator pos:line="157" pos:column="34">==<pos:position pos:line="157" pos:column="36"/></operator> <literal type="number" pos:line="157" pos:column="37">1<pos:position pos:line="157" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="40">opts<pos:position pos:line="157" pos:column="44"/></name></expr></argument>)<pos:position pos:line="157" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="158" pos:column="17">rerere<pos:position pos:line="158" pos:column="23"/></name><argument_list pos:line="158" pos:column="23">(<argument><expr><name><name pos:line="158" pos:column="24">opts<pos:position pos:line="158" pos:column="28"/></name><operator pos:line="158" pos:column="28">-&gt;<pos:position pos:line="158" pos:column="33"/></operator><name pos:line="158" pos:column="30">allow_rerere_auto<pos:position pos:line="158" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="49"/></expr_stmt>
		<goto pos:line="159" pos:column="17">goto <name pos:line="159" pos:column="22">leave<pos:position pos:line="159" pos:column="27"/></name>;<pos:position pos:line="159" pos:column="28"/></goto>
	}<pos:position pos:line="160" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="162" pos:column="9">allow<pos:position pos:line="162" pos:column="14"/></name> <operator pos:line="162" pos:column="15">=<pos:position pos:line="162" pos:column="16"/></operator> <call><name pos:line="162" pos:column="17">allow_empty<pos:position pos:line="162" pos:column="28"/></name><argument_list pos:line="162" pos:column="28">(<argument><expr><name pos:line="162" pos:column="29">opts<pos:position pos:line="162" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="35">commit<pos:position pos:line="162" pos:column="41"/></name></expr></argument>)<pos:position pos:line="162" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="43"/></expr_stmt>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name pos:line="163" pos:column="13">allow<pos:position pos:line="163" pos:column="18"/></name> <operator pos:line="163" pos:column="19">&lt;<pos:position pos:line="163" pos:column="23"/></operator> <literal type="number" pos:line="163" pos:column="21">0<pos:position pos:line="163" pos:column="22"/></literal></expr>)<pos:position pos:line="163" pos:column="23"/></condition><then pos:line="163" pos:column="23"> <block pos:line="163" pos:column="24">{
		<expr_stmt><expr><name pos:line="164" pos:column="17">res<pos:position pos:line="164" pos:column="20"/></name> <operator pos:line="164" pos:column="21">=<pos:position pos:line="164" pos:column="22"/></operator> <name pos:line="164" pos:column="23">allow<pos:position pos:line="164" pos:column="28"/></name></expr>;<pos:position pos:line="164" pos:column="29"/></expr_stmt>
		<goto pos:line="165" pos:column="17">goto <name pos:line="165" pos:column="22">leave<pos:position pos:line="165" pos:column="27"/></name>;<pos:position pos:line="165" pos:column="28"/></goto>
	}<pos:position pos:line="166" pos:column="10"/></block></then></if>
	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><operator pos:line="167" pos:column="13">!<pos:position pos:line="167" pos:column="14"/></operator><name><name pos:line="167" pos:column="14">opts<pos:position pos:line="167" pos:column="18"/></name><operator pos:line="167" pos:column="18">-&gt;<pos:position pos:line="167" pos:column="23"/></operator><name pos:line="167" pos:column="20">no_commit<pos:position pos:line="167" pos:column="29"/></name></name></expr>)<pos:position pos:line="167" pos:column="30"/></condition><then pos:line="167" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="168" pos:column="17">res<pos:position pos:line="168" pos:column="20"/></name> <operator pos:line="168" pos:column="21">=<pos:position pos:line="168" pos:column="22"/></operator> <call><name pos:line="168" pos:column="23">run_git_commit<pos:position pos:line="168" pos:column="37"/></name><argument_list pos:line="168" pos:column="37">(<argument><expr><name pos:line="168" pos:column="38">defmsg<pos:position pos:line="168" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="46">opts<pos:position pos:line="168" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="52">allow<pos:position pos:line="168" pos:column="57"/></name></expr></argument>)<pos:position pos:line="168" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="59"/></expr_stmt></block></then></if>

<label><name pos:line="170" pos:column="1">leave<pos:position pos:line="170" pos:column="6"/></name>:<pos:position pos:line="170" pos:column="7"/></label>
	<expr_stmt><expr><call><name pos:line="171" pos:column="9">free_message<pos:position pos:line="171" pos:column="21"/></name><argument_list pos:line="171" pos:column="21">(<argument><expr><name pos:line="171" pos:column="22">commit<pos:position pos:line="171" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="171" pos:column="30">&amp;<pos:position pos:line="171" pos:column="35"/></operator><name pos:line="171" pos:column="31">msg<pos:position pos:line="171" pos:column="34"/></name></expr></argument>)<pos:position pos:line="171" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="172" pos:column="9">free<pos:position pos:line="172" pos:column="13"/></name><argument_list pos:line="172" pos:column="13">(<argument><expr><name pos:line="172" pos:column="14">defmsg<pos:position pos:line="172" pos:column="20"/></name></expr></argument>)<pos:position pos:line="172" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="22"/></expr_stmt>

	<return pos:line="174" pos:column="9">return <expr><name pos:line="174" pos:column="16">res<pos:position pos:line="174" pos:column="19"/></name></expr>;<pos:position pos:line="174" pos:column="20"/></return>
}<pos:position pos:line="175" pos:column="2"/></block></function></unit>

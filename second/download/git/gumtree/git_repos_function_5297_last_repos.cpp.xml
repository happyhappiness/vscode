<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5297_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">try_difference<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">arg<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">dotdot<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_id<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">oid<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object_id<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">end<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">next<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">this<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">symmetric<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><specifier pos:line="9" pos:column="16">const<pos:position pos:line="9" pos:column="21"/></specifier> <name pos:line="9" pos:column="22">char<pos:position pos:line="9" pos:column="26"/></name></type> <name><name pos:line="9" pos:column="27">head_by_default<pos:position pos:line="9" pos:column="42"/></name><index pos:line="9" pos:column="42">[]<pos:position pos:line="9" pos:column="44"/></index></name> <init pos:line="9" pos:column="45">= <expr><literal type="string" pos:line="9" pos:column="47">"HEAD"<pos:position pos:line="9" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">dotdot<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">strstr<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">arg<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="36">".."<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">next<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">dotdot<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">+<pos:position pos:line="13" pos:column="24"/></operator> <literal type="number" pos:line="13" pos:column="25">2<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">this<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">arg<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">symmetric<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator><operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">next<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">==<pos:position pos:line="15" pos:column="30"/></operator> <literal type="char" pos:line="15" pos:column="31">'.'<pos:position pos:line="15" pos:column="34"/></literal><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">dotdot<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">next<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">+=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">symmetric<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">next<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">next<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">head_by_default<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">dotdot<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">==<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">arg<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">this<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">head_by_default<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">this<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">head_by_default<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">&amp;&amp;<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="40">next<pos:position pos:line="25" pos:column="44"/></name> <operator pos:line="25" pos:column="45">==<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="48">head_by_default<pos:position pos:line="25" pos:column="63"/></name> <operator pos:line="25" pos:column="64">&amp;&amp;<pos:position pos:line="25" pos:column="74"/></operator>
	    <operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">symmetric<pos:position pos:line="26" pos:column="23"/></name></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
		<comment type="block" pos:line="27" pos:column="17">/*
		 * Just ".."?  That is not a range but the
		 * pathspec for the parent directory.
		 */</comment>
		<expr_stmt><expr><operator pos:line="31" pos:column="17">*<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">dotdot<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <literal type="char" pos:line="31" pos:column="27">'.'<pos:position pos:line="31" pos:column="30"/></literal></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">get_sha1_committish<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">this<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="40">oid<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">.<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="44">hash<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call> <operator pos:line="35" pos:column="50">&amp;&amp;<pos:position pos:line="35" pos:column="60"/></operator> <operator pos:line="35" pos:column="53">!<pos:position pos:line="35" pos:column="54"/></operator><call><name pos:line="35" pos:column="54">get_sha1_committish<pos:position pos:line="35" pos:column="73"/></name><argument_list pos:line="35" pos:column="73">(<argument><expr><name pos:line="35" pos:column="74">next<pos:position pos:line="35" pos:column="78"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="80">end<pos:position pos:line="35" pos:column="83"/></name><operator pos:line="35" pos:column="83">.<pos:position pos:line="35" pos:column="84"/></operator><name pos:line="35" pos:column="84">hash<pos:position pos:line="35" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="90"/></condition><then pos:line="35" pos:column="90"> <block pos:line="35" pos:column="91">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">show_rev<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">NORMAL<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="34">&amp;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="35">end<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">next<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">show_rev<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><ternary><condition><expr><name pos:line="37" pos:column="26">symmetric<pos:position pos:line="37" pos:column="35"/></name></expr> ?<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37"> <expr><name pos:line="37" pos:column="38">NORMAL<pos:position pos:line="37" pos:column="44"/></name></expr> <pos:position pos:line="37" pos:column="45"/></then><else pos:line="37" pos:column="45">: <expr><name pos:line="37" pos:column="47">REVERSED<pos:position pos:line="37" pos:column="55"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="37" pos:column="57">&amp;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="58">oid<pos:position pos:line="37" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="63">this<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">symmetric<pos:position pos:line="38" pos:column="30"/></name></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31"> <block pos:line="38" pos:column="32">{
			<decl_stmt><decl><type><name><name pos:line="39" pos:column="25">struct<pos:position pos:line="39" pos:column="31"/></name> <name pos:line="39" pos:column="32">commit_list<pos:position pos:line="39" pos:column="43"/></name></name> <modifier pos:line="39" pos:column="44">*<pos:position pos:line="39" pos:column="45"/></modifier></type><name pos:line="39" pos:column="45">exclude<pos:position pos:line="39" pos:column="52"/></name></decl>;<pos:position pos:line="39" pos:column="53"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="40" pos:column="25">struct<pos:position pos:line="40" pos:column="31"/></name> <name pos:line="40" pos:column="32">commit<pos:position pos:line="40" pos:column="38"/></name></name> <modifier pos:line="40" pos:column="39">*<pos:position pos:line="40" pos:column="40"/></modifier></type><name pos:line="40" pos:column="40">a<pos:position pos:line="40" pos:column="41"/></name></decl>, <modifier pos:line="40" pos:column="43">*<pos:position pos:line="40" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="40" pos:column="44">b<pos:position pos:line="40" pos:column="45"/></name></decl>;<pos:position pos:line="40" pos:column="46"/></decl_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">a<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <call><name pos:line="41" pos:column="29">lookup_commit_reference<pos:position pos:line="41" pos:column="52"/></name><argument_list pos:line="41" pos:column="52">(<argument><expr><operator pos:line="41" pos:column="53">&amp;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="54">oid<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">b<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <call><name pos:line="42" pos:column="29">lookup_commit_reference<pos:position pos:line="42" pos:column="52"/></name><argument_list pos:line="42" pos:column="52">(<argument><expr><operator pos:line="42" pos:column="53">&amp;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="54">end<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">exclude<pos:position pos:line="43" pos:column="32"/></name> <operator pos:line="43" pos:column="33">=<pos:position pos:line="43" pos:column="34"/></operator> <call><name pos:line="43" pos:column="35">get_merge_bases<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><name pos:line="43" pos:column="51">a<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">b<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
			<while pos:line="44" pos:column="25">while <condition pos:line="44" pos:column="31">(<expr><name pos:line="44" pos:column="32">exclude<pos:position pos:line="44" pos:column="39"/></name></expr>)<pos:position pos:line="44" pos:column="40"/></condition> <block pos:line="44" pos:column="41">{
				<decl_stmt><decl><type><name><name pos:line="45" pos:column="33">struct<pos:position pos:line="45" pos:column="39"/></name> <name pos:line="45" pos:column="40">commit<pos:position pos:line="45" pos:column="46"/></name></name> <modifier pos:line="45" pos:column="47">*<pos:position pos:line="45" pos:column="48"/></modifier></type><name pos:line="45" pos:column="48">commit<pos:position pos:line="45" pos:column="54"/></name> <init pos:line="45" pos:column="55">= <expr><call><name pos:line="45" pos:column="57">pop_commit<pos:position pos:line="45" pos:column="67"/></name><argument_list pos:line="45" pos:column="67">(<argument><expr><operator pos:line="45" pos:column="68">&amp;<pos:position pos:line="45" pos:column="73"/></operator><name pos:line="45" pos:column="69">exclude<pos:position pos:line="45" pos:column="76"/></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="78"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="46" pos:column="33">show_rev<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><name pos:line="46" pos:column="42">REVERSED<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="52">&amp;<pos:position pos:line="46" pos:column="57"/></operator><name><name pos:line="46" pos:column="53">commit<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">-&gt;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="61">object<pos:position pos:line="46" pos:column="67"/></name><operator pos:line="46" pos:column="67">.<pos:position pos:line="46" pos:column="68"/></operator><name pos:line="46" pos:column="68">oid<pos:position pos:line="46" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="73">NULL<pos:position pos:line="46" pos:column="77"/></name></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="79"/></expr_stmt>
			}<pos:position pos:line="47" pos:column="26"/></block></while>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">dotdot<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <literal type="char" pos:line="49" pos:column="27">'.'<pos:position pos:line="49" pos:column="30"/></literal></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><literal type="number" pos:line="50" pos:column="24">1<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">dotdot<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <literal type="char" pos:line="52" pos:column="19">'.'<pos:position pos:line="52" pos:column="22"/></literal></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2621_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_alternates_response<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">void<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">callback_data<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">alternates_request<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">alt_req<pos:position pos:line="3" pos:column="43"/></name> <init pos:line="3" pos:column="44">=
		<expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator>struct <name pos:line="4" pos:column="25">alternates_request<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="46">callback_data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">walker<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">walker<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name><name pos:line="5" pos:column="33">alt_req<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">walker<pos:position pos:line="5" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">walker_data<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">cdata<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name><name pos:line="6" pos:column="37">walker<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">data<pos:position pos:line="6" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">active_request_slot<pos:position pos:line="7" pos:column="35"/></name></name> <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier></type><name pos:line="7" pos:column="37">slot<pos:position pos:line="7" pos:column="41"/></name> <init pos:line="7" pos:column="42">= <expr><name><name pos:line="7" pos:column="44">alt_req<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">slot<pos:position pos:line="7" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">alt_base<pos:position pos:line="8" pos:column="24"/></name></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">tail<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><name><name pos:line="8" pos:column="33">cdata<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">alt<pos:position pos:line="8" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">base<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name><name pos:line="9" pos:column="28">alt_req<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">base<pos:position pos:line="9" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">null_byte<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><literal type="char" pos:line="10" pos:column="32">'\0'<pos:position pos:line="10" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">data<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">alt_req<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">http_specific<pos:position pos:line="14" pos:column="35"/></name></name></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">slot<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">curl_result<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">!=<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="42">CURLE_OK<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">||<pos:position pos:line="15" pos:column="53"/></operator>
		    <operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">alt_req<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">buffer<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">len<pos:position pos:line="16" pos:column="42"/></name></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{

			<comment type="block" pos:line="18" pos:column="25">/* Try reusing the slot to get non-http alternates */</comment>
			<expr_stmt><expr><name><name pos:line="19" pos:column="25">alt_req<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">http_specific<pos:position pos:line="19" pos:column="47"/></name></name> <operator pos:line="19" pos:column="48">=<pos:position pos:line="19" pos:column="49"/></operator> <literal type="number" pos:line="19" pos:column="50">0<pos:position pos:line="19" pos:column="51"/></literal></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">strbuf_reset<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name><name pos:line="20" pos:column="38">alt_req<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">url<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">strbuf_addf<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name><name pos:line="21" pos:column="37">alt_req<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">url<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="51">"%s/objects/info/alternates"<pos:position pos:line="21" pos:column="79"/></literal></expr></argument>,
				    <argument><expr><name pos:line="22" pos:column="37">base<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">curl_easy_setopt<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><expr><name><name pos:line="23" pos:column="42">slot<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">curl<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">CURLOPT_URL<pos:position pos:line="23" pos:column="65"/></name></expr></argument>,
					 <argument><expr><name><name pos:line="24" pos:column="42">alt_req<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">-&gt;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="51">url<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">buf<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">active_requests<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">++<pos:position pos:line="25" pos:column="42"/></operator></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">slot<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">in_use<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="40">1<pos:position pos:line="26" pos:column="41"/></literal></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><name><name pos:line="27" pos:column="29">slot<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">finished<pos:position pos:line="27" pos:column="43"/></name></name> <operator pos:line="27" pos:column="44">!=<pos:position pos:line="27" pos:column="46"/></operator> <name pos:line="27" pos:column="47">NULL<pos:position pos:line="27" pos:column="51"/></name></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="28" pos:column="33">(<pos:position pos:line="28" pos:column="34"/></operator><operator pos:line="28" pos:column="34">*<pos:position pos:line="28" pos:column="35"/></operator><name><name pos:line="28" pos:column="35">slot<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">finished<pos:position pos:line="28" pos:column="49"/></name></name><operator pos:line="28" pos:column="49">)<pos:position pos:line="28" pos:column="50"/></operator> <operator pos:line="28" pos:column="51">=<pos:position pos:line="28" pos:column="52"/></operator> <literal type="number" pos:line="28" pos:column="53">0<pos:position pos:line="28" pos:column="54"/></literal></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt></block></then></if>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><call><name pos:line="29" pos:column="30">start_active_slot<pos:position pos:line="29" pos:column="47"/></name><argument_list pos:line="29" pos:column="47">(<argument><expr><name pos:line="29" pos:column="48">slot<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54"> <block pos:line="29" pos:column="55">{
				<expr_stmt><expr><name><name pos:line="30" pos:column="33">cdata<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">got_alternates<pos:position pos:line="30" pos:column="54"/></name></name> <operator pos:line="30" pos:column="55">=<pos:position pos:line="30" pos:column="56"/></operator> <operator pos:line="30" pos:column="57">-<pos:position pos:line="30" pos:column="58"/></operator><literal type="number" pos:line="30" pos:column="58">1<pos:position pos:line="30" pos:column="59"/></literal></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="31" pos:column="33">slot<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">in_use<pos:position pos:line="31" pos:column="45"/></name></name> <operator pos:line="31" pos:column="46">=<pos:position pos:line="31" pos:column="47"/></operator> <literal type="number" pos:line="31" pos:column="48">0<pos:position pos:line="31" pos:column="49"/></literal></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
				<if pos:line="32" pos:column="33">if <condition pos:line="32" pos:column="36">(<expr><name><name pos:line="32" pos:column="37">slot<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">finished<pos:position pos:line="32" pos:column="51"/></name></name> <operator pos:line="32" pos:column="52">!=<pos:position pos:line="32" pos:column="54"/></operator> <name pos:line="32" pos:column="55">NULL<pos:position pos:line="32" pos:column="59"/></name></expr>)<pos:position pos:line="32" pos:column="60"/></condition><then pos:line="32" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="33" pos:column="41">(<pos:position pos:line="33" pos:column="42"/></operator><operator pos:line="33" pos:column="42">*<pos:position pos:line="33" pos:column="43"/></operator><name><name pos:line="33" pos:column="43">slot<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">finished<pos:position pos:line="33" pos:column="57"/></name></name><operator pos:line="33" pos:column="57">)<pos:position pos:line="33" pos:column="58"/></operator> <operator pos:line="33" pos:column="59">=<pos:position pos:line="33" pos:column="60"/></operator> <literal type="number" pos:line="33" pos:column="61">1<pos:position pos:line="33" pos:column="62"/></literal></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt></block></then></if>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
			<return pos:line="35" pos:column="25">return;<pos:position pos:line="35" pos:column="32"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></then> <elseif pos:line="37" pos:column="11">else <if pos:line="37" pos:column="16">if <condition pos:line="37" pos:column="19">(<expr><name><name pos:line="37" pos:column="20">slot<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">-&gt;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="26">curl_result<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">!=<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">CURLE_OK<pos:position pos:line="37" pos:column="49"/></name></expr>)<pos:position pos:line="37" pos:column="50"/></condition><then pos:line="37" pos:column="50"> <block pos:line="37" pos:column="51">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><call><name pos:line="38" pos:column="22">missing_target<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">slot<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43"> <block pos:line="38" pos:column="44">{
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">cdata<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">got_alternates<pos:position pos:line="39" pos:column="46"/></name></name> <operator pos:line="39" pos:column="47">=<pos:position pos:line="39" pos:column="48"/></operator> <operator pos:line="39" pos:column="49">-<pos:position pos:line="39" pos:column="50"/></operator><literal type="number" pos:line="39" pos:column="50">1<pos:position pos:line="39" pos:column="51"/></literal></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
			<return pos:line="40" pos:column="25">return;<pos:position pos:line="40" pos:column="32"/></return>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">fwrite_buffer<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><operator pos:line="44" pos:column="23">(<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">char<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">*<pos:position pos:line="44" pos:column="30"/></operator><operator pos:line="44" pos:column="30">)<pos:position pos:line="44" pos:column="31"/></operator><operator pos:line="44" pos:column="31">&amp;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="32">null_byte<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="43">1<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="46">1<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="49">alt_req<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">-&gt;<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="58">buffer<pos:position pos:line="44" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">alt_req<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">buffer<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">len<pos:position pos:line="45" pos:column="29"/></name></name><operator pos:line="45" pos:column="29">--<pos:position pos:line="45" pos:column="31"/></operator></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="46" pos:column="9">data<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name><name pos:line="46" pos:column="16">alt_req<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">buffer<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">-&gt;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="33">buf<pos:position pos:line="46" pos:column="36"/></name></name></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>

	<while pos:line="48" pos:column="9">while <condition pos:line="48" pos:column="15">(<expr><name pos:line="48" pos:column="16">i<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">&lt;<pos:position pos:line="48" pos:column="22"/></operator> <name><name pos:line="48" pos:column="20">alt_req<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">buffer<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">len<pos:position pos:line="48" pos:column="40"/></name></name></expr>)<pos:position pos:line="48" pos:column="41"/></condition> <block pos:line="48" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">int<pos:position pos:line="49" pos:column="20"/></name></type> <name pos:line="49" pos:column="21">posn<pos:position pos:line="49" pos:column="25"/></name> <init pos:line="49" pos:column="26">= <expr><name pos:line="49" pos:column="28">i<pos:position pos:line="49" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="30"/></decl_stmt>
		<while pos:line="50" pos:column="17">while <condition pos:line="50" pos:column="23">(<expr><name pos:line="50" pos:column="24">posn<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">&lt;<pos:position pos:line="50" pos:column="33"/></operator> <name><name pos:line="50" pos:column="31">alt_req<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">buffer<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">len<pos:position pos:line="50" pos:column="51"/></name></name> <operator pos:line="50" pos:column="52">&amp;&amp;<pos:position pos:line="50" pos:column="62"/></operator> <name><name pos:line="50" pos:column="55">data<pos:position pos:line="50" pos:column="59"/></name><index pos:line="50" pos:column="59">[<expr><name pos:line="50" pos:column="60">posn<pos:position pos:line="50" pos:column="64"/></name></expr>]<pos:position pos:line="50" pos:column="65"/></index></name> <operator pos:line="50" pos:column="66">!=<pos:position pos:line="50" pos:column="68"/></operator> <literal type="char" pos:line="50" pos:column="69">'\n'<pos:position pos:line="50" pos:column="73"/></literal></expr>)<pos:position pos:line="50" pos:column="74"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="25">posn<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">++<pos:position pos:line="51" pos:column="31"/></operator></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt></block></while>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name><name pos:line="52" pos:column="21">data<pos:position pos:line="52" pos:column="25"/></name><index pos:line="52" pos:column="25">[<expr><name pos:line="52" pos:column="26">posn<pos:position pos:line="52" pos:column="30"/></name></expr>]<pos:position pos:line="52" pos:column="31"/></index></name> <operator pos:line="52" pos:column="32">==<pos:position pos:line="52" pos:column="34"/></operator> <literal type="char" pos:line="52" pos:column="35">'\n'<pos:position pos:line="52" pos:column="39"/></literal></expr>)<pos:position pos:line="52" pos:column="40"/></condition><then pos:line="52" pos:column="40"> <block pos:line="52" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="53" pos:column="25">int<pos:position pos:line="53" pos:column="28"/></name></type> <name pos:line="53" pos:column="29">okay<pos:position pos:line="53" pos:column="33"/></name> <init pos:line="53" pos:column="34">= <expr><literal type="number" pos:line="53" pos:column="36">0<pos:position pos:line="53" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="53" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="54" pos:column="25">int<pos:position pos:line="54" pos:column="28"/></name></type> <name pos:line="54" pos:column="29">serverlen<pos:position pos:line="54" pos:column="38"/></name> <init pos:line="54" pos:column="39">= <expr><literal type="number" pos:line="54" pos:column="41">0<pos:position pos:line="54" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="54" pos:column="43"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="55" pos:column="25">struct<pos:position pos:line="55" pos:column="31"/></name> <name pos:line="55" pos:column="32">alt_base<pos:position pos:line="55" pos:column="40"/></name></name> <modifier pos:line="55" pos:column="41">*<pos:position pos:line="55" pos:column="42"/></modifier></type><name pos:line="55" pos:column="42">newalt<pos:position pos:line="55" pos:column="48"/></name></decl>;<pos:position pos:line="55" pos:column="49"/></decl_stmt>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name><name pos:line="56" pos:column="29">data<pos:position pos:line="56" pos:column="33"/></name><index pos:line="56" pos:column="33">[<expr><name pos:line="56" pos:column="34">i<pos:position pos:line="56" pos:column="35"/></name></expr>]<pos:position pos:line="56" pos:column="36"/></index></name> <operator pos:line="56" pos:column="37">==<pos:position pos:line="56" pos:column="39"/></operator> <literal type="char" pos:line="56" pos:column="40">'/'<pos:position pos:line="56" pos:column="43"/></literal></expr>)<pos:position pos:line="56" pos:column="44"/></condition><then pos:line="56" pos:column="44"> <block pos:line="56" pos:column="45">{
				<comment type="block" pos:line="57" pos:column="33">/*
				 * This counts
				 * http://git.host/pub/scm/linux.git/
				 * -----------here^
				 * so memcpy(dst, base, serverlen) will
				 * copy up to "...git.host".
				 */</comment>
				<decl_stmt><decl><type><specifier pos:line="64" pos:column="33">const<pos:position pos:line="64" pos:column="38"/></specifier> <name pos:line="64" pos:column="39">char<pos:position pos:line="64" pos:column="43"/></name> <modifier pos:line="64" pos:column="44">*<pos:position pos:line="64" pos:column="45"/></modifier></type><name pos:line="64" pos:column="45">colon_ss<pos:position pos:line="64" pos:column="53"/></name> <init pos:line="64" pos:column="54">= <expr><call><name pos:line="64" pos:column="56">strstr<pos:position pos:line="64" pos:column="62"/></name><argument_list pos:line="64" pos:column="62">(<argument><expr><name pos:line="64" pos:column="63">base<pos:position pos:line="64" pos:column="67"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="64" pos:column="68">"://"<pos:position pos:line="64" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="75"/></decl_stmt>
				<if pos:line="65" pos:column="33">if <condition pos:line="65" pos:column="36">(<expr><name pos:line="65" pos:column="37">colon_ss<pos:position pos:line="65" pos:column="45"/></name></expr>)<pos:position pos:line="65" pos:column="46"/></condition><then pos:line="65" pos:column="46"> <block pos:line="65" pos:column="47">{
					<expr_stmt><expr><name pos:line="66" pos:column="41">serverlen<pos:position pos:line="66" pos:column="50"/></name> <operator pos:line="66" pos:column="51">=<pos:position pos:line="66" pos:column="52"/></operator> <operator pos:line="66" pos:column="53">(<pos:position pos:line="66" pos:column="54"/></operator><call><name pos:line="66" pos:column="54">strchr<pos:position pos:line="66" pos:column="60"/></name><argument_list pos:line="66" pos:column="60">(<argument><expr><name pos:line="66" pos:column="61">colon_ss<pos:position pos:line="66" pos:column="69"/></name> <operator pos:line="66" pos:column="70">+<pos:position pos:line="66" pos:column="71"/></operator> <literal type="number" pos:line="66" pos:column="72">3<pos:position pos:line="66" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="66" pos:column="75">'/'<pos:position pos:line="66" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call>
						     <operator pos:line="67" pos:column="54">-<pos:position pos:line="67" pos:column="55"/></operator> <name pos:line="67" pos:column="56">base<pos:position pos:line="67" pos:column="60"/></name><operator pos:line="67" pos:column="60">)<pos:position pos:line="67" pos:column="61"/></operator></expr>;<pos:position pos:line="67" pos:column="62"/></expr_stmt>
					<expr_stmt><expr><name pos:line="68" pos:column="41">okay<pos:position pos:line="68" pos:column="45"/></name> <operator pos:line="68" pos:column="46">=<pos:position pos:line="68" pos:column="47"/></operator> <literal type="number" pos:line="68" pos:column="48">1<pos:position pos:line="68" pos:column="49"/></literal></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt>
				}<pos:position pos:line="69" pos:column="34"/></block></then></if>
			}<pos:position pos:line="70" pos:column="26"/></block></then> <elseif pos:line="70" pos:column="27">else <if pos:line="70" pos:column="32">if <condition pos:line="70" pos:column="35">(<expr><operator pos:line="70" pos:column="36">!<pos:position pos:line="70" pos:column="37"/></operator><call><name pos:line="70" pos:column="37">memcmp<pos:position pos:line="70" pos:column="43"/></name><argument_list pos:line="70" pos:column="43">(<argument><expr><name pos:line="70" pos:column="44">data<pos:position pos:line="70" pos:column="48"/></name> <operator pos:line="70" pos:column="49">+<pos:position pos:line="70" pos:column="50"/></operator> <name pos:line="70" pos:column="51">i<pos:position pos:line="70" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="54">"../"<pos:position pos:line="70" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="61">3<pos:position pos:line="70" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="64"/></condition><then pos:line="70" pos:column="64"> <block pos:line="70" pos:column="65">{
				<comment type="block" pos:line="71" pos:column="33">/*
				 * Relative URL; chop the corresponding
				 * number of subpath from base (and ../
				 * from data), and concatenate the result.
				 *
				 * The code first drops ../ from data, and
				 * then drops one ../ from data and one path
				 * from base.  IOW, one extra ../ is dropped
				 * from data than path is dropped from base.
				 *
				 * This is not wrong.  The alternate in
				 *     http://git.host/pub/scm/linux.git/
				 * to borrow from
				 *     http://git.host/pub/scm/linus.git/
				 * is ../../linus.git/objects/.  You need
				 * two ../../ to borrow from your direct
				 * neighbour.
				 */</comment>
				<expr_stmt><expr><name pos:line="89" pos:column="33">i<pos:position pos:line="89" pos:column="34"/></name> <operator pos:line="89" pos:column="35">+=<pos:position pos:line="89" pos:column="37"/></operator> <literal type="number" pos:line="89" pos:column="38">3<pos:position pos:line="89" pos:column="39"/></literal></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
				<expr_stmt><expr><name pos:line="90" pos:column="33">serverlen<pos:position pos:line="90" pos:column="42"/></name> <operator pos:line="90" pos:column="43">=<pos:position pos:line="90" pos:column="44"/></operator> <call><name pos:line="90" pos:column="45">strlen<pos:position pos:line="90" pos:column="51"/></name><argument_list pos:line="90" pos:column="51">(<argument><expr><name pos:line="90" pos:column="52">base<pos:position pos:line="90" pos:column="56"/></name></expr></argument>)<pos:position pos:line="90" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="58"/></expr_stmt>
				<while pos:line="91" pos:column="33">while <condition pos:line="91" pos:column="39">(<expr><name pos:line="91" pos:column="40">i<pos:position pos:line="91" pos:column="41"/></name> <operator pos:line="91" pos:column="42">+<pos:position pos:line="91" pos:column="43"/></operator> <literal type="number" pos:line="91" pos:column="44">2<pos:position pos:line="91" pos:column="45"/></literal> <operator pos:line="91" pos:column="46">&lt;<pos:position pos:line="91" pos:column="50"/></operator> <name pos:line="91" pos:column="48">posn<pos:position pos:line="91" pos:column="52"/></name> <operator pos:line="91" pos:column="53">&amp;&amp;<pos:position pos:line="91" pos:column="63"/></operator>
				       <operator pos:line="92" pos:column="40">!<pos:position pos:line="92" pos:column="41"/></operator><call><name pos:line="92" pos:column="41">memcmp<pos:position pos:line="92" pos:column="47"/></name><argument_list pos:line="92" pos:column="47">(<argument><expr><name pos:line="92" pos:column="48">data<pos:position pos:line="92" pos:column="52"/></name> <operator pos:line="92" pos:column="53">+<pos:position pos:line="92" pos:column="54"/></operator> <name pos:line="92" pos:column="55">i<pos:position pos:line="92" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="58">"../"<pos:position pos:line="92" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="65">3<pos:position pos:line="92" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="68"/></condition> <block pos:line="92" pos:column="69">{
					<do pos:line="93" pos:column="41">do <block pos:line="93" pos:column="44">{
						<expr_stmt><expr><name pos:line="94" pos:column="49">serverlen<pos:position pos:line="94" pos:column="58"/></name><operator pos:line="94" pos:column="58">--<pos:position pos:line="94" pos:column="60"/></operator></expr>;<pos:position pos:line="94" pos:column="61"/></expr_stmt>
					}<pos:position pos:line="95" pos:column="42"/></block> while <condition pos:line="95" pos:column="49">(<expr><name pos:line="95" pos:column="50">serverlen<pos:position pos:line="95" pos:column="59"/></name> <operator pos:line="95" pos:column="60">&amp;&amp;<pos:position pos:line="95" pos:column="70"/></operator>
						 <name><name pos:line="96" pos:column="50">base<pos:position pos:line="96" pos:column="54"/></name><index pos:line="96" pos:column="54">[<expr><name pos:line="96" pos:column="55">serverlen<pos:position pos:line="96" pos:column="64"/></name> <operator pos:line="96" pos:column="65">-<pos:position pos:line="96" pos:column="66"/></operator> <literal type="number" pos:line="96" pos:column="67">1<pos:position pos:line="96" pos:column="68"/></literal></expr>]<pos:position pos:line="96" pos:column="69"/></index></name> <operator pos:line="96" pos:column="70">!=<pos:position pos:line="96" pos:column="72"/></operator> <literal type="char" pos:line="96" pos:column="73">'/'<pos:position pos:line="96" pos:column="76"/></literal></expr>)<pos:position pos:line="96" pos:column="77"/></condition>;<pos:position pos:line="96" pos:column="78"/></do>
					<expr_stmt><expr><name pos:line="97" pos:column="41">i<pos:position pos:line="97" pos:column="42"/></name> <operator pos:line="97" pos:column="43">+=<pos:position pos:line="97" pos:column="45"/></operator> <literal type="number" pos:line="97" pos:column="46">3<pos:position pos:line="97" pos:column="47"/></literal></expr>;<pos:position pos:line="97" pos:column="48"/></expr_stmt>
				}<pos:position pos:line="98" pos:column="34"/></block></while>
				<comment type="block" pos:line="99" pos:column="33">/* If the server got removed, give up. */</comment>
				<expr_stmt><expr><name pos:line="100" pos:column="33">okay<pos:position pos:line="100" pos:column="37"/></name> <operator pos:line="100" pos:column="38">=<pos:position pos:line="100" pos:column="39"/></operator> <call><name pos:line="100" pos:column="40">strchr<pos:position pos:line="100" pos:column="46"/></name><argument_list pos:line="100" pos:column="46">(<argument><expr><name pos:line="100" pos:column="47">base<pos:position pos:line="100" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="100" pos:column="53">':'<pos:position pos:line="100" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="57"/></argument_list></call> <operator pos:line="100" pos:column="58">-<pos:position pos:line="100" pos:column="59"/></operator> <name pos:line="100" pos:column="60">base<pos:position pos:line="100" pos:column="64"/></name> <operator pos:line="100" pos:column="65">+<pos:position pos:line="100" pos:column="66"/></operator> <literal type="number" pos:line="100" pos:column="67">3<pos:position pos:line="100" pos:column="68"/></literal> <operator pos:line="100" pos:column="69">&lt;<pos:position pos:line="100" pos:column="73"/></operator>
				       <name pos:line="101" pos:column="40">serverlen<pos:position pos:line="101" pos:column="49"/></name></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="102" pos:column="26"/></block></then></if></elseif> <elseif pos:line="102" pos:column="27">else <if pos:line="102" pos:column="32">if <condition pos:line="102" pos:column="35">(<expr><name><name pos:line="102" pos:column="36">alt_req<pos:position pos:line="102" pos:column="43"/></name><operator pos:line="102" pos:column="43">-&gt;<pos:position pos:line="102" pos:column="48"/></operator><name pos:line="102" pos:column="45">http_specific<pos:position pos:line="102" pos:column="58"/></name></name></expr>)<pos:position pos:line="102" pos:column="59"/></condition><then pos:line="102" pos:column="59"> <block pos:line="102" pos:column="60">{
				<decl_stmt><decl><type><name pos:line="103" pos:column="33">char<pos:position pos:line="103" pos:column="37"/></name> <modifier pos:line="103" pos:column="38">*<pos:position pos:line="103" pos:column="39"/></modifier></type><name pos:line="103" pos:column="39">colon<pos:position pos:line="103" pos:column="44"/></name> <init pos:line="103" pos:column="45">= <expr><call><name pos:line="103" pos:column="47">strchr<pos:position pos:line="103" pos:column="53"/></name><argument_list pos:line="103" pos:column="53">(<argument><expr><name pos:line="103" pos:column="54">data<pos:position pos:line="103" pos:column="58"/></name> <operator pos:line="103" pos:column="59">+<pos:position pos:line="103" pos:column="60"/></operator> <name pos:line="103" pos:column="61">i<pos:position pos:line="103" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="103" pos:column="64">':'<pos:position pos:line="103" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="103" pos:column="69"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="104" pos:column="33">char<pos:position pos:line="104" pos:column="37"/></name> <modifier pos:line="104" pos:column="38">*<pos:position pos:line="104" pos:column="39"/></modifier></type><name pos:line="104" pos:column="39">slash<pos:position pos:line="104" pos:column="44"/></name> <init pos:line="104" pos:column="45">= <expr><call><name pos:line="104" pos:column="47">strchr<pos:position pos:line="104" pos:column="53"/></name><argument_list pos:line="104" pos:column="53">(<argument><expr><name pos:line="104" pos:column="54">data<pos:position pos:line="104" pos:column="58"/></name> <operator pos:line="104" pos:column="59">+<pos:position pos:line="104" pos:column="60"/></operator> <name pos:line="104" pos:column="61">i<pos:position pos:line="104" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="104" pos:column="64">'/'<pos:position pos:line="104" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="104" pos:column="69"/></decl_stmt>
				<if pos:line="105" pos:column="33">if <condition pos:line="105" pos:column="36">(<expr><name pos:line="105" pos:column="37">colon<pos:position pos:line="105" pos:column="42"/></name> <operator pos:line="105" pos:column="43">&amp;&amp;<pos:position pos:line="105" pos:column="53"/></operator> <name pos:line="105" pos:column="46">slash<pos:position pos:line="105" pos:column="51"/></name> <operator pos:line="105" pos:column="52">&amp;&amp;<pos:position pos:line="105" pos:column="62"/></operator> <name pos:line="105" pos:column="55">colon<pos:position pos:line="105" pos:column="60"/></name> <operator pos:line="105" pos:column="61">&lt;<pos:position pos:line="105" pos:column="65"/></operator> <name pos:line="105" pos:column="63">data<pos:position pos:line="105" pos:column="67"/></name> <operator pos:line="105" pos:column="68">+<pos:position pos:line="105" pos:column="69"/></operator> <name pos:line="105" pos:column="70">posn<pos:position pos:line="105" pos:column="74"/></name> <operator pos:line="105" pos:column="75">&amp;&amp;<pos:position pos:line="105" pos:column="85"/></operator>
				    <name pos:line="106" pos:column="37">slash<pos:position pos:line="106" pos:column="42"/></name> <operator pos:line="106" pos:column="43">&lt;<pos:position pos:line="106" pos:column="47"/></operator> <name pos:line="106" pos:column="45">data<pos:position pos:line="106" pos:column="49"/></name> <operator pos:line="106" pos:column="50">+<pos:position pos:line="106" pos:column="51"/></operator> <name pos:line="106" pos:column="52">posn<pos:position pos:line="106" pos:column="56"/></name> <operator pos:line="106" pos:column="57">&amp;&amp;<pos:position pos:line="106" pos:column="67"/></operator> <name pos:line="106" pos:column="60">colon<pos:position pos:line="106" pos:column="65"/></name> <operator pos:line="106" pos:column="66">&lt;<pos:position pos:line="106" pos:column="70"/></operator> <name pos:line="106" pos:column="68">slash<pos:position pos:line="106" pos:column="73"/></name></expr>)<pos:position pos:line="106" pos:column="74"/></condition><then pos:line="106" pos:column="74"> <block pos:line="106" pos:column="75">{
					<expr_stmt><expr><name pos:line="107" pos:column="41">okay<pos:position pos:line="107" pos:column="45"/></name> <operator pos:line="107" pos:column="46">=<pos:position pos:line="107" pos:column="47"/></operator> <literal type="number" pos:line="107" pos:column="48">1<pos:position pos:line="107" pos:column="49"/></literal></expr>;<pos:position pos:line="107" pos:column="50"/></expr_stmt>
				}<pos:position pos:line="108" pos:column="34"/></block></then></if>
			}<pos:position pos:line="109" pos:column="26"/></block></then></if></elseif></if>
			<if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><name pos:line="110" pos:column="29">okay<pos:position pos:line="110" pos:column="33"/></name></expr>)<pos:position pos:line="110" pos:column="34"/></condition><then pos:line="110" pos:column="34"> <block pos:line="110" pos:column="35">{
				<decl_stmt><decl><type><name><name pos:line="111" pos:column="33">struct<pos:position pos:line="111" pos:column="39"/></name> <name pos:line="111" pos:column="40">strbuf<pos:position pos:line="111" pos:column="46"/></name></name></type> <name pos:line="111" pos:column="47">target<pos:position pos:line="111" pos:column="53"/></name> <init pos:line="111" pos:column="54">= <expr><name pos:line="111" pos:column="56">STRBUF_INIT<pos:position pos:line="111" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="111" pos:column="68"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="112" pos:column="33">strbuf_add<pos:position pos:line="112" pos:column="43"/></name><argument_list pos:line="112" pos:column="43">(<argument><expr><operator pos:line="112" pos:column="44">&amp;<pos:position pos:line="112" pos:column="49"/></operator><name pos:line="112" pos:column="45">target<pos:position pos:line="112" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="53">base<pos:position pos:line="112" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="59">serverlen<pos:position pos:line="112" pos:column="68"/></name></expr></argument>)<pos:position pos:line="112" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="113" pos:column="33">strbuf_add<pos:position pos:line="113" pos:column="43"/></name><argument_list pos:line="113" pos:column="43">(<argument><expr><operator pos:line="113" pos:column="44">&amp;<pos:position pos:line="113" pos:column="49"/></operator><name pos:line="113" pos:column="45">target<pos:position pos:line="113" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="53">data<pos:position pos:line="113" pos:column="57"/></name> <operator pos:line="113" pos:column="58">+<pos:position pos:line="113" pos:column="59"/></operator> <name pos:line="113" pos:column="60">i<pos:position pos:line="113" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="63">posn<pos:position pos:line="113" pos:column="67"/></name> <operator pos:line="113" pos:column="68">-<pos:position pos:line="113" pos:column="69"/></operator> <name pos:line="113" pos:column="70">i<pos:position pos:line="113" pos:column="71"/></name></expr></argument>)<pos:position pos:line="113" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="73"/></expr_stmt>
				<if pos:line="114" pos:column="33">if <condition pos:line="114" pos:column="36">(<expr><operator pos:line="114" pos:column="37">!<pos:position pos:line="114" pos:column="38"/></operator><call><name pos:line="114" pos:column="38">strbuf_strip_suffix<pos:position pos:line="114" pos:column="57"/></name><argument_list pos:line="114" pos:column="57">(<argument><expr><operator pos:line="114" pos:column="58">&amp;<pos:position pos:line="114" pos:column="63"/></operator><name pos:line="114" pos:column="59">target<pos:position pos:line="114" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="67">"objects"<pos:position pos:line="114" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="78"/></condition><then pos:line="114" pos:column="78"> <block pos:line="114" pos:column="79">{
					<expr_stmt><expr><call><name pos:line="115" pos:column="41">warning<pos:position pos:line="115" pos:column="48"/></name><argument_list pos:line="115" pos:column="48">(<argument><expr><literal type="string" pos:line="115" pos:column="49">"ignoring alternate that does"<pos:position pos:line="115" pos:column="79"/></literal>
						<literal type="string" pos:line="116" pos:column="49">" not end in 'objects': %s"<pos:position pos:line="116" pos:column="76"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="117" pos:column="49">target<pos:position pos:line="117" pos:column="55"/></name><operator pos:line="117" pos:column="55">.<pos:position pos:line="117" pos:column="56"/></operator><name pos:line="117" pos:column="56">buf<pos:position pos:line="117" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="61"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="118" pos:column="41">strbuf_release<pos:position pos:line="118" pos:column="55"/></name><argument_list pos:line="118" pos:column="55">(<argument><expr><operator pos:line="118" pos:column="56">&amp;<pos:position pos:line="118" pos:column="61"/></operator><name pos:line="118" pos:column="57">target<pos:position pos:line="118" pos:column="63"/></name></expr></argument>)<pos:position pos:line="118" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="65"/></expr_stmt>
				}<pos:position pos:line="119" pos:column="34"/></block></then> <elseif pos:line="119" pos:column="35">else <if pos:line="119" pos:column="40">if <condition pos:line="119" pos:column="43">(<expr><call><name pos:line="119" pos:column="44">is_alternate_allowed<pos:position pos:line="119" pos:column="64"/></name><argument_list pos:line="119" pos:column="64">(<argument><expr><name><name pos:line="119" pos:column="65">target<pos:position pos:line="119" pos:column="71"/></name><operator pos:line="119" pos:column="71">.<pos:position pos:line="119" pos:column="72"/></operator><name pos:line="119" pos:column="72">buf<pos:position pos:line="119" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="77"/></condition><then pos:line="119" pos:column="77"> <block pos:line="119" pos:column="78">{
					<expr_stmt><expr><call><name pos:line="120" pos:column="41">warning<pos:position pos:line="120" pos:column="48"/></name><argument_list pos:line="120" pos:column="48">(<argument><expr><literal type="string" pos:line="120" pos:column="49">"adding alternate object store: %s"<pos:position pos:line="120" pos:column="84"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="121" pos:column="49">target<pos:position pos:line="121" pos:column="55"/></name><operator pos:line="121" pos:column="55">.<pos:position pos:line="121" pos:column="56"/></operator><name pos:line="121" pos:column="56">buf<pos:position pos:line="121" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="61"/></expr_stmt>
					<expr_stmt><expr><name pos:line="122" pos:column="41">newalt<pos:position pos:line="122" pos:column="47"/></name> <operator pos:line="122" pos:column="48">=<pos:position pos:line="122" pos:column="49"/></operator> <call><name pos:line="122" pos:column="50">xmalloc<pos:position pos:line="122" pos:column="57"/></name><argument_list pos:line="122" pos:column="57">(<argument><expr><sizeof pos:line="122" pos:column="58">sizeof<argument_list pos:line="122" pos:column="64">(<argument><expr><operator pos:line="122" pos:column="65">*<pos:position pos:line="122" pos:column="66"/></operator><name pos:line="122" pos:column="66">newalt<pos:position pos:line="122" pos:column="72"/></name></expr></argument>)<pos:position pos:line="122" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="122" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="75"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="123" pos:column="41">newalt<pos:position pos:line="123" pos:column="47"/></name><operator pos:line="123" pos:column="47">-&gt;<pos:position pos:line="123" pos:column="52"/></operator><name pos:line="123" pos:column="49">next<pos:position pos:line="123" pos:column="53"/></name></name> <operator pos:line="123" pos:column="54">=<pos:position pos:line="123" pos:column="55"/></operator> <name pos:line="123" pos:column="56">NULL<pos:position pos:line="123" pos:column="60"/></name></expr>;<pos:position pos:line="123" pos:column="61"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="124" pos:column="41">newalt<pos:position pos:line="124" pos:column="47"/></name><operator pos:line="124" pos:column="47">-&gt;<pos:position pos:line="124" pos:column="52"/></operator><name pos:line="124" pos:column="49">base<pos:position pos:line="124" pos:column="53"/></name></name> <operator pos:line="124" pos:column="54">=<pos:position pos:line="124" pos:column="55"/></operator> <call><name pos:line="124" pos:column="56">strbuf_detach<pos:position pos:line="124" pos:column="69"/></name><argument_list pos:line="124" pos:column="69">(<argument><expr><operator pos:line="124" pos:column="70">&amp;<pos:position pos:line="124" pos:column="75"/></operator><name pos:line="124" pos:column="71">target<pos:position pos:line="124" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="79">NULL<pos:position pos:line="124" pos:column="83"/></name></expr></argument>)<pos:position pos:line="124" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="85"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="125" pos:column="41">newalt<pos:position pos:line="125" pos:column="47"/></name><operator pos:line="125" pos:column="47">-&gt;<pos:position pos:line="125" pos:column="52"/></operator><name pos:line="125" pos:column="49">got_indices<pos:position pos:line="125" pos:column="60"/></name></name> <operator pos:line="125" pos:column="61">=<pos:position pos:line="125" pos:column="62"/></operator> <literal type="number" pos:line="125" pos:column="63">0<pos:position pos:line="125" pos:column="64"/></literal></expr>;<pos:position pos:line="125" pos:column="65"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="126" pos:column="41">newalt<pos:position pos:line="126" pos:column="47"/></name><operator pos:line="126" pos:column="47">-&gt;<pos:position pos:line="126" pos:column="52"/></operator><name pos:line="126" pos:column="49">packs<pos:position pos:line="126" pos:column="54"/></name></name> <operator pos:line="126" pos:column="55">=<pos:position pos:line="126" pos:column="56"/></operator> <name pos:line="126" pos:column="57">NULL<pos:position pos:line="126" pos:column="61"/></name></expr>;<pos:position pos:line="126" pos:column="62"/></expr_stmt>

					<while pos:line="128" pos:column="41">while <condition pos:line="128" pos:column="47">(<expr><name><name pos:line="128" pos:column="48">tail<pos:position pos:line="128" pos:column="52"/></name><operator pos:line="128" pos:column="52">-&gt;<pos:position pos:line="128" pos:column="57"/></operator><name pos:line="128" pos:column="54">next<pos:position pos:line="128" pos:column="58"/></name></name> <operator pos:line="128" pos:column="59">!=<pos:position pos:line="128" pos:column="61"/></operator> <name pos:line="128" pos:column="62">NULL<pos:position pos:line="128" pos:column="66"/></name></expr>)<pos:position pos:line="128" pos:column="67"/></condition>
						<block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="49">tail<pos:position pos:line="129" pos:column="53"/></name> <operator pos:line="129" pos:column="54">=<pos:position pos:line="129" pos:column="55"/></operator> <name><name pos:line="129" pos:column="56">tail<pos:position pos:line="129" pos:column="60"/></name><operator pos:line="129" pos:column="60">-&gt;<pos:position pos:line="129" pos:column="65"/></operator><name pos:line="129" pos:column="62">next<pos:position pos:line="129" pos:column="66"/></name></name></expr>;<pos:position pos:line="129" pos:column="67"/></expr_stmt></block></while>
					<expr_stmt><expr><name><name pos:line="130" pos:column="41">tail<pos:position pos:line="130" pos:column="45"/></name><operator pos:line="130" pos:column="45">-&gt;<pos:position pos:line="130" pos:column="50"/></operator><name pos:line="130" pos:column="47">next<pos:position pos:line="130" pos:column="51"/></name></name> <operator pos:line="130" pos:column="52">=<pos:position pos:line="130" pos:column="53"/></operator> <name pos:line="130" pos:column="54">newalt<pos:position pos:line="130" pos:column="60"/></name></expr>;<pos:position pos:line="130" pos:column="61"/></expr_stmt>
				}<pos:position pos:line="131" pos:column="34"/></block></then></if></elseif> <else pos:line="131" pos:column="35">else <block pos:line="131" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="132" pos:column="41">strbuf_release<pos:position pos:line="132" pos:column="55"/></name><argument_list pos:line="132" pos:column="55">(<argument><expr><operator pos:line="132" pos:column="56">&amp;<pos:position pos:line="132" pos:column="61"/></operator><name pos:line="132" pos:column="57">target<pos:position pos:line="132" pos:column="63"/></name></expr></argument>)<pos:position pos:line="132" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="65"/></expr_stmt>
				}<pos:position pos:line="133" pos:column="34"/></block></else></if>
			}<pos:position pos:line="134" pos:column="26"/></block></then></if>
		}<pos:position pos:line="135" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="136" pos:column="17">i<pos:position pos:line="136" pos:column="18"/></name> <operator pos:line="136" pos:column="19">=<pos:position pos:line="136" pos:column="20"/></operator> <name pos:line="136" pos:column="21">posn<pos:position pos:line="136" pos:column="25"/></name> <operator pos:line="136" pos:column="26">+<pos:position pos:line="136" pos:column="27"/></operator> <literal type="number" pos:line="136" pos:column="28">1<pos:position pos:line="136" pos:column="29"/></literal></expr>;<pos:position pos:line="136" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="137" pos:column="10"/></block></while>

	<expr_stmt><expr><name><name pos:line="139" pos:column="9">cdata<pos:position pos:line="139" pos:column="14"/></name><operator pos:line="139" pos:column="14">-&gt;<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="16">got_alternates<pos:position pos:line="139" pos:column="30"/></name></name> <operator pos:line="139" pos:column="31">=<pos:position pos:line="139" pos:column="32"/></operator> <literal type="number" pos:line="139" pos:column="33">1<pos:position pos:line="139" pos:column="34"/></literal></expr>;<pos:position pos:line="139" pos:column="35"/></expr_stmt>
}<pos:position pos:line="140" pos:column="2"/></block></function></unit>

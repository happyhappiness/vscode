<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6725_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">path_lookup<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">cmd<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">exe_only<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">path<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">prog<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">strlen<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">cmd<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">isexe<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">len<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">&gt;=<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="28">4<pos:position pos:line="6" pos:column="29"/></literal> <operator pos:line="6" pos:column="30">&amp;&amp;<pos:position pos:line="6" pos:column="40"/></operator> <operator pos:line="6" pos:column="33">!<pos:position pos:line="6" pos:column="34"/></operator><call><name pos:line="6" pos:column="34">strcasecmp<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">cmd<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">+<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="49">len<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-<pos:position pos:line="6" pos:column="53"/></operator><literal type="number" pos:line="6" pos:column="53">4<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="56">".exe"<pos:position pos:line="6" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strchr<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">cmd<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="25">'/'<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call> <operator pos:line="8" pos:column="30">||<pos:position pos:line="8" pos:column="32"/></operator> <call><name pos:line="8" pos:column="33">strchr<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">cmd<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="45">'\\'<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">xstrdup<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">cmd<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">path<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">mingw_getenv<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="string" pos:line="11" pos:column="29">"PATH"<pos:position pos:line="11" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">path<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

	<while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><operator pos:line="15" pos:column="16">!<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">prog<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition> <block pos:line="15" pos:column="23">{
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">const<pos:position pos:line="16" pos:column="22"/></specifier> <name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">sep<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><call><name pos:line="16" pos:column="35">strchrnul<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">path<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="51">';'<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">dirlen<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><name pos:line="17" pos:column="30">sep<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">-<pos:position pos:line="17" pos:column="35"/></operator> <name pos:line="17" pos:column="36">path<pos:position pos:line="17" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="41"/></decl_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">dirlen<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">prog<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <call><name pos:line="19" pos:column="32">lookup_prog<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">path<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">dirlen<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">cmd<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="63">isexe<pos:position pos:line="19" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="70">exe_only<pos:position pos:line="19" pos:column="78"/></name></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><operator pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">sep<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
			<block type="pseudo"><break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">path<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">sep<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">+<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></while>

	<return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">prog<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2627_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fetch<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">walker<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">walker<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">unsigned<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">sha1<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">walker_data<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name><name pos:line="3" pos:column="36">walker<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="44">data<pos:position pos:line="3" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">alt_base<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">altbase<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name><name pos:line="4" pos:column="36">data<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">alt<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">fetch_object<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">walker<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">sha1<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">altbase<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition> <block pos:line="8" pos:column="25">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">http_fetch_pack<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">walker<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">altbase<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">sha1<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">fetch_alternates<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">walker<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="42">data<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">alt<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">base<pos:position pos:line="11" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">altbase<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <name><name pos:line="12" pos:column="27">altbase<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">next<pos:position pos:line="12" pos:column="40"/></name></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></while>
	<return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">error<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="string" pos:line="14" pos:column="22">"Unable to find %s under %s"<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="52">sha1_to_hex<pos:position pos:line="14" pos:column="63"/></name><argument_list pos:line="14" pos:column="63">(<argument><expr><name pos:line="14" pos:column="64">sha1<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr></argument>,
		     <argument><expr><name><name pos:line="15" pos:column="22">data<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">alt<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">base<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

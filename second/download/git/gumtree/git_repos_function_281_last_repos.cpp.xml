<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_281_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_path<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">len<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">stat<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">st<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">skiplen<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">slash<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">path<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">+<pos:position pos:line="3" pos:column="35"/></operator> <name pos:line="3" pos:column="36">len<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">path<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&lt;<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="23">slash<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&amp;&amp;<pos:position pos:line="5" pos:column="39"/></operator> <operator pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">slash<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">!=<pos:position pos:line="5" pos:column="41"/></operator> <literal type="char" pos:line="5" pos:column="42">'/'<pos:position pos:line="5" pos:column="45"/></literal></expr>)<pos:position pos:line="5" pos:column="46"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">slash<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">--<pos:position pos:line="6" pos:column="24"/></operator></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt></block></while>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">has_dirs_only_path<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">path<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">slash<pos:position pos:line="7" pos:column="44"/></name> <operator pos:line="7" pos:column="45">-<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="47">path<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">skiplen<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62"> <block pos:line="7" pos:column="63">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">errno<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">ENOENT<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>
	<return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">lstat<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">path<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">st<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

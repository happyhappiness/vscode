<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4485_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">get_fetch_map<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">ref<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">remote_refs<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
		  <parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">refspec<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">refspec<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
		  <parameter><decl><type><name><name pos:line="3" pos:column="19">struct<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">ref<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier><modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">tail<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="4" pos:column="19">int<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">missing_ok<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="34"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ref_map<pos:position pos:line="6" pos:column="28"/></name></decl>, <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier><modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="32">rmp<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">refspec<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">pattern<pos:position pos:line="8" pos:column="29"/></name></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <block pos:line="8" pos:column="31">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">ref_map<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <call><name pos:line="9" pos:column="27">get_expanded_map<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">remote_refs<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="57">refspec<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <else pos:line="10" pos:column="11">else <block pos:line="10" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">name<pos:position pos:line="11" pos:column="33"/></name> <init pos:line="11" pos:column="34">= <expr><ternary><condition><expr><name><name pos:line="11" pos:column="36">refspec<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">src<pos:position pos:line="11" pos:column="48"/></name><index pos:line="11" pos:column="48">[<expr><literal type="number" pos:line="11" pos:column="49">0<pos:position pos:line="11" pos:column="50"/></literal></expr>]<pos:position pos:line="11" pos:column="51"/></index></name></expr> ?<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53"> <expr><name><name pos:line="11" pos:column="54">refspec<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">-&gt;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="63">src<pos:position pos:line="11" pos:column="66"/></name></name></expr> <pos:position pos:line="11" pos:column="67"/></then><else pos:line="11" pos:column="67">: <expr><literal type="string" pos:line="11" pos:column="69">"HEAD"<pos:position pos:line="11" pos:column="75"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="76"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">refspec<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">exact_sha1<pos:position pos:line="13" pos:column="40"/></name></name></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <block pos:line="13" pos:column="42">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">ref_map<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <call><name pos:line="14" pos:column="35">alloc_ref<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">name<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">get_oid_hex<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">name<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="43">&amp;<pos:position pos:line="15" pos:column="48"/></operator><name><name pos:line="15" pos:column="44">ref_map<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">old_oid<pos:position pos:line="15" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <else pos:line="16" pos:column="19">else <block pos:line="16" pos:column="24">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">ref_map<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <call><name pos:line="17" pos:column="35">get_remote_ref<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><name pos:line="17" pos:column="50">remote_refs<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">name<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></else></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">!<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">missing_ok<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">&amp;&amp;<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="36">!<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">ref_map<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="25">die<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="string" pos:line="20" pos:column="29">"Couldn't find remote ref %s"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">name<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt></block></then></if>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">ref_map<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29"> <block pos:line="21" pos:column="30">{
			<expr_stmt><expr><name><name pos:line="22" pos:column="25">ref_map<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">peer_ref<pos:position pos:line="22" pos:column="42"/></name></name> <operator pos:line="22" pos:column="43">=<pos:position pos:line="22" pos:column="44"/></operator> <call><name pos:line="22" pos:column="45">get_local_ref<pos:position pos:line="22" pos:column="58"/></name><argument_list pos:line="22" pos:column="58">(<argument><expr><name><name pos:line="22" pos:column="59">refspec<pos:position pos:line="22" pos:column="66"/></name><operator pos:line="22" pos:column="66">-&gt;<pos:position pos:line="22" pos:column="71"/></operator><name pos:line="22" pos:column="68">dst<pos:position pos:line="22" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name><name pos:line="23" pos:column="29">ref_map<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">peer_ref<pos:position pos:line="23" pos:column="46"/></name></name> <operator pos:line="23" pos:column="47">&amp;&amp;<pos:position pos:line="23" pos:column="57"/></operator> <name><name pos:line="23" pos:column="50">refspec<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">-&gt;<pos:position pos:line="23" pos:column="62"/></operator><name pos:line="23" pos:column="59">force<pos:position pos:line="23" pos:column="64"/></name></name></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="33">ref_map<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">peer_ref<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">force<pos:position pos:line="24" pos:column="57"/></name></name> <operator pos:line="24" pos:column="58">=<pos:position pos:line="24" pos:column="59"/></operator> <literal type="number" pos:line="24" pos:column="60">1<pos:position pos:line="24" pos:column="61"/></literal></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt></block></then></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>

	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">rmp<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <operator pos:line="28" pos:column="20">&amp;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="21">ref_map<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></init> <condition><expr><operator pos:line="28" pos:column="30">*<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">rmp<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></condition> <incr/>)<pos:position pos:line="28" pos:column="37"/></control> <block pos:line="28" pos:column="38">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><operator pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">rmp<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">)<pos:position pos:line="29" pos:column="27"/></operator><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">peer_ref<pos:position pos:line="29" pos:column="37"/></name></name></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38"> <block pos:line="29" pos:column="39">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><operator pos:line="30" pos:column="29">!<pos:position pos:line="30" pos:column="30"/></operator><call><name pos:line="30" pos:column="30">starts_with<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name><operator pos:line="30" pos:column="42">(<pos:position pos:line="30" pos:column="43"/></operator><operator pos:line="30" pos:column="43">*<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">rmp<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">)<pos:position pos:line="30" pos:column="48"/></operator><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name><name pos:line="30" pos:column="50">peer_ref<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">-&gt;<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="60">name<pos:position pos:line="30" pos:column="64"/></name></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="66">"refs/"<pos:position pos:line="30" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call> <operator pos:line="30" pos:column="75">||<pos:position pos:line="30" pos:column="77"/></operator>
			    <call><name pos:line="31" pos:column="29">check_refname_format<pos:position pos:line="31" pos:column="49"/></name><argument_list pos:line="31" pos:column="49">(<argument><expr><name><operator pos:line="31" pos:column="50">(<pos:position pos:line="31" pos:column="51"/></operator><operator pos:line="31" pos:column="51">*<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">rmp<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">)<pos:position pos:line="31" pos:column="56"/></operator><operator pos:line="31" pos:column="56">-&gt;<pos:position pos:line="31" pos:column="61"/></operator><name><name pos:line="31" pos:column="58">peer_ref<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">-&gt;<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="68">name<pos:position pos:line="31" pos:column="72"/></name></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="74">0<pos:position pos:line="31" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="77"/></condition><then pos:line="31" pos:column="77"> <block pos:line="31" pos:column="78">{
				<decl_stmt><decl><type><name><name pos:line="32" pos:column="33">struct<pos:position pos:line="32" pos:column="39"/></name> <name pos:line="32" pos:column="40">ref<pos:position pos:line="32" pos:column="43"/></name></name> <modifier pos:line="32" pos:column="44">*<pos:position pos:line="32" pos:column="45"/></modifier></type><name pos:line="32" pos:column="45">ignore<pos:position pos:line="32" pos:column="51"/></name> <init pos:line="32" pos:column="52">= <expr><operator pos:line="32" pos:column="54">*<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="55">rmp<pos:position pos:line="32" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="59"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="33" pos:column="33">error<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><literal type="string" pos:line="33" pos:column="39">"* Ignoring funny ref '%s' locally"<pos:position pos:line="33" pos:column="74"/></literal></expr></argument>,
				      <argument><expr><name><operator pos:line="34" pos:column="39">(<pos:position pos:line="34" pos:column="40"/></operator><operator pos:line="34" pos:column="40">*<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">rmp<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">)<pos:position pos:line="34" pos:column="45"/></operator><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name><name pos:line="34" pos:column="47">peer_ref<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">-&gt;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="57">name<pos:position pos:line="34" pos:column="61"/></name></name></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="35" pos:column="33">*<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">rmp<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">=<pos:position pos:line="35" pos:column="39"/></operator> <name><operator pos:line="35" pos:column="40">(<pos:position pos:line="35" pos:column="41"/></operator><operator pos:line="35" pos:column="41">*<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">rmp<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">next<pos:position pos:line="35" pos:column="52"/></name></name></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">free<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name><name pos:line="36" pos:column="38">ignore<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">-&gt;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="46">peer_ref<pos:position pos:line="36" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">free<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">ignore<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
				<continue pos:line="38" pos:column="33">continue;<pos:position pos:line="38" pos:column="42"/></continue>
			}<pos:position pos:line="39" pos:column="26"/></block></then></if>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="41" pos:column="17">rmp<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <operator pos:line="41" pos:column="23">&amp;<pos:position pos:line="41" pos:column="28"/></operator><operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><name><operator pos:line="41" pos:column="25">(<pos:position pos:line="41" pos:column="26"/></operator><operator pos:line="41" pos:column="26">*<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">rmp<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">)<pos:position pos:line="41" pos:column="31"/></operator><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">next<pos:position pos:line="41" pos:column="37"/></name></name><operator pos:line="41" pos:column="37">)<pos:position pos:line="41" pos:column="38"/></operator></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></for>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">ref_map<pos:position pos:line="44" pos:column="20"/></name></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">tail_link_ref<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">ref_map<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">tail<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt></block></then></if>

	<return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

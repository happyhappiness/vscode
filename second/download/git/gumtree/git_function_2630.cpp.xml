<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2630.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">setup_tracking<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">new_ref<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">orig_ref<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">enum<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">branch_track<pos:position pos:line="2" pos:column="44"/></name></name></type> <name pos:line="2" pos:column="45">track<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">quiet<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">tracking<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">tracking<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">config_flags<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><ternary><condition><expr><name pos:line="5" pos:column="28">quiet<pos:position pos:line="5" pos:column="33"/></name></expr> ?<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <expr><literal type="number" pos:line="5" pos:column="36">0<pos:position pos:line="5" pos:column="37"/></literal></expr> <pos:position pos:line="5" pos:column="38"/></then><else pos:line="5" pos:column="38">: <expr><name pos:line="5" pos:column="40">BRANCH_CONFIG_VERBOSE<pos:position pos:line="5" pos:column="61"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">tracking<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="30">sizeof<argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">tracking<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">tracking<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">spec<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">dst<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">char<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">orig_ref<pos:position pos:line="8" pos:column="45"/></name></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">for_each_remote<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">find_tracked_branch<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="50">&amp;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="51">tracking<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">tracking<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">matches<pos:position pos:line="12" pos:column="30"/></name></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
		<block type="pseudo"><switch pos:line="13" pos:column="17">switch <condition pos:line="13" pos:column="24">(<expr><name pos:line="13" pos:column="25">track<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition> <block pos:line="13" pos:column="32">{
		<case pos:line="14" pos:column="17">case <expr><name pos:line="14" pos:column="22">BRANCH_TRACK_ALWAYS<pos:position pos:line="14" pos:column="41"/></name></expr>:<pos:position pos:line="14" pos:column="42"/></case>
		<case pos:line="15" pos:column="17">case <expr><name pos:line="15" pos:column="22">BRANCH_TRACK_EXPLICIT<pos:position pos:line="15" pos:column="43"/></name></expr>:<pos:position pos:line="15" pos:column="44"/></case>
		<case pos:line="16" pos:column="17">case <expr><name pos:line="16" pos:column="22">BRANCH_TRACK_OVERRIDE<pos:position pos:line="16" pos:column="43"/></name></expr>:<pos:position pos:line="16" pos:column="44"/></case>
			<break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break>
		<default pos:line="18" pos:column="17">default:<pos:position pos:line="18" pos:column="25"/></default>
			<return pos:line="19" pos:column="25">return <expr><literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></return>
		}<pos:position pos:line="20" pos:column="18"/></block></switch></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">tracking<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">matches<pos:position pos:line="22" pos:column="29"/></name></name> <operator pos:line="22" pos:column="30">&gt;<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><call><name pos:line="23" pos:column="24">error<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><call><name pos:line="23" pos:column="30">_<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><literal type="string" pos:line="23" pos:column="32">"Not tracking: ambiguous information for ref %s"<pos:position pos:line="23" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="81"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="24" pos:column="33">orig_ref<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">install_branch_config<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">config_flags<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">new_ref<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="54">tracking<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">.<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="63">remote<pos:position pos:line="26" pos:column="69"/></name></name></expr></argument>,
			      <argument><expr><ternary><condition><expr><name><name pos:line="27" pos:column="31">tracking<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">.<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="40">src<pos:position pos:line="27" pos:column="43"/></name></name></expr> ?<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <expr><name><name pos:line="27" pos:column="46">tracking<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">.<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="55">src<pos:position pos:line="27" pos:column="58"/></name></name></expr> <pos:position pos:line="27" pos:column="59"/></then><else pos:line="27" pos:column="59">: <expr><name pos:line="27" pos:column="61">orig_ref<pos:position pos:line="27" pos:column="69"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="29" pos:column="9">free<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name><name pos:line="29" pos:column="14">tracking<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">.<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">src<pos:position pos:line="29" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

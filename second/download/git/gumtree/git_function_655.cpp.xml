<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_655.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">link_alt_odb_entry<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">entry<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">relative_base<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">depth<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">normalized_objdir<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">alternate_object_database<pos:position pos:line="4" pos:column="41"/></name></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">ent<pos:position pos:line="4" pos:column="46"/></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">alternate_object_database<pos:position pos:line="5" pos:column="41"/></name></name> <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier></type><name pos:line="5" pos:column="43">alt<pos:position pos:line="5" pos:column="46"/></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">pfxlen<pos:position pos:line="6" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="24">entlen<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">pathbuf<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name pos:line="7" pos:column="33">STRBUF_INIT<pos:position pos:line="7" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">is_absolute_path<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">entry<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call> <operator pos:line="9" pos:column="38">&amp;&amp;<pos:position pos:line="9" pos:column="48"/></operator> <name pos:line="9" pos:column="41">relative_base<pos:position pos:line="9" pos:column="54"/></name></expr>)<pos:position pos:line="9" pos:column="55"/></condition><then pos:line="9" pos:column="55"> <block pos:line="9" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addstr<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="32">pathbuf<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="41">real_path<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">(<argument><expr><name pos:line="10" pos:column="51">relative_base<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">strbuf_addch<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><operator pos:line="11" pos:column="30">&amp;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="31">pathbuf<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="40">'/'<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_addstr<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">pathbuf<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">entry<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">normalize_path_copy<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">pathbuf<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">buf<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="42">pathbuf<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">.<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">buf<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">pfxlen<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">strlen<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">pathbuf<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">.<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">buf<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/*
	 * The trailing slash after the directory name is given by
	 * this function at the end. Remove duplicates.
	 */</comment>
	<while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">pfxlen<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&amp;&amp;<pos:position pos:line="23" pos:column="33"/></operator> <name><name pos:line="23" pos:column="26">pathbuf<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">.<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">buf<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><name pos:line="23" pos:column="38">pfxlen<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-<pos:position pos:line="23" pos:column="45"/></operator><literal type="number" pos:line="23" pos:column="45">1<pos:position pos:line="23" pos:column="46"/></literal></expr>]<pos:position pos:line="23" pos:column="47"/></index></name> <operator pos:line="23" pos:column="48">==<pos:position pos:line="23" pos:column="50"/></operator> <literal type="char" pos:line="23" pos:column="51">'/'<pos:position pos:line="23" pos:column="54"/></literal></expr>)<pos:position pos:line="23" pos:column="55"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">pfxlen<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">-=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">1<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt></block></while>

	<expr_stmt><expr><name pos:line="26" pos:column="9">entlen<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">st_add<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">pfxlen<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="33">43<pos:position pos:line="26" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt> <comment type="block" pos:line="26" pos:column="38">/* '/' + 2 hex + '/' + 38 hex + NUL */</comment>
	<expr_stmt><expr><name pos:line="27" pos:column="9">ent<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">xmalloc<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><call><name pos:line="27" pos:column="23">st_add<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><sizeof pos:line="27" pos:column="30">sizeof<argument_list pos:line="27" pos:column="36">(<argument><expr><operator pos:line="27" pos:column="37">*<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">ent<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">entlen<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">memcpy<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name><name pos:line="28" pos:column="16">ent<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">base<pos:position pos:line="28" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="27">pathbuf<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">.<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="35">buf<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">pfxlen<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_release<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">&amp;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="25">pathbuf<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="31" pos:column="9">ent<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">name<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name><name pos:line="31" pos:column="21">ent<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">base<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">+<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">pfxlen<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">+<pos:position pos:line="31" pos:column="41"/></operator> <literal type="number" pos:line="31" pos:column="42">1<pos:position pos:line="31" pos:column="43"/></literal></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">ent<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">base<pos:position pos:line="32" pos:column="18"/></name><index pos:line="32" pos:column="18">[<expr><name pos:line="32" pos:column="19">pfxlen<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">+<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="28">3<pos:position pos:line="32" pos:column="29"/></literal></expr>]<pos:position pos:line="32" pos:column="30"/></index></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <literal type="char" pos:line="32" pos:column="33">'/'<pos:position pos:line="32" pos:column="36"/></literal></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">ent<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">base<pos:position pos:line="33" pos:column="18"/></name><index pos:line="33" pos:column="18">[<expr><name pos:line="33" pos:column="19">pfxlen<pos:position pos:line="33" pos:column="25"/></name></expr>]<pos:position pos:line="33" pos:column="26"/></index></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <name><name pos:line="33" pos:column="29">ent<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">base<pos:position pos:line="33" pos:column="38"/></name><index pos:line="33" pos:column="38">[<expr><name pos:line="33" pos:column="39">entlen<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-<pos:position pos:line="33" pos:column="46"/></operator><literal type="number" pos:line="33" pos:column="46">1<pos:position pos:line="33" pos:column="47"/></literal></expr>]<pos:position pos:line="33" pos:column="48"/></index></name> <operator pos:line="33" pos:column="49">=<pos:position pos:line="33" pos:column="50"/></operator> <literal type="number" pos:line="33" pos:column="51">0<pos:position pos:line="33" pos:column="52"/></literal></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>

	<comment type="block" pos:line="35" pos:column="9">/* Detect cases where alternate disappeared */</comment>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">is_directory<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name><name pos:line="36" pos:column="27">ent<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">base<pos:position pos:line="36" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38"> <block pos:line="36" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">error<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"object directory %s does not exist; "<pos:position pos:line="37" pos:column="61"/></literal>
		      <literal type="string" pos:line="38" pos:column="23">"check .git/objects/info/alternates."<pos:position pos:line="38" pos:column="60"/></literal></expr></argument>,
		      <argument><expr><name><name pos:line="39" pos:column="23">ent<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">base<pos:position pos:line="39" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">free<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">ent<pos:position pos:line="40" pos:column="25"/></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><operator pos:line="41" pos:column="24">-<pos:position pos:line="41" pos:column="25"/></operator><literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="44" pos:column="9">/* Prevent the common mistake of listing the same
	 * thing twice, or object directory itself.
	 */</comment>
	<for pos:line="47" pos:column="9">for <control pos:line="47" pos:column="13">(<init><expr><name pos:line="47" pos:column="14">alt<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">alt_odb_list<pos:position pos:line="47" pos:column="32"/></name></expr>;<pos:position pos:line="47" pos:column="33"/></init> <condition><expr><name pos:line="47" pos:column="34">alt<pos:position pos:line="47" pos:column="37"/></name></expr>;<pos:position pos:line="47" pos:column="38"/></condition> <incr><expr><name pos:line="47" pos:column="39">alt<pos:position pos:line="47" pos:column="42"/></name> <operator pos:line="47" pos:column="43">=<pos:position pos:line="47" pos:column="44"/></operator> <name><name pos:line="47" pos:column="45">alt<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">next<pos:position pos:line="47" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="47" pos:column="55"/></control> <block pos:line="47" pos:column="56">{
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">pfxlen<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">==<pos:position pos:line="48" pos:column="30"/></operator> <name><name pos:line="48" pos:column="31">alt<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">-&gt;<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="36">name<pos:position pos:line="48" pos:column="40"/></name></name> <operator pos:line="48" pos:column="41">-<pos:position pos:line="48" pos:column="42"/></operator> <name><name pos:line="48" pos:column="43">alt<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">base<pos:position pos:line="48" pos:column="52"/></name></name> <operator pos:line="48" pos:column="53">-<pos:position pos:line="48" pos:column="54"/></operator> <literal type="number" pos:line="48" pos:column="55">1<pos:position pos:line="48" pos:column="56"/></literal> <operator pos:line="48" pos:column="57">&amp;&amp;<pos:position pos:line="48" pos:column="67"/></operator>
		    <operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><call><name pos:line="49" pos:column="22">memcmp<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name><name pos:line="49" pos:column="29">ent<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">base<pos:position pos:line="49" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="40">alt<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">-&gt;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="45">base<pos:position pos:line="49" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="51">pfxlen<pos:position pos:line="49" pos:column="57"/></name></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="59"/></condition><then pos:line="49" pos:column="59"> <block pos:line="49" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">free<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">ent<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
			<return pos:line="51" pos:column="25">return <expr><operator pos:line="51" pos:column="32">-<pos:position pos:line="51" pos:column="33"/></operator><literal type="number" pos:line="51" pos:column="33">1<pos:position pos:line="51" pos:column="34"/></literal></expr>;<pos:position pos:line="51" pos:column="35"/></return>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>
	}<pos:position pos:line="53" pos:column="10"/></block></for>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><operator pos:line="54" pos:column="13">!<pos:position pos:line="54" pos:column="14"/></operator><call><name pos:line="54" pos:column="14">fspathcmp<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><name><name pos:line="54" pos:column="24">ent<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">base<pos:position pos:line="54" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="35">normalized_objdir<pos:position pos:line="54" pos:column="52"/></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="54"/></condition><then pos:line="54" pos:column="54"> <block pos:line="54" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">free<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">ent<pos:position pos:line="55" pos:column="25"/></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
		<return pos:line="56" pos:column="17">return <expr><operator pos:line="56" pos:column="24">-<pos:position pos:line="56" pos:column="25"/></operator><literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></return>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="59" pos:column="9">/* add the alternate entry */</comment>
	<expr_stmt><expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">alt_odb_tail<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <name pos:line="60" pos:column="25">ent<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">alt_odb_tail<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <operator pos:line="61" pos:column="24">&amp;<pos:position pos:line="61" pos:column="29"/></operator><operator pos:line="61" pos:column="25">(<pos:position pos:line="61" pos:column="26"/></operator><name><name pos:line="61" pos:column="26">ent<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">next<pos:position pos:line="61" pos:column="35"/></name></name><operator pos:line="61" pos:column="35">)<pos:position pos:line="61" pos:column="36"/></operator></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="62" pos:column="9">ent<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">next<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <name pos:line="62" pos:column="21">NULL<pos:position pos:line="62" pos:column="25"/></name></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="64" pos:column="9">/* recursively add alternates */</comment>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">read_info_alternates<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name><name pos:line="65" pos:column="30">ent<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">base<pos:position pos:line="65" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="41">depth<pos:position pos:line="65" pos:column="46"/></name> <operator pos:line="65" pos:column="47">+<pos:position pos:line="65" pos:column="48"/></operator> <literal type="number" pos:line="65" pos:column="49">1<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="67" pos:column="9">ent<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">-&gt;<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="14">base<pos:position pos:line="67" pos:column="18"/></name><index pos:line="67" pos:column="18">[<expr><name pos:line="67" pos:column="19">pfxlen<pos:position pos:line="67" pos:column="25"/></name></expr>]<pos:position pos:line="67" pos:column="26"/></index></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <literal type="char" pos:line="67" pos:column="29">'/'<pos:position pos:line="67" pos:column="32"/></literal></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>

	<return pos:line="69" pos:column="9">return <expr><literal type="number" pos:line="69" pos:column="16">0<pos:position pos:line="69" pos:column="17"/></literal></expr>;<pos:position pos:line="69" pos:column="18"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

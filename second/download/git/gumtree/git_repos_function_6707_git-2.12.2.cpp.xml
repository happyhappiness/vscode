<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6707_git-2.12.2.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">re_compile_pattern<pos:position pos:line="2" pos:column="19"/></name> <parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">pattern<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="3" pos:column="21">size_t<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">length<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="4" pos:column="21">struct<pos:position pos:line="4" pos:column="27"/></name> <name pos:line="4" pos:column="28">re_pattern_buffer<pos:position pos:line="4" pos:column="45"/></name></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">bufp<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">reg_errcode_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">ret<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* And GNU code determines whether or not to get register information
     by passing null for the REGS argument to re_match, etc., not by
     setting no_sub, unless RE_NO_SUB is set.  */</comment>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">bufp<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">no_sub<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">!<pos:position pos:line="11" pos:column="19"/></operator><operator pos:line="11" pos:column="19">!<pos:position pos:line="11" pos:column="20"/></operator><operator pos:line="11" pos:column="20">(<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">re_syntax_options<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="41">RE_NO_SUB<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Match anchors at newline.  */</comment>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">bufp<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">newline_anchor<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">ret<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">re_compile_internal<pos:position pos:line="16" pos:column="28"/></name> <argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">bufp<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">pattern<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">length<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">re_syntax_options<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">ret<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>
  <return pos:line="20" pos:column="3">return <expr><call><name pos:line="20" pos:column="10">gettext<pos:position pos:line="20" pos:column="17"/></name> <argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">__re_error_msgid<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">+<pos:position pos:line="20" pos:column="37"/></operator> <name><name pos:line="20" pos:column="38">__re_error_msgid_idx<pos:position pos:line="20" pos:column="58"/></name><index pos:line="20" pos:column="58">[<expr><operator pos:line="20" pos:column="59">(<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="60">int<pos:position pos:line="20" pos:column="63"/></name><operator pos:line="20" pos:column="63">)<pos:position pos:line="20" pos:column="64"/></operator> <name pos:line="20" pos:column="65">ret<pos:position pos:line="20" pos:column="68"/></name></expr>]<pos:position pos:line="20" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6134_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">compile_submodule_options<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">grep_opt<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">opt<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">argv<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="3" pos:column="39">int<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">cached<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">int<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">untracked<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="4" pos:column="39">int<pos:position pos:line="4" pos:column="42"/></name></type> <name pos:line="4" pos:column="43">opt_exclude<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="56">int<pos:position pos:line="4" pos:column="59"/></name></type> <name pos:line="4" pos:column="60">use_index<pos:position pos:line="4" pos:column="69"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="5" pos:column="39">int<pos:position pos:line="5" pos:column="42"/></name></type> <name pos:line="5" pos:column="43">pattern_type_arg<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="60"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">grep_pat<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">pattern<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">recurse_submodules<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">argv_array_push<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><operator pos:line="10" pos:column="33">&amp;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="34">submodule_options<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="53">"--recurse-submodules"<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">cached<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">argv_array_push<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="34">submodule_options<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="53">"--cached"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">use_index<pos:position pos:line="14" pos:column="23"/></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">argv_array_push<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="34">submodule_options<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="53">"--no-index"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">untracked<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">argv_array_push<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="34">submodule_options<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="53">"--untracked"<pos:position pos:line="17" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">opt_exclude<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">&gt;<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">argv_array_push<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="34">submodule_options<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="53">"--exclude-standard"<pos:position pos:line="19" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="75"/></expr_stmt></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">opt<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">invert<pos:position pos:line="21" pos:column="24"/></name></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">argv_array_push<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">submodule_options<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="53">"-v"<pos:position pos:line="22" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">opt<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">ignore_case<pos:position pos:line="23" pos:column="29"/></name></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">argv_array_push<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">&amp;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="34">submodule_options<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="53">"-i"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">opt<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">word_regexp<pos:position pos:line="25" pos:column="29"/></name></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">argv_array_push<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="34">submodule_options<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="53">"-w"<pos:position pos:line="26" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt></block></then></if>
	<switch pos:line="27" pos:column="9">switch <condition pos:line="27" pos:column="16">(<expr><name><name pos:line="27" pos:column="17">opt<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">binary<pos:position pos:line="27" pos:column="28"/></name></name></expr>)<pos:position pos:line="27" pos:column="29"/></condition> <block pos:line="27" pos:column="30">{
	<case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">GREP_BINARY_NOMATCH<pos:position pos:line="28" pos:column="33"/></name></expr>:<pos:position pos:line="28" pos:column="34"/></case>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">argv_array_push<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><operator pos:line="29" pos:column="33">&amp;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="34">submodule_options<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="53">"-I"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
		<break pos:line="30" pos:column="17">break;<pos:position pos:line="30" pos:column="23"/></break>
	<case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">GREP_BINARY_TEXT<pos:position pos:line="31" pos:column="30"/></name></expr>:<pos:position pos:line="31" pos:column="31"/></case>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">argv_array_push<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><operator pos:line="32" pos:column="33">&amp;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="34">submodule_options<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="53">"-a"<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
		<break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>
	<default pos:line="34" pos:column="9">default:<pos:position pos:line="34" pos:column="17"/></default>
		<break pos:line="35" pos:column="17">break;<pos:position pos:line="35" pos:column="23"/></break>
	}<pos:position pos:line="36" pos:column="10"/></block></switch>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">opt<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">allow_textconv<pos:position pos:line="37" pos:column="32"/></name></name></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="17">argv_array_push<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><operator pos:line="38" pos:column="33">&amp;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="34">submodule_options<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="53">"--textconv"<pos:position pos:line="38" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">opt<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">max_depth<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">!=<pos:position pos:line="39" pos:column="30"/></operator> <operator pos:line="39" pos:column="31">-<pos:position pos:line="39" pos:column="32"/></operator><literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>)<pos:position pos:line="39" pos:column="34"/></condition><then pos:line="39" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">argv_array_pushf<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><operator pos:line="40" pos:column="34">&amp;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="35">submodule_options<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="54">"--max-depth=%d"<pos:position pos:line="40" pos:column="70"/></literal></expr></argument>,
				 <argument><expr><name><name pos:line="41" pos:column="34">opt<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">max_depth<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt></block></then></if>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">opt<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">linenum<pos:position pos:line="42" pos:column="25"/></name></name></expr>)<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">argv_array_push<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><operator pos:line="43" pos:column="33">&amp;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="34">submodule_options<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="53">"-n"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name><name pos:line="44" pos:column="14">opt<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">pathname<pos:position pos:line="44" pos:column="27"/></name></name></expr>)<pos:position pos:line="44" pos:column="28"/></condition><then pos:line="44" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">argv_array_push<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><operator pos:line="45" pos:column="33">&amp;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="34">submodule_options<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="53">"-h"<pos:position pos:line="45" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name><name pos:line="46" pos:column="14">opt<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">relative<pos:position pos:line="46" pos:column="27"/></name></name></expr>)<pos:position pos:line="46" pos:column="28"/></condition><then pos:line="46" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="17">argv_array_push<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><operator pos:line="47" pos:column="33">&amp;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="34">submodule_options<pos:position pos:line="47" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="53">"--full-name"<pos:position pos:line="47" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">opt<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">name_only<pos:position pos:line="48" pos:column="27"/></name></name></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">argv_array_push<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><operator pos:line="49" pos:column="33">&amp;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="34">submodule_options<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="53">"-l"<pos:position pos:line="49" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">opt<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">unmatch_name_only<pos:position pos:line="50" pos:column="35"/></name></name></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="17">argv_array_push<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><operator pos:line="51" pos:column="33">&amp;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="34">submodule_options<pos:position pos:line="51" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="53">"-L"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">opt<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">null_following_name<pos:position pos:line="52" pos:column="37"/></name></name></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="17">argv_array_push<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><operator pos:line="53" pos:column="33">&amp;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="34">submodule_options<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="53">"-z"<pos:position pos:line="53" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">opt<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">count<pos:position pos:line="54" pos:column="23"/></name></name></expr>)<pos:position pos:line="54" pos:column="24"/></condition><then pos:line="54" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="17">argv_array_push<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><operator pos:line="55" pos:column="33">&amp;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="34">submodule_options<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="53">"-c"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">opt<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">file_break<pos:position pos:line="56" pos:column="28"/></name></name></expr>)<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="17">argv_array_push<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><operator pos:line="57" pos:column="33">&amp;<pos:position pos:line="57" pos:column="38"/></operator><name pos:line="57" pos:column="34">submodule_options<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="53">"--break"<pos:position pos:line="57" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt></block></then></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">opt<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">heading<pos:position pos:line="58" pos:column="25"/></name></name></expr>)<pos:position pos:line="58" pos:column="26"/></condition><then pos:line="58" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="17">argv_array_push<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><operator pos:line="59" pos:column="33">&amp;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="34">submodule_options<pos:position pos:line="59" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="53">"--heading"<pos:position pos:line="59" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="66"/></expr_stmt></block></then></if>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">opt<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">pre_context<pos:position pos:line="60" pos:column="29"/></name></name></expr>)<pos:position pos:line="60" pos:column="30"/></condition><then pos:line="60" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">argv_array_pushf<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><operator pos:line="61" pos:column="34">&amp;<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="35">submodule_options<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="54">"--before-context=%d"<pos:position pos:line="61" pos:column="75"/></literal></expr></argument>,
				 <argument><expr><name><name pos:line="62" pos:column="34">opt<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">-&gt;<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="39">pre_context<pos:position pos:line="62" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt></block></then></if>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">opt<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">post_context<pos:position pos:line="63" pos:column="30"/></name></name></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">argv_array_pushf<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><operator pos:line="64" pos:column="34">&amp;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="35">submodule_options<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="54">"--after-context=%d"<pos:position pos:line="64" pos:column="74"/></literal></expr></argument>,
				 <argument><expr><name><name pos:line="65" pos:column="34">opt<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">post_context<pos:position pos:line="65" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt></block></then></if>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name><name pos:line="66" pos:column="13">opt<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">funcname<pos:position pos:line="66" pos:column="26"/></name></name></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="17">argv_array_push<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><operator pos:line="67" pos:column="33">&amp;<pos:position pos:line="67" pos:column="38"/></operator><name pos:line="67" pos:column="34">submodule_options<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="53">"-p"<pos:position pos:line="67" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">opt<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">funcbody<pos:position pos:line="68" pos:column="26"/></name></name></expr>)<pos:position pos:line="68" pos:column="27"/></condition><then pos:line="68" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">argv_array_push<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><operator pos:line="69" pos:column="33">&amp;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="34">submodule_options<pos:position pos:line="69" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="53">"-W"<pos:position pos:line="69" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">opt<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">all_match<pos:position pos:line="70" pos:column="27"/></name></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">argv_array_push<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><operator pos:line="71" pos:column="33">&amp;<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="34">submodule_options<pos:position pos:line="71" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="53">"--all-match"<pos:position pos:line="71" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name><name pos:line="72" pos:column="13">opt<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">debug<pos:position pos:line="72" pos:column="23"/></name></name></expr>)<pos:position pos:line="72" pos:column="24"/></condition><then pos:line="72" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">argv_array_push<pos:position pos:line="73" pos:column="32"/></name><argument_list pos:line="73" pos:column="32">(<argument><expr><operator pos:line="73" pos:column="33">&amp;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="34">submodule_options<pos:position pos:line="73" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="53">"--debug"<pos:position pos:line="73" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="64"/></expr_stmt></block></then></if>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name><name pos:line="74" pos:column="13">opt<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">-&gt;<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="18">status_only<pos:position pos:line="74" pos:column="29"/></name></name></expr>)<pos:position pos:line="74" pos:column="30"/></condition><then pos:line="74" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="17">argv_array_push<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><operator pos:line="75" pos:column="33">&amp;<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="34">submodule_options<pos:position pos:line="75" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="53">"-q"<pos:position pos:line="75" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt></block></then></if>

	<switch pos:line="77" pos:column="9">switch <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">pattern_type_arg<pos:position pos:line="77" pos:column="33"/></name></expr>)<pos:position pos:line="77" pos:column="34"/></condition> <block pos:line="77" pos:column="35">{
	<case pos:line="78" pos:column="9">case <expr><name pos:line="78" pos:column="14">GREP_PATTERN_TYPE_BRE<pos:position pos:line="78" pos:column="35"/></name></expr>:<pos:position pos:line="78" pos:column="36"/></case>
		<expr_stmt><expr><call><name pos:line="79" pos:column="17">argv_array_push<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><operator pos:line="79" pos:column="33">&amp;<pos:position pos:line="79" pos:column="38"/></operator><name pos:line="79" pos:column="34">submodule_options<pos:position pos:line="79" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="53">"-G"<pos:position pos:line="79" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="59"/></expr_stmt>
		<break pos:line="80" pos:column="17">break;<pos:position pos:line="80" pos:column="23"/></break>
	<case pos:line="81" pos:column="9">case <expr><name pos:line="81" pos:column="14">GREP_PATTERN_TYPE_ERE<pos:position pos:line="81" pos:column="35"/></name></expr>:<pos:position pos:line="81" pos:column="36"/></case>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">argv_array_push<pos:position pos:line="82" pos:column="32"/></name><argument_list pos:line="82" pos:column="32">(<argument><expr><operator pos:line="82" pos:column="33">&amp;<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="34">submodule_options<pos:position pos:line="82" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="53">"-E"<pos:position pos:line="82" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="59"/></expr_stmt>
		<break pos:line="83" pos:column="17">break;<pos:position pos:line="83" pos:column="23"/></break>
	<case pos:line="84" pos:column="9">case <expr><name pos:line="84" pos:column="14">GREP_PATTERN_TYPE_FIXED<pos:position pos:line="84" pos:column="37"/></name></expr>:<pos:position pos:line="84" pos:column="38"/></case>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">argv_array_push<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><operator pos:line="85" pos:column="33">&amp;<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="34">submodule_options<pos:position pos:line="85" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="53">"-F"<pos:position pos:line="85" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="59"/></expr_stmt>
		<break pos:line="86" pos:column="17">break;<pos:position pos:line="86" pos:column="23"/></break>
	<case pos:line="87" pos:column="9">case <expr><name pos:line="87" pos:column="14">GREP_PATTERN_TYPE_PCRE<pos:position pos:line="87" pos:column="36"/></name></expr>:<pos:position pos:line="87" pos:column="37"/></case>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">argv_array_push<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><operator pos:line="88" pos:column="33">&amp;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="34">submodule_options<pos:position pos:line="88" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="53">"-P"<pos:position pos:line="88" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="59"/></expr_stmt>
		<break pos:line="89" pos:column="17">break;<pos:position pos:line="89" pos:column="23"/></break>
	<case pos:line="90" pos:column="9">case <expr><name pos:line="90" pos:column="14">GREP_PATTERN_TYPE_UNSPECIFIED<pos:position pos:line="90" pos:column="43"/></name></expr>:<pos:position pos:line="90" pos:column="44"/></case>
		<break pos:line="91" pos:column="17">break;<pos:position pos:line="91" pos:column="23"/></break>
	<default pos:line="92" pos:column="9">default:<pos:position pos:line="92" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">die<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">(<argument><expr><literal type="string" pos:line="93" pos:column="21">"BUG: Added a new grep pattern type without updating switch statement"<pos:position pos:line="93" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="93"/></expr_stmt>
	}<pos:position pos:line="94" pos:column="10"/></block></switch>

	<for pos:line="96" pos:column="9">for <control pos:line="96" pos:column="13">(<init><expr><name pos:line="96" pos:column="14">pattern<pos:position pos:line="96" pos:column="21"/></name> <operator pos:line="96" pos:column="22">=<pos:position pos:line="96" pos:column="23"/></operator> <name><name pos:line="96" pos:column="24">opt<pos:position pos:line="96" pos:column="27"/></name><operator pos:line="96" pos:column="27">-&gt;<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="29">pattern_list<pos:position pos:line="96" pos:column="41"/></name></name></expr>;<pos:position pos:line="96" pos:column="42"/></init> <condition><expr><name pos:line="96" pos:column="43">pattern<pos:position pos:line="96" pos:column="50"/></name> <operator pos:line="96" pos:column="51">!=<pos:position pos:line="96" pos:column="53"/></operator> <name pos:line="96" pos:column="54">NULL<pos:position pos:line="96" pos:column="58"/></name></expr>;<pos:position pos:line="96" pos:column="59"/></condition>
	     <incr><expr><name pos:line="97" pos:column="14">pattern<pos:position pos:line="97" pos:column="21"/></name> <operator pos:line="97" pos:column="22">=<pos:position pos:line="97" pos:column="23"/></operator> <name><name pos:line="97" pos:column="24">pattern<pos:position pos:line="97" pos:column="31"/></name><operator pos:line="97" pos:column="31">-&gt;<pos:position pos:line="97" pos:column="36"/></operator><name pos:line="97" pos:column="33">next<pos:position pos:line="97" pos:column="37"/></name></name></expr></incr>)<pos:position pos:line="97" pos:column="38"/></control> <block pos:line="97" pos:column="39">{
		<switch pos:line="98" pos:column="17">switch <condition pos:line="98" pos:column="24">(<expr><name><name pos:line="98" pos:column="25">pattern<pos:position pos:line="98" pos:column="32"/></name><operator pos:line="98" pos:column="32">-&gt;<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="34">token<pos:position pos:line="98" pos:column="39"/></name></name></expr>)<pos:position pos:line="98" pos:column="40"/></condition> <block pos:line="98" pos:column="41">{
		<case pos:line="99" pos:column="17">case <expr><name pos:line="99" pos:column="22">GREP_PATTERN<pos:position pos:line="99" pos:column="34"/></name></expr>:<pos:position pos:line="99" pos:column="35"/></case>
			<expr_stmt><expr><call><name pos:line="100" pos:column="25">argv_array_pushf<pos:position pos:line="100" pos:column="41"/></name><argument_list pos:line="100" pos:column="41">(<argument><expr><operator pos:line="100" pos:column="42">&amp;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="43">submodule_options<pos:position pos:line="100" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="62">"-e%s"<pos:position pos:line="100" pos:column="68"/></literal></expr></argument>,
					 <argument><expr><name><name pos:line="101" pos:column="42">pattern<pos:position pos:line="101" pos:column="49"/></name><operator pos:line="101" pos:column="49">-&gt;<pos:position pos:line="101" pos:column="54"/></operator><name pos:line="101" pos:column="51">pattern<pos:position pos:line="101" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="60"/></expr_stmt>
			<break pos:line="102" pos:column="25">break;<pos:position pos:line="102" pos:column="31"/></break>
		<case pos:line="103" pos:column="17">case <expr><name pos:line="103" pos:column="22">GREP_AND<pos:position pos:line="103" pos:column="30"/></name></expr>:<pos:position pos:line="103" pos:column="31"/></case>
		<case pos:line="104" pos:column="17">case <expr><name pos:line="104" pos:column="22">GREP_OPEN_PAREN<pos:position pos:line="104" pos:column="37"/></name></expr>:<pos:position pos:line="104" pos:column="38"/></case>
		<case pos:line="105" pos:column="17">case <expr><name pos:line="105" pos:column="22">GREP_CLOSE_PAREN<pos:position pos:line="105" pos:column="38"/></name></expr>:<pos:position pos:line="105" pos:column="39"/></case>
		<case pos:line="106" pos:column="17">case <expr><name pos:line="106" pos:column="22">GREP_NOT<pos:position pos:line="106" pos:column="30"/></name></expr>:<pos:position pos:line="106" pos:column="31"/></case>
		<case pos:line="107" pos:column="17">case <expr><name pos:line="107" pos:column="22">GREP_OR<pos:position pos:line="107" pos:column="29"/></name></expr>:<pos:position pos:line="107" pos:column="30"/></case>
			<expr_stmt><expr><call><name pos:line="108" pos:column="25">argv_array_push<pos:position pos:line="108" pos:column="40"/></name><argument_list pos:line="108" pos:column="40">(<argument><expr><operator pos:line="108" pos:column="41">&amp;<pos:position pos:line="108" pos:column="46"/></operator><name pos:line="108" pos:column="42">submodule_options<pos:position pos:line="108" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="61">pattern<pos:position pos:line="108" pos:column="68"/></name><operator pos:line="108" pos:column="68">-&gt;<pos:position pos:line="108" pos:column="73"/></operator><name pos:line="108" pos:column="70">pattern<pos:position pos:line="108" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="79"/></expr_stmt>
			<break pos:line="109" pos:column="25">break;<pos:position pos:line="109" pos:column="31"/></break>
		<comment type="block" pos:line="110" pos:column="17">/* BODY and HEAD are not used by git-grep */</comment>
		<case pos:line="111" pos:column="17">case <expr><name pos:line="111" pos:column="22">GREP_PATTERN_BODY<pos:position pos:line="111" pos:column="39"/></name></expr>:<pos:position pos:line="111" pos:column="40"/></case>
		<case pos:line="112" pos:column="17">case <expr><name pos:line="112" pos:column="22">GREP_PATTERN_HEAD<pos:position pos:line="112" pos:column="39"/></name></expr>:<pos:position pos:line="112" pos:column="40"/></case>
			<break pos:line="113" pos:column="25">break;<pos:position pos:line="113" pos:column="31"/></break>
		}<pos:position pos:line="114" pos:column="18"/></block></switch>
	}<pos:position pos:line="115" pos:column="10"/></block></for>

	<comment type="block" pos:line="117" pos:column="9">/*
	 * Limit number of threads for child process to use.
	 * This is to prevent potential fork-bomb behavior of git-grep as each
	 * submodule process has its own thread pool.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="122" pos:column="9">argv_array_pushf<pos:position pos:line="122" pos:column="25"/></name><argument_list pos:line="122" pos:column="25">(<argument><expr><operator pos:line="122" pos:column="26">&amp;<pos:position pos:line="122" pos:column="31"/></operator><name pos:line="122" pos:column="27">submodule_options<pos:position pos:line="122" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="46">"--threads=%d"<pos:position pos:line="122" pos:column="60"/></literal></expr></argument>,
			 <argument><expr><call><name pos:line="123" pos:column="26">DIV_ROUND_UP<pos:position pos:line="123" pos:column="38"/></name><argument_list pos:line="123" pos:column="38">(<argument><expr><name pos:line="123" pos:column="39">num_threads<pos:position pos:line="123" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="52">2<pos:position pos:line="123" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="56"/></expr_stmt>

	<comment type="block" pos:line="125" pos:column="9">/* Add Pathspecs */</comment>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">argv_array_push<pos:position pos:line="126" pos:column="24"/></name><argument_list pos:line="126" pos:column="24">(<argument><expr><operator pos:line="126" pos:column="25">&amp;<pos:position pos:line="126" pos:column="30"/></operator><name pos:line="126" pos:column="26">submodule_options<pos:position pos:line="126" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="45">"--"<pos:position pos:line="126" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="51"/></expr_stmt>
	<for pos:line="127" pos:column="9">for <control pos:line="127" pos:column="13">(<init pos:line="127" pos:column="14">;<pos:position pos:line="127" pos:column="15"/></init> <condition><expr><operator pos:line="127" pos:column="16">*<pos:position pos:line="127" pos:column="17"/></operator><name pos:line="127" pos:column="17">argv<pos:position pos:line="127" pos:column="21"/></name></expr>;<pos:position pos:line="127" pos:column="22"/></condition> <incr><expr><name pos:line="127" pos:column="23">argv<pos:position pos:line="127" pos:column="27"/></name><operator pos:line="127" pos:column="27">++<pos:position pos:line="127" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="127" pos:column="30"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="17">argv_array_push<pos:position pos:line="128" pos:column="32"/></name><argument_list pos:line="128" pos:column="32">(<argument><expr><operator pos:line="128" pos:column="33">&amp;<pos:position pos:line="128" pos:column="38"/></operator><name pos:line="128" pos:column="34">submodule_options<pos:position pos:line="128" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="128" pos:column="53">*<pos:position pos:line="128" pos:column="54"/></operator><name pos:line="128" pos:column="54">argv<pos:position pos:line="128" pos:column="58"/></name></expr></argument>)<pos:position pos:line="128" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="60"/></expr_stmt></block></for>
}<pos:position pos:line="129" pos:column="2"/></block></function></unit>

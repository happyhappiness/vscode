<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2122_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_headers<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">data<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">unsigned<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">long<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">size<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">object<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">obj<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="47">struct<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">fsck_options<pos:position pos:line="2" pos:column="66"/></name></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">options<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">buffer<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">char<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></operator><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">data<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">i<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="25">size<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></condition> <incr><expr><name pos:line="7" pos:column="31">i<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">++<pos:position pos:line="7" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="35"/></control> <block pos:line="7" pos:column="36">{
		<switch pos:line="8" pos:column="17">switch <condition pos:line="8" pos:column="24">(<expr><name><name pos:line="8" pos:column="25">buffer<pos:position pos:line="8" pos:column="31"/></name><index pos:line="8" pos:column="31">[<expr><name pos:line="8" pos:column="32">i<pos:position pos:line="8" pos:column="33"/></name></expr>]<pos:position pos:line="8" pos:column="34"/></index></name></expr>)<pos:position pos:line="8" pos:column="35"/></condition> <block pos:line="8" pos:column="36">{
		<case pos:line="9" pos:column="17">case <expr><literal type="char" pos:line="9" pos:column="22">'\0'<pos:position pos:line="9" pos:column="26"/></literal></expr>:<pos:position pos:line="9" pos:column="27"/></case>
			<return pos:line="10" pos:column="25">return <expr><call><name pos:line="10" pos:column="32">report<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">options<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">obj<pos:position pos:line="10" pos:column="51"/></name></expr></argument>,
				<argument><expr><name pos:line="11" pos:column="33">FSCK_MSG_NUL_IN_HEADER<pos:position pos:line="11" pos:column="55"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="12" pos:column="33">"unterminated header: NUL at offset %ld"<pos:position pos:line="12" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="75">i<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="78"/></return>
		<case pos:line="13" pos:column="17">case <expr><literal type="char" pos:line="13" pos:column="22">'\n'<pos:position pos:line="13" pos:column="26"/></literal></expr>:<pos:position pos:line="13" pos:column="27"/></case>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">i<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">+<pos:position pos:line="14" pos:column="32"/></operator> <literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal> <operator pos:line="14" pos:column="35">&lt;<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="37">size<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">&amp;&amp;<pos:position pos:line="14" pos:column="52"/></operator> <name><name pos:line="14" pos:column="45">buffer<pos:position pos:line="14" pos:column="51"/></name><index pos:line="14" pos:column="51">[<expr><name pos:line="14" pos:column="52">i<pos:position pos:line="14" pos:column="53"/></name> <operator pos:line="14" pos:column="54">+<pos:position pos:line="14" pos:column="55"/></operator> <literal type="number" pos:line="14" pos:column="56">1<pos:position pos:line="14" pos:column="57"/></literal></expr>]<pos:position pos:line="14" pos:column="58"/></index></name> <operator pos:line="14" pos:column="59">==<pos:position pos:line="14" pos:column="61"/></operator> <literal type="char" pos:line="14" pos:column="62">'\n'<pos:position pos:line="14" pos:column="66"/></literal></expr>)<pos:position pos:line="14" pos:column="67"/></condition><then pos:line="14" pos:column="67">
				<block type="pseudo"><return pos:line="15" pos:column="33">return <expr><literal type="number" pos:line="15" pos:column="40">0<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="16" pos:column="18"/></block></switch>
	}<pos:position pos:line="17" pos:column="10"/></block></for>

	<comment type="block" pos:line="19" pos:column="9">/*
	 * We did not find double-LF that separates the header
	 * and the body.  Not having a body is not a crime but
	 * we do want to see the terminating LF for the last header
	 * line.
	 */</comment>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">size<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&amp;&amp;<pos:position pos:line="25" pos:column="28"/></operator> <name><name pos:line="25" pos:column="21">buffer<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><name pos:line="25" pos:column="28">size<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">-<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">1<pos:position pos:line="25" pos:column="36"/></literal></expr>]<pos:position pos:line="25" pos:column="37"/></index></name> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <literal type="char" pos:line="25" pos:column="41">'\n'<pos:position pos:line="25" pos:column="45"/></literal></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return></block></then></if>

	<return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">report<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">options<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">obj<pos:position pos:line="28" pos:column="35"/></name></expr></argument>,
		<argument><expr><name pos:line="29" pos:column="17">FSCK_MSG_UNTERMINATED_HEADER<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="47">"unterminated header"<pos:position pos:line="29" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="70"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

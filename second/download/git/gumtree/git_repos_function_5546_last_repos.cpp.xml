<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5546_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">show_merge_base<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">commit_list<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">seen<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">num_rev<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">all_mask<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><literal type="number" pos:line="3" pos:column="26">1u<pos:position pos:line="3" pos:column="28"/></literal> <operator pos:line="3" pos:column="29">&lt;&lt;<pos:position pos:line="3" pos:column="37"/></operator> <operator pos:line="3" pos:column="32">(<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">REV_SHIFT<pos:position pos:line="3" pos:column="42"/></name> <operator pos:line="3" pos:column="43">+<pos:position pos:line="3" pos:column="44"/></operator> <name pos:line="3" pos:column="45">num_rev<pos:position pos:line="3" pos:column="52"/></name><operator pos:line="3" pos:column="52">)<pos:position pos:line="3" pos:column="53"/></operator><operator pos:line="3" pos:column="53">)<pos:position pos:line="3" pos:column="54"/></operator> <operator pos:line="3" pos:column="55">-<pos:position pos:line="3" pos:column="56"/></operator> <literal type="number" pos:line="3" pos:column="57">1<pos:position pos:line="3" pos:column="58"/></literal><operator pos:line="3" pos:column="58">)<pos:position pos:line="3" pos:column="59"/></operator></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">all_revs<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">all_mask<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">&amp;<pos:position pos:line="4" pos:column="38"/></operator> <operator pos:line="4" pos:column="35">~<pos:position pos:line="4" pos:column="36"/></operator><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><operator pos:line="4" pos:column="37">(<pos:position pos:line="4" pos:column="38"/></operator><literal type="number" pos:line="4" pos:column="38">1u<pos:position pos:line="4" pos:column="40"/></literal> <operator pos:line="4" pos:column="41">&lt;&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="44">REV_SHIFT<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">)<pos:position pos:line="4" pos:column="54"/></operator> <operator pos:line="4" pos:column="55">-<pos:position pos:line="4" pos:column="56"/></operator> <literal type="number" pos:line="4" pos:column="57">1<pos:position pos:line="4" pos:column="58"/></literal><operator pos:line="4" pos:column="58">)<pos:position pos:line="4" pos:column="59"/></operator></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">exit_status<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">seen<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition> <block pos:line="7" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">commit<pos:position pos:line="8" pos:column="30"/></name></name> <modifier pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></modifier></type><name pos:line="8" pos:column="32">commit<pos:position pos:line="8" pos:column="38"/></name> <init pos:line="8" pos:column="39">= <expr><call><name pos:line="8" pos:column="41">pop_commit<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><operator pos:line="8" pos:column="52">&amp;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="53">seen<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">flags<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name><name pos:line="9" pos:column="29">commit<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">object<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">.<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">flags<pos:position pos:line="9" pos:column="49"/></name></name> <operator pos:line="9" pos:column="50">&amp;<pos:position pos:line="9" pos:column="55"/></operator> <name pos:line="9" pos:column="52">all_mask<pos:position pos:line="9" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="61"/></decl_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">flags<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="31">UNINTERESTING<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="46">&amp;&amp;<pos:position pos:line="10" pos:column="56"/></operator>
		    <operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">flags<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&amp;<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="31">all_revs<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">)<pos:position pos:line="11" pos:column="40"/></operator> <operator pos:line="11" pos:column="41">==<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">all_revs<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">)<pos:position pos:line="11" pos:column="53"/></operator></expr>)<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54"> <block pos:line="11" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">puts<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><call><name pos:line="12" pos:column="30">oid_to_hex<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator><name><name pos:line="12" pos:column="42">commit<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">object<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">.<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">oid<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name pos:line="13" pos:column="25">exit_status<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">=<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="14" pos:column="25">commit<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">object<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">.<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">flags<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">|=<pos:position pos:line="14" pos:column="48"/></operator> <name pos:line="14" pos:column="49">UNINTERESTING<pos:position pos:line="14" pos:column="62"/></name></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></while>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">exit_status<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

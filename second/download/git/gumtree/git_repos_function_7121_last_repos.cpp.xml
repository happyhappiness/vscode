<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7121_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_credential<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">buf<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">1024<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><call><name pos:line="5" pos:column="16">fgets<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">buf<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="27">sizeof<argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">buf<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">stdin<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="47"/></condition> <block pos:line="5" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">v<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">len<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">strlen<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">buf<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
		<comment type="block" pos:line="8" pos:column="17">/* strip trailing CR / LF */</comment>
		<while pos:line="9" pos:column="17">while <condition pos:line="9" pos:column="23">(<expr><name pos:line="9" pos:column="24">len<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&amp;&amp;<pos:position pos:line="9" pos:column="38"/></operator> <call><name pos:line="9" pos:column="31">strchr<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><literal type="string" pos:line="9" pos:column="38">"\r\n"<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="46">buf<pos:position pos:line="9" pos:column="49"/></name><index pos:line="9" pos:column="49">[<expr><name pos:line="9" pos:column="50">len<pos:position pos:line="9" pos:column="53"/></name> <operator pos:line="9" pos:column="54">-<pos:position pos:line="9" pos:column="55"/></operator> <literal type="number" pos:line="9" pos:column="56">1<pos:position pos:line="9" pos:column="57"/></literal></expr>]<pos:position pos:line="9" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="60"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="25">buf<pos:position pos:line="10" pos:column="28"/></name><index pos:line="10" pos:column="28">[<expr><operator pos:line="10" pos:column="29">--<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">len<pos:position pos:line="10" pos:column="34"/></name></expr>]<pos:position pos:line="10" pos:column="35"/></index></name> <operator pos:line="10" pos:column="36">=<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="38">0<pos:position pos:line="10" pos:column="39"/></literal></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt></block></while>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">buf<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
			<block type="pseudo"><break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="15" pos:column="17">v<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">strchr<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">buf<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="33">'='<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">v<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">die<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="string" pos:line="17" pos:column="29">"bad input: %s"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">buf<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">v<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">++<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="char" pos:line="18" pos:column="24">'\0'<pos:position pos:line="18" pos:column="28"/></literal></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">strcmp<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">buf<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"protocol"<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">protocol<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <call><name pos:line="21" pos:column="36">utf8_to_utf16_dup<pos:position pos:line="21" pos:column="53"/></name><argument_list pos:line="21" pos:column="53">(<argument><expr><name pos:line="21" pos:column="54">v<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt></block></then>
		<elseif pos:line="22" pos:column="17">else <if pos:line="22" pos:column="22">if <condition pos:line="22" pos:column="25">(<expr><operator pos:line="22" pos:column="26">!<pos:position pos:line="22" pos:column="27"/></operator><call><name pos:line="22" pos:column="27">strcmp<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">buf<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"host"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">host<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">utf8_to_utf16_dup<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">v<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><operator pos:line="24" pos:column="26">!<pos:position pos:line="24" pos:column="27"/></operator><call><name pos:line="24" pos:column="27">strcmp<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">buf<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="39">"path"<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">path<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <call><name pos:line="25" pos:column="32">utf8_to_utf16_dup<pos:position pos:line="25" pos:column="49"/></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name pos:line="25" pos:column="50">v<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="26" pos:column="17">else <if pos:line="26" pos:column="22">if <condition pos:line="26" pos:column="25">(<expr><operator pos:line="26" pos:column="26">!<pos:position pos:line="26" pos:column="27"/></operator><call><name pos:line="26" pos:column="27">strcmp<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">buf<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"username"<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51"> <block pos:line="26" pos:column="52">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">wusername<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <call><name pos:line="27" pos:column="37">utf8_to_utf16_dup<pos:position pos:line="27" pos:column="54"/></name><argument_list pos:line="27" pos:column="54">(<argument><expr><name pos:line="27" pos:column="55">v<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if></elseif> <elseif pos:line="28" pos:column="19">else <if pos:line="28" pos:column="24">if <condition pos:line="28" pos:column="27">(<expr><operator pos:line="28" pos:column="28">!<pos:position pos:line="28" pos:column="29"/></operator><call><name pos:line="28" pos:column="29">strcmp<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">buf<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">"password"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="53"/></condition><then pos:line="28" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">password<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <call><name pos:line="29" pos:column="36">utf8_to_utf16_dup<pos:position pos:line="29" pos:column="53"/></name><argument_list pos:line="29" pos:column="53">(<argument><expr><name pos:line="29" pos:column="54">v<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt></block></then></if></elseif>
		<else pos:line="30" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">die<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"unrecognized input"<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt></block></else></if>
	}<pos:position pos:line="32" pos:column="10"/></block></while>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1253_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_dotdot_1<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">arg<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">dotdot<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">rev_info<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">revs<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">flags<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="3" pos:column="28">int<pos:position pos:line="3" pos:column="31"/></name></type> <name pos:line="3" pos:column="32">cant_be_filename<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="4" pos:column="28">struct<pos:position pos:line="4" pos:column="34"/></name> <name pos:line="4" pos:column="35">object_context<pos:position pos:line="4" pos:column="49"/></name></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">a_oc<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="5" pos:column="28">struct<pos:position pos:line="5" pos:column="34"/></name> <name pos:line="5" pos:column="35">object_context<pos:position pos:line="5" pos:column="49"/></name></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type><name pos:line="5" pos:column="51">b_oc<pos:position pos:line="5" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="56"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">a_name<pos:position pos:line="7" pos:column="27"/></name></decl>, <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="30">b_name<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">object_id<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">a_oid<pos:position pos:line="8" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="33">b_oid<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">object<pos:position pos:line="9" pos:column="22"/></name></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">a_obj<pos:position pos:line="9" pos:column="29"/></name></decl>, <modifier pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="32">b_obj<pos:position pos:line="9" pos:column="37"/></name></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">int<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">a_flags<pos:position pos:line="10" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="31">b_flags<pos:position pos:line="10" pos:column="38"/></name></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">symmetric<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">unsigned<pos:position pos:line="12" pos:column="17"/></name> <name pos:line="12" pos:column="18">int<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">flags_exclude<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><name pos:line="12" pos:column="38">flags<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">^<pos:position pos:line="12" pos:column="45"/></operator> <operator pos:line="12" pos:column="46">(<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">UNINTERESTING<pos:position pos:line="12" pos:column="60"/></name> <operator pos:line="12" pos:column="61">|<pos:position pos:line="12" pos:column="62"/></operator> <name pos:line="12" pos:column="63">BOTTOM<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">)<pos:position pos:line="12" pos:column="70"/></operator></expr></init></decl>;<pos:position pos:line="12" pos:column="71"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">unsigned<pos:position pos:line="13" pos:column="17"/></name> <name pos:line="13" pos:column="18">int<pos:position pos:line="13" pos:column="21"/></name></type> <name pos:line="13" pos:column="22">oc_flags<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><name pos:line="13" pos:column="33">GET_SHA1_COMMITTISH<pos:position pos:line="13" pos:column="52"/></name> <operator pos:line="13" pos:column="53">|<pos:position pos:line="13" pos:column="54"/></operator> <name pos:line="13" pos:column="55">GET_SHA1_RECORD_PATH<pos:position pos:line="13" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="76"/></decl_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">a_name<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">arg<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">a_name<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">a_name<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="string" pos:line="17" pos:column="26">"HEAD"<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">b_name<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">dotdot<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">+<pos:position pos:line="19" pos:column="26"/></operator> <literal type="number" pos:line="19" pos:column="27">2<pos:position pos:line="19" pos:column="28"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">b_name<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">==<pos:position pos:line="20" pos:column="23"/></operator> <literal type="char" pos:line="20" pos:column="24">'.'<pos:position pos:line="20" pos:column="27"/></literal></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">symmetric<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">b_name<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">++<pos:position pos:line="22" pos:column="25"/></operator></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">b_name<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="17">b_name<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <literal type="string" pos:line="25" pos:column="26">"HEAD"<pos:position pos:line="25" pos:column="32"/></literal></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">get_sha1_with_context<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">a_name<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">oc_flags<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="53">a_oid<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">.<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="59">hash<pos:position pos:line="27" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="65">a_oc<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call> <operator pos:line="27" pos:column="71">||<pos:position pos:line="27" pos:column="73"/></operator>
	    <call><name pos:line="28" pos:column="13">get_sha1_with_context<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">b_name<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">oc_flags<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="53">b_oid<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">.<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">hash<pos:position pos:line="28" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">b_oc<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="71"/></condition><then pos:line="28" pos:column="71">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">-<pos:position pos:line="29" pos:column="25"/></operator><literal type="number" pos:line="29" pos:column="25">1<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></return></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">cant_be_filename<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31"> <block pos:line="31" pos:column="32">{
		<expr_stmt><expr><operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">dotdot<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <literal type="char" pos:line="32" pos:column="27">'.'<pos:position pos:line="32" pos:column="30"/></literal></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">verify_non_filename<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name><name pos:line="33" pos:column="37">revs<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">prefix<pos:position pos:line="33" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">arg<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">dotdot<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <literal type="char" pos:line="34" pos:column="27">'\0'<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="37" pos:column="9">a_obj<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <call><name pos:line="37" pos:column="17">parse_object<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><operator pos:line="37" pos:column="30">&amp;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="31">a_oid<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="38" pos:column="9">b_obj<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">parse_object<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><operator pos:line="38" pos:column="30">&amp;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="31">b_oid<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">a_obj<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">||<pos:position pos:line="39" pos:column="22"/></operator> <operator pos:line="39" pos:column="23">!<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">b_obj<pos:position pos:line="39" pos:column="29"/></name></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30">
		<block type="pseudo"><return pos:line="40" pos:column="17">return <expr><call><name pos:line="40" pos:column="24">dotdot_missing<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">arg<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">dotdot<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">revs<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="58">symmetric<pos:position pos:line="40" pos:column="67"/></name></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="69"/></return></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">symmetric<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24"> <block pos:line="42" pos:column="25">{
		<comment type="block" pos:line="43" pos:column="17">/* just A..B */</comment>
		<expr_stmt><expr><name pos:line="44" pos:column="17">b_flags<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">flags<pos:position pos:line="44" pos:column="32"/></name></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">a_flags<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">flags_exclude<pos:position pos:line="45" pos:column="40"/></name></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then> <else pos:line="46" pos:column="11">else <block pos:line="46" pos:column="16">{
		<comment type="block" pos:line="47" pos:column="17">/* A...B -- find merge bases between the two */</comment>
		<decl_stmt><decl><type><name><name pos:line="48" pos:column="17">struct<pos:position pos:line="48" pos:column="23"/></name> <name pos:line="48" pos:column="24">commit<pos:position pos:line="48" pos:column="30"/></name></name> <modifier pos:line="48" pos:column="31">*<pos:position pos:line="48" pos:column="32"/></modifier></type><name pos:line="48" pos:column="32">a<pos:position pos:line="48" pos:column="33"/></name></decl>, <modifier pos:line="48" pos:column="35">*<pos:position pos:line="48" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="48" pos:column="36">b<pos:position pos:line="48" pos:column="37"/></name></decl>;<pos:position pos:line="48" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="49" pos:column="17">struct<pos:position pos:line="49" pos:column="23"/></name> <name pos:line="49" pos:column="24">commit_list<pos:position pos:line="49" pos:column="35"/></name></name> <modifier pos:line="49" pos:column="36">*<pos:position pos:line="49" pos:column="37"/></modifier></type><name pos:line="49" pos:column="37">exclude<pos:position pos:line="49" pos:column="44"/></name></decl>;<pos:position pos:line="49" pos:column="45"/></decl_stmt>

		<expr_stmt><expr><name pos:line="51" pos:column="17">a<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">lookup_commit_reference<pos:position pos:line="51" pos:column="44"/></name><argument_list pos:line="51" pos:column="44">(<argument><expr><operator pos:line="51" pos:column="45">&amp;<pos:position pos:line="51" pos:column="50"/></operator><name><name pos:line="51" pos:column="46">a_obj<pos:position pos:line="51" pos:column="51"/></name><operator pos:line="51" pos:column="51">-&gt;<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="53">oid<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="52" pos:column="17">b<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <call><name pos:line="52" pos:column="21">lookup_commit_reference<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><operator pos:line="52" pos:column="45">&amp;<pos:position pos:line="52" pos:column="50"/></operator><name><name pos:line="52" pos:column="46">b_obj<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">-&gt;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="53">oid<pos:position pos:line="52" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><operator pos:line="53" pos:column="21">!<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">a<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">||<pos:position pos:line="53" pos:column="26"/></operator> <operator pos:line="53" pos:column="27">!<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">b<pos:position pos:line="53" pos:column="29"/></name></expr>)<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30">
			<block type="pseudo"><return pos:line="54" pos:column="25">return <expr><call><name pos:line="54" pos:column="32">dotdot_missing<pos:position pos:line="54" pos:column="46"/></name><argument_list pos:line="54" pos:column="46">(<argument><expr><name pos:line="54" pos:column="47">arg<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">dotdot<pos:position pos:line="54" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="60">revs<pos:position pos:line="54" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="66">symmetric<pos:position pos:line="54" pos:column="75"/></name></expr></argument>)<pos:position pos:line="54" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="77"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="56" pos:column="17">exclude<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">=<pos:position pos:line="56" pos:column="26"/></operator> <call><name pos:line="56" pos:column="27">get_merge_bases<pos:position pos:line="56" pos:column="42"/></name><argument_list pos:line="56" pos:column="42">(<argument><expr><name pos:line="56" pos:column="43">a<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">b<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">add_rev_cmdline_list<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name pos:line="57" pos:column="38">revs<pos:position pos:line="57" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="44">exclude<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="53">REV_CMD_MERGE_BASE<pos:position pos:line="57" pos:column="71"/></name></expr></argument>,
				     <argument><expr><name pos:line="58" pos:column="38">flags_exclude<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">add_pending_commit_list<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">revs<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">exclude<pos:position pos:line="59" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="56">flags_exclude<pos:position pos:line="59" pos:column="69"/></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">free_commit_list<pos:position pos:line="60" pos:column="33"/></name><argument_list pos:line="60" pos:column="33">(<argument><expr><name pos:line="60" pos:column="34">exclude<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>

		<expr_stmt><expr><name pos:line="62" pos:column="17">b_flags<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">flags<pos:position pos:line="62" pos:column="32"/></name></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="63" pos:column="17">a_flags<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">flags<pos:position pos:line="63" pos:column="32"/></name> <operator pos:line="63" pos:column="33">|<pos:position pos:line="63" pos:column="34"/></operator> <name pos:line="63" pos:column="35">SYMMETRIC_LEFT<pos:position pos:line="63" pos:column="49"/></name></expr>;<pos:position pos:line="63" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="64" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="66" pos:column="9">a_obj<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">flags<pos:position pos:line="66" pos:column="21"/></name></name> <operator pos:line="66" pos:column="22">|=<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">a_flags<pos:position pos:line="66" pos:column="32"/></name></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="67" pos:column="9">b_obj<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">-&gt;<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="16">flags<pos:position pos:line="67" pos:column="21"/></name></name> <operator pos:line="67" pos:column="22">|=<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="25">b_flags<pos:position pos:line="67" pos:column="32"/></name></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">add_rev_cmdline<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">revs<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="31">a_obj<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">a_name<pos:position pos:line="68" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="46">REV_CMD_LEFT<pos:position pos:line="68" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="60">a_flags<pos:position pos:line="68" pos:column="67"/></name></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">add_rev_cmdline<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">revs<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="31">b_obj<pos:position pos:line="69" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="38">b_name<pos:position pos:line="69" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">REV_CMD_RIGHT<pos:position pos:line="69" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="61">b_flags<pos:position pos:line="69" pos:column="68"/></name></expr></argument>)<pos:position pos:line="69" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">add_pending_object_with_path<pos:position pos:line="70" pos:column="37"/></name><argument_list pos:line="70" pos:column="37">(<argument><expr><name pos:line="70" pos:column="38">revs<pos:position pos:line="70" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="44">a_obj<pos:position pos:line="70" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="51">a_name<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="59">a_oc<pos:position pos:line="70" pos:column="63"/></name><operator pos:line="70" pos:column="63">-&gt;<pos:position pos:line="70" pos:column="68"/></operator><name pos:line="70" pos:column="65">mode<pos:position pos:line="70" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="71">a_oc<pos:position pos:line="70" pos:column="75"/></name><operator pos:line="70" pos:column="75">-&gt;<pos:position pos:line="70" pos:column="80"/></operator><name pos:line="70" pos:column="77">path<pos:position pos:line="70" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">add_pending_object_with_path<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">revs<pos:position pos:line="71" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="44">b_obj<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">b_name<pos:position pos:line="71" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="59">b_oc<pos:position pos:line="71" pos:column="63"/></name><operator pos:line="71" pos:column="63">-&gt;<pos:position pos:line="71" pos:column="68"/></operator><name pos:line="71" pos:column="65">mode<pos:position pos:line="71" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="71">b_oc<pos:position pos:line="71" pos:column="75"/></name><operator pos:line="71" pos:column="75">-&gt;<pos:position pos:line="71" pos:column="80"/></operator><name pos:line="71" pos:column="77">path<pos:position pos:line="71" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="83"/></expr_stmt>
	<return pos:line="72" pos:column="9">return <expr><literal type="number" pos:line="72" pos:column="16">0<pos:position pos:line="72" pos:column="17"/></literal></expr>;<pos:position pos:line="72" pos:column="18"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

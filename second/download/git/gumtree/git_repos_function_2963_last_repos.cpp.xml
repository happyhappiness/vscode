<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2963_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_message<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">buf<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">size_t<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">len<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">filename<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">append_eol<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">lock_file<pos:position pos:line="4" pos:column="32"/></name></name></type> <name pos:line="4" pos:column="33">msg_file<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">msg_fd<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><call><name pos:line="6" pos:column="22">hold_lock_file_for_update<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><operator pos:line="6" pos:column="48">&amp;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="49">msg_file<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="59">filename<pos:position pos:line="6" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="69">0<pos:position pos:line="6" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="72"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">msg_fd<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&lt;<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><call><name pos:line="8" pos:column="24">error_errno<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><call><name pos:line="8" pos:column="36">_<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><literal type="string" pos:line="8" pos:column="38">"could not lock '%s'"<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="62">filename<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></return></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">write_in_full<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">msg_fd<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">buf<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">len<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call> <operator pos:line="9" pos:column="45">&lt;<pos:position pos:line="9" pos:column="49"/></operator> <literal type="number" pos:line="9" pos:column="47">0<pos:position pos:line="9" pos:column="48"/></literal></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">rollback_lock_file<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="37">msg_file<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">error_errno<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><call><name pos:line="11" pos:column="36">_<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><literal type="string" pos:line="11" pos:column="38">"could not write to '%s'"<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="66">filename<pos:position pos:line="11" pos:column="74"/></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">append_eol<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">&amp;&amp;<pos:position pos:line="13" pos:column="34"/></operator> <call><name pos:line="13" pos:column="27">write<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">msg_fd<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="41">"\n"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="47">1<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call> <operator pos:line="13" pos:column="50">&lt;<pos:position pos:line="13" pos:column="54"/></operator> <literal type="number" pos:line="13" pos:column="52">0<pos:position pos:line="13" pos:column="53"/></literal></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54"> <block pos:line="13" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">rollback_lock_file<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="37">msg_file<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><call><name pos:line="15" pos:column="24">error_errno<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><call><name pos:line="15" pos:column="36">_<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><literal type="string" pos:line="15" pos:column="38">"could not write eol to '%s'"<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="70">filename<pos:position pos:line="15" pos:column="78"/></name></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">commit_lock_file<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><operator pos:line="17" pos:column="30">&amp;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="31">msg_file<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">&lt;<pos:position pos:line="17" pos:column="45"/></operator> <literal type="number" pos:line="17" pos:column="43">0<pos:position pos:line="17" pos:column="44"/></literal></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45"> <block pos:line="17" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">rollback_lock_file<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><operator pos:line="18" pos:column="36">&amp;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="37">msg_file<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">error<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><call><name pos:line="19" pos:column="30">_<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><literal type="string" pos:line="19" pos:column="32">"failed to finalize '%s'."<pos:position pos:line="19" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="61">filename<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

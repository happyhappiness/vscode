<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2562_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_paths<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">string_list<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">update<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name pos:line="4" pos:column="18">hold_locked_index<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><operator pos:line="4" pos:column="36">&amp;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="37">index_lock<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">fd<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">&lt;<pos:position pos:line="7" pos:column="20"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name pos:line="10" pos:column="21">i<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <name><name pos:line="10" pos:column="25">update<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">nr<pos:position pos:line="10" pos:column="35"/></name></name></expr>;<pos:position pos:line="10" pos:column="36"/></condition> <incr><expr><name pos:line="10" pos:column="37">i<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">++<pos:position pos:line="10" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="41"/></control> <block pos:line="10" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">string_list_item<pos:position pos:line="11" pos:column="40"/></name></name> <modifier pos:line="11" pos:column="41">*<pos:position pos:line="11" pos:column="42"/></modifier></type><name pos:line="11" pos:column="42">item<pos:position pos:line="11" pos:column="46"/></name> <init pos:line="11" pos:column="47">= <expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name><name pos:line="11" pos:column="50">update<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">-&gt;<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="58">items<pos:position pos:line="11" pos:column="63"/></name><index pos:line="11" pos:column="63">[<expr><name pos:line="11" pos:column="64">i<pos:position pos:line="11" pos:column="65"/></name></expr>]<pos:position pos:line="11" pos:column="66"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="67"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">add_file_to_cache<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name><name pos:line="12" pos:column="39">item<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">string<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">ADD_CACHE_IGNORE_ERRORS<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="78"/></condition><then pos:line="12" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">status<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <operator pos:line="13" pos:column="34">-<pos:position pos:line="13" pos:column="35"/></operator><literal type="number" pos:line="13" pos:column="35">1<pos:position pos:line="13" pos:column="36"/></literal></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">status<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&amp;&amp;<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="24">active_cache_changed<pos:position pos:line="16" pos:column="44"/></name></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">write_cache<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">fd<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">active_cache<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">active_nr<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call> <operator pos:line="17" pos:column="62">||<pos:position pos:line="17" pos:column="64"/></operator>
		    <call><name pos:line="18" pos:column="21">commit_locked_index<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="42">index_lock<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="string" pos:line="19" pos:column="29">"Unable to write new index file"<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><name pos:line="20" pos:column="20">fd<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&gt;=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">rollback_lock_file<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="37">index_lock<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt></block></then></if></elseif></if>
	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">status<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

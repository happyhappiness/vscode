<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1738_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">remove_leading_path<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">in<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">strbuf<pos:position pos:line="3" pos:column="29"/></name></name></type> <name pos:line="3" pos:column="30">buf<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">STRBUF_INIT<pos:position pos:line="3" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">j<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">prefix<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">||<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">!<pos:position pos:line="6" pos:column="25"/></operator><name><name pos:line="6" pos:column="25">prefix<pos:position pos:line="6" pos:column="31"/></name><index pos:line="6" pos:column="31">[<expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr>]<pos:position pos:line="6" pos:column="34"/></index></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">in<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name><name pos:line="8" pos:column="16">prefix<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">i<pos:position pos:line="8" pos:column="24"/></name></expr>]<pos:position pos:line="8" pos:column="25"/></index></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition> <block pos:line="8" pos:column="27">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">is_dir_sep<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name><name pos:line="9" pos:column="32">prefix<pos:position pos:line="9" pos:column="38"/></name><index pos:line="9" pos:column="38">[<expr><name pos:line="9" pos:column="39">i<pos:position pos:line="9" pos:column="40"/></name></expr>]<pos:position pos:line="9" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><operator pos:line="10" pos:column="29">!<pos:position pos:line="10" pos:column="30"/></operator><call><name pos:line="10" pos:column="30">is_dir_sep<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><name><name pos:line="10" pos:column="41">in<pos:position pos:line="10" pos:column="43"/></name><index pos:line="10" pos:column="43">[<expr><name pos:line="10" pos:column="44">j<pos:position pos:line="10" pos:column="45"/></name></expr>]<pos:position pos:line="10" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
				<block type="pseudo"><return pos:line="11" pos:column="33">return <expr><name pos:line="11" pos:column="40">in<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></return></block></then></if>
			<while pos:line="12" pos:column="25">while <condition pos:line="12" pos:column="31">(<expr><call><name pos:line="12" pos:column="32">is_dir_sep<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name><name pos:line="12" pos:column="43">prefix<pos:position pos:line="12" pos:column="49"/></name><index pos:line="12" pos:column="49">[<expr><name pos:line="12" pos:column="50">i<pos:position pos:line="12" pos:column="51"/></name></expr>]<pos:position pos:line="12" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="54"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="33">i<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">++<pos:position pos:line="13" pos:column="36"/></operator></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt></block></while>
			<while pos:line="14" pos:column="25">while <condition pos:line="14" pos:column="31">(<expr><call><name pos:line="14" pos:column="32">is_dir_sep<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name><name pos:line="14" pos:column="43">in<pos:position pos:line="14" pos:column="45"/></name><index pos:line="14" pos:column="45">[<expr><name pos:line="14" pos:column="46">j<pos:position pos:line="14" pos:column="47"/></name></expr>]<pos:position pos:line="14" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="50"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="33">j<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">++<pos:position pos:line="15" pos:column="36"/></operator></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt></block></while>
			<continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><name><name pos:line="17" pos:column="28">in<pos:position pos:line="17" pos:column="30"/></name><index pos:line="17" pos:column="30">[<expr><name pos:line="17" pos:column="31">j<pos:position pos:line="17" pos:column="32"/></name></expr>]<pos:position pos:line="17" pos:column="33"/></index></name> <operator pos:line="17" pos:column="34">!=<pos:position pos:line="17" pos:column="36"/></operator> <name><name pos:line="17" pos:column="37">prefix<pos:position pos:line="17" pos:column="43"/></name><index pos:line="17" pos:column="43">[<expr><name pos:line="17" pos:column="44">i<pos:position pos:line="17" pos:column="45"/></name></expr>]<pos:position pos:line="17" pos:column="46"/></index></name></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47"> <block pos:line="17" pos:column="48">{
			<return pos:line="18" pos:column="25">return <expr><name pos:line="18" pos:column="32">in<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">++<pos:position pos:line="20" pos:column="20"/></operator></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">j<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">++<pos:position pos:line="21" pos:column="20"/></operator></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></while>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(
	    <comment type="block" pos:line="24" pos:column="13">/* "/foo" is a prefix of "/foo" */</comment>
	    <expr><name><name pos:line="25" pos:column="13">in<pos:position pos:line="25" pos:column="15"/></name><index pos:line="25" pos:column="15">[<expr><name pos:line="25" pos:column="16">j<pos:position pos:line="25" pos:column="17"/></name></expr>]<pos:position pos:line="25" pos:column="18"/></index></name> <operator pos:line="25" pos:column="19">&amp;&amp;<pos:position pos:line="25" pos:column="29"/></operator>
	    <comment type="block" pos:line="26" pos:column="13">/* "/foo" is not a prefix of "/foobar" */</comment>
	    <operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">is_dir_sep<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name><name pos:line="27" pos:column="25">prefix<pos:position pos:line="27" pos:column="31"/></name><index pos:line="27" pos:column="31">[<expr><name pos:line="27" pos:column="32">i<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-<pos:position pos:line="27" pos:column="34"/></operator><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>]<pos:position pos:line="27" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call> <operator pos:line="27" pos:column="38">&amp;&amp;<pos:position pos:line="27" pos:column="48"/></operator> <operator pos:line="27" pos:column="41">!<pos:position pos:line="27" pos:column="42"/></operator><call><name pos:line="27" pos:column="42">is_dir_sep<pos:position pos:line="27" pos:column="52"/></name><argument_list pos:line="27" pos:column="52">(<argument><expr><name><name pos:line="27" pos:column="53">in<pos:position pos:line="27" pos:column="55"/></name><index pos:line="27" pos:column="55">[<expr><name pos:line="27" pos:column="56">j<pos:position pos:line="27" pos:column="57"/></name></expr>]<pos:position pos:line="27" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>
	   )<pos:position pos:line="28" pos:column="13"/></condition><then pos:line="28" pos:column="13">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">in<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></return></block></then></if>
	<while pos:line="30" pos:column="9">while <condition pos:line="30" pos:column="15">(<expr><call><name pos:line="30" pos:column="16">is_dir_sep<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name><name pos:line="30" pos:column="27">in<pos:position pos:line="30" pos:column="29"/></name><index pos:line="30" pos:column="29">[<expr><name pos:line="30" pos:column="30">j<pos:position pos:line="30" pos:column="31"/></name></expr>]<pos:position pos:line="30" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="34"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">j<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">++<pos:position pos:line="31" pos:column="20"/></operator></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt></block></while>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">strbuf_reset<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><operator pos:line="33" pos:column="22">&amp;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="23">buf<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name><name pos:line="34" pos:column="14">in<pos:position pos:line="34" pos:column="16"/></name><index pos:line="34" pos:column="16">[<expr><name pos:line="34" pos:column="17">j<pos:position pos:line="34" pos:column="18"/></name></expr>]<pos:position pos:line="34" pos:column="19"/></index></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">strbuf_addstr<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="32">buf<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="37">"."<pos:position pos:line="35" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt></block></then>
	<else pos:line="36" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">strbuf_addstr<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><operator pos:line="37" pos:column="31">&amp;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="32">buf<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">in<pos:position pos:line="37" pos:column="39"/></name> <operator pos:line="37" pos:column="40">+<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="42">j<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt></block></else></if>
	<return pos:line="38" pos:column="9">return <expr><name><name pos:line="38" pos:column="16">buf<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">buf<pos:position pos:line="38" pos:column="23"/></name></name></expr>;<pos:position pos:line="38" pos:column="24"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

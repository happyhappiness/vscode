<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_630_git-2.9.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">parse_signature<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buf<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">unsigned<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">long<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">size<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">eol<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&lt;<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="22">size<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&amp;&amp;<pos:position pos:line="5" pos:column="37"/></operator> <operator pos:line="5" pos:column="30">!<pos:position pos:line="5" pos:column="31"/></operator><call><name pos:line="5" pos:column="31">starts_with<pos:position pos:line="5" pos:column="42"/></name><argument_list pos:line="5" pos:column="42">(<argument><expr><name pos:line="5" pos:column="43">buf<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">+<pos:position pos:line="5" pos:column="48"/></operator> <name pos:line="5" pos:column="49">len<pos:position pos:line="5" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="54">PGP_SIGNATURE<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call> <operator pos:line="5" pos:column="69">&amp;&amp;<pos:position pos:line="5" pos:column="79"/></operator>
			<operator pos:line="6" pos:column="25">!<pos:position pos:line="6" pos:column="26"/></operator><call><name pos:line="6" pos:column="26">starts_with<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">buf<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">+<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">len<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">PGP_MESSAGE<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="62"/></condition> <block pos:line="6" pos:column="63">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">eol<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">memchr<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">buf<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">+<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="36">len<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="41">'\n'<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">size<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">-<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="54">len<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">+=<pos:position pos:line="8" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="8" pos:column="24">eol<pos:position pos:line="8" pos:column="27"/></name></expr> ?<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <expr><name pos:line="8" pos:column="30">eol<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">-<pos:position pos:line="8" pos:column="35"/></operator> <operator pos:line="8" pos:column="36">(<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">buf<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">+<pos:position pos:line="8" pos:column="42"/></operator> <name pos:line="8" pos:column="43">len<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator> <operator pos:line="8" pos:column="48">+<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="50">1<pos:position pos:line="8" pos:column="51"/></literal></expr> <pos:position pos:line="8" pos:column="52"/></then><else pos:line="8" pos:column="52">: <expr><name pos:line="8" pos:column="54">size<pos:position pos:line="8" pos:column="58"/></name> <operator pos:line="8" pos:column="59">-<pos:position pos:line="8" pos:column="60"/></operator> <name pos:line="8" pos:column="61">len<pos:position pos:line="8" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></while>
	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

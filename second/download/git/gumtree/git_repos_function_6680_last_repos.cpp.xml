<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6680_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">_obstack_allocated_p<pos:position pos:line="2" pos:column="21"/></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">obstack<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">h<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">void<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">obj<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">register<pos:position pos:line="4" pos:column="11"/></specifier> <name><name pos:line="4" pos:column="12">struct<pos:position pos:line="4" pos:column="18"/></name> <name pos:line="4" pos:column="19">_obstack_chunk<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">lp<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>	<comment type="block" pos:line="4" pos:column="41">/* below addr of any objects in this chunk */</comment>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">register<pos:position pos:line="5" pos:column="11"/></specifier> <name><name pos:line="5" pos:column="12">struct<pos:position pos:line="5" pos:column="18"/></name> <name pos:line="5" pos:column="19">_obstack_chunk<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">plp<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>	<comment type="block" pos:line="5" pos:column="41">/* point to previous chunk if any */</comment>

  <expr_stmt><expr><name pos:line="7" pos:column="3">lp<pos:position pos:line="7" pos:column="5"/></name> <operator pos:line="7" pos:column="6">=<pos:position pos:line="7" pos:column="7"/></operator> <name><operator pos:line="7" pos:column="8">(<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">h<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">)<pos:position pos:line="7" pos:column="11"/></operator><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">chunk<pos:position pos:line="7" pos:column="18"/></name></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
  <comment type="block" pos:line="8" pos:column="3">/* We use &gt;= rather than &gt; since the object cannot be exactly at
     the beginning of the chunk but might be an empty object exactly
     at the end of an adjacent chunk.  */</comment>
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><name pos:line="11" pos:column="10">lp<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">!=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&amp;&amp;<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">void<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></operator><operator pos:line="11" pos:column="32">)<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">lp<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&gt;=<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="40">obj<pos:position pos:line="11" pos:column="43"/></name> <operator pos:line="11" pos:column="44">||<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="47">(<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">void<pos:position pos:line="11" pos:column="52"/></name> <operator pos:line="11" pos:column="53">*<pos:position pos:line="11" pos:column="54"/></operator><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator> <name><operator pos:line="11" pos:column="56">(<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="57">lp<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">)<pos:position pos:line="11" pos:column="60"/></operator><operator pos:line="11" pos:column="60">-&gt;<pos:position pos:line="11" pos:column="65"/></operator><name pos:line="11" pos:column="62">limit<pos:position pos:line="11" pos:column="67"/></name></name> <operator pos:line="11" pos:column="68">&lt;<pos:position pos:line="11" pos:column="72"/></operator> <name pos:line="11" pos:column="70">obj<pos:position pos:line="11" pos:column="73"/></name><operator pos:line="11" pos:column="73">)<pos:position pos:line="11" pos:column="74"/></operator></expr>)<pos:position pos:line="11" pos:column="75"/></condition>
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">plp<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name><name pos:line="13" pos:column="13">lp<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">prev<pos:position pos:line="13" pos:column="21"/></name></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">lp<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">plp<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></while>
  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">lp<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">!=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3161_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">remote_ls<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">flags<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
		      <parameter><function_decl><type><name pos:line="2" pos:column="23">void<pos:position pos:line="2" pos:column="27"/></name></type> (<modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier><name pos:line="2" pos:column="30">userFunc<pos:position pos:line="2" pos:column="38"/></name>)<parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">remote_ls_ctx<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">ls<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list></function_decl></parameter>,
		      <parameter><decl><type><name pos:line="3" pos:column="23">void<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">userData<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="38"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">url<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">xstrfmt<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><literal type="string" pos:line="5" pos:column="29">"%s%s"<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="37">repo<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">url<pos:position pos:line="5" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="48">path<pos:position pos:line="5" pos:column="52"/></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">active_request_slot<pos:position pos:line="6" pos:column="35"/></name></name> <modifier pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></modifier></type><name pos:line="6" pos:column="37">slot<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">slot_results<pos:position pos:line="7" pos:column="28"/></name></name></type> <name pos:line="7" pos:column="29">results<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">in_buffer<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">STRBUF_INIT<pos:position pos:line="8" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">buffer<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">out_buffer<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><block pos:line="9" pos:column="36">{ <expr><name pos:line="9" pos:column="38">STRBUF_INIT<pos:position pos:line="9" pos:column="49"/></name></expr>, <expr><literal type="number" pos:line="9" pos:column="51">0<pos:position pos:line="9" pos:column="52"/></literal></expr> }<pos:position pos:line="9" pos:column="54"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">curl_slist<pos:position pos:line="10" pos:column="26"/></name></name> <modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier></type><name pos:line="10" pos:column="28">dav_headers<pos:position pos:line="10" pos:column="39"/></name> <init pos:line="10" pos:column="40">= <expr><name pos:line="10" pos:column="42">NULL<pos:position pos:line="10" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">xml_ctx<pos:position pos:line="11" pos:column="23"/></name></name></type> <name pos:line="11" pos:column="24">ctx<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">remote_ls_ctx<pos:position pos:line="12" pos:column="29"/></name></name></type> <name pos:line="12" pos:column="30">ls<pos:position pos:line="12" pos:column="32"/></name></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="14" pos:column="9">ls<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">flags<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">flags<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">ls<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">path<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">xstrdup<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">path<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">ls<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">dentry_name<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">NULL<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ls<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">dentry_flags<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <literal type="number" pos:line="17" pos:column="27">0<pos:position pos:line="17" pos:column="28"/></literal></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">ls<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">userData<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">userData<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">ls<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">userFunc<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">userFunc<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">strbuf_addf<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><operator pos:line="21" pos:column="21">&amp;<pos:position pos:line="21" pos:column="26"/></operator><name><name pos:line="21" pos:column="22">out_buffer<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">buf<pos:position pos:line="21" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">PROPFIND_ALL_REQUEST<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>

	<expr_stmt><expr><name pos:line="23" pos:column="9">dav_headers<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">curl_slist_append<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">dav_headers<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="54">"Depth: 1"<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">dav_headers<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <call><name pos:line="24" pos:column="23">curl_slist_append<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">dav_headers<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="54">"Content-Type: text/xml"<pos:position pos:line="24" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt>

	<expr_stmt><expr><name pos:line="26" pos:column="9">slot<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">get_active_slot<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">()<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">slot<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">results<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <operator pos:line="27" pos:column="25">&amp;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="26">results<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">curl_setup_http<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name><name pos:line="28" pos:column="25">slot<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">curl<pos:position pos:line="28" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">url<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">DAV_PROPFIND<pos:position pos:line="28" pos:column="54"/></name></expr></argument>,
			<argument><expr><operator pos:line="29" pos:column="25">&amp;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="26">out_buffer<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">fwrite_buffer<pos:position pos:line="29" pos:column="51"/></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">curl_easy_setopt<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">slot<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">curl<pos:position pos:line="30" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">CURLOPT_HTTPHEADER<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">dav_headers<pos:position pos:line="30" pos:column="69"/></name></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">curl_easy_setopt<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">slot<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">curl<pos:position pos:line="31" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">CURLOPT_FILE<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="52">&amp;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="53">in_buffer<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">start_active_slot<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">slot<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="37"/></condition><then pos:line="33" pos:column="37"> <block pos:line="33" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">run_active_slot<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">slot<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">results<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">curl_result<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">==<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="44">CURLE_OK<pos:position pos:line="35" pos:column="52"/></name></expr>)<pos:position pos:line="35" pos:column="53"/></condition><then pos:line="35" pos:column="53"> <block pos:line="35" pos:column="54">{
			<decl_stmt><decl><type><name pos:line="36" pos:column="25">XML_Parser<pos:position pos:line="36" pos:column="35"/></name></type> <name pos:line="36" pos:column="36">parser<pos:position pos:line="36" pos:column="42"/></name> <init pos:line="36" pos:column="43">= <expr><call><name pos:line="36" pos:column="45">XML_ParserCreate<pos:position pos:line="36" pos:column="61"/></name><argument_list pos:line="36" pos:column="61">(<argument><expr><name pos:line="36" pos:column="62">NULL<pos:position pos:line="36" pos:column="66"/></name></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="68"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="37" pos:column="25">enum<pos:position pos:line="37" pos:column="29"/></name> <name pos:line="37" pos:column="30">XML_Status<pos:position pos:line="37" pos:column="40"/></name></name></type> <name pos:line="37" pos:column="41">result<pos:position pos:line="37" pos:column="47"/></name></decl>;<pos:position pos:line="37" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="38" pos:column="25">ctx<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">.<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">name<pos:position pos:line="38" pos:column="33"/></name></name> <operator pos:line="38" pos:column="34">=<pos:position pos:line="38" pos:column="35"/></operator> <call><name pos:line="38" pos:column="36">xcalloc<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><literal type="number" pos:line="38" pos:column="44">10<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="48">1<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">ctx<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">.<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="29">len<pos:position pos:line="39" pos:column="32"/></name></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <literal type="number" pos:line="39" pos:column="35">0<pos:position pos:line="39" pos:column="36"/></literal></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">ctx<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">.<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="29">cdata<pos:position pos:line="40" pos:column="34"/></name></name> <operator pos:line="40" pos:column="35">=<pos:position pos:line="40" pos:column="36"/></operator> <name pos:line="40" pos:column="37">NULL<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">ctx<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">.<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">userFunc<pos:position pos:line="41" pos:column="37"/></name></name> <operator pos:line="41" pos:column="38">=<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">handle_remote_ls_ctx<pos:position pos:line="41" pos:column="60"/></name></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="42" pos:column="25">ctx<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">userData<pos:position pos:line="42" pos:column="37"/></name></name> <operator pos:line="42" pos:column="38">=<pos:position pos:line="42" pos:column="39"/></operator> <operator pos:line="42" pos:column="40">&amp;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="41">ls<pos:position pos:line="42" pos:column="43"/></name></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">XML_SetUserData<pos:position pos:line="43" pos:column="40"/></name><argument_list pos:line="43" pos:column="40">(<argument><expr><name pos:line="43" pos:column="41">parser<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="49">&amp;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="50">ctx<pos:position pos:line="43" pos:column="53"/></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">XML_SetElementHandler<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">parser<pos:position pos:line="44" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="55">xml_start_tag<pos:position pos:line="44" pos:column="68"/></name></expr></argument>,
					      <argument><expr><name pos:line="45" pos:column="47">xml_end_tag<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">XML_SetCharacterDataHandler<pos:position pos:line="46" pos:column="52"/></name><argument_list pos:line="46" pos:column="52">(<argument><expr><name pos:line="46" pos:column="53">parser<pos:position pos:line="46" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="61">xml_cdata<pos:position pos:line="46" pos:column="70"/></name></expr></argument>)<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">result<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <call><name pos:line="47" pos:column="34">XML_Parse<pos:position pos:line="47" pos:column="43"/></name><argument_list pos:line="47" pos:column="43">(<argument><expr><name pos:line="47" pos:column="44">parser<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="52">in_buffer<pos:position pos:line="47" pos:column="61"/></name><operator pos:line="47" pos:column="61">.<pos:position pos:line="47" pos:column="62"/></operator><name pos:line="47" pos:column="62">buf<pos:position pos:line="47" pos:column="65"/></name></name></expr></argument>,
					   <argument><expr><name><name pos:line="48" pos:column="44">in_buffer<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">.<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="54">len<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="59">1<pos:position pos:line="48" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">free<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name><name pos:line="49" pos:column="30">ctx<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">.<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="34">name<pos:position pos:line="49" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>

			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name pos:line="51" pos:column="29">result<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">!=<pos:position pos:line="51" pos:column="38"/></operator> <name pos:line="51" pos:column="39">XML_STATUS_OK<pos:position pos:line="51" pos:column="52"/></name></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53"> <block pos:line="51" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="52" pos:column="33">fprintf<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">stderr<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="49">"XML error: %s\n"<pos:position pos:line="52" pos:column="66"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="53" pos:column="41">XML_ErrorString<pos:position pos:line="53" pos:column="56"/></name><argument_list pos:line="53" pos:column="56">(
						<argument><expr><call><name pos:line="54" pos:column="49">XML_GetErrorCode<pos:position pos:line="54" pos:column="65"/></name><argument_list pos:line="54" pos:column="65">(<argument><expr><name pos:line="54" pos:column="66">parser<pos:position pos:line="54" pos:column="72"/></name></expr></argument>)<pos:position pos:line="54" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">XML_ParserFree<pos:position pos:line="56" pos:column="39"/></name><argument_list pos:line="56" pos:column="39">(<argument><expr><name pos:line="56" pos:column="40">parser<pos:position pos:line="56" pos:column="46"/></name></expr></argument>)<pos:position pos:line="56" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
	}<pos:position pos:line="58" pos:column="10"/></block></then> <else pos:line="58" pos:column="11">else <block pos:line="58" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">fprintf<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">stderr<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="33">"Unable to start PROPFIND request\n"<pos:position pos:line="59" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="62" pos:column="9">free<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name><name pos:line="62" pos:column="14">ls<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">.<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">path<pos:position pos:line="62" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">free<pos:position pos:line="63" pos:column="13"/></name><argument_list pos:line="63" pos:column="13">(<argument><expr><name pos:line="63" pos:column="14">url<pos:position pos:line="63" pos:column="17"/></name></expr></argument>)<pos:position pos:line="63" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">strbuf_release<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><operator pos:line="64" pos:column="24">&amp;<pos:position pos:line="64" pos:column="29"/></operator><name><name pos:line="64" pos:column="25">out_buffer<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">.<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="36">buf<pos:position pos:line="64" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">strbuf_release<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><operator pos:line="65" pos:column="24">&amp;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="25">in_buffer<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">curl_slist_free_all<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><name pos:line="66" pos:column="29">dav_headers<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

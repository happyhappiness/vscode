<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2161.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">FILE<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">fdopen_lock_file<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">lock_file<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">lk<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">mode<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">lk<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">active<pos:position pos:line="3" pos:column="24"/></name></name></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">die<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><literal type="string" pos:line="4" pos:column="21">"BUG: fdopen_lock_file() called for unlocked object"<pos:position pos:line="4" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="75"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">lk<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">fp<pos:position pos:line="5" pos:column="19"/></name></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"BUG: fdopen_lock_file() called twice for file '%s'"<pos:position pos:line="6" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="75">lk<pos:position pos:line="6" pos:column="77"/></name><operator pos:line="6" pos:column="77">-&gt;<pos:position pos:line="6" pos:column="82"/></operator><name pos:line="6" pos:column="79">filename<pos:position pos:line="6" pos:column="87"/></name><operator pos:line="6" pos:column="87">.<pos:position pos:line="6" pos:column="88"/></operator><name pos:line="6" pos:column="88">buf<pos:position pos:line="6" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="93"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="8" pos:column="9">lk<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">fp<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">fdopen<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name><name pos:line="8" pos:column="25">lk<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">fd<pos:position pos:line="8" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">mode<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
	<return pos:line="9" pos:column="9">return <expr><name><name pos:line="9" pos:column="16">lk<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">fp<pos:position pos:line="9" pos:column="22"/></name></name></expr>;<pos:position pos:line="9" pos:column="23"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6742_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">peek_token<pos:position pos:line="3" pos:column="11"/></name> <parameter_list pos:line="3" pos:column="12">(<parameter><decl><type><name pos:line="3" pos:column="13">re_token_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">token<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="32">re_string_t<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">input<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">reg_syntax_t<pos:position pos:line="3" pos:column="64"/></name></type> <name pos:line="3" pos:column="65">syntax<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">c<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">re_string_eoi<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">input<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="9" pos:column="7">token<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">type<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">END_OF_RE<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
      <return pos:line="10" pos:column="7">return <expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">c<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <call><name pos:line="13" pos:column="7">re_string_peek_byte<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">input<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">token<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">opr<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">.<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">c<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">c<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="16" pos:column="3">token<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">word_char<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="17" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">token<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">-&gt;<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="10">mb_partial<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name><name pos:line="19" pos:column="7">input<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">mb_cur_max<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">&gt;<pos:position pos:line="19" pos:column="29"/></operator> <literal type="number" pos:line="19" pos:column="27">1<pos:position pos:line="19" pos:column="28"/></literal> <operator pos:line="19" pos:column="29">&amp;&amp;<pos:position pos:line="19" pos:column="39"/></operator>
      <operator pos:line="20" pos:column="7">!<pos:position pos:line="20" pos:column="8"/></operator><call><name pos:line="20" pos:column="8">re_string_first_byte<pos:position pos:line="20" pos:column="28"/></name> <argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">input<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="37">re_string_cur_idx<pos:position pos:line="20" pos:column="54"/></name> <argument_list pos:line="20" pos:column="55">(<argument><expr><name pos:line="20" pos:column="56">input<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="64"/></condition><then pos:line="20" pos:column="64">
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">token<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">type<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">CHARACTER<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">token<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">mb_partial<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="27">1<pos:position pos:line="23" pos:column="28"/></literal></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">c<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">==<pos:position pos:line="27" pos:column="11"/></operator> <literal type="char" pos:line="27" pos:column="12">'\\'<pos:position pos:line="27" pos:column="16"/></literal></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
    <block pos:line="28" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">unsigned<pos:position pos:line="29" pos:column="15"/></name> <name pos:line="29" pos:column="16">char<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">c2<pos:position pos:line="29" pos:column="23"/></name></decl>;<pos:position pos:line="29" pos:column="24"/></decl_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><call><name pos:line="30" pos:column="11">re_string_cur_idx<pos:position pos:line="30" pos:column="28"/></name> <argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">input<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call> <operator pos:line="30" pos:column="37">+<pos:position pos:line="30" pos:column="38"/></operator> <literal type="number" pos:line="30" pos:column="39">1<pos:position pos:line="30" pos:column="40"/></literal> <operator pos:line="30" pos:column="41">&gt;=<pos:position pos:line="30" pos:column="46"/></operator> <call><name pos:line="30" pos:column="44">re_string_length<pos:position pos:line="30" pos:column="60"/></name> <argument_list pos:line="30" pos:column="61">(<argument><expr><name pos:line="30" pos:column="62">input<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="69"/></condition><then pos:line="30" pos:column="69">
	<block pos:line="31" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="32" pos:column="11">token<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">type<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">BACK_SLASH<pos:position pos:line="32" pos:column="35"/></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
	  <return pos:line="33" pos:column="11">return <expr><literal type="number" pos:line="33" pos:column="18">1<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

      <expr_stmt><expr><name pos:line="36" pos:column="7">c2<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">re_string_peek_byte_case<pos:position pos:line="36" pos:column="36"/></name> <argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">input<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="45">1<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="37" pos:column="7">token<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">opr<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">.<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">c<pos:position pos:line="37" pos:column="19"/></name></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">c2<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">token<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">type<pos:position pos:line="38" pos:column="18"/></name></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">CHARACTER<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
<cpp:ifdef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifdef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="39" pos:column="22"/></name></cpp:ifdef>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name><name pos:line="40" pos:column="11">input<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">mb_cur_max<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">&gt;<pos:position pos:line="40" pos:column="33"/></operator> <literal type="number" pos:line="40" pos:column="31">1<pos:position pos:line="40" pos:column="32"/></literal></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33">
	<block pos:line="41" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="42" pos:column="11">wint_t<pos:position pos:line="42" pos:column="17"/></name></type> <name pos:line="42" pos:column="18">wc<pos:position pos:line="42" pos:column="20"/></name> <init pos:line="42" pos:column="21">= <expr><call><name pos:line="42" pos:column="23">re_string_wchar_at<pos:position pos:line="42" pos:column="41"/></name> <argument_list pos:line="42" pos:column="42">(<argument><expr><name pos:line="42" pos:column="43">input<pos:position pos:line="42" pos:column="48"/></name></expr></argument>,
					  <argument><expr><call><name pos:line="43" pos:column="43">re_string_cur_idx<pos:position pos:line="43" pos:column="60"/></name> <argument_list pos:line="43" pos:column="61">(<argument><expr><name pos:line="43" pos:column="62">input<pos:position pos:line="43" pos:column="67"/></name></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call> <operator pos:line="43" pos:column="69">+<pos:position pos:line="43" pos:column="70"/></operator> <literal type="number" pos:line="43" pos:column="71">1<pos:position pos:line="43" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="74"/></decl_stmt>
	  <expr_stmt><expr><name><name pos:line="44" pos:column="11">token<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">word_char<pos:position pos:line="44" pos:column="27"/></name></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <call><name pos:line="44" pos:column="30">IS_WIDE_WORD_CHAR<pos:position pos:line="44" pos:column="47"/></name> <argument_list pos:line="44" pos:column="48">(<argument><expr><name pos:line="44" pos:column="49">wc<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call> <operator pos:line="44" pos:column="53">!=<pos:position pos:line="44" pos:column="55"/></operator> <literal type="number" pos:line="44" pos:column="56">0<pos:position pos:line="44" pos:column="57"/></literal></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then>
      <else pos:line="46" pos:column="7">else
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="9">token<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">word_char<pos:position pos:line="48" pos:column="25"/></name></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <call><name pos:line="48" pos:column="28">IS_WORD_CHAR<pos:position pos:line="48" pos:column="40"/></name> <argument_list pos:line="48" pos:column="41">(<argument><expr><name pos:line="48" pos:column="42">c2<pos:position pos:line="48" pos:column="44"/></name></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call> <operator pos:line="48" pos:column="46">!=<pos:position pos:line="48" pos:column="48"/></operator> <literal type="number" pos:line="48" pos:column="49">0<pos:position pos:line="48" pos:column="50"/></literal></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt></block></else></if>

      <switch pos:line="50" pos:column="7">switch <condition pos:line="50" pos:column="14">(<expr><name pos:line="50" pos:column="15">c2<pos:position pos:line="50" pos:column="17"/></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition>
	<block pos:line="51" pos:column="9">{
	<case pos:line="52" pos:column="9">case <expr><literal type="char" pos:line="52" pos:column="14">'|'<pos:position pos:line="52" pos:column="17"/></literal></expr>:<pos:position pos:line="52" pos:column="18"/></case>
	  <if pos:line="53" pos:column="11">if <condition pos:line="53" pos:column="14">(<expr><operator pos:line="53" pos:column="15">!<pos:position pos:line="53" pos:column="16"/></operator><operator pos:line="53" pos:column="16">(<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">syntax<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">&amp;<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="26">RE_LIMITED_OPS<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">)<pos:position pos:line="53" pos:column="41"/></operator> <operator pos:line="53" pos:column="42">&amp;&amp;<pos:position pos:line="53" pos:column="52"/></operator> <operator pos:line="53" pos:column="45">!<pos:position pos:line="53" pos:column="46"/></operator><operator pos:line="53" pos:column="46">(<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">syntax<pos:position pos:line="53" pos:column="53"/></name> <operator pos:line="53" pos:column="54">&amp;<pos:position pos:line="53" pos:column="59"/></operator> <name pos:line="53" pos:column="56">RE_NO_BK_VBAR<pos:position pos:line="53" pos:column="69"/></name><operator pos:line="53" pos:column="69">)<pos:position pos:line="53" pos:column="70"/></operator></expr>)<pos:position pos:line="53" pos:column="71"/></condition><then pos:line="53" pos:column="71">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="13">token<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">type<pos:position pos:line="54" pos:column="24"/></name></name> <operator pos:line="54" pos:column="25">=<pos:position pos:line="54" pos:column="26"/></operator> <name pos:line="54" pos:column="27">OP_ALT<pos:position pos:line="54" pos:column="33"/></name></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt></block></then></if>
	  <break pos:line="55" pos:column="11">break;<pos:position pos:line="55" pos:column="17"/></break>
	<case pos:line="56" pos:column="9">case <expr><literal type="char" pos:line="56" pos:column="14">'1'<pos:position pos:line="56" pos:column="17"/></literal></expr>:<pos:position pos:line="56" pos:column="18"/></case> <case pos:line="56" pos:column="19">case <expr><literal type="char" pos:line="56" pos:column="24">'2'<pos:position pos:line="56" pos:column="27"/></literal></expr>:<pos:position pos:line="56" pos:column="28"/></case> <case pos:line="56" pos:column="29">case <expr><literal type="char" pos:line="56" pos:column="34">'3'<pos:position pos:line="56" pos:column="37"/></literal></expr>:<pos:position pos:line="56" pos:column="38"/></case> <case pos:line="56" pos:column="39">case <expr><literal type="char" pos:line="56" pos:column="44">'4'<pos:position pos:line="56" pos:column="47"/></literal></expr>:<pos:position pos:line="56" pos:column="48"/></case> <case pos:line="56" pos:column="49">case <expr><literal type="char" pos:line="56" pos:column="54">'5'<pos:position pos:line="56" pos:column="57"/></literal></expr>:<pos:position pos:line="56" pos:column="58"/></case>
	<case pos:line="57" pos:column="9">case <expr><literal type="char" pos:line="57" pos:column="14">'6'<pos:position pos:line="57" pos:column="17"/></literal></expr>:<pos:position pos:line="57" pos:column="18"/></case> <case pos:line="57" pos:column="19">case <expr><literal type="char" pos:line="57" pos:column="24">'7'<pos:position pos:line="57" pos:column="27"/></literal></expr>:<pos:position pos:line="57" pos:column="28"/></case> <case pos:line="57" pos:column="29">case <expr><literal type="char" pos:line="57" pos:column="34">'8'<pos:position pos:line="57" pos:column="37"/></literal></expr>:<pos:position pos:line="57" pos:column="38"/></case> <case pos:line="57" pos:column="39">case <expr><literal type="char" pos:line="57" pos:column="44">'9'<pos:position pos:line="57" pos:column="47"/></literal></expr>:<pos:position pos:line="57" pos:column="48"/></case>
	  <if pos:line="58" pos:column="11">if <condition pos:line="58" pos:column="14">(<expr><operator pos:line="58" pos:column="15">!<pos:position pos:line="58" pos:column="16"/></operator><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">syntax<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">&amp;<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="26">RE_NO_BK_REFS<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">)<pos:position pos:line="58" pos:column="40"/></operator></expr>)<pos:position pos:line="58" pos:column="41"/></condition><then pos:line="58" pos:column="41">
	    <block pos:line="59" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="60" pos:column="15">token<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">type<pos:position pos:line="60" pos:column="26"/></name></name> <operator pos:line="60" pos:column="27">=<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="29">OP_BACK_REF<pos:position pos:line="60" pos:column="40"/></name></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="61" pos:column="15">token<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">opr<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">.<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="26">idx<pos:position pos:line="61" pos:column="29"/></name></name> <operator pos:line="61" pos:column="30">=<pos:position pos:line="61" pos:column="31"/></operator> <name pos:line="61" pos:column="32">c2<pos:position pos:line="61" pos:column="34"/></name> <operator pos:line="61" pos:column="35">-<pos:position pos:line="61" pos:column="36"/></operator> <literal type="char" pos:line="61" pos:column="37">'1'<pos:position pos:line="61" pos:column="40"/></literal></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
	    }<pos:position pos:line="62" pos:column="14"/></block></then></if>
	  <break pos:line="63" pos:column="11">break;<pos:position pos:line="63" pos:column="17"/></break>
	<case pos:line="64" pos:column="9">case <expr><literal type="char" pos:line="64" pos:column="14">'&lt;'<pos:position pos:line="64" pos:column="20"/></literal></expr>:<pos:position pos:line="64" pos:column="18"/></case>
	  <if pos:line="65" pos:column="11">if <condition pos:line="65" pos:column="14">(<expr><operator pos:line="65" pos:column="15">!<pos:position pos:line="65" pos:column="16"/></operator><operator pos:line="65" pos:column="16">(<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">syntax<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">&amp;<pos:position pos:line="65" pos:column="29"/></operator> <name pos:line="65" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="65" pos:column="39"/></name><operator pos:line="65" pos:column="39">)<pos:position pos:line="65" pos:column="40"/></operator></expr>)<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41">
	    <block pos:line="66" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="67" pos:column="15">token<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">type<pos:position pos:line="67" pos:column="26"/></name></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <name pos:line="67" pos:column="29">ANCHOR<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="68" pos:column="15">token<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">-&gt;<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="22">opr<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">.<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">ctx_type<pos:position pos:line="68" pos:column="34"/></name></name> <operator pos:line="68" pos:column="35">=<pos:position pos:line="68" pos:column="36"/></operator> <name pos:line="68" pos:column="37">WORD_FIRST<pos:position pos:line="68" pos:column="47"/></name></expr>;<pos:position pos:line="68" pos:column="48"/></expr_stmt>
	    }<pos:position pos:line="69" pos:column="14"/></block></then></if>
	  <break pos:line="70" pos:column="11">break;<pos:position pos:line="70" pos:column="17"/></break>
	<case pos:line="71" pos:column="9">case <expr><literal type="char" pos:line="71" pos:column="14">'&gt;'<pos:position pos:line="71" pos:column="20"/></literal></expr>:<pos:position pos:line="71" pos:column="18"/></case>
	  <if pos:line="72" pos:column="11">if <condition pos:line="72" pos:column="14">(<expr><operator pos:line="72" pos:column="15">!<pos:position pos:line="72" pos:column="16"/></operator><operator pos:line="72" pos:column="16">(<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">syntax<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">&amp;<pos:position pos:line="72" pos:column="29"/></operator> <name pos:line="72" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">)<pos:position pos:line="72" pos:column="40"/></operator></expr>)<pos:position pos:line="72" pos:column="41"/></condition><then pos:line="72" pos:column="41">
	    <block pos:line="73" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="74" pos:column="15">token<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">type<pos:position pos:line="74" pos:column="26"/></name></name> <operator pos:line="74" pos:column="27">=<pos:position pos:line="74" pos:column="28"/></operator> <name pos:line="74" pos:column="29">ANCHOR<pos:position pos:line="74" pos:column="35"/></name></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="75" pos:column="15">token<pos:position pos:line="75" pos:column="20"/></name><operator pos:line="75" pos:column="20">-&gt;<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="22">opr<pos:position pos:line="75" pos:column="25"/></name><operator pos:line="75" pos:column="25">.<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="26">ctx_type<pos:position pos:line="75" pos:column="34"/></name></name> <operator pos:line="75" pos:column="35">=<pos:position pos:line="75" pos:column="36"/></operator> <name pos:line="75" pos:column="37">WORD_LAST<pos:position pos:line="75" pos:column="46"/></name></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
	    }<pos:position pos:line="76" pos:column="14"/></block></then></if>
	  <break pos:line="77" pos:column="11">break;<pos:position pos:line="77" pos:column="17"/></break>
	<case pos:line="78" pos:column="9">case <expr><literal type="char" pos:line="78" pos:column="14">'b'<pos:position pos:line="78" pos:column="17"/></literal></expr>:<pos:position pos:line="78" pos:column="18"/></case>
	  <if pos:line="79" pos:column="11">if <condition pos:line="79" pos:column="14">(<expr><operator pos:line="79" pos:column="15">!<pos:position pos:line="79" pos:column="16"/></operator><operator pos:line="79" pos:column="16">(<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">syntax<pos:position pos:line="79" pos:column="23"/></name> <operator pos:line="79" pos:column="24">&amp;<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="79" pos:column="39"/></name><operator pos:line="79" pos:column="39">)<pos:position pos:line="79" pos:column="40"/></operator></expr>)<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41">
	    <block pos:line="80" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="81" pos:column="15">token<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">type<pos:position pos:line="81" pos:column="26"/></name></name> <operator pos:line="81" pos:column="27">=<pos:position pos:line="81" pos:column="28"/></operator> <name pos:line="81" pos:column="29">ANCHOR<pos:position pos:line="81" pos:column="35"/></name></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="82" pos:column="15">token<pos:position pos:line="82" pos:column="20"/></name><operator pos:line="82" pos:column="20">-&gt;<pos:position pos:line="82" pos:column="25"/></operator><name pos:line="82" pos:column="22">opr<pos:position pos:line="82" pos:column="25"/></name><operator pos:line="82" pos:column="25">.<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="26">ctx_type<pos:position pos:line="82" pos:column="34"/></name></name> <operator pos:line="82" pos:column="35">=<pos:position pos:line="82" pos:column="36"/></operator> <name pos:line="82" pos:column="37">WORD_DELIM<pos:position pos:line="82" pos:column="47"/></name></expr>;<pos:position pos:line="82" pos:column="48"/></expr_stmt>
	    }<pos:position pos:line="83" pos:column="14"/></block></then></if>
	  <break pos:line="84" pos:column="11">break;<pos:position pos:line="84" pos:column="17"/></break>
	<case pos:line="85" pos:column="9">case <expr><literal type="char" pos:line="85" pos:column="14">'B'<pos:position pos:line="85" pos:column="17"/></literal></expr>:<pos:position pos:line="85" pos:column="18"/></case>
	  <if pos:line="86" pos:column="11">if <condition pos:line="86" pos:column="14">(<expr><operator pos:line="86" pos:column="15">!<pos:position pos:line="86" pos:column="16"/></operator><operator pos:line="86" pos:column="16">(<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="17">syntax<pos:position pos:line="86" pos:column="23"/></name> <operator pos:line="86" pos:column="24">&amp;<pos:position pos:line="86" pos:column="29"/></operator> <name pos:line="86" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="86" pos:column="39"/></name><operator pos:line="86" pos:column="39">)<pos:position pos:line="86" pos:column="40"/></operator></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41">
	    <block pos:line="87" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="88" pos:column="15">token<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">-&gt;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="22">type<pos:position pos:line="88" pos:column="26"/></name></name> <operator pos:line="88" pos:column="27">=<pos:position pos:line="88" pos:column="28"/></operator> <name pos:line="88" pos:column="29">ANCHOR<pos:position pos:line="88" pos:column="35"/></name></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="89" pos:column="15">token<pos:position pos:line="89" pos:column="20"/></name><operator pos:line="89" pos:column="20">-&gt;<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="22">opr<pos:position pos:line="89" pos:column="25"/></name><operator pos:line="89" pos:column="25">.<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">ctx_type<pos:position pos:line="89" pos:column="34"/></name></name> <operator pos:line="89" pos:column="35">=<pos:position pos:line="89" pos:column="36"/></operator> <name pos:line="89" pos:column="37">NOT_WORD_DELIM<pos:position pos:line="89" pos:column="51"/></name></expr>;<pos:position pos:line="89" pos:column="52"/></expr_stmt>
	    }<pos:position pos:line="90" pos:column="14"/></block></then></if>
	  <break pos:line="91" pos:column="11">break;<pos:position pos:line="91" pos:column="17"/></break>
	<case pos:line="92" pos:column="9">case <expr><literal type="char" pos:line="92" pos:column="14">'w'<pos:position pos:line="92" pos:column="17"/></literal></expr>:<pos:position pos:line="92" pos:column="18"/></case>
	  <if pos:line="93" pos:column="11">if <condition pos:line="93" pos:column="14">(<expr><operator pos:line="93" pos:column="15">!<pos:position pos:line="93" pos:column="16"/></operator><operator pos:line="93" pos:column="16">(<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="17">syntax<pos:position pos:line="93" pos:column="23"/></name> <operator pos:line="93" pos:column="24">&amp;<pos:position pos:line="93" pos:column="29"/></operator> <name pos:line="93" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="93" pos:column="39"/></name><operator pos:line="93" pos:column="39">)<pos:position pos:line="93" pos:column="40"/></operator></expr>)<pos:position pos:line="93" pos:column="41"/></condition><then pos:line="93" pos:column="41">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="94" pos:column="13">token<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">-&gt;<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="20">type<pos:position pos:line="94" pos:column="24"/></name></name> <operator pos:line="94" pos:column="25">=<pos:position pos:line="94" pos:column="26"/></operator> <name pos:line="94" pos:column="27">OP_WORD<pos:position pos:line="94" pos:column="34"/></name></expr>;<pos:position pos:line="94" pos:column="35"/></expr_stmt></block></then></if>
	  <break pos:line="95" pos:column="11">break;<pos:position pos:line="95" pos:column="17"/></break>
	<case pos:line="96" pos:column="9">case <expr><literal type="char" pos:line="96" pos:column="14">'W'<pos:position pos:line="96" pos:column="17"/></literal></expr>:<pos:position pos:line="96" pos:column="18"/></case>
	  <if pos:line="97" pos:column="11">if <condition pos:line="97" pos:column="14">(<expr><operator pos:line="97" pos:column="15">!<pos:position pos:line="97" pos:column="16"/></operator><operator pos:line="97" pos:column="16">(<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="17">syntax<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">&amp;<pos:position pos:line="97" pos:column="29"/></operator> <name pos:line="97" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="97" pos:column="39"/></name><operator pos:line="97" pos:column="39">)<pos:position pos:line="97" pos:column="40"/></operator></expr>)<pos:position pos:line="97" pos:column="41"/></condition><then pos:line="97" pos:column="41">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="98" pos:column="13">token<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">-&gt;<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="20">type<pos:position pos:line="98" pos:column="24"/></name></name> <operator pos:line="98" pos:column="25">=<pos:position pos:line="98" pos:column="26"/></operator> <name pos:line="98" pos:column="27">OP_NOTWORD<pos:position pos:line="98" pos:column="37"/></name></expr>;<pos:position pos:line="98" pos:column="38"/></expr_stmt></block></then></if>
	  <break pos:line="99" pos:column="11">break;<pos:position pos:line="99" pos:column="17"/></break>
	<case pos:line="100" pos:column="9">case <expr><literal type="char" pos:line="100" pos:column="14">'s'<pos:position pos:line="100" pos:column="17"/></literal></expr>:<pos:position pos:line="100" pos:column="18"/></case>
	  <if pos:line="101" pos:column="11">if <condition pos:line="101" pos:column="14">(<expr><operator pos:line="101" pos:column="15">!<pos:position pos:line="101" pos:column="16"/></operator><operator pos:line="101" pos:column="16">(<pos:position pos:line="101" pos:column="17"/></operator><name pos:line="101" pos:column="17">syntax<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">&amp;<pos:position pos:line="101" pos:column="29"/></operator> <name pos:line="101" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="101" pos:column="39"/></name><operator pos:line="101" pos:column="39">)<pos:position pos:line="101" pos:column="40"/></operator></expr>)<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="102" pos:column="13">token<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">-&gt;<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="20">type<pos:position pos:line="102" pos:column="24"/></name></name> <operator pos:line="102" pos:column="25">=<pos:position pos:line="102" pos:column="26"/></operator> <name pos:line="102" pos:column="27">OP_SPACE<pos:position pos:line="102" pos:column="35"/></name></expr>;<pos:position pos:line="102" pos:column="36"/></expr_stmt></block></then></if>
	  <break pos:line="103" pos:column="11">break;<pos:position pos:line="103" pos:column="17"/></break>
	<case pos:line="104" pos:column="9">case <expr><literal type="char" pos:line="104" pos:column="14">'S'<pos:position pos:line="104" pos:column="17"/></literal></expr>:<pos:position pos:line="104" pos:column="18"/></case>
	  <if pos:line="105" pos:column="11">if <condition pos:line="105" pos:column="14">(<expr><operator pos:line="105" pos:column="15">!<pos:position pos:line="105" pos:column="16"/></operator><operator pos:line="105" pos:column="16">(<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">syntax<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">&amp;<pos:position pos:line="105" pos:column="29"/></operator> <name pos:line="105" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="105" pos:column="39"/></name><operator pos:line="105" pos:column="39">)<pos:position pos:line="105" pos:column="40"/></operator></expr>)<pos:position pos:line="105" pos:column="41"/></condition><then pos:line="105" pos:column="41">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="13">token<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">-&gt;<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="20">type<pos:position pos:line="106" pos:column="24"/></name></name> <operator pos:line="106" pos:column="25">=<pos:position pos:line="106" pos:column="26"/></operator> <name pos:line="106" pos:column="27">OP_NOTSPACE<pos:position pos:line="106" pos:column="38"/></name></expr>;<pos:position pos:line="106" pos:column="39"/></expr_stmt></block></then></if>
	  <break pos:line="107" pos:column="11">break;<pos:position pos:line="107" pos:column="17"/></break>
	<case pos:line="108" pos:column="9">case <expr><literal type="char" pos:line="108" pos:column="14">'`'<pos:position pos:line="108" pos:column="17"/></literal></expr>:<pos:position pos:line="108" pos:column="18"/></case>
	  <if pos:line="109" pos:column="11">if <condition pos:line="109" pos:column="14">(<expr><operator pos:line="109" pos:column="15">!<pos:position pos:line="109" pos:column="16"/></operator><operator pos:line="109" pos:column="16">(<pos:position pos:line="109" pos:column="17"/></operator><name pos:line="109" pos:column="17">syntax<pos:position pos:line="109" pos:column="23"/></name> <operator pos:line="109" pos:column="24">&amp;<pos:position pos:line="109" pos:column="29"/></operator> <name pos:line="109" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="109" pos:column="39"/></name><operator pos:line="109" pos:column="39">)<pos:position pos:line="109" pos:column="40"/></operator></expr>)<pos:position pos:line="109" pos:column="41"/></condition><then pos:line="109" pos:column="41">
	    <block pos:line="110" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="111" pos:column="15">token<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">-&gt;<pos:position pos:line="111" pos:column="25"/></operator><name pos:line="111" pos:column="22">type<pos:position pos:line="111" pos:column="26"/></name></name> <operator pos:line="111" pos:column="27">=<pos:position pos:line="111" pos:column="28"/></operator> <name pos:line="111" pos:column="29">ANCHOR<pos:position pos:line="111" pos:column="35"/></name></expr>;<pos:position pos:line="111" pos:column="36"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="112" pos:column="15">token<pos:position pos:line="112" pos:column="20"/></name><operator pos:line="112" pos:column="20">-&gt;<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="22">opr<pos:position pos:line="112" pos:column="25"/></name><operator pos:line="112" pos:column="25">.<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="26">ctx_type<pos:position pos:line="112" pos:column="34"/></name></name> <operator pos:line="112" pos:column="35">=<pos:position pos:line="112" pos:column="36"/></operator> <name pos:line="112" pos:column="37">BUF_FIRST<pos:position pos:line="112" pos:column="46"/></name></expr>;<pos:position pos:line="112" pos:column="47"/></expr_stmt>
	    }<pos:position pos:line="113" pos:column="14"/></block></then></if>
	  <break pos:line="114" pos:column="11">break;<pos:position pos:line="114" pos:column="17"/></break>
	<case pos:line="115" pos:column="9">case <expr><literal type="char" pos:line="115" pos:column="14">'\''<pos:position pos:line="115" pos:column="18"/></literal></expr>:<pos:position pos:line="115" pos:column="19"/></case>
	  <if pos:line="116" pos:column="11">if <condition pos:line="116" pos:column="14">(<expr><operator pos:line="116" pos:column="15">!<pos:position pos:line="116" pos:column="16"/></operator><operator pos:line="116" pos:column="16">(<pos:position pos:line="116" pos:column="17"/></operator><name pos:line="116" pos:column="17">syntax<pos:position pos:line="116" pos:column="23"/></name> <operator pos:line="116" pos:column="24">&amp;<pos:position pos:line="116" pos:column="29"/></operator> <name pos:line="116" pos:column="26">RE_NO_GNU_OPS<pos:position pos:line="116" pos:column="39"/></name><operator pos:line="116" pos:column="39">)<pos:position pos:line="116" pos:column="40"/></operator></expr>)<pos:position pos:line="116" pos:column="41"/></condition><then pos:line="116" pos:column="41">
	    <block pos:line="117" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="118" pos:column="15">token<pos:position pos:line="118" pos:column="20"/></name><operator pos:line="118" pos:column="20">-&gt;<pos:position pos:line="118" pos:column="25"/></operator><name pos:line="118" pos:column="22">type<pos:position pos:line="118" pos:column="26"/></name></name> <operator pos:line="118" pos:column="27">=<pos:position pos:line="118" pos:column="28"/></operator> <name pos:line="118" pos:column="29">ANCHOR<pos:position pos:line="118" pos:column="35"/></name></expr>;<pos:position pos:line="118" pos:column="36"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="119" pos:column="15">token<pos:position pos:line="119" pos:column="20"/></name><operator pos:line="119" pos:column="20">-&gt;<pos:position pos:line="119" pos:column="25"/></operator><name pos:line="119" pos:column="22">opr<pos:position pos:line="119" pos:column="25"/></name><operator pos:line="119" pos:column="25">.<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="26">ctx_type<pos:position pos:line="119" pos:column="34"/></name></name> <operator pos:line="119" pos:column="35">=<pos:position pos:line="119" pos:column="36"/></operator> <name pos:line="119" pos:column="37">BUF_LAST<pos:position pos:line="119" pos:column="45"/></name></expr>;<pos:position pos:line="119" pos:column="46"/></expr_stmt>
	    }<pos:position pos:line="120" pos:column="14"/></block></then></if>
	  <break pos:line="121" pos:column="11">break;<pos:position pos:line="121" pos:column="17"/></break>
	<case pos:line="122" pos:column="9">case <expr><literal type="char" pos:line="122" pos:column="14">'('<pos:position pos:line="122" pos:column="17"/></literal></expr>:<pos:position pos:line="122" pos:column="18"/></case>
	  <if pos:line="123" pos:column="11">if <condition pos:line="123" pos:column="14">(<expr><operator pos:line="123" pos:column="15">!<pos:position pos:line="123" pos:column="16"/></operator><operator pos:line="123" pos:column="16">(<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="17">syntax<pos:position pos:line="123" pos:column="23"/></name> <operator pos:line="123" pos:column="24">&amp;<pos:position pos:line="123" pos:column="29"/></operator> <name pos:line="123" pos:column="26">RE_NO_BK_PARENS<pos:position pos:line="123" pos:column="41"/></name><operator pos:line="123" pos:column="41">)<pos:position pos:line="123" pos:column="42"/></operator></expr>)<pos:position pos:line="123" pos:column="43"/></condition><then pos:line="123" pos:column="43">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="13">token<pos:position pos:line="124" pos:column="18"/></name><operator pos:line="124" pos:column="18">-&gt;<pos:position pos:line="124" pos:column="23"/></operator><name pos:line="124" pos:column="20">type<pos:position pos:line="124" pos:column="24"/></name></name> <operator pos:line="124" pos:column="25">=<pos:position pos:line="124" pos:column="26"/></operator> <name pos:line="124" pos:column="27">OP_OPEN_SUBEXP<pos:position pos:line="124" pos:column="41"/></name></expr>;<pos:position pos:line="124" pos:column="42"/></expr_stmt></block></then></if>
	  <break pos:line="125" pos:column="11">break;<pos:position pos:line="125" pos:column="17"/></break>
	<case pos:line="126" pos:column="9">case <expr><literal type="char" pos:line="126" pos:column="14">')'<pos:position pos:line="126" pos:column="17"/></literal></expr>:<pos:position pos:line="126" pos:column="18"/></case>
	  <if pos:line="127" pos:column="11">if <condition pos:line="127" pos:column="14">(<expr><operator pos:line="127" pos:column="15">!<pos:position pos:line="127" pos:column="16"/></operator><operator pos:line="127" pos:column="16">(<pos:position pos:line="127" pos:column="17"/></operator><name pos:line="127" pos:column="17">syntax<pos:position pos:line="127" pos:column="23"/></name> <operator pos:line="127" pos:column="24">&amp;<pos:position pos:line="127" pos:column="29"/></operator> <name pos:line="127" pos:column="26">RE_NO_BK_PARENS<pos:position pos:line="127" pos:column="41"/></name><operator pos:line="127" pos:column="41">)<pos:position pos:line="127" pos:column="42"/></operator></expr>)<pos:position pos:line="127" pos:column="43"/></condition><then pos:line="127" pos:column="43">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="128" pos:column="13">token<pos:position pos:line="128" pos:column="18"/></name><operator pos:line="128" pos:column="18">-&gt;<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="20">type<pos:position pos:line="128" pos:column="24"/></name></name> <operator pos:line="128" pos:column="25">=<pos:position pos:line="128" pos:column="26"/></operator> <name pos:line="128" pos:column="27">OP_CLOSE_SUBEXP<pos:position pos:line="128" pos:column="42"/></name></expr>;<pos:position pos:line="128" pos:column="43"/></expr_stmt></block></then></if>
	  <break pos:line="129" pos:column="11">break;<pos:position pos:line="129" pos:column="17"/></break>
	<case pos:line="130" pos:column="9">case <expr><literal type="char" pos:line="130" pos:column="14">'+'<pos:position pos:line="130" pos:column="17"/></literal></expr>:<pos:position pos:line="130" pos:column="18"/></case>
	  <if pos:line="131" pos:column="11">if <condition pos:line="131" pos:column="14">(<expr><operator pos:line="131" pos:column="15">!<pos:position pos:line="131" pos:column="16"/></operator><operator pos:line="131" pos:column="16">(<pos:position pos:line="131" pos:column="17"/></operator><name pos:line="131" pos:column="17">syntax<pos:position pos:line="131" pos:column="23"/></name> <operator pos:line="131" pos:column="24">&amp;<pos:position pos:line="131" pos:column="29"/></operator> <name pos:line="131" pos:column="26">RE_LIMITED_OPS<pos:position pos:line="131" pos:column="40"/></name><operator pos:line="131" pos:column="40">)<pos:position pos:line="131" pos:column="41"/></operator> <operator pos:line="131" pos:column="42">&amp;&amp;<pos:position pos:line="131" pos:column="52"/></operator> <operator pos:line="131" pos:column="45">(<pos:position pos:line="131" pos:column="46"/></operator><name pos:line="131" pos:column="46">syntax<pos:position pos:line="131" pos:column="52"/></name> <operator pos:line="131" pos:column="53">&amp;<pos:position pos:line="131" pos:column="58"/></operator> <name pos:line="131" pos:column="55">RE_BK_PLUS_QM<pos:position pos:line="131" pos:column="68"/></name><operator pos:line="131" pos:column="68">)<pos:position pos:line="131" pos:column="69"/></operator></expr>)<pos:position pos:line="131" pos:column="70"/></condition><then pos:line="131" pos:column="70">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="132" pos:column="13">token<pos:position pos:line="132" pos:column="18"/></name><operator pos:line="132" pos:column="18">-&gt;<pos:position pos:line="132" pos:column="23"/></operator><name pos:line="132" pos:column="20">type<pos:position pos:line="132" pos:column="24"/></name></name> <operator pos:line="132" pos:column="25">=<pos:position pos:line="132" pos:column="26"/></operator> <name pos:line="132" pos:column="27">OP_DUP_PLUS<pos:position pos:line="132" pos:column="38"/></name></expr>;<pos:position pos:line="132" pos:column="39"/></expr_stmt></block></then></if>
	  <break pos:line="133" pos:column="11">break;<pos:position pos:line="133" pos:column="17"/></break>
	<case pos:line="134" pos:column="9">case <expr><literal type="char" pos:line="134" pos:column="14">'?'<pos:position pos:line="134" pos:column="17"/></literal></expr>:<pos:position pos:line="134" pos:column="18"/></case>
	  <if pos:line="135" pos:column="11">if <condition pos:line="135" pos:column="14">(<expr><operator pos:line="135" pos:column="15">!<pos:position pos:line="135" pos:column="16"/></operator><operator pos:line="135" pos:column="16">(<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="17">syntax<pos:position pos:line="135" pos:column="23"/></name> <operator pos:line="135" pos:column="24">&amp;<pos:position pos:line="135" pos:column="29"/></operator> <name pos:line="135" pos:column="26">RE_LIMITED_OPS<pos:position pos:line="135" pos:column="40"/></name><operator pos:line="135" pos:column="40">)<pos:position pos:line="135" pos:column="41"/></operator> <operator pos:line="135" pos:column="42">&amp;&amp;<pos:position pos:line="135" pos:column="52"/></operator> <operator pos:line="135" pos:column="45">(<pos:position pos:line="135" pos:column="46"/></operator><name pos:line="135" pos:column="46">syntax<pos:position pos:line="135" pos:column="52"/></name> <operator pos:line="135" pos:column="53">&amp;<pos:position pos:line="135" pos:column="58"/></operator> <name pos:line="135" pos:column="55">RE_BK_PLUS_QM<pos:position pos:line="135" pos:column="68"/></name><operator pos:line="135" pos:column="68">)<pos:position pos:line="135" pos:column="69"/></operator></expr>)<pos:position pos:line="135" pos:column="70"/></condition><then pos:line="135" pos:column="70">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="13">token<pos:position pos:line="136" pos:column="18"/></name><operator pos:line="136" pos:column="18">-&gt;<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="20">type<pos:position pos:line="136" pos:column="24"/></name></name> <operator pos:line="136" pos:column="25">=<pos:position pos:line="136" pos:column="26"/></operator> <name pos:line="136" pos:column="27">OP_DUP_QUESTION<pos:position pos:line="136" pos:column="42"/></name></expr>;<pos:position pos:line="136" pos:column="43"/></expr_stmt></block></then></if>
	  <break pos:line="137" pos:column="11">break;<pos:position pos:line="137" pos:column="17"/></break>
	<case pos:line="138" pos:column="9">case <expr><literal type="char" pos:line="138" pos:column="14">'{'<pos:position pos:line="138" pos:column="17"/></literal></expr>:<pos:position pos:line="138" pos:column="18"/></case>
	  <if pos:line="139" pos:column="11">if <condition pos:line="139" pos:column="14">(<expr><operator pos:line="139" pos:column="15">(<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="16">syntax<pos:position pos:line="139" pos:column="22"/></name> <operator pos:line="139" pos:column="23">&amp;<pos:position pos:line="139" pos:column="28"/></operator> <name pos:line="139" pos:column="25">RE_INTERVALS<pos:position pos:line="139" pos:column="37"/></name><operator pos:line="139" pos:column="37">)<pos:position pos:line="139" pos:column="38"/></operator> <operator pos:line="139" pos:column="39">&amp;&amp;<pos:position pos:line="139" pos:column="49"/></operator> <operator pos:line="139" pos:column="42">(<pos:position pos:line="139" pos:column="43"/></operator><operator pos:line="139" pos:column="43">!<pos:position pos:line="139" pos:column="44"/></operator><operator pos:line="139" pos:column="44">(<pos:position pos:line="139" pos:column="45"/></operator><name pos:line="139" pos:column="45">syntax<pos:position pos:line="139" pos:column="51"/></name> <operator pos:line="139" pos:column="52">&amp;<pos:position pos:line="139" pos:column="57"/></operator> <name pos:line="139" pos:column="54">RE_NO_BK_BRACES<pos:position pos:line="139" pos:column="69"/></name><operator pos:line="139" pos:column="69">)<pos:position pos:line="139" pos:column="70"/></operator><operator pos:line="139" pos:column="70">)<pos:position pos:line="139" pos:column="71"/></operator></expr>)<pos:position pos:line="139" pos:column="72"/></condition><then pos:line="139" pos:column="72">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="140" pos:column="13">token<pos:position pos:line="140" pos:column="18"/></name><operator pos:line="140" pos:column="18">-&gt;<pos:position pos:line="140" pos:column="23"/></operator><name pos:line="140" pos:column="20">type<pos:position pos:line="140" pos:column="24"/></name></name> <operator pos:line="140" pos:column="25">=<pos:position pos:line="140" pos:column="26"/></operator> <name pos:line="140" pos:column="27">OP_OPEN_DUP_NUM<pos:position pos:line="140" pos:column="42"/></name></expr>;<pos:position pos:line="140" pos:column="43"/></expr_stmt></block></then></if>
	  <break pos:line="141" pos:column="11">break;<pos:position pos:line="141" pos:column="17"/></break>
	<case pos:line="142" pos:column="9">case <expr><literal type="char" pos:line="142" pos:column="14">'}'<pos:position pos:line="142" pos:column="17"/></literal></expr>:<pos:position pos:line="142" pos:column="18"/></case>
	  <if pos:line="143" pos:column="11">if <condition pos:line="143" pos:column="14">(<expr><operator pos:line="143" pos:column="15">(<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="16">syntax<pos:position pos:line="143" pos:column="22"/></name> <operator pos:line="143" pos:column="23">&amp;<pos:position pos:line="143" pos:column="28"/></operator> <name pos:line="143" pos:column="25">RE_INTERVALS<pos:position pos:line="143" pos:column="37"/></name><operator pos:line="143" pos:column="37">)<pos:position pos:line="143" pos:column="38"/></operator> <operator pos:line="143" pos:column="39">&amp;&amp;<pos:position pos:line="143" pos:column="49"/></operator> <operator pos:line="143" pos:column="42">(<pos:position pos:line="143" pos:column="43"/></operator><operator pos:line="143" pos:column="43">!<pos:position pos:line="143" pos:column="44"/></operator><operator pos:line="143" pos:column="44">(<pos:position pos:line="143" pos:column="45"/></operator><name pos:line="143" pos:column="45">syntax<pos:position pos:line="143" pos:column="51"/></name> <operator pos:line="143" pos:column="52">&amp;<pos:position pos:line="143" pos:column="57"/></operator> <name pos:line="143" pos:column="54">RE_NO_BK_BRACES<pos:position pos:line="143" pos:column="69"/></name><operator pos:line="143" pos:column="69">)<pos:position pos:line="143" pos:column="70"/></operator><operator pos:line="143" pos:column="70">)<pos:position pos:line="143" pos:column="71"/></operator></expr>)<pos:position pos:line="143" pos:column="72"/></condition><then pos:line="143" pos:column="72">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="144" pos:column="13">token<pos:position pos:line="144" pos:column="18"/></name><operator pos:line="144" pos:column="18">-&gt;<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="20">type<pos:position pos:line="144" pos:column="24"/></name></name> <operator pos:line="144" pos:column="25">=<pos:position pos:line="144" pos:column="26"/></operator> <name pos:line="144" pos:column="27">OP_CLOSE_DUP_NUM<pos:position pos:line="144" pos:column="43"/></name></expr>;<pos:position pos:line="144" pos:column="44"/></expr_stmt></block></then></if>
	  <break pos:line="145" pos:column="11">break;<pos:position pos:line="145" pos:column="17"/></break>
	<default pos:line="146" pos:column="9">default:<pos:position pos:line="146" pos:column="17"/></default>
	  <break pos:line="147" pos:column="11">break;<pos:position pos:line="147" pos:column="17"/></break>
	}<pos:position pos:line="148" pos:column="10"/></block></switch>
      <return pos:line="149" pos:column="7">return <expr><literal type="number" pos:line="149" pos:column="14">2<pos:position pos:line="149" pos:column="15"/></literal></expr>;<pos:position pos:line="149" pos:column="16"/></return>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="152" pos:column="3">token<pos:position pos:line="152" pos:column="8"/></name><operator pos:line="152" pos:column="8">-&gt;<pos:position pos:line="152" pos:column="13"/></operator><name pos:line="152" pos:column="10">type<pos:position pos:line="152" pos:column="14"/></name></name> <operator pos:line="152" pos:column="15">=<pos:position pos:line="152" pos:column="16"/></operator> <name pos:line="152" pos:column="17">CHARACTER<pos:position pos:line="152" pos:column="26"/></name></expr>;<pos:position pos:line="152" pos:column="27"/></expr_stmt>
<cpp:ifdef pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">ifdef<pos:position pos:line="153" pos:column="7"/></cpp:directive> <name pos:line="153" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="153" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="154" pos:column="3">if <condition pos:line="154" pos:column="6">(<expr><name><name pos:line="154" pos:column="7">input<pos:position pos:line="154" pos:column="12"/></name><operator pos:line="154" pos:column="12">-&gt;<pos:position pos:line="154" pos:column="17"/></operator><name pos:line="154" pos:column="14">mb_cur_max<pos:position pos:line="154" pos:column="24"/></name></name> <operator pos:line="154" pos:column="25">&gt;<pos:position pos:line="154" pos:column="29"/></operator> <literal type="number" pos:line="154" pos:column="27">1<pos:position pos:line="154" pos:column="28"/></literal></expr>)<pos:position pos:line="154" pos:column="29"/></condition><then pos:line="154" pos:column="29">
    <block pos:line="155" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="156" pos:column="7">wint_t<pos:position pos:line="156" pos:column="13"/></name></type> <name pos:line="156" pos:column="14">wc<pos:position pos:line="156" pos:column="16"/></name> <init pos:line="156" pos:column="17">= <expr><call><name pos:line="156" pos:column="19">re_string_wchar_at<pos:position pos:line="156" pos:column="37"/></name> <argument_list pos:line="156" pos:column="38">(<argument><expr><name pos:line="156" pos:column="39">input<pos:position pos:line="156" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="156" pos:column="46">re_string_cur_idx<pos:position pos:line="156" pos:column="63"/></name> <argument_list pos:line="156" pos:column="64">(<argument><expr><name pos:line="156" pos:column="65">input<pos:position pos:line="156" pos:column="70"/></name></expr></argument>)<pos:position pos:line="156" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="156" pos:column="73"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="157" pos:column="7">token<pos:position pos:line="157" pos:column="12"/></name><operator pos:line="157" pos:column="12">-&gt;<pos:position pos:line="157" pos:column="17"/></operator><name pos:line="157" pos:column="14">word_char<pos:position pos:line="157" pos:column="23"/></name></name> <operator pos:line="157" pos:column="24">=<pos:position pos:line="157" pos:column="25"/></operator> <call><name pos:line="157" pos:column="26">IS_WIDE_WORD_CHAR<pos:position pos:line="157" pos:column="43"/></name> <argument_list pos:line="157" pos:column="44">(<argument><expr><name pos:line="157" pos:column="45">wc<pos:position pos:line="157" pos:column="47"/></name></expr></argument>)<pos:position pos:line="157" pos:column="48"/></argument_list></call> <operator pos:line="157" pos:column="49">!=<pos:position pos:line="157" pos:column="51"/></operator> <literal type="number" pos:line="157" pos:column="52">0<pos:position pos:line="157" pos:column="53"/></literal></expr>;<pos:position pos:line="157" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="158" pos:column="6"/></block></then>
  <else pos:line="159" pos:column="3">else
<cpp:endif pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">endif<pos:position pos:line="160" pos:column="7"/></cpp:directive></cpp:endif>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="161" pos:column="5">token<pos:position pos:line="161" pos:column="10"/></name><operator pos:line="161" pos:column="10">-&gt;<pos:position pos:line="161" pos:column="15"/></operator><name pos:line="161" pos:column="12">word_char<pos:position pos:line="161" pos:column="21"/></name></name> <operator pos:line="161" pos:column="22">=<pos:position pos:line="161" pos:column="23"/></operator> <call><name pos:line="161" pos:column="24">IS_WORD_CHAR<pos:position pos:line="161" pos:column="36"/></name> <argument_list pos:line="161" pos:column="37">(<argument><expr><name><name pos:line="161" pos:column="38">token<pos:position pos:line="161" pos:column="43"/></name><operator pos:line="161" pos:column="43">-&gt;<pos:position pos:line="161" pos:column="48"/></operator><name pos:line="161" pos:column="45">opr<pos:position pos:line="161" pos:column="48"/></name><operator pos:line="161" pos:column="48">.<pos:position pos:line="161" pos:column="49"/></operator><name pos:line="161" pos:column="49">c<pos:position pos:line="161" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="52"/></expr_stmt></block></else></if>

  <switch pos:line="163" pos:column="3">switch <condition pos:line="163" pos:column="10">(<expr><name pos:line="163" pos:column="11">c<pos:position pos:line="163" pos:column="12"/></name></expr>)<pos:position pos:line="163" pos:column="13"/></condition>
    <block pos:line="164" pos:column="5">{
    <case pos:line="165" pos:column="5">case <expr><literal type="char" pos:line="165" pos:column="10">'\n'<pos:position pos:line="165" pos:column="14"/></literal></expr>:<pos:position pos:line="165" pos:column="15"/></case>
      <if pos:line="166" pos:column="7">if <condition pos:line="166" pos:column="10">(<expr><name pos:line="166" pos:column="11">syntax<pos:position pos:line="166" pos:column="17"/></name> <operator pos:line="166" pos:column="18">&amp;<pos:position pos:line="166" pos:column="23"/></operator> <name pos:line="166" pos:column="20">RE_NEWLINE_ALT<pos:position pos:line="166" pos:column="34"/></name></expr>)<pos:position pos:line="166" pos:column="35"/></condition><then pos:line="166" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="167" pos:column="9">token<pos:position pos:line="167" pos:column="14"/></name><operator pos:line="167" pos:column="14">-&gt;<pos:position pos:line="167" pos:column="19"/></operator><name pos:line="167" pos:column="16">type<pos:position pos:line="167" pos:column="20"/></name></name> <operator pos:line="167" pos:column="21">=<pos:position pos:line="167" pos:column="22"/></operator> <name pos:line="167" pos:column="23">OP_ALT<pos:position pos:line="167" pos:column="29"/></name></expr>;<pos:position pos:line="167" pos:column="30"/></expr_stmt></block></then></if>
      <break pos:line="168" pos:column="7">break;<pos:position pos:line="168" pos:column="13"/></break>
    <case pos:line="169" pos:column="5">case <expr><literal type="char" pos:line="169" pos:column="10">'|'<pos:position pos:line="169" pos:column="13"/></literal></expr>:<pos:position pos:line="169" pos:column="14"/></case>
      <if pos:line="170" pos:column="7">if <condition pos:line="170" pos:column="10">(<expr><operator pos:line="170" pos:column="11">!<pos:position pos:line="170" pos:column="12"/></operator><operator pos:line="170" pos:column="12">(<pos:position pos:line="170" pos:column="13"/></operator><name pos:line="170" pos:column="13">syntax<pos:position pos:line="170" pos:column="19"/></name> <operator pos:line="170" pos:column="20">&amp;<pos:position pos:line="170" pos:column="25"/></operator> <name pos:line="170" pos:column="22">RE_LIMITED_OPS<pos:position pos:line="170" pos:column="36"/></name><operator pos:line="170" pos:column="36">)<pos:position pos:line="170" pos:column="37"/></operator> <operator pos:line="170" pos:column="38">&amp;&amp;<pos:position pos:line="170" pos:column="48"/></operator> <operator pos:line="170" pos:column="41">(<pos:position pos:line="170" pos:column="42"/></operator><name pos:line="170" pos:column="42">syntax<pos:position pos:line="170" pos:column="48"/></name> <operator pos:line="170" pos:column="49">&amp;<pos:position pos:line="170" pos:column="54"/></operator> <name pos:line="170" pos:column="51">RE_NO_BK_VBAR<pos:position pos:line="170" pos:column="64"/></name><operator pos:line="170" pos:column="64">)<pos:position pos:line="170" pos:column="65"/></operator></expr>)<pos:position pos:line="170" pos:column="66"/></condition><then pos:line="170" pos:column="66">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="171" pos:column="9">token<pos:position pos:line="171" pos:column="14"/></name><operator pos:line="171" pos:column="14">-&gt;<pos:position pos:line="171" pos:column="19"/></operator><name pos:line="171" pos:column="16">type<pos:position pos:line="171" pos:column="20"/></name></name> <operator pos:line="171" pos:column="21">=<pos:position pos:line="171" pos:column="22"/></operator> <name pos:line="171" pos:column="23">OP_ALT<pos:position pos:line="171" pos:column="29"/></name></expr>;<pos:position pos:line="171" pos:column="30"/></expr_stmt></block></then></if>
      <break pos:line="172" pos:column="7">break;<pos:position pos:line="172" pos:column="13"/></break>
    <case pos:line="173" pos:column="5">case <expr><literal type="char" pos:line="173" pos:column="10">'*'<pos:position pos:line="173" pos:column="13"/></literal></expr>:<pos:position pos:line="173" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="174" pos:column="7">token<pos:position pos:line="174" pos:column="12"/></name><operator pos:line="174" pos:column="12">-&gt;<pos:position pos:line="174" pos:column="17"/></operator><name pos:line="174" pos:column="14">type<pos:position pos:line="174" pos:column="18"/></name></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <name pos:line="174" pos:column="21">OP_DUP_ASTERISK<pos:position pos:line="174" pos:column="36"/></name></expr>;<pos:position pos:line="174" pos:column="37"/></expr_stmt>
      <break pos:line="175" pos:column="7">break;<pos:position pos:line="175" pos:column="13"/></break>
    <case pos:line="176" pos:column="5">case <expr><literal type="char" pos:line="176" pos:column="10">'+'<pos:position pos:line="176" pos:column="13"/></literal></expr>:<pos:position pos:line="176" pos:column="14"/></case>
      <if pos:line="177" pos:column="7">if <condition pos:line="177" pos:column="10">(<expr><operator pos:line="177" pos:column="11">!<pos:position pos:line="177" pos:column="12"/></operator><operator pos:line="177" pos:column="12">(<pos:position pos:line="177" pos:column="13"/></operator><name pos:line="177" pos:column="13">syntax<pos:position pos:line="177" pos:column="19"/></name> <operator pos:line="177" pos:column="20">&amp;<pos:position pos:line="177" pos:column="25"/></operator> <name pos:line="177" pos:column="22">RE_LIMITED_OPS<pos:position pos:line="177" pos:column="36"/></name><operator pos:line="177" pos:column="36">)<pos:position pos:line="177" pos:column="37"/></operator> <operator pos:line="177" pos:column="38">&amp;&amp;<pos:position pos:line="177" pos:column="48"/></operator> <operator pos:line="177" pos:column="41">!<pos:position pos:line="177" pos:column="42"/></operator><operator pos:line="177" pos:column="42">(<pos:position pos:line="177" pos:column="43"/></operator><name pos:line="177" pos:column="43">syntax<pos:position pos:line="177" pos:column="49"/></name> <operator pos:line="177" pos:column="50">&amp;<pos:position pos:line="177" pos:column="55"/></operator> <name pos:line="177" pos:column="52">RE_BK_PLUS_QM<pos:position pos:line="177" pos:column="65"/></name><operator pos:line="177" pos:column="65">)<pos:position pos:line="177" pos:column="66"/></operator></expr>)<pos:position pos:line="177" pos:column="67"/></condition><then pos:line="177" pos:column="67">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="178" pos:column="9">token<pos:position pos:line="178" pos:column="14"/></name><operator pos:line="178" pos:column="14">-&gt;<pos:position pos:line="178" pos:column="19"/></operator><name pos:line="178" pos:column="16">type<pos:position pos:line="178" pos:column="20"/></name></name> <operator pos:line="178" pos:column="21">=<pos:position pos:line="178" pos:column="22"/></operator> <name pos:line="178" pos:column="23">OP_DUP_PLUS<pos:position pos:line="178" pos:column="34"/></name></expr>;<pos:position pos:line="178" pos:column="35"/></expr_stmt></block></then></if>
      <break pos:line="179" pos:column="7">break;<pos:position pos:line="179" pos:column="13"/></break>
    <case pos:line="180" pos:column="5">case <expr><literal type="char" pos:line="180" pos:column="10">'?'<pos:position pos:line="180" pos:column="13"/></literal></expr>:<pos:position pos:line="180" pos:column="14"/></case>
      <if pos:line="181" pos:column="7">if <condition pos:line="181" pos:column="10">(<expr><operator pos:line="181" pos:column="11">!<pos:position pos:line="181" pos:column="12"/></operator><operator pos:line="181" pos:column="12">(<pos:position pos:line="181" pos:column="13"/></operator><name pos:line="181" pos:column="13">syntax<pos:position pos:line="181" pos:column="19"/></name> <operator pos:line="181" pos:column="20">&amp;<pos:position pos:line="181" pos:column="25"/></operator> <name pos:line="181" pos:column="22">RE_LIMITED_OPS<pos:position pos:line="181" pos:column="36"/></name><operator pos:line="181" pos:column="36">)<pos:position pos:line="181" pos:column="37"/></operator> <operator pos:line="181" pos:column="38">&amp;&amp;<pos:position pos:line="181" pos:column="48"/></operator> <operator pos:line="181" pos:column="41">!<pos:position pos:line="181" pos:column="42"/></operator><operator pos:line="181" pos:column="42">(<pos:position pos:line="181" pos:column="43"/></operator><name pos:line="181" pos:column="43">syntax<pos:position pos:line="181" pos:column="49"/></name> <operator pos:line="181" pos:column="50">&amp;<pos:position pos:line="181" pos:column="55"/></operator> <name pos:line="181" pos:column="52">RE_BK_PLUS_QM<pos:position pos:line="181" pos:column="65"/></name><operator pos:line="181" pos:column="65">)<pos:position pos:line="181" pos:column="66"/></operator></expr>)<pos:position pos:line="181" pos:column="67"/></condition><then pos:line="181" pos:column="67">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="182" pos:column="9">token<pos:position pos:line="182" pos:column="14"/></name><operator pos:line="182" pos:column="14">-&gt;<pos:position pos:line="182" pos:column="19"/></operator><name pos:line="182" pos:column="16">type<pos:position pos:line="182" pos:column="20"/></name></name> <operator pos:line="182" pos:column="21">=<pos:position pos:line="182" pos:column="22"/></operator> <name pos:line="182" pos:column="23">OP_DUP_QUESTION<pos:position pos:line="182" pos:column="38"/></name></expr>;<pos:position pos:line="182" pos:column="39"/></expr_stmt></block></then></if>
      <break pos:line="183" pos:column="7">break;<pos:position pos:line="183" pos:column="13"/></break>
    <case pos:line="184" pos:column="5">case <expr><literal type="char" pos:line="184" pos:column="10">'{'<pos:position pos:line="184" pos:column="13"/></literal></expr>:<pos:position pos:line="184" pos:column="14"/></case>
      <if pos:line="185" pos:column="7">if <condition pos:line="185" pos:column="10">(<expr><operator pos:line="185" pos:column="11">(<pos:position pos:line="185" pos:column="12"/></operator><name pos:line="185" pos:column="12">syntax<pos:position pos:line="185" pos:column="18"/></name> <operator pos:line="185" pos:column="19">&amp;<pos:position pos:line="185" pos:column="24"/></operator> <name pos:line="185" pos:column="21">RE_INTERVALS<pos:position pos:line="185" pos:column="33"/></name><operator pos:line="185" pos:column="33">)<pos:position pos:line="185" pos:column="34"/></operator> <operator pos:line="185" pos:column="35">&amp;&amp;<pos:position pos:line="185" pos:column="45"/></operator> <operator pos:line="185" pos:column="38">(<pos:position pos:line="185" pos:column="39"/></operator><name pos:line="185" pos:column="39">syntax<pos:position pos:line="185" pos:column="45"/></name> <operator pos:line="185" pos:column="46">&amp;<pos:position pos:line="185" pos:column="51"/></operator> <name pos:line="185" pos:column="48">RE_NO_BK_BRACES<pos:position pos:line="185" pos:column="63"/></name><operator pos:line="185" pos:column="63">)<pos:position pos:line="185" pos:column="64"/></operator></expr>)<pos:position pos:line="185" pos:column="65"/></condition><then pos:line="185" pos:column="65">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="186" pos:column="9">token<pos:position pos:line="186" pos:column="14"/></name><operator pos:line="186" pos:column="14">-&gt;<pos:position pos:line="186" pos:column="19"/></operator><name pos:line="186" pos:column="16">type<pos:position pos:line="186" pos:column="20"/></name></name> <operator pos:line="186" pos:column="21">=<pos:position pos:line="186" pos:column="22"/></operator> <name pos:line="186" pos:column="23">OP_OPEN_DUP_NUM<pos:position pos:line="186" pos:column="38"/></name></expr>;<pos:position pos:line="186" pos:column="39"/></expr_stmt></block></then></if>
      <break pos:line="187" pos:column="7">break;<pos:position pos:line="187" pos:column="13"/></break>
    <case pos:line="188" pos:column="5">case <expr><literal type="char" pos:line="188" pos:column="10">'}'<pos:position pos:line="188" pos:column="13"/></literal></expr>:<pos:position pos:line="188" pos:column="14"/></case>
      <if pos:line="189" pos:column="7">if <condition pos:line="189" pos:column="10">(<expr><operator pos:line="189" pos:column="11">(<pos:position pos:line="189" pos:column="12"/></operator><name pos:line="189" pos:column="12">syntax<pos:position pos:line="189" pos:column="18"/></name> <operator pos:line="189" pos:column="19">&amp;<pos:position pos:line="189" pos:column="24"/></operator> <name pos:line="189" pos:column="21">RE_INTERVALS<pos:position pos:line="189" pos:column="33"/></name><operator pos:line="189" pos:column="33">)<pos:position pos:line="189" pos:column="34"/></operator> <operator pos:line="189" pos:column="35">&amp;&amp;<pos:position pos:line="189" pos:column="45"/></operator> <operator pos:line="189" pos:column="38">(<pos:position pos:line="189" pos:column="39"/></operator><name pos:line="189" pos:column="39">syntax<pos:position pos:line="189" pos:column="45"/></name> <operator pos:line="189" pos:column="46">&amp;<pos:position pos:line="189" pos:column="51"/></operator> <name pos:line="189" pos:column="48">RE_NO_BK_BRACES<pos:position pos:line="189" pos:column="63"/></name><operator pos:line="189" pos:column="63">)<pos:position pos:line="189" pos:column="64"/></operator></expr>)<pos:position pos:line="189" pos:column="65"/></condition><then pos:line="189" pos:column="65">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="190" pos:column="9">token<pos:position pos:line="190" pos:column="14"/></name><operator pos:line="190" pos:column="14">-&gt;<pos:position pos:line="190" pos:column="19"/></operator><name pos:line="190" pos:column="16">type<pos:position pos:line="190" pos:column="20"/></name></name> <operator pos:line="190" pos:column="21">=<pos:position pos:line="190" pos:column="22"/></operator> <name pos:line="190" pos:column="23">OP_CLOSE_DUP_NUM<pos:position pos:line="190" pos:column="39"/></name></expr>;<pos:position pos:line="190" pos:column="40"/></expr_stmt></block></then></if>
      <break pos:line="191" pos:column="7">break;<pos:position pos:line="191" pos:column="13"/></break>
    <case pos:line="192" pos:column="5">case <expr><literal type="char" pos:line="192" pos:column="10">'('<pos:position pos:line="192" pos:column="13"/></literal></expr>:<pos:position pos:line="192" pos:column="14"/></case>
      <if pos:line="193" pos:column="7">if <condition pos:line="193" pos:column="10">(<expr><name pos:line="193" pos:column="11">syntax<pos:position pos:line="193" pos:column="17"/></name> <operator pos:line="193" pos:column="18">&amp;<pos:position pos:line="193" pos:column="23"/></operator> <name pos:line="193" pos:column="20">RE_NO_BK_PARENS<pos:position pos:line="193" pos:column="35"/></name></expr>)<pos:position pos:line="193" pos:column="36"/></condition><then pos:line="193" pos:column="36">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="194" pos:column="9">token<pos:position pos:line="194" pos:column="14"/></name><operator pos:line="194" pos:column="14">-&gt;<pos:position pos:line="194" pos:column="19"/></operator><name pos:line="194" pos:column="16">type<pos:position pos:line="194" pos:column="20"/></name></name> <operator pos:line="194" pos:column="21">=<pos:position pos:line="194" pos:column="22"/></operator> <name pos:line="194" pos:column="23">OP_OPEN_SUBEXP<pos:position pos:line="194" pos:column="37"/></name></expr>;<pos:position pos:line="194" pos:column="38"/></expr_stmt></block></then></if>
      <break pos:line="195" pos:column="7">break;<pos:position pos:line="195" pos:column="13"/></break>
    <case pos:line="196" pos:column="5">case <expr><literal type="char" pos:line="196" pos:column="10">')'<pos:position pos:line="196" pos:column="13"/></literal></expr>:<pos:position pos:line="196" pos:column="14"/></case>
      <if pos:line="197" pos:column="7">if <condition pos:line="197" pos:column="10">(<expr><name pos:line="197" pos:column="11">syntax<pos:position pos:line="197" pos:column="17"/></name> <operator pos:line="197" pos:column="18">&amp;<pos:position pos:line="197" pos:column="23"/></operator> <name pos:line="197" pos:column="20">RE_NO_BK_PARENS<pos:position pos:line="197" pos:column="35"/></name></expr>)<pos:position pos:line="197" pos:column="36"/></condition><then pos:line="197" pos:column="36">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="198" pos:column="9">token<pos:position pos:line="198" pos:column="14"/></name><operator pos:line="198" pos:column="14">-&gt;<pos:position pos:line="198" pos:column="19"/></operator><name pos:line="198" pos:column="16">type<pos:position pos:line="198" pos:column="20"/></name></name> <operator pos:line="198" pos:column="21">=<pos:position pos:line="198" pos:column="22"/></operator> <name pos:line="198" pos:column="23">OP_CLOSE_SUBEXP<pos:position pos:line="198" pos:column="38"/></name></expr>;<pos:position pos:line="198" pos:column="39"/></expr_stmt></block></then></if>
      <break pos:line="199" pos:column="7">break;<pos:position pos:line="199" pos:column="13"/></break>
    <case pos:line="200" pos:column="5">case <expr><literal type="char" pos:line="200" pos:column="10">'['<pos:position pos:line="200" pos:column="13"/></literal></expr>:<pos:position pos:line="200" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="201" pos:column="7">token<pos:position pos:line="201" pos:column="12"/></name><operator pos:line="201" pos:column="12">-&gt;<pos:position pos:line="201" pos:column="17"/></operator><name pos:line="201" pos:column="14">type<pos:position pos:line="201" pos:column="18"/></name></name> <operator pos:line="201" pos:column="19">=<pos:position pos:line="201" pos:column="20"/></operator> <name pos:line="201" pos:column="21">OP_OPEN_BRACKET<pos:position pos:line="201" pos:column="36"/></name></expr>;<pos:position pos:line="201" pos:column="37"/></expr_stmt>
      <break pos:line="202" pos:column="7">break;<pos:position pos:line="202" pos:column="13"/></break>
    <case pos:line="203" pos:column="5">case <expr><literal type="char" pos:line="203" pos:column="10">'.'<pos:position pos:line="203" pos:column="13"/></literal></expr>:<pos:position pos:line="203" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="204" pos:column="7">token<pos:position pos:line="204" pos:column="12"/></name><operator pos:line="204" pos:column="12">-&gt;<pos:position pos:line="204" pos:column="17"/></operator><name pos:line="204" pos:column="14">type<pos:position pos:line="204" pos:column="18"/></name></name> <operator pos:line="204" pos:column="19">=<pos:position pos:line="204" pos:column="20"/></operator> <name pos:line="204" pos:column="21">OP_PERIOD<pos:position pos:line="204" pos:column="30"/></name></expr>;<pos:position pos:line="204" pos:column="31"/></expr_stmt>
      <break pos:line="205" pos:column="7">break;<pos:position pos:line="205" pos:column="13"/></break>
    <case pos:line="206" pos:column="5">case <expr><literal type="char" pos:line="206" pos:column="10">'^'<pos:position pos:line="206" pos:column="13"/></literal></expr>:<pos:position pos:line="206" pos:column="14"/></case>
      <if pos:line="207" pos:column="7">if <condition pos:line="207" pos:column="10">(<expr><operator pos:line="207" pos:column="11">!<pos:position pos:line="207" pos:column="12"/></operator><operator pos:line="207" pos:column="12">(<pos:position pos:line="207" pos:column="13"/></operator><name pos:line="207" pos:column="13">syntax<pos:position pos:line="207" pos:column="19"/></name> <operator pos:line="207" pos:column="20">&amp;<pos:position pos:line="207" pos:column="25"/></operator> <operator pos:line="207" pos:column="22">(<pos:position pos:line="207" pos:column="23"/></operator><name pos:line="207" pos:column="23">RE_CONTEXT_INDEP_ANCHORS<pos:position pos:line="207" pos:column="47"/></name> <operator pos:line="207" pos:column="48">|<pos:position pos:line="207" pos:column="49"/></operator> <name pos:line="207" pos:column="50">RE_CARET_ANCHORS_HERE<pos:position pos:line="207" pos:column="71"/></name><operator pos:line="207" pos:column="71">)<pos:position pos:line="207" pos:column="72"/></operator><operator pos:line="207" pos:column="72">)<pos:position pos:line="207" pos:column="73"/></operator> <operator pos:line="207" pos:column="74">&amp;&amp;<pos:position pos:line="207" pos:column="84"/></operator>
	  <call><name pos:line="208" pos:column="11">re_string_cur_idx<pos:position pos:line="208" pos:column="28"/></name> <argument_list pos:line="208" pos:column="29">(<argument><expr><name pos:line="208" pos:column="30">input<pos:position pos:line="208" pos:column="35"/></name></expr></argument>)<pos:position pos:line="208" pos:column="36"/></argument_list></call> <operator pos:line="208" pos:column="37">!=<pos:position pos:line="208" pos:column="39"/></operator> <literal type="number" pos:line="208" pos:column="40">0<pos:position pos:line="208" pos:column="41"/></literal></expr>)<pos:position pos:line="208" pos:column="42"/></condition><then pos:line="208" pos:column="42">
	<block pos:line="209" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="210" pos:column="11">char<pos:position pos:line="210" pos:column="15"/></name></type> <name pos:line="210" pos:column="16">prev<pos:position pos:line="210" pos:column="20"/></name> <init pos:line="210" pos:column="21">= <expr><call><name pos:line="210" pos:column="23">re_string_peek_byte<pos:position pos:line="210" pos:column="42"/></name> <argument_list pos:line="210" pos:column="43">(<argument><expr><name pos:line="210" pos:column="44">input<pos:position pos:line="210" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="51">-<pos:position pos:line="210" pos:column="52"/></operator><literal type="number" pos:line="210" pos:column="52">1<pos:position pos:line="210" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="210" pos:column="55"/></decl_stmt>
	  <if pos:line="211" pos:column="11">if <condition pos:line="211" pos:column="14">(<expr><operator pos:line="211" pos:column="15">!<pos:position pos:line="211" pos:column="16"/></operator><operator pos:line="211" pos:column="16">(<pos:position pos:line="211" pos:column="17"/></operator><name pos:line="211" pos:column="17">syntax<pos:position pos:line="211" pos:column="23"/></name> <operator pos:line="211" pos:column="24">&amp;<pos:position pos:line="211" pos:column="29"/></operator> <name pos:line="211" pos:column="26">RE_NEWLINE_ALT<pos:position pos:line="211" pos:column="40"/></name><operator pos:line="211" pos:column="40">)<pos:position pos:line="211" pos:column="41"/></operator> <operator pos:line="211" pos:column="42">||<pos:position pos:line="211" pos:column="44"/></operator> <name pos:line="211" pos:column="45">prev<pos:position pos:line="211" pos:column="49"/></name> <operator pos:line="211" pos:column="50">!=<pos:position pos:line="211" pos:column="52"/></operator> <literal type="char" pos:line="211" pos:column="53">'\n'<pos:position pos:line="211" pos:column="57"/></literal></expr>)<pos:position pos:line="211" pos:column="58"/></condition><then pos:line="211" pos:column="58">
	    <block type="pseudo"><break pos:line="212" pos:column="13">break;<pos:position pos:line="212" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="213" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="214" pos:column="7">token<pos:position pos:line="214" pos:column="12"/></name><operator pos:line="214" pos:column="12">-&gt;<pos:position pos:line="214" pos:column="17"/></operator><name pos:line="214" pos:column="14">type<pos:position pos:line="214" pos:column="18"/></name></name> <operator pos:line="214" pos:column="19">=<pos:position pos:line="214" pos:column="20"/></operator> <name pos:line="214" pos:column="21">ANCHOR<pos:position pos:line="214" pos:column="27"/></name></expr>;<pos:position pos:line="214" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="215" pos:column="7">token<pos:position pos:line="215" pos:column="12"/></name><operator pos:line="215" pos:column="12">-&gt;<pos:position pos:line="215" pos:column="17"/></operator><name pos:line="215" pos:column="14">opr<pos:position pos:line="215" pos:column="17"/></name><operator pos:line="215" pos:column="17">.<pos:position pos:line="215" pos:column="18"/></operator><name pos:line="215" pos:column="18">ctx_type<pos:position pos:line="215" pos:column="26"/></name></name> <operator pos:line="215" pos:column="27">=<pos:position pos:line="215" pos:column="28"/></operator> <name pos:line="215" pos:column="29">LINE_FIRST<pos:position pos:line="215" pos:column="39"/></name></expr>;<pos:position pos:line="215" pos:column="40"/></expr_stmt>
      <break pos:line="216" pos:column="7">break;<pos:position pos:line="216" pos:column="13"/></break>
    <case pos:line="217" pos:column="5">case <expr><literal type="char" pos:line="217" pos:column="10">'$'<pos:position pos:line="217" pos:column="13"/></literal></expr>:<pos:position pos:line="217" pos:column="14"/></case>
      <if pos:line="218" pos:column="7">if <condition pos:line="218" pos:column="10">(<expr><operator pos:line="218" pos:column="11">!<pos:position pos:line="218" pos:column="12"/></operator><operator pos:line="218" pos:column="12">(<pos:position pos:line="218" pos:column="13"/></operator><name pos:line="218" pos:column="13">syntax<pos:position pos:line="218" pos:column="19"/></name> <operator pos:line="218" pos:column="20">&amp;<pos:position pos:line="218" pos:column="25"/></operator> <name pos:line="218" pos:column="22">RE_CONTEXT_INDEP_ANCHORS<pos:position pos:line="218" pos:column="46"/></name><operator pos:line="218" pos:column="46">)<pos:position pos:line="218" pos:column="47"/></operator> <operator pos:line="218" pos:column="48">&amp;&amp;<pos:position pos:line="218" pos:column="58"/></operator>
	  <call><name pos:line="219" pos:column="11">re_string_cur_idx<pos:position pos:line="219" pos:column="28"/></name> <argument_list pos:line="219" pos:column="29">(<argument><expr><name pos:line="219" pos:column="30">input<pos:position pos:line="219" pos:column="35"/></name></expr></argument>)<pos:position pos:line="219" pos:column="36"/></argument_list></call> <operator pos:line="219" pos:column="37">+<pos:position pos:line="219" pos:column="38"/></operator> <literal type="number" pos:line="219" pos:column="39">1<pos:position pos:line="219" pos:column="40"/></literal> <operator pos:line="219" pos:column="41">!=<pos:position pos:line="219" pos:column="43"/></operator> <call><name pos:line="219" pos:column="44">re_string_length<pos:position pos:line="219" pos:column="60"/></name> <argument_list pos:line="219" pos:column="61">(<argument><expr><name pos:line="219" pos:column="62">input<pos:position pos:line="219" pos:column="67"/></name></expr></argument>)<pos:position pos:line="219" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="219" pos:column="69"/></condition><then pos:line="219" pos:column="69">
	<block pos:line="220" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="221" pos:column="11">re_token_t<pos:position pos:line="221" pos:column="21"/></name></type> <name pos:line="221" pos:column="22">next<pos:position pos:line="221" pos:column="26"/></name></decl>;<pos:position pos:line="221" pos:column="27"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="222" pos:column="11">re_string_skip_bytes<pos:position pos:line="222" pos:column="31"/></name> <argument_list pos:line="222" pos:column="32">(<argument><expr><name pos:line="222" pos:column="33">input<pos:position pos:line="222" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="222" pos:column="40">1<pos:position pos:line="222" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="43"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="223" pos:column="11">peek_token<pos:position pos:line="223" pos:column="21"/></name> <argument_list pos:line="223" pos:column="22">(<argument><expr><operator pos:line="223" pos:column="23">&amp;<pos:position pos:line="223" pos:column="28"/></operator><name pos:line="223" pos:column="24">next<pos:position pos:line="223" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="30">input<pos:position pos:line="223" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="37">syntax<pos:position pos:line="223" pos:column="43"/></name></expr></argument>)<pos:position pos:line="223" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="224" pos:column="11">re_string_skip_bytes<pos:position pos:line="224" pos:column="31"/></name> <argument_list pos:line="224" pos:column="32">(<argument><expr><name pos:line="224" pos:column="33">input<pos:position pos:line="224" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="224" pos:column="40">-<pos:position pos:line="224" pos:column="41"/></operator><literal type="number" pos:line="224" pos:column="41">1<pos:position pos:line="224" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="224" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="44"/></expr_stmt>
	  <if pos:line="225" pos:column="11">if <condition pos:line="225" pos:column="14">(<expr><name><name pos:line="225" pos:column="15">next<pos:position pos:line="225" pos:column="19"/></name><operator pos:line="225" pos:column="19">.<pos:position pos:line="225" pos:column="20"/></operator><name pos:line="225" pos:column="20">type<pos:position pos:line="225" pos:column="24"/></name></name> <operator pos:line="225" pos:column="25">!=<pos:position pos:line="225" pos:column="27"/></operator> <name pos:line="225" pos:column="28">OP_ALT<pos:position pos:line="225" pos:column="34"/></name> <operator pos:line="225" pos:column="35">&amp;&amp;<pos:position pos:line="225" pos:column="45"/></operator> <name><name pos:line="225" pos:column="38">next<pos:position pos:line="225" pos:column="42"/></name><operator pos:line="225" pos:column="42">.<pos:position pos:line="225" pos:column="43"/></operator><name pos:line="225" pos:column="43">type<pos:position pos:line="225" pos:column="47"/></name></name> <operator pos:line="225" pos:column="48">!=<pos:position pos:line="225" pos:column="50"/></operator> <name pos:line="225" pos:column="51">OP_CLOSE_SUBEXP<pos:position pos:line="225" pos:column="66"/></name></expr>)<pos:position pos:line="225" pos:column="67"/></condition><then pos:line="225" pos:column="67">
	    <block type="pseudo"><break pos:line="226" pos:column="13">break;<pos:position pos:line="226" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="227" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="228" pos:column="7">token<pos:position pos:line="228" pos:column="12"/></name><operator pos:line="228" pos:column="12">-&gt;<pos:position pos:line="228" pos:column="17"/></operator><name pos:line="228" pos:column="14">type<pos:position pos:line="228" pos:column="18"/></name></name> <operator pos:line="228" pos:column="19">=<pos:position pos:line="228" pos:column="20"/></operator> <name pos:line="228" pos:column="21">ANCHOR<pos:position pos:line="228" pos:column="27"/></name></expr>;<pos:position pos:line="228" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="229" pos:column="7">token<pos:position pos:line="229" pos:column="12"/></name><operator pos:line="229" pos:column="12">-&gt;<pos:position pos:line="229" pos:column="17"/></operator><name pos:line="229" pos:column="14">opr<pos:position pos:line="229" pos:column="17"/></name><operator pos:line="229" pos:column="17">.<pos:position pos:line="229" pos:column="18"/></operator><name pos:line="229" pos:column="18">ctx_type<pos:position pos:line="229" pos:column="26"/></name></name> <operator pos:line="229" pos:column="27">=<pos:position pos:line="229" pos:column="28"/></operator> <name pos:line="229" pos:column="29">LINE_LAST<pos:position pos:line="229" pos:column="38"/></name></expr>;<pos:position pos:line="229" pos:column="39"/></expr_stmt>
      <break pos:line="230" pos:column="7">break;<pos:position pos:line="230" pos:column="13"/></break>
    <default pos:line="231" pos:column="5">default:<pos:position pos:line="231" pos:column="13"/></default>
      <break pos:line="232" pos:column="7">break;<pos:position pos:line="232" pos:column="13"/></break>
    }<pos:position pos:line="233" pos:column="6"/></block></switch>
  <return pos:line="234" pos:column="3">return <expr><literal type="number" pos:line="234" pos:column="10">1<pos:position pos:line="234" pos:column="11"/></literal></expr>;<pos:position pos:line="234" pos:column="12"/></return>
}<pos:position pos:line="235" pos:column="2"/></block></function></unit>

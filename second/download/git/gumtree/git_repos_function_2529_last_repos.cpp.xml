<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2529_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_one_dir<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">untracked_cache_dir<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">untracked_<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">read_data<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">rd<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">untracked_cache_dir<pos:position pos:line="4" pos:column="35"/></name></name></type> <name pos:line="4" pos:column="36">ud<pos:position pos:line="4" pos:column="38"/></name></decl>, <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="41">untracked<pos:position pos:line="4" pos:column="50"/></name></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">unsigned<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">char<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">next<pos:position pos:line="5" pos:column="34"/></name></decl>, <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="37">data<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><name><name pos:line="5" pos:column="44">rd<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">data<pos:position pos:line="5" pos:column="52"/></name></name></expr></init></decl>, <modifier pos:line="5" pos:column="54">*<pos:position pos:line="5" pos:column="55"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="55">end<pos:position pos:line="5" pos:column="58"/></name> <init pos:line="5" pos:column="59">= <expr><name><name pos:line="5" pos:column="61">rd<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">-&gt;<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="65">end<pos:position pos:line="5" pos:column="68"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">value<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">len<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="17">ud<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="24">sizeof<argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">ud<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">next<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">data<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">value<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">decode_varint<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><operator pos:line="12" pos:column="31">&amp;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="32">next<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">next<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&gt;<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="20">end<pos:position pos:line="13" pos:column="23"/></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">ud<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">recurse<pos:position pos:line="15" pos:column="19"/></name></name>	   <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <literal type="number" pos:line="15" pos:column="30">1<pos:position pos:line="15" pos:column="31"/></literal></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">ud<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">untracked_alloc<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">value<pos:position pos:line="16" pos:column="35"/></name></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ud<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">untracked_nr<pos:position pos:line="17" pos:column="24"/></name></name>	   <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">value<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">ud<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">untracked_nr<pos:position pos:line="18" pos:column="28"/></name></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">ALLOC_ARRAY<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">ud<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">untracked<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="43">ud<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">untracked_nr<pos:position pos:line="19" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">data<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">next<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name pos:line="22" pos:column="9">next<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">data<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">ud<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">dirs_alloc<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name><name pos:line="23" pos:column="25">ud<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">dirs_nr<pos:position pos:line="23" pos:column="35"/></name></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <call><name pos:line="23" pos:column="38">decode_varint<pos:position pos:line="23" pos:column="51"/></name><argument_list pos:line="23" pos:column="51">(<argument><expr><operator pos:line="23" pos:column="52">&amp;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="53">next<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">next<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&gt;<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="20">end<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">-<pos:position pos:line="25" pos:column="25"/></operator><literal type="number" pos:line="25" pos:column="25">1<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">ALLOC_ARRAY<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">ud<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">.<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">dirs<pos:position pos:line="26" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="30">ud<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">dirs_nr<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">data<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">next<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name pos:line="29" pos:column="9">len<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">strlen<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><operator pos:line="29" pos:column="22">(<pos:position pos:line="29" pos:column="23"/></operator><specifier pos:line="29" pos:column="23">const<pos:position pos:line="29" pos:column="28"/></specifier> <name pos:line="29" pos:column="29">char<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">*<pos:position pos:line="29" pos:column="35"/></operator><operator pos:line="29" pos:column="35">)<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">data<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">next<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">data<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">+<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">len<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">+<pos:position pos:line="30" pos:column="28"/></operator> <literal type="number" pos:line="30" pos:column="29">1<pos:position pos:line="30" pos:column="30"/></literal></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">next<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&gt;<pos:position pos:line="31" pos:column="22"/></operator> <name><name pos:line="31" pos:column="20">rd<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">end<pos:position pos:line="31" pos:column="27"/></name></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">-<pos:position pos:line="32" pos:column="25"/></operator><literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">untracked_<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">untracked<pos:position pos:line="33" pos:column="32"/></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <call><name pos:line="33" pos:column="35">xmalloc<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><call><name pos:line="33" pos:column="43">st_add<pos:position pos:line="33" pos:column="49"/></name><argument_list pos:line="33" pos:column="49">(<argument><expr><sizeof pos:line="33" pos:column="50">sizeof<argument_list pos:line="33" pos:column="56">(<argument><expr><operator pos:line="33" pos:column="57">*<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="58">untracked<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="70">len<pos:position pos:line="33" pos:column="73"/></name></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">memcpy<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">untracked<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="27">&amp;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="28">ud<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="32">sizeof<argument_list pos:line="34" pos:column="38">(<argument><expr><name pos:line="34" pos:column="39">ud<pos:position pos:line="34" pos:column="41"/></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">memcpy<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name><name pos:line="35" pos:column="16">untracked<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">name<pos:position pos:line="35" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">data<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">len<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">+<pos:position pos:line="35" pos:column="44"/></operator> <literal type="number" pos:line="35" pos:column="45">1<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="36" pos:column="9">data<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">next<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>

	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name><name pos:line="38" pos:column="25">untracked<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">untracked_nr<pos:position pos:line="38" pos:column="48"/></name></name></expr>;<pos:position pos:line="38" pos:column="49"/></condition> <incr><expr><name pos:line="38" pos:column="50">i<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">++<pos:position pos:line="38" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="54"/></control> <block pos:line="38" pos:column="55">{
		<expr_stmt><expr><name pos:line="39" pos:column="17">len<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name pos:line="39" pos:column="23">strlen<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><operator pos:line="39" pos:column="30">(<pos:position pos:line="39" pos:column="31"/></operator><specifier pos:line="39" pos:column="31">const<pos:position pos:line="39" pos:column="36"/></specifier> <name pos:line="39" pos:column="37">char<pos:position pos:line="39" pos:column="41"/></name> <operator pos:line="39" pos:column="42">*<pos:position pos:line="39" pos:column="43"/></operator><operator pos:line="39" pos:column="43">)<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="44">data<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">next<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">data<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">+<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">len<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">+<pos:position pos:line="40" pos:column="36"/></operator> <literal type="number" pos:line="40" pos:column="37">1<pos:position pos:line="40" pos:column="38"/></literal></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">next<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">&gt;<pos:position pos:line="41" pos:column="30"/></operator> <name><name pos:line="41" pos:column="28">rd<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">end<pos:position pos:line="41" pos:column="35"/></name></name></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36">
			<block type="pseudo"><return pos:line="42" pos:column="25">return <expr><operator pos:line="42" pos:column="32">-<pos:position pos:line="42" pos:column="33"/></operator><literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">untracked<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">untracked<pos:position pos:line="43" pos:column="37"/></name><index pos:line="43" pos:column="37">[<expr><name pos:line="43" pos:column="38">i<pos:position pos:line="43" pos:column="39"/></name></expr>]<pos:position pos:line="43" pos:column="40"/></index></name> <operator pos:line="43" pos:column="41">=<pos:position pos:line="43" pos:column="42"/></operator> <call><name pos:line="43" pos:column="43">xstrdup<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><operator pos:line="43" pos:column="51">(<pos:position pos:line="43" pos:column="52"/></operator><specifier pos:line="43" pos:column="52">const<pos:position pos:line="43" pos:column="57"/></specifier> <name pos:line="43" pos:column="58">char<pos:position pos:line="43" pos:column="62"/></name><operator pos:line="43" pos:column="62">*<pos:position pos:line="43" pos:column="63"/></operator><operator pos:line="43" pos:column="63">)<pos:position pos:line="43" pos:column="64"/></operator><name pos:line="43" pos:column="64">data<pos:position pos:line="43" pos:column="68"/></name></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">data<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">next<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="47" pos:column="9">rd<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">ucd<pos:position pos:line="47" pos:column="16"/></name><index pos:line="47" pos:column="16">[<expr><name><name pos:line="47" pos:column="17">rd<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">index<pos:position pos:line="47" pos:column="26"/></name></name><operator pos:line="47" pos:column="26">++<pos:position pos:line="47" pos:column="28"/></operator></expr>]<pos:position pos:line="47" pos:column="29"/></index></name> <operator pos:line="47" pos:column="30">=<pos:position pos:line="47" pos:column="31"/></operator> <name pos:line="47" pos:column="32">untracked<pos:position pos:line="47" pos:column="41"/></name></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">rd<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">data<pos:position pos:line="48" pos:column="17"/></name></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">data<pos:position pos:line="48" pos:column="24"/></name></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>

	<for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">i<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal></expr>;<pos:position pos:line="50" pos:column="20"/></init> <condition><expr><name pos:line="50" pos:column="21">i<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">&lt;<pos:position pos:line="50" pos:column="27"/></operator> <name><name pos:line="50" pos:column="25">untracked<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">dirs_nr<pos:position pos:line="50" pos:column="43"/></name></name></expr>;<pos:position pos:line="50" pos:column="44"/></condition> <incr><expr><name pos:line="50" pos:column="45">i<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">++<pos:position pos:line="50" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="49"/></control> <block pos:line="50" pos:column="50">{
		<expr_stmt><expr><name pos:line="51" pos:column="17">len<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">read_one_dir<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name><name pos:line="51" pos:column="36">untracked<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">-&gt;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="47">dirs<pos:position pos:line="51" pos:column="51"/></name></name> <operator pos:line="51" pos:column="52">+<pos:position pos:line="51" pos:column="53"/></operator> <name pos:line="51" pos:column="54">i<pos:position pos:line="51" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="57">rd<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">len<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">&lt;<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="27">0<pos:position pos:line="52" pos:column="28"/></literal></expr>)<pos:position pos:line="52" pos:column="29"/></condition><then pos:line="52" pos:column="29">
			<block type="pseudo"><return pos:line="53" pos:column="25">return <expr><operator pos:line="53" pos:column="32">-<pos:position pos:line="53" pos:column="33"/></operator><literal type="number" pos:line="53" pos:column="33">1<pos:position pos:line="53" pos:column="34"/></literal></expr>;<pos:position pos:line="53" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></for>
	<return pos:line="55" pos:column="9">return <expr><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4940_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ewah_iterator_next<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">eword_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">next<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">ewah_iterator<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">it<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">it<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">pointer<pos:position pos:line="3" pos:column="24"/></name></name> <operator pos:line="3" pos:column="25">&gt;=<pos:position pos:line="3" pos:column="30"/></operator> <name><name pos:line="3" pos:column="28">it<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">buffer_size<pos:position pos:line="3" pos:column="43"/></name></name></expr>)<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></return></block></then></if>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">it<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">compressed<pos:position pos:line="6" pos:column="27"/></name></name> <operator pos:line="6" pos:column="28">&lt;<pos:position pos:line="6" pos:column="32"/></operator> <name><name pos:line="6" pos:column="30">it<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">rl<pos:position pos:line="6" pos:column="36"/></name></name></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <block pos:line="6" pos:column="38">{
		<expr_stmt><expr><name><name pos:line="7" pos:column="17">it<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">compressed<pos:position pos:line="7" pos:column="31"/></name></name><operator pos:line="7" pos:column="31">++<pos:position pos:line="7" pos:column="33"/></operator></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">next<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <ternary><condition><expr><name><name pos:line="8" pos:column="25">it<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">b<pos:position pos:line="8" pos:column="30"/></name></name></expr> ?<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32"> <expr><call pos:line="8" pos:column="33">(<name pos:line="8" pos:column="34">eword_t<pos:position pos:line="8" pos:column="41"/></name>)<argument_list pos:line="8" pos:column="42">(<argument><expr><operator pos:line="8" pos:column="43">~<pos:position pos:line="8" pos:column="44"/></operator><literal type="number" pos:line="8" pos:column="44">0<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr> <pos:position pos:line="8" pos:column="47"/></then><else pos:line="8" pos:column="47">: <expr><literal type="number" pos:line="8" pos:column="49">0<pos:position pos:line="8" pos:column="50"/></literal></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then> <else pos:line="9" pos:column="11">else <block pos:line="9" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">assert<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">it<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">literals<pos:position pos:line="10" pos:column="36"/></name></name> <operator pos:line="10" pos:column="37">&lt;<pos:position pos:line="10" pos:column="41"/></operator> <name><name pos:line="10" pos:column="39">it<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">lw<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="12" pos:column="17">it<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">literals<pos:position pos:line="12" pos:column="29"/></name></name><operator pos:line="12" pos:column="29">++<pos:position pos:line="12" pos:column="31"/></operator></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">it<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">pointer<pos:position pos:line="13" pos:column="28"/></name></name><operator pos:line="13" pos:column="28">++<pos:position pos:line="13" pos:column="30"/></operator></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="15" pos:column="17">assert<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">it<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">pointer<pos:position pos:line="15" pos:column="35"/></name></name> <operator pos:line="15" pos:column="36">&lt;<pos:position pos:line="15" pos:column="40"/></operator> <name><name pos:line="15" pos:column="38">it<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">buffer_size<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">next<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name><name pos:line="17" pos:column="25">it<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">buffer<pos:position pos:line="17" pos:column="35"/></name><index pos:line="17" pos:column="35">[<expr><name><name pos:line="17" pos:column="36">it<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">pointer<pos:position pos:line="17" pos:column="47"/></name></name></expr>]<pos:position pos:line="17" pos:column="48"/></index></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></else></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">it<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">compressed<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="31">it<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">rl<pos:position pos:line="20" pos:column="37"/></name></name> <operator pos:line="20" pos:column="38">&amp;&amp;<pos:position pos:line="20" pos:column="48"/></operator> <name><name pos:line="20" pos:column="41">it<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">literals<pos:position pos:line="20" pos:column="53"/></name></name> <operator pos:line="20" pos:column="54">==<pos:position pos:line="20" pos:column="56"/></operator> <name><name pos:line="20" pos:column="57">it<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">lw<pos:position pos:line="20" pos:column="63"/></name></name></expr>)<pos:position pos:line="20" pos:column="64"/></condition><then pos:line="20" pos:column="64"> <block pos:line="20" pos:column="65">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">++<pos:position pos:line="21" pos:column="23"/></operator><name><name pos:line="21" pos:column="23">it<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">pointer<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">&lt;<pos:position pos:line="21" pos:column="39"/></operator> <name><name pos:line="21" pos:column="37">it<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">buffer_size<pos:position pos:line="21" pos:column="52"/></name></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">read_new_rlw<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">it<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

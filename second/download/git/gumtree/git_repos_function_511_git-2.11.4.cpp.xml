<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_511_git-2.11.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">filter_refs<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name><name pos:line="1" pos:column="17">struct<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">ref_array<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">array<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">ref_filter<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">filter<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">unsigned<pos:position pos:line="1" pos:column="77"/></name> <name pos:line="1" pos:column="78">int<pos:position pos:line="1" pos:column="81"/></name></type> <name pos:line="1" pos:column="82">type<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ref_filter_cbdata<pos:position pos:line="3" pos:column="33"/></name></name></type> <name pos:line="3" pos:column="34">ref_cbdata<pos:position pos:line="3" pos:column="44"/></name></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">broken<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="7" pos:column="9">ref_cbdata<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">array<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">array<pos:position pos:line="7" pos:column="33"/></name></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">ref_cbdata<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">filter<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">filter<pos:position pos:line="8" pos:column="35"/></name></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">type<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&amp;<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="20">FILTER_REFS_INCLUDE_BROKEN<pos:position pos:line="10" pos:column="46"/></name></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">broken<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">filter<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">kind<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">type<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&amp;<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="31">FILTER_REFS_KIND_MASK<pos:position pos:line="12" pos:column="52"/></name></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/*  Simple per-ref filtering */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">filter<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">kind<pos:position pos:line="15" pos:column="26"/></name></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><literal type="string" pos:line="16" pos:column="21">"filter_refs: invalid type"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt></block></then>
	<else pos:line="17" pos:column="9">else <block pos:line="17" pos:column="14">{
		<comment type="block" pos:line="18" pos:column="17">/*
		 * For common cases where we need only branches or remotes or tags,
		 * we only iterate through those refs. If a mix of refs is needed,
		 * we iterate over all refs and filter out required refs with the help
		 * of filter_ref_kind().
		 */</comment>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">filter<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">kind<pos:position pos:line="24" pos:column="33"/></name></name> <operator pos:line="24" pos:column="34">==<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">FILTER_REFS_BRANCHES<pos:position pos:line="24" pos:column="57"/></name></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">ret<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">for_each_fullref_in<pos:position pos:line="25" pos:column="50"/></name><argument_list pos:line="25" pos:column="50">(<argument><expr><literal type="string" pos:line="25" pos:column="51">"refs/heads/"<pos:position pos:line="25" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="66">ref_filter_handler<pos:position pos:line="25" pos:column="84"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="86">&amp;<pos:position pos:line="25" pos:column="91"/></operator><name pos:line="25" pos:column="87">ref_cbdata<pos:position pos:line="25" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="99">broken<pos:position pos:line="25" pos:column="105"/></name></expr></argument>)<pos:position pos:line="25" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="107"/></expr_stmt></block></then>
		<elseif pos:line="26" pos:column="17">else <if pos:line="26" pos:column="22">if <condition pos:line="26" pos:column="25">(<expr><name><name pos:line="26" pos:column="26">filter<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">kind<pos:position pos:line="26" pos:column="38"/></name></name> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">FILTER_REFS_REMOTES<pos:position pos:line="26" pos:column="61"/></name></expr>)<pos:position pos:line="26" pos:column="62"/></condition><then pos:line="26" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">ret<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="31">for_each_fullref_in<pos:position pos:line="27" pos:column="50"/></name><argument_list pos:line="27" pos:column="50">(<argument><expr><literal type="string" pos:line="27" pos:column="51">"refs/remotes/"<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="68">ref_filter_handler<pos:position pos:line="27" pos:column="86"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="88">&amp;<pos:position pos:line="27" pos:column="93"/></operator><name pos:line="27" pos:column="89">ref_cbdata<pos:position pos:line="27" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="101">broken<pos:position pos:line="27" pos:column="107"/></name></expr></argument>)<pos:position pos:line="27" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="109"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="28" pos:column="17">else <if pos:line="28" pos:column="22">if <condition pos:line="28" pos:column="25">(<expr><name><name pos:line="28" pos:column="26">filter<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">kind<pos:position pos:line="28" pos:column="38"/></name></name> <operator pos:line="28" pos:column="39">==<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">FILTER_REFS_TAGS<pos:position pos:line="28" pos:column="58"/></name></expr>)<pos:position pos:line="28" pos:column="59"/></condition><then pos:line="28" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">ret<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <call><name pos:line="29" pos:column="31">for_each_fullref_in<pos:position pos:line="29" pos:column="50"/></name><argument_list pos:line="29" pos:column="50">(<argument><expr><literal type="string" pos:line="29" pos:column="51">"refs/tags/"<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">ref_filter_handler<pos:position pos:line="29" pos:column="83"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="85">&amp;<pos:position pos:line="29" pos:column="90"/></operator><name pos:line="29" pos:column="86">ref_cbdata<pos:position pos:line="29" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="98">broken<pos:position pos:line="29" pos:column="104"/></name></expr></argument>)<pos:position pos:line="29" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="106"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="30" pos:column="17">else <if pos:line="30" pos:column="22">if <condition pos:line="30" pos:column="25">(<expr><name><name pos:line="30" pos:column="26">filter<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">kind<pos:position pos:line="30" pos:column="38"/></name></name> <operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator> <name pos:line="30" pos:column="41">FILTER_REFS_ALL<pos:position pos:line="30" pos:column="56"/></name></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">ret<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">for_each_fullref_in<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><literal type="string" pos:line="31" pos:column="51">""<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">ref_filter_handler<pos:position pos:line="31" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="75">&amp;<pos:position pos:line="31" pos:column="80"/></operator><name pos:line="31" pos:column="76">ref_cbdata<pos:position pos:line="31" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="88">broken<pos:position pos:line="31" pos:column="94"/></name></expr></argument>)<pos:position pos:line="31" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="96"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">ret<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">&amp;&amp;<pos:position pos:line="32" pos:column="36"/></operator> <operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><name><name pos:line="32" pos:column="30">filter<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">kind<pos:position pos:line="32" pos:column="42"/></name></name> <operator pos:line="32" pos:column="43">&amp;<pos:position pos:line="32" pos:column="48"/></operator> <name pos:line="32" pos:column="45">FILTER_REFS_DETACHED_HEAD<pos:position pos:line="32" pos:column="70"/></name><operator pos:line="32" pos:column="70">)<pos:position pos:line="32" pos:column="71"/></operator></expr>)<pos:position pos:line="32" pos:column="72"/></condition><then pos:line="32" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">head_ref<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">ref_filter_handler<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="54">&amp;<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="55">ref_cbdata<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>


	<comment type="block" pos:line="37" pos:column="9">/*  Filters that need revision walking */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">filter<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">merge_commit<pos:position pos:line="38" pos:column="33"/></name></name></expr>)<pos:position pos:line="38" pos:column="34"/></condition><then pos:line="38" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">do_merge_filter<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="34">ref_cbdata<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt></block></then></if>

	<return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">ret<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

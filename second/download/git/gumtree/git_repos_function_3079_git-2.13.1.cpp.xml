<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3079_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_same_unmerged<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">cache_entry<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ce<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">unpack_trees_options<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">o<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">index_state<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">index<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name><name pos:line="4" pos:column="37">o<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">src_index<pos:position pos:line="4" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">ce_namelen<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">ce<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">pos<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><call><name pos:line="6" pos:column="19">index_name_pos<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">index<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="41">ce<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">name<pos:position pos:line="6" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="51">len<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal> <operator pos:line="8" pos:column="15">&lt;=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="18">pos<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"programming error in a caller of mark_ce_used_same_name"<pos:position pos:line="9" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt></block></then></if>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">pos<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">-<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">pos<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="27">1<pos:position pos:line="10" pos:column="28"/></literal></expr>;<pos:position pos:line="10" pos:column="29"/></init> <condition><expr><name pos:line="10" pos:column="30">pos<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">&lt;<pos:position pos:line="10" pos:column="38"/></operator> <name><name pos:line="10" pos:column="36">index<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">cache_nr<pos:position pos:line="10" pos:column="51"/></name></name></expr>;<pos:position pos:line="10" pos:column="52"/></condition> <incr><expr><name pos:line="10" pos:column="53">pos<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">++<pos:position pos:line="10" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="59"/></control> <block pos:line="10" pos:column="60">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">cache_entry<pos:position pos:line="11" pos:column="35"/></name></name> <modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier></type><name pos:line="11" pos:column="37">next<pos:position pos:line="11" pos:column="41"/></name> <init pos:line="11" pos:column="42">= <expr><name><name pos:line="11" pos:column="44">index<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">cache<pos:position pos:line="11" pos:column="56"/></name><index pos:line="11" pos:column="56">[<expr><name pos:line="11" pos:column="57">pos<pos:position pos:line="11" pos:column="60"/></name></expr>]<pos:position pos:line="11" pos:column="61"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="62"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">len<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">!=<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="28">ce_namelen<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">next<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call> <operator pos:line="12" pos:column="45">||<pos:position pos:line="12" pos:column="47"/></operator>
		    <call><name pos:line="13" pos:column="21">memcmp<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name><name pos:line="13" pos:column="28">ce<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">name<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="38">next<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">name<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">len<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55">
			<block type="pseudo"><break pos:line="14" pos:column="25">break;<pos:position pos:line="14" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">add_entry<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">o<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">next<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="36">0<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="39">0<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">mark_ce_used<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">next<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">o<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></for>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

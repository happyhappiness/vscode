<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3711_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_empty_line<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">bol<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">eol<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><name pos:line="3" pos:column="16">bol<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">&lt;<pos:position pos:line="3" pos:column="24"/></operator> <name pos:line="3" pos:column="22">eol<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">&amp;&amp;<pos:position pos:line="3" pos:column="36"/></operator> <call><name pos:line="3" pos:column="29">isspace<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><operator pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">bol<pos:position pos:line="3" pos:column="41"/></name></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="43"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">bol<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">++<pos:position pos:line="4" pos:column="22"/></operator></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt></block></while>
	<return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">bol<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">==<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">eol<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

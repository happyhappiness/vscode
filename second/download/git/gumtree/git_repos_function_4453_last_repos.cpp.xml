<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4453_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">count_refspec_match<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">pattern<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">ref<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">refs<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">ref<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">matched_ref<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">patlen<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">strlen<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">pattern<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">matched_weak<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">matched<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">weak_match<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">match<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">weak_match<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">match<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">=<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>;<pos:position pos:line="11" pos:column="37"/></init> <condition><expr><name pos:line="11" pos:column="38">refs<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></condition> <incr><expr><name pos:line="11" pos:column="44">refs<pos:position pos:line="11" pos:column="48"/></name> <operator pos:line="11" pos:column="49">=<pos:position pos:line="11" pos:column="50"/></operator> <name><name pos:line="11" pos:column="51">refs<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">-&gt;<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="57">next<pos:position pos:line="11" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="62"/></control> <block pos:line="11" pos:column="63">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">name<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><name><name pos:line="12" pos:column="30">refs<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">name<pos:position pos:line="12" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">namelen<pos:position pos:line="13" pos:column="28"/></name> <init pos:line="13" pos:column="29">= <expr><call><name pos:line="13" pos:column="31">strlen<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">name<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><call><name pos:line="15" pos:column="22">refname_match<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">pattern<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">name<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51">
			<block type="pseudo"><continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="18" pos:column="17">/* A match is "weak" if it is with refs outside
		 * heads or tags, and did not specify the pattern
		 * in full (e.g. "refs/remotes/origin/master") or at
		 * least from the toplevel (e.g. "remotes/origin/master");
		 * otherwise "git push $URL master" would result in
		 * ambiguity between remotes/origin/master and heads/master
		 * at the remote site.
		 */</comment>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">namelen<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">!=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="32">patlen<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">&amp;&amp;<pos:position pos:line="26" pos:column="49"/></operator>
		    <name pos:line="27" pos:column="21">patlen<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">!=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">namelen<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">-<pos:position pos:line="27" pos:column="40"/></operator> <literal type="number" pos:line="27" pos:column="41">5<pos:position pos:line="27" pos:column="42"/></literal> <operator pos:line="27" pos:column="43">&amp;&amp;<pos:position pos:line="27" pos:column="53"/></operator>
		    <operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><call><name pos:line="28" pos:column="22">starts_with<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">name<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="40">"refs/heads/"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call> <operator pos:line="28" pos:column="55">&amp;&amp;<pos:position pos:line="28" pos:column="65"/></operator>
		    <operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">starts_with<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">name<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="40">"refs/tags/"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54"> <block pos:line="29" pos:column="55">{
			<comment type="block" pos:line="30" pos:column="25">/* We want to catch the case where only weak
			 * matches are found and there are multiple
			 * matches, and where more than one strong
			 * matches are found, as ambiguous.  One
			 * strong match with zero or more weak matches
			 * are acceptable as a unique match.
			 */</comment>
			<expr_stmt><expr><name pos:line="37" pos:column="25">matched_weak<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">=<pos:position pos:line="37" pos:column="39"/></operator> <name pos:line="37" pos:column="40">refs<pos:position pos:line="37" pos:column="44"/></name></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">weak_match<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">++<pos:position pos:line="38" pos:column="37"/></operator></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then>
		<else pos:line="40" pos:column="17">else <block pos:line="40" pos:column="22">{
			<expr_stmt><expr><name pos:line="41" pos:column="25">matched<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="35">refs<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">match<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">++<pos:position pos:line="42" pos:column="32"/></operator></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></else></if>
	}<pos:position pos:line="44" pos:column="10"/></block></for>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">matched<pos:position pos:line="45" pos:column="21"/></name></expr>)<pos:position pos:line="45" pos:column="22"/></condition><then pos:line="45" pos:column="22"> <block pos:line="45" pos:column="23">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">matched_ref<pos:position pos:line="46" pos:column="32"/></name></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="47" pos:column="25">*<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="26">matched_ref<pos:position pos:line="47" pos:column="37"/></name> <operator pos:line="47" pos:column="38">=<pos:position pos:line="47" pos:column="39"/></operator> <name pos:line="47" pos:column="40">matched_weak<pos:position pos:line="47" pos:column="52"/></name></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt></block></then></if>
		<return pos:line="48" pos:column="17">return <expr><name pos:line="48" pos:column="24">weak_match<pos:position pos:line="48" pos:column="34"/></name></expr>;<pos:position pos:line="48" pos:column="35"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then>
	<else pos:line="50" pos:column="9">else <block pos:line="50" pos:column="14">{
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">matched_ref<pos:position pos:line="51" pos:column="32"/></name></expr>)<pos:position pos:line="51" pos:column="33"/></condition><then pos:line="51" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="25">*<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">matched_ref<pos:position pos:line="52" pos:column="37"/></name> <operator pos:line="52" pos:column="38">=<pos:position pos:line="52" pos:column="39"/></operator> <name pos:line="52" pos:column="40">matched<pos:position pos:line="52" pos:column="47"/></name></expr>;<pos:position pos:line="52" pos:column="48"/></expr_stmt></block></then></if>
		<return pos:line="53" pos:column="17">return <expr><name pos:line="53" pos:column="24">match<pos:position pos:line="53" pos:column="29"/></name></expr>;<pos:position pos:line="53" pos:column="30"/></return>
	}<pos:position pos:line="54" pos:column="10"/></block></else></if>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6136_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">grep_submodule<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">grep_opt<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">opt<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">object_id<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">oid<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">filename<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">path<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">is_submodule_active<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">the_repository<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">path<pos:position pos:line="4" pos:column="54"/></name></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="56"/></condition><then pos:line="4" pos:column="56">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return></block></then></if>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">is_submodule_populated_gently<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">path<pos:position pos:line="6" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">NULL<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="56"/></condition><then pos:line="6" pos:column="56"> <block pos:line="6" pos:column="57">{
		<comment type="block" pos:line="7" pos:column="17">/*
		 * If searching history, check for the presence of the
		 * submodule's gitdir before skipping the submodule.
		 */</comment>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">oid<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
			<decl_stmt><decl><type><specifier pos:line="12" pos:column="25">const<pos:position pos:line="12" pos:column="30"/></specifier> <name><name pos:line="12" pos:column="31">struct<pos:position pos:line="12" pos:column="37"/></name> <name pos:line="12" pos:column="38">submodule<pos:position pos:line="12" pos:column="47"/></name></name> <modifier pos:line="12" pos:column="48">*<pos:position pos:line="12" pos:column="49"/></modifier></type><name pos:line="12" pos:column="49">sub<pos:position pos:line="12" pos:column="52"/></name> <init pos:line="12" pos:column="53">=
					<expr><call><name pos:line="13" pos:column="41">submodule_from_path<pos:position pos:line="13" pos:column="60"/></name><argument_list pos:line="13" pos:column="60">(<argument><expr><name pos:line="13" pos:column="61">null_sha1<pos:position pos:line="13" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="72">path<pos:position pos:line="13" pos:column="76"/></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="78"/></decl_stmt>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">sub<pos:position pos:line="14" pos:column="32"/></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="33">path<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <call><name pos:line="15" pos:column="40">git_path<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><literal type="string" pos:line="15" pos:column="49">"modules/%s"<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="63">sub<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">name<pos:position pos:line="15" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt></block></then></if>

			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><operator pos:line="17" pos:column="29">!<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="30">(<pos:position pos:line="17" pos:column="31"/></operator><call><name pos:line="17" pos:column="31">is_directory<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">path<pos:position pos:line="17" pos:column="48"/></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call> <operator pos:line="17" pos:column="50">&amp;&amp;<pos:position pos:line="17" pos:column="60"/></operator> <call><name pos:line="17" pos:column="53">is_git_directory<pos:position pos:line="17" pos:column="69"/></name><argument_list pos:line="17" pos:column="69">(<argument><expr><name pos:line="17" pos:column="70">path<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call><operator pos:line="17" pos:column="75">)<pos:position pos:line="17" pos:column="76"/></operator></expr>)<pos:position pos:line="17" pos:column="77"/></condition><then pos:line="17" pos:column="77">
				<block type="pseudo"><return pos:line="18" pos:column="33">return <expr><literal type="number" pos:line="18" pos:column="40">0<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="19" pos:column="18"/></block></then> <else pos:line="19" pos:column="19">else <block pos:line="19" pos:column="24">{
			<return pos:line="20" pos:column="25">return <expr><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr>;<pos:position pos:line="20" pos:column="34"/></return>
		}<pos:position pos:line="21" pos:column="18"/></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

<cpp:ifndef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifndef<pos:position pos:line="24" pos:column="8"/></cpp:directive> <name pos:line="24" pos:column="9">NO_PTHREADS<pos:position pos:line="24" pos:column="20"/></name></cpp:ifndef>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">num_threads<pos:position pos:line="25" pos:column="24"/></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25"> <block pos:line="25" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">add_work<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">opt<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="31">GREP_SOURCE_SUBMODULE<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">filename<pos:position pos:line="26" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="64">path<pos:position pos:line="26" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="70">oid<pos:position pos:line="26" pos:column="73"/></name></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
	<block pos:line="30" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="31" pos:column="17">struct<pos:position pos:line="31" pos:column="23"/></name> <name pos:line="31" pos:column="24">grep_source<pos:position pos:line="31" pos:column="35"/></name></name></type> <name pos:line="31" pos:column="36">gs<pos:position pos:line="31" pos:column="38"/></name></decl>;<pos:position pos:line="31" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int<pos:position pos:line="32" pos:column="20"/></name></type> <name pos:line="32" pos:column="21">hit<pos:position pos:line="32" pos:column="24"/></name></decl>;<pos:position pos:line="32" pos:column="25"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">grep_source_init<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><operator pos:line="34" pos:column="34">&amp;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="35">gs<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">GREP_SOURCE_SUBMODULE<pos:position pos:line="34" pos:column="60"/></name></expr></argument>,
				 <argument><expr><name pos:line="35" pos:column="34">filename<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">path<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">oid<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">hit<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <call><name pos:line="36" pos:column="23">grep_submodule_launch<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><name pos:line="36" pos:column="45">opt<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="50">&amp;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="51">gs<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="38" pos:column="17">grep_source_clear<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><operator pos:line="38" pos:column="35">&amp;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="36">gs<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">hit<pos:position pos:line="39" pos:column="27"/></name></expr>;<pos:position pos:line="39" pos:column="28"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></else></if>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

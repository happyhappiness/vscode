<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_177_git-2.5.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">reuse_combine_diff<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">sline<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">sline<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">unsigned<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">long<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">cnt<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">i<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">j<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/* We have already examined parent j and we know parent i
	 * and parent j are the same, so reuse the combined result
	 * of parent j for parent i.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">lno<pos:position pos:line="8" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="28">imask<pos:position pos:line="8" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="35">jmask<pos:position pos:line="8" pos:column="40"/></name></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">imask<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><literal type="number" pos:line="9" pos:column="18">1UL<pos:position pos:line="9" pos:column="21"/></literal><operator pos:line="9" pos:column="21">&lt;&lt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="23">i<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">jmask<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><literal type="number" pos:line="10" pos:column="18">1UL<pos:position pos:line="10" pos:column="21"/></literal><operator pos:line="10" pos:column="21">&lt;&lt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="23">j<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">lno<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></init> <condition><expr><name pos:line="12" pos:column="23">lno<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&lt;=<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="30">cnt<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></condition> <incr><expr><name pos:line="12" pos:column="35">lno<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">++<pos:position pos:line="12" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="41"/></control> <block pos:line="12" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">lline<pos:position pos:line="13" pos:column="29"/></name></name> <modifier pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></modifier></type><name pos:line="13" pos:column="31">ll<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><name><name pos:line="13" pos:column="36">sline<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">lost<pos:position pos:line="13" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="48"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">sline<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">p_lno<pos:position pos:line="14" pos:column="29"/></name><index pos:line="14" pos:column="29">[<expr><name pos:line="14" pos:column="30">i<pos:position pos:line="14" pos:column="31"/></name></expr>]<pos:position pos:line="14" pos:column="32"/></index></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <name><name pos:line="14" pos:column="35">sline<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">p_lno<pos:position pos:line="14" pos:column="47"/></name><index pos:line="14" pos:column="47">[<expr><name pos:line="14" pos:column="48">j<pos:position pos:line="14" pos:column="49"/></name></expr>]<pos:position pos:line="14" pos:column="50"/></index></name></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
		<while pos:line="15" pos:column="17">while <condition pos:line="15" pos:column="23">(<expr><name pos:line="15" pos:column="24">ll<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition> <block pos:line="15" pos:column="28">{
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name><name pos:line="16" pos:column="29">ll<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">parent_map<pos:position pos:line="16" pos:column="43"/></name></name> <operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator> <name pos:line="16" pos:column="46">jmask<pos:position pos:line="16" pos:column="51"/></name></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="33">ll<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">parent_map<pos:position pos:line="17" pos:column="47"/></name></name> <operator pos:line="17" pos:column="48">|=<pos:position pos:line="17" pos:column="50"/></operator> <name pos:line="17" pos:column="51">imask<pos:position pos:line="17" pos:column="56"/></name></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="18" pos:column="25">ll<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <name><name pos:line="18" pos:column="30">ll<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">next<pos:position pos:line="18" pos:column="38"/></name></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></while>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">sline<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">flag<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="35">jmask<pos:position pos:line="20" pos:column="40"/></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="25">sline<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">flag<pos:position pos:line="21" pos:column="36"/></name></name> <operator pos:line="21" pos:column="37">|=<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">imask<pos:position pos:line="21" pos:column="45"/></name></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">sline<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">++<pos:position pos:line="22" pos:column="24"/></operator></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>
	<comment type="block" pos:line="24" pos:column="9">/* the overall size of the file (sline[cnt]) */</comment>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">sline<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">p_lno<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name pos:line="25" pos:column="22">i<pos:position pos:line="25" pos:column="23"/></name></expr>]<pos:position pos:line="25" pos:column="24"/></index></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <name><name pos:line="25" pos:column="27">sline<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">p_lno<pos:position pos:line="25" pos:column="39"/></name><index pos:line="25" pos:column="39">[<expr><name pos:line="25" pos:column="40">j<pos:position pos:line="25" pos:column="41"/></name></expr>]<pos:position pos:line="25" pos:column="42"/></index></name></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

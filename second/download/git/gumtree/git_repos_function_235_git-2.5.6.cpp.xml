<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_235_git-2.5.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">nr<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">version<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">unsigned<pos:position pos:line="6" pos:column="24"/></name> <name pos:line="6" pos:column="25">int<pos:position pos:line="6" pos:column="28"/></name></type> <name><name pos:line="6" pos:column="29">top_index<pos:position pos:line="6" pos:column="38"/></name><index pos:line="6" pos:column="38">[<expr><literal type="number" pos:line="6" pos:column="39">256<pos:position pos:line="6" pos:column="42"/></literal></expr>]<pos:position pos:line="6" pos:column="43"/></index></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">git_setup_gettext<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">argc<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">!=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">usage<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">show_index_usage<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">fread<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">top_index<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="30">2<pos:position pos:line="12" pos:column="31"/></literal> <operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">4<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="37">1<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">stdin<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call> <operator pos:line="12" pos:column="47">!=<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">1<pos:position pos:line="12" pos:column="51"/></literal></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="string" pos:line="13" pos:column="21">"unable to read header"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">top_index<pos:position pos:line="14" pos:column="22"/></name><index pos:line="14" pos:column="22">[<expr><literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr>]<pos:position pos:line="14" pos:column="25"/></index></name> <operator pos:line="14" pos:column="26">==<pos:position pos:line="14" pos:column="28"/></operator> <call><name pos:line="14" pos:column="29">htonl<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">PACK_IDX_SIGNATURE<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="55"/></condition><then pos:line="14" pos:column="55"> <block pos:line="14" pos:column="56">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">version<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <call><name pos:line="15" pos:column="27">ntohl<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name><name pos:line="15" pos:column="33">top_index<pos:position pos:line="15" pos:column="42"/></name><index pos:line="15" pos:column="42">[<expr><literal type="number" pos:line="15" pos:column="43">1<pos:position pos:line="15" pos:column="44"/></literal></expr>]<pos:position pos:line="15" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">version<pos:position pos:line="16" pos:column="28"/></name> <argument_list type="generic" pos:line="16" pos:column="29">&lt; <argument><expr><literal type="number" pos:line="16" pos:column="31">2<pos:position pos:line="16" pos:column="32"/></literal> <operator pos:line="16" pos:column="33">||<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">version<pos:position pos:line="16" pos:column="43"/></name></expr></argument> &gt;<pos:position pos:line="16" pos:column="48"/></argument_list></name> <literal type="number" pos:line="16" pos:column="46">2<pos:position pos:line="16" pos:column="47"/></literal></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">die<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="string" pos:line="17" pos:column="29">"unknown index version"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">fread<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">top_index<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="38">256<pos:position pos:line="18" pos:column="41"/></literal> <operator pos:line="18" pos:column="42">*<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">4<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="47">1<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">stdin<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call> <operator pos:line="18" pos:column="57">!=<pos:position pos:line="18" pos:column="59"/></operator> <literal type="number" pos:line="18" pos:column="60">1<pos:position pos:line="18" pos:column="61"/></literal></expr>)<pos:position pos:line="18" pos:column="62"/></condition><then pos:line="18" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="string" pos:line="19" pos:column="29">"unable to read index"<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">version<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">1<pos:position pos:line="21" pos:column="28"/></literal></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">fread<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><operator pos:line="22" pos:column="27">&amp;<pos:position pos:line="22" pos:column="32"/></operator><name><name pos:line="22" pos:column="28">top_index<pos:position pos:line="22" pos:column="37"/></name><index pos:line="22" pos:column="37">[<expr><literal type="number" pos:line="22" pos:column="38">2<pos:position pos:line="22" pos:column="39"/></literal></expr>]<pos:position pos:line="22" pos:column="40"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="42">254<pos:position pos:line="22" pos:column="45"/></literal> <operator pos:line="22" pos:column="46">*<pos:position pos:line="22" pos:column="47"/></operator> <literal type="number" pos:line="22" pos:column="48">4<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="51">1<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">stdin<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call> <operator pos:line="22" pos:column="61">!=<pos:position pos:line="22" pos:column="63"/></operator> <literal type="number" pos:line="22" pos:column="64">1<pos:position pos:line="22" pos:column="65"/></literal></expr>)<pos:position pos:line="22" pos:column="66"/></condition><then pos:line="22" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">die<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"unable to read index"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="25" pos:column="9">nr<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="25">256<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></condition> <incr><expr><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">++<pos:position pos:line="26" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="34"/></control> <block pos:line="26" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">unsigned<pos:position pos:line="27" pos:column="25"/></name></type> <name pos:line="27" pos:column="26">n<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><call><name pos:line="27" pos:column="30">ntohl<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name><name pos:line="27" pos:column="36">top_index<pos:position pos:line="27" pos:column="45"/></name><index pos:line="27" pos:column="45">[<expr><name pos:line="27" pos:column="46">i<pos:position pos:line="27" pos:column="47"/></name></expr>]<pos:position pos:line="27" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="50"/></decl_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">n<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="25">nr<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">die<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"corrupt index file"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="30" pos:column="17">nr<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">n<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">version<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="24">1<pos:position pos:line="32" pos:column="25"/></literal></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
		<for pos:line="33" pos:column="17">for <control pos:line="33" pos:column="21">(<init><expr><name pos:line="33" pos:column="22">i<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></init> <condition><expr><name pos:line="33" pos:column="29">i<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">&lt;<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="33">nr<pos:position pos:line="33" pos:column="35"/></name></expr>;<pos:position pos:line="33" pos:column="36"/></condition> <incr><expr><name pos:line="33" pos:column="37">i<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">++<pos:position pos:line="33" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="41"/></control> <block pos:line="33" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="34" pos:column="25">unsigned<pos:position pos:line="34" pos:column="33"/></name> <name pos:line="34" pos:column="34">int<pos:position pos:line="34" pos:column="37"/></name></type> <name pos:line="34" pos:column="38">offset<pos:position pos:line="34" pos:column="44"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="34" pos:column="46">entry<pos:position pos:line="34" pos:column="51"/></name><index pos:line="34" pos:column="51">[<expr><literal type="number" pos:line="34" pos:column="52">6<pos:position pos:line="34" pos:column="53"/></literal></expr>]<pos:position pos:line="34" pos:column="54"/></index></name></decl>;<pos:position pos:line="34" pos:column="55"/></decl_stmt>

			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><call><name pos:line="36" pos:column="29">fread<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">entry<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="42">4<pos:position pos:line="36" pos:column="43"/></literal> <operator pos:line="36" pos:column="44">+<pos:position pos:line="36" pos:column="45"/></operator> <literal type="number" pos:line="36" pos:column="46">20<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="50">1<pos:position pos:line="36" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">stdin<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call> <operator pos:line="36" pos:column="60">!=<pos:position pos:line="36" pos:column="62"/></operator> <literal type="number" pos:line="36" pos:column="63">1<pos:position pos:line="36" pos:column="64"/></literal></expr>)<pos:position pos:line="36" pos:column="65"/></condition><then pos:line="36" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="33">die<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><literal type="string" pos:line="37" pos:column="37">"unable to read entry %u/%u"<pos:position pos:line="37" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="67">i<pos:position pos:line="37" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="70">nr<pos:position pos:line="37" pos:column="72"/></name></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="38" pos:column="25">offset<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <call><name pos:line="38" pos:column="34">ntohl<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name><name pos:line="38" pos:column="40">entry<pos:position pos:line="38" pos:column="45"/></name><index pos:line="38" pos:column="45">[<expr><literal type="number" pos:line="38" pos:column="46">0<pos:position pos:line="38" pos:column="47"/></literal></expr>]<pos:position pos:line="38" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">printf<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><literal type="string" pos:line="39" pos:column="32">"%u %s\n"<pos:position pos:line="39" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">offset<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="51">sha1_to_hex<pos:position pos:line="39" pos:column="62"/></name><argument_list pos:line="39" pos:column="62">(<argument><expr><operator pos:line="39" pos:column="63">(<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="64">void<pos:position pos:line="39" pos:column="68"/></name> <operator pos:line="39" pos:column="69">*<pos:position pos:line="39" pos:column="70"/></operator><operator pos:line="39" pos:column="70">)<pos:position pos:line="39" pos:column="71"/></operator><operator pos:line="39" pos:column="71">(<pos:position pos:line="39" pos:column="72"/></operator><name pos:line="39" pos:column="72">entry<pos:position pos:line="39" pos:column="77"/></name><operator pos:line="39" pos:column="77">+<pos:position pos:line="39" pos:column="78"/></operator><literal type="number" pos:line="39" pos:column="78">1<pos:position pos:line="39" pos:column="79"/></literal><operator pos:line="39" pos:column="79">)<pos:position pos:line="39" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="39" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="83"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></for>
	}<pos:position pos:line="41" pos:column="10"/></block></then> <else pos:line="41" pos:column="11">else <block pos:line="41" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">unsigned<pos:position pos:line="42" pos:column="25"/></name></type> <name pos:line="42" pos:column="26">off64_nr<pos:position pos:line="42" pos:column="34"/></name> <init pos:line="42" pos:column="35">= <expr><literal type="number" pos:line="42" pos:column="37">0<pos:position pos:line="42" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="39"/></decl_stmt>
		<struct pos:line="43" pos:column="17">struct <block pos:line="43" pos:column="24">{<public type="default" pos:line="43" pos:column="25">
			<decl_stmt><decl><type><name pos:line="44" pos:column="25">unsigned<pos:position pos:line="44" pos:column="33"/></name> <name pos:line="44" pos:column="34">char<pos:position pos:line="44" pos:column="38"/></name></type> <name><name pos:line="44" pos:column="39">sha1<pos:position pos:line="44" pos:column="43"/></name><index pos:line="44" pos:column="43">[<expr><literal type="number" pos:line="44" pos:column="44">20<pos:position pos:line="44" pos:column="46"/></literal></expr>]<pos:position pos:line="44" pos:column="47"/></index></name></decl>;<pos:position pos:line="44" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="45" pos:column="25">uint32_t<pos:position pos:line="45" pos:column="33"/></name></type> <name pos:line="45" pos:column="34">crc<pos:position pos:line="45" pos:column="37"/></name></decl>;<pos:position pos:line="45" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="46" pos:column="25">uint32_t<pos:position pos:line="46" pos:column="33"/></name></type> <name pos:line="46" pos:column="34">off<pos:position pos:line="46" pos:column="37"/></name></decl>;<pos:position pos:line="46" pos:column="38"/></decl_stmt>
		<pos:position pos:line="47" pos:column="3"/></public>}<pos:position pos:line="47" pos:column="18"/></block> <decl><modifier pos:line="47" pos:column="19">*<pos:position pos:line="47" pos:column="20"/></modifier><name pos:line="47" pos:column="20">entries<pos:position pos:line="47" pos:column="27"/></name> <init pos:line="47" pos:column="28">= <expr><call><name pos:line="47" pos:column="30">xmalloc<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">nr<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">*<pos:position pos:line="47" pos:column="42"/></operator> <sizeof pos:line="47" pos:column="43">sizeof<argument_list pos:line="47" pos:column="49">(<argument><expr><name><name pos:line="47" pos:column="50">entries<pos:position pos:line="47" pos:column="57"/></name><index pos:line="47" pos:column="57">[<expr><literal type="number" pos:line="47" pos:column="58">0<pos:position pos:line="47" pos:column="59"/></literal></expr>]<pos:position pos:line="47" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="63"/></struct>
		<for pos:line="48" pos:column="17">for <control pos:line="48" pos:column="21">(<init><expr><name pos:line="48" pos:column="22">i<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr>;<pos:position pos:line="48" pos:column="28"/></init> <condition><expr><name pos:line="48" pos:column="29">i<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">&lt;<pos:position pos:line="48" pos:column="35"/></operator> <name pos:line="48" pos:column="33">nr<pos:position pos:line="48" pos:column="35"/></name></expr>;<pos:position pos:line="48" pos:column="36"/></condition> <incr><expr><name pos:line="48" pos:column="37">i<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">++<pos:position pos:line="48" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="41"/></control>
			<block type="pseudo"><if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><call><name pos:line="49" pos:column="29">fread<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name><name pos:line="49" pos:column="35">entries<pos:position pos:line="49" pos:column="42"/></name><index pos:line="49" pos:column="42">[<expr><name pos:line="49" pos:column="43">i<pos:position pos:line="49" pos:column="44"/></name></expr>]<pos:position pos:line="49" pos:column="45"/></index></name><operator pos:line="49" pos:column="45">.<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">sha1<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="52">20<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="56">1<pos:position pos:line="49" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="59">stdin<pos:position pos:line="49" pos:column="64"/></name></expr></argument>)<pos:position pos:line="49" pos:column="65"/></argument_list></call> <operator pos:line="49" pos:column="66">!=<pos:position pos:line="49" pos:column="68"/></operator> <literal type="number" pos:line="49" pos:column="69">1<pos:position pos:line="49" pos:column="70"/></literal></expr>)<pos:position pos:line="49" pos:column="71"/></condition><then pos:line="49" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="33">die<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><literal type="string" pos:line="50" pos:column="37">"unable to read sha1 %u/%u"<pos:position pos:line="50" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="66">i<pos:position pos:line="50" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="69">nr<pos:position pos:line="50" pos:column="71"/></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt></block></then></if></block></for>
		<for pos:line="51" pos:column="17">for <control pos:line="51" pos:column="21">(<init><expr><name pos:line="51" pos:column="22">i<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></init> <condition><expr><name pos:line="51" pos:column="29">i<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">&lt;<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="33">nr<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></condition> <incr><expr><name pos:line="51" pos:column="37">i<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">++<pos:position pos:line="51" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="41"/></control>
			<block type="pseudo"><if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><call><name pos:line="52" pos:column="29">fread<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><operator pos:line="52" pos:column="35">&amp;<pos:position pos:line="52" pos:column="40"/></operator><name><name pos:line="52" pos:column="36">entries<pos:position pos:line="52" pos:column="43"/></name><index pos:line="52" pos:column="43">[<expr><name pos:line="52" pos:column="44">i<pos:position pos:line="52" pos:column="45"/></name></expr>]<pos:position pos:line="52" pos:column="46"/></index></name><operator pos:line="52" pos:column="46">.<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="47">crc<pos:position pos:line="52" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="52">4<pos:position pos:line="52" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="55">1<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">stdin<pos:position pos:line="52" pos:column="63"/></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call> <operator pos:line="52" pos:column="65">!=<pos:position pos:line="52" pos:column="67"/></operator> <literal type="number" pos:line="52" pos:column="68">1<pos:position pos:line="52" pos:column="69"/></literal></expr>)<pos:position pos:line="52" pos:column="70"/></condition><then pos:line="52" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="33">die<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><literal type="string" pos:line="53" pos:column="37">"unable to read crc %u/%u"<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="65">i<pos:position pos:line="53" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="68">nr<pos:position pos:line="53" pos:column="70"/></name></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="72"/></expr_stmt></block></then></if></block></for>
		<for pos:line="54" pos:column="17">for <control pos:line="54" pos:column="21">(<init><expr><name pos:line="54" pos:column="22">i<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">0<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></init> <condition><expr><name pos:line="54" pos:column="29">i<pos:position pos:line="54" pos:column="30"/></name> <operator pos:line="54" pos:column="31">&lt;<pos:position pos:line="54" pos:column="35"/></operator> <name pos:line="54" pos:column="33">nr<pos:position pos:line="54" pos:column="35"/></name></expr>;<pos:position pos:line="54" pos:column="36"/></condition> <incr><expr><name pos:line="54" pos:column="37">i<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">++<pos:position pos:line="54" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="41"/></control>
			<block type="pseudo"><if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><call><name pos:line="55" pos:column="29">fread<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><operator pos:line="55" pos:column="35">&amp;<pos:position pos:line="55" pos:column="40"/></operator><name><name pos:line="55" pos:column="36">entries<pos:position pos:line="55" pos:column="43"/></name><index pos:line="55" pos:column="43">[<expr><name pos:line="55" pos:column="44">i<pos:position pos:line="55" pos:column="45"/></name></expr>]<pos:position pos:line="55" pos:column="46"/></index></name><operator pos:line="55" pos:column="46">.<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="47">off<pos:position pos:line="55" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="52">4<pos:position pos:line="55" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="55">1<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="58">stdin<pos:position pos:line="55" pos:column="63"/></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call> <operator pos:line="55" pos:column="65">!=<pos:position pos:line="55" pos:column="67"/></operator> <literal type="number" pos:line="55" pos:column="68">1<pos:position pos:line="55" pos:column="69"/></literal></expr>)<pos:position pos:line="55" pos:column="70"/></condition><then pos:line="55" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">die<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><literal type="string" pos:line="56" pos:column="37">"unable to read 32b offset %u/%u"<pos:position pos:line="56" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="72">i<pos:position pos:line="56" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="75">nr<pos:position pos:line="56" pos:column="77"/></name></expr></argument>)<pos:position pos:line="56" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="79"/></expr_stmt></block></then></if></block></for>
		<for pos:line="57" pos:column="17">for <control pos:line="57" pos:column="21">(<init><expr><name pos:line="57" pos:column="22">i<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <literal type="number" pos:line="57" pos:column="26">0<pos:position pos:line="57" pos:column="27"/></literal></expr>;<pos:position pos:line="57" pos:column="28"/></init> <condition><expr><name pos:line="57" pos:column="29">i<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">&lt;<pos:position pos:line="57" pos:column="35"/></operator> <name pos:line="57" pos:column="33">nr<pos:position pos:line="57" pos:column="35"/></name></expr>;<pos:position pos:line="57" pos:column="36"/></condition> <incr><expr><name pos:line="57" pos:column="37">i<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">++<pos:position pos:line="57" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="41"/></control> <block pos:line="57" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="58" pos:column="25">uint64_t<pos:position pos:line="58" pos:column="33"/></name></type> <name pos:line="58" pos:column="34">offset<pos:position pos:line="58" pos:column="40"/></name></decl>;<pos:position pos:line="58" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="59" pos:column="25">uint32_t<pos:position pos:line="59" pos:column="33"/></name></type> <name pos:line="59" pos:column="34">off<pos:position pos:line="59" pos:column="37"/></name> <init pos:line="59" pos:column="38">= <expr><call><name pos:line="59" pos:column="40">ntohl<pos:position pos:line="59" pos:column="45"/></name><argument_list pos:line="59" pos:column="45">(<argument><expr><name><name pos:line="59" pos:column="46">entries<pos:position pos:line="59" pos:column="53"/></name><index pos:line="59" pos:column="53">[<expr><name pos:line="59" pos:column="54">i<pos:position pos:line="59" pos:column="55"/></name></expr>]<pos:position pos:line="59" pos:column="56"/></index></name><operator pos:line="59" pos:column="56">.<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="57">off<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="59" pos:column="62"/></decl_stmt>
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><operator pos:line="60" pos:column="29">!<pos:position pos:line="60" pos:column="30"/></operator><operator pos:line="60" pos:column="30">(<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">off<pos:position pos:line="60" pos:column="34"/></name> <operator pos:line="60" pos:column="35">&amp;<pos:position pos:line="60" pos:column="40"/></operator> <literal type="number" pos:line="60" pos:column="37">0x80000000<pos:position pos:line="60" pos:column="47"/></literal><operator pos:line="60" pos:column="47">)<pos:position pos:line="60" pos:column="48"/></operator></expr>)<pos:position pos:line="60" pos:column="49"/></condition><then pos:line="60" pos:column="49"> <block pos:line="60" pos:column="50">{
				<expr_stmt><expr><name pos:line="61" pos:column="33">offset<pos:position pos:line="61" pos:column="39"/></name> <operator pos:line="61" pos:column="40">=<pos:position pos:line="61" pos:column="41"/></operator> <name pos:line="61" pos:column="42">off<pos:position pos:line="61" pos:column="45"/></name></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="62" pos:column="26"/></block></then> <else pos:line="62" pos:column="27">else <block pos:line="62" pos:column="32">{
				<decl_stmt><decl><type><name pos:line="63" pos:column="33">uint32_t<pos:position pos:line="63" pos:column="41"/></name></type> <name><name pos:line="63" pos:column="42">off64<pos:position pos:line="63" pos:column="47"/></name><index pos:line="63" pos:column="47">[<expr><literal type="number" pos:line="63" pos:column="48">2<pos:position pos:line="63" pos:column="49"/></literal></expr>]<pos:position pos:line="63" pos:column="50"/></index></name></decl>;<pos:position pos:line="63" pos:column="51"/></decl_stmt>
				<if pos:line="64" pos:column="33">if <condition pos:line="64" pos:column="36">(<expr><operator pos:line="64" pos:column="37">(<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="38">off<pos:position pos:line="64" pos:column="41"/></name> <operator pos:line="64" pos:column="42">&amp;<pos:position pos:line="64" pos:column="47"/></operator> <literal type="number" pos:line="64" pos:column="44">0x7fffffff<pos:position pos:line="64" pos:column="54"/></literal><operator pos:line="64" pos:column="54">)<pos:position pos:line="64" pos:column="55"/></operator> <operator pos:line="64" pos:column="56">!=<pos:position pos:line="64" pos:column="58"/></operator> <name pos:line="64" pos:column="59">off64_nr<pos:position pos:line="64" pos:column="67"/></name></expr>)<pos:position pos:line="64" pos:column="68"/></condition><then pos:line="64" pos:column="68">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="41">die<pos:position pos:line="65" pos:column="44"/></name><argument_list pos:line="65" pos:column="44">(<argument><expr><literal type="string" pos:line="65" pos:column="45">"inconsistent 64b offset index"<pos:position pos:line="65" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="78"/></expr_stmt></block></then></if>
				<if pos:line="66" pos:column="33">if <condition pos:line="66" pos:column="36">(<expr><call><name pos:line="66" pos:column="37">fread<pos:position pos:line="66" pos:column="42"/></name><argument_list pos:line="66" pos:column="42">(<argument><expr><name pos:line="66" pos:column="43">off64<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="50">8<pos:position pos:line="66" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="53">1<pos:position pos:line="66" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="56">stdin<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call> <operator pos:line="66" pos:column="63">!=<pos:position pos:line="66" pos:column="65"/></operator> <literal type="number" pos:line="66" pos:column="66">1<pos:position pos:line="66" pos:column="67"/></literal></expr>)<pos:position pos:line="66" pos:column="68"/></condition><then pos:line="66" pos:column="68">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="41">die<pos:position pos:line="67" pos:column="44"/></name><argument_list pos:line="67" pos:column="44">(<argument><expr><literal type="string" pos:line="67" pos:column="45">"unable to read 64b offset %u"<pos:position pos:line="67" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="77">off64_nr<pos:position pos:line="67" pos:column="85"/></name></expr></argument>)<pos:position pos:line="67" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="87"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="68" pos:column="33">offset<pos:position pos:line="68" pos:column="39"/></name> <operator pos:line="68" pos:column="40">=<pos:position pos:line="68" pos:column="41"/></operator> <operator pos:line="68" pos:column="42">(<pos:position pos:line="68" pos:column="43"/></operator><operator pos:line="68" pos:column="43">(<pos:position pos:line="68" pos:column="44"/></operator><operator pos:line="68" pos:column="44">(<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="45">uint64_t<pos:position pos:line="68" pos:column="53"/></name><operator pos:line="68" pos:column="53">)<pos:position pos:line="68" pos:column="54"/></operator><call><name pos:line="68" pos:column="54">ntohl<pos:position pos:line="68" pos:column="59"/></name><argument_list pos:line="68" pos:column="59">(<argument><expr><name><name pos:line="68" pos:column="60">off64<pos:position pos:line="68" pos:column="65"/></name><index pos:line="68" pos:column="65">[<expr><literal type="number" pos:line="68" pos:column="66">0<pos:position pos:line="68" pos:column="67"/></literal></expr>]<pos:position pos:line="68" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call><operator pos:line="68" pos:column="69">)<pos:position pos:line="68" pos:column="70"/></operator> <operator pos:line="68" pos:column="71">&lt;&lt;<pos:position pos:line="68" pos:column="79"/></operator> <literal type="number" pos:line="68" pos:column="74">32<pos:position pos:line="68" pos:column="76"/></literal><operator pos:line="68" pos:column="76">)<pos:position pos:line="68" pos:column="77"/></operator> <operator pos:line="68" pos:column="78">|<pos:position pos:line="68" pos:column="79"/></operator>
						     <call><name pos:line="69" pos:column="54">ntohl<pos:position pos:line="69" pos:column="59"/></name><argument_list pos:line="69" pos:column="59">(<argument><expr><name><name pos:line="69" pos:column="60">off64<pos:position pos:line="69" pos:column="65"/></name><index pos:line="69" pos:column="65">[<expr><literal type="number" pos:line="69" pos:column="66">1<pos:position pos:line="69" pos:column="67"/></literal></expr>]<pos:position pos:line="69" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="69" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="70"/></expr_stmt>
				<expr_stmt><expr><name pos:line="70" pos:column="33">off64_nr<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">++<pos:position pos:line="70" pos:column="43"/></operator></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="71" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">printf<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><literal type="string" pos:line="72" pos:column="32">"%"<pos:position pos:line="72" pos:column="35"/></literal> <name pos:line="72" pos:column="36">PRIuMAX<pos:position pos:line="72" pos:column="43"/></name> <literal type="string" pos:line="72" pos:column="44">" %s (%08"<pos:position pos:line="72" pos:column="54"/></literal><name pos:line="72" pos:column="54">PRIx32<pos:position pos:line="72" pos:column="60"/></name><literal type="string" pos:line="72" pos:column="60">")\n"<pos:position pos:line="72" pos:column="65"/></literal></expr></argument>,
			       <argument><expr><operator pos:line="73" pos:column="32">(<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">uintmax_t<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">)<pos:position pos:line="73" pos:column="43"/></operator> <name pos:line="73" pos:column="44">offset<pos:position pos:line="73" pos:column="50"/></name></expr></argument>,
			       <argument><expr><call><name pos:line="74" pos:column="32">sha1_to_hex<pos:position pos:line="74" pos:column="43"/></name><argument_list pos:line="74" pos:column="43">(<argument><expr><name><name pos:line="74" pos:column="44">entries<pos:position pos:line="74" pos:column="51"/></name><index pos:line="74" pos:column="51">[<expr><name pos:line="74" pos:column="52">i<pos:position pos:line="74" pos:column="53"/></name></expr>]<pos:position pos:line="74" pos:column="54"/></index></name><operator pos:line="74" pos:column="54">.<pos:position pos:line="74" pos:column="55"/></operator><name pos:line="74" pos:column="55">sha1<pos:position pos:line="74" pos:column="59"/></name></expr></argument>)<pos:position pos:line="74" pos:column="60"/></argument_list></call></expr></argument>,
			       <argument><expr><call><name pos:line="75" pos:column="32">ntohl<pos:position pos:line="75" pos:column="37"/></name><argument_list pos:line="75" pos:column="37">(<argument><expr><name><name pos:line="75" pos:column="38">entries<pos:position pos:line="75" pos:column="45"/></name><index pos:line="75" pos:column="45">[<expr><name pos:line="75" pos:column="46">i<pos:position pos:line="75" pos:column="47"/></name></expr>]<pos:position pos:line="75" pos:column="48"/></index></name><operator pos:line="75" pos:column="48">.<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="49">crc<pos:position pos:line="75" pos:column="52"/></name></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">free<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">entries<pos:position pos:line="77" pos:column="29"/></name></expr></argument>)<pos:position pos:line="77" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="78" pos:column="10"/></block></else></if>
	<return pos:line="79" pos:column="9">return <expr><literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

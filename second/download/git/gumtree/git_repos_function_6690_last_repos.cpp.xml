<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6690_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mingw_rmdir<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">pathname<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">tries<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">wchar_t<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">wpathname<pos:position pos:line="4" pos:column="26"/></name><index pos:line="4" pos:column="26">[<expr><name pos:line="4" pos:column="27">MAX_PATH<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">xutftowcs_path<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">wpathname<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="39">pathname<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call> <operator pos:line="5" pos:column="49">&lt;<pos:position pos:line="5" pos:column="53"/></operator> <literal type="number" pos:line="5" pos:column="51">0<pos:position pos:line="5" pos:column="52"/></literal></expr>)<pos:position pos:line="5" pos:column="53"/></condition><then pos:line="5" pos:column="53">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">ret<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <call><name pos:line="8" pos:column="23">_wrmdir<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">wpathname<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator> <operator pos:line="8" pos:column="43">==<pos:position pos:line="8" pos:column="45"/></operator> <operator pos:line="8" pos:column="46">-<pos:position pos:line="8" pos:column="47"/></operator><literal type="number" pos:line="8" pos:column="47">1<pos:position pos:line="8" pos:column="48"/></literal> <operator pos:line="8" pos:column="49">&amp;&amp;<pos:position pos:line="8" pos:column="59"/></operator> <name pos:line="8" pos:column="52">tries<pos:position pos:line="8" pos:column="57"/></name> <operator pos:line="8" pos:column="58">&lt;<pos:position pos:line="8" pos:column="62"/></operator> <call><name pos:line="8" pos:column="60">ARRAY_SIZE<pos:position pos:line="8" pos:column="70"/></name><argument_list pos:line="8" pos:column="70">(<argument><expr><name pos:line="8" pos:column="71">delay<pos:position pos:line="8" pos:column="76"/></name></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="78"/></condition> <block pos:line="8" pos:column="79">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">is_file_in_use_error<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><call><name pos:line="9" pos:column="43">GetLastError<pos:position pos:line="9" pos:column="55"/></name><argument_list pos:line="9" pos:column="55">()<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">errno<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <call><name pos:line="10" pos:column="33">err_win_to_posix<pos:position pos:line="10" pos:column="49"/></name><argument_list pos:line="10" pos:column="49">(<argument><expr><call><name pos:line="10" pos:column="50">GetLastError<pos:position pos:line="10" pos:column="62"/></name><argument_list pos:line="10" pos:column="62">()<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">errno<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">EACCES<pos:position pos:line="11" pos:column="36"/></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
			<block type="pseudo"><break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">is_dir_empty<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">wpathname<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <block pos:line="13" pos:column="47">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">errno<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">=<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">ENOTEMPTY<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
			<break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="17" pos:column="17">/*
		 * We assume that some other process had the source or
		 * destination file open at the wrong moment and retry.
		 * In order to give the other process a higher chance to
		 * complete its operation, we give up our time slice now.
		 * If we have to retry again, we do sleep a bit.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">Sleep<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name><name pos:line="24" pos:column="23">delay<pos:position pos:line="24" pos:column="28"/></name><index pos:line="24" pos:column="28">[<expr><name pos:line="24" pos:column="29">tries<pos:position pos:line="24" pos:column="34"/></name></expr>]<pos:position pos:line="24" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">tries<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">++<pos:position pos:line="25" pos:column="24"/></operator></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></while>
	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">ret<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">==<pos:position pos:line="27" pos:column="22"/></operator> <operator pos:line="27" pos:column="23">-<pos:position pos:line="27" pos:column="24"/></operator><literal type="number" pos:line="27" pos:column="24">1<pos:position pos:line="27" pos:column="25"/></literal> <operator pos:line="27" pos:column="26">&amp;&amp;<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="29">errno<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">==<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">EACCES<pos:position pos:line="27" pos:column="44"/></name> <operator pos:line="27" pos:column="45">&amp;&amp;<pos:position pos:line="27" pos:column="55"/></operator> <call><name pos:line="27" pos:column="48">is_file_in_use_error<pos:position pos:line="27" pos:column="68"/></name><argument_list pos:line="27" pos:column="68">(<argument><expr><call><name pos:line="27" pos:column="69">GetLastError<pos:position pos:line="27" pos:column="81"/></name><argument_list pos:line="27" pos:column="81">()<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="84"/></argument_list></call> <operator pos:line="27" pos:column="85">&amp;&amp;<pos:position pos:line="27" pos:column="95"/></operator>
	       <call><name pos:line="28" pos:column="16">ask_yes_no_if_possible<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><literal type="string" pos:line="28" pos:column="39">"Deletion of directory '%s' failed. "<pos:position pos:line="28" pos:column="76"/></literal>
			<literal type="string" pos:line="29" pos:column="25">"Should I try again?"<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">pathname<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="58"/></condition>
	       <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="16">ret<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">_wrmdir<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">wpathname<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt></block></while>
	<return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">ret<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

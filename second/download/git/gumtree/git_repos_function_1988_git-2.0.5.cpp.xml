<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1988_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_name_decoration<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">enum<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">decoration_type<pos:position pos:line="1" pos:column="53"/></name></name></type> <name pos:line="1" pos:column="54">type<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">name<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="78">struct<pos:position pos:line="1" pos:column="84"/></name> <name pos:line="1" pos:column="85">object<pos:position pos:line="1" pos:column="91"/></name></name> <modifier pos:line="1" pos:column="92">*<pos:position pos:line="1" pos:column="93"/></modifier></type><name pos:line="1" pos:column="93">obj<pos:position pos:line="1" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="97"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">nlen<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">strlen<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">name<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">name_decoration<pos:position pos:line="4" pos:column="31"/></name></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">res<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><call><name pos:line="4" pos:column="39">xmalloc<pos:position pos:line="4" pos:column="46"/></name><argument_list pos:line="4" pos:column="46">(<argument><expr><sizeof pos:line="4" pos:column="47">sizeof<argument_list pos:line="4" pos:column="53">(<argument><expr pos:line="4" pos:column="54">struct <name pos:line="4" pos:column="61">name_decoration<pos:position pos:line="4" pos:column="76"/></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></sizeof> <operator pos:line="4" pos:column="78">+<pos:position pos:line="4" pos:column="79"/></operator> <name pos:line="4" pos:column="80">nlen<pos:position pos:line="4" pos:column="84"/></name></expr></argument>)<pos:position pos:line="4" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="86"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">memcpy<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name><name pos:line="5" pos:column="16">res<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">name<pos:position pos:line="5" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">name<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">nlen<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">+<pos:position pos:line="5" pos:column="39"/></operator> <literal type="number" pos:line="5" pos:column="40">1<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">res<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">type<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">type<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">res<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">next<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">add_decoration<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="37">name_decoration<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="54">obj<pos:position pos:line="7" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="59">res<pos:position pos:line="7" pos:column="62"/></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

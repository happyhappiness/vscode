<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2591_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">crlf_to_worktree<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">path<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">src<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">size_t<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">len<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">strbuf<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">buf<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">enum<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">crlf_action<pos:position pos:line="2" pos:column="65"/></name></name></type> <name pos:line="2" pos:column="66">crlf_action<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">to_free<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">text_stat<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">stats<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">len<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">||<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">output_eol<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">crlf_action<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call> <operator pos:line="7" pos:column="45">!=<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="48">EOL_CRLF<pos:position pos:line="7" pos:column="56"/></name></expr>)<pos:position pos:line="7" pos:column="57"/></condition><then pos:line="7" pos:column="57">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">gather_stats<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">src<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">len<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="33">stats<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* No LF? Nothing to convert, regardless. */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">stats<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">.<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">lf<pos:position pos:line="13" pos:column="22"/></name></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/* Was it already in CRLF format? */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">stats<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">.<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">lf<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">==<pos:position pos:line="17" pos:column="24"/></operator> <name><name pos:line="17" pos:column="25">stats<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">crlf<pos:position pos:line="17" pos:column="35"/></name></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">crlf_action<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">==<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">CRLF_AUTO<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">||<pos:position pos:line="20" pos:column="40"/></operator> <name pos:line="20" pos:column="41">crlf_action<pos:position pos:line="20" pos:column="52"/></name> <operator pos:line="20" pos:column="53">==<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="56">CRLF_GUESS<pos:position pos:line="20" pos:column="66"/></name></expr>)<pos:position pos:line="20" pos:column="67"/></condition><then pos:line="20" pos:column="67"> <block pos:line="20" pos:column="68">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">crlf_action<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">==<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="36">CRLF_GUESS<pos:position pos:line="21" pos:column="46"/></name></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47"> <block pos:line="21" pos:column="48">{
			<comment type="block" pos:line="22" pos:column="25">/* If we have any CR or CRLF line endings, we do not touch it */</comment>
			<comment type="block" pos:line="23" pos:column="25">/* This is the new safer autocrlf-handling */</comment>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name><name pos:line="24" pos:column="29">stats<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">cr<pos:position pos:line="24" pos:column="37"/></name></name> <operator pos:line="24" pos:column="38">&gt;<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="40">0<pos:position pos:line="24" pos:column="41"/></literal> <operator pos:line="24" pos:column="42">||<pos:position pos:line="24" pos:column="44"/></operator> <name><name pos:line="24" pos:column="45">stats<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">crlf<pos:position pos:line="24" pos:column="55"/></name></name> <operator pos:line="24" pos:column="56">&gt;<pos:position pos:line="24" pos:column="60"/></operator> <literal type="number" pos:line="24" pos:column="58">0<pos:position pos:line="24" pos:column="59"/></literal></expr>)<pos:position pos:line="24" pos:column="60"/></condition><then pos:line="24" pos:column="60">
				<block type="pseudo"><return pos:line="25" pos:column="33">return <expr><literal type="number" pos:line="25" pos:column="40">0<pos:position pos:line="25" pos:column="41"/></literal></expr>;<pos:position pos:line="25" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="28" pos:column="17">/* If we have any bare CR characters, we're not going to touch it */</comment>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">stats<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">.<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">cr<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">!=<pos:position pos:line="29" pos:column="32"/></operator> <name><name pos:line="29" pos:column="33">stats<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">.<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">crlf<pos:position pos:line="29" pos:column="43"/></name></name></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44">
			<block type="pseudo"><return pos:line="30" pos:column="25">return <expr><literal type="number" pos:line="30" pos:column="32">0<pos:position pos:line="30" pos:column="33"/></literal></expr>;<pos:position pos:line="30" pos:column="34"/></return></block></then></if>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">is_binary<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">len<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="37">stats<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44">
			<block type="pseudo"><return pos:line="33" pos:column="25">return <expr><literal type="number" pos:line="33" pos:column="32">0<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="36" pos:column="9">/* are we "faking" in place editing ? */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">src<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <name><name pos:line="37" pos:column="20">buf<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">buf<pos:position pos:line="37" pos:column="28"/></name></name></expr>)<pos:position pos:line="37" pos:column="29"/></condition><then pos:line="37" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">to_free<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">strbuf_detach<pos:position pos:line="38" pos:column="40"/></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">buf<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">NULL<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">strbuf_grow<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">buf<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="26">len<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">+<pos:position pos:line="40" pos:column="31"/></operator> <name><name pos:line="40" pos:column="32">stats<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">.<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">lf<pos:position pos:line="40" pos:column="40"/></name></name> <operator pos:line="40" pos:column="41">-<pos:position pos:line="40" pos:column="42"/></operator> <name><name pos:line="40" pos:column="43">stats<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">.<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="49">crlf<pos:position pos:line="40" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init pos:line="41" pos:column="14">;<pos:position pos:line="41" pos:column="15"/></init><condition pos:line="41" pos:column="15">;<pos:position pos:line="41" pos:column="16"/></condition><incr/>)<pos:position pos:line="41" pos:column="17"/></control> <block pos:line="41" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="42" pos:column="17">const<pos:position pos:line="42" pos:column="22"/></specifier> <name pos:line="42" pos:column="23">char<pos:position pos:line="42" pos:column="27"/></name> <modifier pos:line="42" pos:column="28">*<pos:position pos:line="42" pos:column="29"/></modifier></type><name pos:line="42" pos:column="29">nl<pos:position pos:line="42" pos:column="31"/></name> <init pos:line="42" pos:column="32">= <expr><call><name pos:line="42" pos:column="34">memchr<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">src<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="46">'\n'<pos:position pos:line="42" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="52">len<pos:position pos:line="42" pos:column="55"/></name></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="57"/></decl_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">nl<pos:position pos:line="43" pos:column="24"/></name></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25">
			<block type="pseudo"><break pos:line="44" pos:column="25">break;<pos:position pos:line="44" pos:column="31"/></break></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">nl<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">&gt;<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="26">src<pos:position pos:line="45" pos:column="29"/></name> <operator pos:line="45" pos:column="30">&amp;&amp;<pos:position pos:line="45" pos:column="40"/></operator> <name><name pos:line="45" pos:column="33">nl<pos:position pos:line="45" pos:column="35"/></name><index pos:line="45" pos:column="35">[<expr><operator pos:line="45" pos:column="36">-<pos:position pos:line="45" pos:column="37"/></operator><literal type="number" pos:line="45" pos:column="37">1<pos:position pos:line="45" pos:column="38"/></literal></expr>]<pos:position pos:line="45" pos:column="39"/></index></name> <operator pos:line="45" pos:column="40">==<pos:position pos:line="45" pos:column="42"/></operator> <literal type="char" pos:line="45" pos:column="43">'\r'<pos:position pos:line="45" pos:column="47"/></literal></expr>)<pos:position pos:line="45" pos:column="48"/></condition><then pos:line="45" pos:column="48"> <block pos:line="45" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">strbuf_add<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">buf<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">src<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">nl<pos:position pos:line="46" pos:column="48"/></name> <operator pos:line="46" pos:column="49">+<pos:position pos:line="46" pos:column="50"/></operator> <literal type="number" pos:line="46" pos:column="51">1<pos:position pos:line="46" pos:column="52"/></literal> <operator pos:line="46" pos:column="53">-<pos:position pos:line="46" pos:column="54"/></operator> <name pos:line="46" pos:column="55">src<pos:position pos:line="46" pos:column="58"/></name></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then> <else pos:line="47" pos:column="19">else <block pos:line="47" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">strbuf_add<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">buf<pos:position pos:line="48" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="41">src<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">nl<pos:position pos:line="48" pos:column="48"/></name> <operator pos:line="48" pos:column="49">-<pos:position pos:line="48" pos:column="50"/></operator> <name pos:line="48" pos:column="51">src<pos:position pos:line="48" pos:column="54"/></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">strbuf_addstr<pos:position pos:line="49" pos:column="38"/></name><argument_list pos:line="49" pos:column="38">(<argument><expr><name pos:line="49" pos:column="39">buf<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="44">"\r\n"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="51" pos:column="17">len<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">-=<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">nl<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">+<pos:position pos:line="51" pos:column="28"/></operator> <literal type="number" pos:line="51" pos:column="29">1<pos:position pos:line="51" pos:column="30"/></literal> <operator pos:line="51" pos:column="31">-<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">src<pos:position pos:line="51" pos:column="36"/></name></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="52" pos:column="17">src<pos:position pos:line="52" pos:column="20"/></name>  <operator pos:line="52" pos:column="22">=<pos:position pos:line="52" pos:column="23"/></operator> <name pos:line="52" pos:column="24">nl<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">+<pos:position pos:line="52" pos:column="28"/></operator> <literal type="number" pos:line="52" pos:column="29">1<pos:position pos:line="52" pos:column="30"/></literal></expr>;<pos:position pos:line="52" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">strbuf_add<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">buf<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">src<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="30">len<pos:position pos:line="54" pos:column="33"/></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">free<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><name pos:line="56" pos:column="14">to_free<pos:position pos:line="56" pos:column="21"/></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
	<return pos:line="57" pos:column="9">return <expr><literal type="number" pos:line="57" pos:column="16">1<pos:position pos:line="57" pos:column="17"/></literal></expr>;<pos:position pos:line="57" pos:column="18"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

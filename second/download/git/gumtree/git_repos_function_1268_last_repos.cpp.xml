<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1268_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">NORETURN<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">diagnose_missing_default<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">def<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">flags<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">refname<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">refname<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">resolve_ref_unsafe<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">def<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="43">0<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">sha1<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="52">&amp;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="53">flags<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="60"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">refname<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">||<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="25">!<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">flags<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">&amp;<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="35">REF_ISSYMREF<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">)<pos:position pos:line="8" pos:column="48"/></operator> <operator pos:line="8" pos:column="49">||<pos:position pos:line="8" pos:column="51"/></operator> <operator pos:line="8" pos:column="52">(<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">flags<pos:position pos:line="8" pos:column="58"/></name> <operator pos:line="8" pos:column="59">&amp;<pos:position pos:line="8" pos:column="64"/></operator> <name pos:line="8" pos:column="61">REF_ISBROKEN<pos:position pos:line="8" pos:column="73"/></name><operator pos:line="8" pos:column="73">)<pos:position pos:line="8" pos:column="74"/></operator></expr>)<pos:position pos:line="8" pos:column="75"/></condition><then pos:line="8" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><call><name pos:line="9" pos:column="21">_<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><literal type="string" pos:line="9" pos:column="23">"your current branch appears to be broken"<pos:position pos:line="9" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">skip_prefix<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">refname<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="30">"refs/heads/"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="46">refname<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">die<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><call><name pos:line="12" pos:column="13">_<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"your current branch '%s' does not have any commits yet"<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr></argument>,
	    <argument><expr><name pos:line="13" pos:column="13">refname<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4193_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">lf_to_crlf<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">strbuf<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">msg<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></operator><operator pos:line="3" pos:column="15">new<pos:position pos:line="3" pos:column="18"/></operator></expr>;<pos:position pos:line="3" pos:column="19"/></expr_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">i<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">j<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">lastc<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* First pass: tally, in j, the size of the new string: */</comment>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">j<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr><operator pos:line="8" pos:column="23">,<pos:position pos:line="8" pos:column="24"/></operator> <expr><name pos:line="8" pos:column="25">lastc<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="char" pos:line="8" pos:column="33">'\0'<pos:position pos:line="8" pos:column="37"/></literal></expr>;<pos:position pos:line="8" pos:column="38"/></init> <condition><expr><name pos:line="8" pos:column="39">i<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">&lt;<pos:position pos:line="8" pos:column="45"/></operator> <name><name pos:line="8" pos:column="43">msg<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">len<pos:position pos:line="8" pos:column="51"/></name></name></expr>;<pos:position pos:line="8" pos:column="52"/></condition> <incr><expr><name pos:line="8" pos:column="53">i<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">++<pos:position pos:line="8" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="57"/></control> <block pos:line="8" pos:column="58">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">msg<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">buf<pos:position pos:line="9" pos:column="29"/></name><index pos:line="9" pos:column="29">[<expr><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name></expr>]<pos:position pos:line="9" pos:column="32"/></index></name> <operator pos:line="9" pos:column="33">==<pos:position pos:line="9" pos:column="35"/></operator> <literal type="char" pos:line="9" pos:column="36">'\n'<pos:position pos:line="9" pos:column="40"/></literal> <operator pos:line="9" pos:column="41">&amp;&amp;<pos:position pos:line="9" pos:column="51"/></operator> <name pos:line="9" pos:column="44">lastc<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">!=<pos:position pos:line="9" pos:column="52"/></operator> <literal type="char" pos:line="9" pos:column="53">'\r'<pos:position pos:line="9" pos:column="57"/></literal></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">j<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">++<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></then></if> <comment type="block" pos:line="10" pos:column="30">/* a CR will need to be added here */</comment>
		<expr_stmt><expr><name pos:line="11" pos:column="17">lastc<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name><name pos:line="11" pos:column="25">msg<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">buf<pos:position pos:line="11" pos:column="33"/></name><index pos:line="11" pos:column="33">[<expr><name pos:line="11" pos:column="34">i<pos:position pos:line="11" pos:column="35"/></name></expr>]<pos:position pos:line="11" pos:column="36"/></index></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">j<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">++<pos:position pos:line="12" pos:column="20"/></operator></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></for>

	<expr_stmt><expr><operator pos:line="15" pos:column="9">new<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">xmallocz<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">j<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

	<comment type="block" pos:line="17" pos:column="9">/*
	 * Second pass: write the new string.  Note that this loop is
	 * otherwise identical to the first pass.
	 */</comment>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">j<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr><operator pos:line="21" pos:column="23">,<pos:position pos:line="21" pos:column="24"/></operator> <expr><name pos:line="21" pos:column="25">lastc<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <literal type="char" pos:line="21" pos:column="33">'\0'<pos:position pos:line="21" pos:column="37"/></literal></expr>;<pos:position pos:line="21" pos:column="38"/></init> <condition><expr><name pos:line="21" pos:column="39">i<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">&lt;<pos:position pos:line="21" pos:column="45"/></operator> <name><name pos:line="21" pos:column="43">msg<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">len<pos:position pos:line="21" pos:column="51"/></name></name></expr>;<pos:position pos:line="21" pos:column="52"/></condition> <incr><expr><name pos:line="21" pos:column="53">i<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">++<pos:position pos:line="21" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="57"/></control> <block pos:line="21" pos:column="58">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">msg<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">buf<pos:position pos:line="22" pos:column="29"/></name><index pos:line="22" pos:column="29">[<expr><name pos:line="22" pos:column="30">i<pos:position pos:line="22" pos:column="31"/></name></expr>]<pos:position pos:line="22" pos:column="32"/></index></name> <operator pos:line="22" pos:column="33">==<pos:position pos:line="22" pos:column="35"/></operator> <literal type="char" pos:line="22" pos:column="36">'\n'<pos:position pos:line="22" pos:column="40"/></literal> <operator pos:line="22" pos:column="41">&amp;&amp;<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="44">lastc<pos:position pos:line="22" pos:column="49"/></name> <operator pos:line="22" pos:column="50">!=<pos:position pos:line="22" pos:column="52"/></operator> <literal type="char" pos:line="22" pos:column="53">'\r'<pos:position pos:line="22" pos:column="57"/></literal></expr>)<pos:position pos:line="22" pos:column="58"/></condition><then pos:line="22" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="25">new<pos:position pos:line="23" pos:column="28"/></operator><index pos:line="23" pos:column="28">[<expr><name pos:line="23" pos:column="29">j<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">++<pos:position pos:line="23" pos:column="32"/></operator></expr>]<pos:position pos:line="23" pos:column="33"/></index> <operator pos:line="23" pos:column="34">=<pos:position pos:line="23" pos:column="35"/></operator> <literal type="char" pos:line="23" pos:column="36">'\r'<pos:position pos:line="23" pos:column="40"/></literal></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="24" pos:column="17">lastc<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <operator pos:line="24" pos:column="25">new<pos:position pos:line="24" pos:column="28"/></operator><index pos:line="24" pos:column="28">[<expr><name pos:line="24" pos:column="29">j<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">++<pos:position pos:line="24" pos:column="32"/></operator></expr>]<pos:position pos:line="24" pos:column="33"/></index> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <name><name pos:line="24" pos:column="36">msg<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">buf<pos:position pos:line="24" pos:column="44"/></name><index pos:line="24" pos:column="44">[<expr><name pos:line="24" pos:column="45">i<pos:position pos:line="24" pos:column="46"/></name></expr>]<pos:position pos:line="24" pos:column="47"/></index></name></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">strbuf_attach<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">msg<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="28">new<pos:position pos:line="26" pos:column="31"/></operator></expr></argument>, <argument><expr><name pos:line="26" pos:column="33">j<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">j<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">+<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="40">1<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

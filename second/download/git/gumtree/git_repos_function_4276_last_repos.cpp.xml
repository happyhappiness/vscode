<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4276_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">for_each_abbrev<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">prefix<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">each_abbrev_fn<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">fn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">cb_data<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">oid_array<pos:position pos:line="3" pos:column="25"/></name></name></type> <name pos:line="3" pos:column="26">collect<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">OID_ARRAY_INIT<pos:position pos:line="3" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">disambiguate_state<pos:position pos:line="4" pos:column="34"/></name></name></type> <name pos:line="4" pos:column="35">ds<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">init_object_disambiguation<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">prefix<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="48">strlen<pos:position pos:line="7" pos:column="54"/></name><argument_list pos:line="7" pos:column="54">(<argument><expr><name pos:line="7" pos:column="55">prefix<pos:position pos:line="7" pos:column="61"/></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="7" pos:column="64">&amp;<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="65">ds<pos:position pos:line="7" pos:column="67"/></name></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call> <operator pos:line="7" pos:column="69">&lt;<pos:position pos:line="7" pos:column="73"/></operator> <literal type="number" pos:line="7" pos:column="71">0<pos:position pos:line="7" pos:column="72"/></literal></expr>)<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="10" pos:column="9">ds<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">always_call_fn<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">ds<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">fn<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">collect_ambiguous<pos:position pos:line="11" pos:column="34"/></name></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">ds<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">cb_data<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">&amp;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="23">collect<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">find_short_object_filename<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><operator pos:line="13" pos:column="36">&amp;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="37">ds<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">find_short_packed_object<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><operator pos:line="14" pos:column="34">&amp;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="35">ds<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">oid_array_for_each_unique<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><operator pos:line="16" pos:column="41">&amp;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="42">collect<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">fn<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="55">cb_data<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">oid_array_clear<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="26">collect<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">ret<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

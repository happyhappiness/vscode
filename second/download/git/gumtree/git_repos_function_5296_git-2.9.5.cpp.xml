<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5296_git-2.9.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_column<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">argc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">list<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">STRING_LIST_INIT_DUP<pos:position pos:line="3" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">STRBUF_INIT<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">column_options<pos:position pos:line="5" pos:column="30"/></name></name></type> <name pos:line="5" pos:column="31">copts<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">command<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><name pos:line="6" pos:column="31">NULL<pos:position pos:line="6" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="38">real_command<pos:position pos:line="6" pos:column="50"/></name> <init pos:line="6" pos:column="51">= <expr><name pos:line="6" pos:column="53">NULL<pos:position pos:line="6" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">option<pos:position pos:line="7" pos:column="22"/></name></name></type> <name><name pos:line="7" pos:column="23">options<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[]<pos:position pos:line="7" pos:column="32"/></index></name> <init pos:line="7" pos:column="33">= <expr><block pos:line="7" pos:column="35">{
		<expr><call><name pos:line="8" pos:column="17">OPT_STRING<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"command"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">real_command<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="57">N_<pos:position pos:line="8" pos:column="59"/></name><argument_list pos:line="8" pos:column="59">(<argument><expr><literal type="string" pos:line="8" pos:column="60">"name"<pos:position pos:line="8" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="69">N_<pos:position pos:line="8" pos:column="71"/></name><argument_list pos:line="8" pos:column="71">(<argument><expr><literal type="string" pos:line="8" pos:column="72">"lookup config vars"<pos:position pos:line="8" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="94"/></argument_list></call></expr>,
		<expr><call><name pos:line="9" pos:column="17">OPT_COLUMN<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"mode"<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="40">colopts<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="49">N_<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><literal type="string" pos:line="9" pos:column="52">"layout to use"<pos:position pos:line="9" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_INTEGER<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"raw-mode"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="45">colopts<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="54">N_<pos:position pos:line="10" pos:column="56"/></name><argument_list pos:line="10" pos:column="56">(<argument><expr><literal type="string" pos:line="10" pos:column="57">"layout to use"<pos:position pos:line="10" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_INTEGER<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"width"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name><name pos:line="11" pos:column="42">copts<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">.<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">width<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="55">N_<pos:position pos:line="11" pos:column="57"/></name><argument_list pos:line="11" pos:column="57">(<argument><expr><literal type="string" pos:line="11" pos:column="58">"Maximum width"<pos:position pos:line="11" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>,
		<expr><call><name pos:line="12" pos:column="17">OPT_STRING<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"indent"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator><name><name pos:line="12" pos:column="42">copts<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">indent<pos:position pos:line="12" pos:column="54"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="56">N_<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">(<argument><expr><literal type="string" pos:line="12" pos:column="59">"string"<pos:position pos:line="12" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="70">N_<pos:position pos:line="12" pos:column="72"/></name><argument_list pos:line="12" pos:column="72">(<argument><expr><literal type="string" pos:line="12" pos:column="73">"Padding space on left border"<pos:position pos:line="12" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="105"/></argument_list></call></expr>,
		<expr><call><name pos:line="13" pos:column="17">OPT_INTEGER<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"nl"<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="38">&amp;<pos:position pos:line="13" pos:column="43"/></operator><name><name pos:line="13" pos:column="39">copts<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">nl<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="49">N_<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><literal type="string" pos:line="13" pos:column="52">"Padding space on right border"<pos:position pos:line="13" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT_INTEGER<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"padding"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="43">&amp;<pos:position pos:line="14" pos:column="48"/></operator><name><name pos:line="14" pos:column="44">copts<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">.<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">padding<pos:position pos:line="14" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="59">N_<pos:position pos:line="14" pos:column="61"/></name><argument_list pos:line="14" pos:column="61">(<argument><expr><literal type="string" pos:line="14" pos:column="62">"Padding space between columns"<pos:position pos:line="14" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="95"/></argument_list></call></expr>,
		<macro><name pos:line="15" pos:column="17">OPT_END<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">()<pos:position pos:line="15" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="16" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="16" pos:column="11"/></decl_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* This one is special and must be the first one */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">argc<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">&gt;<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal> <operator pos:line="19" pos:column="22">&amp;&amp;<pos:position pos:line="19" pos:column="32"/></operator> <call><name pos:line="19" pos:column="25">starts_with<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name><name pos:line="19" pos:column="37">argv<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><literal type="number" pos:line="19" pos:column="42">1<pos:position pos:line="19" pos:column="43"/></literal></expr>]<pos:position pos:line="19" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="46">"--command="<pos:position pos:line="19" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="60"/></condition><then pos:line="19" pos:column="60"> <block pos:line="19" pos:column="61">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">command<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name><name pos:line="20" pos:column="27">argv<pos:position pos:line="20" pos:column="31"/></name><index pos:line="20" pos:column="31">[<expr><literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal></expr>]<pos:position pos:line="20" pos:column="34"/></index></name> <operator pos:line="20" pos:column="35">+<pos:position pos:line="20" pos:column="36"/></operator> <literal type="number" pos:line="20" pos:column="37">10<pos:position pos:line="20" pos:column="39"/></literal></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">git_config<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">column_config<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="43">(<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">void<pos:position pos:line="21" pos:column="48"/></name> <operator pos:line="21" pos:column="49">*<pos:position pos:line="21" pos:column="50"/></operator><operator pos:line="21" pos:column="50">)<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">command<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">git_config<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">column_config<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">NULL<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">memset<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><operator pos:line="25" pos:column="16">&amp;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="17">copts<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="27">sizeof<argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">copts<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">copts<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">width<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">term_columns<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">()<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">copts<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">.<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">padding<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">argc<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">parse_options<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">argc<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">argv<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="42">""<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">options<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">builtin_column_usage<pos:position pos:line="28" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="77">0<pos:position pos:line="28" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">argc<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">usage_with_options<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">builtin_column_usage<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">options<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">real_command<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">||<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">command<pos:position pos:line="31" pos:column="36"/></name></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37"> <block pos:line="31" pos:column="38">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">real_command<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">||<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="38">!<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">command<pos:position pos:line="32" pos:column="46"/></name> <operator pos:line="32" pos:column="47">||<pos:position pos:line="32" pos:column="49"/></operator> <call><name pos:line="32" pos:column="50">strcmp<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><name pos:line="32" pos:column="57">real_command<pos:position pos:line="32" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="71">command<pos:position pos:line="32" pos:column="78"/></name></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="80"/></condition><then pos:line="32" pos:column="80">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">die<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><call><name pos:line="33" pos:column="29">_<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><literal type="string" pos:line="33" pos:column="31">"--command must be the first argument"<pos:position pos:line="33" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="72"/></expr_stmt></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">finalize_colopts<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="27">colopts<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="36">-<pos:position pos:line="35" pos:column="37"/></operator><literal type="number" pos:line="35" pos:column="37">1<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
	<while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><operator pos:line="36" pos:column="16">!<pos:position pos:line="36" pos:column="17"/></operator><call><name pos:line="36" pos:column="17">strbuf_getline<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><operator pos:line="36" pos:column="32">&amp;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="33">sb<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">stdin<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="44"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">string_list_append<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><operator pos:line="37" pos:column="36">&amp;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="37">list<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="43">sb<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">.<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="46">buf<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt></block></while>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">print_columns<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><operator pos:line="39" pos:column="23">&amp;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="24">list<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="30">colopts<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="39">&amp;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="40">copts<pos:position pos:line="39" pos:column="45"/></name></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
	<return pos:line="40" pos:column="9">return <expr><literal type="number" pos:line="40" pos:column="16">0<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

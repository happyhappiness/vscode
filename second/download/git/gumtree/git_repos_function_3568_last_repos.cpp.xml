<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3568_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_rr<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">string_list<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">rr<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">out_fd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="25">rr<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">nr<pos:position pos:line="4" pos:column="31"/></name></name></expr>;<pos:position pos:line="4" pos:column="32"/></condition> <incr><expr><name pos:line="4" pos:column="33">i<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">++<pos:position pos:line="4" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="37"/></control> <block pos:line="4" pos:column="38">{
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">strbuf<pos:position pos:line="5" pos:column="30"/></name></name></type> <name pos:line="5" pos:column="31">buf<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">STRBUF_INIT<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">rerere_id<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">id<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="8" pos:column="17">assert<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name><name pos:line="8" pos:column="24">rr<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">items<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">i<pos:position pos:line="8" pos:column="35"/></name></expr>]<pos:position pos:line="8" pos:column="36"/></index></name><operator pos:line="8" pos:column="36">.<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">util<pos:position pos:line="8" pos:column="41"/></name> <operator pos:line="8" pos:column="42">!=<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="45">RERERE_RESOLVED<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>

		<expr_stmt><expr><name pos:line="10" pos:column="17">id<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="22">rr<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">items<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><name pos:line="10" pos:column="32">i<pos:position pos:line="10" pos:column="33"/></name></expr>]<pos:position pos:line="10" pos:column="34"/></index></name><operator pos:line="10" pos:column="34">.<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">util<pos:position pos:line="10" pos:column="39"/></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">id<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">assert<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name><name pos:line="13" pos:column="24">id<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">variant<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">&gt;=<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">id<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">variant<pos:position pos:line="14" pos:column="36"/></name></name></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">strbuf_addf<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><operator pos:line="15" pos:column="37">&amp;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="38">buf<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="43">"%s.%d\t%s%c"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>,
				    <argument><expr><call><name pos:line="16" pos:column="37">rerere_id_hex<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">id<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="56">id<pos:position pos:line="16" pos:column="58"/></name><operator pos:line="16" pos:column="58">-&gt;<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="60">variant<pos:position pos:line="16" pos:column="67"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="17" pos:column="37">rr<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">items<pos:position pos:line="17" pos:column="46"/></name><index pos:line="17" pos:column="46">[<expr><name pos:line="17" pos:column="47">i<pos:position pos:line="17" pos:column="48"/></name></expr>]<pos:position pos:line="17" pos:column="49"/></index></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">string<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="58">0<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">strbuf_addf<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="38">buf<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="43">"%s\t%s%c"<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>,
				    <argument><expr><call><name pos:line="20" pos:column="37">rerere_id_hex<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">id<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr></argument>,
				    <argument><expr><name><name pos:line="21" pos:column="37">rr<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">items<pos:position pos:line="21" pos:column="46"/></name><index pos:line="21" pos:column="46">[<expr><name pos:line="21" pos:column="47">i<pos:position pos:line="21" pos:column="48"/></name></expr>]<pos:position pos:line="21" pos:column="49"/></index></name><operator pos:line="21" pos:column="49">.<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">string<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="58">0<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt></block></else></if>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">write_in_full<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">out_fd<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="43">buf<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">.<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">buf<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="52">buf<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">.<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="56">len<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call> <operator pos:line="23" pos:column="61">!=<pos:position pos:line="23" pos:column="63"/></operator> <name><name pos:line="23" pos:column="64">buf<pos:position pos:line="23" pos:column="67"/></name><operator pos:line="23" pos:column="67">.<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="68">len<pos:position pos:line="23" pos:column="71"/></name></name></expr>)<pos:position pos:line="23" pos:column="72"/></condition><then pos:line="23" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">die<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="string" pos:line="24" pos:column="29">"unable to write rerere record"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_release<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><operator pos:line="26" pos:column="32">&amp;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="33">buf<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">commit_lock_file<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><operator pos:line="28" pos:column="30">&amp;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="31">write_lock<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call> <operator pos:line="28" pos:column="43">!=<pos:position pos:line="28" pos:column="45"/></operator> <literal type="number" pos:line="28" pos:column="46">0<pos:position pos:line="28" pos:column="47"/></literal></expr>)<pos:position pos:line="28" pos:column="48"/></condition><then pos:line="28" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">die<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><literal type="string" pos:line="29" pos:column="21">"unable to write rerere record"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt></block></then></if>
	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1333_git-2.9.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">trie_find<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">trie<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">root<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">key<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">match_fn<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">fn<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		     <parameter><decl><type><name pos:line="2" pos:column="22">void<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">baton<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">result<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">trie<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">child<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">key<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19"> <block pos:line="8" pos:column="20">{
		<comment type="block" pos:line="9" pos:column="17">/* we have reached the end of the key */</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">root<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">value<pos:position pos:line="10" pos:column="32"/></name></name> <operator pos:line="10" pos:column="33">&amp;&amp;<pos:position pos:line="10" pos:column="43"/></operator> <operator pos:line="10" pos:column="36">!<pos:position pos:line="10" pos:column="37"/></operator><name><name pos:line="10" pos:column="37">root<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">len<pos:position pos:line="10" pos:column="46"/></name></name></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><call><name pos:line="11" pos:column="32">fn<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">key<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="40">root<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">value<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">baton<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></return></block></then>
		<else pos:line="12" pos:column="17">else
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><operator pos:line="13" pos:column="32">-<pos:position pos:line="13" pos:column="33"/></operator><literal type="number" pos:line="13" pos:column="33">1<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></return></block></else></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="25">root<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">len<pos:position pos:line="16" pos:column="34"/></name></name></expr>;<pos:position pos:line="16" pos:column="35"/></condition> <incr><expr><name pos:line="16" pos:column="36">i<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">++<pos:position pos:line="16" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="40"/></control> <block pos:line="16" pos:column="41">{
		<comment type="block" pos:line="17" pos:column="17">/* Partial path normalization: skip consecutive slashes. */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">key<pos:position pos:line="18" pos:column="24"/></name><index pos:line="18" pos:column="24">[<expr><name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name></expr>]<pos:position pos:line="18" pos:column="27"/></index></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <literal type="char" pos:line="18" pos:column="31">'/'<pos:position pos:line="18" pos:column="34"/></literal> <operator pos:line="18" pos:column="35">&amp;&amp;<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="38">key<pos:position pos:line="18" pos:column="41"/></name><index pos:line="18" pos:column="41">[<expr><name pos:line="18" pos:column="42">i<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">+<pos:position pos:line="18" pos:column="44"/></operator><literal type="number" pos:line="18" pos:column="44">1<pos:position pos:line="18" pos:column="45"/></literal></expr>]<pos:position pos:line="18" pos:column="46"/></index></name> <operator pos:line="18" pos:column="47">==<pos:position pos:line="18" pos:column="49"/></operator> <literal type="char" pos:line="18" pos:column="50">'/'<pos:position pos:line="18" pos:column="53"/></literal></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <block pos:line="18" pos:column="55">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">key<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">++<pos:position pos:line="19" pos:column="30"/></operator></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
			<continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">root<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">contents<pos:position pos:line="22" pos:column="35"/></name><index pos:line="22" pos:column="35">[<expr><name pos:line="22" pos:column="36">i<pos:position pos:line="22" pos:column="37"/></name></expr>]<pos:position pos:line="22" pos:column="38"/></index></name> <operator pos:line="22" pos:column="39">!=<pos:position pos:line="22" pos:column="41"/></operator> <name><name pos:line="22" pos:column="42">key<pos:position pos:line="22" pos:column="45"/></name><index pos:line="22" pos:column="45">[<expr><name pos:line="22" pos:column="46">i<pos:position pos:line="22" pos:column="47"/></name></expr>]<pos:position pos:line="22" pos:column="48"/></index></name></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
			<block type="pseudo"><return pos:line="23" pos:column="25">return <expr><operator pos:line="23" pos:column="32">-<pos:position pos:line="23" pos:column="33"/></operator><literal type="number" pos:line="23" pos:column="33">1<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>

	<comment type="block" pos:line="26" pos:column="9">/* Matched the entire compressed section */</comment>
	<expr_stmt><expr><name pos:line="27" pos:column="9">key<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">+=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">i<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">key<pos:position pos:line="28" pos:column="18"/></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19">
		<comment type="block" pos:line="29" pos:column="17">/* End of key */</comment>
		<block type="pseudo"><return pos:line="30" pos:column="17">return <expr><call><name pos:line="30" pos:column="24">fn<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">key<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="32">root<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">value<pos:position pos:line="30" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">baton<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="52"/></return></block></then></if>

	<comment type="block" pos:line="32" pos:column="9">/* Partial path normalization: skip consecutive slashes */</comment>
	<while pos:line="33" pos:column="9">while <condition pos:line="33" pos:column="15">(<expr><name><name pos:line="33" pos:column="16">key<pos:position pos:line="33" pos:column="19"/></name><index pos:line="33" pos:column="19">[<expr><literal type="number" pos:line="33" pos:column="20">0<pos:position pos:line="33" pos:column="21"/></literal></expr>]<pos:position pos:line="33" pos:column="22"/></index></name> <operator pos:line="33" pos:column="23">==<pos:position pos:line="33" pos:column="25"/></operator> <literal type="char" pos:line="33" pos:column="26">'/'<pos:position pos:line="33" pos:column="29"/></literal> <operator pos:line="33" pos:column="30">&amp;&amp;<pos:position pos:line="33" pos:column="40"/></operator> <name><name pos:line="33" pos:column="33">key<pos:position pos:line="33" pos:column="36"/></name><index pos:line="33" pos:column="36">[<expr><literal type="number" pos:line="33" pos:column="37">1<pos:position pos:line="33" pos:column="38"/></literal></expr>]<pos:position pos:line="33" pos:column="39"/></index></name> <operator pos:line="33" pos:column="40">==<pos:position pos:line="33" pos:column="42"/></operator> <literal type="char" pos:line="33" pos:column="43">'/'<pos:position pos:line="33" pos:column="46"/></literal></expr>)<pos:position pos:line="33" pos:column="47"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">key<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">++<pos:position pos:line="34" pos:column="22"/></operator></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt></block></while>

	<expr_stmt><expr><name pos:line="36" pos:column="9">child<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name><name pos:line="36" pos:column="17">root<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">children<pos:position pos:line="36" pos:column="31"/></name><index pos:line="36" pos:column="31">[<expr><operator pos:line="36" pos:column="32">(<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">unsigned<pos:position pos:line="36" pos:column="41"/></name> <name pos:line="36" pos:column="42">char<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">)<pos:position pos:line="36" pos:column="47"/></operator><operator pos:line="36" pos:column="47">*<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="48">key<pos:position pos:line="36" pos:column="51"/></name></expr>]<pos:position pos:line="36" pos:column="52"/></index></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">child<pos:position pos:line="37" pos:column="18"/></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">result<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">trie_find<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">child<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">key<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">+<pos:position pos:line="38" pos:column="48"/></operator> <literal type="number" pos:line="38" pos:column="49">1<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">fn<pos:position pos:line="38" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="56">baton<pos:position pos:line="38" pos:column="61"/></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt></block></then>
	<else pos:line="39" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">result<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <operator pos:line="40" pos:column="26">-<pos:position pos:line="40" pos:column="27"/></operator><literal type="number" pos:line="40" pos:column="27">1<pos:position pos:line="40" pos:column="28"/></literal></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt></block></else></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">result<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">&gt;=<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal> <operator pos:line="42" pos:column="25">||<pos:position pos:line="42" pos:column="27"/></operator> <operator pos:line="42" pos:column="28">(<pos:position pos:line="42" pos:column="29"/></operator><operator pos:line="42" pos:column="29">*<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">key<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">!=<pos:position pos:line="42" pos:column="36"/></operator> <literal type="char" pos:line="42" pos:column="37">'/'<pos:position pos:line="42" pos:column="40"/></literal> <operator pos:line="42" pos:column="41">&amp;&amp;<pos:position pos:line="42" pos:column="51"/></operator> <operator pos:line="42" pos:column="44">*<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">key<pos:position pos:line="42" pos:column="48"/></name> <operator pos:line="42" pos:column="49">!=<pos:position pos:line="42" pos:column="51"/></operator> <literal type="number" pos:line="42" pos:column="52">0<pos:position pos:line="42" pos:column="53"/></literal><operator pos:line="42" pos:column="53">)<pos:position pos:line="42" pos:column="54"/></operator></expr>)<pos:position pos:line="42" pos:column="55"/></condition><then pos:line="42" pos:column="55">
		<block type="pseudo"><return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">result<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></return></block></then></if>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">root<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">value<pos:position pos:line="44" pos:column="24"/></name></name></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25">
		<block type="pseudo"><return pos:line="45" pos:column="17">return <expr><call><name pos:line="45" pos:column="24">fn<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">key<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="32">root<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">value<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">baton<pos:position pos:line="45" pos:column="50"/></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></return></block></then>
	<else pos:line="46" pos:column="9">else
		<block type="pseudo"><return pos:line="47" pos:column="17">return <expr><operator pos:line="47" pos:column="24">-<pos:position pos:line="47" pos:column="25"/></operator><literal type="number" pos:line="47" pos:column="25">1<pos:position pos:line="47" pos:column="26"/></literal></expr>;<pos:position pos:line="47" pos:column="27"/></return></block></else></if>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

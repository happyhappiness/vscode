<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3367_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_info_refs<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">strbuf<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">hdr<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">arg<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">service_name<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><call><name pos:line="3" pos:column="36">get_parameter<pos:position pos:line="3" pos:column="49"/></name><argument_list pos:line="3" pos:column="49">(<argument><expr><literal type="string" pos:line="3" pos:column="50">"service"<pos:position pos:line="3" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">hdr_nocache<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">hdr<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">service_name<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name><name pos:line="9" pos:column="29">argv<pos:position pos:line="9" pos:column="33"/></name><index pos:line="9" pos:column="33">[]<pos:position pos:line="9" pos:column="35"/></index></name> <init pos:line="9" pos:column="36">= <expr><block pos:line="9" pos:column="38">{<expr><name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name></expr> <comment type="block" pos:line="9" pos:column="44">/* service name */</comment>,
			<expr><literal type="string" pos:line="10" pos:column="25">"--stateless-rpc"<pos:position pos:line="10" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="10" pos:column="44">"--advertise-refs"<pos:position pos:line="10" pos:column="62"/></literal></expr>,
			<expr><literal type="string" pos:line="11" pos:column="25">"."<pos:position pos:line="11" pos:column="28"/></literal></expr>, <expr><name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr>}<pos:position pos:line="11" pos:column="35"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">rpc_service<pos:position pos:line="12" pos:column="35"/></name></name> <modifier pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></modifier></type><name pos:line="12" pos:column="37">svc<pos:position pos:line="12" pos:column="40"/></name> <init pos:line="12" pos:column="41">= <expr><call><name pos:line="12" pos:column="43">select_service<pos:position pos:line="12" pos:column="57"/></name><argument_list pos:line="12" pos:column="57">(<argument><expr><name pos:line="12" pos:column="58">hdr<pos:position pos:line="12" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="63">service_name<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="77"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_addf<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="30">buf<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"application/x-git-%s-advertisement"<pos:position pos:line="14" pos:column="71"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="15" pos:column="25">svc<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">name<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">hdr_str<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">hdr<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">content_type<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="44">buf<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">.<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="48">buf<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">end_headers<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">hdr<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">packet_write_fmt<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="37">"# service=git-%s\n"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="59">svc<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">name<pos:position pos:line="19" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">packet_flush<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><literal type="number" pos:line="20" pos:column="30">1<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="22" pos:column="17">argv<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr>]<pos:position pos:line="22" pos:column="24"/></index></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <name><name pos:line="22" pos:column="27">svc<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">name<pos:position pos:line="22" pos:column="36"/></name></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">run_service<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">argv<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="35">0<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>

	}<pos:position pos:line="25" pos:column="10"/></block></then> <else pos:line="25" pos:column="11">else <block pos:line="25" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">select_getanyfile<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">hdr<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">for_each_namespaced_ref<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">show_text_ref<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="56">&amp;<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="57">buf<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">send_strbuf<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">hdr<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"text/plain"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="48">&amp;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="49">buf<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_release<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">buf<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

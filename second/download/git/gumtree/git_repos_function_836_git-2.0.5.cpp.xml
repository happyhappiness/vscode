<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_836_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_revision_opt<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">rev_info<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">revs<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">argc<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier><modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">argv<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">unkc<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">unkv<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">arg<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name><name pos:line="4" pos:column="27">argv<pos:position pos:line="4" pos:column="31"/></name><index pos:line="4" pos:column="31">[<expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">optarg<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">argcount<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* pseudo revision arguments */</comment>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strcmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">arg<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"--all"<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call> <operator pos:line="9" pos:column="35">||<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="38">!<pos:position pos:line="9" pos:column="39"/></operator><call><name pos:line="9" pos:column="39">strcmp<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">arg<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="51">"--branches"<pos:position pos:line="9" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call> <operator pos:line="9" pos:column="65">||<pos:position pos:line="9" pos:column="67"/></operator>
	    <operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">strcmp<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">arg<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"--tags"<pos:position pos:line="10" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call> <operator pos:line="10" pos:column="36">||<pos:position pos:line="10" pos:column="38"/></operator> <operator pos:line="10" pos:column="39">!<pos:position pos:line="10" pos:column="40"/></operator><call><name pos:line="10" pos:column="40">strcmp<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">arg<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="52">"--remotes"<pos:position pos:line="10" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call> <operator pos:line="10" pos:column="65">||<pos:position pos:line="10" pos:column="67"/></operator>
	    <operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">strcmp<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">arg<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="26">"--reflog"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call> <operator pos:line="11" pos:column="38">||<pos:position pos:line="11" pos:column="40"/></operator> <operator pos:line="11" pos:column="41">!<pos:position pos:line="11" pos:column="42"/></operator><call><name pos:line="11" pos:column="42">strcmp<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">arg<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="54">"--not"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call> <operator pos:line="11" pos:column="63">||<pos:position pos:line="11" pos:column="65"/></operator>
	    <operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">strcmp<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">arg<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"--no-walk"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call> <operator pos:line="12" pos:column="39">||<pos:position pos:line="12" pos:column="41"/></operator> <operator pos:line="12" pos:column="42">!<pos:position pos:line="12" pos:column="43"/></operator><call><name pos:line="12" pos:column="43">strcmp<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">arg<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="55">"--do-walk"<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call> <operator pos:line="12" pos:column="68">||<pos:position pos:line="12" pos:column="70"/></operator>
	    <operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">arg<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="26">"--bisect"<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call> <operator pos:line="13" pos:column="38">||<pos:position pos:line="13" pos:column="40"/></operator> <call><name pos:line="13" pos:column="41">starts_with<pos:position pos:line="13" pos:column="52"/></name><argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">arg<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="58">"--glob="<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call> <operator pos:line="13" pos:column="69">||<pos:position pos:line="13" pos:column="71"/></operator>
	    <call><name pos:line="14" pos:column="13">starts_with<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">arg<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"--exclude="<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call> <operator pos:line="14" pos:column="44">||<pos:position pos:line="14" pos:column="46"/></operator>
	    <call><name pos:line="15" pos:column="13">starts_with<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">arg<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="30">"--branches="<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call> <operator pos:line="15" pos:column="45">||<pos:position pos:line="15" pos:column="47"/></operator> <call><name pos:line="15" pos:column="48">starts_with<pos:position pos:line="15" pos:column="59"/></name><argument_list pos:line="15" pos:column="59">(<argument><expr><name pos:line="15" pos:column="60">arg<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="65">"--tags="<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call> <operator pos:line="15" pos:column="76">||<pos:position pos:line="15" pos:column="78"/></operator>
	    <call><name pos:line="16" pos:column="13">starts_with<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">arg<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="30">"--remotes="<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call> <operator pos:line="16" pos:column="44">||<pos:position pos:line="16" pos:column="46"/></operator> <call><name pos:line="16" pos:column="47">starts_with<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><name pos:line="16" pos:column="59">arg<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="64">"--no-walk="<pos:position pos:line="16" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="78"/></condition><then pos:line="16" pos:column="78">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">unkv<pos:position pos:line="18" pos:column="21"/></name><index pos:line="18" pos:column="21">[<expr><operator pos:line="18" pos:column="22">(<pos:position pos:line="18" pos:column="23"/></operator><operator pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">unkc<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">)<pos:position pos:line="18" pos:column="29"/></operator><operator pos:line="18" pos:column="29">++<pos:position pos:line="18" pos:column="31"/></operator></expr>]<pos:position pos:line="18" pos:column="32"/></index></name> <operator pos:line="18" pos:column="33">=<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">arg<pos:position pos:line="18" pos:column="38"/></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">1<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">argcount<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">parse_long_opt<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><literal type="string" pos:line="22" pos:column="40">"max-count"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">argv<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="59">&amp;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="60">optarg<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call><operator pos:line="22" pos:column="67">)<pos:position pos:line="22" pos:column="68"/></operator></expr>)<pos:position pos:line="22" pos:column="69"/></condition><then pos:line="22" pos:column="69"> <block pos:line="22" pos:column="70">{
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">revs<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">max_count<pos:position pos:line="23" pos:column="32"/></name></name> <operator pos:line="23" pos:column="33">=<pos:position pos:line="23" pos:column="34"/></operator> <call><name pos:line="23" pos:column="35">atoi<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">optarg<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">revs<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">no_walk<pos:position pos:line="24" pos:column="30"/></name></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <literal type="number" pos:line="24" pos:column="33">0<pos:position pos:line="24" pos:column="34"/></literal></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">argcount<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then> <elseif pos:line="26" pos:column="11">else <if pos:line="26" pos:column="16">if <condition pos:line="26" pos:column="19">(<expr><operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">argcount<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">parse_long_opt<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><literal type="string" pos:line="26" pos:column="47">"skip"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">argv<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="61">&amp;<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="62">optarg<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call><operator pos:line="26" pos:column="69">)<pos:position pos:line="26" pos:column="70"/></operator></expr>)<pos:position pos:line="26" pos:column="71"/></condition><then pos:line="26" pos:column="71"> <block pos:line="26" pos:column="72">{
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">revs<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">skip_count<pos:position pos:line="27" pos:column="33"/></name></name> <operator pos:line="27" pos:column="34">=<pos:position pos:line="27" pos:column="35"/></operator> <call><name pos:line="27" pos:column="36">atoi<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">optarg<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">argcount<pos:position pos:line="28" pos:column="32"/></name></expr>;<pos:position pos:line="28" pos:column="33"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif> <elseif pos:line="29" pos:column="11">else <if pos:line="29" pos:column="16">if <condition pos:line="29" pos:column="19">(<expr><operator pos:line="29" pos:column="20">(<pos:position pos:line="29" pos:column="21"/></operator><operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">arg<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">==<pos:position pos:line="29" pos:column="28"/></operator> <literal type="char" pos:line="29" pos:column="29">'-'<pos:position pos:line="29" pos:column="32"/></literal><operator pos:line="29" pos:column="32">)<pos:position pos:line="29" pos:column="33"/></operator> <operator pos:line="29" pos:column="34">&amp;&amp;<pos:position pos:line="29" pos:column="44"/></operator> <call><name pos:line="29" pos:column="37">isdigit<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name><name pos:line="29" pos:column="45">arg<pos:position pos:line="29" pos:column="48"/></name><index pos:line="29" pos:column="48">[<expr><literal type="number" pos:line="29" pos:column="49">1<pos:position pos:line="29" pos:column="50"/></literal></expr>]<pos:position pos:line="29" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53"> <block pos:line="29" pos:column="54">{
		<comment type="block" pos:line="30" pos:column="17">/* accept -&lt;digit&gt;, like traditional "head" */</comment>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">strtol_i<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">arg<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">+<pos:position pos:line="31" pos:column="35"/></operator> <literal type="number" pos:line="31" pos:column="36">1<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="39">10<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="43">&amp;<pos:position pos:line="31" pos:column="48"/></operator><name><name pos:line="31" pos:column="44">revs<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">max_count<pos:position pos:line="31" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call> <operator pos:line="31" pos:column="61">&lt;<pos:position pos:line="31" pos:column="65"/></operator> <literal type="number" pos:line="31" pos:column="63">0<pos:position pos:line="31" pos:column="64"/></literal> <operator pos:line="31" pos:column="65">||<pos:position pos:line="31" pos:column="67"/></operator>
		    <name><name pos:line="32" pos:column="21">revs<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">max_count<pos:position pos:line="32" pos:column="36"/></name></name> <operator pos:line="32" pos:column="37">&lt;<pos:position pos:line="32" pos:column="41"/></operator> <literal type="number" pos:line="32" pos:column="39">0<pos:position pos:line="32" pos:column="40"/></literal></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">die<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">"'%s': not a non-negative integer"<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">arg<pos:position pos:line="33" pos:column="68"/></name> <operator pos:line="33" pos:column="69">+<pos:position pos:line="33" pos:column="70"/></operator> <literal type="number" pos:line="33" pos:column="71">1<pos:position pos:line="33" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="74"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">revs<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">no_walk<pos:position pos:line="34" pos:column="30"/></name></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <literal type="number" pos:line="34" pos:column="33">0<pos:position pos:line="34" pos:column="34"/></literal></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif> <elseif pos:line="35" pos:column="11">else <if pos:line="35" pos:column="16">if <condition pos:line="35" pos:column="19">(<expr><operator pos:line="35" pos:column="20">!<pos:position pos:line="35" pos:column="21"/></operator><call><name pos:line="35" pos:column="21">strcmp<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">arg<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"-n"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39"> <block pos:line="35" pos:column="40">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">argc<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">&lt;=<pos:position pos:line="36" pos:column="31"/></operator> <literal type="number" pos:line="36" pos:column="29">1<pos:position pos:line="36" pos:column="30"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
			<block type="pseudo"><return pos:line="37" pos:column="25">return <expr><call><name pos:line="37" pos:column="32">error<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><literal type="string" pos:line="37" pos:column="38">"-n requires an argument"<pos:position pos:line="37" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">revs<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">max_count<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <call><name pos:line="38" pos:column="35">atoi<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name><name pos:line="38" pos:column="40">argv<pos:position pos:line="38" pos:column="44"/></name><index pos:line="38" pos:column="44">[<expr><literal type="number" pos:line="38" pos:column="45">1<pos:position pos:line="38" pos:column="46"/></literal></expr>]<pos:position pos:line="38" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">revs<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">no_walk<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="33">0<pos:position pos:line="39" pos:column="34"/></literal></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><literal type="number" pos:line="40" pos:column="24">2<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif> <elseif pos:line="41" pos:column="11">else <if pos:line="41" pos:column="16">if <condition pos:line="41" pos:column="19">(<expr><call><name pos:line="41" pos:column="20">starts_with<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">arg<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="37">"-n"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="43"/></condition><then pos:line="41" pos:column="43"> <block pos:line="41" pos:column="44">{
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">revs<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">max_count<pos:position pos:line="42" pos:column="32"/></name></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <call><name pos:line="42" pos:column="35">atoi<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><name pos:line="42" pos:column="40">arg<pos:position pos:line="42" pos:column="43"/></name> <operator pos:line="42" pos:column="44">+<pos:position pos:line="42" pos:column="45"/></operator> <literal type="number" pos:line="42" pos:column="46">2<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">revs<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">no_walk<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <elseif pos:line="44" pos:column="11">else <if pos:line="44" pos:column="16">if <condition pos:line="44" pos:column="19">(<expr><operator pos:line="44" pos:column="20">(<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">argcount<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <call><name pos:line="44" pos:column="32">parse_long_opt<pos:position pos:line="44" pos:column="46"/></name><argument_list pos:line="44" pos:column="46">(<argument><expr><literal type="string" pos:line="44" pos:column="47">"max-age"<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">argv<pos:position pos:line="44" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="64">&amp;<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="65">optarg<pos:position pos:line="44" pos:column="71"/></name></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call><operator pos:line="44" pos:column="72">)<pos:position pos:line="44" pos:column="73"/></operator></expr>)<pos:position pos:line="44" pos:column="74"/></condition><then pos:line="44" pos:column="74"> <block pos:line="44" pos:column="75">{
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">revs<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">max_age<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <call><name pos:line="45" pos:column="33">atoi<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">optarg<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">argcount<pos:position pos:line="46" pos:column="32"/></name></expr>;<pos:position pos:line="46" pos:column="33"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif> <elseif pos:line="47" pos:column="11">else <if pos:line="47" pos:column="16">if <condition pos:line="47" pos:column="19">(<expr><operator pos:line="47" pos:column="20">(<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">argcount<pos:position pos:line="47" pos:column="29"/></name> <operator pos:line="47" pos:column="30">=<pos:position pos:line="47" pos:column="31"/></operator> <call><name pos:line="47" pos:column="32">parse_long_opt<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr><literal type="string" pos:line="47" pos:column="47">"since"<pos:position pos:line="47" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="56">argv<pos:position pos:line="47" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="62">&amp;<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="63">optarg<pos:position pos:line="47" pos:column="69"/></name></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call><operator pos:line="47" pos:column="70">)<pos:position pos:line="47" pos:column="71"/></operator></expr>)<pos:position pos:line="47" pos:column="72"/></condition><then pos:line="47" pos:column="72"> <block pos:line="47" pos:column="73">{
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">revs<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">max_age<pos:position pos:line="48" pos:column="30"/></name></name> <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator> <call><name pos:line="48" pos:column="33">approxidate<pos:position pos:line="48" pos:column="44"/></name><argument_list pos:line="48" pos:column="44">(<argument><expr><name pos:line="48" pos:column="45">optarg<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
		<return pos:line="49" pos:column="17">return <expr><name pos:line="49" pos:column="24">argcount<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></return>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif> <elseif pos:line="50" pos:column="11">else <if pos:line="50" pos:column="16">if <condition pos:line="50" pos:column="19">(<expr><operator pos:line="50" pos:column="20">(<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">argcount<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">=<pos:position pos:line="50" pos:column="31"/></operator> <call><name pos:line="50" pos:column="32">parse_long_opt<pos:position pos:line="50" pos:column="46"/></name><argument_list pos:line="50" pos:column="46">(<argument><expr><literal type="string" pos:line="50" pos:column="47">"after"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">argv<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="62">&amp;<pos:position pos:line="50" pos:column="67"/></operator><name pos:line="50" pos:column="63">optarg<pos:position pos:line="50" pos:column="69"/></name></expr></argument>)<pos:position pos:line="50" pos:column="70"/></argument_list></call><operator pos:line="50" pos:column="70">)<pos:position pos:line="50" pos:column="71"/></operator></expr>)<pos:position pos:line="50" pos:column="72"/></condition><then pos:line="50" pos:column="72"> <block pos:line="50" pos:column="73">{
		<expr_stmt><expr><name><name pos:line="51" pos:column="17">revs<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">max_age<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <call><name pos:line="51" pos:column="33">approxidate<pos:position pos:line="51" pos:column="44"/></name><argument_list pos:line="51" pos:column="44">(<argument><expr><name pos:line="51" pos:column="45">optarg<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><name pos:line="52" pos:column="24">argcount<pos:position pos:line="52" pos:column="32"/></name></expr>;<pos:position pos:line="52" pos:column="33"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if></elseif> <elseif pos:line="53" pos:column="11">else <if pos:line="53" pos:column="16">if <condition pos:line="53" pos:column="19">(<expr><operator pos:line="53" pos:column="20">(<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">argcount<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <call><name pos:line="53" pos:column="32">parse_long_opt<pos:position pos:line="53" pos:column="46"/></name><argument_list pos:line="53" pos:column="46">(<argument><expr><literal type="string" pos:line="53" pos:column="47">"min-age"<pos:position pos:line="53" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="58">argv<pos:position pos:line="53" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="64">&amp;<pos:position pos:line="53" pos:column="69"/></operator><name pos:line="53" pos:column="65">optarg<pos:position pos:line="53" pos:column="71"/></name></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call><operator pos:line="53" pos:column="72">)<pos:position pos:line="53" pos:column="73"/></operator></expr>)<pos:position pos:line="53" pos:column="74"/></condition><then pos:line="53" pos:column="74"> <block pos:line="53" pos:column="75">{
		<expr_stmt><expr><name><name pos:line="54" pos:column="17">revs<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">-&gt;<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="23">min_age<pos:position pos:line="54" pos:column="30"/></name></name> <operator pos:line="54" pos:column="31">=<pos:position pos:line="54" pos:column="32"/></operator> <call><name pos:line="54" pos:column="33">atoi<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">optarg<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
		<return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">argcount<pos:position pos:line="55" pos:column="32"/></name></expr>;<pos:position pos:line="55" pos:column="33"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if></elseif> <elseif pos:line="56" pos:column="11">else <if pos:line="56" pos:column="16">if <condition pos:line="56" pos:column="19">(<expr><operator pos:line="56" pos:column="20">(<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">argcount<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <call><name pos:line="56" pos:column="32">parse_long_opt<pos:position pos:line="56" pos:column="46"/></name><argument_list pos:line="56" pos:column="46">(<argument><expr><literal type="string" pos:line="56" pos:column="47">"before"<pos:position pos:line="56" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">argv<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="63">&amp;<pos:position pos:line="56" pos:column="68"/></operator><name pos:line="56" pos:column="64">optarg<pos:position pos:line="56" pos:column="70"/></name></expr></argument>)<pos:position pos:line="56" pos:column="71"/></argument_list></call><operator pos:line="56" pos:column="71">)<pos:position pos:line="56" pos:column="72"/></operator></expr>)<pos:position pos:line="56" pos:column="73"/></condition><then pos:line="56" pos:column="73"> <block pos:line="56" pos:column="74">{
		<expr_stmt><expr><name><name pos:line="57" pos:column="17">revs<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">-&gt;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="23">min_age<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <call><name pos:line="57" pos:column="33">approxidate<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">optarg<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt>
		<return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">argcount<pos:position pos:line="58" pos:column="32"/></name></expr>;<pos:position pos:line="58" pos:column="33"/></return>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if></elseif> <elseif pos:line="59" pos:column="11">else <if pos:line="59" pos:column="16">if <condition pos:line="59" pos:column="19">(<expr><operator pos:line="59" pos:column="20">(<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">argcount<pos:position pos:line="59" pos:column="29"/></name> <operator pos:line="59" pos:column="30">=<pos:position pos:line="59" pos:column="31"/></operator> <call><name pos:line="59" pos:column="32">parse_long_opt<pos:position pos:line="59" pos:column="46"/></name><argument_list pos:line="59" pos:column="46">(<argument><expr><literal type="string" pos:line="59" pos:column="47">"until"<pos:position pos:line="59" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="56">argv<pos:position pos:line="59" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="62">&amp;<pos:position pos:line="59" pos:column="67"/></operator><name pos:line="59" pos:column="63">optarg<pos:position pos:line="59" pos:column="69"/></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call><operator pos:line="59" pos:column="70">)<pos:position pos:line="59" pos:column="71"/></operator></expr>)<pos:position pos:line="59" pos:column="72"/></condition><then pos:line="59" pos:column="72"> <block pos:line="59" pos:column="73">{
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">revs<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">min_age<pos:position pos:line="60" pos:column="30"/></name></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <call><name pos:line="60" pos:column="33">approxidate<pos:position pos:line="60" pos:column="44"/></name><argument_list pos:line="60" pos:column="44">(<argument><expr><name pos:line="60" pos:column="45">optarg<pos:position pos:line="60" pos:column="51"/></name></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt>
		<return pos:line="61" pos:column="17">return <expr><name pos:line="61" pos:column="24">argcount<pos:position pos:line="61" pos:column="32"/></name></expr>;<pos:position pos:line="61" pos:column="33"/></return>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if></elseif> <elseif pos:line="62" pos:column="11">else <if pos:line="62" pos:column="16">if <condition pos:line="62" pos:column="19">(<expr><operator pos:line="62" pos:column="20">!<pos:position pos:line="62" pos:column="21"/></operator><call><name pos:line="62" pos:column="21">strcmp<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><name pos:line="62" pos:column="28">arg<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="33">"--first-parent"<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51"> <block pos:line="62" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="63" pos:column="17">revs<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">first_parent_only<pos:position pos:line="63" pos:column="40"/></name></name> <operator pos:line="63" pos:column="41">=<pos:position pos:line="63" pos:column="42"/></operator> <literal type="number" pos:line="63" pos:column="43">1<pos:position pos:line="63" pos:column="44"/></literal></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if></elseif> <elseif pos:line="64" pos:column="11">else <if pos:line="64" pos:column="16">if <condition pos:line="64" pos:column="19">(<expr><operator pos:line="64" pos:column="20">!<pos:position pos:line="64" pos:column="21"/></operator><call><name pos:line="64" pos:column="21">strcmp<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">arg<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="33">"--ancestry-path"<pos:position pos:line="64" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="52"/></condition><then pos:line="64" pos:column="52"> <block pos:line="64" pos:column="53">{
		<expr_stmt><expr><name><name pos:line="65" pos:column="17">revs<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">ancestry_path<pos:position pos:line="65" pos:column="36"/></name></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <literal type="number" pos:line="65" pos:column="39">1<pos:position pos:line="65" pos:column="40"/></literal></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="66" pos:column="17">revs<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">-&gt;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="23">simplify_history<pos:position pos:line="66" pos:column="39"/></name></name> <operator pos:line="66" pos:column="40">=<pos:position pos:line="66" pos:column="41"/></operator> <literal type="number" pos:line="66" pos:column="42">0<pos:position pos:line="66" pos:column="43"/></literal></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="67" pos:column="17">revs<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">limited<pos:position pos:line="67" pos:column="30"/></name></name> <operator pos:line="67" pos:column="31">=<pos:position pos:line="67" pos:column="32"/></operator> <literal type="number" pos:line="67" pos:column="33">1<pos:position pos:line="67" pos:column="34"/></literal></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if></elseif> <elseif pos:line="68" pos:column="11">else <if pos:line="68" pos:column="16">if <condition pos:line="68" pos:column="19">(<expr><operator pos:line="68" pos:column="20">!<pos:position pos:line="68" pos:column="21"/></operator><call><name pos:line="68" pos:column="21">strcmp<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">arg<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="33">"-g"<pos:position pos:line="68" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call> <operator pos:line="68" pos:column="39">||<pos:position pos:line="68" pos:column="41"/></operator> <operator pos:line="68" pos:column="42">!<pos:position pos:line="68" pos:column="43"/></operator><call><name pos:line="68" pos:column="43">strcmp<pos:position pos:line="68" pos:column="49"/></name><argument_list pos:line="68" pos:column="49">(<argument><expr><name pos:line="68" pos:column="50">arg<pos:position pos:line="68" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="55">"--walk-reflogs"<pos:position pos:line="68" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="73"/></condition><then pos:line="68" pos:column="73"> <block pos:line="68" pos:column="74">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">init_reflog_walk<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><operator pos:line="69" pos:column="34">&amp;<pos:position pos:line="69" pos:column="39"/></operator><name><name pos:line="69" pos:column="35">revs<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">-&gt;<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="41">reflog_info<pos:position pos:line="69" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if></elseif> <elseif pos:line="70" pos:column="11">else <if pos:line="70" pos:column="16">if <condition pos:line="70" pos:column="19">(<expr><operator pos:line="70" pos:column="20">!<pos:position pos:line="70" pos:column="21"/></operator><call><name pos:line="70" pos:column="21">strcmp<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">arg<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="33">"--default"<pos:position pos:line="70" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="46"/></condition><then pos:line="70" pos:column="46"> <block pos:line="70" pos:column="47">{
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">argc<pos:position pos:line="71" pos:column="25"/></name> <operator pos:line="71" pos:column="26">&lt;=<pos:position pos:line="71" pos:column="31"/></operator> <literal type="number" pos:line="71" pos:column="29">1<pos:position pos:line="71" pos:column="30"/></literal></expr>)<pos:position pos:line="71" pos:column="31"/></condition><then pos:line="71" pos:column="31">
			<block type="pseudo"><return pos:line="72" pos:column="25">return <expr><call><name pos:line="72" pos:column="32">error<pos:position pos:line="72" pos:column="37"/></name><argument_list pos:line="72" pos:column="37">(<argument><expr><literal type="string" pos:line="72" pos:column="38">"bad --default argument"<pos:position pos:line="72" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="64"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="73" pos:column="17">revs<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">-&gt;<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="23">def<pos:position pos:line="73" pos:column="26"/></name></name> <operator pos:line="73" pos:column="27">=<pos:position pos:line="73" pos:column="28"/></operator> <name><name pos:line="73" pos:column="29">argv<pos:position pos:line="73" pos:column="33"/></name><index pos:line="73" pos:column="33">[<expr><literal type="number" pos:line="73" pos:column="34">1<pos:position pos:line="73" pos:column="35"/></literal></expr>]<pos:position pos:line="73" pos:column="36"/></index></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
		<return pos:line="74" pos:column="17">return <expr><literal type="number" pos:line="74" pos:column="24">2<pos:position pos:line="74" pos:column="25"/></literal></expr>;<pos:position pos:line="74" pos:column="26"/></return>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if></elseif> <elseif pos:line="75" pos:column="11">else <if pos:line="75" pos:column="16">if <condition pos:line="75" pos:column="19">(<expr><operator pos:line="75" pos:column="20">!<pos:position pos:line="75" pos:column="21"/></operator><call><name pos:line="75" pos:column="21">strcmp<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">arg<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="33">"--merge"<pos:position pos:line="75" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="44"/></condition><then pos:line="75" pos:column="44"> <block pos:line="75" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="76" pos:column="17">revs<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">-&gt;<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="23">show_merge<pos:position pos:line="76" pos:column="33"/></name></name> <operator pos:line="76" pos:column="34">=<pos:position pos:line="76" pos:column="35"/></operator> <literal type="number" pos:line="76" pos:column="36">1<pos:position pos:line="76" pos:column="37"/></literal></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if></elseif> <elseif pos:line="77" pos:column="11">else <if pos:line="77" pos:column="16">if <condition pos:line="77" pos:column="19">(<expr><operator pos:line="77" pos:column="20">!<pos:position pos:line="77" pos:column="21"/></operator><call><name pos:line="77" pos:column="21">strcmp<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">arg<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="33">"--topo-order"<pos:position pos:line="77" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="49"/></condition><then pos:line="77" pos:column="49"> <block pos:line="77" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="78" pos:column="17">revs<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">-&gt;<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="23">sort_order<pos:position pos:line="78" pos:column="33"/></name></name> <operator pos:line="78" pos:column="34">=<pos:position pos:line="78" pos:column="35"/></operator> <name pos:line="78" pos:column="36">REV_SORT_IN_GRAPH_ORDER<pos:position pos:line="78" pos:column="59"/></name></expr>;<pos:position pos:line="78" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="79" pos:column="17">revs<pos:position pos:line="79" pos:column="21"/></name><operator pos:line="79" pos:column="21">-&gt;<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="23">topo_order<pos:position pos:line="79" pos:column="33"/></name></name> <operator pos:line="79" pos:column="34">=<pos:position pos:line="79" pos:column="35"/></operator> <literal type="number" pos:line="79" pos:column="36">1<pos:position pos:line="79" pos:column="37"/></literal></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if></elseif> <elseif pos:line="80" pos:column="11">else <if pos:line="80" pos:column="16">if <condition pos:line="80" pos:column="19">(<expr><operator pos:line="80" pos:column="20">!<pos:position pos:line="80" pos:column="21"/></operator><call><name pos:line="80" pos:column="21">strcmp<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">arg<pos:position pos:line="80" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="33">"--simplify-merges"<pos:position pos:line="80" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="54"/></condition><then pos:line="80" pos:column="54"> <block pos:line="80" pos:column="55">{
		<expr_stmt><expr><name><name pos:line="81" pos:column="17">revs<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">simplify_merges<pos:position pos:line="81" pos:column="38"/></name></name> <operator pos:line="81" pos:column="39">=<pos:position pos:line="81" pos:column="40"/></operator> <literal type="number" pos:line="81" pos:column="41">1<pos:position pos:line="81" pos:column="42"/></literal></expr>;<pos:position pos:line="81" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="82" pos:column="17">revs<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">-&gt;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="23">topo_order<pos:position pos:line="82" pos:column="33"/></name></name> <operator pos:line="82" pos:column="34">=<pos:position pos:line="82" pos:column="35"/></operator> <literal type="number" pos:line="82" pos:column="36">1<pos:position pos:line="82" pos:column="37"/></literal></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="83" pos:column="17">revs<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">-&gt;<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="23">rewrite_parents<pos:position pos:line="83" pos:column="38"/></name></name> <operator pos:line="83" pos:column="39">=<pos:position pos:line="83" pos:column="40"/></operator> <literal type="number" pos:line="83" pos:column="41">1<pos:position pos:line="83" pos:column="42"/></literal></expr>;<pos:position pos:line="83" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="84" pos:column="17">revs<pos:position pos:line="84" pos:column="21"/></name><operator pos:line="84" pos:column="21">-&gt;<pos:position pos:line="84" pos:column="26"/></operator><name pos:line="84" pos:column="23">simplify_history<pos:position pos:line="84" pos:column="39"/></name></name> <operator pos:line="84" pos:column="40">=<pos:position pos:line="84" pos:column="41"/></operator> <literal type="number" pos:line="84" pos:column="42">0<pos:position pos:line="84" pos:column="43"/></literal></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="85" pos:column="17">revs<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">limited<pos:position pos:line="85" pos:column="30"/></name></name> <operator pos:line="85" pos:column="31">=<pos:position pos:line="85" pos:column="32"/></operator> <literal type="number" pos:line="85" pos:column="33">1<pos:position pos:line="85" pos:column="34"/></literal></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block></then></if></elseif> <elseif pos:line="86" pos:column="11">else <if pos:line="86" pos:column="16">if <condition pos:line="86" pos:column="19">(<expr><operator pos:line="86" pos:column="20">!<pos:position pos:line="86" pos:column="21"/></operator><call><name pos:line="86" pos:column="21">strcmp<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><name pos:line="86" pos:column="28">arg<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="33">"--simplify-by-decoration"<pos:position pos:line="86" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="61"/></condition><then pos:line="86" pos:column="61"> <block pos:line="86" pos:column="62">{
		<expr_stmt><expr><name><name pos:line="87" pos:column="17">revs<pos:position pos:line="87" pos:column="21"/></name><operator pos:line="87" pos:column="21">-&gt;<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="23">simplify_merges<pos:position pos:line="87" pos:column="38"/></name></name> <operator pos:line="87" pos:column="39">=<pos:position pos:line="87" pos:column="40"/></operator> <literal type="number" pos:line="87" pos:column="41">1<pos:position pos:line="87" pos:column="42"/></literal></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="88" pos:column="17">revs<pos:position pos:line="88" pos:column="21"/></name><operator pos:line="88" pos:column="21">-&gt;<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="23">topo_order<pos:position pos:line="88" pos:column="33"/></name></name> <operator pos:line="88" pos:column="34">=<pos:position pos:line="88" pos:column="35"/></operator> <literal type="number" pos:line="88" pos:column="36">1<pos:position pos:line="88" pos:column="37"/></literal></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="89" pos:column="17">revs<pos:position pos:line="89" pos:column="21"/></name><operator pos:line="89" pos:column="21">-&gt;<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="23">rewrite_parents<pos:position pos:line="89" pos:column="38"/></name></name> <operator pos:line="89" pos:column="39">=<pos:position pos:line="89" pos:column="40"/></operator> <literal type="number" pos:line="89" pos:column="41">1<pos:position pos:line="89" pos:column="42"/></literal></expr>;<pos:position pos:line="89" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="90" pos:column="17">revs<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">simplify_history<pos:position pos:line="90" pos:column="39"/></name></name> <operator pos:line="90" pos:column="40">=<pos:position pos:line="90" pos:column="41"/></operator> <literal type="number" pos:line="90" pos:column="42">0<pos:position pos:line="90" pos:column="43"/></literal></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="91" pos:column="17">revs<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">-&gt;<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="23">simplify_by_decoration<pos:position pos:line="91" pos:column="45"/></name></name> <operator pos:line="91" pos:column="46">=<pos:position pos:line="91" pos:column="47"/></operator> <literal type="number" pos:line="91" pos:column="48">1<pos:position pos:line="91" pos:column="49"/></literal></expr>;<pos:position pos:line="91" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="92" pos:column="17">revs<pos:position pos:line="92" pos:column="21"/></name><operator pos:line="92" pos:column="21">-&gt;<pos:position pos:line="92" pos:column="26"/></operator><name pos:line="92" pos:column="23">limited<pos:position pos:line="92" pos:column="30"/></name></name> <operator pos:line="92" pos:column="31">=<pos:position pos:line="92" pos:column="32"/></operator> <literal type="number" pos:line="92" pos:column="33">1<pos:position pos:line="92" pos:column="34"/></literal></expr>;<pos:position pos:line="92" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="93" pos:column="17">revs<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">-&gt;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="23">prune<pos:position pos:line="93" pos:column="28"/></name></name> <operator pos:line="93" pos:column="29">=<pos:position pos:line="93" pos:column="30"/></operator> <literal type="number" pos:line="93" pos:column="31">1<pos:position pos:line="93" pos:column="32"/></literal></expr>;<pos:position pos:line="93" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">load_ref_decorations<pos:position pos:line="94" pos:column="37"/></name><argument_list pos:line="94" pos:column="37">(<argument><expr><name pos:line="94" pos:column="38">DECORATE_SHORT_REFS<pos:position pos:line="94" pos:column="57"/></name></expr></argument>)<pos:position pos:line="94" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if></elseif> <elseif pos:line="95" pos:column="11">else <if pos:line="95" pos:column="16">if <condition pos:line="95" pos:column="19">(<expr><operator pos:line="95" pos:column="20">!<pos:position pos:line="95" pos:column="21"/></operator><call><name pos:line="95" pos:column="21">strcmp<pos:position pos:line="95" pos:column="27"/></name><argument_list pos:line="95" pos:column="27">(<argument><expr><name pos:line="95" pos:column="28">arg<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="33">"--date-order"<pos:position pos:line="95" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="49"/></condition><then pos:line="95" pos:column="49"> <block pos:line="95" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="96" pos:column="17">revs<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">sort_order<pos:position pos:line="96" pos:column="33"/></name></name> <operator pos:line="96" pos:column="34">=<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="36">REV_SORT_BY_COMMIT_DATE<pos:position pos:line="96" pos:column="59"/></name></expr>;<pos:position pos:line="96" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">revs<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">-&gt;<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="23">topo_order<pos:position pos:line="97" pos:column="33"/></name></name> <operator pos:line="97" pos:column="34">=<pos:position pos:line="97" pos:column="35"/></operator> <literal type="number" pos:line="97" pos:column="36">1<pos:position pos:line="97" pos:column="37"/></literal></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if></elseif> <elseif pos:line="98" pos:column="11">else <if pos:line="98" pos:column="16">if <condition pos:line="98" pos:column="19">(<expr><operator pos:line="98" pos:column="20">!<pos:position pos:line="98" pos:column="21"/></operator><call><name pos:line="98" pos:column="21">strcmp<pos:position pos:line="98" pos:column="27"/></name><argument_list pos:line="98" pos:column="27">(<argument><expr><name pos:line="98" pos:column="28">arg<pos:position pos:line="98" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="33">"--author-date-order"<pos:position pos:line="98" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="56"/></condition><then pos:line="98" pos:column="56"> <block pos:line="98" pos:column="57">{
		<expr_stmt><expr><name><name pos:line="99" pos:column="17">revs<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">-&gt;<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="23">sort_order<pos:position pos:line="99" pos:column="33"/></name></name> <operator pos:line="99" pos:column="34">=<pos:position pos:line="99" pos:column="35"/></operator> <name pos:line="99" pos:column="36">REV_SORT_BY_AUTHOR_DATE<pos:position pos:line="99" pos:column="59"/></name></expr>;<pos:position pos:line="99" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="100" pos:column="17">revs<pos:position pos:line="100" pos:column="21"/></name><operator pos:line="100" pos:column="21">-&gt;<pos:position pos:line="100" pos:column="26"/></operator><name pos:line="100" pos:column="23">topo_order<pos:position pos:line="100" pos:column="33"/></name></name> <operator pos:line="100" pos:column="34">=<pos:position pos:line="100" pos:column="35"/></operator> <literal type="number" pos:line="100" pos:column="36">1<pos:position pos:line="100" pos:column="37"/></literal></expr>;<pos:position pos:line="100" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="101" pos:column="10"/></block></then></if></elseif> <elseif pos:line="101" pos:column="11">else <if pos:line="101" pos:column="16">if <condition pos:line="101" pos:column="19">(<expr><call><name pos:line="101" pos:column="20">starts_with<pos:position pos:line="101" pos:column="31"/></name><argument_list pos:line="101" pos:column="31">(<argument><expr><name pos:line="101" pos:column="32">arg<pos:position pos:line="101" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="37">"--early-output"<pos:position pos:line="101" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="55"/></condition><then pos:line="101" pos:column="55"> <block pos:line="101" pos:column="56">{
		<decl_stmt><decl><type><name pos:line="102" pos:column="17">int<pos:position pos:line="102" pos:column="20"/></name></type> <name pos:line="102" pos:column="21">count<pos:position pos:line="102" pos:column="26"/></name> <init pos:line="102" pos:column="27">= <expr><literal type="number" pos:line="102" pos:column="29">100<pos:position pos:line="102" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="102" pos:column="33"/></decl_stmt>
		<switch pos:line="103" pos:column="17">switch <condition pos:line="103" pos:column="24">(<expr><name><name pos:line="103" pos:column="25">arg<pos:position pos:line="103" pos:column="28"/></name><index pos:line="103" pos:column="28">[<expr><literal type="number" pos:line="103" pos:column="29">14<pos:position pos:line="103" pos:column="31"/></literal></expr>]<pos:position pos:line="103" pos:column="32"/></index></name></expr>)<pos:position pos:line="103" pos:column="33"/></condition> <block pos:line="103" pos:column="34">{
		<case pos:line="104" pos:column="17">case <expr><literal type="char" pos:line="104" pos:column="22">'='<pos:position pos:line="104" pos:column="25"/></literal></expr>:<pos:position pos:line="104" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="105" pos:column="25">count<pos:position pos:line="105" pos:column="30"/></name> <operator pos:line="105" pos:column="31">=<pos:position pos:line="105" pos:column="32"/></operator> <call><name pos:line="105" pos:column="33">atoi<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><name pos:line="105" pos:column="38">arg<pos:position pos:line="105" pos:column="41"/></name><operator pos:line="105" pos:column="41">+<pos:position pos:line="105" pos:column="42"/></operator><literal type="number" pos:line="105" pos:column="42">15<pos:position pos:line="105" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt>
			<comment type="block" pos:line="106" pos:column="25">/* Fallthrough */</comment>
		<case pos:line="107" pos:column="17">case <expr><literal type="number" pos:line="107" pos:column="22">0<pos:position pos:line="107" pos:column="23"/></literal></expr>:<pos:position pos:line="107" pos:column="24"/></case>
			<expr_stmt><expr><name><name pos:line="108" pos:column="25">revs<pos:position pos:line="108" pos:column="29"/></name><operator pos:line="108" pos:column="29">-&gt;<pos:position pos:line="108" pos:column="34"/></operator><name pos:line="108" pos:column="31">topo_order<pos:position pos:line="108" pos:column="41"/></name></name> <operator pos:line="108" pos:column="42">=<pos:position pos:line="108" pos:column="43"/></operator> <literal type="number" pos:line="108" pos:column="44">1<pos:position pos:line="108" pos:column="45"/></literal></expr>;<pos:position pos:line="108" pos:column="46"/></expr_stmt>
		       <expr_stmt><expr><name><name pos:line="109" pos:column="24">revs<pos:position pos:line="109" pos:column="28"/></name><operator pos:line="109" pos:column="28">-&gt;<pos:position pos:line="109" pos:column="33"/></operator><name pos:line="109" pos:column="30">early_output<pos:position pos:line="109" pos:column="42"/></name></name> <operator pos:line="109" pos:column="43">=<pos:position pos:line="109" pos:column="44"/></operator> <name pos:line="109" pos:column="45">count<pos:position pos:line="109" pos:column="50"/></name></expr>;<pos:position pos:line="109" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="110" pos:column="18"/></block></switch>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if></elseif> <elseif pos:line="111" pos:column="11">else <if pos:line="111" pos:column="16">if <condition pos:line="111" pos:column="19">(<expr><operator pos:line="111" pos:column="20">!<pos:position pos:line="111" pos:column="21"/></operator><call><name pos:line="111" pos:column="21">strcmp<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">arg<pos:position pos:line="111" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="33">"--parents"<pos:position pos:line="111" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="46"/></condition><then pos:line="111" pos:column="46"> <block pos:line="111" pos:column="47">{
		<expr_stmt><expr><name><name pos:line="112" pos:column="17">revs<pos:position pos:line="112" pos:column="21"/></name><operator pos:line="112" pos:column="21">-&gt;<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="23">rewrite_parents<pos:position pos:line="112" pos:column="38"/></name></name> <operator pos:line="112" pos:column="39">=<pos:position pos:line="112" pos:column="40"/></operator> <literal type="number" pos:line="112" pos:column="41">1<pos:position pos:line="112" pos:column="42"/></literal></expr>;<pos:position pos:line="112" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="113" pos:column="17">revs<pos:position pos:line="113" pos:column="21"/></name><operator pos:line="113" pos:column="21">-&gt;<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="23">print_parents<pos:position pos:line="113" pos:column="36"/></name></name> <operator pos:line="113" pos:column="37">=<pos:position pos:line="113" pos:column="38"/></operator> <literal type="number" pos:line="113" pos:column="39">1<pos:position pos:line="113" pos:column="40"/></literal></expr>;<pos:position pos:line="113" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if></elseif> <elseif pos:line="114" pos:column="11">else <if pos:line="114" pos:column="16">if <condition pos:line="114" pos:column="19">(<expr><operator pos:line="114" pos:column="20">!<pos:position pos:line="114" pos:column="21"/></operator><call><name pos:line="114" pos:column="21">strcmp<pos:position pos:line="114" pos:column="27"/></name><argument_list pos:line="114" pos:column="27">(<argument><expr><name pos:line="114" pos:column="28">arg<pos:position pos:line="114" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="33">"--dense"<pos:position pos:line="114" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="44"/></condition><then pos:line="114" pos:column="44"> <block pos:line="114" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="115" pos:column="17">revs<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">-&gt;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="23">dense<pos:position pos:line="115" pos:column="28"/></name></name> <operator pos:line="115" pos:column="29">=<pos:position pos:line="115" pos:column="30"/></operator> <literal type="number" pos:line="115" pos:column="31">1<pos:position pos:line="115" pos:column="32"/></literal></expr>;<pos:position pos:line="115" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="116" pos:column="10"/></block></then></if></elseif> <elseif pos:line="116" pos:column="11">else <if pos:line="116" pos:column="16">if <condition pos:line="116" pos:column="19">(<expr><operator pos:line="116" pos:column="20">!<pos:position pos:line="116" pos:column="21"/></operator><call><name pos:line="116" pos:column="21">strcmp<pos:position pos:line="116" pos:column="27"/></name><argument_list pos:line="116" pos:column="27">(<argument><expr><name pos:line="116" pos:column="28">arg<pos:position pos:line="116" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="33">"--sparse"<pos:position pos:line="116" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="45"/></condition><then pos:line="116" pos:column="45"> <block pos:line="116" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="117" pos:column="17">revs<pos:position pos:line="117" pos:column="21"/></name><operator pos:line="117" pos:column="21">-&gt;<pos:position pos:line="117" pos:column="26"/></operator><name pos:line="117" pos:column="23">dense<pos:position pos:line="117" pos:column="28"/></name></name> <operator pos:line="117" pos:column="29">=<pos:position pos:line="117" pos:column="30"/></operator> <literal type="number" pos:line="117" pos:column="31">0<pos:position pos:line="117" pos:column="32"/></literal></expr>;<pos:position pos:line="117" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="118" pos:column="10"/></block></then></if></elseif> <elseif pos:line="118" pos:column="11">else <if pos:line="118" pos:column="16">if <condition pos:line="118" pos:column="19">(<expr><operator pos:line="118" pos:column="20">!<pos:position pos:line="118" pos:column="21"/></operator><call><name pos:line="118" pos:column="21">strcmp<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">arg<pos:position pos:line="118" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="33">"--show-all"<pos:position pos:line="118" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="47"/></condition><then pos:line="118" pos:column="47"> <block pos:line="118" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="119" pos:column="17">revs<pos:position pos:line="119" pos:column="21"/></name><operator pos:line="119" pos:column="21">-&gt;<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="23">show_all<pos:position pos:line="119" pos:column="31"/></name></name> <operator pos:line="119" pos:column="32">=<pos:position pos:line="119" pos:column="33"/></operator> <literal type="number" pos:line="119" pos:column="34">1<pos:position pos:line="119" pos:column="35"/></literal></expr>;<pos:position pos:line="119" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="10"/></block></then></if></elseif> <elseif pos:line="120" pos:column="11">else <if pos:line="120" pos:column="16">if <condition pos:line="120" pos:column="19">(<expr><operator pos:line="120" pos:column="20">!<pos:position pos:line="120" pos:column="21"/></operator><call><name pos:line="120" pos:column="21">strcmp<pos:position pos:line="120" pos:column="27"/></name><argument_list pos:line="120" pos:column="27">(<argument><expr><name pos:line="120" pos:column="28">arg<pos:position pos:line="120" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="33">"--remove-empty"<pos:position pos:line="120" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="51"/></condition><then pos:line="120" pos:column="51"> <block pos:line="120" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="121" pos:column="17">revs<pos:position pos:line="121" pos:column="21"/></name><operator pos:line="121" pos:column="21">-&gt;<pos:position pos:line="121" pos:column="26"/></operator><name pos:line="121" pos:column="23">remove_empty_trees<pos:position pos:line="121" pos:column="41"/></name></name> <operator pos:line="121" pos:column="42">=<pos:position pos:line="121" pos:column="43"/></operator> <literal type="number" pos:line="121" pos:column="44">1<pos:position pos:line="121" pos:column="45"/></literal></expr>;<pos:position pos:line="121" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="122" pos:column="10"/></block></then></if></elseif> <elseif pos:line="122" pos:column="11">else <if pos:line="122" pos:column="16">if <condition pos:line="122" pos:column="19">(<expr><operator pos:line="122" pos:column="20">!<pos:position pos:line="122" pos:column="21"/></operator><call><name pos:line="122" pos:column="21">strcmp<pos:position pos:line="122" pos:column="27"/></name><argument_list pos:line="122" pos:column="27">(<argument><expr><name pos:line="122" pos:column="28">arg<pos:position pos:line="122" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="33">"--merges"<pos:position pos:line="122" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="45"/></condition><then pos:line="122" pos:column="45"> <block pos:line="122" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="123" pos:column="17">revs<pos:position pos:line="123" pos:column="21"/></name><operator pos:line="123" pos:column="21">-&gt;<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="23">min_parents<pos:position pos:line="123" pos:column="34"/></name></name> <operator pos:line="123" pos:column="35">=<pos:position pos:line="123" pos:column="36"/></operator> <literal type="number" pos:line="123" pos:column="37">2<pos:position pos:line="123" pos:column="38"/></literal></expr>;<pos:position pos:line="123" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="124" pos:column="10"/></block></then></if></elseif> <elseif pos:line="124" pos:column="11">else <if pos:line="124" pos:column="16">if <condition pos:line="124" pos:column="19">(<expr><operator pos:line="124" pos:column="20">!<pos:position pos:line="124" pos:column="21"/></operator><call><name pos:line="124" pos:column="21">strcmp<pos:position pos:line="124" pos:column="27"/></name><argument_list pos:line="124" pos:column="27">(<argument><expr><name pos:line="124" pos:column="28">arg<pos:position pos:line="124" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="33">"--no-merges"<pos:position pos:line="124" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="48"/></condition><then pos:line="124" pos:column="48"> <block pos:line="124" pos:column="49">{
		<expr_stmt><expr><name><name pos:line="125" pos:column="17">revs<pos:position pos:line="125" pos:column="21"/></name><operator pos:line="125" pos:column="21">-&gt;<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="23">max_parents<pos:position pos:line="125" pos:column="34"/></name></name> <operator pos:line="125" pos:column="35">=<pos:position pos:line="125" pos:column="36"/></operator> <literal type="number" pos:line="125" pos:column="37">1<pos:position pos:line="125" pos:column="38"/></literal></expr>;<pos:position pos:line="125" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="126" pos:column="10"/></block></then></if></elseif> <elseif pos:line="126" pos:column="11">else <if pos:line="126" pos:column="16">if <condition pos:line="126" pos:column="19">(<expr><call><name pos:line="126" pos:column="20">starts_with<pos:position pos:line="126" pos:column="31"/></name><argument_list pos:line="126" pos:column="31">(<argument><expr><name pos:line="126" pos:column="32">arg<pos:position pos:line="126" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="37">"--min-parents="<pos:position pos:line="126" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="55"/></condition><then pos:line="126" pos:column="55"> <block pos:line="126" pos:column="56">{
		<expr_stmt><expr><name><name pos:line="127" pos:column="17">revs<pos:position pos:line="127" pos:column="21"/></name><operator pos:line="127" pos:column="21">-&gt;<pos:position pos:line="127" pos:column="26"/></operator><name pos:line="127" pos:column="23">min_parents<pos:position pos:line="127" pos:column="34"/></name></name> <operator pos:line="127" pos:column="35">=<pos:position pos:line="127" pos:column="36"/></operator> <call><name pos:line="127" pos:column="37">atoi<pos:position pos:line="127" pos:column="41"/></name><argument_list pos:line="127" pos:column="41">(<argument><expr><name pos:line="127" pos:column="42">arg<pos:position pos:line="127" pos:column="45"/></name><operator pos:line="127" pos:column="45">+<pos:position pos:line="127" pos:column="46"/></operator><literal type="number" pos:line="127" pos:column="46">14<pos:position pos:line="127" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="128" pos:column="10"/></block></then></if></elseif> <elseif pos:line="128" pos:column="11">else <if pos:line="128" pos:column="16">if <condition pos:line="128" pos:column="19">(<expr><call><name pos:line="128" pos:column="20">starts_with<pos:position pos:line="128" pos:column="31"/></name><argument_list pos:line="128" pos:column="31">(<argument><expr><name pos:line="128" pos:column="32">arg<pos:position pos:line="128" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="37">"--no-min-parents"<pos:position pos:line="128" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="57"/></condition><then pos:line="128" pos:column="57"> <block pos:line="128" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="129" pos:column="17">revs<pos:position pos:line="129" pos:column="21"/></name><operator pos:line="129" pos:column="21">-&gt;<pos:position pos:line="129" pos:column="26"/></operator><name pos:line="129" pos:column="23">min_parents<pos:position pos:line="129" pos:column="34"/></name></name> <operator pos:line="129" pos:column="35">=<pos:position pos:line="129" pos:column="36"/></operator> <literal type="number" pos:line="129" pos:column="37">0<pos:position pos:line="129" pos:column="38"/></literal></expr>;<pos:position pos:line="129" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="130" pos:column="10"/></block></then></if></elseif> <elseif pos:line="130" pos:column="11">else <if pos:line="130" pos:column="16">if <condition pos:line="130" pos:column="19">(<expr><call><name pos:line="130" pos:column="20">starts_with<pos:position pos:line="130" pos:column="31"/></name><argument_list pos:line="130" pos:column="31">(<argument><expr><name pos:line="130" pos:column="32">arg<pos:position pos:line="130" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="37">"--max-parents="<pos:position pos:line="130" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="55"/></condition><then pos:line="130" pos:column="55"> <block pos:line="130" pos:column="56">{
		<expr_stmt><expr><name><name pos:line="131" pos:column="17">revs<pos:position pos:line="131" pos:column="21"/></name><operator pos:line="131" pos:column="21">-&gt;<pos:position pos:line="131" pos:column="26"/></operator><name pos:line="131" pos:column="23">max_parents<pos:position pos:line="131" pos:column="34"/></name></name> <operator pos:line="131" pos:column="35">=<pos:position pos:line="131" pos:column="36"/></operator> <call><name pos:line="131" pos:column="37">atoi<pos:position pos:line="131" pos:column="41"/></name><argument_list pos:line="131" pos:column="41">(<argument><expr><name pos:line="131" pos:column="42">arg<pos:position pos:line="131" pos:column="45"/></name><operator pos:line="131" pos:column="45">+<pos:position pos:line="131" pos:column="46"/></operator><literal type="number" pos:line="131" pos:column="46">14<pos:position pos:line="131" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="132" pos:column="10"/></block></then></if></elseif> <elseif pos:line="132" pos:column="11">else <if pos:line="132" pos:column="16">if <condition pos:line="132" pos:column="19">(<expr><call><name pos:line="132" pos:column="20">starts_with<pos:position pos:line="132" pos:column="31"/></name><argument_list pos:line="132" pos:column="31">(<argument><expr><name pos:line="132" pos:column="32">arg<pos:position pos:line="132" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="37">"--no-max-parents"<pos:position pos:line="132" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="57"/></condition><then pos:line="132" pos:column="57"> <block pos:line="132" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="133" pos:column="17">revs<pos:position pos:line="133" pos:column="21"/></name><operator pos:line="133" pos:column="21">-&gt;<pos:position pos:line="133" pos:column="26"/></operator><name pos:line="133" pos:column="23">max_parents<pos:position pos:line="133" pos:column="34"/></name></name> <operator pos:line="133" pos:column="35">=<pos:position pos:line="133" pos:column="36"/></operator> <operator pos:line="133" pos:column="37">-<pos:position pos:line="133" pos:column="38"/></operator><literal type="number" pos:line="133" pos:column="38">1<pos:position pos:line="133" pos:column="39"/></literal></expr>;<pos:position pos:line="133" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="134" pos:column="10"/></block></then></if></elseif> <elseif pos:line="134" pos:column="11">else <if pos:line="134" pos:column="16">if <condition pos:line="134" pos:column="19">(<expr><operator pos:line="134" pos:column="20">!<pos:position pos:line="134" pos:column="21"/></operator><call><name pos:line="134" pos:column="21">strcmp<pos:position pos:line="134" pos:column="27"/></name><argument_list pos:line="134" pos:column="27">(<argument><expr><name pos:line="134" pos:column="28">arg<pos:position pos:line="134" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="33">"--boundary"<pos:position pos:line="134" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="47"/></condition><then pos:line="134" pos:column="47"> <block pos:line="134" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="135" pos:column="17">revs<pos:position pos:line="135" pos:column="21"/></name><operator pos:line="135" pos:column="21">-&gt;<pos:position pos:line="135" pos:column="26"/></operator><name pos:line="135" pos:column="23">boundary<pos:position pos:line="135" pos:column="31"/></name></name> <operator pos:line="135" pos:column="32">=<pos:position pos:line="135" pos:column="33"/></operator> <literal type="number" pos:line="135" pos:column="34">1<pos:position pos:line="135" pos:column="35"/></literal></expr>;<pos:position pos:line="135" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="136" pos:column="10"/></block></then></if></elseif> <elseif pos:line="136" pos:column="11">else <if pos:line="136" pos:column="16">if <condition pos:line="136" pos:column="19">(<expr><operator pos:line="136" pos:column="20">!<pos:position pos:line="136" pos:column="21"/></operator><call><name pos:line="136" pos:column="21">strcmp<pos:position pos:line="136" pos:column="27"/></name><argument_list pos:line="136" pos:column="27">(<argument><expr><name pos:line="136" pos:column="28">arg<pos:position pos:line="136" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="33">"--left-right"<pos:position pos:line="136" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="49"/></condition><then pos:line="136" pos:column="49"> <block pos:line="136" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="137" pos:column="17">revs<pos:position pos:line="137" pos:column="21"/></name><operator pos:line="137" pos:column="21">-&gt;<pos:position pos:line="137" pos:column="26"/></operator><name pos:line="137" pos:column="23">left_right<pos:position pos:line="137" pos:column="33"/></name></name> <operator pos:line="137" pos:column="34">=<pos:position pos:line="137" pos:column="35"/></operator> <literal type="number" pos:line="137" pos:column="36">1<pos:position pos:line="137" pos:column="37"/></literal></expr>;<pos:position pos:line="137" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="138" pos:column="10"/></block></then></if></elseif> <elseif pos:line="138" pos:column="11">else <if pos:line="138" pos:column="16">if <condition pos:line="138" pos:column="19">(<expr><operator pos:line="138" pos:column="20">!<pos:position pos:line="138" pos:column="21"/></operator><call><name pos:line="138" pos:column="21">strcmp<pos:position pos:line="138" pos:column="27"/></name><argument_list pos:line="138" pos:column="27">(<argument><expr><name pos:line="138" pos:column="28">arg<pos:position pos:line="138" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="33">"--left-only"<pos:position pos:line="138" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="48"/></condition><then pos:line="138" pos:column="48"> <block pos:line="138" pos:column="49">{
		<if pos:line="139" pos:column="17">if <condition pos:line="139" pos:column="20">(<expr><name><name pos:line="139" pos:column="21">revs<pos:position pos:line="139" pos:column="25"/></name><operator pos:line="139" pos:column="25">-&gt;<pos:position pos:line="139" pos:column="30"/></operator><name pos:line="139" pos:column="27">right_only<pos:position pos:line="139" pos:column="37"/></name></name></expr>)<pos:position pos:line="139" pos:column="38"/></condition><then pos:line="139" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="25">die<pos:position pos:line="140" pos:column="28"/></name><argument_list pos:line="140" pos:column="28">(<argument><expr><literal type="string" pos:line="140" pos:column="29">"--left-only is incompatible with --right-only"<pos:position pos:line="140" pos:column="76"/></literal>
			    <literal type="string" pos:line="141" pos:column="29">" or --cherry"<pos:position pos:line="141" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="142" pos:column="17">revs<pos:position pos:line="142" pos:column="21"/></name><operator pos:line="142" pos:column="21">-&gt;<pos:position pos:line="142" pos:column="26"/></operator><name pos:line="142" pos:column="23">left_only<pos:position pos:line="142" pos:column="32"/></name></name> <operator pos:line="142" pos:column="33">=<pos:position pos:line="142" pos:column="34"/></operator> <literal type="number" pos:line="142" pos:column="35">1<pos:position pos:line="142" pos:column="36"/></literal></expr>;<pos:position pos:line="142" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="143" pos:column="10"/></block></then></if></elseif> <elseif pos:line="143" pos:column="11">else <if pos:line="143" pos:column="16">if <condition pos:line="143" pos:column="19">(<expr><operator pos:line="143" pos:column="20">!<pos:position pos:line="143" pos:column="21"/></operator><call><name pos:line="143" pos:column="21">strcmp<pos:position pos:line="143" pos:column="27"/></name><argument_list pos:line="143" pos:column="27">(<argument><expr><name pos:line="143" pos:column="28">arg<pos:position pos:line="143" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="33">"--right-only"<pos:position pos:line="143" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="49"/></condition><then pos:line="143" pos:column="49"> <block pos:line="143" pos:column="50">{
		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name><name pos:line="144" pos:column="21">revs<pos:position pos:line="144" pos:column="25"/></name><operator pos:line="144" pos:column="25">-&gt;<pos:position pos:line="144" pos:column="30"/></operator><name pos:line="144" pos:column="27">left_only<pos:position pos:line="144" pos:column="36"/></name></name></expr>)<pos:position pos:line="144" pos:column="37"/></condition><then pos:line="144" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="25">die<pos:position pos:line="145" pos:column="28"/></name><argument_list pos:line="145" pos:column="28">(<argument><expr><literal type="string" pos:line="145" pos:column="29">"--right-only is incompatible with --left-only"<pos:position pos:line="145" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="78"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="146" pos:column="17">revs<pos:position pos:line="146" pos:column="21"/></name><operator pos:line="146" pos:column="21">-&gt;<pos:position pos:line="146" pos:column="26"/></operator><name pos:line="146" pos:column="23">right_only<pos:position pos:line="146" pos:column="33"/></name></name> <operator pos:line="146" pos:column="34">=<pos:position pos:line="146" pos:column="35"/></operator> <literal type="number" pos:line="146" pos:column="36">1<pos:position pos:line="146" pos:column="37"/></literal></expr>;<pos:position pos:line="146" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="147" pos:column="10"/></block></then></if></elseif> <elseif pos:line="147" pos:column="11">else <if pos:line="147" pos:column="16">if <condition pos:line="147" pos:column="19">(<expr><operator pos:line="147" pos:column="20">!<pos:position pos:line="147" pos:column="21"/></operator><call><name pos:line="147" pos:column="21">strcmp<pos:position pos:line="147" pos:column="27"/></name><argument_list pos:line="147" pos:column="27">(<argument><expr><name pos:line="147" pos:column="28">arg<pos:position pos:line="147" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="33">"--cherry"<pos:position pos:line="147" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="45"/></condition><then pos:line="147" pos:column="45"> <block pos:line="147" pos:column="46">{
		<if pos:line="148" pos:column="17">if <condition pos:line="148" pos:column="20">(<expr><name><name pos:line="148" pos:column="21">revs<pos:position pos:line="148" pos:column="25"/></name><operator pos:line="148" pos:column="25">-&gt;<pos:position pos:line="148" pos:column="30"/></operator><name pos:line="148" pos:column="27">left_only<pos:position pos:line="148" pos:column="36"/></name></name></expr>)<pos:position pos:line="148" pos:column="37"/></condition><then pos:line="148" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="25">die<pos:position pos:line="149" pos:column="28"/></name><argument_list pos:line="149" pos:column="28">(<argument><expr><literal type="string" pos:line="149" pos:column="29">"--cherry is incompatible with --left-only"<pos:position pos:line="149" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="74"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="150" pos:column="17">revs<pos:position pos:line="150" pos:column="21"/></name><operator pos:line="150" pos:column="21">-&gt;<pos:position pos:line="150" pos:column="26"/></operator><name pos:line="150" pos:column="23">cherry_mark<pos:position pos:line="150" pos:column="34"/></name></name> <operator pos:line="150" pos:column="35">=<pos:position pos:line="150" pos:column="36"/></operator> <literal type="number" pos:line="150" pos:column="37">1<pos:position pos:line="150" pos:column="38"/></literal></expr>;<pos:position pos:line="150" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="151" pos:column="17">revs<pos:position pos:line="151" pos:column="21"/></name><operator pos:line="151" pos:column="21">-&gt;<pos:position pos:line="151" pos:column="26"/></operator><name pos:line="151" pos:column="23">right_only<pos:position pos:line="151" pos:column="33"/></name></name> <operator pos:line="151" pos:column="34">=<pos:position pos:line="151" pos:column="35"/></operator> <literal type="number" pos:line="151" pos:column="36">1<pos:position pos:line="151" pos:column="37"/></literal></expr>;<pos:position pos:line="151" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="152" pos:column="17">revs<pos:position pos:line="152" pos:column="21"/></name><operator pos:line="152" pos:column="21">-&gt;<pos:position pos:line="152" pos:column="26"/></operator><name pos:line="152" pos:column="23">max_parents<pos:position pos:line="152" pos:column="34"/></name></name> <operator pos:line="152" pos:column="35">=<pos:position pos:line="152" pos:column="36"/></operator> <literal type="number" pos:line="152" pos:column="37">1<pos:position pos:line="152" pos:column="38"/></literal></expr>;<pos:position pos:line="152" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="153" pos:column="17">revs<pos:position pos:line="153" pos:column="21"/></name><operator pos:line="153" pos:column="21">-&gt;<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="23">limited<pos:position pos:line="153" pos:column="30"/></name></name> <operator pos:line="153" pos:column="31">=<pos:position pos:line="153" pos:column="32"/></operator> <literal type="number" pos:line="153" pos:column="33">1<pos:position pos:line="153" pos:column="34"/></literal></expr>;<pos:position pos:line="153" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="154" pos:column="10"/></block></then></if></elseif> <elseif pos:line="154" pos:column="11">else <if pos:line="154" pos:column="16">if <condition pos:line="154" pos:column="19">(<expr><operator pos:line="154" pos:column="20">!<pos:position pos:line="154" pos:column="21"/></operator><call><name pos:line="154" pos:column="21">strcmp<pos:position pos:line="154" pos:column="27"/></name><argument_list pos:line="154" pos:column="27">(<argument><expr><name pos:line="154" pos:column="28">arg<pos:position pos:line="154" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="33">"--count"<pos:position pos:line="154" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="44"/></condition><then pos:line="154" pos:column="44"> <block pos:line="154" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="155" pos:column="17">revs<pos:position pos:line="155" pos:column="21"/></name><operator pos:line="155" pos:column="21">-&gt;<pos:position pos:line="155" pos:column="26"/></operator><name pos:line="155" pos:column="23">count<pos:position pos:line="155" pos:column="28"/></name></name> <operator pos:line="155" pos:column="29">=<pos:position pos:line="155" pos:column="30"/></operator> <literal type="number" pos:line="155" pos:column="31">1<pos:position pos:line="155" pos:column="32"/></literal></expr>;<pos:position pos:line="155" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="156" pos:column="10"/></block></then></if></elseif> <elseif pos:line="156" pos:column="11">else <if pos:line="156" pos:column="16">if <condition pos:line="156" pos:column="19">(<expr><operator pos:line="156" pos:column="20">!<pos:position pos:line="156" pos:column="21"/></operator><call><name pos:line="156" pos:column="21">strcmp<pos:position pos:line="156" pos:column="27"/></name><argument_list pos:line="156" pos:column="27">(<argument><expr><name pos:line="156" pos:column="28">arg<pos:position pos:line="156" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="33">"--cherry-mark"<pos:position pos:line="156" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="156" pos:column="50"/></condition><then pos:line="156" pos:column="50"> <block pos:line="156" pos:column="51">{
		<if pos:line="157" pos:column="17">if <condition pos:line="157" pos:column="20">(<expr><name><name pos:line="157" pos:column="21">revs<pos:position pos:line="157" pos:column="25"/></name><operator pos:line="157" pos:column="25">-&gt;<pos:position pos:line="157" pos:column="30"/></operator><name pos:line="157" pos:column="27">cherry_pick<pos:position pos:line="157" pos:column="38"/></name></name></expr>)<pos:position pos:line="157" pos:column="39"/></condition><then pos:line="157" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="25">die<pos:position pos:line="158" pos:column="28"/></name><argument_list pos:line="158" pos:column="28">(<argument><expr><literal type="string" pos:line="158" pos:column="29">"--cherry-mark is incompatible with --cherry-pick"<pos:position pos:line="158" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="81"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="159" pos:column="17">revs<pos:position pos:line="159" pos:column="21"/></name><operator pos:line="159" pos:column="21">-&gt;<pos:position pos:line="159" pos:column="26"/></operator><name pos:line="159" pos:column="23">cherry_mark<pos:position pos:line="159" pos:column="34"/></name></name> <operator pos:line="159" pos:column="35">=<pos:position pos:line="159" pos:column="36"/></operator> <literal type="number" pos:line="159" pos:column="37">1<pos:position pos:line="159" pos:column="38"/></literal></expr>;<pos:position pos:line="159" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="160" pos:column="17">revs<pos:position pos:line="160" pos:column="21"/></name><operator pos:line="160" pos:column="21">-&gt;<pos:position pos:line="160" pos:column="26"/></operator><name pos:line="160" pos:column="23">limited<pos:position pos:line="160" pos:column="30"/></name></name> <operator pos:line="160" pos:column="31">=<pos:position pos:line="160" pos:column="32"/></operator> <literal type="number" pos:line="160" pos:column="33">1<pos:position pos:line="160" pos:column="34"/></literal></expr>;<pos:position pos:line="160" pos:column="35"/></expr_stmt> <comment type="block" pos:line="160" pos:column="36">/* needs limit_list() */</comment>
	}<pos:position pos:line="161" pos:column="10"/></block></then></if></elseif> <elseif pos:line="161" pos:column="11">else <if pos:line="161" pos:column="16">if <condition pos:line="161" pos:column="19">(<expr><operator pos:line="161" pos:column="20">!<pos:position pos:line="161" pos:column="21"/></operator><call><name pos:line="161" pos:column="21">strcmp<pos:position pos:line="161" pos:column="27"/></name><argument_list pos:line="161" pos:column="27">(<argument><expr><name pos:line="161" pos:column="28">arg<pos:position pos:line="161" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="33">"--cherry-pick"<pos:position pos:line="161" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="161" pos:column="50"/></condition><then pos:line="161" pos:column="50"> <block pos:line="161" pos:column="51">{
		<if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><name><name pos:line="162" pos:column="21">revs<pos:position pos:line="162" pos:column="25"/></name><operator pos:line="162" pos:column="25">-&gt;<pos:position pos:line="162" pos:column="30"/></operator><name pos:line="162" pos:column="27">cherry_mark<pos:position pos:line="162" pos:column="38"/></name></name></expr>)<pos:position pos:line="162" pos:column="39"/></condition><then pos:line="162" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="25">die<pos:position pos:line="163" pos:column="28"/></name><argument_list pos:line="163" pos:column="28">(<argument><expr><literal type="string" pos:line="163" pos:column="29">"--cherry-pick is incompatible with --cherry-mark"<pos:position pos:line="163" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="81"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="164" pos:column="17">revs<pos:position pos:line="164" pos:column="21"/></name><operator pos:line="164" pos:column="21">-&gt;<pos:position pos:line="164" pos:column="26"/></operator><name pos:line="164" pos:column="23">cherry_pick<pos:position pos:line="164" pos:column="34"/></name></name> <operator pos:line="164" pos:column="35">=<pos:position pos:line="164" pos:column="36"/></operator> <literal type="number" pos:line="164" pos:column="37">1<pos:position pos:line="164" pos:column="38"/></literal></expr>;<pos:position pos:line="164" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="165" pos:column="17">revs<pos:position pos:line="165" pos:column="21"/></name><operator pos:line="165" pos:column="21">-&gt;<pos:position pos:line="165" pos:column="26"/></operator><name pos:line="165" pos:column="23">limited<pos:position pos:line="165" pos:column="30"/></name></name> <operator pos:line="165" pos:column="31">=<pos:position pos:line="165" pos:column="32"/></operator> <literal type="number" pos:line="165" pos:column="33">1<pos:position pos:line="165" pos:column="34"/></literal></expr>;<pos:position pos:line="165" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="166" pos:column="10"/></block></then></if></elseif> <elseif pos:line="166" pos:column="11">else <if pos:line="166" pos:column="16">if <condition pos:line="166" pos:column="19">(<expr><operator pos:line="166" pos:column="20">!<pos:position pos:line="166" pos:column="21"/></operator><call><name pos:line="166" pos:column="21">strcmp<pos:position pos:line="166" pos:column="27"/></name><argument_list pos:line="166" pos:column="27">(<argument><expr><name pos:line="166" pos:column="28">arg<pos:position pos:line="166" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="33">"--objects"<pos:position pos:line="166" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="46"/></condition><then pos:line="166" pos:column="46"> <block pos:line="166" pos:column="47">{
		<expr_stmt><expr><name><name pos:line="167" pos:column="17">revs<pos:position pos:line="167" pos:column="21"/></name><operator pos:line="167" pos:column="21">-&gt;<pos:position pos:line="167" pos:column="26"/></operator><name pos:line="167" pos:column="23">tag_objects<pos:position pos:line="167" pos:column="34"/></name></name> <operator pos:line="167" pos:column="35">=<pos:position pos:line="167" pos:column="36"/></operator> <literal type="number" pos:line="167" pos:column="37">1<pos:position pos:line="167" pos:column="38"/></literal></expr>;<pos:position pos:line="167" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="168" pos:column="17">revs<pos:position pos:line="168" pos:column="21"/></name><operator pos:line="168" pos:column="21">-&gt;<pos:position pos:line="168" pos:column="26"/></operator><name pos:line="168" pos:column="23">tree_objects<pos:position pos:line="168" pos:column="35"/></name></name> <operator pos:line="168" pos:column="36">=<pos:position pos:line="168" pos:column="37"/></operator> <literal type="number" pos:line="168" pos:column="38">1<pos:position pos:line="168" pos:column="39"/></literal></expr>;<pos:position pos:line="168" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="169" pos:column="17">revs<pos:position pos:line="169" pos:column="21"/></name><operator pos:line="169" pos:column="21">-&gt;<pos:position pos:line="169" pos:column="26"/></operator><name pos:line="169" pos:column="23">blob_objects<pos:position pos:line="169" pos:column="35"/></name></name> <operator pos:line="169" pos:column="36">=<pos:position pos:line="169" pos:column="37"/></operator> <literal type="number" pos:line="169" pos:column="38">1<pos:position pos:line="169" pos:column="39"/></literal></expr>;<pos:position pos:line="169" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="170" pos:column="10"/></block></then></if></elseif> <elseif pos:line="170" pos:column="11">else <if pos:line="170" pos:column="16">if <condition pos:line="170" pos:column="19">(<expr><operator pos:line="170" pos:column="20">!<pos:position pos:line="170" pos:column="21"/></operator><call><name pos:line="170" pos:column="21">strcmp<pos:position pos:line="170" pos:column="27"/></name><argument_list pos:line="170" pos:column="27">(<argument><expr><name pos:line="170" pos:column="28">arg<pos:position pos:line="170" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="33">"--objects-edge"<pos:position pos:line="170" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="51"/></condition><then pos:line="170" pos:column="51"> <block pos:line="170" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="171" pos:column="17">revs<pos:position pos:line="171" pos:column="21"/></name><operator pos:line="171" pos:column="21">-&gt;<pos:position pos:line="171" pos:column="26"/></operator><name pos:line="171" pos:column="23">tag_objects<pos:position pos:line="171" pos:column="34"/></name></name> <operator pos:line="171" pos:column="35">=<pos:position pos:line="171" pos:column="36"/></operator> <literal type="number" pos:line="171" pos:column="37">1<pos:position pos:line="171" pos:column="38"/></literal></expr>;<pos:position pos:line="171" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="172" pos:column="17">revs<pos:position pos:line="172" pos:column="21"/></name><operator pos:line="172" pos:column="21">-&gt;<pos:position pos:line="172" pos:column="26"/></operator><name pos:line="172" pos:column="23">tree_objects<pos:position pos:line="172" pos:column="35"/></name></name> <operator pos:line="172" pos:column="36">=<pos:position pos:line="172" pos:column="37"/></operator> <literal type="number" pos:line="172" pos:column="38">1<pos:position pos:line="172" pos:column="39"/></literal></expr>;<pos:position pos:line="172" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="173" pos:column="17">revs<pos:position pos:line="173" pos:column="21"/></name><operator pos:line="173" pos:column="21">-&gt;<pos:position pos:line="173" pos:column="26"/></operator><name pos:line="173" pos:column="23">blob_objects<pos:position pos:line="173" pos:column="35"/></name></name> <operator pos:line="173" pos:column="36">=<pos:position pos:line="173" pos:column="37"/></operator> <literal type="number" pos:line="173" pos:column="38">1<pos:position pos:line="173" pos:column="39"/></literal></expr>;<pos:position pos:line="173" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="174" pos:column="17">revs<pos:position pos:line="174" pos:column="21"/></name><operator pos:line="174" pos:column="21">-&gt;<pos:position pos:line="174" pos:column="26"/></operator><name pos:line="174" pos:column="23">edge_hint<pos:position pos:line="174" pos:column="32"/></name></name> <operator pos:line="174" pos:column="33">=<pos:position pos:line="174" pos:column="34"/></operator> <literal type="number" pos:line="174" pos:column="35">1<pos:position pos:line="174" pos:column="36"/></literal></expr>;<pos:position pos:line="174" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="175" pos:column="10"/></block></then></if></elseif> <elseif pos:line="175" pos:column="11">else <if pos:line="175" pos:column="16">if <condition pos:line="175" pos:column="19">(<expr><operator pos:line="175" pos:column="20">!<pos:position pos:line="175" pos:column="21"/></operator><call><name pos:line="175" pos:column="21">strcmp<pos:position pos:line="175" pos:column="27"/></name><argument_list pos:line="175" pos:column="27">(<argument><expr><name pos:line="175" pos:column="28">arg<pos:position pos:line="175" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="33">"--verify-objects"<pos:position pos:line="175" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="53"/></condition><then pos:line="175" pos:column="53"> <block pos:line="175" pos:column="54">{
		<expr_stmt><expr><name><name pos:line="176" pos:column="17">revs<pos:position pos:line="176" pos:column="21"/></name><operator pos:line="176" pos:column="21">-&gt;<pos:position pos:line="176" pos:column="26"/></operator><name pos:line="176" pos:column="23">tag_objects<pos:position pos:line="176" pos:column="34"/></name></name> <operator pos:line="176" pos:column="35">=<pos:position pos:line="176" pos:column="36"/></operator> <literal type="number" pos:line="176" pos:column="37">1<pos:position pos:line="176" pos:column="38"/></literal></expr>;<pos:position pos:line="176" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="177" pos:column="17">revs<pos:position pos:line="177" pos:column="21"/></name><operator pos:line="177" pos:column="21">-&gt;<pos:position pos:line="177" pos:column="26"/></operator><name pos:line="177" pos:column="23">tree_objects<pos:position pos:line="177" pos:column="35"/></name></name> <operator pos:line="177" pos:column="36">=<pos:position pos:line="177" pos:column="37"/></operator> <literal type="number" pos:line="177" pos:column="38">1<pos:position pos:line="177" pos:column="39"/></literal></expr>;<pos:position pos:line="177" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="178" pos:column="17">revs<pos:position pos:line="178" pos:column="21"/></name><operator pos:line="178" pos:column="21">-&gt;<pos:position pos:line="178" pos:column="26"/></operator><name pos:line="178" pos:column="23">blob_objects<pos:position pos:line="178" pos:column="35"/></name></name> <operator pos:line="178" pos:column="36">=<pos:position pos:line="178" pos:column="37"/></operator> <literal type="number" pos:line="178" pos:column="38">1<pos:position pos:line="178" pos:column="39"/></literal></expr>;<pos:position pos:line="178" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="179" pos:column="17">revs<pos:position pos:line="179" pos:column="21"/></name><operator pos:line="179" pos:column="21">-&gt;<pos:position pos:line="179" pos:column="26"/></operator><name pos:line="179" pos:column="23">verify_objects<pos:position pos:line="179" pos:column="37"/></name></name> <operator pos:line="179" pos:column="38">=<pos:position pos:line="179" pos:column="39"/></operator> <literal type="number" pos:line="179" pos:column="40">1<pos:position pos:line="179" pos:column="41"/></literal></expr>;<pos:position pos:line="179" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="180" pos:column="10"/></block></then></if></elseif> <elseif pos:line="180" pos:column="11">else <if pos:line="180" pos:column="16">if <condition pos:line="180" pos:column="19">(<expr><operator pos:line="180" pos:column="20">!<pos:position pos:line="180" pos:column="21"/></operator><call><name pos:line="180" pos:column="21">strcmp<pos:position pos:line="180" pos:column="27"/></name><argument_list pos:line="180" pos:column="27">(<argument><expr><name pos:line="180" pos:column="28">arg<pos:position pos:line="180" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="33">"--unpacked"<pos:position pos:line="180" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="180" pos:column="47"/></condition><then pos:line="180" pos:column="47"> <block pos:line="180" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="181" pos:column="17">revs<pos:position pos:line="181" pos:column="21"/></name><operator pos:line="181" pos:column="21">-&gt;<pos:position pos:line="181" pos:column="26"/></operator><name pos:line="181" pos:column="23">unpacked<pos:position pos:line="181" pos:column="31"/></name></name> <operator pos:line="181" pos:column="32">=<pos:position pos:line="181" pos:column="33"/></operator> <literal type="number" pos:line="181" pos:column="34">1<pos:position pos:line="181" pos:column="35"/></literal></expr>;<pos:position pos:line="181" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="182" pos:column="10"/></block></then></if></elseif> <elseif pos:line="182" pos:column="11">else <if pos:line="182" pos:column="16">if <condition pos:line="182" pos:column="19">(<expr><call><name pos:line="182" pos:column="20">starts_with<pos:position pos:line="182" pos:column="31"/></name><argument_list pos:line="182" pos:column="31">(<argument><expr><name pos:line="182" pos:column="32">arg<pos:position pos:line="182" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="37">"--unpacked="<pos:position pos:line="182" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="182" pos:column="52"/></condition><then pos:line="182" pos:column="52"> <block pos:line="182" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="183" pos:column="17">die<pos:position pos:line="183" pos:column="20"/></name><argument_list pos:line="183" pos:column="20">(<argument><expr><literal type="string" pos:line="183" pos:column="21">"--unpacked=&lt;packfile&gt; no longer supported."<pos:position pos:line="183" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="184" pos:column="10"/></block></then></if></elseif> <elseif pos:line="184" pos:column="11">else <if pos:line="184" pos:column="16">if <condition pos:line="184" pos:column="19">(<expr><operator pos:line="184" pos:column="20">!<pos:position pos:line="184" pos:column="21"/></operator><call><name pos:line="184" pos:column="21">strcmp<pos:position pos:line="184" pos:column="27"/></name><argument_list pos:line="184" pos:column="27">(<argument><expr><name pos:line="184" pos:column="28">arg<pos:position pos:line="184" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="33">"-r"<pos:position pos:line="184" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="39"/></condition><then pos:line="184" pos:column="39"> <block pos:line="184" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="185" pos:column="17">revs<pos:position pos:line="185" pos:column="21"/></name><operator pos:line="185" pos:column="21">-&gt;<pos:position pos:line="185" pos:column="26"/></operator><name pos:line="185" pos:column="23">diff<pos:position pos:line="185" pos:column="27"/></name></name> <operator pos:line="185" pos:column="28">=<pos:position pos:line="185" pos:column="29"/></operator> <literal type="number" pos:line="185" pos:column="30">1<pos:position pos:line="185" pos:column="31"/></literal></expr>;<pos:position pos:line="185" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="186" pos:column="17">DIFF_OPT_SET<pos:position pos:line="186" pos:column="29"/></name><argument_list pos:line="186" pos:column="29">(<argument><expr><operator pos:line="186" pos:column="30">&amp;<pos:position pos:line="186" pos:column="35"/></operator><name><name pos:line="186" pos:column="31">revs<pos:position pos:line="186" pos:column="35"/></name><operator pos:line="186" pos:column="35">-&gt;<pos:position pos:line="186" pos:column="40"/></operator><name pos:line="186" pos:column="37">diffopt<pos:position pos:line="186" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="46">RECURSIVE<pos:position pos:line="186" pos:column="55"/></name></expr></argument>)<pos:position pos:line="186" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="187" pos:column="10"/></block></then></if></elseif> <elseif pos:line="187" pos:column="11">else <if pos:line="187" pos:column="16">if <condition pos:line="187" pos:column="19">(<expr><operator pos:line="187" pos:column="20">!<pos:position pos:line="187" pos:column="21"/></operator><call><name pos:line="187" pos:column="21">strcmp<pos:position pos:line="187" pos:column="27"/></name><argument_list pos:line="187" pos:column="27">(<argument><expr><name pos:line="187" pos:column="28">arg<pos:position pos:line="187" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="33">"-t"<pos:position pos:line="187" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="39"/></condition><then pos:line="187" pos:column="39"> <block pos:line="187" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="188" pos:column="17">revs<pos:position pos:line="188" pos:column="21"/></name><operator pos:line="188" pos:column="21">-&gt;<pos:position pos:line="188" pos:column="26"/></operator><name pos:line="188" pos:column="23">diff<pos:position pos:line="188" pos:column="27"/></name></name> <operator pos:line="188" pos:column="28">=<pos:position pos:line="188" pos:column="29"/></operator> <literal type="number" pos:line="188" pos:column="30">1<pos:position pos:line="188" pos:column="31"/></literal></expr>;<pos:position pos:line="188" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="189" pos:column="17">DIFF_OPT_SET<pos:position pos:line="189" pos:column="29"/></name><argument_list pos:line="189" pos:column="29">(<argument><expr><operator pos:line="189" pos:column="30">&amp;<pos:position pos:line="189" pos:column="35"/></operator><name><name pos:line="189" pos:column="31">revs<pos:position pos:line="189" pos:column="35"/></name><operator pos:line="189" pos:column="35">-&gt;<pos:position pos:line="189" pos:column="40"/></operator><name pos:line="189" pos:column="37">diffopt<pos:position pos:line="189" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="46">RECURSIVE<pos:position pos:line="189" pos:column="55"/></name></expr></argument>)<pos:position pos:line="189" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="190" pos:column="17">DIFF_OPT_SET<pos:position pos:line="190" pos:column="29"/></name><argument_list pos:line="190" pos:column="29">(<argument><expr><operator pos:line="190" pos:column="30">&amp;<pos:position pos:line="190" pos:column="35"/></operator><name><name pos:line="190" pos:column="31">revs<pos:position pos:line="190" pos:column="35"/></name><operator pos:line="190" pos:column="35">-&gt;<pos:position pos:line="190" pos:column="40"/></operator><name pos:line="190" pos:column="37">diffopt<pos:position pos:line="190" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="46">TREE_IN_RECURSIVE<pos:position pos:line="190" pos:column="63"/></name></expr></argument>)<pos:position pos:line="190" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="191" pos:column="10"/></block></then></if></elseif> <elseif pos:line="191" pos:column="11">else <if pos:line="191" pos:column="16">if <condition pos:line="191" pos:column="19">(<expr><operator pos:line="191" pos:column="20">!<pos:position pos:line="191" pos:column="21"/></operator><call><name pos:line="191" pos:column="21">strcmp<pos:position pos:line="191" pos:column="27"/></name><argument_list pos:line="191" pos:column="27">(<argument><expr><name pos:line="191" pos:column="28">arg<pos:position pos:line="191" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="33">"-m"<pos:position pos:line="191" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="191" pos:column="39"/></condition><then pos:line="191" pos:column="39"> <block pos:line="191" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="192" pos:column="17">revs<pos:position pos:line="192" pos:column="21"/></name><operator pos:line="192" pos:column="21">-&gt;<pos:position pos:line="192" pos:column="26"/></operator><name pos:line="192" pos:column="23">ignore_merges<pos:position pos:line="192" pos:column="36"/></name></name> <operator pos:line="192" pos:column="37">=<pos:position pos:line="192" pos:column="38"/></operator> <literal type="number" pos:line="192" pos:column="39">0<pos:position pos:line="192" pos:column="40"/></literal></expr>;<pos:position pos:line="192" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="193" pos:column="10"/></block></then></if></elseif> <elseif pos:line="193" pos:column="11">else <if pos:line="193" pos:column="16">if <condition pos:line="193" pos:column="19">(<expr><operator pos:line="193" pos:column="20">!<pos:position pos:line="193" pos:column="21"/></operator><call><name pos:line="193" pos:column="21">strcmp<pos:position pos:line="193" pos:column="27"/></name><argument_list pos:line="193" pos:column="27">(<argument><expr><name pos:line="193" pos:column="28">arg<pos:position pos:line="193" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="33">"-c"<pos:position pos:line="193" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="193" pos:column="39"/></condition><then pos:line="193" pos:column="39"> <block pos:line="193" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="194" pos:column="17">revs<pos:position pos:line="194" pos:column="21"/></name><operator pos:line="194" pos:column="21">-&gt;<pos:position pos:line="194" pos:column="26"/></operator><name pos:line="194" pos:column="23">diff<pos:position pos:line="194" pos:column="27"/></name></name> <operator pos:line="194" pos:column="28">=<pos:position pos:line="194" pos:column="29"/></operator> <literal type="number" pos:line="194" pos:column="30">1<pos:position pos:line="194" pos:column="31"/></literal></expr>;<pos:position pos:line="194" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="195" pos:column="17">revs<pos:position pos:line="195" pos:column="21"/></name><operator pos:line="195" pos:column="21">-&gt;<pos:position pos:line="195" pos:column="26"/></operator><name pos:line="195" pos:column="23">dense_combined_merges<pos:position pos:line="195" pos:column="44"/></name></name> <operator pos:line="195" pos:column="45">=<pos:position pos:line="195" pos:column="46"/></operator> <literal type="number" pos:line="195" pos:column="47">0<pos:position pos:line="195" pos:column="48"/></literal></expr>;<pos:position pos:line="195" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="196" pos:column="17">revs<pos:position pos:line="196" pos:column="21"/></name><operator pos:line="196" pos:column="21">-&gt;<pos:position pos:line="196" pos:column="26"/></operator><name pos:line="196" pos:column="23">combine_merges<pos:position pos:line="196" pos:column="37"/></name></name> <operator pos:line="196" pos:column="38">=<pos:position pos:line="196" pos:column="39"/></operator> <literal type="number" pos:line="196" pos:column="40">1<pos:position pos:line="196" pos:column="41"/></literal></expr>;<pos:position pos:line="196" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="197" pos:column="10"/></block></then></if></elseif> <elseif pos:line="197" pos:column="11">else <if pos:line="197" pos:column="16">if <condition pos:line="197" pos:column="19">(<expr><operator pos:line="197" pos:column="20">!<pos:position pos:line="197" pos:column="21"/></operator><call><name pos:line="197" pos:column="21">strcmp<pos:position pos:line="197" pos:column="27"/></name><argument_list pos:line="197" pos:column="27">(<argument><expr><name pos:line="197" pos:column="28">arg<pos:position pos:line="197" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="33">"--cc"<pos:position pos:line="197" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="41"/></condition><then pos:line="197" pos:column="41"> <block pos:line="197" pos:column="42">{
		<expr_stmt><expr><name><name pos:line="198" pos:column="17">revs<pos:position pos:line="198" pos:column="21"/></name><operator pos:line="198" pos:column="21">-&gt;<pos:position pos:line="198" pos:column="26"/></operator><name pos:line="198" pos:column="23">diff<pos:position pos:line="198" pos:column="27"/></name></name> <operator pos:line="198" pos:column="28">=<pos:position pos:line="198" pos:column="29"/></operator> <literal type="number" pos:line="198" pos:column="30">1<pos:position pos:line="198" pos:column="31"/></literal></expr>;<pos:position pos:line="198" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="199" pos:column="17">revs<pos:position pos:line="199" pos:column="21"/></name><operator pos:line="199" pos:column="21">-&gt;<pos:position pos:line="199" pos:column="26"/></operator><name pos:line="199" pos:column="23">dense_combined_merges<pos:position pos:line="199" pos:column="44"/></name></name> <operator pos:line="199" pos:column="45">=<pos:position pos:line="199" pos:column="46"/></operator> <literal type="number" pos:line="199" pos:column="47">1<pos:position pos:line="199" pos:column="48"/></literal></expr>;<pos:position pos:line="199" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="200" pos:column="17">revs<pos:position pos:line="200" pos:column="21"/></name><operator pos:line="200" pos:column="21">-&gt;<pos:position pos:line="200" pos:column="26"/></operator><name pos:line="200" pos:column="23">combine_merges<pos:position pos:line="200" pos:column="37"/></name></name> <operator pos:line="200" pos:column="38">=<pos:position pos:line="200" pos:column="39"/></operator> <literal type="number" pos:line="200" pos:column="40">1<pos:position pos:line="200" pos:column="41"/></literal></expr>;<pos:position pos:line="200" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="201" pos:column="10"/></block></then></if></elseif> <elseif pos:line="201" pos:column="11">else <if pos:line="201" pos:column="16">if <condition pos:line="201" pos:column="19">(<expr><operator pos:line="201" pos:column="20">!<pos:position pos:line="201" pos:column="21"/></operator><call><name pos:line="201" pos:column="21">strcmp<pos:position pos:line="201" pos:column="27"/></name><argument_list pos:line="201" pos:column="27">(<argument><expr><name pos:line="201" pos:column="28">arg<pos:position pos:line="201" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="33">"-v"<pos:position pos:line="201" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="39"/></condition><then pos:line="201" pos:column="39"> <block pos:line="201" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="202" pos:column="17">revs<pos:position pos:line="202" pos:column="21"/></name><operator pos:line="202" pos:column="21">-&gt;<pos:position pos:line="202" pos:column="26"/></operator><name pos:line="202" pos:column="23">verbose_header<pos:position pos:line="202" pos:column="37"/></name></name> <operator pos:line="202" pos:column="38">=<pos:position pos:line="202" pos:column="39"/></operator> <literal type="number" pos:line="202" pos:column="40">1<pos:position pos:line="202" pos:column="41"/></literal></expr>;<pos:position pos:line="202" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="203" pos:column="10"/></block></then></if></elseif> <elseif pos:line="203" pos:column="11">else <if pos:line="203" pos:column="16">if <condition pos:line="203" pos:column="19">(<expr><operator pos:line="203" pos:column="20">!<pos:position pos:line="203" pos:column="21"/></operator><call><name pos:line="203" pos:column="21">strcmp<pos:position pos:line="203" pos:column="27"/></name><argument_list pos:line="203" pos:column="27">(<argument><expr><name pos:line="203" pos:column="28">arg<pos:position pos:line="203" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="33">"--pretty"<pos:position pos:line="203" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="203" pos:column="45"/></condition><then pos:line="203" pos:column="45"> <block pos:line="203" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="204" pos:column="17">revs<pos:position pos:line="204" pos:column="21"/></name><operator pos:line="204" pos:column="21">-&gt;<pos:position pos:line="204" pos:column="26"/></operator><name pos:line="204" pos:column="23">verbose_header<pos:position pos:line="204" pos:column="37"/></name></name> <operator pos:line="204" pos:column="38">=<pos:position pos:line="204" pos:column="39"/></operator> <literal type="number" pos:line="204" pos:column="40">1<pos:position pos:line="204" pos:column="41"/></literal></expr>;<pos:position pos:line="204" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="205" pos:column="17">revs<pos:position pos:line="205" pos:column="21"/></name><operator pos:line="205" pos:column="21">-&gt;<pos:position pos:line="205" pos:column="26"/></operator><name pos:line="205" pos:column="23">pretty_given<pos:position pos:line="205" pos:column="35"/></name></name> <operator pos:line="205" pos:column="36">=<pos:position pos:line="205" pos:column="37"/></operator> <literal type="number" pos:line="205" pos:column="38">1<pos:position pos:line="205" pos:column="39"/></literal></expr>;<pos:position pos:line="205" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="206" pos:column="17">get_commit_format<pos:position pos:line="206" pos:column="34"/></name><argument_list pos:line="206" pos:column="34">(<argument><expr><name pos:line="206" pos:column="35">arg<pos:position pos:line="206" pos:column="38"/></name><operator pos:line="206" pos:column="38">+<pos:position pos:line="206" pos:column="39"/></operator><literal type="number" pos:line="206" pos:column="39">8<pos:position pos:line="206" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="42">revs<pos:position pos:line="206" pos:column="46"/></name></expr></argument>)<pos:position pos:line="206" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="207" pos:column="10"/></block></then></if></elseif> <elseif pos:line="207" pos:column="11">else <if pos:line="207" pos:column="16">if <condition pos:line="207" pos:column="19">(<expr><call><name pos:line="207" pos:column="20">starts_with<pos:position pos:line="207" pos:column="31"/></name><argument_list pos:line="207" pos:column="31">(<argument><expr><name pos:line="207" pos:column="32">arg<pos:position pos:line="207" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="37">"--pretty="<pos:position pos:line="207" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="49"/></argument_list></call> <operator pos:line="207" pos:column="50">||<pos:position pos:line="207" pos:column="52"/></operator> <call><name pos:line="207" pos:column="53">starts_with<pos:position pos:line="207" pos:column="64"/></name><argument_list pos:line="207" pos:column="64">(<argument><expr><name pos:line="207" pos:column="65">arg<pos:position pos:line="207" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="70">"--format="<pos:position pos:line="207" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="207" pos:column="83"/></condition><then pos:line="207" pos:column="83"> <block pos:line="207" pos:column="84">{
		<comment type="block" pos:line="208" pos:column="17">/*
		 * Detached form ("--pretty X" as opposed to "--pretty=X")
		 * not allowed, since the argument is optional.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="212" pos:column="17">revs<pos:position pos:line="212" pos:column="21"/></name><operator pos:line="212" pos:column="21">-&gt;<pos:position pos:line="212" pos:column="26"/></operator><name pos:line="212" pos:column="23">verbose_header<pos:position pos:line="212" pos:column="37"/></name></name> <operator pos:line="212" pos:column="38">=<pos:position pos:line="212" pos:column="39"/></operator> <literal type="number" pos:line="212" pos:column="40">1<pos:position pos:line="212" pos:column="41"/></literal></expr>;<pos:position pos:line="212" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="213" pos:column="17">revs<pos:position pos:line="213" pos:column="21"/></name><operator pos:line="213" pos:column="21">-&gt;<pos:position pos:line="213" pos:column="26"/></operator><name pos:line="213" pos:column="23">pretty_given<pos:position pos:line="213" pos:column="35"/></name></name> <operator pos:line="213" pos:column="36">=<pos:position pos:line="213" pos:column="37"/></operator> <literal type="number" pos:line="213" pos:column="38">1<pos:position pos:line="213" pos:column="39"/></literal></expr>;<pos:position pos:line="213" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="214" pos:column="17">get_commit_format<pos:position pos:line="214" pos:column="34"/></name><argument_list pos:line="214" pos:column="34">(<argument><expr><name pos:line="214" pos:column="35">arg<pos:position pos:line="214" pos:column="38"/></name><operator pos:line="214" pos:column="38">+<pos:position pos:line="214" pos:column="39"/></operator><literal type="number" pos:line="214" pos:column="39">9<pos:position pos:line="214" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="42">revs<pos:position pos:line="214" pos:column="46"/></name></expr></argument>)<pos:position pos:line="214" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="215" pos:column="10"/></block></then></if></elseif> <elseif pos:line="215" pos:column="11">else <if pos:line="215" pos:column="16">if <condition pos:line="215" pos:column="19">(<expr><operator pos:line="215" pos:column="20">!<pos:position pos:line="215" pos:column="21"/></operator><call><name pos:line="215" pos:column="21">strcmp<pos:position pos:line="215" pos:column="27"/></name><argument_list pos:line="215" pos:column="27">(<argument><expr><name pos:line="215" pos:column="28">arg<pos:position pos:line="215" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="33">"--show-notes"<pos:position pos:line="215" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="48"/></argument_list></call> <operator pos:line="215" pos:column="49">||<pos:position pos:line="215" pos:column="51"/></operator> <operator pos:line="215" pos:column="52">!<pos:position pos:line="215" pos:column="53"/></operator><call><name pos:line="215" pos:column="53">strcmp<pos:position pos:line="215" pos:column="59"/></name><argument_list pos:line="215" pos:column="59">(<argument><expr><name pos:line="215" pos:column="60">arg<pos:position pos:line="215" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="65">"--notes"<pos:position pos:line="215" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="215" pos:column="76"/></condition><then pos:line="215" pos:column="76"> <block pos:line="215" pos:column="77">{
		<expr_stmt><expr><name><name pos:line="216" pos:column="17">revs<pos:position pos:line="216" pos:column="21"/></name><operator pos:line="216" pos:column="21">-&gt;<pos:position pos:line="216" pos:column="26"/></operator><name pos:line="216" pos:column="23">show_notes<pos:position pos:line="216" pos:column="33"/></name></name> <operator pos:line="216" pos:column="34">=<pos:position pos:line="216" pos:column="35"/></operator> <literal type="number" pos:line="216" pos:column="36">1<pos:position pos:line="216" pos:column="37"/></literal></expr>;<pos:position pos:line="216" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="217" pos:column="17">revs<pos:position pos:line="217" pos:column="21"/></name><operator pos:line="217" pos:column="21">-&gt;<pos:position pos:line="217" pos:column="26"/></operator><name pos:line="217" pos:column="23">show_notes_given<pos:position pos:line="217" pos:column="39"/></name></name> <operator pos:line="217" pos:column="40">=<pos:position pos:line="217" pos:column="41"/></operator> <literal type="number" pos:line="217" pos:column="42">1<pos:position pos:line="217" pos:column="43"/></literal></expr>;<pos:position pos:line="217" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="218" pos:column="17">revs<pos:position pos:line="218" pos:column="21"/></name><operator pos:line="218" pos:column="21">-&gt;<pos:position pos:line="218" pos:column="26"/></operator><name pos:line="218" pos:column="23">notes_opt<pos:position pos:line="218" pos:column="32"/></name><operator pos:line="218" pos:column="32">.<pos:position pos:line="218" pos:column="33"/></operator><name pos:line="218" pos:column="33">use_default_notes<pos:position pos:line="218" pos:column="50"/></name></name> <operator pos:line="218" pos:column="51">=<pos:position pos:line="218" pos:column="52"/></operator> <literal type="number" pos:line="218" pos:column="53">1<pos:position pos:line="218" pos:column="54"/></literal></expr>;<pos:position pos:line="218" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="219" pos:column="10"/></block></then></if></elseif> <elseif pos:line="219" pos:column="11">else <if pos:line="219" pos:column="16">if <condition pos:line="219" pos:column="19">(<expr><operator pos:line="219" pos:column="20">!<pos:position pos:line="219" pos:column="21"/></operator><call><name pos:line="219" pos:column="21">strcmp<pos:position pos:line="219" pos:column="27"/></name><argument_list pos:line="219" pos:column="27">(<argument><expr><name pos:line="219" pos:column="28">arg<pos:position pos:line="219" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="33">"--show-signature"<pos:position pos:line="219" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="219" pos:column="53"/></condition><then pos:line="219" pos:column="53"> <block pos:line="219" pos:column="54">{
		<expr_stmt><expr><name><name pos:line="220" pos:column="17">revs<pos:position pos:line="220" pos:column="21"/></name><operator pos:line="220" pos:column="21">-&gt;<pos:position pos:line="220" pos:column="26"/></operator><name pos:line="220" pos:column="23">show_signature<pos:position pos:line="220" pos:column="37"/></name></name> <operator pos:line="220" pos:column="38">=<pos:position pos:line="220" pos:column="39"/></operator> <literal type="number" pos:line="220" pos:column="40">1<pos:position pos:line="220" pos:column="41"/></literal></expr>;<pos:position pos:line="220" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="221" pos:column="10"/></block></then></if></elseif> <elseif pos:line="221" pos:column="11">else <if pos:line="221" pos:column="16">if <condition pos:line="221" pos:column="19">(<expr><operator pos:line="221" pos:column="20">!<pos:position pos:line="221" pos:column="21"/></operator><call><name pos:line="221" pos:column="21">strcmp<pos:position pos:line="221" pos:column="27"/></name><argument_list pos:line="221" pos:column="27">(<argument><expr><name pos:line="221" pos:column="28">arg<pos:position pos:line="221" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="33">"--show-linear-break"<pos:position pos:line="221" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="55"/></argument_list></call> <operator pos:line="221" pos:column="56">||<pos:position pos:line="221" pos:column="58"/></operator>
		   <call><name pos:line="222" pos:column="20">starts_with<pos:position pos:line="222" pos:column="31"/></name><argument_list pos:line="222" pos:column="31">(<argument><expr><name pos:line="222" pos:column="32">arg<pos:position pos:line="222" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="37">"--show-linear-break="<pos:position pos:line="222" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="222" pos:column="61"/></condition><then pos:line="222" pos:column="61"> <block pos:line="222" pos:column="62">{
		<if pos:line="223" pos:column="17">if <condition pos:line="223" pos:column="20">(<expr><call><name pos:line="223" pos:column="21">starts_with<pos:position pos:line="223" pos:column="32"/></name><argument_list pos:line="223" pos:column="32">(<argument><expr><name pos:line="223" pos:column="33">arg<pos:position pos:line="223" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="223" pos:column="38">"--show-linear-break="<pos:position pos:line="223" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="223" pos:column="62"/></condition><then pos:line="223" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="224" pos:column="25">revs<pos:position pos:line="224" pos:column="29"/></name><operator pos:line="224" pos:column="29">-&gt;<pos:position pos:line="224" pos:column="34"/></operator><name pos:line="224" pos:column="31">break_bar<pos:position pos:line="224" pos:column="40"/></name></name> <operator pos:line="224" pos:column="41">=<pos:position pos:line="224" pos:column="42"/></operator> <call><name pos:line="224" pos:column="43">xstrdup<pos:position pos:line="224" pos:column="50"/></name><argument_list pos:line="224" pos:column="50">(<argument><expr><name pos:line="224" pos:column="51">arg<pos:position pos:line="224" pos:column="54"/></name> <operator pos:line="224" pos:column="55">+<pos:position pos:line="224" pos:column="56"/></operator> <literal type="number" pos:line="224" pos:column="57">20<pos:position pos:line="224" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="224" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="61"/></expr_stmt></block></then>
		<else pos:line="225" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="226" pos:column="25">revs<pos:position pos:line="226" pos:column="29"/></name><operator pos:line="226" pos:column="29">-&gt;<pos:position pos:line="226" pos:column="34"/></operator><name pos:line="226" pos:column="31">break_bar<pos:position pos:line="226" pos:column="40"/></name></name> <operator pos:line="226" pos:column="41">=<pos:position pos:line="226" pos:column="42"/></operator> <literal type="string" pos:line="226" pos:column="43">"                    .........."<pos:position pos:line="226" pos:column="75"/></literal></expr>;<pos:position pos:line="226" pos:column="76"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name><name pos:line="227" pos:column="17">revs<pos:position pos:line="227" pos:column="21"/></name><operator pos:line="227" pos:column="21">-&gt;<pos:position pos:line="227" pos:column="26"/></operator><name pos:line="227" pos:column="23">track_linear<pos:position pos:line="227" pos:column="35"/></name></name> <operator pos:line="227" pos:column="36">=<pos:position pos:line="227" pos:column="37"/></operator> <literal type="number" pos:line="227" pos:column="38">1<pos:position pos:line="227" pos:column="39"/></literal></expr>;<pos:position pos:line="227" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="228" pos:column="17">revs<pos:position pos:line="228" pos:column="21"/></name><operator pos:line="228" pos:column="21">-&gt;<pos:position pos:line="228" pos:column="26"/></operator><name pos:line="228" pos:column="23">track_first_time<pos:position pos:line="228" pos:column="39"/></name></name> <operator pos:line="228" pos:column="40">=<pos:position pos:line="228" pos:column="41"/></operator> <literal type="number" pos:line="228" pos:column="42">1<pos:position pos:line="228" pos:column="43"/></literal></expr>;<pos:position pos:line="228" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="229" pos:column="10"/></block></then></if></elseif> <elseif pos:line="229" pos:column="11">else <if pos:line="229" pos:column="16">if <condition pos:line="229" pos:column="19">(<expr><call><name pos:line="229" pos:column="20">starts_with<pos:position pos:line="229" pos:column="31"/></name><argument_list pos:line="229" pos:column="31">(<argument><expr><name pos:line="229" pos:column="32">arg<pos:position pos:line="229" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="37">"--show-notes="<pos:position pos:line="229" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="53"/></argument_list></call> <operator pos:line="229" pos:column="54">||<pos:position pos:line="229" pos:column="56"/></operator>
		   <call><name pos:line="230" pos:column="20">starts_with<pos:position pos:line="230" pos:column="31"/></name><argument_list pos:line="230" pos:column="31">(<argument><expr><name pos:line="230" pos:column="32">arg<pos:position pos:line="230" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="37">"--notes="<pos:position pos:line="230" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="230" pos:column="49"/></condition><then pos:line="230" pos:column="49"> <block pos:line="230" pos:column="50">{
		<decl_stmt><decl><type><name><name pos:line="231" pos:column="17">struct<pos:position pos:line="231" pos:column="23"/></name> <name pos:line="231" pos:column="24">strbuf<pos:position pos:line="231" pos:column="30"/></name></name></type> <name pos:line="231" pos:column="31">buf<pos:position pos:line="231" pos:column="34"/></name> <init pos:line="231" pos:column="35">= <expr><name pos:line="231" pos:column="37">STRBUF_INIT<pos:position pos:line="231" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="231" pos:column="49"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="232" pos:column="17">revs<pos:position pos:line="232" pos:column="21"/></name><operator pos:line="232" pos:column="21">-&gt;<pos:position pos:line="232" pos:column="26"/></operator><name pos:line="232" pos:column="23">show_notes<pos:position pos:line="232" pos:column="33"/></name></name> <operator pos:line="232" pos:column="34">=<pos:position pos:line="232" pos:column="35"/></operator> <literal type="number" pos:line="232" pos:column="36">1<pos:position pos:line="232" pos:column="37"/></literal></expr>;<pos:position pos:line="232" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="233" pos:column="17">revs<pos:position pos:line="233" pos:column="21"/></name><operator pos:line="233" pos:column="21">-&gt;<pos:position pos:line="233" pos:column="26"/></operator><name pos:line="233" pos:column="23">show_notes_given<pos:position pos:line="233" pos:column="39"/></name></name> <operator pos:line="233" pos:column="40">=<pos:position pos:line="233" pos:column="41"/></operator> <literal type="number" pos:line="233" pos:column="42">1<pos:position pos:line="233" pos:column="43"/></literal></expr>;<pos:position pos:line="233" pos:column="44"/></expr_stmt>
		<if pos:line="234" pos:column="17">if <condition pos:line="234" pos:column="20">(<expr><call><name pos:line="234" pos:column="21">starts_with<pos:position pos:line="234" pos:column="32"/></name><argument_list pos:line="234" pos:column="32">(<argument><expr><name pos:line="234" pos:column="33">arg<pos:position pos:line="234" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="38">"--show-notes"<pos:position pos:line="234" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="234" pos:column="54"/></condition><then pos:line="234" pos:column="54"> <block pos:line="234" pos:column="55">{
			<if pos:line="235" pos:column="25">if <condition pos:line="235" pos:column="28">(<expr><name><name pos:line="235" pos:column="29">revs<pos:position pos:line="235" pos:column="33"/></name><operator pos:line="235" pos:column="33">-&gt;<pos:position pos:line="235" pos:column="38"/></operator><name pos:line="235" pos:column="35">notes_opt<pos:position pos:line="235" pos:column="44"/></name><operator pos:line="235" pos:column="44">.<pos:position pos:line="235" pos:column="45"/></operator><name pos:line="235" pos:column="45">use_default_notes<pos:position pos:line="235" pos:column="62"/></name></name> <operator pos:line="235" pos:column="63">&lt;<pos:position pos:line="235" pos:column="67"/></operator> <literal type="number" pos:line="235" pos:column="65">0<pos:position pos:line="235" pos:column="66"/></literal></expr>)<pos:position pos:line="235" pos:column="67"/></condition><then pos:line="235" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="236" pos:column="33">revs<pos:position pos:line="236" pos:column="37"/></name><operator pos:line="236" pos:column="37">-&gt;<pos:position pos:line="236" pos:column="42"/></operator><name pos:line="236" pos:column="39">notes_opt<pos:position pos:line="236" pos:column="48"/></name><operator pos:line="236" pos:column="48">.<pos:position pos:line="236" pos:column="49"/></operator><name pos:line="236" pos:column="49">use_default_notes<pos:position pos:line="236" pos:column="66"/></name></name> <operator pos:line="236" pos:column="67">=<pos:position pos:line="236" pos:column="68"/></operator> <literal type="number" pos:line="236" pos:column="69">1<pos:position pos:line="236" pos:column="70"/></literal></expr>;<pos:position pos:line="236" pos:column="71"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="237" pos:column="25">strbuf_addstr<pos:position pos:line="237" pos:column="38"/></name><argument_list pos:line="237" pos:column="38">(<argument><expr><operator pos:line="237" pos:column="39">&amp;<pos:position pos:line="237" pos:column="44"/></operator><name pos:line="237" pos:column="40">buf<pos:position pos:line="237" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="45">arg<pos:position pos:line="237" pos:column="48"/></name><operator pos:line="237" pos:column="48">+<pos:position pos:line="237" pos:column="49"/></operator><literal type="number" pos:line="237" pos:column="49">13<pos:position pos:line="237" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="238" pos:column="18"/></block></then>
		<else pos:line="239" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="240" pos:column="25">strbuf_addstr<pos:position pos:line="240" pos:column="38"/></name><argument_list pos:line="240" pos:column="38">(<argument><expr><operator pos:line="240" pos:column="39">&amp;<pos:position pos:line="240" pos:column="44"/></operator><name pos:line="240" pos:column="40">buf<pos:position pos:line="240" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="45">arg<pos:position pos:line="240" pos:column="48"/></name><operator pos:line="240" pos:column="48">+<pos:position pos:line="240" pos:column="49"/></operator><literal type="number" pos:line="240" pos:column="49">8<pos:position pos:line="240" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="52"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="241" pos:column="17">expand_notes_ref<pos:position pos:line="241" pos:column="33"/></name><argument_list pos:line="241" pos:column="33">(<argument><expr><operator pos:line="241" pos:column="34">&amp;<pos:position pos:line="241" pos:column="39"/></operator><name pos:line="241" pos:column="35">buf<pos:position pos:line="241" pos:column="38"/></name></expr></argument>)<pos:position pos:line="241" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="242" pos:column="17">string_list_append<pos:position pos:line="242" pos:column="35"/></name><argument_list pos:line="242" pos:column="35">(<argument><expr><operator pos:line="242" pos:column="36">&amp;<pos:position pos:line="242" pos:column="41"/></operator><name><name pos:line="242" pos:column="37">revs<pos:position pos:line="242" pos:column="41"/></name><operator pos:line="242" pos:column="41">-&gt;<pos:position pos:line="242" pos:column="46"/></operator><name pos:line="242" pos:column="43">notes_opt<pos:position pos:line="242" pos:column="52"/></name><operator pos:line="242" pos:column="52">.<pos:position pos:line="242" pos:column="53"/></operator><name pos:line="242" pos:column="53">extra_notes_refs<pos:position pos:line="242" pos:column="69"/></name></name></expr></argument>,
				   <argument><expr><call><name pos:line="243" pos:column="36">strbuf_detach<pos:position pos:line="243" pos:column="49"/></name><argument_list pos:line="243" pos:column="49">(<argument><expr><operator pos:line="243" pos:column="50">&amp;<pos:position pos:line="243" pos:column="55"/></operator><name pos:line="243" pos:column="51">buf<pos:position pos:line="243" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="56">NULL<pos:position pos:line="243" pos:column="60"/></name></expr></argument>)<pos:position pos:line="243" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="243" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="244" pos:column="10"/></block></then></if></elseif> <elseif pos:line="244" pos:column="11">else <if pos:line="244" pos:column="16">if <condition pos:line="244" pos:column="19">(<expr><operator pos:line="244" pos:column="20">!<pos:position pos:line="244" pos:column="21"/></operator><call><name pos:line="244" pos:column="21">strcmp<pos:position pos:line="244" pos:column="27"/></name><argument_list pos:line="244" pos:column="27">(<argument><expr><name pos:line="244" pos:column="28">arg<pos:position pos:line="244" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="244" pos:column="33">"--no-notes"<pos:position pos:line="244" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="244" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="244" pos:column="47"/></condition><then pos:line="244" pos:column="47"> <block pos:line="244" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="245" pos:column="17">revs<pos:position pos:line="245" pos:column="21"/></name><operator pos:line="245" pos:column="21">-&gt;<pos:position pos:line="245" pos:column="26"/></operator><name pos:line="245" pos:column="23">show_notes<pos:position pos:line="245" pos:column="33"/></name></name> <operator pos:line="245" pos:column="34">=<pos:position pos:line="245" pos:column="35"/></operator> <literal type="number" pos:line="245" pos:column="36">0<pos:position pos:line="245" pos:column="37"/></literal></expr>;<pos:position pos:line="245" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="246" pos:column="17">revs<pos:position pos:line="246" pos:column="21"/></name><operator pos:line="246" pos:column="21">-&gt;<pos:position pos:line="246" pos:column="26"/></operator><name pos:line="246" pos:column="23">show_notes_given<pos:position pos:line="246" pos:column="39"/></name></name> <operator pos:line="246" pos:column="40">=<pos:position pos:line="246" pos:column="41"/></operator> <literal type="number" pos:line="246" pos:column="42">1<pos:position pos:line="246" pos:column="43"/></literal></expr>;<pos:position pos:line="246" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="247" pos:column="17">revs<pos:position pos:line="247" pos:column="21"/></name><operator pos:line="247" pos:column="21">-&gt;<pos:position pos:line="247" pos:column="26"/></operator><name pos:line="247" pos:column="23">notes_opt<pos:position pos:line="247" pos:column="32"/></name><operator pos:line="247" pos:column="32">.<pos:position pos:line="247" pos:column="33"/></operator><name pos:line="247" pos:column="33">use_default_notes<pos:position pos:line="247" pos:column="50"/></name></name> <operator pos:line="247" pos:column="51">=<pos:position pos:line="247" pos:column="52"/></operator> <operator pos:line="247" pos:column="53">-<pos:position pos:line="247" pos:column="54"/></operator><literal type="number" pos:line="247" pos:column="54">1<pos:position pos:line="247" pos:column="55"/></literal></expr>;<pos:position pos:line="247" pos:column="56"/></expr_stmt>
		<comment type="block" pos:line="248" pos:column="17">/* we have been strdup'ing ourselves, so trick
		 * string_list into free()ing strings */</comment>
		<expr_stmt><expr><name><name pos:line="250" pos:column="17">revs<pos:position pos:line="250" pos:column="21"/></name><operator pos:line="250" pos:column="21">-&gt;<pos:position pos:line="250" pos:column="26"/></operator><name pos:line="250" pos:column="23">notes_opt<pos:position pos:line="250" pos:column="32"/></name><operator pos:line="250" pos:column="32">.<pos:position pos:line="250" pos:column="33"/></operator><name pos:line="250" pos:column="33">extra_notes_refs<pos:position pos:line="250" pos:column="49"/></name><operator pos:line="250" pos:column="49">.<pos:position pos:line="250" pos:column="50"/></operator><name pos:line="250" pos:column="50">strdup_strings<pos:position pos:line="250" pos:column="64"/></name></name> <operator pos:line="250" pos:column="65">=<pos:position pos:line="250" pos:column="66"/></operator> <literal type="number" pos:line="250" pos:column="67">1<pos:position pos:line="250" pos:column="68"/></literal></expr>;<pos:position pos:line="250" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="251" pos:column="17">string_list_clear<pos:position pos:line="251" pos:column="34"/></name><argument_list pos:line="251" pos:column="34">(<argument><expr><operator pos:line="251" pos:column="35">&amp;<pos:position pos:line="251" pos:column="40"/></operator><name><name pos:line="251" pos:column="36">revs<pos:position pos:line="251" pos:column="40"/></name><operator pos:line="251" pos:column="40">-&gt;<pos:position pos:line="251" pos:column="45"/></operator><name pos:line="251" pos:column="42">notes_opt<pos:position pos:line="251" pos:column="51"/></name><operator pos:line="251" pos:column="51">.<pos:position pos:line="251" pos:column="52"/></operator><name pos:line="251" pos:column="52">extra_notes_refs<pos:position pos:line="251" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="251" pos:column="70">0<pos:position pos:line="251" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="252" pos:column="17">revs<pos:position pos:line="252" pos:column="21"/></name><operator pos:line="252" pos:column="21">-&gt;<pos:position pos:line="252" pos:column="26"/></operator><name pos:line="252" pos:column="23">notes_opt<pos:position pos:line="252" pos:column="32"/></name><operator pos:line="252" pos:column="32">.<pos:position pos:line="252" pos:column="33"/></operator><name pos:line="252" pos:column="33">extra_notes_refs<pos:position pos:line="252" pos:column="49"/></name><operator pos:line="252" pos:column="49">.<pos:position pos:line="252" pos:column="50"/></operator><name pos:line="252" pos:column="50">strdup_strings<pos:position pos:line="252" pos:column="64"/></name></name> <operator pos:line="252" pos:column="65">=<pos:position pos:line="252" pos:column="66"/></operator> <literal type="number" pos:line="252" pos:column="67">0<pos:position pos:line="252" pos:column="68"/></literal></expr>;<pos:position pos:line="252" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="253" pos:column="10"/></block></then></if></elseif> <elseif pos:line="253" pos:column="11">else <if pos:line="253" pos:column="16">if <condition pos:line="253" pos:column="19">(<expr><operator pos:line="253" pos:column="20">!<pos:position pos:line="253" pos:column="21"/></operator><call><name pos:line="253" pos:column="21">strcmp<pos:position pos:line="253" pos:column="27"/></name><argument_list pos:line="253" pos:column="27">(<argument><expr><name pos:line="253" pos:column="28">arg<pos:position pos:line="253" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="33">"--standard-notes"<pos:position pos:line="253" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="253" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="253" pos:column="53"/></condition><then pos:line="253" pos:column="53"> <block pos:line="253" pos:column="54">{
		<expr_stmt><expr><name><name pos:line="254" pos:column="17">revs<pos:position pos:line="254" pos:column="21"/></name><operator pos:line="254" pos:column="21">-&gt;<pos:position pos:line="254" pos:column="26"/></operator><name pos:line="254" pos:column="23">show_notes_given<pos:position pos:line="254" pos:column="39"/></name></name> <operator pos:line="254" pos:column="40">=<pos:position pos:line="254" pos:column="41"/></operator> <literal type="number" pos:line="254" pos:column="42">1<pos:position pos:line="254" pos:column="43"/></literal></expr>;<pos:position pos:line="254" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="255" pos:column="17">revs<pos:position pos:line="255" pos:column="21"/></name><operator pos:line="255" pos:column="21">-&gt;<pos:position pos:line="255" pos:column="26"/></operator><name pos:line="255" pos:column="23">notes_opt<pos:position pos:line="255" pos:column="32"/></name><operator pos:line="255" pos:column="32">.<pos:position pos:line="255" pos:column="33"/></operator><name pos:line="255" pos:column="33">use_default_notes<pos:position pos:line="255" pos:column="50"/></name></name> <operator pos:line="255" pos:column="51">=<pos:position pos:line="255" pos:column="52"/></operator> <literal type="number" pos:line="255" pos:column="53">1<pos:position pos:line="255" pos:column="54"/></literal></expr>;<pos:position pos:line="255" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="256" pos:column="10"/></block></then></if></elseif> <elseif pos:line="256" pos:column="11">else <if pos:line="256" pos:column="16">if <condition pos:line="256" pos:column="19">(<expr><operator pos:line="256" pos:column="20">!<pos:position pos:line="256" pos:column="21"/></operator><call><name pos:line="256" pos:column="21">strcmp<pos:position pos:line="256" pos:column="27"/></name><argument_list pos:line="256" pos:column="27">(<argument><expr><name pos:line="256" pos:column="28">arg<pos:position pos:line="256" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="33">"--no-standard-notes"<pos:position pos:line="256" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="256" pos:column="56"/></condition><then pos:line="256" pos:column="56"> <block pos:line="256" pos:column="57">{
		<expr_stmt><expr><name><name pos:line="257" pos:column="17">revs<pos:position pos:line="257" pos:column="21"/></name><operator pos:line="257" pos:column="21">-&gt;<pos:position pos:line="257" pos:column="26"/></operator><name pos:line="257" pos:column="23">notes_opt<pos:position pos:line="257" pos:column="32"/></name><operator pos:line="257" pos:column="32">.<pos:position pos:line="257" pos:column="33"/></operator><name pos:line="257" pos:column="33">use_default_notes<pos:position pos:line="257" pos:column="50"/></name></name> <operator pos:line="257" pos:column="51">=<pos:position pos:line="257" pos:column="52"/></operator> <literal type="number" pos:line="257" pos:column="53">0<pos:position pos:line="257" pos:column="54"/></literal></expr>;<pos:position pos:line="257" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="258" pos:column="10"/></block></then></if></elseif> <elseif pos:line="258" pos:column="11">else <if pos:line="258" pos:column="16">if <condition pos:line="258" pos:column="19">(<expr><operator pos:line="258" pos:column="20">!<pos:position pos:line="258" pos:column="21"/></operator><call><name pos:line="258" pos:column="21">strcmp<pos:position pos:line="258" pos:column="27"/></name><argument_list pos:line="258" pos:column="27">(<argument><expr><name pos:line="258" pos:column="28">arg<pos:position pos:line="258" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="33">"--oneline"<pos:position pos:line="258" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="258" pos:column="46"/></condition><then pos:line="258" pos:column="46"> <block pos:line="258" pos:column="47">{
		<expr_stmt><expr><name><name pos:line="259" pos:column="17">revs<pos:position pos:line="259" pos:column="21"/></name><operator pos:line="259" pos:column="21">-&gt;<pos:position pos:line="259" pos:column="26"/></operator><name pos:line="259" pos:column="23">verbose_header<pos:position pos:line="259" pos:column="37"/></name></name> <operator pos:line="259" pos:column="38">=<pos:position pos:line="259" pos:column="39"/></operator> <literal type="number" pos:line="259" pos:column="40">1<pos:position pos:line="259" pos:column="41"/></literal></expr>;<pos:position pos:line="259" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="260" pos:column="17">get_commit_format<pos:position pos:line="260" pos:column="34"/></name><argument_list pos:line="260" pos:column="34">(<argument><expr><literal type="string" pos:line="260" pos:column="35">"oneline"<pos:position pos:line="260" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="260" pos:column="46">revs<pos:position pos:line="260" pos:column="50"/></name></expr></argument>)<pos:position pos:line="260" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="261" pos:column="17">revs<pos:position pos:line="261" pos:column="21"/></name><operator pos:line="261" pos:column="21">-&gt;<pos:position pos:line="261" pos:column="26"/></operator><name pos:line="261" pos:column="23">pretty_given<pos:position pos:line="261" pos:column="35"/></name></name> <operator pos:line="261" pos:column="36">=<pos:position pos:line="261" pos:column="37"/></operator> <literal type="number" pos:line="261" pos:column="38">1<pos:position pos:line="261" pos:column="39"/></literal></expr>;<pos:position pos:line="261" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="262" pos:column="17">revs<pos:position pos:line="262" pos:column="21"/></name><operator pos:line="262" pos:column="21">-&gt;<pos:position pos:line="262" pos:column="26"/></operator><name pos:line="262" pos:column="23">abbrev_commit<pos:position pos:line="262" pos:column="36"/></name></name> <operator pos:line="262" pos:column="37">=<pos:position pos:line="262" pos:column="38"/></operator> <literal type="number" pos:line="262" pos:column="39">1<pos:position pos:line="262" pos:column="40"/></literal></expr>;<pos:position pos:line="262" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="263" pos:column="10"/></block></then></if></elseif> <elseif pos:line="263" pos:column="11">else <if pos:line="263" pos:column="16">if <condition pos:line="263" pos:column="19">(<expr><operator pos:line="263" pos:column="20">!<pos:position pos:line="263" pos:column="21"/></operator><call><name pos:line="263" pos:column="21">strcmp<pos:position pos:line="263" pos:column="27"/></name><argument_list pos:line="263" pos:column="27">(<argument><expr><name pos:line="263" pos:column="28">arg<pos:position pos:line="263" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="33">"--graph"<pos:position pos:line="263" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="263" pos:column="44"/></condition><then pos:line="263" pos:column="44"> <block pos:line="263" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="264" pos:column="17">revs<pos:position pos:line="264" pos:column="21"/></name><operator pos:line="264" pos:column="21">-&gt;<pos:position pos:line="264" pos:column="26"/></operator><name pos:line="264" pos:column="23">topo_order<pos:position pos:line="264" pos:column="33"/></name></name> <operator pos:line="264" pos:column="34">=<pos:position pos:line="264" pos:column="35"/></operator> <literal type="number" pos:line="264" pos:column="36">1<pos:position pos:line="264" pos:column="37"/></literal></expr>;<pos:position pos:line="264" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="265" pos:column="17">revs<pos:position pos:line="265" pos:column="21"/></name><operator pos:line="265" pos:column="21">-&gt;<pos:position pos:line="265" pos:column="26"/></operator><name pos:line="265" pos:column="23">rewrite_parents<pos:position pos:line="265" pos:column="38"/></name></name> <operator pos:line="265" pos:column="39">=<pos:position pos:line="265" pos:column="40"/></operator> <literal type="number" pos:line="265" pos:column="41">1<pos:position pos:line="265" pos:column="42"/></literal></expr>;<pos:position pos:line="265" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="266" pos:column="17">revs<pos:position pos:line="266" pos:column="21"/></name><operator pos:line="266" pos:column="21">-&gt;<pos:position pos:line="266" pos:column="26"/></operator><name pos:line="266" pos:column="23">graph<pos:position pos:line="266" pos:column="28"/></name></name> <operator pos:line="266" pos:column="29">=<pos:position pos:line="266" pos:column="30"/></operator> <call><name pos:line="266" pos:column="31">graph_init<pos:position pos:line="266" pos:column="41"/></name><argument_list pos:line="266" pos:column="41">(<argument><expr><name pos:line="266" pos:column="42">revs<pos:position pos:line="266" pos:column="46"/></name></expr></argument>)<pos:position pos:line="266" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="267" pos:column="10"/></block></then></if></elseif> <elseif pos:line="267" pos:column="11">else <if pos:line="267" pos:column="16">if <condition pos:line="267" pos:column="19">(<expr><operator pos:line="267" pos:column="20">!<pos:position pos:line="267" pos:column="21"/></operator><call><name pos:line="267" pos:column="21">strcmp<pos:position pos:line="267" pos:column="27"/></name><argument_list pos:line="267" pos:column="27">(<argument><expr><name pos:line="267" pos:column="28">arg<pos:position pos:line="267" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="33">"--root"<pos:position pos:line="267" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="267" pos:column="43"/></condition><then pos:line="267" pos:column="43"> <block pos:line="267" pos:column="44">{
		<expr_stmt><expr><name><name pos:line="268" pos:column="17">revs<pos:position pos:line="268" pos:column="21"/></name><operator pos:line="268" pos:column="21">-&gt;<pos:position pos:line="268" pos:column="26"/></operator><name pos:line="268" pos:column="23">show_root_diff<pos:position pos:line="268" pos:column="37"/></name></name> <operator pos:line="268" pos:column="38">=<pos:position pos:line="268" pos:column="39"/></operator> <literal type="number" pos:line="268" pos:column="40">1<pos:position pos:line="268" pos:column="41"/></literal></expr>;<pos:position pos:line="268" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="269" pos:column="10"/></block></then></if></elseif> <elseif pos:line="269" pos:column="11">else <if pos:line="269" pos:column="16">if <condition pos:line="269" pos:column="19">(<expr><operator pos:line="269" pos:column="20">!<pos:position pos:line="269" pos:column="21"/></operator><call><name pos:line="269" pos:column="21">strcmp<pos:position pos:line="269" pos:column="27"/></name><argument_list pos:line="269" pos:column="27">(<argument><expr><name pos:line="269" pos:column="28">arg<pos:position pos:line="269" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="269" pos:column="33">"--no-commit-id"<pos:position pos:line="269" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="269" pos:column="51"/></condition><then pos:line="269" pos:column="51"> <block pos:line="269" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="270" pos:column="17">revs<pos:position pos:line="270" pos:column="21"/></name><operator pos:line="270" pos:column="21">-&gt;<pos:position pos:line="270" pos:column="26"/></operator><name pos:line="270" pos:column="23">no_commit_id<pos:position pos:line="270" pos:column="35"/></name></name> <operator pos:line="270" pos:column="36">=<pos:position pos:line="270" pos:column="37"/></operator> <literal type="number" pos:line="270" pos:column="38">1<pos:position pos:line="270" pos:column="39"/></literal></expr>;<pos:position pos:line="270" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="271" pos:column="10"/></block></then></if></elseif> <elseif pos:line="271" pos:column="11">else <if pos:line="271" pos:column="16">if <condition pos:line="271" pos:column="19">(<expr><operator pos:line="271" pos:column="20">!<pos:position pos:line="271" pos:column="21"/></operator><call><name pos:line="271" pos:column="21">strcmp<pos:position pos:line="271" pos:column="27"/></name><argument_list pos:line="271" pos:column="27">(<argument><expr><name pos:line="271" pos:column="28">arg<pos:position pos:line="271" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="33">"--always"<pos:position pos:line="271" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="271" pos:column="45"/></condition><then pos:line="271" pos:column="45"> <block pos:line="271" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="272" pos:column="17">revs<pos:position pos:line="272" pos:column="21"/></name><operator pos:line="272" pos:column="21">-&gt;<pos:position pos:line="272" pos:column="26"/></operator><name pos:line="272" pos:column="23">always_show_header<pos:position pos:line="272" pos:column="41"/></name></name> <operator pos:line="272" pos:column="42">=<pos:position pos:line="272" pos:column="43"/></operator> <literal type="number" pos:line="272" pos:column="44">1<pos:position pos:line="272" pos:column="45"/></literal></expr>;<pos:position pos:line="272" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="273" pos:column="10"/></block></then></if></elseif> <elseif pos:line="273" pos:column="11">else <if pos:line="273" pos:column="16">if <condition pos:line="273" pos:column="19">(<expr><operator pos:line="273" pos:column="20">!<pos:position pos:line="273" pos:column="21"/></operator><call><name pos:line="273" pos:column="21">strcmp<pos:position pos:line="273" pos:column="27"/></name><argument_list pos:line="273" pos:column="27">(<argument><expr><name pos:line="273" pos:column="28">arg<pos:position pos:line="273" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="33">"--no-abbrev"<pos:position pos:line="273" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="273" pos:column="48"/></condition><then pos:line="273" pos:column="48"> <block pos:line="273" pos:column="49">{
		<expr_stmt><expr><name><name pos:line="274" pos:column="17">revs<pos:position pos:line="274" pos:column="21"/></name><operator pos:line="274" pos:column="21">-&gt;<pos:position pos:line="274" pos:column="26"/></operator><name pos:line="274" pos:column="23">abbrev<pos:position pos:line="274" pos:column="29"/></name></name> <operator pos:line="274" pos:column="30">=<pos:position pos:line="274" pos:column="31"/></operator> <literal type="number" pos:line="274" pos:column="32">0<pos:position pos:line="274" pos:column="33"/></literal></expr>;<pos:position pos:line="274" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="275" pos:column="10"/></block></then></if></elseif> <elseif pos:line="275" pos:column="11">else <if pos:line="275" pos:column="16">if <condition pos:line="275" pos:column="19">(<expr><operator pos:line="275" pos:column="20">!<pos:position pos:line="275" pos:column="21"/></operator><call><name pos:line="275" pos:column="21">strcmp<pos:position pos:line="275" pos:column="27"/></name><argument_list pos:line="275" pos:column="27">(<argument><expr><name pos:line="275" pos:column="28">arg<pos:position pos:line="275" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="275" pos:column="33">"--abbrev"<pos:position pos:line="275" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="275" pos:column="45"/></condition><then pos:line="275" pos:column="45"> <block pos:line="275" pos:column="46">{
		<expr_stmt><expr><name><name pos:line="276" pos:column="17">revs<pos:position pos:line="276" pos:column="21"/></name><operator pos:line="276" pos:column="21">-&gt;<pos:position pos:line="276" pos:column="26"/></operator><name pos:line="276" pos:column="23">abbrev<pos:position pos:line="276" pos:column="29"/></name></name> <operator pos:line="276" pos:column="30">=<pos:position pos:line="276" pos:column="31"/></operator> <name pos:line="276" pos:column="32">DEFAULT_ABBREV<pos:position pos:line="276" pos:column="46"/></name></expr>;<pos:position pos:line="276" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="277" pos:column="10"/></block></then></if></elseif> <elseif pos:line="277" pos:column="11">else <if pos:line="277" pos:column="16">if <condition pos:line="277" pos:column="19">(<expr><call><name pos:line="277" pos:column="20">starts_with<pos:position pos:line="277" pos:column="31"/></name><argument_list pos:line="277" pos:column="31">(<argument><expr><name pos:line="277" pos:column="32">arg<pos:position pos:line="277" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="37">"--abbrev="<pos:position pos:line="277" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="277" pos:column="50"/></condition><then pos:line="277" pos:column="50"> <block pos:line="277" pos:column="51">{
		<expr_stmt><expr><name><name pos:line="278" pos:column="17">revs<pos:position pos:line="278" pos:column="21"/></name><operator pos:line="278" pos:column="21">-&gt;<pos:position pos:line="278" pos:column="26"/></operator><name pos:line="278" pos:column="23">abbrev<pos:position pos:line="278" pos:column="29"/></name></name> <operator pos:line="278" pos:column="30">=<pos:position pos:line="278" pos:column="31"/></operator> <call><name pos:line="278" pos:column="32">strtoul<pos:position pos:line="278" pos:column="39"/></name><argument_list pos:line="278" pos:column="39">(<argument><expr><name pos:line="278" pos:column="40">arg<pos:position pos:line="278" pos:column="43"/></name> <operator pos:line="278" pos:column="44">+<pos:position pos:line="278" pos:column="45"/></operator> <literal type="number" pos:line="278" pos:column="46">9<pos:position pos:line="278" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="278" pos:column="49">NULL<pos:position pos:line="278" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="278" pos:column="55">10<pos:position pos:line="278" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="59"/></expr_stmt>
		<if pos:line="279" pos:column="17">if <condition pos:line="279" pos:column="20">(<expr><name><name pos:line="279" pos:column="21">revs<pos:position pos:line="279" pos:column="25"/></name><operator pos:line="279" pos:column="25">-&gt;<pos:position pos:line="279" pos:column="30"/></operator><name pos:line="279" pos:column="27">abbrev<pos:position pos:line="279" pos:column="33"/></name></name> <operator pos:line="279" pos:column="34">&lt;<pos:position pos:line="279" pos:column="38"/></operator> <name pos:line="279" pos:column="36">MINIMUM_ABBREV<pos:position pos:line="279" pos:column="50"/></name></expr>)<pos:position pos:line="279" pos:column="51"/></condition><then pos:line="279" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="280" pos:column="25">revs<pos:position pos:line="280" pos:column="29"/></name><operator pos:line="280" pos:column="29">-&gt;<pos:position pos:line="280" pos:column="34"/></operator><name pos:line="280" pos:column="31">abbrev<pos:position pos:line="280" pos:column="37"/></name></name> <operator pos:line="280" pos:column="38">=<pos:position pos:line="280" pos:column="39"/></operator> <name pos:line="280" pos:column="40">MINIMUM_ABBREV<pos:position pos:line="280" pos:column="54"/></name></expr>;<pos:position pos:line="280" pos:column="55"/></expr_stmt></block></then>
		<elseif pos:line="281" pos:column="17">else <if pos:line="281" pos:column="22">if <condition pos:line="281" pos:column="25">(<expr><name><name pos:line="281" pos:column="26">revs<pos:position pos:line="281" pos:column="30"/></name><operator pos:line="281" pos:column="30">-&gt;<pos:position pos:line="281" pos:column="35"/></operator><name pos:line="281" pos:column="32">abbrev<pos:position pos:line="281" pos:column="38"/></name></name> <operator pos:line="281" pos:column="39">&gt;<pos:position pos:line="281" pos:column="43"/></operator> <literal type="number" pos:line="281" pos:column="41">40<pos:position pos:line="281" pos:column="43"/></literal></expr>)<pos:position pos:line="281" pos:column="44"/></condition><then pos:line="281" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="282" pos:column="25">revs<pos:position pos:line="282" pos:column="29"/></name><operator pos:line="282" pos:column="29">-&gt;<pos:position pos:line="282" pos:column="34"/></operator><name pos:line="282" pos:column="31">abbrev<pos:position pos:line="282" pos:column="37"/></name></name> <operator pos:line="282" pos:column="38">=<pos:position pos:line="282" pos:column="39"/></operator> <literal type="number" pos:line="282" pos:column="40">40<pos:position pos:line="282" pos:column="42"/></literal></expr>;<pos:position pos:line="282" pos:column="43"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="283" pos:column="10"/></block></then></if></elseif> <elseif pos:line="283" pos:column="11">else <if pos:line="283" pos:column="16">if <condition pos:line="283" pos:column="19">(<expr><operator pos:line="283" pos:column="20">!<pos:position pos:line="283" pos:column="21"/></operator><call><name pos:line="283" pos:column="21">strcmp<pos:position pos:line="283" pos:column="27"/></name><argument_list pos:line="283" pos:column="27">(<argument><expr><name pos:line="283" pos:column="28">arg<pos:position pos:line="283" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="33">"--abbrev-commit"<pos:position pos:line="283" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="283" pos:column="52"/></condition><then pos:line="283" pos:column="52"> <block pos:line="283" pos:column="53">{
		<expr_stmt><expr><name><name pos:line="284" pos:column="17">revs<pos:position pos:line="284" pos:column="21"/></name><operator pos:line="284" pos:column="21">-&gt;<pos:position pos:line="284" pos:column="26"/></operator><name pos:line="284" pos:column="23">abbrev_commit<pos:position pos:line="284" pos:column="36"/></name></name> <operator pos:line="284" pos:column="37">=<pos:position pos:line="284" pos:column="38"/></operator> <literal type="number" pos:line="284" pos:column="39">1<pos:position pos:line="284" pos:column="40"/></literal></expr>;<pos:position pos:line="284" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="285" pos:column="17">revs<pos:position pos:line="285" pos:column="21"/></name><operator pos:line="285" pos:column="21">-&gt;<pos:position pos:line="285" pos:column="26"/></operator><name pos:line="285" pos:column="23">abbrev_commit_given<pos:position pos:line="285" pos:column="42"/></name></name> <operator pos:line="285" pos:column="43">=<pos:position pos:line="285" pos:column="44"/></operator> <literal type="number" pos:line="285" pos:column="45">1<pos:position pos:line="285" pos:column="46"/></literal></expr>;<pos:position pos:line="285" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="286" pos:column="10"/></block></then></if></elseif> <elseif pos:line="286" pos:column="11">else <if pos:line="286" pos:column="16">if <condition pos:line="286" pos:column="19">(<expr><operator pos:line="286" pos:column="20">!<pos:position pos:line="286" pos:column="21"/></operator><call><name pos:line="286" pos:column="21">strcmp<pos:position pos:line="286" pos:column="27"/></name><argument_list pos:line="286" pos:column="27">(<argument><expr><name pos:line="286" pos:column="28">arg<pos:position pos:line="286" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="33">"--no-abbrev-commit"<pos:position pos:line="286" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="286" pos:column="55"/></condition><then pos:line="286" pos:column="55"> <block pos:line="286" pos:column="56">{
		<expr_stmt><expr><name><name pos:line="287" pos:column="17">revs<pos:position pos:line="287" pos:column="21"/></name><operator pos:line="287" pos:column="21">-&gt;<pos:position pos:line="287" pos:column="26"/></operator><name pos:line="287" pos:column="23">abbrev_commit<pos:position pos:line="287" pos:column="36"/></name></name> <operator pos:line="287" pos:column="37">=<pos:position pos:line="287" pos:column="38"/></operator> <literal type="number" pos:line="287" pos:column="39">0<pos:position pos:line="287" pos:column="40"/></literal></expr>;<pos:position pos:line="287" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="288" pos:column="10"/></block></then></if></elseif> <elseif pos:line="288" pos:column="11">else <if pos:line="288" pos:column="16">if <condition pos:line="288" pos:column="19">(<expr><operator pos:line="288" pos:column="20">!<pos:position pos:line="288" pos:column="21"/></operator><call><name pos:line="288" pos:column="21">strcmp<pos:position pos:line="288" pos:column="27"/></name><argument_list pos:line="288" pos:column="27">(<argument><expr><name pos:line="288" pos:column="28">arg<pos:position pos:line="288" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="33">"--full-diff"<pos:position pos:line="288" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="288" pos:column="48"/></condition><then pos:line="288" pos:column="48"> <block pos:line="288" pos:column="49">{
		<expr_stmt><expr><name><name pos:line="289" pos:column="17">revs<pos:position pos:line="289" pos:column="21"/></name><operator pos:line="289" pos:column="21">-&gt;<pos:position pos:line="289" pos:column="26"/></operator><name pos:line="289" pos:column="23">diff<pos:position pos:line="289" pos:column="27"/></name></name> <operator pos:line="289" pos:column="28">=<pos:position pos:line="289" pos:column="29"/></operator> <literal type="number" pos:line="289" pos:column="30">1<pos:position pos:line="289" pos:column="31"/></literal></expr>;<pos:position pos:line="289" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="290" pos:column="17">revs<pos:position pos:line="290" pos:column="21"/></name><operator pos:line="290" pos:column="21">-&gt;<pos:position pos:line="290" pos:column="26"/></operator><name pos:line="290" pos:column="23">full_diff<pos:position pos:line="290" pos:column="32"/></name></name> <operator pos:line="290" pos:column="33">=<pos:position pos:line="290" pos:column="34"/></operator> <literal type="number" pos:line="290" pos:column="35">1<pos:position pos:line="290" pos:column="36"/></literal></expr>;<pos:position pos:line="290" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="291" pos:column="10"/></block></then></if></elseif> <elseif pos:line="291" pos:column="11">else <if pos:line="291" pos:column="16">if <condition pos:line="291" pos:column="19">(<expr><operator pos:line="291" pos:column="20">!<pos:position pos:line="291" pos:column="21"/></operator><call><name pos:line="291" pos:column="21">strcmp<pos:position pos:line="291" pos:column="27"/></name><argument_list pos:line="291" pos:column="27">(<argument><expr><name pos:line="291" pos:column="28">arg<pos:position pos:line="291" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="33">"--full-history"<pos:position pos:line="291" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="291" pos:column="51"/></condition><then pos:line="291" pos:column="51"> <block pos:line="291" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="292" pos:column="17">revs<pos:position pos:line="292" pos:column="21"/></name><operator pos:line="292" pos:column="21">-&gt;<pos:position pos:line="292" pos:column="26"/></operator><name pos:line="292" pos:column="23">simplify_history<pos:position pos:line="292" pos:column="39"/></name></name> <operator pos:line="292" pos:column="40">=<pos:position pos:line="292" pos:column="41"/></operator> <literal type="number" pos:line="292" pos:column="42">0<pos:position pos:line="292" pos:column="43"/></literal></expr>;<pos:position pos:line="292" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="293" pos:column="10"/></block></then></if></elseif> <elseif pos:line="293" pos:column="11">else <if pos:line="293" pos:column="16">if <condition pos:line="293" pos:column="19">(<expr><operator pos:line="293" pos:column="20">!<pos:position pos:line="293" pos:column="21"/></operator><call><name pos:line="293" pos:column="21">strcmp<pos:position pos:line="293" pos:column="27"/></name><argument_list pos:line="293" pos:column="27">(<argument><expr><name pos:line="293" pos:column="28">arg<pos:position pos:line="293" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="293" pos:column="33">"--relative-date"<pos:position pos:line="293" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="293" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="293" pos:column="52"/></condition><then pos:line="293" pos:column="52"> <block pos:line="293" pos:column="53">{
		<expr_stmt><expr><name><name pos:line="294" pos:column="17">revs<pos:position pos:line="294" pos:column="21"/></name><operator pos:line="294" pos:column="21">-&gt;<pos:position pos:line="294" pos:column="26"/></operator><name pos:line="294" pos:column="23">date_mode<pos:position pos:line="294" pos:column="32"/></name></name> <operator pos:line="294" pos:column="33">=<pos:position pos:line="294" pos:column="34"/></operator> <name pos:line="294" pos:column="35">DATE_RELATIVE<pos:position pos:line="294" pos:column="48"/></name></expr>;<pos:position pos:line="294" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="295" pos:column="17">revs<pos:position pos:line="295" pos:column="21"/></name><operator pos:line="295" pos:column="21">-&gt;<pos:position pos:line="295" pos:column="26"/></operator><name pos:line="295" pos:column="23">date_mode_explicit<pos:position pos:line="295" pos:column="41"/></name></name> <operator pos:line="295" pos:column="42">=<pos:position pos:line="295" pos:column="43"/></operator> <literal type="number" pos:line="295" pos:column="44">1<pos:position pos:line="295" pos:column="45"/></literal></expr>;<pos:position pos:line="295" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="296" pos:column="10"/></block></then></if></elseif> <elseif pos:line="296" pos:column="11">else <if pos:line="296" pos:column="16">if <condition pos:line="296" pos:column="19">(<expr><operator pos:line="296" pos:column="20">(<pos:position pos:line="296" pos:column="21"/></operator><name pos:line="296" pos:column="21">argcount<pos:position pos:line="296" pos:column="29"/></name> <operator pos:line="296" pos:column="30">=<pos:position pos:line="296" pos:column="31"/></operator> <call><name pos:line="296" pos:column="32">parse_long_opt<pos:position pos:line="296" pos:column="46"/></name><argument_list pos:line="296" pos:column="46">(<argument><expr><literal type="string" pos:line="296" pos:column="47">"date"<pos:position pos:line="296" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="296" pos:column="55">argv<pos:position pos:line="296" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="296" pos:column="61">&amp;<pos:position pos:line="296" pos:column="66"/></operator><name pos:line="296" pos:column="62">optarg<pos:position pos:line="296" pos:column="68"/></name></expr></argument>)<pos:position pos:line="296" pos:column="69"/></argument_list></call><operator pos:line="296" pos:column="69">)<pos:position pos:line="296" pos:column="70"/></operator></expr>)<pos:position pos:line="296" pos:column="71"/></condition><then pos:line="296" pos:column="71"> <block pos:line="296" pos:column="72">{
		<expr_stmt><expr><name><name pos:line="297" pos:column="17">revs<pos:position pos:line="297" pos:column="21"/></name><operator pos:line="297" pos:column="21">-&gt;<pos:position pos:line="297" pos:column="26"/></operator><name pos:line="297" pos:column="23">date_mode<pos:position pos:line="297" pos:column="32"/></name></name> <operator pos:line="297" pos:column="33">=<pos:position pos:line="297" pos:column="34"/></operator> <call><name pos:line="297" pos:column="35">parse_date_format<pos:position pos:line="297" pos:column="52"/></name><argument_list pos:line="297" pos:column="52">(<argument><expr><name pos:line="297" pos:column="53">optarg<pos:position pos:line="297" pos:column="59"/></name></expr></argument>)<pos:position pos:line="297" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="298" pos:column="17">revs<pos:position pos:line="298" pos:column="21"/></name><operator pos:line="298" pos:column="21">-&gt;<pos:position pos:line="298" pos:column="26"/></operator><name pos:line="298" pos:column="23">date_mode_explicit<pos:position pos:line="298" pos:column="41"/></name></name> <operator pos:line="298" pos:column="42">=<pos:position pos:line="298" pos:column="43"/></operator> <literal type="number" pos:line="298" pos:column="44">1<pos:position pos:line="298" pos:column="45"/></literal></expr>;<pos:position pos:line="298" pos:column="46"/></expr_stmt>
		<return pos:line="299" pos:column="17">return <expr><name pos:line="299" pos:column="24">argcount<pos:position pos:line="299" pos:column="32"/></name></expr>;<pos:position pos:line="299" pos:column="33"/></return>
	}<pos:position pos:line="300" pos:column="10"/></block></then></if></elseif> <elseif pos:line="300" pos:column="11">else <if pos:line="300" pos:column="16">if <condition pos:line="300" pos:column="19">(<expr><operator pos:line="300" pos:column="20">!<pos:position pos:line="300" pos:column="21"/></operator><call><name pos:line="300" pos:column="21">strcmp<pos:position pos:line="300" pos:column="27"/></name><argument_list pos:line="300" pos:column="27">(<argument><expr><name pos:line="300" pos:column="28">arg<pos:position pos:line="300" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="33">"--log-size"<pos:position pos:line="300" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="300" pos:column="47"/></condition><then pos:line="300" pos:column="47"> <block pos:line="300" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="301" pos:column="17">revs<pos:position pos:line="301" pos:column="21"/></name><operator pos:line="301" pos:column="21">-&gt;<pos:position pos:line="301" pos:column="26"/></operator><name pos:line="301" pos:column="23">show_log_size<pos:position pos:line="301" pos:column="36"/></name></name> <operator pos:line="301" pos:column="37">=<pos:position pos:line="301" pos:column="38"/></operator> <literal type="number" pos:line="301" pos:column="39">1<pos:position pos:line="301" pos:column="40"/></literal></expr>;<pos:position pos:line="301" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="302" pos:column="10"/></block></then></if></elseif>
	<comment type="block" pos:line="303" pos:column="9">/*
	 * Grepping the commit log
	 */</comment>
	<elseif pos:line="306" pos:column="9">else <if pos:line="306" pos:column="14">if <condition pos:line="306" pos:column="17">(<expr><operator pos:line="306" pos:column="18">(<pos:position pos:line="306" pos:column="19"/></operator><name pos:line="306" pos:column="19">argcount<pos:position pos:line="306" pos:column="27"/></name> <operator pos:line="306" pos:column="28">=<pos:position pos:line="306" pos:column="29"/></operator> <call><name pos:line="306" pos:column="30">parse_long_opt<pos:position pos:line="306" pos:column="44"/></name><argument_list pos:line="306" pos:column="44">(<argument><expr><literal type="string" pos:line="306" pos:column="45">"author"<pos:position pos:line="306" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="306" pos:column="55">argv<pos:position pos:line="306" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="306" pos:column="61">&amp;<pos:position pos:line="306" pos:column="66"/></operator><name pos:line="306" pos:column="62">optarg<pos:position pos:line="306" pos:column="68"/></name></expr></argument>)<pos:position pos:line="306" pos:column="69"/></argument_list></call><operator pos:line="306" pos:column="69">)<pos:position pos:line="306" pos:column="70"/></operator></expr>)<pos:position pos:line="306" pos:column="71"/></condition><then pos:line="306" pos:column="71"> <block pos:line="306" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="307" pos:column="17">add_header_grep<pos:position pos:line="307" pos:column="32"/></name><argument_list pos:line="307" pos:column="32">(<argument><expr><name pos:line="307" pos:column="33">revs<pos:position pos:line="307" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="39">GREP_HEADER_AUTHOR<pos:position pos:line="307" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="59">optarg<pos:position pos:line="307" pos:column="65"/></name></expr></argument>)<pos:position pos:line="307" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="67"/></expr_stmt>
		<return pos:line="308" pos:column="17">return <expr><name pos:line="308" pos:column="24">argcount<pos:position pos:line="308" pos:column="32"/></name></expr>;<pos:position pos:line="308" pos:column="33"/></return>
	}<pos:position pos:line="309" pos:column="10"/></block></then></if></elseif> <elseif pos:line="309" pos:column="11">else <if pos:line="309" pos:column="16">if <condition pos:line="309" pos:column="19">(<expr><operator pos:line="309" pos:column="20">(<pos:position pos:line="309" pos:column="21"/></operator><name pos:line="309" pos:column="21">argcount<pos:position pos:line="309" pos:column="29"/></name> <operator pos:line="309" pos:column="30">=<pos:position pos:line="309" pos:column="31"/></operator> <call><name pos:line="309" pos:column="32">parse_long_opt<pos:position pos:line="309" pos:column="46"/></name><argument_list pos:line="309" pos:column="46">(<argument><expr><literal type="string" pos:line="309" pos:column="47">"committer"<pos:position pos:line="309" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="309" pos:column="60">argv<pos:position pos:line="309" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="309" pos:column="66">&amp;<pos:position pos:line="309" pos:column="71"/></operator><name pos:line="309" pos:column="67">optarg<pos:position pos:line="309" pos:column="73"/></name></expr></argument>)<pos:position pos:line="309" pos:column="74"/></argument_list></call><operator pos:line="309" pos:column="74">)<pos:position pos:line="309" pos:column="75"/></operator></expr>)<pos:position pos:line="309" pos:column="76"/></condition><then pos:line="309" pos:column="76"> <block pos:line="309" pos:column="77">{
		<expr_stmt><expr><call><name pos:line="310" pos:column="17">add_header_grep<pos:position pos:line="310" pos:column="32"/></name><argument_list pos:line="310" pos:column="32">(<argument><expr><name pos:line="310" pos:column="33">revs<pos:position pos:line="310" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="39">GREP_HEADER_COMMITTER<pos:position pos:line="310" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="62">optarg<pos:position pos:line="310" pos:column="68"/></name></expr></argument>)<pos:position pos:line="310" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="70"/></expr_stmt>
		<return pos:line="311" pos:column="17">return <expr><name pos:line="311" pos:column="24">argcount<pos:position pos:line="311" pos:column="32"/></name></expr>;<pos:position pos:line="311" pos:column="33"/></return>
	}<pos:position pos:line="312" pos:column="10"/></block></then></if></elseif> <elseif pos:line="312" pos:column="11">else <if pos:line="312" pos:column="16">if <condition pos:line="312" pos:column="19">(<expr><operator pos:line="312" pos:column="20">(<pos:position pos:line="312" pos:column="21"/></operator><name pos:line="312" pos:column="21">argcount<pos:position pos:line="312" pos:column="29"/></name> <operator pos:line="312" pos:column="30">=<pos:position pos:line="312" pos:column="31"/></operator> <call><name pos:line="312" pos:column="32">parse_long_opt<pos:position pos:line="312" pos:column="46"/></name><argument_list pos:line="312" pos:column="46">(<argument><expr><literal type="string" pos:line="312" pos:column="47">"grep-reflog"<pos:position pos:line="312" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="312" pos:column="62">argv<pos:position pos:line="312" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="312" pos:column="68">&amp;<pos:position pos:line="312" pos:column="73"/></operator><name pos:line="312" pos:column="69">optarg<pos:position pos:line="312" pos:column="75"/></name></expr></argument>)<pos:position pos:line="312" pos:column="76"/></argument_list></call><operator pos:line="312" pos:column="76">)<pos:position pos:line="312" pos:column="77"/></operator></expr>)<pos:position pos:line="312" pos:column="78"/></condition><then pos:line="312" pos:column="78"> <block pos:line="312" pos:column="79">{
		<expr_stmt><expr><call><name pos:line="313" pos:column="17">add_header_grep<pos:position pos:line="313" pos:column="32"/></name><argument_list pos:line="313" pos:column="32">(<argument><expr><name pos:line="313" pos:column="33">revs<pos:position pos:line="313" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="39">GREP_HEADER_REFLOG<pos:position pos:line="313" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="59">optarg<pos:position pos:line="313" pos:column="65"/></name></expr></argument>)<pos:position pos:line="313" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="67"/></expr_stmt>
		<return pos:line="314" pos:column="17">return <expr><name pos:line="314" pos:column="24">argcount<pos:position pos:line="314" pos:column="32"/></name></expr>;<pos:position pos:line="314" pos:column="33"/></return>
	}<pos:position pos:line="315" pos:column="10"/></block></then></if></elseif> <elseif pos:line="315" pos:column="11">else <if pos:line="315" pos:column="16">if <condition pos:line="315" pos:column="19">(<expr><operator pos:line="315" pos:column="20">(<pos:position pos:line="315" pos:column="21"/></operator><name pos:line="315" pos:column="21">argcount<pos:position pos:line="315" pos:column="29"/></name> <operator pos:line="315" pos:column="30">=<pos:position pos:line="315" pos:column="31"/></operator> <call><name pos:line="315" pos:column="32">parse_long_opt<pos:position pos:line="315" pos:column="46"/></name><argument_list pos:line="315" pos:column="46">(<argument><expr><literal type="string" pos:line="315" pos:column="47">"grep"<pos:position pos:line="315" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="315" pos:column="55">argv<pos:position pos:line="315" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="315" pos:column="61">&amp;<pos:position pos:line="315" pos:column="66"/></operator><name pos:line="315" pos:column="62">optarg<pos:position pos:line="315" pos:column="68"/></name></expr></argument>)<pos:position pos:line="315" pos:column="69"/></argument_list></call><operator pos:line="315" pos:column="69">)<pos:position pos:line="315" pos:column="70"/></operator></expr>)<pos:position pos:line="315" pos:column="71"/></condition><then pos:line="315" pos:column="71"> <block pos:line="315" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="316" pos:column="17">add_message_grep<pos:position pos:line="316" pos:column="33"/></name><argument_list pos:line="316" pos:column="33">(<argument><expr><name pos:line="316" pos:column="34">revs<pos:position pos:line="316" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="40">optarg<pos:position pos:line="316" pos:column="46"/></name></expr></argument>)<pos:position pos:line="316" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="48"/></expr_stmt>
		<return pos:line="317" pos:column="17">return <expr><name pos:line="317" pos:column="24">argcount<pos:position pos:line="317" pos:column="32"/></name></expr>;<pos:position pos:line="317" pos:column="33"/></return>
	}<pos:position pos:line="318" pos:column="10"/></block></then></if></elseif> <elseif pos:line="318" pos:column="11">else <if pos:line="318" pos:column="16">if <condition pos:line="318" pos:column="19">(<expr><operator pos:line="318" pos:column="20">!<pos:position pos:line="318" pos:column="21"/></operator><call><name pos:line="318" pos:column="21">strcmp<pos:position pos:line="318" pos:column="27"/></name><argument_list pos:line="318" pos:column="27">(<argument><expr><name pos:line="318" pos:column="28">arg<pos:position pos:line="318" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="318" pos:column="33">"--grep-debug"<pos:position pos:line="318" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="318" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="318" pos:column="49"/></condition><then pos:line="318" pos:column="49"> <block pos:line="318" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="319" pos:column="17">revs<pos:position pos:line="319" pos:column="21"/></name><operator pos:line="319" pos:column="21">-&gt;<pos:position pos:line="319" pos:column="26"/></operator><name pos:line="319" pos:column="23">grep_filter<pos:position pos:line="319" pos:column="34"/></name><operator pos:line="319" pos:column="34">.<pos:position pos:line="319" pos:column="35"/></operator><name pos:line="319" pos:column="35">debug<pos:position pos:line="319" pos:column="40"/></name></name> <operator pos:line="319" pos:column="41">=<pos:position pos:line="319" pos:column="42"/></operator> <literal type="number" pos:line="319" pos:column="43">1<pos:position pos:line="319" pos:column="44"/></literal></expr>;<pos:position pos:line="319" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="320" pos:column="10"/></block></then></if></elseif> <elseif pos:line="320" pos:column="11">else <if pos:line="320" pos:column="16">if <condition pos:line="320" pos:column="19">(<expr><operator pos:line="320" pos:column="20">!<pos:position pos:line="320" pos:column="21"/></operator><call><name pos:line="320" pos:column="21">strcmp<pos:position pos:line="320" pos:column="27"/></name><argument_list pos:line="320" pos:column="27">(<argument><expr><name pos:line="320" pos:column="28">arg<pos:position pos:line="320" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="320" pos:column="33">"--basic-regexp"<pos:position pos:line="320" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="320" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="320" pos:column="51"/></condition><then pos:line="320" pos:column="51"> <block pos:line="320" pos:column="52">{
		<expr_stmt><expr><call><name pos:line="321" pos:column="17">grep_set_pattern_type_option<pos:position pos:line="321" pos:column="45"/></name><argument_list pos:line="321" pos:column="45">(<argument><expr><name pos:line="321" pos:column="46">GREP_PATTERN_TYPE_BRE<pos:position pos:line="321" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="321" pos:column="69">&amp;<pos:position pos:line="321" pos:column="74"/></operator><name><name pos:line="321" pos:column="70">revs<pos:position pos:line="321" pos:column="74"/></name><operator pos:line="321" pos:column="74">-&gt;<pos:position pos:line="321" pos:column="79"/></operator><name pos:line="321" pos:column="76">grep_filter<pos:position pos:line="321" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="321" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="322" pos:column="10"/></block></then></if></elseif> <elseif pos:line="322" pos:column="11">else <if pos:line="322" pos:column="16">if <condition pos:line="322" pos:column="19">(<expr><operator pos:line="322" pos:column="20">!<pos:position pos:line="322" pos:column="21"/></operator><call><name pos:line="322" pos:column="21">strcmp<pos:position pos:line="322" pos:column="27"/></name><argument_list pos:line="322" pos:column="27">(<argument><expr><name pos:line="322" pos:column="28">arg<pos:position pos:line="322" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="33">"--extended-regexp"<pos:position pos:line="322" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="53"/></argument_list></call> <operator pos:line="322" pos:column="54">||<pos:position pos:line="322" pos:column="56"/></operator> <operator pos:line="322" pos:column="57">!<pos:position pos:line="322" pos:column="58"/></operator><call><name pos:line="322" pos:column="58">strcmp<pos:position pos:line="322" pos:column="64"/></name><argument_list pos:line="322" pos:column="64">(<argument><expr><name pos:line="322" pos:column="65">arg<pos:position pos:line="322" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="70">"-E"<pos:position pos:line="322" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="322" pos:column="76"/></condition><then pos:line="322" pos:column="76"> <block pos:line="322" pos:column="77">{
		<expr_stmt><expr><call><name pos:line="323" pos:column="17">grep_set_pattern_type_option<pos:position pos:line="323" pos:column="45"/></name><argument_list pos:line="323" pos:column="45">(<argument><expr><name pos:line="323" pos:column="46">GREP_PATTERN_TYPE_ERE<pos:position pos:line="323" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="323" pos:column="69">&amp;<pos:position pos:line="323" pos:column="74"/></operator><name><name pos:line="323" pos:column="70">revs<pos:position pos:line="323" pos:column="74"/></name><operator pos:line="323" pos:column="74">-&gt;<pos:position pos:line="323" pos:column="79"/></operator><name pos:line="323" pos:column="76">grep_filter<pos:position pos:line="323" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="323" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="324" pos:column="10"/></block></then></if></elseif> <elseif pos:line="324" pos:column="11">else <if pos:line="324" pos:column="16">if <condition pos:line="324" pos:column="19">(<expr><operator pos:line="324" pos:column="20">!<pos:position pos:line="324" pos:column="21"/></operator><call><name pos:line="324" pos:column="21">strcmp<pos:position pos:line="324" pos:column="27"/></name><argument_list pos:line="324" pos:column="27">(<argument><expr><name pos:line="324" pos:column="28">arg<pos:position pos:line="324" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="33">"--regexp-ignore-case"<pos:position pos:line="324" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="324" pos:column="56"/></argument_list></call> <operator pos:line="324" pos:column="57">||<pos:position pos:line="324" pos:column="59"/></operator> <operator pos:line="324" pos:column="60">!<pos:position pos:line="324" pos:column="61"/></operator><call><name pos:line="324" pos:column="61">strcmp<pos:position pos:line="324" pos:column="67"/></name><argument_list pos:line="324" pos:column="67">(<argument><expr><name pos:line="324" pos:column="68">arg<pos:position pos:line="324" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="73">"-i"<pos:position pos:line="324" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="324" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="324" pos:column="79"/></condition><then pos:line="324" pos:column="79"> <block pos:line="324" pos:column="80">{
		<expr_stmt><expr><name><name pos:line="325" pos:column="17">revs<pos:position pos:line="325" pos:column="21"/></name><operator pos:line="325" pos:column="21">-&gt;<pos:position pos:line="325" pos:column="26"/></operator><name pos:line="325" pos:column="23">grep_filter<pos:position pos:line="325" pos:column="34"/></name><operator pos:line="325" pos:column="34">.<pos:position pos:line="325" pos:column="35"/></operator><name pos:line="325" pos:column="35">regflags<pos:position pos:line="325" pos:column="43"/></name></name> <operator pos:line="325" pos:column="44">|=<pos:position pos:line="325" pos:column="46"/></operator> <name pos:line="325" pos:column="47">REG_ICASE<pos:position pos:line="325" pos:column="56"/></name></expr>;<pos:position pos:line="325" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="326" pos:column="17">DIFF_OPT_SET<pos:position pos:line="326" pos:column="29"/></name><argument_list pos:line="326" pos:column="29">(<argument><expr><operator pos:line="326" pos:column="30">&amp;<pos:position pos:line="326" pos:column="35"/></operator><name><name pos:line="326" pos:column="31">revs<pos:position pos:line="326" pos:column="35"/></name><operator pos:line="326" pos:column="35">-&gt;<pos:position pos:line="326" pos:column="40"/></operator><name pos:line="326" pos:column="37">diffopt<pos:position pos:line="326" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="46">PICKAXE_IGNORE_CASE<pos:position pos:line="326" pos:column="65"/></name></expr></argument>)<pos:position pos:line="326" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="327" pos:column="10"/></block></then></if></elseif> <elseif pos:line="327" pos:column="11">else <if pos:line="327" pos:column="16">if <condition pos:line="327" pos:column="19">(<expr><operator pos:line="327" pos:column="20">!<pos:position pos:line="327" pos:column="21"/></operator><call><name pos:line="327" pos:column="21">strcmp<pos:position pos:line="327" pos:column="27"/></name><argument_list pos:line="327" pos:column="27">(<argument><expr><name pos:line="327" pos:column="28">arg<pos:position pos:line="327" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="33">"--fixed-strings"<pos:position pos:line="327" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="51"/></argument_list></call> <operator pos:line="327" pos:column="52">||<pos:position pos:line="327" pos:column="54"/></operator> <operator pos:line="327" pos:column="55">!<pos:position pos:line="327" pos:column="56"/></operator><call><name pos:line="327" pos:column="56">strcmp<pos:position pos:line="327" pos:column="62"/></name><argument_list pos:line="327" pos:column="62">(<argument><expr><name pos:line="327" pos:column="63">arg<pos:position pos:line="327" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="68">"-F"<pos:position pos:line="327" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="327" pos:column="74"/></condition><then pos:line="327" pos:column="74"> <block pos:line="327" pos:column="75">{
		<expr_stmt><expr><call><name pos:line="328" pos:column="17">grep_set_pattern_type_option<pos:position pos:line="328" pos:column="45"/></name><argument_list pos:line="328" pos:column="45">(<argument><expr><name pos:line="328" pos:column="46">GREP_PATTERN_TYPE_FIXED<pos:position pos:line="328" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="328" pos:column="71">&amp;<pos:position pos:line="328" pos:column="76"/></operator><name><name pos:line="328" pos:column="72">revs<pos:position pos:line="328" pos:column="76"/></name><operator pos:line="328" pos:column="76">-&gt;<pos:position pos:line="328" pos:column="81"/></operator><name pos:line="328" pos:column="78">grep_filter<pos:position pos:line="328" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="328" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="91"/></expr_stmt>
	}<pos:position pos:line="329" pos:column="10"/></block></then></if></elseif> <elseif pos:line="329" pos:column="11">else <if pos:line="329" pos:column="16">if <condition pos:line="329" pos:column="19">(<expr><operator pos:line="329" pos:column="20">!<pos:position pos:line="329" pos:column="21"/></operator><call><name pos:line="329" pos:column="21">strcmp<pos:position pos:line="329" pos:column="27"/></name><argument_list pos:line="329" pos:column="27">(<argument><expr><name pos:line="329" pos:column="28">arg<pos:position pos:line="329" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="329" pos:column="33">"--perl-regexp"<pos:position pos:line="329" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="329" pos:column="50"/></condition><then pos:line="329" pos:column="50"> <block pos:line="329" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="330" pos:column="17">grep_set_pattern_type_option<pos:position pos:line="330" pos:column="45"/></name><argument_list pos:line="330" pos:column="45">(<argument><expr><name pos:line="330" pos:column="46">GREP_PATTERN_TYPE_PCRE<pos:position pos:line="330" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="330" pos:column="70">&amp;<pos:position pos:line="330" pos:column="75"/></operator><name><name pos:line="330" pos:column="71">revs<pos:position pos:line="330" pos:column="75"/></name><operator pos:line="330" pos:column="75">-&gt;<pos:position pos:line="330" pos:column="80"/></operator><name pos:line="330" pos:column="77">grep_filter<pos:position pos:line="330" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="330" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="90"/></expr_stmt>
	}<pos:position pos:line="331" pos:column="10"/></block></then></if></elseif> <elseif pos:line="331" pos:column="11">else <if pos:line="331" pos:column="16">if <condition pos:line="331" pos:column="19">(<expr><operator pos:line="331" pos:column="20">!<pos:position pos:line="331" pos:column="21"/></operator><call><name pos:line="331" pos:column="21">strcmp<pos:position pos:line="331" pos:column="27"/></name><argument_list pos:line="331" pos:column="27">(<argument><expr><name pos:line="331" pos:column="28">arg<pos:position pos:line="331" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="331" pos:column="33">"--all-match"<pos:position pos:line="331" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="331" pos:column="48"/></condition><then pos:line="331" pos:column="48"> <block pos:line="331" pos:column="49">{
		<expr_stmt><expr><name><name pos:line="332" pos:column="17">revs<pos:position pos:line="332" pos:column="21"/></name><operator pos:line="332" pos:column="21">-&gt;<pos:position pos:line="332" pos:column="26"/></operator><name pos:line="332" pos:column="23">grep_filter<pos:position pos:line="332" pos:column="34"/></name><operator pos:line="332" pos:column="34">.<pos:position pos:line="332" pos:column="35"/></operator><name pos:line="332" pos:column="35">all_match<pos:position pos:line="332" pos:column="44"/></name></name> <operator pos:line="332" pos:column="45">=<pos:position pos:line="332" pos:column="46"/></operator> <literal type="number" pos:line="332" pos:column="47">1<pos:position pos:line="332" pos:column="48"/></literal></expr>;<pos:position pos:line="332" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="333" pos:column="10"/></block></then></if></elseif> <elseif pos:line="333" pos:column="11">else <if pos:line="333" pos:column="16">if <condition pos:line="333" pos:column="19">(<expr><operator pos:line="333" pos:column="20">(<pos:position pos:line="333" pos:column="21"/></operator><name pos:line="333" pos:column="21">argcount<pos:position pos:line="333" pos:column="29"/></name> <operator pos:line="333" pos:column="30">=<pos:position pos:line="333" pos:column="31"/></operator> <call><name pos:line="333" pos:column="32">parse_long_opt<pos:position pos:line="333" pos:column="46"/></name><argument_list pos:line="333" pos:column="46">(<argument><expr><literal type="string" pos:line="333" pos:column="47">"encoding"<pos:position pos:line="333" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="333" pos:column="59">argv<pos:position pos:line="333" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="333" pos:column="65">&amp;<pos:position pos:line="333" pos:column="70"/></operator><name pos:line="333" pos:column="66">optarg<pos:position pos:line="333" pos:column="72"/></name></expr></argument>)<pos:position pos:line="333" pos:column="73"/></argument_list></call><operator pos:line="333" pos:column="73">)<pos:position pos:line="333" pos:column="74"/></operator></expr>)<pos:position pos:line="333" pos:column="75"/></condition><then pos:line="333" pos:column="75"> <block pos:line="333" pos:column="76">{
		<if pos:line="334" pos:column="17">if <condition pos:line="334" pos:column="20">(<expr><call><name pos:line="334" pos:column="21">strcmp<pos:position pos:line="334" pos:column="27"/></name><argument_list pos:line="334" pos:column="27">(<argument><expr><name pos:line="334" pos:column="28">optarg<pos:position pos:line="334" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="36">"none"<pos:position pos:line="334" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="334" pos:column="44"/></condition><then pos:line="334" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="335" pos:column="25">git_log_output_encoding<pos:position pos:line="335" pos:column="48"/></name> <operator pos:line="335" pos:column="49">=<pos:position pos:line="335" pos:column="50"/></operator> <call><name pos:line="335" pos:column="51">xstrdup<pos:position pos:line="335" pos:column="58"/></name><argument_list pos:line="335" pos:column="58">(<argument><expr><name pos:line="335" pos:column="59">optarg<pos:position pos:line="335" pos:column="65"/></name></expr></argument>)<pos:position pos:line="335" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="67"/></expr_stmt></block></then>
		<else pos:line="336" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="337" pos:column="25">git_log_output_encoding<pos:position pos:line="337" pos:column="48"/></name> <operator pos:line="337" pos:column="49">=<pos:position pos:line="337" pos:column="50"/></operator> <literal type="string" pos:line="337" pos:column="51">""<pos:position pos:line="337" pos:column="53"/></literal></expr>;<pos:position pos:line="337" pos:column="54"/></expr_stmt></block></else></if>
		<return pos:line="338" pos:column="17">return <expr><name pos:line="338" pos:column="24">argcount<pos:position pos:line="338" pos:column="32"/></name></expr>;<pos:position pos:line="338" pos:column="33"/></return>
	}<pos:position pos:line="339" pos:column="10"/></block></then></if></elseif> <elseif pos:line="339" pos:column="11">else <if pos:line="339" pos:column="16">if <condition pos:line="339" pos:column="19">(<expr><operator pos:line="339" pos:column="20">!<pos:position pos:line="339" pos:column="21"/></operator><call><name pos:line="339" pos:column="21">strcmp<pos:position pos:line="339" pos:column="27"/></name><argument_list pos:line="339" pos:column="27">(<argument><expr><name pos:line="339" pos:column="28">arg<pos:position pos:line="339" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="33">"--reverse"<pos:position pos:line="339" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="339" pos:column="46"/></condition><then pos:line="339" pos:column="46"> <block pos:line="339" pos:column="47">{
		<expr_stmt><expr><name><name pos:line="340" pos:column="17">revs<pos:position pos:line="340" pos:column="21"/></name><operator pos:line="340" pos:column="21">-&gt;<pos:position pos:line="340" pos:column="26"/></operator><name pos:line="340" pos:column="23">reverse<pos:position pos:line="340" pos:column="30"/></name></name> <operator pos:line="340" pos:column="31">^=<pos:position pos:line="340" pos:column="33"/></operator> <literal type="number" pos:line="340" pos:column="34">1<pos:position pos:line="340" pos:column="35"/></literal></expr>;<pos:position pos:line="340" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="341" pos:column="10"/></block></then></if></elseif> <elseif pos:line="341" pos:column="11">else <if pos:line="341" pos:column="16">if <condition pos:line="341" pos:column="19">(<expr><operator pos:line="341" pos:column="20">!<pos:position pos:line="341" pos:column="21"/></operator><call><name pos:line="341" pos:column="21">strcmp<pos:position pos:line="341" pos:column="27"/></name><argument_list pos:line="341" pos:column="27">(<argument><expr><name pos:line="341" pos:column="28">arg<pos:position pos:line="341" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="341" pos:column="33">"--children"<pos:position pos:line="341" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="341" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="341" pos:column="47"/></condition><then pos:line="341" pos:column="47"> <block pos:line="341" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="342" pos:column="17">revs<pos:position pos:line="342" pos:column="21"/></name><operator pos:line="342" pos:column="21">-&gt;<pos:position pos:line="342" pos:column="26"/></operator><name pos:line="342" pos:column="23">children<pos:position pos:line="342" pos:column="31"/></name><operator pos:line="342" pos:column="31">.<pos:position pos:line="342" pos:column="32"/></operator><name pos:line="342" pos:column="32">name<pos:position pos:line="342" pos:column="36"/></name></name> <operator pos:line="342" pos:column="37">=<pos:position pos:line="342" pos:column="38"/></operator> <literal type="string" pos:line="342" pos:column="39">"children"<pos:position pos:line="342" pos:column="49"/></literal></expr>;<pos:position pos:line="342" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="343" pos:column="17">revs<pos:position pos:line="343" pos:column="21"/></name><operator pos:line="343" pos:column="21">-&gt;<pos:position pos:line="343" pos:column="26"/></operator><name pos:line="343" pos:column="23">limited<pos:position pos:line="343" pos:column="30"/></name></name> <operator pos:line="343" pos:column="31">=<pos:position pos:line="343" pos:column="32"/></operator> <literal type="number" pos:line="343" pos:column="33">1<pos:position pos:line="343" pos:column="34"/></literal></expr>;<pos:position pos:line="343" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="344" pos:column="10"/></block></then></if></elseif> <elseif pos:line="344" pos:column="11">else <if pos:line="344" pos:column="16">if <condition pos:line="344" pos:column="19">(<expr><operator pos:line="344" pos:column="20">!<pos:position pos:line="344" pos:column="21"/></operator><call><name pos:line="344" pos:column="21">strcmp<pos:position pos:line="344" pos:column="27"/></name><argument_list pos:line="344" pos:column="27">(<argument><expr><name pos:line="344" pos:column="28">arg<pos:position pos:line="344" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="33">"--ignore-missing"<pos:position pos:line="344" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="344" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="344" pos:column="53"/></condition><then pos:line="344" pos:column="53"> <block pos:line="344" pos:column="54">{
		<expr_stmt><expr><name><name pos:line="345" pos:column="17">revs<pos:position pos:line="345" pos:column="21"/></name><operator pos:line="345" pos:column="21">-&gt;<pos:position pos:line="345" pos:column="26"/></operator><name pos:line="345" pos:column="23">ignore_missing<pos:position pos:line="345" pos:column="37"/></name></name> <operator pos:line="345" pos:column="38">=<pos:position pos:line="345" pos:column="39"/></operator> <literal type="number" pos:line="345" pos:column="40">1<pos:position pos:line="345" pos:column="41"/></literal></expr>;<pos:position pos:line="345" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="346" pos:column="10"/></block></then></if></elseif> <else pos:line="346" pos:column="11">else <block pos:line="346" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="347" pos:column="17">int<pos:position pos:line="347" pos:column="20"/></name></type> <name pos:line="347" pos:column="21">opts<pos:position pos:line="347" pos:column="25"/></name> <init pos:line="347" pos:column="26">= <expr><call><name pos:line="347" pos:column="28">diff_opt_parse<pos:position pos:line="347" pos:column="42"/></name><argument_list pos:line="347" pos:column="42">(<argument><expr><operator pos:line="347" pos:column="43">&amp;<pos:position pos:line="347" pos:column="48"/></operator><name><name pos:line="347" pos:column="44">revs<pos:position pos:line="347" pos:column="48"/></name><operator pos:line="347" pos:column="48">-&gt;<pos:position pos:line="347" pos:column="53"/></operator><name pos:line="347" pos:column="50">diffopt<pos:position pos:line="347" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="59">argv<pos:position pos:line="347" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="65">argc<pos:position pos:line="347" pos:column="69"/></name></expr></argument>)<pos:position pos:line="347" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="347" pos:column="71"/></decl_stmt>
		<if pos:line="348" pos:column="17">if <condition pos:line="348" pos:column="20">(<expr><operator pos:line="348" pos:column="21">!<pos:position pos:line="348" pos:column="22"/></operator><name pos:line="348" pos:column="22">opts<pos:position pos:line="348" pos:column="26"/></name></expr>)<pos:position pos:line="348" pos:column="27"/></condition><then pos:line="348" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="349" pos:column="25">unkv<pos:position pos:line="349" pos:column="29"/></name><index pos:line="349" pos:column="29">[<expr><operator pos:line="349" pos:column="30">(<pos:position pos:line="349" pos:column="31"/></operator><operator pos:line="349" pos:column="31">*<pos:position pos:line="349" pos:column="32"/></operator><name pos:line="349" pos:column="32">unkc<pos:position pos:line="349" pos:column="36"/></name><operator pos:line="349" pos:column="36">)<pos:position pos:line="349" pos:column="37"/></operator><operator pos:line="349" pos:column="37">++<pos:position pos:line="349" pos:column="39"/></operator></expr>]<pos:position pos:line="349" pos:column="40"/></index></name> <operator pos:line="349" pos:column="41">=<pos:position pos:line="349" pos:column="42"/></operator> <name pos:line="349" pos:column="43">arg<pos:position pos:line="349" pos:column="46"/></name></expr>;<pos:position pos:line="349" pos:column="47"/></expr_stmt></block></then></if>
		<return pos:line="350" pos:column="17">return <expr><name pos:line="350" pos:column="24">opts<pos:position pos:line="350" pos:column="28"/></name></expr>;<pos:position pos:line="350" pos:column="29"/></return>
	}<pos:position pos:line="351" pos:column="10"/></block></else></if>
	<if pos:line="352" pos:column="9">if <condition pos:line="352" pos:column="12">(<expr><name><name pos:line="352" pos:column="13">revs<pos:position pos:line="352" pos:column="17"/></name><operator pos:line="352" pos:column="17">-&gt;<pos:position pos:line="352" pos:column="22"/></operator><name pos:line="352" pos:column="19">graph<pos:position pos:line="352" pos:column="24"/></name></name> <operator pos:line="352" pos:column="25">&amp;&amp;<pos:position pos:line="352" pos:column="35"/></operator> <name><name pos:line="352" pos:column="28">revs<pos:position pos:line="352" pos:column="32"/></name><operator pos:line="352" pos:column="32">-&gt;<pos:position pos:line="352" pos:column="37"/></operator><name pos:line="352" pos:column="34">track_linear<pos:position pos:line="352" pos:column="46"/></name></name></expr>)<pos:position pos:line="352" pos:column="47"/></condition><then pos:line="352" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="353" pos:column="17">die<pos:position pos:line="353" pos:column="20"/></name><argument_list pos:line="353" pos:column="20">(<argument><expr><literal type="string" pos:line="353" pos:column="21">"--show-linear-break and --graph are incompatible"<pos:position pos:line="353" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="73"/></expr_stmt></block></then></if>

	<return pos:line="355" pos:column="9">return <expr><literal type="number" pos:line="355" pos:column="16">1<pos:position pos:line="355" pos:column="17"/></literal></expr>;<pos:position pos:line="355" pos:column="18"/></return>
}<pos:position pos:line="356" pos:column="2"/></block></function></unit>

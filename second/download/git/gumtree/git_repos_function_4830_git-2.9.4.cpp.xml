<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4830_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_files<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">dir_struct<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">dir<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* For cached/deleted files we don't need to even do the readdir */</comment>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">show_others<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">||<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">show_killed<pos:position pos:line="6" pos:column="39"/></name></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40"> <block pos:line="6" pos:column="41">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">show_others<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="25">dir<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">flags<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">|=<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">DIR_COLLECT_KILLED_ONLY<pos:position pos:line="8" pos:column="62"/></name></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">fill_directory<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">dir<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="37">&amp;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="38">pathspec<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">show_others<pos:position pos:line="10" pos:column="32"/></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">show_other_files<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">dir<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">show_killed<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">show_killed_files<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">dir<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">show_cached<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">||<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">show_stage<pos:position pos:line="15" pos:column="38"/></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <block pos:line="15" pos:column="40">{
		<for pos:line="16" pos:column="17">for <control pos:line="16" pos:column="21">(<init><expr><name pos:line="16" pos:column="22">i<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></init> <condition><expr><name pos:line="16" pos:column="29">i<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">&lt;<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="33">active_nr<pos:position pos:line="16" pos:column="42"/></name></expr>;<pos:position pos:line="16" pos:column="43"/></condition> <incr><expr><name pos:line="16" pos:column="44">i<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">++<pos:position pos:line="16" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="48"/></control> <block pos:line="16" pos:column="49">{
			<decl_stmt><decl><type><specifier pos:line="17" pos:column="25">const<pos:position pos:line="17" pos:column="30"/></specifier> <name><name pos:line="17" pos:column="31">struct<pos:position pos:line="17" pos:column="37"/></name> <name pos:line="17" pos:column="38">cache_entry<pos:position pos:line="17" pos:column="49"/></name></name> <modifier pos:line="17" pos:column="50">*<pos:position pos:line="17" pos:column="51"/></modifier></type><name pos:line="17" pos:column="51">ce<pos:position pos:line="17" pos:column="53"/></name> <init pos:line="17" pos:column="54">= <expr><name><name pos:line="17" pos:column="56">active_cache<pos:position pos:line="17" pos:column="68"/></name><index pos:line="17" pos:column="68">[<expr><name pos:line="17" pos:column="69">i<pos:position pos:line="17" pos:column="70"/></name></expr>]<pos:position pos:line="17" pos:column="71"/></index></name></expr></init></decl>;<pos:position pos:line="17" pos:column="72"/></decl_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">(<pos:position pos:line="18" pos:column="30"/></operator><name><name pos:line="18" pos:column="30">dir<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">flags<pos:position pos:line="18" pos:column="40"/></name></name> <operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="43">DIR_SHOW_IGNORED<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">)<pos:position pos:line="18" pos:column="60"/></operator> <operator pos:line="18" pos:column="61">&amp;&amp;<pos:position pos:line="18" pos:column="71"/></operator>
			    <operator pos:line="19" pos:column="29">!<pos:position pos:line="19" pos:column="30"/></operator><call><name pos:line="19" pos:column="30">ce_excluded<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">dir<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">ce<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
				<block type="pseudo"><continue pos:line="20" pos:column="33">continue;<pos:position pos:line="20" pos:column="42"/></continue></block></then></if>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">show_unmerged<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">&amp;&amp;<pos:position pos:line="21" pos:column="53"/></operator> <operator pos:line="21" pos:column="46">!<pos:position pos:line="21" pos:column="47"/></operator><call><name pos:line="21" pos:column="47">ce_stage<pos:position pos:line="21" pos:column="55"/></name><argument_list pos:line="21" pos:column="55">(<argument><expr><name pos:line="21" pos:column="56">ce<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
				<block type="pseudo"><continue pos:line="22" pos:column="33">continue;<pos:position pos:line="22" pos:column="42"/></continue></block></then></if>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name><name pos:line="23" pos:column="29">ce<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">ce_flags<pos:position pos:line="23" pos:column="41"/></name></name> <operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="44">CE_UPDATE<pos:position pos:line="23" pos:column="53"/></name></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54">
				<block type="pseudo"><continue pos:line="24" pos:column="33">continue;<pos:position pos:line="24" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">show_ce_entry<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><ternary><condition><expr><call><name pos:line="25" pos:column="39">ce_stage<pos:position pos:line="25" pos:column="47"/></name><argument_list pos:line="25" pos:column="47">(<argument><expr><name pos:line="25" pos:column="48">ce<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr> ?<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <expr><name pos:line="25" pos:column="54">tag_unmerged<pos:position pos:line="25" pos:column="66"/></name></expr> <pos:position pos:line="25" pos:column="67"/></then><else pos:line="25" pos:column="67">:
				<expr><operator pos:line="26" pos:column="33">(<pos:position pos:line="26" pos:column="34"/></operator><ternary><condition><expr><call><name pos:line="26" pos:column="34">ce_skip_worktree<pos:position pos:line="26" pos:column="50"/></name><argument_list pos:line="26" pos:column="50">(<argument><expr><name pos:line="26" pos:column="51">ce<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr> ?<pos:position pos:line="26" pos:column="56"/></condition><then pos:line="26" pos:column="56"> <expr><name pos:line="26" pos:column="57">tag_skip_worktree<pos:position pos:line="26" pos:column="74"/></name></expr> <pos:position pos:line="26" pos:column="75"/></then><else pos:line="26" pos:column="75">: <expr><name pos:line="26" pos:column="77">tag_cached<pos:position pos:line="26" pos:column="87"/></name></expr></else></ternary><operator pos:line="26" pos:column="87">)<pos:position pos:line="26" pos:column="88"/></operator></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="26" pos:column="90">ce<pos:position pos:line="26" pos:column="92"/></name></expr></argument>)<pos:position pos:line="26" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="94"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></for>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">show_deleted<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">||<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">show_modified<pos:position pos:line="29" pos:column="42"/></name></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
		<for pos:line="30" pos:column="17">for <control pos:line="30" pos:column="21">(<init><expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></init> <condition><expr><name pos:line="30" pos:column="29">i<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">&lt;<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="33">active_nr<pos:position pos:line="30" pos:column="42"/></name></expr>;<pos:position pos:line="30" pos:column="43"/></condition> <incr><expr><name pos:line="30" pos:column="44">i<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">++<pos:position pos:line="30" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="48"/></control> <block pos:line="30" pos:column="49">{
			<decl_stmt><decl><type><specifier pos:line="31" pos:column="25">const<pos:position pos:line="31" pos:column="30"/></specifier> <name><name pos:line="31" pos:column="31">struct<pos:position pos:line="31" pos:column="37"/></name> <name pos:line="31" pos:column="38">cache_entry<pos:position pos:line="31" pos:column="49"/></name></name> <modifier pos:line="31" pos:column="50">*<pos:position pos:line="31" pos:column="51"/></modifier></type><name pos:line="31" pos:column="51">ce<pos:position pos:line="31" pos:column="53"/></name> <init pos:line="31" pos:column="54">= <expr><name><name pos:line="31" pos:column="56">active_cache<pos:position pos:line="31" pos:column="68"/></name><index pos:line="31" pos:column="68">[<expr><name pos:line="31" pos:column="69">i<pos:position pos:line="31" pos:column="70"/></name></expr>]<pos:position pos:line="31" pos:column="71"/></index></name></expr></init></decl>;<pos:position pos:line="31" pos:column="72"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="32" pos:column="25">struct<pos:position pos:line="32" pos:column="31"/></name> <name pos:line="32" pos:column="32">stat<pos:position pos:line="32" pos:column="36"/></name></name></type> <name pos:line="32" pos:column="37">st<pos:position pos:line="32" pos:column="39"/></name></decl>;<pos:position pos:line="32" pos:column="40"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">int<pos:position pos:line="33" pos:column="28"/></name></type> <name pos:line="33" pos:column="29">err<pos:position pos:line="33" pos:column="32"/></name></decl>;<pos:position pos:line="33" pos:column="33"/></decl_stmt>
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><operator pos:line="34" pos:column="29">(<pos:position pos:line="34" pos:column="30"/></operator><name><name pos:line="34" pos:column="30">dir<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">flags<pos:position pos:line="34" pos:column="40"/></name></name> <operator pos:line="34" pos:column="41">&amp;<pos:position pos:line="34" pos:column="46"/></operator> <name pos:line="34" pos:column="43">DIR_SHOW_IGNORED<pos:position pos:line="34" pos:column="59"/></name><operator pos:line="34" pos:column="59">)<pos:position pos:line="34" pos:column="60"/></operator> <operator pos:line="34" pos:column="61">&amp;&amp;<pos:position pos:line="34" pos:column="71"/></operator>
			    <operator pos:line="35" pos:column="29">!<pos:position pos:line="35" pos:column="30"/></operator><call><name pos:line="35" pos:column="30">ce_excluded<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">dir<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">ce<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51">
				<block type="pseudo"><continue pos:line="36" pos:column="33">continue;<pos:position pos:line="36" pos:column="42"/></continue></block></then></if>
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name><name pos:line="37" pos:column="29">ce<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">ce_flags<pos:position pos:line="37" pos:column="41"/></name></name> <operator pos:line="37" pos:column="42">&amp;<pos:position pos:line="37" pos:column="47"/></operator> <name pos:line="37" pos:column="44">CE_UPDATE<pos:position pos:line="37" pos:column="53"/></name></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54">
				<block type="pseudo"><continue pos:line="38" pos:column="33">continue;<pos:position pos:line="38" pos:column="42"/></continue></block></then></if>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><call><name pos:line="39" pos:column="29">ce_skip_worktree<pos:position pos:line="39" pos:column="45"/></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">ce<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50">
				<block type="pseudo"><continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="41" pos:column="25">err<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <call><name pos:line="41" pos:column="31">lstat<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name><name pos:line="41" pos:column="37">ce<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">name<pos:position pos:line="41" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="47">&amp;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="48">st<pos:position pos:line="41" pos:column="50"/></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="52"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><name pos:line="42" pos:column="29">show_deleted<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">&amp;&amp;<pos:position pos:line="42" pos:column="52"/></operator> <name pos:line="42" pos:column="45">err<pos:position pos:line="42" pos:column="48"/></name></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="33">show_ce_entry<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">tag_removed<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">ce<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt></block></then></if>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">show_modified<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">&amp;&amp;<pos:position pos:line="44" pos:column="53"/></operator> <call><name pos:line="44" pos:column="46">ce_modified<pos:position pos:line="44" pos:column="57"/></name><argument_list pos:line="44" pos:column="57">(<argument><expr><name pos:line="44" pos:column="58">ce<pos:position pos:line="44" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="62">&amp;<pos:position pos:line="44" pos:column="67"/></operator><name pos:line="44" pos:column="63">st<pos:position pos:line="44" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="67">0<pos:position pos:line="44" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="70"/></condition><then pos:line="44" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="33">show_ce_entry<pos:position pos:line="45" pos:column="46"/></name><argument_list pos:line="45" pos:column="46">(<argument><expr><name pos:line="45" pos:column="47">tag_modified<pos:position pos:line="45" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="61">ce<pos:position pos:line="45" pos:column="63"/></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt></block></then></if>
		}<pos:position pos:line="46" pos:column="18"/></block></for>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

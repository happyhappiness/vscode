<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3505_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">display_cell<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">column_data<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">initial_width<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">empty_cell<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">x<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">y<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">newline<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">XY2LINEAR<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">data<pos:position pos:line="6" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">x<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="32">y<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">&gt;=<pos:position pos:line="7" pos:column="20"/></operator> <name><name pos:line="7" pos:column="18">data<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">list<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">nr<pos:position pos:line="7" pos:column="32"/></name></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">len<pos:position pos:line="10" pos:column="24"/></name><index pos:line="10" pos:column="24">[<expr><name pos:line="10" pos:column="25">i<pos:position pos:line="10" pos:column="26"/></name></expr>]<pos:position pos:line="10" pos:column="27"/></index></name></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">data<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">width<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">&amp;&amp;<pos:position pos:line="11" pos:column="35"/></operator> <name><name pos:line="11" pos:column="28">data<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">len<pos:position pos:line="11" pos:column="37"/></name><index pos:line="11" pos:column="37">[<expr><name><name pos:line="11" pos:column="38">data<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">width<pos:position pos:line="11" pos:column="49"/></name><index pos:line="11" pos:column="49">[<expr><name pos:line="11" pos:column="50">x<pos:position pos:line="11" pos:column="51"/></name></expr>]<pos:position pos:line="11" pos:column="52"/></index></name></expr>]<pos:position pos:line="11" pos:column="53"/></index></name> <operator pos:line="11" pos:column="54">&lt;<pos:position pos:line="11" pos:column="58"/></operator> <name pos:line="11" pos:column="56">initial_width<pos:position pos:line="11" pos:column="69"/></name></expr>)<pos:position pos:line="11" pos:column="70"/></condition><then pos:line="11" pos:column="70"> <block pos:line="11" pos:column="71">{
		<comment type="block" pos:line="12" pos:column="17">/*
		 * empty_cell has initial_width chars, if real column
		 * is narrower, increase len a bit so we fill less
		 * space.
		 */</comment>
		<expr_stmt><expr><name pos:line="17" pos:column="17">len<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">+=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">initial_width<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">-<pos:position pos:line="17" pos:column="39"/></operator> <name><name pos:line="17" pos:column="40">data<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">len<pos:position pos:line="17" pos:column="49"/></name><index pos:line="17" pos:column="49">[<expr><name><name pos:line="17" pos:column="50">data<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">width<pos:position pos:line="17" pos:column="61"/></name><index pos:line="17" pos:column="61">[<expr><name pos:line="17" pos:column="62">x<pos:position pos:line="17" pos:column="63"/></name></expr>]<pos:position pos:line="17" pos:column="64"/></index></name></expr>]<pos:position pos:line="17" pos:column="65"/></index></name></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">len<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">-=<pos:position pos:line="18" pos:column="23"/></operator> <name><name pos:line="18" pos:column="24">data<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">opts<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">.<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">padding<pos:position pos:line="18" pos:column="42"/></name></name></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">COL_LAYOUT<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name><name pos:line="21" pos:column="24">data<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">colopts<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call> <operator pos:line="21" pos:column="39">==<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="42">COL_COLUMN<pos:position pos:line="21" pos:column="52"/></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">newline<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <name pos:line="22" pos:column="27">i<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">+<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="31">data<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">rows<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">&gt;=<pos:position pos:line="22" pos:column="47"/></operator> <name><name pos:line="22" pos:column="45">data<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">list<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-&gt;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="57">nr<pos:position pos:line="22" pos:column="59"/></name></name></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt></block></then>
	<else pos:line="23" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">newline<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">x<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">==<pos:position pos:line="24" pos:column="31"/></operator> <name><name pos:line="24" pos:column="32">data<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">cols<pos:position pos:line="24" pos:column="42"/></name></name> <operator pos:line="24" pos:column="43">-<pos:position pos:line="24" pos:column="44"/></operator> <literal type="number" pos:line="24" pos:column="45">1<pos:position pos:line="24" pos:column="46"/></literal> <operator pos:line="24" pos:column="47">||<pos:position pos:line="24" pos:column="49"/></operator> <name pos:line="24" pos:column="50">i<pos:position pos:line="24" pos:column="51"/></name> <operator pos:line="24" pos:column="52">==<pos:position pos:line="24" pos:column="54"/></operator> <name><name pos:line="24" pos:column="55">data<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">-&gt;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="61">list<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">-&gt;<pos:position pos:line="24" pos:column="70"/></operator><name pos:line="24" pos:column="67">nr<pos:position pos:line="24" pos:column="69"/></name></name> <operator pos:line="24" pos:column="70">-<pos:position pos:line="24" pos:column="71"/></operator> <literal type="number" pos:line="24" pos:column="72">1<pos:position pos:line="24" pos:column="73"/></literal></expr>;<pos:position pos:line="24" pos:column="74"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">printf<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="string" pos:line="26" pos:column="16">"%s%s%s"<pos:position pos:line="26" pos:column="24"/></literal></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="27" pos:column="16">x<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="21">0<pos:position pos:line="27" pos:column="22"/></literal></expr> ?<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24"> <expr><name><name pos:line="27" pos:column="25">data<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">opts<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">.<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">indent<pos:position pos:line="27" pos:column="42"/></name></name></expr> <pos:position pos:line="27" pos:column="43"/></then><else pos:line="27" pos:column="43">: <expr><literal type="string" pos:line="27" pos:column="45">""<pos:position pos:line="27" pos:column="47"/></literal></expr></else></ternary></expr></argument>,
	       <argument><expr><name><name pos:line="28" pos:column="16">data<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">-&gt;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="22">list<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">items<pos:position pos:line="28" pos:column="33"/></name><index pos:line="28" pos:column="33">[<expr><name pos:line="28" pos:column="34">i<pos:position pos:line="28" pos:column="35"/></name></expr>]<pos:position pos:line="28" pos:column="36"/></index></name><operator pos:line="28" pos:column="36">.<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">string<pos:position pos:line="28" pos:column="43"/></name></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="29" pos:column="16">newline<pos:position pos:line="29" pos:column="23"/></name></expr> ?<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25"> <expr><name><name pos:line="29" pos:column="26">data<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">opts<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">nl<pos:position pos:line="29" pos:column="39"/></name></name></expr> <pos:position pos:line="29" pos:column="40"/></then><else pos:line="29" pos:column="40">: <expr><name pos:line="29" pos:column="42">empty_cell<pos:position pos:line="29" pos:column="52"/></name> <operator pos:line="29" pos:column="53">+<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="55">len<pos:position pos:line="29" pos:column="58"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

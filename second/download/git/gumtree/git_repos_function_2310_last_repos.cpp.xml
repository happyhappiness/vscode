<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2310_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">for_each_file_in_obj_subdir<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">unsigned<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">subdir_nr<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">strbuf<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">path<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="3" pos:column="33">each_loose_object_fn<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">obj_cb<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="4" pos:column="33">each_loose_cruft_fn<pos:position pos:line="4" pos:column="52"/></name></type> <name pos:line="4" pos:column="53">cruft_cb<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="5" pos:column="33">each_loose_subdir_fn<pos:position pos:line="5" pos:column="53"/></name></type> <name pos:line="5" pos:column="54">subdir_cb<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="6" pos:column="33">void<pos:position pos:line="6" pos:column="37"/></name> <modifier pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></modifier></type><name pos:line="6" pos:column="39">data<pos:position pos:line="6" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="44"/></parameter_list>
<block pos:line="7" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">origlen<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">baselen<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">DIR<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">dir<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">dirent<pos:position pos:line="10" pos:column="22"/></name></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">de<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">r<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">subdir_nr<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&gt;<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="25">0xff<pos:position pos:line="13" pos:column="29"/></literal></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">BUG<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"invalid loose object subdirectory: %x"<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">subdir_nr<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">origlen<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name><name pos:line="16" pos:column="19">path<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">len<pos:position pos:line="16" pos:column="28"/></name></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_complete<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">path<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="31">'/'<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">strbuf_addf<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">path<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="27">"%02x"<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">subdir_nr<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">baselen<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name><name pos:line="19" pos:column="19">path<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">len<pos:position pos:line="19" pos:column="28"/></name></name></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="21" pos:column="9">dir<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">opendir<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name><name pos:line="21" pos:column="23">path<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">buf<pos:position pos:line="21" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">dir<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18"> <block pos:line="22" pos:column="19">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">errno<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">!=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">ENOENT<pos:position pos:line="23" pos:column="36"/></name></expr>)<pos:position pos:line="23" pos:column="37"/></condition><then pos:line="23" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">r<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <call><name pos:line="24" pos:column="29">error_errno<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><literal type="string" pos:line="24" pos:column="41">"unable to open %s"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="62">path<pos:position pos:line="24" pos:column="66"/></name><operator pos:line="24" pos:column="66">-&gt;<pos:position pos:line="24" pos:column="71"/></operator><name pos:line="24" pos:column="68">buf<pos:position pos:line="24" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_setlen<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">path<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">origlen<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">r<pos:position pos:line="26" pos:column="25"/></name></expr>;<pos:position pos:line="26" pos:column="26"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">de<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <call><name pos:line="29" pos:column="22">readdir<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">dir<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call><operator pos:line="29" pos:column="34">)<pos:position pos:line="29" pos:column="35"/></operator></expr>)<pos:position pos:line="29" pos:column="36"/></condition> <block pos:line="29" pos:column="37">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">is_dot_or_dotdot<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name><name pos:line="30" pos:column="38">de<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">d_name<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50">
			<block type="pseudo"><continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strbuf_setlen<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">path<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">baselen<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_addf<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">path<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="35">"/%s"<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="42">de<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">d_name<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">strlen<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name><name pos:line="36" pos:column="28">de<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">d_name<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call> <operator pos:line="36" pos:column="40">==<pos:position pos:line="36" pos:column="42"/></operator> <name pos:line="36" pos:column="43">GIT_SHA1_HEXSZ<pos:position pos:line="36" pos:column="57"/></name> <operator pos:line="36" pos:column="58">-<pos:position pos:line="36" pos:column="59"/></operator> <literal type="number" pos:line="36" pos:column="60">2<pos:position pos:line="36" pos:column="61"/></literal></expr>)<pos:position pos:line="36" pos:column="62"/></condition><then pos:line="36" pos:column="62">  <block pos:line="36" pos:column="64">{
			<decl_stmt><decl><type><name pos:line="37" pos:column="25">char<pos:position pos:line="37" pos:column="29"/></name></type> <name><name pos:line="37" pos:column="30">hex<pos:position pos:line="37" pos:column="33"/></name><index pos:line="37" pos:column="33">[<expr><name pos:line="37" pos:column="34">GIT_MAX_HEXSZ<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">+<pos:position pos:line="37" pos:column="48"/></operator><literal type="number" pos:line="37" pos:column="48">1<pos:position pos:line="37" pos:column="49"/></literal></expr>]<pos:position pos:line="37" pos:column="50"/></index></name></decl>;<pos:position pos:line="37" pos:column="51"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="38" pos:column="25">struct<pos:position pos:line="38" pos:column="31"/></name> <name pos:line="38" pos:column="32">object_id<pos:position pos:line="38" pos:column="41"/></name></name></type> <name pos:line="38" pos:column="42">oid<pos:position pos:line="38" pos:column="45"/></name></decl>;<pos:position pos:line="38" pos:column="46"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="40" pos:column="25">xsnprintf<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">hex<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="40">sizeof<argument_list pos:line="40" pos:column="46">(<argument><expr><name pos:line="40" pos:column="47">hex<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="53">"%02x%s"<pos:position pos:line="40" pos:column="61"/></literal></expr></argument>,
				  <argument><expr><name pos:line="41" pos:column="35">subdir_nr<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="46">de<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">-&gt;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="50">d_name<pos:position pos:line="41" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">!<pos:position pos:line="42" pos:column="30"/></operator><call><name pos:line="42" pos:column="30">get_oid_hex<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">hex<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="47">&amp;<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="48">oid<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53"> <block pos:line="42" pos:column="54">{
				<if pos:line="43" pos:column="33">if <condition pos:line="43" pos:column="36">(<expr><name pos:line="43" pos:column="37">obj_cb<pos:position pos:line="43" pos:column="43"/></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
					<expr_stmt><expr><name pos:line="44" pos:column="41">r<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">=<pos:position pos:line="44" pos:column="44"/></operator> <call><name pos:line="44" pos:column="45">obj_cb<pos:position pos:line="44" pos:column="51"/></name><argument_list pos:line="44" pos:column="51">(<argument><expr><operator pos:line="44" pos:column="52">&amp;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="53">oid<pos:position pos:line="44" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="58">path<pos:position pos:line="44" pos:column="62"/></name><operator pos:line="44" pos:column="62">-&gt;<pos:position pos:line="44" pos:column="67"/></operator><name pos:line="44" pos:column="64">buf<pos:position pos:line="44" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="69">data<pos:position pos:line="44" pos:column="73"/></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="75"/></expr_stmt>
					<if pos:line="45" pos:column="41">if <condition pos:line="45" pos:column="44">(<expr><name pos:line="45" pos:column="45">r<pos:position pos:line="45" pos:column="46"/></name></expr>)<pos:position pos:line="45" pos:column="47"/></condition><then pos:line="45" pos:column="47">
						<block type="pseudo"><break pos:line="46" pos:column="49">break;<pos:position pos:line="46" pos:column="55"/></break></block></then></if>
				}<pos:position pos:line="47" pos:column="34"/></block></then></if>
				<continue pos:line="48" pos:column="33">continue;<pos:position pos:line="48" pos:column="42"/></continue>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">cruft_cb<pos:position pos:line="52" pos:column="29"/></name></expr>)<pos:position pos:line="52" pos:column="30"/></condition><then pos:line="52" pos:column="30"> <block pos:line="52" pos:column="31">{
			<expr_stmt><expr><name pos:line="53" pos:column="25">r<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">=<pos:position pos:line="53" pos:column="28"/></operator> <call><name pos:line="53" pos:column="29">cruft_cb<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name><name pos:line="53" pos:column="38">de<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">-&gt;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="42">d_name<pos:position pos:line="53" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="50">path<pos:position pos:line="53" pos:column="54"/></name><operator pos:line="53" pos:column="54">-&gt;<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="56">buf<pos:position pos:line="53" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="61">data<pos:position pos:line="53" pos:column="65"/></name></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><name pos:line="54" pos:column="29">r<pos:position pos:line="54" pos:column="30"/></name></expr>)<pos:position pos:line="54" pos:column="31"/></condition><then pos:line="54" pos:column="31">
				<block type="pseudo"><break pos:line="55" pos:column="33">break;<pos:position pos:line="55" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
	}<pos:position pos:line="57" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">closedir<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">dir<pos:position pos:line="58" pos:column="21"/></name></expr></argument>)<pos:position pos:line="58" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">strbuf_setlen<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">path<pos:position pos:line="60" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="29">baselen<pos:position pos:line="60" pos:column="36"/></name></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">r<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">&amp;&amp;<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="19">subdir_cb<pos:position pos:line="61" pos:column="28"/></name></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="17">r<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <call><name pos:line="62" pos:column="21">subdir_cb<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name pos:line="62" pos:column="31">subdir_nr<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="42">path<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">-&gt;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="48">buf<pos:position pos:line="62" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">data<pos:position pos:line="62" pos:column="57"/></name></expr></argument>)<pos:position pos:line="62" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">strbuf_setlen<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">path<pos:position pos:line="64" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="29">origlen<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>

	<return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">r<pos:position pos:line="66" pos:column="17"/></name></expr>;<pos:position pos:line="66" pos:column="18"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

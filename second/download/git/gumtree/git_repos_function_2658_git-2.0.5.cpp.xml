<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2658_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">execute<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">line<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">packet_buffer<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">pktlen<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">len<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">i<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">addr<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">getenv<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><literal type="string" pos:line="5" pos:column="29">"REMOTE_ADDR"<pos:position pos:line="5" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr></init></decl>, <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="46">port<pos:position pos:line="5" pos:column="50"/></name> <init pos:line="5" pos:column="51">= <expr><call><name pos:line="5" pos:column="53">getenv<pos:position pos:line="5" pos:column="59"/></name><argument_list pos:line="5" pos:column="59">(<argument><expr><literal type="string" pos:line="5" pos:column="60">"REMOTE_PORT"<pos:position pos:line="5" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="75"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">addr<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">loginfo<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><literal type="string" pos:line="8" pos:column="25">"Connection from %s:%s"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">addr<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">port<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">alarm<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><ternary><condition><expr><name pos:line="10" pos:column="15">init_timeout<pos:position pos:line="10" pos:column="27"/></name></expr> ?<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <expr><name pos:line="10" pos:column="30">init_timeout<pos:position pos:line="10" pos:column="42"/></name></expr> <pos:position pos:line="10" pos:column="43"/></then><else pos:line="10" pos:column="43">: <expr><name pos:line="10" pos:column="45">timeout<pos:position pos:line="10" pos:column="52"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">pktlen<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <call><name pos:line="11" pos:column="18">packet_read<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">NULL<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">NULL<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">packet_buffer<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="60">sizeof<argument_list pos:line="11" pos:column="66">(<argument><expr><name pos:line="11" pos:column="67">packet_buffer<pos:position pos:line="11" pos:column="80"/></name></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="83">0<pos:position pos:line="11" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="86"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">alarm<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strlen<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">line<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">pktlen<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">!=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">len<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">loginfo<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><literal type="string" pos:line="16" pos:column="25">"Extended attributes (%d bytes) exist &lt;%.*s&gt;"<pos:position pos:line="16" pos:column="76"/></literal></expr></argument>,
			<argument><expr><operator pos:line="17" pos:column="25">(<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">int<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">pktlen<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">-<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">len<pos:position pos:line="17" pos:column="43"/></name></expr></argument>,
			<argument><expr><operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">int<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">pktlen<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">-<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="40">len<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">line<pos:position pos:line="18" pos:column="49"/></name> <operator pos:line="18" pos:column="50">+<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">len<pos:position pos:line="18" pos:column="55"/></name> <operator pos:line="18" pos:column="56">+<pos:position pos:line="18" pos:column="57"/></operator> <literal type="number" pos:line="18" pos:column="58">1<pos:position pos:line="18" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">len<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&amp;&amp;<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="20">line<pos:position pos:line="19" pos:column="24"/></name><index pos:line="19" pos:column="24">[<expr><name pos:line="19" pos:column="25">len<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-<pos:position pos:line="19" pos:column="29"/></operator><literal type="number" pos:line="19" pos:column="29">1<pos:position pos:line="19" pos:column="30"/></literal></expr>]<pos:position pos:line="19" pos:column="31"/></index></name> <operator pos:line="19" pos:column="32">==<pos:position pos:line="19" pos:column="34"/></operator> <literal type="char" pos:line="19" pos:column="35">'\n'<pos:position pos:line="19" pos:column="39"/></literal></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <block pos:line="19" pos:column="41">{
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">line<pos:position pos:line="20" pos:column="21"/></name><index pos:line="20" pos:column="21">[<expr><operator pos:line="20" pos:column="22">--<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">len<pos:position pos:line="20" pos:column="27"/></name></expr>]<pos:position pos:line="20" pos:column="28"/></index></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">pktlen<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">--<pos:position pos:line="21" pos:column="25"/></operator></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">free<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">hostname<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">canon_hostname<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">free<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">ip_address<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">free<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">tcp_port<pos:position pos:line="27" pos:column="22"/></name></expr></argument>)<pos:position pos:line="27" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">hostname<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">canon_hostname<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">=<pos:position pos:line="28" pos:column="36"/></operator> <name pos:line="28" pos:column="37">ip_address<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">=<pos:position pos:line="28" pos:column="49"/></operator> <name pos:line="28" pos:column="50">tcp_port<pos:position pos:line="28" pos:column="58"/></name> <operator pos:line="28" pos:column="59">=<pos:position pos:line="28" pos:column="60"/></operator> <name pos:line="28" pos:column="61">NULL<pos:position pos:line="28" pos:column="65"/></name></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">len<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">!=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">pktlen<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">parse_host_arg<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">line<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">+<pos:position pos:line="31" pos:column="38"/></operator> <name pos:line="31" pos:column="39">len<pos:position pos:line="31" pos:column="42"/></name> <operator pos:line="31" pos:column="43">+<pos:position pos:line="31" pos:column="44"/></operator> <literal type="number" pos:line="31" pos:column="45">1<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">pktlen<pos:position pos:line="31" pos:column="54"/></name> <operator pos:line="31" pos:column="55">-<pos:position pos:line="31" pos:column="56"/></operator> <name pos:line="31" pos:column="57">len<pos:position pos:line="31" pos:column="60"/></name> <operator pos:line="31" pos:column="61">-<pos:position pos:line="31" pos:column="62"/></operator> <literal type="number" pos:line="31" pos:column="63">1<pos:position pos:line="31" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt></block></then></if>

	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;<pos:position pos:line="33" pos:column="27"/></operator> <call><name pos:line="33" pos:column="25">ARRAY_SIZE<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">daemon_service<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></condition> <incr><expr><name pos:line="33" pos:column="53">i<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">++<pos:position pos:line="33" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="57"/></control> <block pos:line="33" pos:column="58">{
		<decl_stmt><decl><type><name><name pos:line="34" pos:column="17">struct<pos:position pos:line="34" pos:column="23"/></name> <name pos:line="34" pos:column="24">daemon_service<pos:position pos:line="34" pos:column="38"/></name></name> <modifier pos:line="34" pos:column="39">*<pos:position pos:line="34" pos:column="40"/></modifier></type><name pos:line="34" pos:column="40">s<pos:position pos:line="34" pos:column="41"/></name> <init pos:line="34" pos:column="42">= <expr><operator pos:line="34" pos:column="44">&amp;<pos:position pos:line="34" pos:column="49"/></operator><operator pos:line="34" pos:column="45">(<pos:position pos:line="34" pos:column="46"/></operator><name><name pos:line="34" pos:column="46">daemon_service<pos:position pos:line="34" pos:column="60"/></name><index pos:line="34" pos:column="60">[<expr><name pos:line="34" pos:column="61">i<pos:position pos:line="34" pos:column="62"/></name></expr>]<pos:position pos:line="34" pos:column="63"/></index></name><operator pos:line="34" pos:column="63">)<pos:position pos:line="34" pos:column="64"/></operator></expr></init></decl>;<pos:position pos:line="34" pos:column="65"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">namelen<pos:position pos:line="35" pos:column="28"/></name> <init pos:line="35" pos:column="29">= <expr><call><name pos:line="35" pos:column="31">strlen<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name><name pos:line="35" pos:column="38">s<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">name<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="47"/></decl_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">starts_with<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">line<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="39">"git-"<pos:position pos:line="36" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call> <operator pos:line="36" pos:column="47">&amp;&amp;<pos:position pos:line="36" pos:column="57"/></operator>
		    <operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><call><name pos:line="37" pos:column="22">strncmp<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name><name pos:line="37" pos:column="30">s<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">name<pos:position pos:line="37" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">line<pos:position pos:line="37" pos:column="43"/></name> <operator pos:line="37" pos:column="44">+<pos:position pos:line="37" pos:column="45"/></operator> <literal type="number" pos:line="37" pos:column="46">4<pos:position pos:line="37" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="49">namelen<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call> <operator pos:line="37" pos:column="58">&amp;&amp;<pos:position pos:line="37" pos:column="68"/></operator>
		    <name><name pos:line="38" pos:column="21">line<pos:position pos:line="38" pos:column="25"/></name><index pos:line="38" pos:column="25">[<expr><name pos:line="38" pos:column="26">namelen<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">+<pos:position pos:line="38" pos:column="35"/></operator> <literal type="number" pos:line="38" pos:column="36">4<pos:position pos:line="38" pos:column="37"/></literal></expr>]<pos:position pos:line="38" pos:column="38"/></index></name> <operator pos:line="38" pos:column="39">==<pos:position pos:line="38" pos:column="41"/></operator> <literal type="char" pos:line="38" pos:column="42">' '<pos:position pos:line="38" pos:column="45"/></literal></expr>)<pos:position pos:line="38" pos:column="46"/></condition><then pos:line="38" pos:column="46"> <block pos:line="38" pos:column="47">{
			<comment type="block" pos:line="39" pos:column="25">/*
			 * Note: The directory here is probably context sensitive,
			 * and might depend on the actual service being performed.
			 */</comment>
			<return pos:line="43" pos:column="25">return <expr><call><name pos:line="43" pos:column="32">run_service<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><name pos:line="43" pos:column="44">line<pos:position pos:line="43" pos:column="48"/></name> <operator pos:line="43" pos:column="49">+<pos:position pos:line="43" pos:column="50"/></operator> <name pos:line="43" pos:column="51">namelen<pos:position pos:line="43" pos:column="58"/></name> <operator pos:line="43" pos:column="59">+<pos:position pos:line="43" pos:column="60"/></operator> <literal type="number" pos:line="43" pos:column="61">5<pos:position pos:line="43" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="64">s<pos:position pos:line="43" pos:column="65"/></name></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="67"/></return>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">logerror<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><literal type="string" pos:line="47" pos:column="18">"Protocol error: '%s'"<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">line<pos:position pos:line="47" pos:column="46"/></name></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
	<return pos:line="48" pos:column="9">return <expr><operator pos:line="48" pos:column="16">-<pos:position pos:line="48" pos:column="17"/></operator><literal type="number" pos:line="48" pos:column="17">1<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

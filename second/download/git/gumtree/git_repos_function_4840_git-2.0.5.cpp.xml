<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4840_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_mailsplit<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">argc<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">prefix<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">nr<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">nr_prec<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><literal type="number" pos:line="3" pos:column="31">4<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="34">num<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">= <expr><literal type="number" pos:line="3" pos:column="40">0<pos:position pos:line="3" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">allow_bare<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">dir<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">argp<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><specifier pos:line="7" pos:column="16">const<pos:position pos:line="7" pos:column="21"/></specifier> <name pos:line="7" pos:column="22">char<pos:position pos:line="7" pos:column="26"/></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name><name pos:line="7" pos:column="28">stdin_only<pos:position pos:line="7" pos:column="38"/></name><index pos:line="7" pos:column="38">[]<pos:position pos:line="7" pos:column="40"/></index></name> <init pos:line="7" pos:column="41">= <expr><block pos:line="7" pos:column="43">{ <expr><literal type="string" pos:line="7" pos:column="45">"-"<pos:position pos:line="7" pos:column="48"/></literal></expr>, <expr><name pos:line="7" pos:column="50">NULL<pos:position pos:line="7" pos:column="54"/></name></expr> }<pos:position pos:line="7" pos:column="56"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">argp<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">argv<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">+<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></init> <condition><expr><operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">argp<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></condition> <incr><expr><name pos:line="9" pos:column="36">argp<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="43"/></control> <block pos:line="9" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">arg<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><operator pos:line="10" pos:column="35">*<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">argp<pos:position pos:line="10" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="41"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">arg<pos:position pos:line="12" pos:column="24"/></name><index pos:line="12" pos:column="24">[<expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>]<pos:position pos:line="12" pos:column="27"/></index></name> <operator pos:line="12" pos:column="28">!=<pos:position pos:line="12" pos:column="30"/></operator> <literal type="char" pos:line="12" pos:column="31">'-'<pos:position pos:line="12" pos:column="34"/></literal></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
			<block type="pseudo"><break pos:line="13" pos:column="25">break;<pos:position pos:line="13" pos:column="31"/></break></block></then></if>
		<comment type="block" pos:line="14" pos:column="17">/* do flags here */</comment>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">( <expr><name><name pos:line="15" pos:column="22">arg<pos:position pos:line="15" pos:column="25"/></name><index pos:line="15" pos:column="25">[<expr><literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal></expr>]<pos:position pos:line="15" pos:column="28"/></index></name> <operator pos:line="15" pos:column="29">==<pos:position pos:line="15" pos:column="31"/></operator> <literal type="char" pos:line="15" pos:column="32">'d'<pos:position pos:line="15" pos:column="35"/></literal></expr> )<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37"> <block pos:line="15" pos:column="38">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">nr_prec<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <call><name pos:line="16" pos:column="35">strtol<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">arg<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">+<pos:position pos:line="16" pos:column="46"/></operator><literal type="number" pos:line="16" pos:column="46">2<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">NULL<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="55">10<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">nr_prec<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">&lt;<pos:position pos:line="17" pos:column="41"/></operator> <literal type="number" pos:line="17" pos:column="39">3<pos:position pos:line="17" pos:column="40"/></literal> <operator pos:line="17" pos:column="41">||<pos:position pos:line="17" pos:column="43"/></operator> <literal type="number" pos:line="17" pos:column="44">10<pos:position pos:line="17" pos:column="46"/></literal> <operator pos:line="17" pos:column="47">&lt;=<pos:position pos:line="17" pos:column="52"/></operator> <name pos:line="17" pos:column="50">nr_prec<pos:position pos:line="17" pos:column="57"/></name></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="33">usage<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">git_mailsplit_usage<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt></block></then></if>
			<continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <elseif pos:line="20" pos:column="19">else <if pos:line="20" pos:column="24">if <condition pos:line="20" pos:column="27">( <expr><name><name pos:line="20" pos:column="29">arg<pos:position pos:line="20" pos:column="32"/></name><index pos:line="20" pos:column="32">[<expr><literal type="number" pos:line="20" pos:column="33">1<pos:position pos:line="20" pos:column="34"/></literal></expr>]<pos:position pos:line="20" pos:column="35"/></index></name> <operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator> <literal type="char" pos:line="20" pos:column="39">'f'<pos:position pos:line="20" pos:column="42"/></literal></expr> )<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">nr<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <call><name pos:line="21" pos:column="30">strtol<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">arg<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">+<pos:position pos:line="21" pos:column="41"/></operator><literal type="number" pos:line="21" pos:column="41">2<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">NULL<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="50">10<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if></elseif> <elseif pos:line="22" pos:column="19">else <if pos:line="22" pos:column="24">if <condition pos:line="22" pos:column="27">( <expr><name><name pos:line="22" pos:column="29">arg<pos:position pos:line="22" pos:column="32"/></name><index pos:line="22" pos:column="32">[<expr><literal type="number" pos:line="22" pos:column="33">1<pos:position pos:line="22" pos:column="34"/></literal></expr>]<pos:position pos:line="22" pos:column="35"/></index></name> <operator pos:line="22" pos:column="36">==<pos:position pos:line="22" pos:column="38"/></operator> <literal type="char" pos:line="22" pos:column="39">'h'<pos:position pos:line="22" pos:column="42"/></literal></expr> )<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44"> <block pos:line="22" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">usage<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">git_mailsplit_usage<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif> <elseif pos:line="24" pos:column="19">else <if pos:line="24" pos:column="24">if <condition pos:line="24" pos:column="27">( <expr><name><name pos:line="24" pos:column="29">arg<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><literal type="number" pos:line="24" pos:column="33">1<pos:position pos:line="24" pos:column="34"/></literal></expr>]<pos:position pos:line="24" pos:column="35"/></index></name> <operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator> <literal type="char" pos:line="24" pos:column="39">'b'<pos:position pos:line="24" pos:column="42"/></literal> <operator pos:line="24" pos:column="43">&amp;&amp;<pos:position pos:line="24" pos:column="53"/></operator> <operator pos:line="24" pos:column="46">!<pos:position pos:line="24" pos:column="47"/></operator><name><name pos:line="24" pos:column="47">arg<pos:position pos:line="24" pos:column="50"/></name><index pos:line="24" pos:column="50">[<expr><literal type="number" pos:line="24" pos:column="51">2<pos:position pos:line="24" pos:column="52"/></literal></expr>]<pos:position pos:line="24" pos:column="53"/></index></name></expr> )<pos:position pos:line="24" pos:column="55"/></condition><then pos:line="24" pos:column="55"> <block pos:line="24" pos:column="56">{
			<expr_stmt><expr><name pos:line="25" pos:column="25">allow_bare<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">=<pos:position pos:line="25" pos:column="37"/></operator> <literal type="number" pos:line="25" pos:column="38">1<pos:position pos:line="25" pos:column="39"/></literal></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if></elseif> <elseif pos:line="26" pos:column="19">else <if pos:line="26" pos:column="24">if <condition pos:line="26" pos:column="27">(<expr><operator pos:line="26" pos:column="28">!<pos:position pos:line="26" pos:column="29"/></operator><call><name pos:line="26" pos:column="29">strcmp<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">arg<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="41">"--keep-cr"<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">keep_cr<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">=<pos:position pos:line="27" pos:column="34"/></operator> <literal type="number" pos:line="27" pos:column="35">1<pos:position pos:line="27" pos:column="36"/></literal></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if></elseif> <elseif pos:line="28" pos:column="19">else <if pos:line="28" pos:column="24">if <condition pos:line="28" pos:column="27">( <expr><name><name pos:line="28" pos:column="29">arg<pos:position pos:line="28" pos:column="32"/></name><index pos:line="28" pos:column="32">[<expr><literal type="number" pos:line="28" pos:column="33">1<pos:position pos:line="28" pos:column="34"/></literal></expr>]<pos:position pos:line="28" pos:column="35"/></index></name> <operator pos:line="28" pos:column="36">==<pos:position pos:line="28" pos:column="38"/></operator> <literal type="char" pos:line="28" pos:column="39">'o'<pos:position pos:line="28" pos:column="42"/></literal> <operator pos:line="28" pos:column="43">&amp;&amp;<pos:position pos:line="28" pos:column="53"/></operator> <name><name pos:line="28" pos:column="46">arg<pos:position pos:line="28" pos:column="49"/></name><index pos:line="28" pos:column="49">[<expr><literal type="number" pos:line="28" pos:column="50">2<pos:position pos:line="28" pos:column="51"/></literal></expr>]<pos:position pos:line="28" pos:column="52"/></index></name></expr> )<pos:position pos:line="28" pos:column="54"/></condition><then pos:line="28" pos:column="54"> <block pos:line="28" pos:column="55">{
			<expr_stmt><expr><name pos:line="29" pos:column="25">dir<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="31">arg<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">+<pos:position pos:line="29" pos:column="35"/></operator><literal type="number" pos:line="29" pos:column="35">2<pos:position pos:line="29" pos:column="36"/></literal></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if></elseif> <elseif pos:line="30" pos:column="19">else <if pos:line="30" pos:column="24">if <condition pos:line="30" pos:column="27">( <expr><name><name pos:line="30" pos:column="29">arg<pos:position pos:line="30" pos:column="32"/></name><index pos:line="30" pos:column="32">[<expr><literal type="number" pos:line="30" pos:column="33">1<pos:position pos:line="30" pos:column="34"/></literal></expr>]<pos:position pos:line="30" pos:column="35"/></index></name> <operator pos:line="30" pos:column="36">==<pos:position pos:line="30" pos:column="38"/></operator> <literal type="char" pos:line="30" pos:column="39">'-'<pos:position pos:line="30" pos:column="42"/></literal> <operator pos:line="30" pos:column="43">&amp;&amp;<pos:position pos:line="30" pos:column="53"/></operator> <operator pos:line="30" pos:column="46">!<pos:position pos:line="30" pos:column="47"/></operator><name><name pos:line="30" pos:column="47">arg<pos:position pos:line="30" pos:column="50"/></name><index pos:line="30" pos:column="50">[<expr><literal type="number" pos:line="30" pos:column="51">2<pos:position pos:line="30" pos:column="52"/></literal></expr>]<pos:position pos:line="30" pos:column="53"/></index></name></expr> )<pos:position pos:line="30" pos:column="55"/></condition><then pos:line="30" pos:column="55"> <block pos:line="30" pos:column="56">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">argp<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">++<pos:position pos:line="31" pos:column="31"/></operator></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>	<comment type="block" pos:line="31" pos:column="33">/* -- marks end of options */</comment>
			<break pos:line="32" pos:column="25">break;<pos:position pos:line="32" pos:column="31"/></break>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if></elseif> <else pos:line="33" pos:column="19">else <block pos:line="33" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">die<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><literal type="string" pos:line="34" pos:column="29">"unknown option: %s"<pos:position pos:line="34" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">arg<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></else></if>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">( <expr><operator pos:line="38" pos:column="14">!<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">dir<pos:position pos:line="38" pos:column="18"/></name></expr> )<pos:position pos:line="38" pos:column="20"/></condition><then pos:line="38" pos:column="20"> <block pos:line="38" pos:column="21">{
		<comment type="block" pos:line="39" pos:column="17">/* Backwards compatibility: if no -o specified, accept
		   &lt;mbox&gt; &lt;dir&gt; or just &lt;dir&gt; */</comment>
		<switch pos:line="41" pos:column="17">switch <condition pos:line="41" pos:column="24">(<expr><name pos:line="41" pos:column="25">argc<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">-<pos:position pos:line="41" pos:column="31"/></operator> <operator pos:line="41" pos:column="32">(<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">argp<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">argv<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">)<pos:position pos:line="41" pos:column="43"/></operator></expr>)<pos:position pos:line="41" pos:column="44"/></condition> <block pos:line="41" pos:column="45">{
		<case pos:line="42" pos:column="17">case <expr><literal type="number" pos:line="42" pos:column="22">1<pos:position pos:line="42" pos:column="23"/></literal></expr>:<pos:position pos:line="42" pos:column="24"/></case>
			<expr_stmt><expr><name pos:line="43" pos:column="25">dir<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <name><name pos:line="43" pos:column="31">argp<pos:position pos:line="43" pos:column="35"/></name><index pos:line="43" pos:column="35">[<expr><literal type="number" pos:line="43" pos:column="36">0<pos:position pos:line="43" pos:column="37"/></literal></expr>]<pos:position pos:line="43" pos:column="38"/></index></name></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="44" pos:column="25">argp<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="32">stdin_only<pos:position pos:line="44" pos:column="42"/></name></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
			<break pos:line="45" pos:column="25">break;<pos:position pos:line="45" pos:column="31"/></break>
		<case pos:line="46" pos:column="17">case <expr><literal type="number" pos:line="46" pos:column="22">2<pos:position pos:line="46" pos:column="23"/></literal></expr>:<pos:position pos:line="46" pos:column="24"/></case>
			<expr_stmt><expr><name><name pos:line="47" pos:column="25">stdin_only<pos:position pos:line="47" pos:column="35"/></name><index pos:line="47" pos:column="35">[<expr><literal type="number" pos:line="47" pos:column="36">0<pos:position pos:line="47" pos:column="37"/></literal></expr>]<pos:position pos:line="47" pos:column="38"/></index></name> <operator pos:line="47" pos:column="39">=<pos:position pos:line="47" pos:column="40"/></operator> <name><name pos:line="47" pos:column="41">argp<pos:position pos:line="47" pos:column="45"/></name><index pos:line="47" pos:column="45">[<expr><literal type="number" pos:line="47" pos:column="46">0<pos:position pos:line="47" pos:column="47"/></literal></expr>]<pos:position pos:line="47" pos:column="48"/></index></name></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="48" pos:column="25">dir<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <name><name pos:line="48" pos:column="31">argp<pos:position pos:line="48" pos:column="35"/></name><index pos:line="48" pos:column="35">[<expr><literal type="number" pos:line="48" pos:column="36">1<pos:position pos:line="48" pos:column="37"/></literal></expr>]<pos:position pos:line="48" pos:column="38"/></index></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">argp<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">=<pos:position pos:line="49" pos:column="31"/></operator> <name pos:line="49" pos:column="32">stdin_only<pos:position pos:line="49" pos:column="42"/></name></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt>
			<break pos:line="50" pos:column="25">break;<pos:position pos:line="50" pos:column="31"/></break>
		<default pos:line="51" pos:column="17">default:<pos:position pos:line="51" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">usage<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">git_mailsplit_usage<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></switch>
	}<pos:position pos:line="54" pos:column="10"/></block></then> <else pos:line="54" pos:column="11">else <block pos:line="54" pos:column="16">{
		<comment type="block" pos:line="55" pos:column="17">/* New usage: if no more argument, parse stdin */</comment>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">( <expr><operator pos:line="56" pos:column="22">!<pos:position pos:line="56" pos:column="23"/></operator><operator pos:line="56" pos:column="23">*<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">argp<pos:position pos:line="56" pos:column="28"/></name></expr> )<pos:position pos:line="56" pos:column="30"/></condition><then pos:line="56" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="25">argp<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">stdin_only<pos:position pos:line="57" pos:column="42"/></name></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="58" pos:column="10"/></block></else></if>

	<while pos:line="60" pos:column="9">while <condition pos:line="60" pos:column="15">(<expr><operator pos:line="60" pos:column="16">*<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">argp<pos:position pos:line="60" pos:column="21"/></name></expr>)<pos:position pos:line="60" pos:column="22"/></condition> <block pos:line="60" pos:column="23">{
		<decl_stmt><decl><type><specifier pos:line="61" pos:column="17">const<pos:position pos:line="61" pos:column="22"/></specifier> <name pos:line="61" pos:column="23">char<pos:position pos:line="61" pos:column="27"/></name> <modifier pos:line="61" pos:column="28">*<pos:position pos:line="61" pos:column="29"/></modifier></type><name pos:line="61" pos:column="29">arg<pos:position pos:line="61" pos:column="32"/></name> <init pos:line="61" pos:column="33">= <expr><operator pos:line="61" pos:column="35">*<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="36">argp<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">++<pos:position pos:line="61" pos:column="42"/></operator></expr></init></decl>;<pos:position pos:line="61" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="62" pos:column="17">struct<pos:position pos:line="62" pos:column="23"/></name> <name pos:line="62" pos:column="24">stat<pos:position pos:line="62" pos:column="28"/></name></name></type> <name pos:line="62" pos:column="29">argstat<pos:position pos:line="62" pos:column="36"/></name></decl>;<pos:position pos:line="62" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="63" pos:column="17">int<pos:position pos:line="63" pos:column="20"/></name></type> <name pos:line="63" pos:column="21">ret<pos:position pos:line="63" pos:column="24"/></name> <init pos:line="63" pos:column="25">= <expr><literal type="number" pos:line="63" pos:column="27">0<pos:position pos:line="63" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="29"/></decl_stmt>

		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name><name pos:line="65" pos:column="21">arg<pos:position pos:line="65" pos:column="24"/></name><index pos:line="65" pos:column="24">[<expr><literal type="number" pos:line="65" pos:column="25">0<pos:position pos:line="65" pos:column="26"/></literal></expr>]<pos:position pos:line="65" pos:column="27"/></index></name> <operator pos:line="65" pos:column="28">==<pos:position pos:line="65" pos:column="30"/></operator> <literal type="char" pos:line="65" pos:column="31">'-'<pos:position pos:line="65" pos:column="34"/></literal> <operator pos:line="65" pos:column="35">&amp;&amp;<pos:position pos:line="65" pos:column="45"/></operator> <name><name pos:line="65" pos:column="38">arg<pos:position pos:line="65" pos:column="41"/></name><index pos:line="65" pos:column="41">[<expr><literal type="number" pos:line="65" pos:column="42">1<pos:position pos:line="65" pos:column="43"/></literal></expr>]<pos:position pos:line="65" pos:column="44"/></index></name> <operator pos:line="65" pos:column="45">==<pos:position pos:line="65" pos:column="47"/></operator> <literal type="number" pos:line="65" pos:column="48">0<pos:position pos:line="65" pos:column="49"/></literal></expr>)<pos:position pos:line="65" pos:column="50"/></condition><then pos:line="65" pos:column="50"> <block pos:line="65" pos:column="51">{
			<expr_stmt><expr><name pos:line="66" pos:column="25">ret<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <call><name pos:line="66" pos:column="31">split_mbox<pos:position pos:line="66" pos:column="41"/></name><argument_list pos:line="66" pos:column="41">(<argument><expr><name pos:line="66" pos:column="42">arg<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">dir<pos:position pos:line="66" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="52">allow_bare<pos:position pos:line="66" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="64">nr_prec<pos:position pos:line="66" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="73">nr<pos:position pos:line="66" pos:column="75"/></name></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="77"/></expr_stmt>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><name pos:line="67" pos:column="29">ret<pos:position pos:line="67" pos:column="32"/></name> <operator pos:line="67" pos:column="33">&lt;<pos:position pos:line="67" pos:column="37"/></operator> <literal type="number" pos:line="67" pos:column="35">0<pos:position pos:line="67" pos:column="36"/></literal></expr>)<pos:position pos:line="67" pos:column="37"/></condition><then pos:line="67" pos:column="37"> <block pos:line="67" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="68" pos:column="33">error<pos:position pos:line="68" pos:column="38"/></name><argument_list pos:line="68" pos:column="38">(<argument><expr><literal type="string" pos:line="68" pos:column="39">"cannot split patches from stdin"<pos:position pos:line="68" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="74"/></expr_stmt>
				<return pos:line="69" pos:column="33">return <expr><literal type="number" pos:line="69" pos:column="40">1<pos:position pos:line="69" pos:column="41"/></literal></expr>;<pos:position pos:line="69" pos:column="42"/></return>
			}<pos:position pos:line="70" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="71" pos:column="25">num<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">+=<pos:position pos:line="71" pos:column="31"/></operator> <operator pos:line="71" pos:column="32">(<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="33">ret<pos:position pos:line="71" pos:column="36"/></name> <operator pos:line="71" pos:column="37">-<pos:position pos:line="71" pos:column="38"/></operator> <name pos:line="71" pos:column="39">nr<pos:position pos:line="71" pos:column="41"/></name><operator pos:line="71" pos:column="41">)<pos:position pos:line="71" pos:column="42"/></operator></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="72" pos:column="25">nr<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">=<pos:position pos:line="72" pos:column="29"/></operator> <name pos:line="72" pos:column="30">ret<pos:position pos:line="72" pos:column="33"/></name></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
			<continue pos:line="73" pos:column="25">continue;<pos:position pos:line="73" pos:column="34"/></continue>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>

		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><call><name pos:line="76" pos:column="21">stat<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">arg<pos:position pos:line="76" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="31">&amp;<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="32">argstat<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call> <operator pos:line="76" pos:column="41">==<pos:position pos:line="76" pos:column="43"/></operator> <operator pos:line="76" pos:column="44">-<pos:position pos:line="76" pos:column="45"/></operator><literal type="number" pos:line="76" pos:column="45">1<pos:position pos:line="76" pos:column="46"/></literal></expr>)<pos:position pos:line="76" pos:column="47"/></condition><then pos:line="76" pos:column="47"> <block pos:line="76" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">error<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><literal type="string" pos:line="77" pos:column="31">"cannot stat %s (%s)"<pos:position pos:line="77" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="54">arg<pos:position pos:line="77" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="59">strerror<pos:position pos:line="77" pos:column="67"/></name><argument_list pos:line="77" pos:column="67">(<argument><expr><name pos:line="77" pos:column="68">errno<pos:position pos:line="77" pos:column="73"/></name></expr></argument>)<pos:position pos:line="77" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="76"/></expr_stmt>
			<return pos:line="78" pos:column="25">return <expr><literal type="number" pos:line="78" pos:column="32">1<pos:position pos:line="78" pos:column="33"/></literal></expr>;<pos:position pos:line="78" pos:column="34"/></return>
		}<pos:position pos:line="79" pos:column="18"/></block></then></if>

		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><call><name pos:line="81" pos:column="21">S_ISDIR<pos:position pos:line="81" pos:column="28"/></name><argument_list pos:line="81" pos:column="28">(<argument><expr><name><name pos:line="81" pos:column="29">argstat<pos:position pos:line="81" pos:column="36"/></name><operator pos:line="81" pos:column="36">.<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="37">st_mode<pos:position pos:line="81" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="46"/></condition><then pos:line="81" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="25">ret<pos:position pos:line="82" pos:column="28"/></name> <operator pos:line="82" pos:column="29">=<pos:position pos:line="82" pos:column="30"/></operator> <call><name pos:line="82" pos:column="31">split_maildir<pos:position pos:line="82" pos:column="44"/></name><argument_list pos:line="82" pos:column="44">(<argument><expr><name pos:line="82" pos:column="45">arg<pos:position pos:line="82" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="50">dir<pos:position pos:line="82" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="55">nr_prec<pos:position pos:line="82" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="64">nr<pos:position pos:line="82" pos:column="66"/></name></expr></argument>)<pos:position pos:line="82" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="68"/></expr_stmt></block></then>
		<else pos:line="83" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="25">ret<pos:position pos:line="84" pos:column="28"/></name> <operator pos:line="84" pos:column="29">=<pos:position pos:line="84" pos:column="30"/></operator> <call><name pos:line="84" pos:column="31">split_mbox<pos:position pos:line="84" pos:column="41"/></name><argument_list pos:line="84" pos:column="41">(<argument><expr><name pos:line="84" pos:column="42">arg<pos:position pos:line="84" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="47">dir<pos:position pos:line="84" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="52">allow_bare<pos:position pos:line="84" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="64">nr_prec<pos:position pos:line="84" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="73">nr<pos:position pos:line="84" pos:column="75"/></name></expr></argument>)<pos:position pos:line="84" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="77"/></expr_stmt></block></else></if>

		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">ret<pos:position pos:line="86" pos:column="24"/></name> <operator pos:line="86" pos:column="25">&lt;<pos:position pos:line="86" pos:column="29"/></operator> <literal type="number" pos:line="86" pos:column="27">0<pos:position pos:line="86" pos:column="28"/></literal></expr>)<pos:position pos:line="86" pos:column="29"/></condition><then pos:line="86" pos:column="29"> <block pos:line="86" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">error<pos:position pos:line="87" pos:column="30"/></name><argument_list pos:line="87" pos:column="30">(<argument><expr><literal type="string" pos:line="87" pos:column="31">"cannot split patches from %s"<pos:position pos:line="87" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="63">arg<pos:position pos:line="87" pos:column="66"/></name></expr></argument>)<pos:position pos:line="87" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="68"/></expr_stmt>
			<return pos:line="88" pos:column="25">return <expr><literal type="number" pos:line="88" pos:column="32">1<pos:position pos:line="88" pos:column="33"/></literal></expr>;<pos:position pos:line="88" pos:column="34"/></return>
		}<pos:position pos:line="89" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="90" pos:column="17">num<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">+=<pos:position pos:line="90" pos:column="23"/></operator> <operator pos:line="90" pos:column="24">(<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="25">ret<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">-<pos:position pos:line="90" pos:column="30"/></operator> <name pos:line="90" pos:column="31">nr<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">)<pos:position pos:line="90" pos:column="34"/></operator></expr>;<pos:position pos:line="90" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="91" pos:column="17">nr<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <name pos:line="91" pos:column="22">ret<pos:position pos:line="91" pos:column="25"/></name></expr>;<pos:position pos:line="91" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="92" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="94" pos:column="9">printf<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><literal type="string" pos:line="94" pos:column="16">"%d\n"<pos:position pos:line="94" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="24">num<pos:position pos:line="94" pos:column="27"/></name></expr></argument>)<pos:position pos:line="94" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>

	<return pos:line="96" pos:column="9">return <expr><literal type="number" pos:line="96" pos:column="16">0<pos:position pos:line="96" pos:column="17"/></literal></expr>;<pos:position pos:line="96" pos:column="18"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

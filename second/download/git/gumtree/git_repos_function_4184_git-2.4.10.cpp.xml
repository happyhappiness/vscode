<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4184_git-2.4.10.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">update_refs_for_switch<pos:position pos:line="1" pos:column="35"/></name><argument_list pos:line="1" pos:column="35">(<argument><expr><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> struct <name pos:line="1" pos:column="49">checkout_opts<pos:position pos:line="1" pos:column="62"/></name> <operator pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></operator><name pos:line="1" pos:column="64">opts<pos:position pos:line="1" pos:column="68"/></name></expr></argument>,
				   <argument><expr pos:line="2" pos:column="36">struct <name pos:line="2" pos:column="43">branch_info<pos:position pos:line="2" pos:column="54"/></name> <operator pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></operator><name pos:line="2" pos:column="56">old<pos:position pos:line="2" pos:column="59"/></name></expr></argument>,
				   <argument><expr pos:line="3" pos:column="36">struct <name pos:line="3" pos:column="43">branch_info<pos:position pos:line="3" pos:column="54"/></name> <operator pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></operator><operator pos:line="3" pos:column="56">new<pos:position pos:line="3" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list>
<argument_list pos:line="4" pos:column="1">{
	<argument><expr pos:line="5" pos:column="9">struct <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">msg<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">=<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></argument>;
	<argument><expr><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">old_desc<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">reflog_msg<pos:position pos:line="6" pos:column="42"/></name></expr></argument>;
	if <argument><expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name><name pos:line="7" pos:column="13">opts<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">new_branch<pos:position pos:line="7" pos:column="29"/></name></name><operator pos:line="7" pos:column="29">)<pos:position pos:line="7" pos:column="30"/></operator> <block pos:line="7" pos:column="31">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">opts<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">new_orphan_branch<pos:position pos:line="8" pos:column="44"/></name></name></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <expr_stmt><expr><block pos:line="8" pos:column="46">{
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name><name pos:line="9" pos:column="29">opts<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">new_branch_log<pos:position pos:line="9" pos:column="49"/></name></name> <operator pos:line="9" pos:column="50">&amp;&amp;<pos:position pos:line="9" pos:column="60"/></operator> <operator pos:line="9" pos:column="53">!<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="54">log_all_ref_updates<pos:position pos:line="9" pos:column="73"/></name></expr>)<pos:position pos:line="9" pos:column="74"/></condition><then pos:line="9" pos:column="74"> <expr_stmt><expr><block pos:line="9" pos:column="75">{
				<expr><name pos:line="10" pos:column="33">int<pos:position pos:line="10" pos:column="36"/></name> <name pos:line="10" pos:column="37">temp<pos:position pos:line="10" pos:column="41"/></name></expr>;
				<name pos:line="11" pos:column="33">char<pos:position pos:line="11" pos:column="37"/></name> <name><name pos:line="11" pos:column="38">log_file<pos:position pos:line="11" pos:column="46"/></name><index pos:line="11" pos:column="46">[<expr><name pos:line="11" pos:column="47">PATH_MAX<pos:position pos:line="11" pos:column="55"/></name></expr>]<pos:position pos:line="11" pos:column="56"/></index></name></block></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt></then></if>
				<name pos:line="12" pos:column="33">char<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">*<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">ref_name<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">=<pos:position pos:line="12" pos:column="49"/></operator> <call><name pos:line="12" pos:column="50">mkpath<pos:position pos:line="12" pos:column="56"/></name><argument_list pos:line="12" pos:column="56">(<argument><expr><literal type="string" pos:line="12" pos:column="57">"refs/heads/%s"<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="74">opts<pos:position pos:line="12" pos:column="78"/></name><operator pos:line="12" pos:column="78">-&gt;<pos:position pos:line="12" pos:column="83"/></operator><name pos:line="12" pos:column="80">new_orphan_branch<pos:position pos:line="12" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="98"/></argument_list></call></block></expr>;<pos:position pos:line="12" pos:column="99"/></expr_stmt></then></if>

				<name pos:line="14" pos:column="33">temp<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">=<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">log_all_ref_updates<pos:position pos:line="14" pos:column="59"/></name></block></expr></argument>;
				<argument><expr><name pos:line="15" pos:column="33">log_all_ref_updates<pos:position pos:line="15" pos:column="52"/></name> <operator pos:line="15" pos:column="53">=<pos:position pos:line="15" pos:column="54"/></operator> <literal type="number" pos:line="15" pos:column="55">1<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>;
				if <argument><expr><operator pos:line="16" pos:column="36">(<pos:position pos:line="16" pos:column="37"/></operator><call><name pos:line="16" pos:column="37">log_ref_setup<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">ref_name<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">log_file<pos:position pos:line="16" pos:column="69"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="71">sizeof<argument_list pos:line="16" pos:column="77">(<argument><expr><name pos:line="16" pos:column="78">log_file<pos:position pos:line="16" pos:column="86"/></name></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="88"/></argument_list></call><operator pos:line="16" pos:column="88">)<pos:position pos:line="16" pos:column="89"/></operator> <block pos:line="16" pos:column="90">{
					<expr><call><name pos:line="17" pos:column="41">fprintf<pos:position pos:line="17" pos:column="48"/></name><argument_list pos:line="17" pos:column="48">(<argument><expr><name pos:line="17" pos:column="49">stderr<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="57">_<pos:position pos:line="17" pos:column="58"/></name><argument_list pos:line="17" pos:column="58">(<argument><expr><literal type="string" pos:line="17" pos:column="59">"Can not do reflog for '%s'\n"<pos:position pos:line="17" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="90"/></argument_list></call></expr></argument>,
					    <argument><expr><name><name pos:line="18" pos:column="45">opts<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">new_orphan_branch<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;
					<expr><name pos:line="19" pos:column="41">log_all_ref_updates<pos:position pos:line="19" pos:column="60"/></name> <operator pos:line="19" pos:column="61">=<pos:position pos:line="19" pos:column="62"/></operator> <name pos:line="19" pos:column="63">temp<pos:position pos:line="19" pos:column="67"/></name></expr>;
					<return pos:line="20" pos:column="41">return;<pos:position pos:line="20" pos:column="48"/></return>
				}<pos:position pos:line="21" pos:column="34"/></block>
				<name pos:line="22" pos:column="33">log_all_ref_updates<pos:position pos:line="22" pos:column="52"/></name> <operator pos:line="22" pos:column="53">=<pos:position pos:line="22" pos:column="54"/></operator> <name pos:line="22" pos:column="55">temp<pos:position pos:line="22" pos:column="59"/></name></expr></argument>;
			}<pos:position pos:line="23" pos:column="26"/></argument_list></decl></decl_stmt>
		}
		else
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">create_branch<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name><name pos:line="26" pos:column="39">old<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">name<pos:position pos:line="26" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">opts<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">new_branch<pos:position pos:line="26" pos:column="66"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="68">new<pos:position pos:line="26" pos:column="71"/></operator><operator pos:line="26" pos:column="71">-&gt;<pos:position pos:line="26" pos:column="76"/></operator><name pos:line="26" pos:column="73">name<pos:position pos:line="26" pos:column="77"/></name></expr></argument>,
				      <argument><expr><ternary><condition><expr><name><name pos:line="27" pos:column="39">opts<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">new_branch_force<pos:position pos:line="27" pos:column="61"/></name></name></expr> ?<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63"> <expr><literal type="number" pos:line="27" pos:column="64">1<pos:position pos:line="27" pos:column="65"/></literal></expr> <pos:position pos:line="27" pos:column="66"/></then><else pos:line="27" pos:column="66">: <expr><literal type="number" pos:line="27" pos:column="68">0<pos:position pos:line="27" pos:column="69"/></literal></expr></else></ternary></expr></argument>,
				      <argument><expr><name><name pos:line="28" pos:column="39">opts<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">new_branch_log<pos:position pos:line="28" pos:column="59"/></name></name></expr></argument>,
				      <argument><expr><ternary><condition><expr><name><name pos:line="29" pos:column="39">opts<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">new_branch_force<pos:position pos:line="29" pos:column="61"/></name></name></expr> ?<pos:position pos:line="29" pos:column="63"/></condition><then pos:line="29" pos:column="63"> <expr><literal type="number" pos:line="29" pos:column="64">1<pos:position pos:line="29" pos:column="65"/></literal></expr> <pos:position pos:line="29" pos:column="66"/></then><else pos:line="29" pos:column="66">: <expr><literal type="number" pos:line="29" pos:column="68">0<pos:position pos:line="29" pos:column="69"/></literal></expr></else></ternary></expr></argument>,
				      <argument><expr><name><name pos:line="30" pos:column="39">opts<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">-&gt;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="45">quiet<pos:position pos:line="30" pos:column="50"/></name></name></expr></argument>,
				      <argument><expr><name><name pos:line="31" pos:column="39">opts<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">track<pos:position pos:line="31" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="32" pos:column="17">new<pos:position pos:line="32" pos:column="20"/></operator><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">name<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <name><name pos:line="32" pos:column="29">opts<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">new_branch<pos:position pos:line="32" pos:column="45"/></name></name></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">setup_branch_path<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><operator pos:line="33" pos:column="35">new<pos:position pos:line="33" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
	}

	old_desc <expr_stmt><expr><operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name><name pos:line="36" pos:column="20">old<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">name<pos:position pos:line="36" pos:column="29"/></name></name></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">old_desc<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&amp;&amp;<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="26">old<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">commit<pos:position pos:line="37" pos:column="37"/></name></name></expr>)<pos:position pos:line="37" pos:column="38"/></condition><then pos:line="37" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">old_desc<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <call><name pos:line="38" pos:column="28">sha1_to_hex<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name><name pos:line="38" pos:column="40">old<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">commit<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">-&gt;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="53">object<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">.<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">sha1<pos:position pos:line="38" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">reflog_msg<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">getenv<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><literal type="string" pos:line="40" pos:column="29">"GIT_REFLOG_ACTION"<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">reflog_msg<pos:position pos:line="41" pos:column="24"/></name></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">strbuf_addf<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><operator pos:line="42" pos:column="29">&amp;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="30">msg<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="35">"checkout: moving from %s to %s"<pos:position pos:line="42" pos:column="67"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="43" pos:column="25">old_desc<pos:position pos:line="43" pos:column="33"/></name></expr> ?<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35"> <expr><name pos:line="43" pos:column="36">old_desc<pos:position pos:line="43" pos:column="44"/></name></expr> <pos:position pos:line="43" pos:column="45"/></then><else pos:line="43" pos:column="45">: <expr><literal type="string" pos:line="43" pos:column="47">"(invalid)"<pos:position pos:line="43" pos:column="58"/></literal></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="43" pos:column="60">new<pos:position pos:line="43" pos:column="63"/></operator><operator pos:line="43" pos:column="63">-&gt;<pos:position pos:line="43" pos:column="68"/></operator><name pos:line="43" pos:column="65">name<pos:position pos:line="43" pos:column="69"/></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt></block></then>
	<else pos:line="44" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">strbuf_insert<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><operator pos:line="45" pos:column="31">&amp;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="32">msg<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="37">0<pos:position pos:line="45" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">reflog_msg<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="52">strlen<pos:position pos:line="45" pos:column="58"/></name><argument_list pos:line="45" pos:column="58">(<argument><expr><name pos:line="45" pos:column="59">reflog_msg<pos:position pos:line="45" pos:column="69"/></name></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt></block></else></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><call><name pos:line="47" pos:column="14">strcmp<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><operator pos:line="47" pos:column="21">new<pos:position pos:line="47" pos:column="24"/></operator><operator pos:line="47" pos:column="24">-&gt;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="26">name<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="32">"HEAD"<pos:position pos:line="47" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call> <operator pos:line="47" pos:column="40">&amp;&amp;<pos:position pos:line="47" pos:column="50"/></operator> <operator pos:line="47" pos:column="43">!<pos:position pos:line="47" pos:column="44"/></operator><operator pos:line="47" pos:column="44">new<pos:position pos:line="47" pos:column="47"/></operator><operator pos:line="47" pos:column="47">-&gt;<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="49">path<pos:position pos:line="47" pos:column="53"/></name> <operator pos:line="47" pos:column="54">&amp;&amp;<pos:position pos:line="47" pos:column="64"/></operator> <operator pos:line="47" pos:column="57">!<pos:position pos:line="47" pos:column="58"/></operator><name><name pos:line="47" pos:column="58">opts<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">-&gt;<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="64">force_detach<pos:position pos:line="47" pos:column="76"/></name></name></expr>)<pos:position pos:line="47" pos:column="77"/></condition><then pos:line="47" pos:column="77"> <block pos:line="47" pos:column="78">{
		<comment type="block" pos:line="48" pos:column="17">/* Nothing to do. */</comment>
	}<pos:position pos:line="49" pos:column="10"/></block></then> <elseif pos:line="49" pos:column="11">else <if pos:line="49" pos:column="16">if <condition pos:line="49" pos:column="19">(<expr><name><name pos:line="49" pos:column="20">opts<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">force_detach<pos:position pos:line="49" pos:column="38"/></name></name> <operator pos:line="49" pos:column="39">||<pos:position pos:line="49" pos:column="41"/></operator> <operator pos:line="49" pos:column="42">!<pos:position pos:line="49" pos:column="43"/></operator><operator pos:line="49" pos:column="43">new<pos:position pos:line="49" pos:column="46"/></operator><operator pos:line="49" pos:column="46">-&gt;<pos:position pos:line="49" pos:column="51"/></operator><name pos:line="49" pos:column="48">path<pos:position pos:line="49" pos:column="52"/></name></expr>)<pos:position pos:line="49" pos:column="53"/></condition><then pos:line="49" pos:column="53"> <block pos:line="49" pos:column="54">{	<comment type="block" pos:line="49" pos:column="57">/* No longer on any branch. */</comment>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">update_ref<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">msg<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">.<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">buf<pos:position pos:line="50" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="37">"HEAD"<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="45">new<pos:position pos:line="50" pos:column="48"/></operator><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name><name pos:line="50" pos:column="50">commit<pos:position pos:line="50" pos:column="56"/></name><operator pos:line="50" pos:column="56">-&gt;<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="58">object<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">.<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="65">sha1<pos:position pos:line="50" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="71">NULL<pos:position pos:line="50" pos:column="75"/></name></expr></argument>,
			   <argument><expr><name pos:line="51" pos:column="28">REF_NODEREF<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="41">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">!<pos:position pos:line="52" pos:column="22"/></operator><name><name pos:line="52" pos:column="22">opts<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">-&gt;<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="28">quiet<pos:position pos:line="52" pos:column="33"/></name></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name><name pos:line="53" pos:column="29">old<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">path<pos:position pos:line="53" pos:column="38"/></name></name> <operator pos:line="53" pos:column="39">&amp;&amp;<pos:position pos:line="53" pos:column="49"/></operator> <name pos:line="53" pos:column="42">advice_detached_head<pos:position pos:line="53" pos:column="62"/></name></expr>)<pos:position pos:line="53" pos:column="63"/></condition><then pos:line="53" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="33">detach_advice<pos:position pos:line="54" pos:column="46"/></name><argument_list pos:line="54" pos:column="46">(<argument><expr><operator pos:line="54" pos:column="47">new<pos:position pos:line="54" pos:column="50"/></operator><operator pos:line="54" pos:column="50">-&gt;<pos:position pos:line="54" pos:column="55"/></operator><name pos:line="54" pos:column="52">name<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">describe_detached_head<pos:position pos:line="55" pos:column="47"/></name><argument_list pos:line="55" pos:column="47">(<argument><expr><call><name pos:line="55" pos:column="48">_<pos:position pos:line="55" pos:column="49"/></name><argument_list pos:line="55" pos:column="49">(<argument><expr><literal type="string" pos:line="55" pos:column="50">"HEAD is now at"<pos:position pos:line="55" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="55" pos:column="69">new<pos:position pos:line="55" pos:column="72"/></operator><operator pos:line="55" pos:column="72">-&gt;<pos:position pos:line="55" pos:column="77"/></operator><name pos:line="55" pos:column="74">commit<pos:position pos:line="55" pos:column="80"/></name></expr></argument>)<pos:position pos:line="55" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="82"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if></elseif> <elseif pos:line="57" pos:column="11">else <if pos:line="57" pos:column="16">if <condition pos:line="57" pos:column="19">(<expr><operator pos:line="57" pos:column="20">new<pos:position pos:line="57" pos:column="23"/></operator><operator pos:line="57" pos:column="23">-&gt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">path<pos:position pos:line="57" pos:column="29"/></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30"> <block pos:line="57" pos:column="31">{	<comment type="block" pos:line="57" pos:column="33">/* Switch branches. */</comment>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">create_symref<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><literal type="string" pos:line="58" pos:column="31">"HEAD"<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="39">new<pos:position pos:line="58" pos:column="42"/></operator><operator pos:line="58" pos:column="42">-&gt;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="44">path<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="50">msg<pos:position pos:line="58" pos:column="53"/></name><operator pos:line="58" pos:column="53">.<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="54">buf<pos:position pos:line="58" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">!<pos:position pos:line="59" pos:column="22"/></operator><name><name pos:line="59" pos:column="22">opts<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">quiet<pos:position pos:line="59" pos:column="33"/></name></name></expr>)<pos:position pos:line="59" pos:column="34"/></condition><then pos:line="59" pos:column="34"> <block pos:line="59" pos:column="35">{
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><name><name pos:line="60" pos:column="29">old<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">-&gt;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="34">path<pos:position pos:line="60" pos:column="38"/></name></name> <operator pos:line="60" pos:column="39">&amp;&amp;<pos:position pos:line="60" pos:column="49"/></operator> <operator pos:line="60" pos:column="42">!<pos:position pos:line="60" pos:column="43"/></operator><call><name pos:line="60" pos:column="43">strcmp<pos:position pos:line="60" pos:column="49"/></name><argument_list pos:line="60" pos:column="49">(<argument><expr><operator pos:line="60" pos:column="50">new<pos:position pos:line="60" pos:column="53"/></operator><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">path<pos:position pos:line="60" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="61">old<pos:position pos:line="60" pos:column="64"/></name><operator pos:line="60" pos:column="64">-&gt;<pos:position pos:line="60" pos:column="69"/></operator><name pos:line="60" pos:column="66">path<pos:position pos:line="60" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="72"/></condition><then pos:line="60" pos:column="72"> <block pos:line="60" pos:column="73">{
				<if pos:line="61" pos:column="33">if <condition pos:line="61" pos:column="36">(<expr><name><name pos:line="61" pos:column="37">opts<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">-&gt;<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="43">new_branch_force<pos:position pos:line="61" pos:column="59"/></name></name></expr>)<pos:position pos:line="61" pos:column="60"/></condition><then pos:line="61" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="41">fprintf<pos:position pos:line="62" pos:column="48"/></name><argument_list pos:line="62" pos:column="48">(<argument><expr><name pos:line="62" pos:column="49">stderr<pos:position pos:line="62" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="57">_<pos:position pos:line="62" pos:column="58"/></name><argument_list pos:line="62" pos:column="58">(<argument><expr><literal type="string" pos:line="62" pos:column="59">"Reset branch '%s'\n"<pos:position pos:line="62" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="81"/></argument_list></call></expr></argument>,
						<argument><expr><operator pos:line="63" pos:column="49">new<pos:position pos:line="63" pos:column="52"/></operator><operator pos:line="63" pos:column="52">-&gt;<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="54">name<pos:position pos:line="63" pos:column="58"/></name></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="60"/></expr_stmt></block></then>
				<else pos:line="64" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="41">fprintf<pos:position pos:line="65" pos:column="48"/></name><argument_list pos:line="65" pos:column="48">(<argument><expr><name pos:line="65" pos:column="49">stderr<pos:position pos:line="65" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="57">_<pos:position pos:line="65" pos:column="58"/></name><argument_list pos:line="65" pos:column="58">(<argument><expr><literal type="string" pos:line="65" pos:column="59">"Already on '%s'\n"<pos:position pos:line="65" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="79"/></argument_list></call></expr></argument>,
						<argument><expr><operator pos:line="66" pos:column="49">new<pos:position pos:line="66" pos:column="52"/></operator><operator pos:line="66" pos:column="52">-&gt;<pos:position pos:line="66" pos:column="57"/></operator><name pos:line="66" pos:column="54">name<pos:position pos:line="66" pos:column="58"/></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt></block></else></if>
			}<pos:position pos:line="67" pos:column="26"/></block></then> <elseif pos:line="67" pos:column="27">else <if pos:line="67" pos:column="32">if <condition pos:line="67" pos:column="35">(<expr><name><name pos:line="67" pos:column="36">opts<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">new_branch<pos:position pos:line="67" pos:column="52"/></name></name></expr>)<pos:position pos:line="67" pos:column="53"/></condition><then pos:line="67" pos:column="53"> <block pos:line="67" pos:column="54">{
				<if pos:line="68" pos:column="33">if <condition pos:line="68" pos:column="36">(<expr><name><name pos:line="68" pos:column="37">opts<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">-&gt;<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="43">branch_exists<pos:position pos:line="68" pos:column="56"/></name></name></expr>)<pos:position pos:line="68" pos:column="57"/></condition><then pos:line="68" pos:column="57">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="41">fprintf<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">stderr<pos:position pos:line="69" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="57">_<pos:position pos:line="69" pos:column="58"/></name><argument_list pos:line="69" pos:column="58">(<argument><expr><literal type="string" pos:line="69" pos:column="59">"Switched to and reset branch '%s'\n"<pos:position pos:line="69" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="69" pos:column="99">new<pos:position pos:line="69" pos:column="102"/></operator><operator pos:line="69" pos:column="102">-&gt;<pos:position pos:line="69" pos:column="107"/></operator><name pos:line="69" pos:column="104">name<pos:position pos:line="69" pos:column="108"/></name></expr></argument>)<pos:position pos:line="69" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="110"/></expr_stmt></block></then>
				<else pos:line="70" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="41">fprintf<pos:position pos:line="71" pos:column="48"/></name><argument_list pos:line="71" pos:column="48">(<argument><expr><name pos:line="71" pos:column="49">stderr<pos:position pos:line="71" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="57">_<pos:position pos:line="71" pos:column="58"/></name><argument_list pos:line="71" pos:column="58">(<argument><expr><literal type="string" pos:line="71" pos:column="59">"Switched to a new branch '%s'\n"<pos:position pos:line="71" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="71" pos:column="95">new<pos:position pos:line="71" pos:column="98"/></operator><operator pos:line="71" pos:column="98">-&gt;<pos:position pos:line="71" pos:column="103"/></operator><name pos:line="71" pos:column="100">name<pos:position pos:line="71" pos:column="104"/></name></expr></argument>)<pos:position pos:line="71" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="106"/></expr_stmt></block></else></if>
			}<pos:position pos:line="72" pos:column="26"/></block></then></if></elseif> <else pos:line="72" pos:column="27">else <block pos:line="72" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">fprintf<pos:position pos:line="73" pos:column="40"/></name><argument_list pos:line="73" pos:column="40">(<argument><expr><name pos:line="73" pos:column="41">stderr<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="49">_<pos:position pos:line="73" pos:column="50"/></name><argument_list pos:line="73" pos:column="50">(<argument><expr><literal type="string" pos:line="73" pos:column="51">"Switched to branch '%s'\n"<pos:position pos:line="73" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="79"/></argument_list></call></expr></argument>,
					<argument><expr><operator pos:line="74" pos:column="41">new<pos:position pos:line="74" pos:column="44"/></operator><operator pos:line="74" pos:column="44">-&gt;<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="46">name<pos:position pos:line="74" pos:column="50"/></name></expr></argument>)<pos:position pos:line="74" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="75" pos:column="26"/></block></else></if>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if>
		<if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><name><name pos:line="77" pos:column="21">old<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">-&gt;<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="26">path<pos:position pos:line="77" pos:column="30"/></name></name> <operator pos:line="77" pos:column="31">&amp;&amp;<pos:position pos:line="77" pos:column="41"/></operator> <name><name pos:line="77" pos:column="34">old<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">-&gt;<pos:position pos:line="77" pos:column="42"/></operator><name pos:line="77" pos:column="39">name<pos:position pos:line="77" pos:column="43"/></name></name></expr>)<pos:position pos:line="77" pos:column="44"/></condition><then pos:line="77" pos:column="44"> <block pos:line="77" pos:column="45">{
			<if pos:line="78" pos:column="25">if <condition pos:line="78" pos:column="28">(<expr><operator pos:line="78" pos:column="29">!<pos:position pos:line="78" pos:column="30"/></operator><call><name pos:line="78" pos:column="30">ref_exists<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><name><name pos:line="78" pos:column="41">old<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">path<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call> <operator pos:line="78" pos:column="52">&amp;&amp;<pos:position pos:line="78" pos:column="62"/></operator> <call><name pos:line="78" pos:column="55">reflog_exists<pos:position pos:line="78" pos:column="68"/></name><argument_list pos:line="78" pos:column="68">(<argument><expr><name><name pos:line="78" pos:column="69">old<pos:position pos:line="78" pos:column="72"/></name><operator pos:line="78" pos:column="72">-&gt;<pos:position pos:line="78" pos:column="77"/></operator><name pos:line="78" pos:column="74">path<pos:position pos:line="78" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="80"/></condition><then pos:line="78" pos:column="80">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="33">delete_reflog<pos:position pos:line="79" pos:column="46"/></name><argument_list pos:line="79" pos:column="46">(<argument><expr><name><name pos:line="79" pos:column="47">old<pos:position pos:line="79" pos:column="50"/></name><operator pos:line="79" pos:column="50">-&gt;<pos:position pos:line="79" pos:column="55"/></operator><name pos:line="79" pos:column="52">path<pos:position pos:line="79" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="58"/></expr_stmt></block></then></if>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">remove_branch_state<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">()<pos:position pos:line="82" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">strbuf_release<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><operator pos:line="83" pos:column="24">&amp;<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="25">msg<pos:position pos:line="83" pos:column="28"/></name></expr></argument>)<pos:position pos:line="83" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="30"/></expr_stmt>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><name><name pos:line="84" pos:column="14">opts<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">-&gt;<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="20">quiet<pos:position pos:line="84" pos:column="25"/></name></name> <operator pos:line="84" pos:column="26">&amp;&amp;<pos:position pos:line="84" pos:column="36"/></operator>
	    <operator pos:line="85" pos:column="13">(<pos:position pos:line="85" pos:column="14"/></operator><operator pos:line="85" pos:column="14">new<pos:position pos:line="85" pos:column="17"/></operator><operator pos:line="85" pos:column="17">-&gt;<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="19">path<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">||<pos:position pos:line="85" pos:column="26"/></operator> <operator pos:line="85" pos:column="27">(<pos:position pos:line="85" pos:column="28"/></operator><operator pos:line="85" pos:column="28">!<pos:position pos:line="85" pos:column="29"/></operator><name><name pos:line="85" pos:column="29">opts<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">-&gt;<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="35">force_detach<pos:position pos:line="85" pos:column="47"/></name></name> <operator pos:line="85" pos:column="48">&amp;&amp;<pos:position pos:line="85" pos:column="58"/></operator> <operator pos:line="85" pos:column="51">!<pos:position pos:line="85" pos:column="52"/></operator><call><name pos:line="85" pos:column="52">strcmp<pos:position pos:line="85" pos:column="58"/></name><argument_list pos:line="85" pos:column="58">(<argument><expr><operator pos:line="85" pos:column="59">new<pos:position pos:line="85" pos:column="62"/></operator><operator pos:line="85" pos:column="62">-&gt;<pos:position pos:line="85" pos:column="67"/></operator><name pos:line="85" pos:column="64">name<pos:position pos:line="85" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="70">"HEAD"<pos:position pos:line="85" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="77"/></argument_list></call><operator pos:line="85" pos:column="77">)<pos:position pos:line="85" pos:column="78"/></operator><operator pos:line="85" pos:column="78">)<pos:position pos:line="85" pos:column="79"/></operator></expr>)<pos:position pos:line="85" pos:column="80"/></condition><then pos:line="85" pos:column="80">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="17">report_tracking<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><operator pos:line="86" pos:column="33">new<pos:position pos:line="86" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt></block></then></if>
}</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1116_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_rebase_todolist<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">fname<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="52">struct<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">string_list<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">lines<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">line<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">STRBUF_INIT<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">f<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">fopen<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><call><name pos:line="4" pos:column="25">git_path<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><literal type="string" pos:line="4" pos:column="34">"%s"<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">fname<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="48">"r"<pos:position pos:line="4" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">f<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> <block pos:line="6" pos:column="17">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">errno<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">==<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">ENOENT<pos:position pos:line="7" pos:column="36"/></name></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><operator pos:line="8" pos:column="32">-<pos:position pos:line="8" pos:column="33"/></operator><literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">die_errno<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><literal type="string" pos:line="9" pos:column="27">"Could not open file %s for reading"<pos:position pos:line="9" pos:column="63"/></literal></expr></argument>,
			  <argument><expr><call><name pos:line="10" pos:column="27">git_path<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><literal type="string" pos:line="10" pos:column="36">"%s"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">fname<pos:position pos:line="10" pos:column="47"/></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><operator pos:line="12" pos:column="16">!<pos:position pos:line="12" pos:column="17"/></operator><call><name pos:line="12" pos:column="17">strbuf_getline_lf<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="36">line<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">f<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="45"/></condition> <block pos:line="12" pos:column="46">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">line<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">.<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">len<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">&amp;&amp;<pos:position pos:line="13" pos:column="40"/></operator> <name><name pos:line="13" pos:column="33">line<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">buf<pos:position pos:line="13" pos:column="41"/></name><index pos:line="13" pos:column="41">[<expr><literal type="number" pos:line="13" pos:column="42">0<pos:position pos:line="13" pos:column="43"/></literal></expr>]<pos:position pos:line="13" pos:column="44"/></index></name> <operator pos:line="13" pos:column="45">==<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="48">comment_line_char<pos:position pos:line="13" pos:column="65"/></name></expr>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strbuf_trim<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="30">line<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">line<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">len<pos:position pos:line="16" pos:column="30"/></name></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">abbrev_sha1_in_line<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="38">line<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">string_list_append<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">lines<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="43">line<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">.<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="48">buf<pos:position pos:line="19" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">fclose<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">f<pos:position pos:line="21" pos:column="17"/></name></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
	<return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3407_git-2.7.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cmp_cache_name_compare<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">void<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">a_<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">void<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">b_<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">cache_entry<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">ce1<pos:position pos:line="3" pos:column="38"/></name></decl>, <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="41">ce2<pos:position pos:line="3" pos:column="44"/></name></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">ce1<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <operator pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></operator><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator><specifier pos:line="5" pos:column="18">const<pos:position pos:line="5" pos:column="23"/></specifier> struct <name pos:line="5" pos:column="31">cache_entry<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></operator><operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">a_<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">ce2<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></operator><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><specifier pos:line="6" pos:column="18">const<pos:position pos:line="6" pos:column="23"/></specifier> struct <name pos:line="6" pos:column="31">cache_entry<pos:position pos:line="6" pos:column="42"/></name> <operator pos:line="6" pos:column="43">*<pos:position pos:line="6" pos:column="44"/></operator><operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator><operator pos:line="6" pos:column="45">)<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">b_<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt>
	<return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">cache_name_stage_compare<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name><name pos:line="7" pos:column="41">ce1<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">name<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="52">ce1<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">ce_namelen<pos:position pos:line="7" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="69">ce_stage<pos:position pos:line="7" pos:column="77"/></name><argument_list pos:line="7" pos:column="77">(<argument><expr><name pos:line="7" pos:column="78">ce1<pos:position pos:line="7" pos:column="81"/></name></expr></argument>)<pos:position pos:line="7" pos:column="82"/></argument_list></call></expr></argument>,
				  <argument><expr><name><name pos:line="8" pos:column="35">ce2<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">name<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="46">ce2<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">ce_namelen<pos:position pos:line="8" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="63">ce_stage<pos:position pos:line="8" pos:column="71"/></name><argument_list pos:line="8" pos:column="71">(<argument><expr><name pos:line="8" pos:column="72">ce2<pos:position pos:line="8" pos:column="75"/></name></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

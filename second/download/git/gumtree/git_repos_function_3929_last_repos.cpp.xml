<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3929_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">graph_output_commit_char<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">git_graph<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">graph<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="63">struct<pos:position pos:line="1" pos:column="69"/></name> <name pos:line="1" pos:column="70">strbuf<pos:position pos:line="1" pos:column="76"/></name></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">sb<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * For boundary commits, print 'o'
	 * (We should only see boundary commits when revs-&gt;boundary is set.)
	 */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">graph<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">commit<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">object<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">flags<pos:position pos:line="7" pos:column="40"/></name></name> <operator pos:line="7" pos:column="41">&amp;<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="43">BOUNDARY<pos:position pos:line="7" pos:column="51"/></name></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52"> <block pos:line="7" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">assert<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name><name pos:line="8" pos:column="24">graph<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">revs<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">boundary<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_addch<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">sb<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="34">'o'<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
		<return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * get_revision_mark() handles all other cases without assert()
	 */</comment>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_addstr<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">sb<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="27">get_revision_mark<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name><name pos:line="16" pos:column="45">graph<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">revs<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="58">graph<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-&gt;<pos:position pos:line="16" pos:column="68"/></operator><name pos:line="16" pos:column="65">commit<pos:position pos:line="16" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

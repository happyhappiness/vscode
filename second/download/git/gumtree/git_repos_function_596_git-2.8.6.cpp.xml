<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_596_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">store_aux<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">key<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">value<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">void<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">cb<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ep<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">section_len<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<switch pos:line="6" pos:column="9">switch <condition pos:line="6" pos:column="16">(<expr><name><name pos:line="6" pos:column="17">store<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">.<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">state<pos:position pos:line="6" pos:column="28"/></name></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition> <block pos:line="6" pos:column="30">{
	<case pos:line="7" pos:column="9">case <expr><name pos:line="7" pos:column="14">KEY_SEEN<pos:position pos:line="7" pos:column="22"/></name></expr>:<pos:position pos:line="7" pos:column="23"/></case>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><call><name pos:line="8" pos:column="21">matches<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">key<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">value<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41"> <block pos:line="8" pos:column="42">{
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name><name pos:line="9" pos:column="29">store<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">seen<pos:position pos:line="9" pos:column="39"/></name></name> <operator pos:line="9" pos:column="40">==<pos:position pos:line="9" pos:column="42"/></operator> <literal type="number" pos:line="9" pos:column="43">1<pos:position pos:line="9" pos:column="44"/></literal> <operator pos:line="9" pos:column="45">&amp;&amp;<pos:position pos:line="9" pos:column="55"/></operator> <name><name pos:line="9" pos:column="48">store<pos:position pos:line="9" pos:column="53"/></name><operator pos:line="9" pos:column="53">.<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="54">multi_replace<pos:position pos:line="9" pos:column="67"/></name></name> <operator pos:line="9" pos:column="68">==<pos:position pos:line="9" pos:column="70"/></operator> <literal type="number" pos:line="9" pos:column="71">0<pos:position pos:line="9" pos:column="72"/></literal></expr>)<pos:position pos:line="9" pos:column="73"/></condition><then pos:line="9" pos:column="73"> <block pos:line="9" pos:column="74">{
				<expr_stmt><expr><call><name pos:line="10" pos:column="33">warning<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><call><name pos:line="10" pos:column="41">_<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><literal type="string" pos:line="10" pos:column="43">"%s has multiple values"<pos:position pos:line="10" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="70">key<pos:position pos:line="10" pos:column="73"/></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt>
			}<pos:position pos:line="11" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="13" pos:column="25">ALLOC_GROW<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name><name pos:line="13" pos:column="36">store<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">offset<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="50">store<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">.<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="56">seen<pos:position pos:line="13" pos:column="60"/></name></name> <operator pos:line="13" pos:column="61">+<pos:position pos:line="13" pos:column="62"/></operator> <literal type="number" pos:line="13" pos:column="63">1<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>,
				   <argument><expr><name><name pos:line="14" pos:column="36">store<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">.<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">offset_alloc<pos:position pos:line="14" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="16" pos:column="25">store<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">offset<pos:position pos:line="16" pos:column="37"/></name><index pos:line="16" pos:column="37">[<expr><name><name pos:line="16" pos:column="38">store<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">.<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">seen<pos:position pos:line="16" pos:column="48"/></name></name></expr>]<pos:position pos:line="16" pos:column="49"/></index></name> <operator pos:line="16" pos:column="50">=<pos:position pos:line="16" pos:column="51"/></operator> <call><name><name pos:line="16" pos:column="52">cf<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">do_ftell<pos:position pos:line="16" pos:column="64"/></name></name><argument_list pos:line="16" pos:column="64">(<argument><expr><name pos:line="16" pos:column="65">cf<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="17" pos:column="25">store<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">seen<pos:position pos:line="17" pos:column="35"/></name></name><operator pos:line="17" pos:column="35">++<pos:position pos:line="17" pos:column="37"/></operator></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<break pos:line="19" pos:column="17">break;<pos:position pos:line="19" pos:column="23"/></break>
	<case pos:line="20" pos:column="9">case <expr><name pos:line="20" pos:column="14">SECTION_SEEN<pos:position pos:line="20" pos:column="26"/></name></expr>:<pos:position pos:line="20" pos:column="27"/></case>
		<comment type="block" pos:line="21" pos:column="17">/*
		 * What we are looking for is in store.key (both
		 * section and var), and its section part is baselen
		 * long.  We found key (again, both section and var).
		 * We would want to know if this key is in the same
		 * section as what we are looking for.  We already
		 * know we are in the same section as what should
		 * hold store.key.
		 */</comment>
		<expr_stmt><expr><name pos:line="30" pos:column="17">ep<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">strrchr<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">key<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="35">'.'<pos:position pos:line="30" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">section_len<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">ep<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">-<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">key<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">(<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">section_len<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">!=<pos:position pos:line="33" pos:column="36"/></operator> <name><name pos:line="33" pos:column="37">store<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">.<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">baselen<pos:position pos:line="33" pos:column="50"/></name></name><operator pos:line="33" pos:column="50">)<pos:position pos:line="33" pos:column="51"/></operator> <operator pos:line="33" pos:column="52">||<pos:position pos:line="33" pos:column="54"/></operator>
		    <call><name pos:line="34" pos:column="21">memcmp<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">key<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="33">store<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">.<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">key<pos:position pos:line="34" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">section_len<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">+<pos:position pos:line="34" pos:column="56"/></operator><literal type="number" pos:line="34" pos:column="56">1<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="59"/></condition><then pos:line="34" pos:column="59"> <block pos:line="34" pos:column="60">{
			<expr_stmt><expr><name><name pos:line="35" pos:column="25">store<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">.<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">state<pos:position pos:line="35" pos:column="36"/></name></name> <operator pos:line="35" pos:column="37">=<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">SECTION_END_SEEN<pos:position pos:line="35" pos:column="55"/></name></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
			<break pos:line="36" pos:column="25">break;<pos:position pos:line="36" pos:column="31"/></break>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="39" pos:column="17">/*
		 * Do not increment matches: this is no match, but we
		 * just made sure we are in the desired section.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">ALLOC_GROW<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name><name pos:line="43" pos:column="28">store<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">.<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">offset<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="42">store<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">.<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="48">seen<pos:position pos:line="43" pos:column="52"/></name></name> <operator pos:line="43" pos:column="53">+<pos:position pos:line="43" pos:column="54"/></operator> <literal type="number" pos:line="43" pos:column="55">1<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>,
			   <argument><expr><name><name pos:line="44" pos:column="28">store<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">.<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="34">offset_alloc<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">store<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">.<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">offset<pos:position pos:line="45" pos:column="29"/></name><index pos:line="45" pos:column="29">[<expr><name><name pos:line="45" pos:column="30">store<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">.<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="36">seen<pos:position pos:line="45" pos:column="40"/></name></name></expr>]<pos:position pos:line="45" pos:column="41"/></index></name> <operator pos:line="45" pos:column="42">=<pos:position pos:line="45" pos:column="43"/></operator> <call><name><name pos:line="45" pos:column="44">cf<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">do_ftell<pos:position pos:line="45" pos:column="56"/></name></name><argument_list pos:line="45" pos:column="56">(<argument><expr><name pos:line="45" pos:column="57">cf<pos:position pos:line="45" pos:column="59"/></name></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="61"/></expr_stmt>
		<comment type="block" pos:line="46" pos:column="17">/* fallthru */</comment>
	<case pos:line="47" pos:column="9">case <expr><name pos:line="47" pos:column="14">SECTION_END_SEEN<pos:position pos:line="47" pos:column="30"/></name></expr>:<pos:position pos:line="47" pos:column="31"/></case>
	<case pos:line="48" pos:column="9">case <expr><name pos:line="48" pos:column="14">START<pos:position pos:line="48" pos:column="19"/></name></expr>:<pos:position pos:line="48" pos:column="20"/></case>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">matches<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">key<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="34">value<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41"> <block pos:line="49" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">ALLOC_GROW<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><name><name pos:line="50" pos:column="36">store<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">.<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">offset<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="50">store<pos:position pos:line="50" pos:column="55"/></name><operator pos:line="50" pos:column="55">.<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="56">seen<pos:position pos:line="50" pos:column="60"/></name></name> <operator pos:line="50" pos:column="61">+<pos:position pos:line="50" pos:column="62"/></operator> <literal type="number" pos:line="50" pos:column="63">1<pos:position pos:line="50" pos:column="64"/></literal></expr></argument>,
				   <argument><expr><name><name pos:line="51" pos:column="36">store<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">.<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="42">offset_alloc<pos:position pos:line="51" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">store<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">.<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="31">offset<pos:position pos:line="52" pos:column="37"/></name><index pos:line="52" pos:column="37">[<expr><name><name pos:line="52" pos:column="38">store<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">.<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="44">seen<pos:position pos:line="52" pos:column="48"/></name></name></expr>]<pos:position pos:line="52" pos:column="49"/></index></name> <operator pos:line="52" pos:column="50">=<pos:position pos:line="52" pos:column="51"/></operator> <call><name><name pos:line="52" pos:column="52">cf<pos:position pos:line="52" pos:column="54"/></name><operator pos:line="52" pos:column="54">-&gt;<pos:position pos:line="52" pos:column="59"/></operator><name pos:line="52" pos:column="56">do_ftell<pos:position pos:line="52" pos:column="64"/></name></name><argument_list pos:line="52" pos:column="64">(<argument><expr><name pos:line="52" pos:column="65">cf<pos:position pos:line="52" pos:column="67"/></name></expr></argument>)<pos:position pos:line="52" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="53" pos:column="25">store<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">.<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">state<pos:position pos:line="53" pos:column="36"/></name></name> <operator pos:line="53" pos:column="37">=<pos:position pos:line="53" pos:column="38"/></operator> <name pos:line="53" pos:column="39">KEY_SEEN<pos:position pos:line="53" pos:column="47"/></name></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="54" pos:column="25">store<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">.<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">seen<pos:position pos:line="54" pos:column="35"/></name></name><operator pos:line="54" pos:column="35">++<pos:position pos:line="54" pos:column="37"/></operator></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then> <else pos:line="55" pos:column="19">else <block pos:line="55" pos:column="24">{
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><call><name pos:line="56" pos:column="29">strrchr<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">key<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="56" pos:column="42">'.'<pos:position pos:line="56" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call> <operator pos:line="56" pos:column="47">-<pos:position pos:line="56" pos:column="48"/></operator> <name pos:line="56" pos:column="49">key<pos:position pos:line="56" pos:column="52"/></name> <operator pos:line="56" pos:column="53">==<pos:position pos:line="56" pos:column="55"/></operator> <name><name pos:line="56" pos:column="56">store<pos:position pos:line="56" pos:column="61"/></name><operator pos:line="56" pos:column="61">.<pos:position pos:line="56" pos:column="62"/></operator><name pos:line="56" pos:column="62">baselen<pos:position pos:line="56" pos:column="69"/></name></name> <operator pos:line="56" pos:column="70">&amp;&amp;<pos:position pos:line="56" pos:column="80"/></operator>
			      <operator pos:line="57" pos:column="31">!<pos:position pos:line="57" pos:column="32"/></operator><call><name pos:line="57" pos:column="32">strncmp<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name pos:line="57" pos:column="40">key<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="45">store<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">.<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="51">key<pos:position pos:line="57" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="56">store<pos:position pos:line="57" pos:column="61"/></name><operator pos:line="57" pos:column="61">.<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="62">baselen<pos:position pos:line="57" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="71"/></condition><then pos:line="57" pos:column="71"> <block pos:line="57" pos:column="72">{
					<expr_stmt><expr><name><name pos:line="58" pos:column="41">store<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">.<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="47">state<pos:position pos:line="58" pos:column="52"/></name></name> <operator pos:line="58" pos:column="53">=<pos:position pos:line="58" pos:column="54"/></operator> <name pos:line="58" pos:column="55">SECTION_SEEN<pos:position pos:line="58" pos:column="67"/></name></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="59" pos:column="41">ALLOC_GROW<pos:position pos:line="59" pos:column="51"/></name><argument_list pos:line="59" pos:column="51">(<argument><expr><name><name pos:line="59" pos:column="52">store<pos:position pos:line="59" pos:column="57"/></name><operator pos:line="59" pos:column="57">.<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="58">offset<pos:position pos:line="59" pos:column="64"/></name></name></expr></argument>,
						   <argument><expr><name><name pos:line="60" pos:column="52">store<pos:position pos:line="60" pos:column="57"/></name><operator pos:line="60" pos:column="57">.<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="58">seen<pos:position pos:line="60" pos:column="62"/></name></name> <operator pos:line="60" pos:column="63">+<pos:position pos:line="60" pos:column="64"/></operator> <literal type="number" pos:line="60" pos:column="65">1<pos:position pos:line="60" pos:column="66"/></literal></expr></argument>,
						   <argument><expr><name><name pos:line="61" pos:column="52">store<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">.<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="58">offset_alloc<pos:position pos:line="61" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="62" pos:column="41">store<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">.<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="47">offset<pos:position pos:line="62" pos:column="53"/></name><index pos:line="62" pos:column="53">[<expr><name><name pos:line="62" pos:column="54">store<pos:position pos:line="62" pos:column="59"/></name><operator pos:line="62" pos:column="59">.<pos:position pos:line="62" pos:column="60"/></operator><name pos:line="62" pos:column="60">seen<pos:position pos:line="62" pos:column="64"/></name></name></expr>]<pos:position pos:line="62" pos:column="65"/></index></name> <operator pos:line="62" pos:column="66">=<pos:position pos:line="62" pos:column="67"/></operator> <call><name><name pos:line="62" pos:column="68">cf<pos:position pos:line="62" pos:column="70"/></name><operator pos:line="62" pos:column="70">-&gt;<pos:position pos:line="62" pos:column="75"/></operator><name pos:line="62" pos:column="72">do_ftell<pos:position pos:line="62" pos:column="80"/></name></name><argument_list pos:line="62" pos:column="80">(<argument><expr><name pos:line="62" pos:column="81">cf<pos:position pos:line="62" pos:column="83"/></name></expr></argument>)<pos:position pos:line="62" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="85"/></expr_stmt>
			}<pos:position pos:line="63" pos:column="26"/></block></then></if>
		}<pos:position pos:line="64" pos:column="18"/></block></else></if>
	}<pos:position pos:line="65" pos:column="10"/></block></switch>
	<return pos:line="66" pos:column="9">return <expr><literal type="number" pos:line="66" pos:column="16">0<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

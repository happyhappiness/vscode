<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1489.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_summary<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">prefix<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">unsigned<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">sha1<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">initial_commit<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">rev_info<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">rev<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">commit<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">format<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">STRBUF_INIT<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name></type> <name><name pos:line="7" pos:column="23">junk_sha1<pos:position pos:line="7" pos:column="32"/></name><index pos:line="7" pos:column="32">[<expr><literal type="number" pos:line="7" pos:column="33">20<pos:position pos:line="7" pos:column="35"/></literal></expr>]<pos:position pos:line="7" pos:column="36"/></index></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">head<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">pretty_print_context<pos:position pos:line="9" pos:column="36"/></name></name></type> <name pos:line="9" pos:column="37">pctx<pos:position pos:line="9" pos:column="41"/></name> <init pos:line="9" pos:column="42">= <expr><block pos:line="9" pos:column="44">{<expr><literal type="number" pos:line="9" pos:column="45">0<pos:position pos:line="9" pos:column="46"/></literal></expr>}<pos:position pos:line="9" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">strbuf<pos:position pos:line="10" pos:column="22"/></name></name></type> <name pos:line="10" pos:column="23">author_ident<pos:position pos:line="10" pos:column="35"/></name> <init pos:line="10" pos:column="36">= <expr><name pos:line="10" pos:column="38">STRBUF_INIT<pos:position pos:line="10" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">committer_ident<pos:position pos:line="11" pos:column="38"/></name> <init pos:line="11" pos:column="39">= <expr><name pos:line="11" pos:column="41">STRBUF_INIT<pos:position pos:line="11" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">commit<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">lookup_commit<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">sha1<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">commit<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><call><name pos:line="15" pos:column="21">_<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"couldn't look up newly created commit"<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt></block></then></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">parse_commit<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">commit<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><call><name pos:line="17" pos:column="21">_<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="string" pos:line="17" pos:column="23">"could not parse newly created commit"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_addstr<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><operator pos:line="19" pos:column="23">&amp;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="24">format<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="32">"format:%h] %s"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">format_commit_message<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">commit<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="39">"%an &lt;%ae&gt;"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="52">&amp;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="53">author_ident<pos:position pos:line="21" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="67">&amp;<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="68">pctx<pos:position pos:line="21" pos:column="72"/></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">format_commit_message<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">commit<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"%cn &lt;%ce&gt;"<pos:position pos:line="22" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="52">&amp;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="53">committer_ident<pos:position pos:line="22" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="70">&amp;<pos:position pos:line="22" pos:column="75"/></operator><name pos:line="22" pos:column="71">pctx<pos:position pos:line="22" pos:column="75"/></name></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strbuf_cmp<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">author_ident<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="40">committer_ident<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="57"/></condition><then pos:line="23" pos:column="57"> <block pos:line="23" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_addstr<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="32">format<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="40">"\n Author: "<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_addbuf_percentquote<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><operator pos:line="25" pos:column="44">&amp;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="45">format<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="53">&amp;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="54">author_ident<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">author_date_is_interesting<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">()<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42"> <block pos:line="27" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="28" pos:column="17">struct<pos:position pos:line="28" pos:column="23"/></name> <name pos:line="28" pos:column="24">strbuf<pos:position pos:line="28" pos:column="30"/></name></name></type> <name pos:line="28" pos:column="31">date<pos:position pos:line="28" pos:column="35"/></name> <init pos:line="28" pos:column="36">= <expr><name pos:line="28" pos:column="38">STRBUF_INIT<pos:position pos:line="28" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="50"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">format_commit_message<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">commit<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="47">"%ad"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="54">&amp;<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="55">date<pos:position pos:line="29" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="61">&amp;<pos:position pos:line="29" pos:column="66"/></operator><name pos:line="29" pos:column="62">pctx<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_addstr<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><operator pos:line="30" pos:column="31">&amp;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="32">format<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="40">"\n Date: "<pos:position pos:line="30" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addbuf_percentquote<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><operator pos:line="31" pos:column="44">&amp;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="45">format<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="53">&amp;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="54">date<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">strbuf_release<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><operator pos:line="32" pos:column="32">&amp;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="33">date<pos:position pos:line="32" pos:column="37"/></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">committer_ident_sufficiently_given<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">()<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51"> <block pos:line="34" pos:column="52">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">strbuf_addstr<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="32">format<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="40">"\n Committer: "<pos:position pos:line="35" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">strbuf_addbuf_percentquote<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><operator pos:line="36" pos:column="44">&amp;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="45">format<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="53">&amp;<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="54">committer_ident<pos:position pos:line="36" pos:column="69"/></name></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">advice_implicit_identity<pos:position pos:line="37" pos:column="45"/></name></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46"> <block pos:line="37" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">strbuf_addch<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><operator pos:line="38" pos:column="38">&amp;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="39">format<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="47">'\n'<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">strbuf_addstr<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><operator pos:line="39" pos:column="39">&amp;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="40">format<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="48">_<pos:position pos:line="39" pos:column="49"/></name><argument_list pos:line="39" pos:column="49">(<argument><expr><name pos:line="39" pos:column="50">implicit_ident_advice<pos:position pos:line="39" pos:column="71"/></name></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_release<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><operator pos:line="42" pos:column="24">&amp;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="25">author_ident<pos:position pos:line="42" pos:column="37"/></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">strbuf_release<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">committer_ident<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">init_revisions<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="25">rev<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">prefix<pos:position pos:line="45" pos:column="36"/></name></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">setup_revisions<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><literal type="number" pos:line="46" pos:column="25">0<pos:position pos:line="46" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">NULL<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">rev<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="40">NULL<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="48" pos:column="9">rev<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">.<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">diff<pos:position pos:line="48" pos:column="17"/></name></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <literal type="number" pos:line="48" pos:column="20">1<pos:position pos:line="48" pos:column="21"/></literal></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">rev<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">.<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">diffopt<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">.<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">output_format<pos:position pos:line="49" pos:column="34"/></name></name> <operator pos:line="49" pos:column="35">=<pos:position pos:line="49" pos:column="36"/></operator>
		<name pos:line="50" pos:column="17">DIFF_FORMAT_SHORTSTAT<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">|<pos:position pos:line="50" pos:column="40"/></operator> <name pos:line="50" pos:column="41">DIFF_FORMAT_SUMMARY<pos:position pos:line="50" pos:column="60"/></name></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="52" pos:column="9">rev<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">.<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">verbose_header<pos:position pos:line="52" pos:column="27"/></name></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="30">1<pos:position pos:line="52" pos:column="31"/></literal></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">rev<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">.<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">show_root_diff<pos:position pos:line="53" pos:column="27"/></name></name> <operator pos:line="53" pos:column="28">=<pos:position pos:line="53" pos:column="29"/></operator> <literal type="number" pos:line="53" pos:column="30">1<pos:position pos:line="53" pos:column="31"/></literal></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">get_commit_format<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name><name pos:line="54" pos:column="27">format<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">.<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="34">buf<pos:position pos:line="54" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="39">&amp;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="40">rev<pos:position pos:line="54" pos:column="43"/></name></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">rev<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">always_show_header<pos:position pos:line="55" pos:column="31"/></name></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <literal type="number" pos:line="55" pos:column="34">0<pos:position pos:line="55" pos:column="35"/></literal></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="56" pos:column="9">rev<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">.<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="13">diffopt<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">.<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">detect_rename<pos:position pos:line="56" pos:column="34"/></name></name> <operator pos:line="56" pos:column="35">=<pos:position pos:line="56" pos:column="36"/></operator> <literal type="number" pos:line="56" pos:column="37">1<pos:position pos:line="56" pos:column="38"/></literal></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="57" pos:column="9">rev<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">.<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">diffopt<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">.<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">break_opt<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <literal type="number" pos:line="57" pos:column="33">0<pos:position pos:line="57" pos:column="34"/></literal></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">diff_setup_done<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><operator pos:line="58" pos:column="25">&amp;<pos:position pos:line="58" pos:column="30"/></operator><name><name pos:line="58" pos:column="26">rev<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">.<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">diffopt<pos:position pos:line="58" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name pos:line="60" pos:column="9">head<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <call><name pos:line="60" pos:column="16">resolve_ref_unsafe<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><literal type="string" pos:line="60" pos:column="35">"HEAD"<pos:position pos:line="60" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">junk_sha1<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="54">0<pos:position pos:line="60" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="57">NULL<pos:position pos:line="60" pos:column="61"/></name></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">printf<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><literal type="string" pos:line="61" pos:column="16">"[%s%s "<pos:position pos:line="61" pos:column="24"/></literal></expr></argument>,
		<argument><expr><ternary><condition><expr><call><name pos:line="62" pos:column="17">starts_with<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">head<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="35">"refs/heads/"<pos:position pos:line="62" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="49"/></argument_list></call></expr> ?<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51">
			<expr><name pos:line="63" pos:column="25">head<pos:position pos:line="63" pos:column="29"/></name> <operator pos:line="63" pos:column="30">+<pos:position pos:line="63" pos:column="31"/></operator> <literal type="number" pos:line="63" pos:column="32">11<pos:position pos:line="63" pos:column="34"/></literal></expr> <pos:position pos:line="63" pos:column="35"/></then><else pos:line="63" pos:column="35">:
			<expr><ternary><condition><expr><operator pos:line="64" pos:column="25">!<pos:position pos:line="64" pos:column="26"/></operator><call><name pos:line="64" pos:column="26">strcmp<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">head<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="39">"HEAD"<pos:position pos:line="64" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr> ?<pos:position pos:line="64" pos:column="48"/></condition><then pos:line="64" pos:column="48">
				<expr><call><name pos:line="65" pos:column="33">_<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><literal type="string" pos:line="65" pos:column="35">"detached HEAD"<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call></expr> <pos:position pos:line="65" pos:column="52"/></then><else pos:line="65" pos:column="52">:
				<expr><name pos:line="66" pos:column="33">head<pos:position pos:line="66" pos:column="37"/></name></expr></else></ternary></expr></else></ternary></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="67" pos:column="17">initial_commit<pos:position pos:line="67" pos:column="31"/></name></expr> ?<pos:position pos:line="67" pos:column="33"/></condition><then pos:line="67" pos:column="33"> <expr><call><name pos:line="67" pos:column="34">_<pos:position pos:line="67" pos:column="35"/></name><argument_list pos:line="67" pos:column="35">(<argument><expr><literal type="string" pos:line="67" pos:column="36">" (root-commit)"<pos:position pos:line="67" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr> <pos:position pos:line="67" pos:column="54"/></then><else pos:line="67" pos:column="54">: <expr><literal type="string" pos:line="67" pos:column="56">""<pos:position pos:line="67" pos:column="58"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><call><name pos:line="69" pos:column="14">log_tree_commit<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><operator pos:line="69" pos:column="30">&amp;<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="31">rev<pos:position pos:line="69" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="36">commit<pos:position pos:line="69" pos:column="42"/></name></expr></argument>)<pos:position pos:line="69" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="44"/></condition><then pos:line="69" pos:column="44"> <block pos:line="69" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="70" pos:column="17">rev<pos:position pos:line="70" pos:column="20"/></name><operator pos:line="70" pos:column="20">.<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="21">always_show_header<pos:position pos:line="70" pos:column="39"/></name></name> <operator pos:line="70" pos:column="40">=<pos:position pos:line="70" pos:column="41"/></operator> <literal type="number" pos:line="70" pos:column="42">1<pos:position pos:line="70" pos:column="43"/></literal></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="71" pos:column="17">rev<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">.<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="21">use_terminator<pos:position pos:line="71" pos:column="35"/></name></name> <operator pos:line="71" pos:column="36">=<pos:position pos:line="71" pos:column="37"/></operator> <literal type="number" pos:line="71" pos:column="38">1<pos:position pos:line="71" pos:column="39"/></literal></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">log_tree_commit<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><operator pos:line="72" pos:column="33">&amp;<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="34">rev<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="39">commit<pos:position pos:line="72" pos:column="45"/></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="75" pos:column="9">strbuf_release<pos:position pos:line="75" pos:column="23"/></name><argument_list pos:line="75" pos:column="23">(<argument><expr><operator pos:line="75" pos:column="24">&amp;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="25">format<pos:position pos:line="75" pos:column="31"/></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

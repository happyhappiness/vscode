<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5635_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_shallow_ref<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">command<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="52">struct<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">shallow_info<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">si<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">lock_file<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">shallow_lock<pos:position pos:line="3" pos:column="45"/></name></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">oid_array<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">extra<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">OID_ARRAY_INIT<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">check_connected_options<pos:position pos:line="5" pos:column="39"/></name></name></type> <name pos:line="5" pos:column="40">opt<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><name pos:line="5" pos:column="46">CHECK_CONNECTED_INIT<pos:position pos:line="5" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint32_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">mask<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal> <operator pos:line="6" pos:column="27">&lt;&lt;<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="30">(<pos:position pos:line="6" pos:column="31"/></operator><name><name pos:line="6" pos:column="31">cmd<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">index<pos:position pos:line="6" pos:column="41"/></name></name> <operator pos:line="6" pos:column="42">%<pos:position pos:line="6" pos:column="43"/></operator> <literal type="number" pos:line="6" pos:column="44">32<pos:position pos:line="6" pos:column="46"/></literal><operator pos:line="6" pos:column="46">)<pos:position pos:line="6" pos:column="47"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">trace_printf_key<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><operator pos:line="9" pos:column="26">&amp;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="27">trace_shallow<pos:position pos:line="9" pos:column="40"/></name></expr></argument>,
			 <argument><expr><literal type="string" pos:line="10" pos:column="26">"shallow: update_shallow_ref %s\n"<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="62">cmd<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">-&gt;<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="67">ref_name<pos:position pos:line="10" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">si<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">shallow<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">nr<pos:position pos:line="11" pos:column="40"/></name></name></expr>;<pos:position pos:line="11" pos:column="41"/></condition> <incr><expr><name pos:line="11" pos:column="42">i<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">++<pos:position pos:line="11" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="46"/></control>
		<block type="pseudo"><if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">si<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">used_shallow<pos:position pos:line="12" pos:column="37"/></name><index pos:line="12" pos:column="37">[<expr><name pos:line="12" pos:column="38">i<pos:position pos:line="12" pos:column="39"/></name></expr>]<pos:position pos:line="12" pos:column="40"/></index></name> <operator pos:line="12" pos:column="41">&amp;&amp;<pos:position pos:line="12" pos:column="51"/></operator>
		    <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="22">si<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">used_shallow<pos:position pos:line="13" pos:column="38"/></name><index pos:line="13" pos:column="38">[<expr><name pos:line="13" pos:column="39">i<pos:position pos:line="13" pos:column="40"/></name></expr>]<pos:position pos:line="13" pos:column="41"/></index><index pos:line="13" pos:column="41">[<expr><name><name pos:line="13" pos:column="42">cmd<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">index<pos:position pos:line="13" pos:column="52"/></name></name> <operator pos:line="13" pos:column="53">/<pos:position pos:line="13" pos:column="54"/></operator> <literal type="number" pos:line="13" pos:column="55">32<pos:position pos:line="13" pos:column="57"/></literal></expr>]<pos:position pos:line="13" pos:column="58"/></index></name> <operator pos:line="13" pos:column="59">&amp;<pos:position pos:line="13" pos:column="64"/></operator> <name pos:line="13" pos:column="61">mask<pos:position pos:line="13" pos:column="65"/></name><operator pos:line="13" pos:column="65">)<pos:position pos:line="13" pos:column="66"/></operator> <operator pos:line="13" pos:column="67">&amp;&amp;<pos:position pos:line="13" pos:column="77"/></operator>
		    <operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">delayed_reachability_test<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><name pos:line="14" pos:column="48">si<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">i<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="55"/></condition><then pos:line="14" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">oid_array_append<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="43">extra<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="50">&amp;<pos:position pos:line="15" pos:column="55"/></operator><name><name pos:line="15" pos:column="51">si<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">shallow<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">-&gt;<pos:position pos:line="15" pos:column="67"/></operator><name pos:line="15" pos:column="64">oid<pos:position pos:line="15" pos:column="67"/></name><index pos:line="15" pos:column="67">[<expr><name pos:line="15" pos:column="68">i<pos:position pos:line="15" pos:column="69"/></name></expr>]<pos:position pos:line="15" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt></block></then></if></block></for>

	<expr_stmt><expr><name><name pos:line="17" pos:column="9">opt<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">env<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">tmp_objdir_env<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">tmp_objdir<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">setup_alternate_shallow<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="34">shallow_lock<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="48">&amp;<pos:position pos:line="18" pos:column="53"/></operator><name><name pos:line="18" pos:column="49">opt<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">.<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="53">shallow_file<pos:position pos:line="18" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="67">&amp;<pos:position pos:line="18" pos:column="72"/></operator><name pos:line="18" pos:column="68">extra<pos:position pos:line="18" pos:column="73"/></name></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="75"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">check_connected<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">command_singleton_iterator<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">cmd<pos:position pos:line="19" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="62">&amp;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="63">opt<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="68"/></condition><then pos:line="19" pos:column="68"> <block pos:line="19" pos:column="69">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">rollback_lock_file<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><operator pos:line="20" pos:column="36">&amp;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="37">shallow_lock<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">oid_array_clear<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="34">extra<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">-<pos:position pos:line="22" pos:column="25"/></operator><literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">commit_lock_file<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="27">shallow_lock<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>

	<comment type="block" pos:line="27" pos:column="9">/*
	 * Make sure setup_alternate_shallow() for the next ref does
	 * not lose these new roots..
	 */</comment>
	<for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">i<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="18">0<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></init> <condition><expr><name pos:line="31" pos:column="21">i<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">&lt;<pos:position pos:line="31" pos:column="27"/></operator> <name><name pos:line="31" pos:column="25">extra<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">.<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">nr<pos:position pos:line="31" pos:column="33"/></name></name></expr>;<pos:position pos:line="31" pos:column="34"/></condition> <incr><expr><name pos:line="31" pos:column="35">i<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">++<pos:position pos:line="31" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">register_shallow<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><operator pos:line="32" pos:column="34">&amp;<pos:position pos:line="32" pos:column="39"/></operator><name><name pos:line="32" pos:column="35">extra<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">.<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">oid<pos:position pos:line="32" pos:column="44"/></name><index pos:line="32" pos:column="44">[<expr><name pos:line="32" pos:column="45">i<pos:position pos:line="32" pos:column="46"/></name></expr>]<pos:position pos:line="32" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt></block></for>

	<expr_stmt><expr><name><name pos:line="34" pos:column="9">si<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">shallow_ref<pos:position pos:line="34" pos:column="24"/></name><index pos:line="34" pos:column="24">[<expr><name><name pos:line="34" pos:column="25">cmd<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">index<pos:position pos:line="34" pos:column="35"/></name></name></expr>]<pos:position pos:line="34" pos:column="36"/></index></name> <operator pos:line="34" pos:column="37">=<pos:position pos:line="34" pos:column="38"/></operator> <literal type="number" pos:line="34" pos:column="39">0<pos:position pos:line="34" pos:column="40"/></literal></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">oid_array_clear<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><operator pos:line="35" pos:column="25">&amp;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="26">extra<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

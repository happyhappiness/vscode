<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5645_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_connectivity_errors<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">command<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">commands<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">shallow_info<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">si<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">command<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">cmd<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">cmd<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">commands<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></init> <condition><expr><name pos:line="6" pos:column="30">cmd<pos:position pos:line="6" pos:column="33"/></name></expr>;<pos:position pos:line="6" pos:column="34"/></condition> <incr><expr><name pos:line="6" pos:column="35">cmd<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">=<pos:position pos:line="6" pos:column="40"/></operator> <name><name pos:line="6" pos:column="41">cmd<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">next<pos:position pos:line="6" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="51"/></control> <block pos:line="6" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">command<pos:position pos:line="7" pos:column="31"/></name></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">singleton<pos:position pos:line="7" pos:column="42"/></name> <init pos:line="7" pos:column="43">= <expr><name pos:line="7" pos:column="45">cmd<pos:position pos:line="7" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">check_connected_options<pos:position pos:line="8" pos:column="47"/></name></name></type> <name pos:line="8" pos:column="48">opt<pos:position pos:line="8" pos:column="51"/></name> <init pos:line="8" pos:column="52">= <expr><name pos:line="8" pos:column="54">CHECK_CONNECTED_INIT<pos:position pos:line="8" pos:column="74"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="75"/></decl_stmt>

		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">shallow_update<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">&amp;&amp;<pos:position pos:line="10" pos:column="46"/></operator> <name><name pos:line="10" pos:column="39">si<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">shallow_ref<pos:position pos:line="10" pos:column="54"/></name><index pos:line="10" pos:column="54">[<expr><name><name pos:line="10" pos:column="55">cmd<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">index<pos:position pos:line="10" pos:column="65"/></name></name></expr>]<pos:position pos:line="10" pos:column="66"/></index></name></expr>)<pos:position pos:line="10" pos:column="67"/></condition><then pos:line="10" pos:column="67">
			<comment type="block" pos:line="11" pos:column="25">/* to be checked in update_shallow_ref() */</comment>
			<block type="pseudo"><continue pos:line="12" pos:column="25">continue;<pos:position pos:line="12" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name><name pos:line="14" pos:column="17">opt<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">env<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <call><name pos:line="14" pos:column="27">tmp_objdir_env<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">tmp_objdir<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><call><name pos:line="15" pos:column="22">check_connected<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">command_singleton_iterator<pos:position pos:line="15" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="66">&amp;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="67">singleton<pos:position pos:line="15" pos:column="76"/></name></expr></argument>,
				     <argument><expr><operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="39">opt<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name><name pos:line="19" pos:column="17">cmd<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">error_string<pos:position pos:line="19" pos:column="34"/></name></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <literal type="string" pos:line="19" pos:column="37">"missing necessary objects"<pos:position pos:line="19" pos:column="64"/></literal></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

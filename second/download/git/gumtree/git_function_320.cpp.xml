<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_320.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_rename_copy<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">patch<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">p<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">renamecopy<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><ternary><condition><expr><name><name pos:line="3" pos:column="34">p<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">is_rename<pos:position pos:line="3" pos:column="46"/></name></name></expr> ?<pos:position pos:line="3" pos:column="48"/></condition><then pos:line="3" pos:column="48"> <expr><literal type="string" pos:line="3" pos:column="49">"rename"<pos:position pos:line="3" pos:column="57"/></literal></expr> <pos:position pos:line="3" pos:column="58"/></then><else pos:line="3" pos:column="58">: <expr><literal type="string" pos:line="3" pos:column="60">"copy"<pos:position pos:line="3" pos:column="66"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">old<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier>new;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Find common prefix */</comment>
	<expr_stmt><expr><name pos:line="7" pos:column="9">old<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">old_name<pos:position pos:line="7" pos:column="26"/></name></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="8" pos:column="9">new<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name><name pos:line="8" pos:column="15">p<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">new_name<pos:position pos:line="8" pos:column="26"/></name></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition> <block pos:line="9" pos:column="19">{
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">slash_old<pos:position pos:line="10" pos:column="38"/></name></decl>, <modifier pos:line="10" pos:column="40">*<pos:position pos:line="10" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="41">slash_new<pos:position pos:line="10" pos:column="50"/></name></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">slash_old<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <call><name pos:line="11" pos:column="29">strchr<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">old<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="41">'/'<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">slash_new<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="29">strchr<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><operator pos:line="12" pos:column="36">new<pos:position pos:line="12" pos:column="39"/></operator></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="41">'/'<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">slash_old<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">||<pos:position pos:line="13" pos:column="34"/></operator>
		    <operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">slash_new<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">||<pos:position pos:line="14" pos:column="34"/></operator>
		    <name pos:line="15" pos:column="21">slash_old<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">-<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">old<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">!=<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">slash_new<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">-<pos:position pos:line="15" pos:column="51"/></operator> <operator pos:line="15" pos:column="52">new<pos:position pos:line="15" pos:column="55"/></operator> <operator pos:line="15" pos:column="56">||<pos:position pos:line="15" pos:column="58"/></operator>
		    <call><name pos:line="16" pos:column="21">memcmp<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">old<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="33">new<pos:position pos:line="16" pos:column="36"/></operator></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">slash_new<pos:position pos:line="16" pos:column="47"/></name> <operator pos:line="16" pos:column="48">-<pos:position pos:line="16" pos:column="49"/></operator> <operator pos:line="16" pos:column="50">new<pos:position pos:line="16" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="55"/></condition><then pos:line="16" pos:column="55">
			<block type="pseudo"><break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">old<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">slash_old<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">+<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="35">1<pos:position pos:line="18" pos:column="36"/></literal></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="19" pos:column="17">new<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">slash_new<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">+<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">1<pos:position pos:line="19" pos:column="36"/></literal></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></while>
	<comment type="block" pos:line="21" pos:column="9">/* p-&gt;old_name thru old is the common prefix, and old and new
	 * through the end of names are renames
	 */</comment>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">old<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">!=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">p<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">old_name<pos:position pos:line="24" pos:column="31"/></name></name></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">printf<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="string" pos:line="25" pos:column="24">" %s %.*s{%s =&gt; %s} (%d%%)\n"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">renamecopy<pos:position pos:line="25" pos:column="65"/></name></expr></argument>,
		       <argument><expr><call pos:line="26" pos:column="24">(<name pos:line="26" pos:column="25">int<pos:position pos:line="26" pos:column="28"/></name>)<argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">old<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">-<pos:position pos:line="26" pos:column="35"/></operator> <name><name pos:line="26" pos:column="36">p<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">old_name<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="50">p<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">old_name<pos:position pos:line="26" pos:column="61"/></name></name></expr></argument>,
		       <argument><expr><name pos:line="27" pos:column="24">old<pos:position pos:line="27" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="29">new<pos:position pos:line="27" pos:column="32"/></operator></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="34">p<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">score<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt></block></then>
	<else pos:line="28" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">printf<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="string" pos:line="29" pos:column="24">" %s %s =&gt; %s (%d%%)\n"<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">renamecopy<pos:position pos:line="29" pos:column="59"/></name></expr></argument>,
		       <argument><expr><name><name pos:line="30" pos:column="24">p<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">old_name<pos:position pos:line="30" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="37">p<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">new_name<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="50">p<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">-&gt;<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="53">score<pos:position pos:line="30" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">show_mode_change<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">p<pos:position pos:line="31" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="29">0<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

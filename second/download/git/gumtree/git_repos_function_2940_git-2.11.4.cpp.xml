<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2940_git-2.11.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">spanhash_top<pos:position pos:line="1" pos:column="27"/></name></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">hash_chars<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">diff_filespec<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">one<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">n<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">accum1<pos:position pos:line="4" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="30">accum2<pos:position pos:line="4" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="38">hashval<pos:position pos:line="4" pos:column="45"/></name></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">spanhash_top<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">hash<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">buf<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name><name pos:line="6" pos:column="30">one<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">data<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">sz<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">one<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">size<pos:position pos:line="7" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">is_text<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><operator pos:line="8" pos:column="23">!<pos:position pos:line="8" pos:column="24"/></operator><call><name pos:line="8" pos:column="24">diff_filespec_is_binary<pos:position pos:line="8" pos:column="47"/></name><argument_list pos:line="8" pos:column="47">(<argument><expr><name pos:line="8" pos:column="48">one<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">i<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">INITIAL_HASH_SIZE<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">hash<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">xmalloc<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><call><name pos:line="11" pos:column="24">st_add<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><sizeof pos:line="11" pos:column="31">sizeof<argument_list pos:line="11" pos:column="37">(<argument><expr><operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">hash<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></sizeof></expr></argument>,
			      <argument><expr><call><name pos:line="12" pos:column="31">st_mult<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><sizeof pos:line="12" pos:column="39">sizeof<argument_list pos:line="12" pos:column="45">(<argument><expr pos:line="12" pos:column="46">struct <name pos:line="12" pos:column="53">spanhash<pos:position pos:line="12" pos:column="61"/></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="64">1<pos:position pos:line="12" pos:column="65"/></literal><operator pos:line="12" pos:column="65">&lt;&lt;<pos:position pos:line="12" pos:column="73"/></operator><name pos:line="12" pos:column="67">i<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">hash<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">alloc_log2<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">i<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">hash<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">free<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">INITIAL_FREE<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">i<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name><name pos:line="15" pos:column="16">hash<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">data<pos:position pos:line="15" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="31">sizeof<argument_list pos:line="15" pos:column="37">(<argument><expr pos:line="15" pos:column="38">struct <name pos:line="15" pos:column="45">spanhash<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></sizeof> <operator pos:line="15" pos:column="55">*<pos:position pos:line="15" pos:column="56"/></operator> <operator pos:line="15" pos:column="57">(<pos:position pos:line="15" pos:column="58"/></operator><literal type="number" pos:line="15" pos:column="58">1<pos:position pos:line="15" pos:column="59"/></literal><operator pos:line="15" pos:column="59">&lt;&lt;<pos:position pos:line="15" pos:column="67"/></operator><name pos:line="15" pos:column="61">i<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">)<pos:position pos:line="15" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">n<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">accum1<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">accum2<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">sz<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition> <block pos:line="19" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">unsigned<pos:position pos:line="20" pos:column="25"/></name> <name pos:line="20" pos:column="26">int<pos:position pos:line="20" pos:column="29"/></name></type> <name pos:line="20" pos:column="30">c<pos:position pos:line="20" pos:column="31"/></name> <init pos:line="20" pos:column="32">= <expr><operator pos:line="20" pos:column="34">*<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">buf<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">++<pos:position pos:line="20" pos:column="40"/></operator></expr></init></decl>;<pos:position pos:line="20" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">unsigned<pos:position pos:line="21" pos:column="25"/></name> <name pos:line="21" pos:column="26">int<pos:position pos:line="21" pos:column="29"/></name></type> <name pos:line="21" pos:column="30">old_1<pos:position pos:line="21" pos:column="35"/></name> <init pos:line="21" pos:column="36">= <expr><name pos:line="21" pos:column="38">accum1<pos:position pos:line="21" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="45"/></decl_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">sz<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">--<pos:position pos:line="22" pos:column="21"/></operator></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>

		<comment type="block" pos:line="24" pos:column="17">/* Ignore CR in CRLF sequence if text */</comment>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">is_text<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">&amp;&amp;<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="32">c<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <literal type="char" pos:line="25" pos:column="37">'\r'<pos:position pos:line="25" pos:column="41"/></literal> <operator pos:line="25" pos:column="42">&amp;&amp;<pos:position pos:line="25" pos:column="52"/></operator> <name pos:line="25" pos:column="45">sz<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">&amp;&amp;<pos:position pos:line="25" pos:column="58"/></operator> <operator pos:line="25" pos:column="51">*<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">buf<pos:position pos:line="25" pos:column="55"/></name> <operator pos:line="25" pos:column="56">==<pos:position pos:line="25" pos:column="58"/></operator> <literal type="char" pos:line="25" pos:column="59">'\n'<pos:position pos:line="25" pos:column="63"/></literal></expr>)<pos:position pos:line="25" pos:column="64"/></condition><then pos:line="25" pos:column="64">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="28" pos:column="17">accum1<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <operator pos:line="28" pos:column="26">(<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">accum1<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">&lt;&lt;<pos:position pos:line="28" pos:column="42"/></operator> <literal type="number" pos:line="28" pos:column="37">7<pos:position pos:line="28" pos:column="38"/></literal><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator> <operator pos:line="28" pos:column="40">^<pos:position pos:line="28" pos:column="41"/></operator> <operator pos:line="28" pos:column="42">(<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">accum2<pos:position pos:line="28" pos:column="49"/></name> <operator pos:line="28" pos:column="50">&gt;&gt;<pos:position pos:line="28" pos:column="55"/></operator> <literal type="number" pos:line="28" pos:column="53">25<pos:position pos:line="28" pos:column="55"/></literal><operator pos:line="28" pos:column="55">)<pos:position pos:line="28" pos:column="56"/></operator></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">accum2<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <operator pos:line="29" pos:column="26">(<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">accum2<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">&lt;&lt;<pos:position pos:line="29" pos:column="42"/></operator> <literal type="number" pos:line="29" pos:column="37">7<pos:position pos:line="29" pos:column="38"/></literal><operator pos:line="29" pos:column="38">)<pos:position pos:line="29" pos:column="39"/></operator> <operator pos:line="29" pos:column="40">^<pos:position pos:line="29" pos:column="41"/></operator> <operator pos:line="29" pos:column="42">(<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="43">old_1<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">&gt;&gt;<pos:position pos:line="29" pos:column="54"/></operator> <literal type="number" pos:line="29" pos:column="52">25<pos:position pos:line="29" pos:column="54"/></literal><operator pos:line="29" pos:column="54">)<pos:position pos:line="29" pos:column="55"/></operator></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">accum1<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">+=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">c<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">++<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">n<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">&lt;<pos:position pos:line="31" pos:column="29"/></operator> <literal type="number" pos:line="31" pos:column="27">64<pos:position pos:line="31" pos:column="29"/></literal> <operator pos:line="31" pos:column="30">&amp;&amp;<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="33">c<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">!=<pos:position pos:line="31" pos:column="37"/></operator> <literal type="char" pos:line="31" pos:column="38">'\n'<pos:position pos:line="31" pos:column="42"/></literal></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43">
			<block type="pseudo"><continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="33" pos:column="17">hashval<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <operator pos:line="33" pos:column="27">(<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">accum1<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">+<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">accum2<pos:position pos:line="33" pos:column="43"/></name> <operator pos:line="33" pos:column="44">*<pos:position pos:line="33" pos:column="45"/></operator> <literal type="number" pos:line="33" pos:column="46">0x61<pos:position pos:line="33" pos:column="50"/></literal><operator pos:line="33" pos:column="50">)<pos:position pos:line="33" pos:column="51"/></operator> <operator pos:line="33" pos:column="52">%<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">HASHBASE<pos:position pos:line="33" pos:column="62"/></name></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">hash<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <call><name pos:line="34" pos:column="24">add_spanhash<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">hash<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">hashval<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">n<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">n<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">accum1<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">accum2<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <literal type="number" pos:line="36" pos:column="35">0<pos:position pos:line="36" pos:column="36"/></literal></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">QSORT<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name><name pos:line="38" pos:column="15">hash<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">data<pos:position pos:line="38" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="27">1ul<pos:position pos:line="38" pos:column="30"/></literal> <operator pos:line="38" pos:column="31">&lt;&lt;<pos:position pos:line="38" pos:column="39"/></operator> <name><name pos:line="38" pos:column="34">hash<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">alloc_log2<pos:position pos:line="38" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">spanhash_cmp<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>
	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">hash<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

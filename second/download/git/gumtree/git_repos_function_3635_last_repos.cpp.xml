<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3635_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sqrti<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">val<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">float<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">d<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">x<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">val<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">val<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

	<do pos:line="8" pos:column="9">do <block pos:line="8" pos:column="12">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">float<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">y<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><operator pos:line="9" pos:column="27">(<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">x<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">+<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">float<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">)<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">val<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">/<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">x<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">)<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="48">/<pos:position pos:line="9" pos:column="49"/></operator> <literal type="number" pos:line="9" pos:column="50">2<pos:position pos:line="9" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">d<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">y<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">&gt;<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="26">x<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr> ?<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30"> <expr><name pos:line="10" pos:column="31">y<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">-<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">x<pos:position pos:line="10" pos:column="36"/></name></expr> <pos:position pos:line="10" pos:column="37"/></then><else pos:line="10" pos:column="37">: <expr><name pos:line="10" pos:column="39">x<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">-<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="43">y<pos:position pos:line="10" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">x<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">y<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block> while <condition pos:line="12" pos:column="17">(<expr><name pos:line="12" pos:column="18">d<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&gt;=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="23">0.5<pos:position pos:line="12" pos:column="26"/></literal></expr>)<pos:position pos:line="12" pos:column="27"/></condition>;<pos:position pos:line="12" pos:column="28"/></do>

	<return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">x<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2609.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_push_recurse<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">opt<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">arg<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">die_on_error<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<switch pos:line="4" pos:column="9">switch <condition pos:line="4" pos:column="16">(<expr><call><name pos:line="4" pos:column="17">git_config_maybe_bool<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">opt<pos:position pos:line="4" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="44">arg<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="49"/></condition> <block pos:line="4" pos:column="50">{
	<case pos:line="5" pos:column="9">case <expr><literal type="number" pos:line="5" pos:column="14">1<pos:position pos:line="5" pos:column="15"/></literal></expr>:<pos:position pos:line="5" pos:column="16"/></case>
		<comment type="block" pos:line="6" pos:column="17">/* There's no simple "on" value when pushing */</comment>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">die_on_error<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">die<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><literal type="string" pos:line="8" pos:column="29">"bad %s argument: %s"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">opt<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="57">arg<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt></block></then>
		<else pos:line="9" pos:column="17">else
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name pos:line="10" pos:column="32">RECURSE_SUBMODULES_ERROR<pos:position pos:line="10" pos:column="56"/></name></expr>;<pos:position pos:line="10" pos:column="57"/></return></block></else></if>
	<case pos:line="11" pos:column="9">case <expr><literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>:<pos:position pos:line="11" pos:column="16"/></case>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">RECURSE_SUBMODULES_OFF<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></return>
	<default pos:line="13" pos:column="9">default:<pos:position pos:line="13" pos:column="17"/></default>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">strcmp<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">arg<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"on-demand"<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><name pos:line="15" pos:column="32">RECURSE_SUBMODULES_ON_DEMAND<pos:position pos:line="15" pos:column="60"/></name></expr>;<pos:position pos:line="15" pos:column="61"/></return></block></then>
		<elseif pos:line="16" pos:column="17">else <if pos:line="16" pos:column="22">if <condition pos:line="16" pos:column="25">(<expr><operator pos:line="16" pos:column="26">!<pos:position pos:line="16" pos:column="27"/></operator><call><name pos:line="16" pos:column="27">strcmp<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">arg<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="39">"check"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><name pos:line="17" pos:column="32">RECURSE_SUBMODULES_CHECK<pos:position pos:line="17" pos:column="56"/></name></expr>;<pos:position pos:line="17" pos:column="57"/></return></block></then></if></elseif>
		<elseif pos:line="18" pos:column="17">else <if pos:line="18" pos:column="22">if <condition pos:line="18" pos:column="25">(<expr><name pos:line="18" pos:column="26">die_on_error<pos:position pos:line="18" pos:column="38"/></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">die<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="string" pos:line="19" pos:column="29">"bad %s argument: %s"<pos:position pos:line="19" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">opt<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">arg<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt></block></then></if></elseif>
		<else pos:line="20" pos:column="17">else
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><name pos:line="21" pos:column="32">RECURSE_SUBMODULES_ERROR<pos:position pos:line="21" pos:column="56"/></name></expr>;<pos:position pos:line="21" pos:column="57"/></return></block></else></if>
	}<pos:position pos:line="22" pos:column="10"/></block></switch>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

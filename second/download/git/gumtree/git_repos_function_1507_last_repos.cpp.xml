<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1507_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">http_get_info_packs<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">base_url<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">packed_git<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">packs_head<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">http_get_options<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">options<pos:position pos:line="3" pos:column="40"/></name> <init pos:line="3" pos:column="41">= <expr><block pos:line="3" pos:column="43">{<expr><literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr>}<pos:position pos:line="3" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">url<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">buf<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name></type> <name><name pos:line="7" pos:column="23">sha1<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><literal type="number" pos:line="7" pos:column="28">20<pos:position pos:line="7" pos:column="30"/></literal></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">end_url_with_slash<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="29">buf<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">base_url<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_addstr<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="29">"objects/info/packs"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">url<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">strbuf_detach<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><operator pos:line="11" pos:column="29">&amp;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="30">buf<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">NULL<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="13" pos:column="9">options<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">no_cache<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">http_get_strbuf<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">url<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="37">buf<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="43">options<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">ret<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">!=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">HTTP_OK<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
		<block type="pseudo"><goto pos:line="16" pos:column="17">goto <name pos:line="16" pos:column="22">cleanup<pos:position pos:line="16" pos:column="29"/></name>;<pos:position pos:line="16" pos:column="30"/></goto></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">data<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name><name pos:line="18" pos:column="16">buf<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">buf<pos:position pos:line="18" pos:column="23"/></name></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
	<while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">i<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">&lt;<pos:position pos:line="19" pos:column="22"/></operator> <name><name pos:line="19" pos:column="20">buf<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">.<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">len<pos:position pos:line="19" pos:column="27"/></name></name></expr>)<pos:position pos:line="19" pos:column="28"/></condition> <block pos:line="19" pos:column="29">{
		<switch pos:line="20" pos:column="17">switch <condition pos:line="20" pos:column="24">(<expr><name><name pos:line="20" pos:column="25">data<pos:position pos:line="20" pos:column="29"/></name><index pos:line="20" pos:column="29">[<expr><name pos:line="20" pos:column="30">i<pos:position pos:line="20" pos:column="31"/></name></expr>]<pos:position pos:line="20" pos:column="32"/></index></name></expr>)<pos:position pos:line="20" pos:column="33"/></condition> <block pos:line="20" pos:column="34">{
		<case pos:line="21" pos:column="17">case <expr><literal type="char" pos:line="21" pos:column="22">'P'<pos:position pos:line="21" pos:column="25"/></literal></expr>:<pos:position pos:line="21" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="22" pos:column="25">i<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">++<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name pos:line="23" pos:column="29">i<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">+<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">52<pos:position pos:line="23" pos:column="35"/></literal> <operator pos:line="23" pos:column="36">&lt;=<pos:position pos:line="23" pos:column="41"/></operator> <name><name pos:line="23" pos:column="39">buf<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">.<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">len<pos:position pos:line="23" pos:column="46"/></name></name> <operator pos:line="23" pos:column="47">&amp;&amp;<pos:position pos:line="23" pos:column="57"/></operator>
			    <call><name pos:line="24" pos:column="29">starts_with<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">data<pos:position pos:line="24" pos:column="45"/></name> <operator pos:line="24" pos:column="46">+<pos:position pos:line="24" pos:column="47"/></operator> <name pos:line="24" pos:column="48">i<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="51">" pack-"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call> <operator pos:line="24" pos:column="61">&amp;&amp;<pos:position pos:line="24" pos:column="71"/></operator>
			    <call><name pos:line="25" pos:column="29">starts_with<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">data<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">+<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="48">i<pos:position pos:line="25" pos:column="49"/></name> <operator pos:line="25" pos:column="50">+<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="52">46<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="56">".pack\n"<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="67"/></condition><then pos:line="25" pos:column="67"> <block pos:line="25" pos:column="68">{
				<expr_stmt><expr><call><name pos:line="26" pos:column="33">get_sha1_hex<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name pos:line="26" pos:column="46">data<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">+<pos:position pos:line="26" pos:column="52"/></operator> <name pos:line="26" pos:column="53">i<pos:position pos:line="26" pos:column="54"/></name> <operator pos:line="26" pos:column="55">+<pos:position pos:line="26" pos:column="56"/></operator> <literal type="number" pos:line="26" pos:column="57">6<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">sha1<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="27" pos:column="33">fetch_and_setup_pack_index<pos:position pos:line="27" pos:column="59"/></name><argument_list pos:line="27" pos:column="59">(<argument><expr><name pos:line="27" pos:column="60">packs_head<pos:position pos:line="27" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="72">sha1<pos:position pos:line="27" pos:column="76"/></name></expr></argument>,
						      <argument><expr><name pos:line="28" pos:column="55">base_url<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name pos:line="29" pos:column="33">i<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">+=<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="38">51<pos:position pos:line="29" pos:column="40"/></literal></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
				<break pos:line="30" pos:column="33">break;<pos:position pos:line="30" pos:column="39"/></break>
			}<pos:position pos:line="31" pos:column="26"/></block></then></if>
		<default pos:line="32" pos:column="17">default:<pos:position pos:line="32" pos:column="25"/></default>
			<while pos:line="33" pos:column="25">while <condition pos:line="33" pos:column="31">(<expr><name pos:line="33" pos:column="32">i<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">&lt;<pos:position pos:line="33" pos:column="38"/></operator> <name><name pos:line="33" pos:column="36">buf<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">.<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">len<pos:position pos:line="33" pos:column="43"/></name></name> <operator pos:line="33" pos:column="44">&amp;&amp;<pos:position pos:line="33" pos:column="54"/></operator> <name><name pos:line="33" pos:column="47">data<pos:position pos:line="33" pos:column="51"/></name><index pos:line="33" pos:column="51">[<expr><name pos:line="33" pos:column="52">i<pos:position pos:line="33" pos:column="53"/></name></expr>]<pos:position pos:line="33" pos:column="54"/></index></name> <operator pos:line="33" pos:column="55">!=<pos:position pos:line="33" pos:column="57"/></operator> <literal type="char" pos:line="33" pos:column="58">'\n'<pos:position pos:line="33" pos:column="62"/></literal></expr>)<pos:position pos:line="33" pos:column="63"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="33">i<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">++<pos:position pos:line="34" pos:column="36"/></operator></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt></block></while>
		}<pos:position pos:line="35" pos:column="18"/></block></switch>
		<expr_stmt><expr><name pos:line="36" pos:column="17">i<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">++<pos:position pos:line="36" pos:column="20"/></operator></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></while>

<label><name pos:line="39" pos:column="1">cleanup<pos:position pos:line="39" pos:column="8"/></name>:<pos:position pos:line="39" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">free<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">url<pos:position pos:line="40" pos:column="17"/></name></expr></argument>)<pos:position pos:line="40" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
	<return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">ret<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

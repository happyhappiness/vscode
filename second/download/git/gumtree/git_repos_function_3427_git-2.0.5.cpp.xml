<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3427_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fetch_pack_config<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">var<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">value<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">void<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">cb<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcmp<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name pos:line="3" pos:column="20">var<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="25">"fetch.unpacklimit"<pos:position pos:line="3" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call> <operator pos:line="3" pos:column="46">==<pos:position pos:line="3" pos:column="48"/></operator> <literal type="number" pos:line="3" pos:column="49">0<pos:position pos:line="3" pos:column="50"/></literal></expr>)<pos:position pos:line="3" pos:column="51"/></condition><then pos:line="3" pos:column="51"> <block pos:line="3" pos:column="52">{
		<expr_stmt><expr><name pos:line="4" pos:column="17">fetch_unpack_limit<pos:position pos:line="4" pos:column="35"/></name> <operator pos:line="4" pos:column="36">=<pos:position pos:line="4" pos:column="37"/></operator> <call><name pos:line="4" pos:column="38">git_config_int<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">var<pos:position pos:line="4" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="58">value<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt>
		<return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcmp<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">var<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="25">"transfer.unpacklimit"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call> <operator pos:line="8" pos:column="49">==<pos:position pos:line="8" pos:column="51"/></operator> <literal type="number" pos:line="8" pos:column="52">0<pos:position pos:line="8" pos:column="53"/></literal></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54"> <block pos:line="8" pos:column="55">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">transfer_unpack_limit<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">=<pos:position pos:line="9" pos:column="40"/></operator> <call><name pos:line="9" pos:column="41">git_config_int<pos:position pos:line="9" pos:column="55"/></name><argument_list pos:line="9" pos:column="55">(<argument><expr><name pos:line="9" pos:column="56">var<pos:position pos:line="9" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="61">value<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">strcmp<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">var<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">"repack.usedeltabaseoffset"<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call> <operator pos:line="13" pos:column="54">==<pos:position pos:line="13" pos:column="56"/></operator> <literal type="number" pos:line="13" pos:column="57">0<pos:position pos:line="13" pos:column="58"/></literal></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">prefer_ofs_delta<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <call><name pos:line="14" pos:column="36">git_config_bool<pos:position pos:line="14" pos:column="51"/></name><argument_list pos:line="14" pos:column="51">(<argument><expr><name pos:line="14" pos:column="52">var<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">value<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">strcmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">var<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"fetch.fsckobjects"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47"> <block pos:line="18" pos:column="48">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">fetch_fsck_objects<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <call><name pos:line="19" pos:column="38">git_config_bool<pos:position pos:line="19" pos:column="53"/></name><argument_list pos:line="19" pos:column="53">(<argument><expr><name pos:line="19" pos:column="54">var<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">value<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">strcmp<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">var<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="26">"transfer.fsckobjects"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <block pos:line="23" pos:column="51">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">transfer_fsck_objects<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">=<pos:position pos:line="24" pos:column="40"/></operator> <call><name pos:line="24" pos:column="41">git_config_bool<pos:position pos:line="24" pos:column="56"/></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name pos:line="24" pos:column="57">var<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">value<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">git_default_config<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">var<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">value<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">cb<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

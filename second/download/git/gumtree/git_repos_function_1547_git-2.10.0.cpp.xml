<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1547_git-2.10.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">odb_mkstemp<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier><specifier pos:line="1" pos:column="23">template<pos:position pos:line="1" pos:column="31"/></specifier></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">size_t<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">limit<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">pattern<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<comment type="block" pos:line="4" pos:column="9">/*
	 * we let the umask do its job, don't try to be more
	 * restrictive except to remove write permission.
	 */</comment>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">mode<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0444<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
	<macro><name pos:line="9" pos:column="9">snprintf<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument pos:line="9" pos:column="18">template<pos:position pos:line="9" pos:column="26"/></argument>, <argument pos:line="9" pos:column="28">limit<pos:position pos:line="9" pos:column="33"/></argument>, <argument><literal type="string" pos:line="9" pos:column="35">"%s/%s"<pos:position pos:line="9" pos:column="42"/></literal></argument>,
		 <argument pos:line="10" pos:column="18">get_object_directory()<pos:position pos:line="10" pos:column="40"/></argument>, <argument pos:line="10" pos:column="42">pattern<pos:position pos:line="10" pos:column="49"/></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></macro><empty_stmt pos:line="10" pos:column="50">;<pos:position pos:line="10" pos:column="51"/></empty_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">fd<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <macro><name pos:line="11" pos:column="14">git_mkstemp_mode<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument pos:line="11" pos:column="31">template<pos:position pos:line="11" pos:column="39"/></argument>, <argument pos:line="11" pos:column="41">mode<pos:position pos:line="11" pos:column="45"/></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></macro></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal> <operator pos:line="12" pos:column="15">&lt;=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="18">fd<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">fd<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* slow path */</comment>
	<comment type="block" pos:line="16" pos:column="9">/* some mkstemp implementations erase template on failure */</comment>
	<macro><name pos:line="17" pos:column="9">snprintf<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument pos:line="17" pos:column="18">template<pos:position pos:line="17" pos:column="26"/></argument>, <argument pos:line="17" pos:column="28">limit<pos:position pos:line="17" pos:column="33"/></argument>, <argument><literal type="string" pos:line="17" pos:column="35">"%s/%s"<pos:position pos:line="17" pos:column="42"/></literal></argument>,
		 <argument pos:line="18" pos:column="18">get_object_directory()<pos:position pos:line="18" pos:column="40"/></argument>, <argument pos:line="18" pos:column="42">pattern<pos:position pos:line="18" pos:column="49"/></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></macro><empty_stmt pos:line="18" pos:column="50">;<pos:position pos:line="18" pos:column="51"/></empty_stmt>
	<macro><name pos:line="19" pos:column="9">safe_create_leading_directories<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument pos:line="19" pos:column="41">template<pos:position pos:line="19" pos:column="49"/></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></macro><empty_stmt pos:line="19" pos:column="50">;<pos:position pos:line="19" pos:column="51"/></empty_stmt>
	<return pos:line="20" pos:column="9">return <macro><name pos:line="20" pos:column="16">xmkstemp_mode<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument pos:line="20" pos:column="30">template<pos:position pos:line="20" pos:column="38"/></argument>, <argument pos:line="20" pos:column="40">mode<pos:position pos:line="20" pos:column="44"/></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></macro>;<pos:position pos:line="20" pos:column="46"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

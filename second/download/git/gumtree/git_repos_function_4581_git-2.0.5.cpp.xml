<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4581_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">s_update_ref<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">action<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">ref<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">ref<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="3" pos:column="25">int<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">check_old<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">msg<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">1024<pos:position pos:line="5" pos:column="22"/></literal></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">rla<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><call><name pos:line="6" pos:column="21">getenv<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><literal type="string" pos:line="6" pos:column="28">"GIT_REFLOG_ACTION"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name><name pos:line="7" pos:column="16">struct<pos:position pos:line="7" pos:column="22"/></name> <name pos:line="7" pos:column="23">ref_lock<pos:position pos:line="7" pos:column="31"/></name></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">lock<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">dry_run<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">rla<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">rla<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name><name pos:line="12" pos:column="23">default_rla<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">buf<pos:position pos:line="12" pos:column="38"/></name></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">snprintf<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">msg<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="23">sizeof<argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">msg<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="36">"%s: %s"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">rla<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">action<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">lock<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">lock_any_ref_for_update<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name><name pos:line="14" pos:column="40">ref<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">name<pos:position pos:line="14" pos:column="49"/></name></name></expr></argument>,
				       <argument><expr><ternary><condition><expr><name pos:line="15" pos:column="40">check_old<pos:position pos:line="15" pos:column="49"/></name></expr> ?<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51"> <expr><name><name pos:line="15" pos:column="52">ref<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">-&gt;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="57">old_sha1<pos:position pos:line="15" pos:column="65"/></name></name></expr> <pos:position pos:line="15" pos:column="66"/></then><else pos:line="15" pos:column="66">: <expr><name pos:line="15" pos:column="68">NULL<pos:position pos:line="15" pos:column="72"/></name></expr></else></ternary></expr></argument>,
				       <argument><expr><literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">NULL<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">lock<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><ternary><condition><expr><name pos:line="18" pos:column="24">errno<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">==<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">ENOTDIR<pos:position pos:line="18" pos:column="40"/></name></expr> ?<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42"> <expr><name pos:line="18" pos:column="43">STORE_REF_ERROR_DF_CONFLICT<pos:position pos:line="18" pos:column="70"/></name></expr> <pos:position pos:line="18" pos:column="71"/></then><else pos:line="18" pos:column="71">:
					  <expr><name pos:line="19" pos:column="43">STORE_REF_ERROR_OTHER<pos:position pos:line="19" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="65"/></return></block></then></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">write_ref_sha1<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">lock<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="34">ref<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">new_sha1<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">msg<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call> <operator pos:line="20" pos:column="54">&lt;<pos:position pos:line="20" pos:column="58"/></operator> <literal type="number" pos:line="20" pos:column="56">0<pos:position pos:line="20" pos:column="57"/></literal></expr>)<pos:position pos:line="20" pos:column="58"/></condition><then pos:line="20" pos:column="58">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><ternary><condition><expr><name pos:line="21" pos:column="24">errno<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">==<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">ENOTDIR<pos:position pos:line="21" pos:column="40"/></name></expr> ?<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <expr><name pos:line="21" pos:column="43">STORE_REF_ERROR_DF_CONFLICT<pos:position pos:line="21" pos:column="70"/></name></expr> <pos:position pos:line="21" pos:column="71"/></then><else pos:line="21" pos:column="71">:
					  <expr><name pos:line="22" pos:column="43">STORE_REF_ERROR_OTHER<pos:position pos:line="22" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="65"/></return></block></then></if>
	<return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

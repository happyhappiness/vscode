<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3582_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">rerere_id<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">id<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">path<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">f<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">mmfile_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">cur<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><block pos:line="5" pos:column="24">{<expr><name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr>, <expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr>}<pos:position pos:line="5" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">mmbuffer_t<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">result<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><block pos:line="6" pos:column="29">{<expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr>}<pos:position pos:line="6" pos:column="38"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * Normalize the conflicts in path and write it out to
	 * "thisimage" temporary file.
	 */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">handle_file<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">path<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">NULL<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="38">rerere_path<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">id<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="54">"thisimage"<pos:position pos:line="12" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call> <operator pos:line="12" pos:column="68">&lt;<pos:position pos:line="12" pos:column="72"/></operator> <literal type="number" pos:line="12" pos:column="70">0<pos:position pos:line="12" pos:column="71"/></literal><operator pos:line="12" pos:column="71">)<pos:position pos:line="12" pos:column="72"/></operator> <operator pos:line="12" pos:column="73">||<pos:position pos:line="12" pos:column="75"/></operator>
	    <call><name pos:line="13" pos:column="13">read_mmfile<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="26">cur<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="31">rerere_path<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">id<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="47">"thisimage"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">ret<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="23">1<pos:position pos:line="14" pos:column="24"/></literal></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
		<goto pos:line="15" pos:column="17">goto <name pos:line="15" pos:column="22">out<pos:position pos:line="15" pos:column="25"/></name>;<pos:position pos:line="15" pos:column="26"/></goto>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">try_merge<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">id<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">path<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="35">&amp;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="36">cur<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="42">result<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">ret<pos:position pos:line="19" pos:column="16"/></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17">
		<block type="pseudo"><goto pos:line="20" pos:column="17">goto <name pos:line="20" pos:column="22">out<pos:position pos:line="20" pos:column="25"/></name>;<pos:position pos:line="20" pos:column="26"/></goto></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/*
	 * A successful replay of recorded resolution.
	 * Mark that "postimage" was used to help gc.
	 */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">utime<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><call><name pos:line="26" pos:column="19">rerere_path<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">id<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"postimage"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">NULL<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call> <operator pos:line="26" pos:column="55">&lt;<pos:position pos:line="26" pos:column="59"/></operator> <literal type="number" pos:line="26" pos:column="57">0<pos:position pos:line="26" pos:column="58"/></literal></expr>)<pos:position pos:line="26" pos:column="59"/></condition><then pos:line="26" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">warning_errno<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><literal type="string" pos:line="27" pos:column="31">"failed utime() on %s"<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>,
			      <argument><expr><call><name pos:line="28" pos:column="31">rerere_path<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name pos:line="28" pos:column="43">id<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="47">"postimage"<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="30" pos:column="9">/* Update "path" with the resolution */</comment>
	<expr_stmt><expr><name pos:line="31" pos:column="9">f<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">fopen<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">path<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="25">"w"<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">f<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16">
		<block type="pseudo"><return pos:line="33" pos:column="17">return <expr><call><name pos:line="33" pos:column="24">error_errno<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><literal type="string" pos:line="33" pos:column="36">"Could not open %s"<pos:position pos:line="33" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="57">path<pos:position pos:line="33" pos:column="61"/></name></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="63"/></return></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">fwrite<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name><name pos:line="34" pos:column="20">result<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">.<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">ptr<pos:position pos:line="34" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="32">result<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">.<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">size<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="45">1<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="48">f<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call> <operator pos:line="34" pos:column="51">!=<pos:position pos:line="34" pos:column="53"/></operator> <literal type="number" pos:line="34" pos:column="54">1<pos:position pos:line="34" pos:column="55"/></literal></expr>)<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">error_errno<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="string" pos:line="35" pos:column="29">"Could not write %s"<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="51">path<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">fclose<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">f<pos:position pos:line="36" pos:column="21"/></name></expr></argument>)<pos:position pos:line="36" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="23"/></condition><then pos:line="36" pos:column="23">
		<block type="pseudo"><return pos:line="37" pos:column="17">return <expr><call><name pos:line="37" pos:column="24">error_errno<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><literal type="string" pos:line="37" pos:column="36">"Writing %s failed"<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="57">path<pos:position pos:line="37" pos:column="61"/></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="63"/></return></block></then></if>

<label><name pos:line="39" pos:column="1">out<pos:position pos:line="39" pos:column="4"/></name>:<pos:position pos:line="39" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">free<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name><name pos:line="40" pos:column="14">cur<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">.<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">ptr<pos:position pos:line="40" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">free<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><name><name pos:line="41" pos:column="14">result<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">ptr<pos:position pos:line="41" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">ret<pos:position pos:line="43" pos:column="19"/></name></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1386.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">strip_submodule_slash_expensive<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name><name pos:line="1" pos:column="45">struct<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">pathspec_item<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">item<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="25">active_nr<pos:position pos:line="5" pos:column="34"/></name></expr>;<pos:position pos:line="5" pos:column="35"/></condition> <incr><expr><name pos:line="5" pos:column="36">i<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">++<pos:position pos:line="5" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="40"/></control> <block pos:line="5" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="6" pos:column="17">struct<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">cache_entry<pos:position pos:line="6" pos:column="35"/></name></name> <modifier pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></modifier></type><name pos:line="6" pos:column="37">ce<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><name><name pos:line="6" pos:column="42">active_cache<pos:position pos:line="6" pos:column="54"/></name><index pos:line="6" pos:column="54">[<expr><name pos:line="6" pos:column="55">i<pos:position pos:line="6" pos:column="56"/></name></expr>]<pos:position pos:line="6" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">ce_len<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><call><name pos:line="7" pos:column="30">ce_namelen<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">ce<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>

		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">S_ISGITLINK<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">ce<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">ce_mode<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">item<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">len<pos:position pos:line="12" pos:column="30"/></name></name> <operator pos:line="12" pos:column="31">&lt;=<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="34">ce_len<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">||<pos:position pos:line="12" pos:column="43"/></operator> <name><name pos:line="12" pos:column="44">item<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">match<pos:position pos:line="12" pos:column="55"/></name><index pos:line="12" pos:column="55">[<expr><name pos:line="12" pos:column="56">ce_len<pos:position pos:line="12" pos:column="62"/></name></expr>]<pos:position pos:line="12" pos:column="63"/></index></name> <operator pos:line="12" pos:column="64">!=<pos:position pos:line="12" pos:column="66"/></operator> <literal type="char" pos:line="12" pos:column="67">'/'<pos:position pos:line="12" pos:column="70"/></literal> <operator pos:line="12" pos:column="71">||<pos:position pos:line="12" pos:column="73"/></operator>
		    <call><name pos:line="13" pos:column="21">memcmp<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name><name pos:line="13" pos:column="28">ce<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">name<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="38">item<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">match<pos:position pos:line="13" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">ce_len<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">item<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">len<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">==<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">ce_len<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">+<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="43">1<pos:position pos:line="16" pos:column="44"/></literal></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
			<comment type="block" pos:line="17" pos:column="25">/* strip trailing slash */</comment>
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">item<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">len<pos:position pos:line="18" pos:column="34"/></name></name><operator pos:line="18" pos:column="34">--<pos:position pos:line="18" pos:column="36"/></operator></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="19" pos:column="25">item<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">match<pos:position pos:line="19" pos:column="36"/></name><index pos:line="19" pos:column="36">[<expr><name><name pos:line="19" pos:column="37">item<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">len<pos:position pos:line="19" pos:column="46"/></name></name></expr>]<pos:position pos:line="19" pos:column="47"/></index></name> <operator pos:line="19" pos:column="48">=<pos:position pos:line="19" pos:column="49"/></operator> <literal type="char" pos:line="19" pos:column="50">'\0'<pos:position pos:line="19" pos:column="54"/></literal></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <else pos:line="20" pos:column="19">else <block pos:line="20" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><call><name pos:line="21" pos:column="29">_<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">"Pathspec '%s' is in submodule '%.*s'"<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="22" pos:column="29">item<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">original<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">ce_len<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="53">ce<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-&gt;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="57">name<pos:position pos:line="22" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

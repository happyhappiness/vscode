<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4435_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_duplicate<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">ref<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ref1<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="48">struct<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">ref<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ref2<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcmp<pos:position pos:line="3" pos:column="19"/></name><argument_list pos:line="3" pos:column="19">(<argument><expr><name><name pos:line="3" pos:column="20">ref1<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">-&gt;<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="26">name<pos:position pos:line="3" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="32">ref2<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">name<pos:position pos:line="3" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="44"/></condition><then pos:line="3" pos:column="44"> <block pos:line="3" pos:column="45">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><name><name pos:line="4" pos:column="21">ref1<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">fetch_head_status<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">!=<pos:position pos:line="4" pos:column="47"/></operator> <name pos:line="4" pos:column="48">FETCH_HEAD_IGNORE<pos:position pos:line="4" pos:column="65"/></name> <operator pos:line="4" pos:column="66">&amp;&amp;<pos:position pos:line="4" pos:column="76"/></operator>
		    <name><name pos:line="5" pos:column="21">ref2<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">fetch_head_status<pos:position pos:line="5" pos:column="44"/></name></name> <operator pos:line="5" pos:column="45">!=<pos:position pos:line="5" pos:column="47"/></operator> <name pos:line="5" pos:column="48">FETCH_HEAD_IGNORE<pos:position pos:line="5" pos:column="65"/></name></expr>)<pos:position pos:line="5" pos:column="66"/></condition><then pos:line="5" pos:column="66"> <block pos:line="5" pos:column="67">{
			<expr_stmt><expr><call><name pos:line="6" pos:column="25">die<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><call><name pos:line="6" pos:column="29">_<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><literal type="string" pos:line="6" pos:column="31">"Cannot fetch both %s and %s to %s"<pos:position pos:line="6" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="7" pos:column="29">ref1<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">name<pos:position pos:line="7" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="41">ref2<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">name<pos:position pos:line="7" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="53">ref2<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">-&gt;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="59">peer_ref<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">-&gt;<pos:position pos:line="7" pos:column="72"/></operator><name pos:line="7" pos:column="69">name<pos:position pos:line="7" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="8" pos:column="18"/></block></then> <elseif pos:line="8" pos:column="19">else <if pos:line="8" pos:column="24">if <condition pos:line="8" pos:column="27">(<expr><name><name pos:line="8" pos:column="28">ref1<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">fetch_head_status<pos:position pos:line="8" pos:column="51"/></name></name> <operator pos:line="8" pos:column="52">!=<pos:position pos:line="8" pos:column="54"/></operator> <name pos:line="8" pos:column="55">FETCH_HEAD_IGNORE<pos:position pos:line="8" pos:column="72"/></name> <operator pos:line="8" pos:column="73">&amp;&amp;<pos:position pos:line="8" pos:column="83"/></operator>
			   <name><name pos:line="9" pos:column="28">ref2<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">fetch_head_status<pos:position pos:line="9" pos:column="51"/></name></name> <operator pos:line="9" pos:column="52">==<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="55">FETCH_HEAD_IGNORE<pos:position pos:line="9" pos:column="72"/></name></expr>)<pos:position pos:line="9" pos:column="73"/></condition><then pos:line="9" pos:column="73"> <block pos:line="9" pos:column="74">{
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">warning<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><call><name pos:line="10" pos:column="33">_<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><literal type="string" pos:line="10" pos:column="35">"%s usually tracks %s, not %s"<pos:position pos:line="10" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="11" pos:column="33">ref2<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">peer_ref<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">name<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="55">ref2<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">name<pos:position pos:line="11" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="67">ref1<pos:position pos:line="11" pos:column="71"/></name><operator pos:line="11" pos:column="71">-&gt;<pos:position pos:line="11" pos:column="76"/></operator><name pos:line="11" pos:column="73">name<pos:position pos:line="11" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></then></if></elseif> <elseif pos:line="12" pos:column="19">else <if pos:line="12" pos:column="24">if <condition pos:line="12" pos:column="27">(<expr><name><name pos:line="12" pos:column="28">ref1<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">fetch_head_status<pos:position pos:line="12" pos:column="51"/></name></name> <operator pos:line="12" pos:column="52">==<pos:position pos:line="12" pos:column="54"/></operator> <name pos:line="12" pos:column="55">FETCH_HEAD_IGNORE<pos:position pos:line="12" pos:column="72"/></name> <operator pos:line="12" pos:column="73">&amp;&amp;<pos:position pos:line="12" pos:column="83"/></operator>
			   <name><name pos:line="13" pos:column="28">ref2<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">fetch_head_status<pos:position pos:line="13" pos:column="51"/></name></name> <operator pos:line="13" pos:column="52">==<pos:position pos:line="13" pos:column="54"/></operator> <name pos:line="13" pos:column="55">FETCH_HEAD_IGNORE<pos:position pos:line="13" pos:column="72"/></name></expr>)<pos:position pos:line="13" pos:column="73"/></condition><then pos:line="13" pos:column="73"> <block pos:line="13" pos:column="74">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">die<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><call><name pos:line="14" pos:column="29">_<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><literal type="string" pos:line="14" pos:column="31">"%s tracks both %s and %s"<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="15" pos:column="29">ref2<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">peer_ref<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">name<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="51">ref1<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">-&gt;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="57">name<pos:position pos:line="15" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="63">ref2<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">-&gt;<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="69">name<pos:position pos:line="15" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if></elseif> <else pos:line="16" pos:column="19">else <block pos:line="16" pos:column="24">{
			<comment type="block" pos:line="17" pos:column="25">/*
			 * This last possibility doesn't occur because
			 * FETCH_HEAD_IGNORE entries always appear at
			 * the end of the list.
			 */</comment>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">die<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><call><name pos:line="22" pos:column="29">_<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><literal type="string" pos:line="22" pos:column="31">"Internal error"<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name><name pos:line="25" pos:column="14">ref2<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">peer_ref<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">free<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">ref2<pos:position pos:line="26" pos:column="18"/></name></expr></argument>)<pos:position pos:line="26" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

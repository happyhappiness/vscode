<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4417_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">compare_delta_entry<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">a<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">void<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">b<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">delta_entry<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">delta_a<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><name pos:line="3" pos:column="45">a<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">delta_entry<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">delta_b<pos:position pos:line="4" pos:column="42"/></name> <init pos:line="4" pos:column="43">= <expr><name pos:line="4" pos:column="45">b<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* group by type (ref vs ofs) and then by value (sha-1 or offset) */</comment>
	<return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">compare_delta_bases<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator><name><name pos:line="7" pos:column="37">delta_a<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">base<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="52">&amp;<pos:position pos:line="7" pos:column="57"/></operator><name><name pos:line="7" pos:column="53">delta_b<pos:position pos:line="7" pos:column="60"/></name><operator pos:line="7" pos:column="60">-&gt;<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="62">base<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>,
				   <argument><expr><name><name pos:line="8" pos:column="36">objects<pos:position pos:line="8" pos:column="43"/></name><index pos:line="8" pos:column="43">[<expr><name><name pos:line="8" pos:column="44">delta_a<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">obj_no<pos:position pos:line="8" pos:column="59"/></name></name></expr>]<pos:position pos:line="8" pos:column="60"/></index></name><operator pos:line="8" pos:column="60">.<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="61">type<pos:position pos:line="8" pos:column="65"/></name></expr></argument>,
				   <argument><expr><name><name pos:line="9" pos:column="36">objects<pos:position pos:line="9" pos:column="43"/></name><index pos:line="9" pos:column="43">[<expr><name><name pos:line="9" pos:column="44">delta_b<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">obj_no<pos:position pos:line="9" pos:column="59"/></name></name></expr>]<pos:position pos:line="9" pos:column="60"/></index></name><operator pos:line="9" pos:column="60">.<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="61">type<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

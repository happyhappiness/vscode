<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4552_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_scissors_line<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">strbuf<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">line<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">len<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name><name pos:line="3" pos:column="25">line<pos:position pos:line="3" pos:column="29"/></name><operator pos:line="3" pos:column="29">-&gt;<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="31">len<pos:position pos:line="3" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">scissors<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">gap<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">first_nonblank<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">-<pos:position pos:line="5" pos:column="31"/></operator><literal type="number" pos:line="5" pos:column="31">1<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">last_nonblank<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="32">visible<pos:position pos:line="6" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="41">perforation<pos:position pos:line="6" pos:column="52"/></name> <init pos:line="6" pos:column="53">= <expr><literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="58">in_perforation<pos:position pos:line="6" pos:column="72"/></name> <init pos:line="6" pos:column="73">= <expr><literal type="number" pos:line="6" pos:column="75">0<pos:position pos:line="6" pos:column="76"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="77"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">buf<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">line<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">buf<pos:position pos:line="7" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">len<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></condition> <incr><expr><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">++<pos:position pos:line="9" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="34"/></control> <block pos:line="9" pos:column="35">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">isspace<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">buf<pos:position pos:line="10" pos:column="32"/></name><index pos:line="10" pos:column="32">[<expr><name pos:line="10" pos:column="33">i<pos:position pos:line="10" pos:column="34"/></name></expr>]<pos:position pos:line="10" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37"> <block pos:line="10" pos:column="38">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name pos:line="11" pos:column="29">in_perforation<pos:position pos:line="11" pos:column="43"/></name></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <block pos:line="11" pos:column="45">{
				<expr_stmt><expr><name pos:line="12" pos:column="33">perforation<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">++<pos:position pos:line="12" pos:column="46"/></operator></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="13" pos:column="33">gap<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">++<pos:position pos:line="13" pos:column="38"/></operator></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="14" pos:column="26"/></block></then></if>
			<continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">last_nonblank<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">i<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">first_nonblank<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">&lt;<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="38">0<pos:position pos:line="18" pos:column="39"/></literal></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">first_nonblank<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">=<pos:position pos:line="19" pos:column="41"/></operator> <name pos:line="19" pos:column="42">i<pos:position pos:line="19" pos:column="43"/></name></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">buf<pos:position pos:line="20" pos:column="24"/></name><index pos:line="20" pos:column="24">[<expr><name pos:line="20" pos:column="25">i<pos:position pos:line="20" pos:column="26"/></name></expr>]<pos:position pos:line="20" pos:column="27"/></index></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <literal type="char" pos:line="20" pos:column="31">'-'<pos:position pos:line="20" pos:column="34"/></literal></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">in_perforation<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">=<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="42">1<pos:position pos:line="21" pos:column="43"/></literal></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">perforation<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">++<pos:position pos:line="22" pos:column="38"/></operator></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
			<continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">i<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">+<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="25">1<pos:position pos:line="25" pos:column="26"/></literal> <operator pos:line="25" pos:column="27">&lt;<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="29">len<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">&amp;&amp;<pos:position pos:line="25" pos:column="43"/></operator>
		    <operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><operator pos:line="26" pos:column="22">!<pos:position pos:line="26" pos:column="23"/></operator><call><name pos:line="26" pos:column="23">memcmp<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">buf<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">+<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">i<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"&gt;8"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="45">2<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call> <operator pos:line="26" pos:column="48">||<pos:position pos:line="26" pos:column="50"/></operator> <operator pos:line="26" pos:column="51">!<pos:position pos:line="26" pos:column="52"/></operator><call><name pos:line="26" pos:column="52">memcmp<pos:position pos:line="26" pos:column="58"/></name><argument_list pos:line="26" pos:column="58">(<argument><expr><name pos:line="26" pos:column="59">buf<pos:position pos:line="26" pos:column="62"/></name> <operator pos:line="26" pos:column="63">+<pos:position pos:line="26" pos:column="64"/></operator> <name pos:line="26" pos:column="65">i<pos:position pos:line="26" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="68">"8&lt;"<pos:position pos:line="26" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="74">2<pos:position pos:line="26" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call> <operator pos:line="26" pos:column="77">||<pos:position pos:line="26" pos:column="79"/></operator>
		     <operator pos:line="27" pos:column="22">!<pos:position pos:line="27" pos:column="23"/></operator><call><name pos:line="27" pos:column="23">memcmp<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">buf<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">+<pos:position pos:line="27" pos:column="35"/></operator> <name pos:line="27" pos:column="36">i<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"&gt;%"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="45">2<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call> <operator pos:line="27" pos:column="48">||<pos:position pos:line="27" pos:column="50"/></operator> <operator pos:line="27" pos:column="51">!<pos:position pos:line="27" pos:column="52"/></operator><call><name pos:line="27" pos:column="52">memcmp<pos:position pos:line="27" pos:column="58"/></name><argument_list pos:line="27" pos:column="58">(<argument><expr><name pos:line="27" pos:column="59">buf<pos:position pos:line="27" pos:column="62"/></name> <operator pos:line="27" pos:column="63">+<pos:position pos:line="27" pos:column="64"/></operator> <name pos:line="27" pos:column="65">i<pos:position pos:line="27" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="68">"%&lt;"<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="74">2<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="76"/></argument_list></call><operator pos:line="27" pos:column="76">)<pos:position pos:line="27" pos:column="77"/></operator></expr>)<pos:position pos:line="27" pos:column="78"/></condition><then pos:line="27" pos:column="78"> <block pos:line="27" pos:column="79">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">in_perforation<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">=<pos:position pos:line="28" pos:column="41"/></operator> <literal type="number" pos:line="28" pos:column="42">1<pos:position pos:line="28" pos:column="43"/></literal></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="29" pos:column="25">perforation<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">+=<pos:position pos:line="29" pos:column="39"/></operator> <literal type="number" pos:line="29" pos:column="40">2<pos:position pos:line="29" pos:column="41"/></literal></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">scissors<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">+=<pos:position pos:line="30" pos:column="36"/></operator> <literal type="number" pos:line="30" pos:column="37">2<pos:position pos:line="30" pos:column="38"/></literal></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="31" pos:column="25">i<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">++<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
			<continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="34" pos:column="17">in_perforation<pos:position pos:line="34" pos:column="31"/></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <literal type="number" pos:line="34" pos:column="34">0<pos:position pos:line="34" pos:column="35"/></literal></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>

	<comment type="block" pos:line="37" pos:column="9">/*
	 * The mark must be at least 8 bytes long (e.g. "-- &gt;8 --").
	 * Even though there can be arbitrary cruft on the same line
	 * (e.g. "cut here"), in order to avoid misidentification, the
	 * perforation must occupy more than a third of the visible
	 * width of the line, and dashes and scissors must occupy more
	 * than half of the perforation.
	 */</comment>

	<expr_stmt><expr><name pos:line="46" pos:column="9">visible<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">last_nonblank<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">-<pos:position pos:line="46" pos:column="34"/></operator> <name pos:line="46" pos:column="35">first_nonblank<pos:position pos:line="46" pos:column="49"/></name> <operator pos:line="46" pos:column="50">+<pos:position pos:line="46" pos:column="51"/></operator> <literal type="number" pos:line="46" pos:column="52">1<pos:position pos:line="46" pos:column="53"/></literal></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
	<return pos:line="47" pos:column="9">return <expr><operator pos:line="47" pos:column="16">(<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">scissors<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">&amp;&amp;<pos:position pos:line="47" pos:column="36"/></operator> <literal type="number" pos:line="47" pos:column="29">8<pos:position pos:line="47" pos:column="30"/></literal> <operator pos:line="47" pos:column="31">&lt;=<pos:position pos:line="47" pos:column="36"/></operator> <name pos:line="47" pos:column="34">visible<pos:position pos:line="47" pos:column="41"/></name> <operator pos:line="47" pos:column="42">&amp;&amp;<pos:position pos:line="47" pos:column="52"/></operator>
		<name pos:line="48" pos:column="17">visible<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">&lt;<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="27">perforation<pos:position pos:line="48" pos:column="38"/></name> <operator pos:line="48" pos:column="39">*<pos:position pos:line="48" pos:column="40"/></operator> <literal type="number" pos:line="48" pos:column="41">3<pos:position pos:line="48" pos:column="42"/></literal> <operator pos:line="48" pos:column="43">&amp;&amp;<pos:position pos:line="48" pos:column="53"/></operator>
		<name pos:line="49" pos:column="17">gap<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">*<pos:position pos:line="49" pos:column="22"/></operator> <literal type="number" pos:line="49" pos:column="23">2<pos:position pos:line="49" pos:column="24"/></literal> <operator pos:line="49" pos:column="25">&lt;<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="27">perforation<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">)<pos:position pos:line="49" pos:column="39"/></operator></expr>;<pos:position pos:line="49" pos:column="40"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

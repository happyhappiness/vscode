<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1577_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_delta_base_cache<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">packed_git<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">off_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">base_offset<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="2" pos:column="9">void<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">base<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">unsigned<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">long<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">base_size<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="46">enum<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">object_type<pos:position pos:line="2" pos:column="62"/></name></name></type> <name pos:line="2" pos:column="63">type<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">long<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">hash<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><call><name pos:line="4" pos:column="30">pack_entry_hash<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">p<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">base_offset<pos:position pos:line="4" pos:column="60"/></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">delta_base_cache_entry<pos:position pos:line="5" pos:column="38"/></name></name> <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier></type><name pos:line="5" pos:column="40">ent<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><name pos:line="5" pos:column="46">delta_base_cache<pos:position pos:line="5" pos:column="62"/></name> <operator pos:line="5" pos:column="63">+<pos:position pos:line="5" pos:column="64"/></operator> <name pos:line="5" pos:column="65">hash<pos:position pos:line="5" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">delta_base_cache_lru_list<pos:position pos:line="6" pos:column="41"/></name></name> <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier></type><name pos:line="6" pos:column="43">lru<pos:position pos:line="6" pos:column="46"/></name></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">release_delta_base_cache<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">ent<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">delta_base_cached<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">+=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">base_size<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">lru<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="20">delta_base_cache_lru<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">next<pos:position pos:line="11" pos:column="45"/></name></name></expr>;<pos:position pos:line="11" pos:column="46"/></init>
	     <condition><expr><name pos:line="12" pos:column="14">delta_base_cached<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">&gt;<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="34">delta_base_cache_limit<pos:position pos:line="12" pos:column="56"/></name>
	     <operator pos:line="13" pos:column="14">&amp;&amp;<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="17">lru<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">!=<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">delta_base_cache_lru<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></condition>
	     <incr><expr><name pos:line="14" pos:column="14">lru<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name><name pos:line="14" pos:column="20">lru<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">next<pos:position pos:line="14" pos:column="29"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="30"/></control> <block pos:line="14" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">delta_base_cache_entry<pos:position pos:line="15" pos:column="46"/></name></name> <modifier pos:line="15" pos:column="47">*<pos:position pos:line="15" pos:column="48"/></modifier></type><name pos:line="15" pos:column="48">f<pos:position pos:line="15" pos:column="49"/></name> <init pos:line="15" pos:column="50">= <expr><operator pos:line="15" pos:column="52">(<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="53">void<pos:position pos:line="15" pos:column="57"/></name> <operator pos:line="15" pos:column="58">*<pos:position pos:line="15" pos:column="59"/></operator><operator pos:line="15" pos:column="59">)<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">lru<pos:position pos:line="15" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="64"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">f<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">type<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">OBJ_BLOB<pos:position pos:line="16" pos:column="40"/></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">release_delta_base_cache<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><name pos:line="17" pos:column="50">f<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">lru<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name><name pos:line="19" pos:column="20">delta_base_cache_lru<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">next<pos:position pos:line="19" pos:column="45"/></name></name></expr>;<pos:position pos:line="19" pos:column="46"/></init>
	     <condition><expr><name pos:line="20" pos:column="14">delta_base_cached<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">&gt;<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="34">delta_base_cache_limit<pos:position pos:line="20" pos:column="56"/></name>
	     <operator pos:line="21" pos:column="14">&amp;&amp;<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="17">lru<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">!=<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">&amp;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="25">delta_base_cache_lru<pos:position pos:line="21" pos:column="45"/></name></expr>;<pos:position pos:line="21" pos:column="46"/></condition>
	     <incr><expr><name pos:line="22" pos:column="14">lru<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name><name pos:line="22" pos:column="20">lru<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">next<pos:position pos:line="22" pos:column="29"/></name></name></expr></incr>)<pos:position pos:line="22" pos:column="30"/></control> <block pos:line="22" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">delta_base_cache_entry<pos:position pos:line="23" pos:column="46"/></name></name> <modifier pos:line="23" pos:column="47">*<pos:position pos:line="23" pos:column="48"/></modifier></type><name pos:line="23" pos:column="48">f<pos:position pos:line="23" pos:column="49"/></name> <init pos:line="23" pos:column="50">= <expr><operator pos:line="23" pos:column="52">(<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">void<pos:position pos:line="23" pos:column="57"/></name> <operator pos:line="23" pos:column="58">*<pos:position pos:line="23" pos:column="59"/></operator><operator pos:line="23" pos:column="59">)<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">lru<pos:position pos:line="23" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="64"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">release_delta_base_cache<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">f<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="27" pos:column="9">ent<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">p<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">p<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">ent<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">base_offset<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">=<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">base_offset<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">ent<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">type<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">type<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">ent<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">data<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">base<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">ent<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">size<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">base_size<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">ent<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">lru<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">next<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <operator pos:line="32" pos:column="25">&amp;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="26">delta_base_cache_lru<pos:position pos:line="32" pos:column="46"/></name></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">ent<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">lru<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">prev<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name><name pos:line="33" pos:column="25">delta_base_cache_lru<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">.<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">prev<pos:position pos:line="33" pos:column="50"/></name></name></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">delta_base_cache_lru<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">prev<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">-&gt;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="36">next<pos:position pos:line="34" pos:column="40"/></name></name> <operator pos:line="34" pos:column="41">=<pos:position pos:line="34" pos:column="42"/></operator> <operator pos:line="34" pos:column="43">&amp;<pos:position pos:line="34" pos:column="48"/></operator><name><name pos:line="34" pos:column="44">ent<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">-&gt;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="49">lru<pos:position pos:line="34" pos:column="52"/></name></name></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">delta_base_cache_lru<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">.<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">prev<pos:position pos:line="35" pos:column="34"/></name></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <operator pos:line="35" pos:column="37">&amp;<pos:position pos:line="35" pos:column="42"/></operator><name><name pos:line="35" pos:column="38">ent<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">lru<pos:position pos:line="35" pos:column="46"/></name></name></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

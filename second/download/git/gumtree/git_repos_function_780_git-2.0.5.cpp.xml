<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_780_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">show_path_truncated<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">FILE<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">out<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">name_path<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">path<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">emitted<pos:position pos:line="3" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="22">ours<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">path<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="7" pos:column="9">emitted<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">show_path_truncated<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">out<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="44">path<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">up<pos:position pos:line="7" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">emitted<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&lt;<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">emitted<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">emitted<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">fputc<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="char" pos:line="11" pos:column="23">'/'<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">out<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">ours<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">show_path_component_truncated<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">out<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="51">path<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">elem<pos:position pos:line="12" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="63">path<pos:position pos:line="12" pos:column="67"/></name><operator pos:line="12" pos:column="67">-&gt;<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="69">elem_len<pos:position pos:line="12" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">ours<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&lt;<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">ours<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>
	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">ours<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">||<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">emitted<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_875.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">abbrev_sha1_in_line<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">strbuf<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">line<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">split<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">starts_with<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">line<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">buf<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="36">"exec "<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call> <operator pos:line="6" pos:column="45">||<pos:position pos:line="6" pos:column="47"/></operator>
	    <call><name pos:line="7" pos:column="13">starts_with<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name><name pos:line="7" pos:column="25">line<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">buf<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="36">"x "<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42">
		<block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">split<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">strbuf_split_max<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">line<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="40">' '<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="45">3<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">split<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>]<pos:position pos:line="11" pos:column="21"/></index></name> <operator pos:line="11" pos:column="22">&amp;&amp;<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="25">split<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>]<pos:position pos:line="11" pos:column="33"/></index></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">unsigned<pos:position pos:line="12" pos:column="25"/></name> <name pos:line="12" pos:column="26">char<pos:position pos:line="12" pos:column="30"/></name></type> <name><name pos:line="12" pos:column="31">sha1<pos:position pos:line="12" pos:column="35"/></name><index pos:line="12" pos:column="35">[<expr><literal type="number" pos:line="12" pos:column="36">20<pos:position pos:line="12" pos:column="38"/></literal></expr>]<pos:position pos:line="12" pos:column="39"/></index></name></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">abbrev<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>

		<comment type="block" pos:line="15" pos:column="17">/*
		 * strbuf_split_max left a space. Trim it and re-add
		 * it after abbreviation.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_trim<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">split<pos:position pos:line="19" pos:column="34"/></name><index pos:line="19" pos:column="34">[<expr><literal type="number" pos:line="19" pos:column="35">1<pos:position pos:line="19" pos:column="36"/></literal></expr>]<pos:position pos:line="19" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">get_sha1<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name><name pos:line="20" pos:column="31">split<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><literal type="number" pos:line="20" pos:column="37">1<pos:position pos:line="20" pos:column="38"/></literal></expr>]<pos:position pos:line="20" pos:column="39"/></index></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">buf<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">sha1<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52"> <block pos:line="20" pos:column="53">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">abbrev<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <call><name pos:line="21" pos:column="34">find_unique_abbrev<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">sha1<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">DEFAULT_ABBREV<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">strbuf_reset<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name><name pos:line="22" pos:column="38">split<pos:position pos:line="22" pos:column="43"/></name><index pos:line="22" pos:column="43">[<expr><literal type="number" pos:line="22" pos:column="44">1<pos:position pos:line="22" pos:column="45"/></literal></expr>]<pos:position pos:line="22" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">strbuf_addf<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name><name pos:line="23" pos:column="37">split<pos:position pos:line="23" pos:column="42"/></name><index pos:line="23" pos:column="42">[<expr><literal type="number" pos:line="23" pos:column="43">1<pos:position pos:line="23" pos:column="44"/></literal></expr>]<pos:position pos:line="23" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="47">"%s "<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">abbrev<pos:position pos:line="23" pos:column="60"/></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">strbuf_reset<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">line<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
			<for pos:line="25" pos:column="25">for <control pos:line="25" pos:column="29">(<init><expr><name pos:line="25" pos:column="30">i<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>;<pos:position pos:line="25" pos:column="36"/></init> <condition><expr><name><name pos:line="25" pos:column="37">split<pos:position pos:line="25" pos:column="42"/></name><index pos:line="25" pos:column="42">[<expr><name pos:line="25" pos:column="43">i<pos:position pos:line="25" pos:column="44"/></name></expr>]<pos:position pos:line="25" pos:column="45"/></index></name></expr>;<pos:position pos:line="25" pos:column="46"/></condition> <incr><expr><name pos:line="25" pos:column="47">i<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">++<pos:position pos:line="25" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="51"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="33">strbuf_addf<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">line<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="51">"%s"<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="57">split<pos:position pos:line="26" pos:column="62"/></name><index pos:line="26" pos:column="62">[<expr><name pos:line="26" pos:column="63">i<pos:position pos:line="26" pos:column="64"/></name></expr>]<pos:position pos:line="26" pos:column="65"/></index></name><operator pos:line="26" pos:column="65">-&gt;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="67">buf<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt></block></for>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name><name pos:line="29" pos:column="21">split<pos:position pos:line="29" pos:column="26"/></name><index pos:line="29" pos:column="26">[<expr><name pos:line="29" pos:column="27">i<pos:position pos:line="29" pos:column="28"/></name></expr>]<pos:position pos:line="29" pos:column="29"/></index></name></expr>;<pos:position pos:line="29" pos:column="30"/></condition> <incr><expr><name pos:line="29" pos:column="31">i<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">++<pos:position pos:line="29" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="35"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">strbuf_release<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name><name pos:line="30" pos:column="32">split<pos:position pos:line="30" pos:column="37"/></name><index pos:line="30" pos:column="37">[<expr><name pos:line="30" pos:column="38">i<pos:position pos:line="30" pos:column="39"/></name></expr>]<pos:position pos:line="30" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt></block></for>

}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

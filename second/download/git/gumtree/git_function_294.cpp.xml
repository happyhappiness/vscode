<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_294.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_preimage<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">apply_state<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">state<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">patch<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">patch<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">cache_entry<pos:position pos:line="3" pos:column="45"/></name></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier><modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">ce<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="4" pos:column="27">struct<pos:position pos:line="4" pos:column="33"/></name> <name pos:line="4" pos:column="34">stat<pos:position pos:line="4" pos:column="38"/></name></name> <modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier></type><name pos:line="4" pos:column="40">st<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="43"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">old_name<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">patch<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">old_name<pos:position pos:line="6" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">patch<pos:position pos:line="7" pos:column="21"/></name></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">previous<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">NULL<pos:position pos:line="7" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">stat_ret<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="27">status<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">st_mode<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">old_name<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">assert<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name><name pos:line="14" pos:column="16">patch<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">is_new<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">&lt;=<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="33">0<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">previous<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">previous_patch<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">state<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">patch<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="49">&amp;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="50">status<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">status<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">error<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><call><name pos:line="18" pos:column="30">_<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"path %s has been renamed/deleted"<pos:position pos:line="18" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="69">old_name<pos:position pos:line="18" pos:column="77"/></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></return></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">previous<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22"> <block pos:line="19" pos:column="23">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">st_mode<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name><name pos:line="20" pos:column="27">previous<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">new_mode<pos:position pos:line="20" pos:column="45"/></name></name></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><operator pos:line="21" pos:column="20">!<pos:position pos:line="21" pos:column="21"/></operator><name><name pos:line="21" pos:column="21">state<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">cached<pos:position pos:line="21" pos:column="34"/></name></name></expr>)<pos:position pos:line="21" pos:column="35"/></condition><then pos:line="21" pos:column="35"> <block pos:line="21" pos:column="36">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">stat_ret<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="28">lstat<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">old_name<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">st<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">stat_ret<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">&amp;&amp;<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="33">errno<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">!=<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="42">ENOENT<pos:position pos:line="23" pos:column="48"/></name></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><call><name pos:line="24" pos:column="32">error<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><call><name pos:line="24" pos:column="38">_<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><literal type="string" pos:line="24" pos:column="40">"%s: %s"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">old_name<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="61">strerror<pos:position pos:line="24" pos:column="69"/></name><argument_list pos:line="24" pos:column="69">(<argument><expr><name pos:line="24" pos:column="70">errno<pos:position pos:line="24" pos:column="75"/></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></return></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">state<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">check_index<pos:position pos:line="27" pos:column="31"/></name></name> <operator pos:line="27" pos:column="32">&amp;&amp;<pos:position pos:line="27" pos:column="42"/></operator> <operator pos:line="27" pos:column="35">!<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">previous<pos:position pos:line="27" pos:column="44"/></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">int<pos:position pos:line="28" pos:column="20"/></name></type> <name pos:line="28" pos:column="21">pos<pos:position pos:line="28" pos:column="24"/></name> <init pos:line="28" pos:column="25">= <expr><call><name pos:line="28" pos:column="27">cache_name_pos<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">old_name<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="52">strlen<pos:position pos:line="28" pos:column="58"/></name><argument_list pos:line="28" pos:column="58">(<argument><expr><name pos:line="28" pos:column="59">old_name<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="70"/></decl_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">pos<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">&lt;<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="27">0<pos:position pos:line="29" pos:column="28"/></literal></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name><name pos:line="30" pos:column="29">patch<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">is_new<pos:position pos:line="30" pos:column="42"/></name></name> <operator pos:line="30" pos:column="43">&lt;<pos:position pos:line="30" pos:column="47"/></operator> <literal type="number" pos:line="30" pos:column="45">0<pos:position pos:line="30" pos:column="46"/></literal></expr>)<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47">
				<block type="pseudo"><goto pos:line="31" pos:column="33">goto <name pos:line="31" pos:column="38">is_new<pos:position pos:line="31" pos:column="44"/></name>;<pos:position pos:line="31" pos:column="45"/></goto></block></then></if>
			<return pos:line="32" pos:column="25">return <expr><call><name pos:line="32" pos:column="32">error<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><call><name pos:line="32" pos:column="38">_<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><literal type="string" pos:line="32" pos:column="40">"%s: does not exist in index"<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="72">old_name<pos:position pos:line="32" pos:column="80"/></name></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="82"/></return>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">ce<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name><name pos:line="34" pos:column="23">active_cache<pos:position pos:line="34" pos:column="35"/></name><index pos:line="34" pos:column="35">[<expr><name pos:line="34" pos:column="36">pos<pos:position pos:line="34" pos:column="39"/></name></expr>]<pos:position pos:line="34" pos:column="40"/></index></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">stat_ret<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">&lt;<pos:position pos:line="35" pos:column="34"/></operator> <literal type="number" pos:line="35" pos:column="32">0<pos:position pos:line="35" pos:column="33"/></literal></expr>)<pos:position pos:line="35" pos:column="34"/></condition><then pos:line="35" pos:column="34"> <block pos:line="35" pos:column="35">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><call><name pos:line="36" pos:column="29">checkout_target<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><operator pos:line="36" pos:column="45">&amp;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="46">the_index<pos:position pos:line="36" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="57">*<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="58">ce<pos:position pos:line="36" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="62">st<pos:position pos:line="36" pos:column="64"/></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="66"/></condition><then pos:line="36" pos:column="66">
				<block type="pseudo"><return pos:line="37" pos:column="33">return <expr><operator pos:line="37" pos:column="40">-<pos:position pos:line="37" pos:column="41"/></operator><literal type="number" pos:line="37" pos:column="41">1<pos:position pos:line="37" pos:column="42"/></literal></expr>;<pos:position pos:line="37" pos:column="43"/></return></block></then></if>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name><name pos:line="39" pos:column="22">state<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">cached<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">&amp;&amp;<pos:position pos:line="39" pos:column="46"/></operator> <call><name pos:line="39" pos:column="39">verify_index_match<pos:position pos:line="39" pos:column="57"/></name><argument_list pos:line="39" pos:column="57">(<argument><expr><operator pos:line="39" pos:column="58">*<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="59">ce<pos:position pos:line="39" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="63">st<pos:position pos:line="39" pos:column="65"/></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="67"/></condition><then pos:line="39" pos:column="67">
			<block type="pseudo"><return pos:line="40" pos:column="25">return <expr><call><name pos:line="40" pos:column="32">error<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><call><name pos:line="40" pos:column="38">_<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><literal type="string" pos:line="40" pos:column="40">"%s: does not match index"<pos:position pos:line="40" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="69">old_name<pos:position pos:line="40" pos:column="77"/></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="79"/></return></block></then></if>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name><name pos:line="41" pos:column="21">state<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">cached<pos:position pos:line="41" pos:column="34"/></name></name></expr>)<pos:position pos:line="41" pos:column="35"/></condition><then pos:line="41" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">st_mode<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <name><operator pos:line="42" pos:column="35">(<pos:position pos:line="42" pos:column="36"/></operator><operator pos:line="42" pos:column="36">*<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">ce<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">)<pos:position pos:line="42" pos:column="40"/></operator><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">ce_mode<pos:position pos:line="42" pos:column="49"/></name></name></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></then> <elseif pos:line="43" pos:column="11">else <if pos:line="43" pos:column="16">if <condition pos:line="43" pos:column="19">(<expr><name pos:line="43" pos:column="20">stat_ret<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">&lt;<pos:position pos:line="43" pos:column="33"/></operator> <literal type="number" pos:line="43" pos:column="31">0<pos:position pos:line="43" pos:column="32"/></literal></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33"> <block pos:line="43" pos:column="34">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name><name pos:line="44" pos:column="21">patch<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">is_new<pos:position pos:line="44" pos:column="34"/></name></name> <operator pos:line="44" pos:column="35">&lt;<pos:position pos:line="44" pos:column="39"/></operator> <literal type="number" pos:line="44" pos:column="37">0<pos:position pos:line="44" pos:column="38"/></literal></expr>)<pos:position pos:line="44" pos:column="39"/></condition><then pos:line="44" pos:column="39">
			<block type="pseudo"><goto pos:line="45" pos:column="25">goto <name pos:line="45" pos:column="30">is_new<pos:position pos:line="45" pos:column="36"/></name>;<pos:position pos:line="45" pos:column="37"/></goto></block></then></if>
		<return pos:line="46" pos:column="17">return <expr><call><name pos:line="46" pos:column="24">error<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><call><name pos:line="46" pos:column="30">_<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><literal type="string" pos:line="46" pos:column="32">"%s: %s"<pos:position pos:line="46" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="43">old_name<pos:position pos:line="46" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="53">strerror<pos:position pos:line="46" pos:column="61"/></name><argument_list pos:line="46" pos:column="61">(<argument><expr><name pos:line="46" pos:column="62">errno<pos:position pos:line="46" pos:column="67"/></name></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="70"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><name><name pos:line="49" pos:column="14">state<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">cached<pos:position pos:line="49" pos:column="27"/></name></name> <operator pos:line="49" pos:column="28">&amp;&amp;<pos:position pos:line="49" pos:column="38"/></operator> <operator pos:line="49" pos:column="31">!<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">previous<pos:position pos:line="49" pos:column="40"/></name></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="17">st_mode<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <call><name pos:line="50" pos:column="27">ce_mode_from_stat<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><operator pos:line="50" pos:column="45">*<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">ce<pos:position pos:line="50" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="50">st<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">-&gt;<pos:position pos:line="50" pos:column="57"/></operator><name pos:line="50" pos:column="54">st_mode<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt></block></then></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">patch<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">-&gt;<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="20">is_new<pos:position pos:line="52" pos:column="26"/></name></name> <operator pos:line="52" pos:column="27">&lt;<pos:position pos:line="52" pos:column="31"/></operator> <literal type="number" pos:line="52" pos:column="29">0<pos:position pos:line="52" pos:column="30"/></literal></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="17">patch<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">-&gt;<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="24">is_new<pos:position pos:line="53" pos:column="30"/></name></name> <operator pos:line="53" pos:column="31">=<pos:position pos:line="53" pos:column="32"/></operator> <literal type="number" pos:line="53" pos:column="33">0<pos:position pos:line="53" pos:column="34"/></literal></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><operator pos:line="54" pos:column="13">!<pos:position pos:line="54" pos:column="14"/></operator><name><name pos:line="54" pos:column="14">patch<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">old_mode<pos:position pos:line="54" pos:column="29"/></name></name></expr>)<pos:position pos:line="54" pos:column="30"/></condition><then pos:line="54" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="17">patch<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">old_mode<pos:position pos:line="55" pos:column="32"/></name></name> <operator pos:line="55" pos:column="33">=<pos:position pos:line="55" pos:column="34"/></operator> <name pos:line="55" pos:column="35">st_mode<pos:position pos:line="55" pos:column="42"/></name></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">st_mode<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">^<pos:position pos:line="56" pos:column="23"/></operator> <name><name pos:line="56" pos:column="24">patch<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">old_mode<pos:position pos:line="56" pos:column="39"/></name></name><operator pos:line="56" pos:column="39">)<pos:position pos:line="56" pos:column="40"/></operator> <operator pos:line="56" pos:column="41">&amp;<pos:position pos:line="56" pos:column="46"/></operator> <name pos:line="56" pos:column="43">S_IFMT<pos:position pos:line="56" pos:column="49"/></name></expr>)<pos:position pos:line="56" pos:column="50"/></condition><then pos:line="56" pos:column="50">
		<block type="pseudo"><return pos:line="57" pos:column="17">return <expr><call><name pos:line="57" pos:column="24">error<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><call><name pos:line="57" pos:column="30">_<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><literal type="string" pos:line="57" pos:column="32">"%s: wrong type"<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="51">old_name<pos:position pos:line="57" pos:column="59"/></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></return></block></then></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">st_mode<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">!=<pos:position pos:line="58" pos:column="23"/></operator> <name><name pos:line="58" pos:column="24">patch<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">-&gt;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="31">old_mode<pos:position pos:line="58" pos:column="39"/></name></name></expr>)<pos:position pos:line="58" pos:column="40"/></condition><then pos:line="58" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="17">warning<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><call><name pos:line="59" pos:column="25">_<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><literal type="string" pos:line="59" pos:column="27">"%s has type %o, expected %o"<pos:position pos:line="59" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="60" pos:column="25">old_name<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">st_mode<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="44">patch<pos:position pos:line="60" pos:column="49"/></name><operator pos:line="60" pos:column="49">-&gt;<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="51">old_mode<pos:position pos:line="60" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><name><name pos:line="61" pos:column="14">patch<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">-&gt;<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="21">new_mode<pos:position pos:line="61" pos:column="29"/></name></name> <operator pos:line="61" pos:column="30">&amp;&amp;<pos:position pos:line="61" pos:column="40"/></operator> <operator pos:line="61" pos:column="33">!<pos:position pos:line="61" pos:column="34"/></operator><name><name pos:line="61" pos:column="34">patch<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">-&gt;<pos:position pos:line="61" pos:column="44"/></operator><name pos:line="61" pos:column="41">is_delete<pos:position pos:line="61" pos:column="50"/></name></name></expr>)<pos:position pos:line="61" pos:column="51"/></condition><then pos:line="61" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="17">patch<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">-&gt;<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="24">new_mode<pos:position pos:line="62" pos:column="32"/></name></name> <operator pos:line="62" pos:column="33">=<pos:position pos:line="62" pos:column="34"/></operator> <name pos:line="62" pos:column="35">st_mode<pos:position pos:line="62" pos:column="42"/></name></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt></block></then></if>
	<return pos:line="63" pos:column="9">return <expr><literal type="number" pos:line="63" pos:column="16">0<pos:position pos:line="63" pos:column="17"/></literal></expr>;<pos:position pos:line="63" pos:column="18"/></return>

 <label><name pos:line="65" pos:column="2">is_new<pos:position pos:line="65" pos:column="8"/></name>:<pos:position pos:line="65" pos:column="9"/></label>
	<expr_stmt><expr><name><name pos:line="66" pos:column="9">patch<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">is_new<pos:position pos:line="66" pos:column="22"/></name></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <literal type="number" pos:line="66" pos:column="25">1<pos:position pos:line="66" pos:column="26"/></literal></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="67" pos:column="9">patch<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">-&gt;<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="16">is_delete<pos:position pos:line="67" pos:column="25"/></name></name> <operator pos:line="67" pos:column="26">=<pos:position pos:line="67" pos:column="27"/></operator> <literal type="number" pos:line="67" pos:column="28">0<pos:position pos:line="67" pos:column="29"/></literal></expr>;<pos:position pos:line="67" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">free<pos:position pos:line="68" pos:column="13"/></name><argument_list pos:line="68" pos:column="13">(<argument><expr><name><name pos:line="68" pos:column="14">patch<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">-&gt;<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="21">old_name<pos:position pos:line="68" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">patch<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">old_name<pos:position pos:line="69" pos:column="24"/></name></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="27">NULL<pos:position pos:line="69" pos:column="31"/></name></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
	<return pos:line="70" pos:column="9">return <expr><literal type="number" pos:line="70" pos:column="16">0<pos:position pos:line="70" pos:column="17"/></literal></expr>;<pos:position pos:line="70" pos:column="18"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1407.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">register_submodule_ref_store<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">ref_store<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">refs<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
					 <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">submodule<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name><name pos:line="4" pos:column="14">submodule_ref_stores<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">tablesize<pos:position pos:line="4" pos:column="44"/></name></name></expr>)<pos:position pos:line="4" pos:column="45"/></condition><then pos:line="4" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="17">hashmap_init<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><operator pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="31">submodule_ref_stores<pos:position pos:line="5" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="53">submodule_hash_cmp<pos:position pos:line="5" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="73">0<pos:position pos:line="5" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="76"/></expr_stmt></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">hashmap_put<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><operator pos:line="7" pos:column="25">&amp;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="26">submodule_ref_stores<pos:position pos:line="7" pos:column="46"/></name></expr></argument>,
			<argument><expr><call><name pos:line="8" pos:column="25">alloc_submodule_hash_entry<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">submodule<pos:position pos:line="8" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="63">refs<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="70"/></condition><then pos:line="8" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">die<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><literal type="string" pos:line="9" pos:column="21">"BUG: ref_store for submodule '%s' initialized twice"<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>,
		    <argument><expr><name pos:line="10" pos:column="21">submodule<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

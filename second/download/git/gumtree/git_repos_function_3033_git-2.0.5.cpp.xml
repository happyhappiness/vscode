<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3033_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">count_messages<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">strbuf<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">all_msgs<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">count<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">all_msgs<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">buf<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>)<pos:position pos:line="6" pos:column="18"/></condition> <block pos:line="6" pos:column="19">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">starts_with<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">p<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="36">"From "<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
			<expr_stmt><expr><name pos:line="8" pos:column="25">p<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <call><name pos:line="8" pos:column="29">strstr<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">p<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">+<pos:position pos:line="8" pos:column="38"/></operator><literal type="number" pos:line="8" pos:column="38">5<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="41">"\nFrom: "<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><operator pos:line="9" pos:column="29">!<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">p<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32"> <block type="pseudo"><break pos:line="9" pos:column="33">break;<pos:position pos:line="9" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="10" pos:column="25">p<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <call><name pos:line="10" pos:column="29">strstr<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">p<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">+<pos:position pos:line="10" pos:column="38"/></operator><literal type="number" pos:line="10" pos:column="38">7<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="41">"\nDate: "<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><operator pos:line="11" pos:column="29">!<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">p<pos:position pos:line="11" pos:column="31"/></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block type="pseudo"><break pos:line="11" pos:column="33">break;<pos:position pos:line="11" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="12" pos:column="25">p<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="29">strstr<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">p<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">+<pos:position pos:line="12" pos:column="38"/></operator><literal type="number" pos:line="12" pos:column="38">7<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="41">"\nSubject: "<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">p<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block type="pseudo"><break pos:line="13" pos:column="33">break;<pos:position pos:line="13" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">+=<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">10<pos:position pos:line="14" pos:column="32"/></literal></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">count<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">++<pos:position pos:line="15" pos:column="32"/></operator></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">p<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">strstr<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">p<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">+<pos:position pos:line="17" pos:column="30"/></operator><literal type="number" pos:line="17" pos:column="30">5<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"\nFrom "<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">p<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
			<block type="pseudo"><break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">p<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">++<pos:position pos:line="20" pos:column="20"/></operator></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></while>
	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">count<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4068_git-2.9.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">write_notes_tree<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">notes_tree<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">t<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">unsigned<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">result<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">tree_write_stack<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">root<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">write_each_note_data<pos:position pos:line="4" pos:column="36"/></name></name></type> <name pos:line="4" pos:column="37">cb_data<pos:position pos:line="4" pos:column="44"/></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">t<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">t<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="22">default_notes_tree<pos:position pos:line="8" pos:column="40"/></name></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name><name pos:line="9" pos:column="16">t<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">initialized<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* Prepare for traversal of current notes tree */</comment>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">root<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">next<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt> <comment type="block" pos:line="12" pos:column="27">/* last forward entry in list is grounded */</comment>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strbuf_init<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="22">root<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">buf<pos:position pos:line="13" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="32">256<pos:position pos:line="13" pos:column="35"/></literal> <operator pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></operator> <operator pos:line="13" pos:column="38">(<pos:position pos:line="13" pos:column="39"/></operator><literal type="number" pos:line="13" pos:column="39">32<pos:position pos:line="13" pos:column="41"/></literal> <operator pos:line="13" pos:column="42">+<pos:position pos:line="13" pos:column="43"/></operator> <literal type="number" pos:line="13" pos:column="44">40<pos:position pos:line="13" pos:column="46"/></literal><operator pos:line="13" pos:column="46">)<pos:position pos:line="13" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt> <comment type="block" pos:line="13" pos:column="50">/* assume 256 entries */</comment>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">root<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">.<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">path<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>]<pos:position pos:line="14" pos:column="21"/></index></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">root<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">.<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">path<pos:position pos:line="14" pos:column="33"/></name><index pos:line="14" pos:column="33">[<expr><literal type="number" pos:line="14" pos:column="34">1<pos:position pos:line="14" pos:column="35"/></literal></expr>]<pos:position pos:line="14" pos:column="36"/></index></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <literal type="char" pos:line="14" pos:column="39">'\0'<pos:position pos:line="14" pos:column="43"/></literal></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">cb_data<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">root<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">root<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">cb_data<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">next_non_note<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <name><name pos:line="16" pos:column="33">t<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">first_non_note<pos:position pos:line="16" pos:column="50"/></name></name></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* Write tree objects representing current notes tree */</comment>
	<expr_stmt><expr><name pos:line="19" pos:column="9">ret<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">for_each_note<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">t<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">FOR_EACH_NOTE_DONT_UNPACK_SUBTREES<pos:position pos:line="19" pos:column="66"/></name> <operator pos:line="19" pos:column="67">|<pos:position pos:line="19" pos:column="68"/></operator>
				<name pos:line="20" pos:column="33">FOR_EACH_NOTE_YIELD_SUBTREES<pos:position pos:line="20" pos:column="61"/></name></expr></argument>,
			<argument><expr><name pos:line="21" pos:column="25">write_each_note<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="42">&amp;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="43">cb_data<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call> <operator pos:line="21" pos:column="52">||<pos:position pos:line="21" pos:column="54"/></operator>
		<call><name pos:line="22" pos:column="17">write_each_non_note_until<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">NULL<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="49">&amp;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="50">cb_data<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call> <operator pos:line="22" pos:column="59">||<pos:position pos:line="22" pos:column="61"/></operator>
		<call><name pos:line="23" pos:column="17">tree_write_stack_finish_subtree<pos:position pos:line="23" pos:column="48"/></name><argument_list pos:line="23" pos:column="48">(<argument><expr><operator pos:line="23" pos:column="49">&amp;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="50">root<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call> <operator pos:line="23" pos:column="56">||<pos:position pos:line="23" pos:column="58"/></operator>
		<call><name pos:line="24" pos:column="17">write_sha1_file<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name><name pos:line="24" pos:column="33">root<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">.<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">buf<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">buf<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="47">root<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">buf<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">.<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="56">len<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">tree_type<pos:position pos:line="24" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="72">result<pos:position pos:line="24" pos:column="78"/></name></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strbuf_release<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name><name pos:line="25" pos:column="25">root<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">buf<pos:position pos:line="25" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
	<return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">ret<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

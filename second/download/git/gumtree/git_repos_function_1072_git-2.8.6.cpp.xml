<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1072_git-2.8.6.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">enum<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">commit_action<pos:position pos:line="1" pos:column="19"/></name></name></type> <name pos:line="1" pos:column="20">simplify_commit<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">rev_info<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">revs<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="59">struct<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">commit<pos:position pos:line="1" pos:column="72"/></name></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">commit<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">enum<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">commit_action<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">action<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><call><name pos:line="3" pos:column="37">get_commit_action<pos:position pos:line="3" pos:column="54"/></name><argument_list pos:line="3" pos:column="54">(<argument><expr><name pos:line="3" pos:column="55">revs<pos:position pos:line="3" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="61">commit<pos:position pos:line="3" pos:column="67"/></name></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="69"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">action<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">==<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">commit_show<pos:position pos:line="5" pos:column="34"/></name> <operator pos:line="5" pos:column="35">&amp;&amp;<pos:position pos:line="5" pos:column="45"/></operator>
	    <operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">revs<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">show_all<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">&amp;&amp;<pos:position pos:line="6" pos:column="39"/></operator>
	    <name><name pos:line="7" pos:column="13">revs<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">prune<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">&amp;&amp;<pos:position pos:line="7" pos:column="35"/></operator> <name><name pos:line="7" pos:column="28">revs<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">dense<pos:position pos:line="7" pos:column="39"/></name></name> <operator pos:line="7" pos:column="40">&amp;&amp;<pos:position pos:line="7" pos:column="50"/></operator> <call><name pos:line="7" pos:column="43">want_ancestry<pos:position pos:line="7" pos:column="56"/></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">revs<pos:position pos:line="7" pos:column="61"/></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="63"/></condition><then pos:line="7" pos:column="63"> <block pos:line="7" pos:column="64">{
		<comment type="block" pos:line="8" pos:column="17">/*
		 * --full-diff on simplified parents is no good: it
		 * will show spurious changes from the commits that
		 * were elided.  So we save the parents on the side
		 * when --full-diff is in effect.
		 */</comment>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">revs<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">full_diff<pos:position pos:line="14" pos:column="36"/></name></name></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">save_parents<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">revs<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">commit<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">rewrite_parents<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">revs<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">commit<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">rewrite_one<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call> <operator pos:line="16" pos:column="64">&lt;<pos:position pos:line="16" pos:column="68"/></operator> <literal type="number" pos:line="16" pos:column="66">0<pos:position pos:line="16" pos:column="67"/></literal></expr>)<pos:position pos:line="16" pos:column="68"/></condition><then pos:line="16" pos:column="68">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><name pos:line="17" pos:column="32">commit_error<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></return></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">action<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

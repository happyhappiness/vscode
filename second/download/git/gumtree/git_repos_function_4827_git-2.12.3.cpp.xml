<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4827_git-2.12.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">format_time<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">unsigned<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">long<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">time<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">tz_str<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">show_raw_time<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">strbuf<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">time_buf<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name pos:line="4" pos:column="41">STRBUF_INIT<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_reset<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="23">time_buf<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">show_raw_time<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addf<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="30">time_buf<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="40">"%lu %s"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">time<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">tz_str<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then>
	<else pos:line="10" pos:column="9">else <block pos:line="10" pos:column="14">{
		<decl_stmt><decl><type><specifier pos:line="11" pos:column="17">const<pos:position pos:line="11" pos:column="22"/></specifier> <name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">time_str<pos:position pos:line="11" pos:column="37"/></name></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">size_t<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">time_width<pos:position pos:line="12" pos:column="34"/></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">tz<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">tz<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">atoi<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">tz_str<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">time_str<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="28">show_date<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">time<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">tz<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="48">&amp;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="49">blame_date_mode<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_addstr<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">time_buf<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">time_str<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>
		<comment type="block" pos:line="17" pos:column="17">/*
		 * Add space paddings to time_buf to display a fixed width
		 * string, and use time_width for display width calibration.
		 */</comment>
		<for pos:line="21" pos:column="17">for <control pos:line="21" pos:column="21">(<init><expr><name pos:line="21" pos:column="22">time_width<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">=<pos:position pos:line="21" pos:column="34"/></operator> <call><name pos:line="21" pos:column="35">utf8_strwidth<pos:position pos:line="21" pos:column="48"/></name><argument_list pos:line="21" pos:column="48">(<argument><expr><name pos:line="21" pos:column="49">time_str<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></init>
		     <condition><expr><name pos:line="22" pos:column="22">time_width<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">&lt;<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="35">blame_date_width<pos:position pos:line="22" pos:column="51"/></name></expr>;<pos:position pos:line="22" pos:column="52"/></condition>
		     <incr><expr><name pos:line="23" pos:column="22">time_width<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">++<pos:position pos:line="23" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="35"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">strbuf_addch<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><operator pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="39">time_buf<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="49">' '<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt></block></for>
	}<pos:position pos:line="25" pos:column="10"/></block></else></if>
	<return pos:line="26" pos:column="9">return <expr><name><name pos:line="26" pos:column="16">time_buf<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">buf<pos:position pos:line="26" pos:column="28"/></name></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

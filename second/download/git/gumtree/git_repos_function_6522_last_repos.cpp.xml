<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6522_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_int<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">line_buffer<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">in<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">uintmax_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">result<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">off_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">len<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uintmax_t<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">rv<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">off_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">sz<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">sz<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <operator pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">len<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></init> <condition><expr><name pos:line="5" pos:column="25">sz<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></condition> <incr><expr><name pos:line="5" pos:column="29">sz<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">--<pos:position pos:line="5" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="34"/></control> <block pos:line="5" pos:column="35">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">int<pos:position pos:line="6" pos:column="26"/></name></type> <name pos:line="6" pos:column="27">ch<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><call><name pos:line="6" pos:column="32">buffer_read_char<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><name pos:line="6" pos:column="49">in<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">ch<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">EOF<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
			<block type="pseudo"><break pos:line="8" pos:column="25">break;<pos:position pos:line="8" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="10" pos:column="17">rv<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&lt;&lt;=<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="24">VLI_BITS_PER_DIGIT<pos:position pos:line="10" pos:column="42"/></name></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="11" pos:column="17">rv<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">+=<pos:position pos:line="11" pos:column="22"/></operator> <operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">ch<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&amp;<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="29">VLI_DIGIT_MASK<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">)<pos:position pos:line="11" pos:column="44"/></operator></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">ch<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="26">VLI_CONTINUE<pos:position pos:line="12" pos:column="38"/></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><operator pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">result<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">rv<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">len<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">sz<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">-<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="29">1<pos:position pos:line="16" pos:column="30"/></literal></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">error_short_read<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">in<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

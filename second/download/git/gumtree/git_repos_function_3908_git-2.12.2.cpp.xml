<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3908_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">split_msg<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">strbuf<pos:position pos:line="1" pos:column="35"/></name></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">all_msgs<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">strbuf<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">msg<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">ofs<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">data<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">ofs<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&gt;=<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="21">all_msgs<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">len<pos:position pos:line="6" pos:column="34"/></name></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">data<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name><name pos:line="9" pos:column="17">all_msgs<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">buf<pos:position pos:line="9" pos:column="30"/></name><index pos:line="9" pos:column="30">[<expr><operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">ofs<pos:position pos:line="9" pos:column="35"/></name></expr>]<pos:position pos:line="9" pos:column="36"/></index></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">all_msgs<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">len<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">-<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">ofs<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">len<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">5<pos:position pos:line="12" pos:column="20"/></literal> <operator pos:line="12" pos:column="21">||<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">!<pos:position pos:line="12" pos:column="25"/></operator><call><name pos:line="12" pos:column="25">starts_with<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">data<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="43">"From "<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">strchr<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">data<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="26">'\n'<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">p<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15"> <block pos:line="16" pos:column="16">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">p<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">++<pos:position pos:line="17" pos:column="20"/></operator></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">len<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">-=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">p<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">-<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">data<pos:position pos:line="18" pos:column="32"/></name></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">ofs<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">+=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">p<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">-<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">data<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">data<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">p<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">p<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <call><name pos:line="23" pos:column="13">strstr<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">data<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="26">"\nFrom "<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">p<pos:position pos:line="24" pos:column="14"/></name></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15">
		<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="17">len<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <operator pos:line="25" pos:column="23">&amp;<pos:position pos:line="25" pos:column="28"/></operator><name><name pos:line="25" pos:column="24">p<pos:position pos:line="25" pos:column="25"/></name><index pos:line="25" pos:column="25">[<expr><literal type="number" pos:line="25" pos:column="26">1<pos:position pos:line="25" pos:column="27"/></literal></expr>]<pos:position pos:line="25" pos:column="28"/></index></name> <operator pos:line="25" pos:column="29">-<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="31">data<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">strbuf_add<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">msg<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="25">data<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="31">len<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">ofs<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">+=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
	<return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

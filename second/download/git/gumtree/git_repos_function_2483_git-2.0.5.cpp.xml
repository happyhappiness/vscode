<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2483_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_ref_write<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">action<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">refname<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">unsigned<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">sha1<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="56">struct<pos:position pos:line="2" pos:column="62"/></name> <name pos:line="2" pos:column="63">ref_lock<pos:position pos:line="2" pos:column="71"/></name></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">lock<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
			    <parameter><decl><type><name><name pos:line="3" pos:column="29">enum<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">action_on_err<pos:position pos:line="3" pos:column="47"/></name></name></type> <name pos:line="3" pos:column="48">onerr<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">write_ref_sha1<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">lock<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">sha1<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">action<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call> <operator pos:line="5" pos:column="48">&lt;<pos:position pos:line="5" pos:column="52"/></operator> <literal type="number" pos:line="5" pos:column="50">0<pos:position pos:line="5" pos:column="51"/></literal></expr>)<pos:position pos:line="5" pos:column="52"/></condition><then pos:line="5" pos:column="52"> <block pos:line="5" pos:column="53">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">str<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><literal type="string" pos:line="6" pos:column="35">"Cannot update the ref '%s'."<pos:position pos:line="6" pos:column="64"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="65"/></decl_stmt>
		<switch pos:line="7" pos:column="17">switch <condition pos:line="7" pos:column="24">(<expr><name pos:line="7" pos:column="25">onerr<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition> <block pos:line="7" pos:column="32">{
		<case pos:line="8" pos:column="17">case <expr><name pos:line="8" pos:column="22">MSG_ON_ERR<pos:position pos:line="8" pos:column="32"/></name></expr>:<pos:position pos:line="8" pos:column="33"/></case> <expr_stmt><expr><call><name pos:line="8" pos:column="34">error<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">str<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="45">refname<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt> <break pos:line="8" pos:column="55">break;<pos:position pos:line="8" pos:column="61"/></break>
		<case pos:line="9" pos:column="17">case <expr><name pos:line="9" pos:column="22">DIE_ON_ERR<pos:position pos:line="9" pos:column="32"/></name></expr>:<pos:position pos:line="9" pos:column="33"/></case> <expr_stmt><expr><call><name pos:line="9" pos:column="34">die<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">str<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">refname<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt> <break pos:line="9" pos:column="53">break;<pos:position pos:line="9" pos:column="59"/></break>
		<case pos:line="10" pos:column="17">case <expr><name pos:line="10" pos:column="22">QUIET_ON_ERR<pos:position pos:line="10" pos:column="34"/></name></expr>:<pos:position pos:line="10" pos:column="35"/></case> <break pos:line="10" pos:column="36">break;<pos:position pos:line="10" pos:column="42"/></break>
		}<pos:position pos:line="11" pos:column="18"/></block></switch>
		<return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6589_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">off_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">buffer_copy_bytes<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">line_buffer<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buf<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">off_t<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">nbytes<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">byte_buffer<pos:position pos:line="3" pos:column="25"/></name><index pos:line="3" pos:column="25">[<expr><name pos:line="3" pos:column="26">COPY_BUFFER_LEN<pos:position pos:line="3" pos:column="41"/></name></expr>]<pos:position pos:line="3" pos:column="42"/></index></name></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">off_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">done<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">done<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&lt;<pos:position pos:line="5" pos:column="25"/></operator> <name pos:line="5" pos:column="23">nbytes<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&amp;&amp;<pos:position pos:line="5" pos:column="40"/></operator> <operator pos:line="5" pos:column="33">!<pos:position pos:line="5" pos:column="34"/></operator><call><name pos:line="5" pos:column="34">feof<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name><name pos:line="5" pos:column="39">buf<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">infile<pos:position pos:line="5" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call> <operator pos:line="5" pos:column="52">&amp;&amp;<pos:position pos:line="5" pos:column="62"/></operator> <operator pos:line="5" pos:column="55">!<pos:position pos:line="5" pos:column="56"/></operator><call><name pos:line="5" pos:column="56">ferror<pos:position pos:line="5" pos:column="62"/></name><argument_list pos:line="5" pos:column="62">(<argument><expr><name><name pos:line="5" pos:column="63">buf<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">-&gt;<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="68">infile<pos:position pos:line="5" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="76"/></condition> <block pos:line="5" pos:column="77">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">off_t<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">len<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">nbytes<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">-<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="38">done<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">size_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">in<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><ternary><condition><expr><name pos:line="7" pos:column="29">len<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">&lt;<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="35">COPY_BUFFER_LEN<pos:position pos:line="7" pos:column="50"/></name></expr> ?<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52"> <expr><name pos:line="7" pos:column="53">len<pos:position pos:line="7" pos:column="56"/></name></expr> <pos:position pos:line="7" pos:column="57"/></then><else pos:line="7" pos:column="57">: <expr><name pos:line="7" pos:column="59">COPY_BUFFER_LEN<pos:position pos:line="7" pos:column="74"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="75"/></decl_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">in<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">fread<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">byte_buffer<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="41">1<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">in<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="48">buf<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">infile<pos:position pos:line="8" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">done<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">+=<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">in<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">fwrite<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">byte_buffer<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="37">1<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">in<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">stdout<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">ferror<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">stdout<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><name pos:line="12" pos:column="32">done<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">+<pos:position pos:line="12" pos:column="38"/></operator> <call><name pos:line="12" pos:column="39">buffer_skip_bytes<pos:position pos:line="12" pos:column="56"/></name><argument_list pos:line="12" pos:column="56">(<argument><expr><name pos:line="12" pos:column="57">buf<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">nbytes<pos:position pos:line="12" pos:column="68"/></name> <operator pos:line="12" pos:column="69">-<pos:position pos:line="12" pos:column="70"/></operator> <name pos:line="12" pos:column="71">done<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></return></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></while>
	<return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">done<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1200_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">split_cmdline<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">cmdline<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">argv<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">src<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">dst<pos:position pos:line="3" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="23">count<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><literal type="number" pos:line="3" pos:column="31">0<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="34">size<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><literal type="number" pos:line="3" pos:column="41">16<pos:position pos:line="3" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">quoted<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">ALLOC_ARRAY<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">argv<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">size<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* split alias_string */</comment>
	<expr_stmt><expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">argv<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator><index pos:line="9" pos:column="16">[<expr><name pos:line="9" pos:column="17">count<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">++<pos:position pos:line="9" pos:column="24"/></operator></expr>]<pos:position pos:line="9" pos:column="25"/></index> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">cmdline<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">src<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">dst<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr>;<pos:position pos:line="10" pos:column="28"/></init> <condition><expr><name><name pos:line="10" pos:column="29">cmdline<pos:position pos:line="10" pos:column="36"/></name><index pos:line="10" pos:column="36">[<expr><name pos:line="10" pos:column="37">src<pos:position pos:line="10" pos:column="40"/></name></expr>]<pos:position pos:line="10" pos:column="41"/></index></name></expr>;<pos:position pos:line="10" pos:column="42"/></condition><incr/>)<pos:position pos:line="10" pos:column="43"/></control> <block pos:line="10" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">c<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name><name pos:line="11" pos:column="26">cmdline<pos:position pos:line="11" pos:column="33"/></name><index pos:line="11" pos:column="33">[<expr><name pos:line="11" pos:column="34">src<pos:position pos:line="11" pos:column="37"/></name></expr>]<pos:position pos:line="11" pos:column="38"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">quoted<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <call><name pos:line="12" pos:column="32">isspace<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">c<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <block pos:line="12" pos:column="44">{
			<expr_stmt><expr><name><name pos:line="13" pos:column="25">cmdline<pos:position pos:line="13" pos:column="32"/></name><index pos:line="13" pos:column="32">[<expr><name pos:line="13" pos:column="33">dst<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">++<pos:position pos:line="13" pos:column="38"/></operator></expr>]<pos:position pos:line="13" pos:column="39"/></index></name> <operator pos:line="13" pos:column="40">=<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">0<pos:position pos:line="13" pos:column="43"/></literal></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
			<while pos:line="14" pos:column="25">while <condition pos:line="14" pos:column="31">(<expr><name><name pos:line="14" pos:column="32">cmdline<pos:position pos:line="14" pos:column="39"/></name><index pos:line="14" pos:column="39">[<expr><operator pos:line="14" pos:column="40">++<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">src<pos:position pos:line="14" pos:column="45"/></name></expr>]<pos:position pos:line="14" pos:column="46"/></index></name>
					<operator pos:line="15" pos:column="41">&amp;&amp;<pos:position pos:line="15" pos:column="51"/></operator> <call><name pos:line="15" pos:column="44">isspace<pos:position pos:line="15" pos:column="51"/></name><argument_list pos:line="15" pos:column="51">(<argument><expr><name><name pos:line="15" pos:column="52">cmdline<pos:position pos:line="15" pos:column="59"/></name><index pos:line="15" pos:column="59">[<expr><name pos:line="15" pos:column="60">src<pos:position pos:line="15" pos:column="63"/></name></expr>]<pos:position pos:line="15" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="66"/></condition>
				<block type="pseudo"><empty_stmt pos:line="16" pos:column="33">;<pos:position pos:line="16" pos:column="34"/></empty_stmt></block></while> <comment type="block" pos:line="16" pos:column="35">/* skip */</comment>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">ALLOC_GROW<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><operator pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">argv<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">count<pos:position pos:line="17" pos:column="48"/></name> <operator pos:line="17" pos:column="49">+<pos:position pos:line="17" pos:column="50"/></operator> <literal type="number" pos:line="17" pos:column="51">1<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">size<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><operator pos:line="18" pos:column="26">*<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">argv<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator><index pos:line="18" pos:column="32">[<expr><name pos:line="18" pos:column="33">count<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">++<pos:position pos:line="18" pos:column="40"/></operator></expr>]<pos:position pos:line="18" pos:column="41"/></index> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">cmdline<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">+<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">dst<pos:position pos:line="18" pos:column="57"/></name></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then> <elseif pos:line="19" pos:column="19">else <if pos:line="19" pos:column="24">if <condition pos:line="19" pos:column="27">(<expr><operator pos:line="19" pos:column="28">!<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">quoted<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">&amp;&amp;<pos:position pos:line="19" pos:column="46"/></operator> <operator pos:line="19" pos:column="39">(<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">c<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">==<pos:position pos:line="19" pos:column="44"/></operator> <literal type="char" pos:line="19" pos:column="45">'\''<pos:position pos:line="19" pos:column="49"/></literal> <operator pos:line="19" pos:column="50">||<pos:position pos:line="19" pos:column="52"/></operator> <name pos:line="19" pos:column="53">c<pos:position pos:line="19" pos:column="54"/></name> <operator pos:line="19" pos:column="55">==<pos:position pos:line="19" pos:column="57"/></operator> <literal type="char" pos:line="19" pos:column="58">'"'<pos:position pos:line="19" pos:column="61"/></literal><operator pos:line="19" pos:column="61">)<pos:position pos:line="19" pos:column="62"/></operator></expr>)<pos:position pos:line="19" pos:column="63"/></condition><then pos:line="19" pos:column="63"> <block pos:line="19" pos:column="64">{
			<expr_stmt><expr><name pos:line="20" pos:column="25">quoted<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">c<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">src<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">++<pos:position pos:line="21" pos:column="30"/></operator></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if></elseif> <elseif pos:line="22" pos:column="19">else <if pos:line="22" pos:column="24">if <condition pos:line="22" pos:column="27">(<expr><name pos:line="22" pos:column="28">c<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">==<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">quoted<pos:position pos:line="22" pos:column="39"/></name></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">quoted<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">0<pos:position pos:line="23" pos:column="35"/></literal></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">src<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">++<pos:position pos:line="24" pos:column="30"/></operator></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if></elseif> <else pos:line="25" pos:column="19">else <block pos:line="25" pos:column="24">{
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">c<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">==<pos:position pos:line="26" pos:column="33"/></operator> <literal type="char" pos:line="26" pos:column="34">'\\'<pos:position pos:line="26" pos:column="38"/></literal> <operator pos:line="26" pos:column="39">&amp;&amp;<pos:position pos:line="26" pos:column="49"/></operator> <name pos:line="26" pos:column="42">quoted<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">!=<pos:position pos:line="26" pos:column="51"/></operator> <literal type="char" pos:line="26" pos:column="52">'\''<pos:position pos:line="26" pos:column="56"/></literal></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57"> <block pos:line="26" pos:column="58">{
				<expr_stmt><expr><name pos:line="27" pos:column="33">src<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">++<pos:position pos:line="27" pos:column="38"/></operator></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
				<expr_stmt><expr><name pos:line="28" pos:column="33">c<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">=<pos:position pos:line="28" pos:column="36"/></operator> <name><name pos:line="28" pos:column="37">cmdline<pos:position pos:line="28" pos:column="44"/></name><index pos:line="28" pos:column="44">[<expr><name pos:line="28" pos:column="45">src<pos:position pos:line="28" pos:column="48"/></name></expr>]<pos:position pos:line="28" pos:column="49"/></index></name></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
				<if pos:line="29" pos:column="33">if <condition pos:line="29" pos:column="36">(<expr><operator pos:line="29" pos:column="37">!<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="38">c<pos:position pos:line="29" pos:column="39"/></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40"> <block pos:line="29" pos:column="41">{
					<expr_stmt><expr><call><name pos:line="30" pos:column="41">FREE_AND_NULL<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><operator pos:line="30" pos:column="55">*<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="56">argv<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>
					<return pos:line="31" pos:column="41">return <expr><operator pos:line="31" pos:column="48">-<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="49">SPLIT_CMDLINE_BAD_ENDING<pos:position pos:line="31" pos:column="73"/></name></expr>;<pos:position pos:line="31" pos:column="74"/></return>
				}<pos:position pos:line="32" pos:column="34"/></block></then></if>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">cmdline<pos:position pos:line="34" pos:column="32"/></name><index pos:line="34" pos:column="32">[<expr><name pos:line="34" pos:column="33">dst<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">++<pos:position pos:line="34" pos:column="38"/></operator></expr>]<pos:position pos:line="34" pos:column="39"/></index></name> <operator pos:line="34" pos:column="40">=<pos:position pos:line="34" pos:column="41"/></operator> <name pos:line="34" pos:column="42">c<pos:position pos:line="34" pos:column="43"/></name></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="35" pos:column="25">src<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">++<pos:position pos:line="35" pos:column="30"/></operator></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="39" pos:column="9">cmdline<pos:position pos:line="39" pos:column="16"/></name><index pos:line="39" pos:column="16">[<expr><name pos:line="39" pos:column="17">dst<pos:position pos:line="39" pos:column="20"/></name></expr>]<pos:position pos:line="39" pos:column="21"/></index></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="24">0<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">quoted<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20"> <block pos:line="41" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">FREE_AND_NULL<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><operator pos:line="42" pos:column="31">*<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">argv<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">-<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">SPLIT_CMDLINE_UNCLOSED_QUOTE<pos:position pos:line="43" pos:column="53"/></name></expr>;<pos:position pos:line="43" pos:column="54"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">ALLOC_GROW<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><operator pos:line="46" pos:column="20">*<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">argv<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">count<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">+<pos:position pos:line="46" pos:column="34"/></operator> <literal type="number" pos:line="46" pos:column="35">1<pos:position pos:line="46" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">size<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="47" pos:column="9">(<pos:position pos:line="47" pos:column="10"/></operator><operator pos:line="47" pos:column="10">*<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">argv<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">)<pos:position pos:line="47" pos:column="16"/></operator><index pos:line="47" pos:column="16">[<expr><name pos:line="47" pos:column="17">count<pos:position pos:line="47" pos:column="22"/></name></expr>]<pos:position pos:line="47" pos:column="23"/></index> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <name pos:line="47" pos:column="26">NULL<pos:position pos:line="47" pos:column="30"/></name></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>

	<return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">count<pos:position pos:line="49" pos:column="21"/></name></expr>;<pos:position pos:line="49" pos:column="22"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4943_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">index_has_changes<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">strbuf<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">sb<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">head<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><name pos:line="3" pos:column="28">GIT_SHA1_RAWSZ<pos:position pos:line="3" pos:column="42"/></name></expr>]<pos:position pos:line="3" pos:column="43"/></index></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">get_sha1_tree<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><literal type="string" pos:line="6" pos:column="28">"HEAD"<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">head<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42"> <block pos:line="6" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">diff_options<pos:position pos:line="7" pos:column="36"/></name></name></type> <name pos:line="7" pos:column="37">opt<pos:position pos:line="7" pos:column="40"/></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="9" pos:column="17">diff_setup<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="29">opt<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">DIFF_OPT_SET<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">opt<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">EXIT_WITH_STATUS<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">sb<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">DIFF_OPT_SET<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="39">opt<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">QUICK<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">do_diff_cache<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">head<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="37">&amp;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="38">opt<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">diffcore_std<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">opt<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
		<for pos:line="15" pos:column="17">for <control pos:line="15" pos:column="21">(<init><expr><name pos:line="15" pos:column="22">i<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>;<pos:position pos:line="15" pos:column="28"/></init> <condition><expr><name pos:line="15" pos:column="29">sb<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&amp;&amp;<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="35">i<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">&lt;<pos:position pos:line="15" pos:column="41"/></operator> <name><name pos:line="15" pos:column="39">diff_queued_diff<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">.<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="56">nr<pos:position pos:line="15" pos:column="58"/></name></name></expr>;<pos:position pos:line="15" pos:column="59"/></condition> <incr><expr><name pos:line="15" pos:column="60">i<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">++<pos:position pos:line="15" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="64"/></control> <block pos:line="15" pos:column="65">{
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">i<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="33">strbuf_addch<pos:position pos:line="17" pos:column="45"/></name><argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">sb<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="50">' '<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">strbuf_addstr<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">sb<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">diff_queued_diff<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">queue<pos:position pos:line="18" pos:column="65"/></name><index pos:line="18" pos:column="65">[<expr><name pos:line="18" pos:column="66">i<pos:position pos:line="18" pos:column="67"/></name></expr>]<pos:position pos:line="18" pos:column="68"/></index></name><operator pos:line="18" pos:column="68">-&gt;<pos:position pos:line="18" pos:column="73"/></operator><name><name pos:line="18" pos:column="70">two<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">-&gt;<pos:position pos:line="18" pos:column="78"/></operator><name pos:line="18" pos:column="75">path<pos:position pos:line="18" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">diff_flush<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="29">opt<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><call><name pos:line="21" pos:column="24">DIFF_OPT_TST<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><operator pos:line="21" pos:column="37">&amp;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="38">opt<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">HAS_CHANGES<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call> <operator pos:line="21" pos:column="56">!=<pos:position pos:line="21" pos:column="58"/></operator> <literal type="number" pos:line="21" pos:column="59">0<pos:position pos:line="21" pos:column="60"/></literal></expr>;<pos:position pos:line="21" pos:column="61"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{
		<for pos:line="23" pos:column="17">for <control pos:line="23" pos:column="21">(<init><expr><name pos:line="23" pos:column="22">i<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr>;<pos:position pos:line="23" pos:column="28"/></init> <condition><expr><name pos:line="23" pos:column="29">sb<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&amp;&amp;<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="35">i<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">&lt;<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="39">active_nr<pos:position pos:line="23" pos:column="48"/></name></expr>;<pos:position pos:line="23" pos:column="49"/></condition> <incr><expr><name pos:line="23" pos:column="50">i<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">++<pos:position pos:line="23" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="54"/></control> <block pos:line="23" pos:column="55">{
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name pos:line="24" pos:column="29">i<pos:position pos:line="24" pos:column="30"/></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="33">strbuf_addch<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">sb<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="50">' '<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">strbuf_addstr<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">sb<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="43">active_cache<pos:position pos:line="26" pos:column="55"/></name><index pos:line="26" pos:column="55">[<expr><name pos:line="26" pos:column="56">i<pos:position pos:line="26" pos:column="57"/></name></expr>]<pos:position pos:line="26" pos:column="58"/></index></name><operator pos:line="26" pos:column="58">-&gt;<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="60">name<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></for>
		<return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">!<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">!<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">active_nr<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></else></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5363_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_ce<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">repository<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">repo<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">dir_struct<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">dir<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">cache_entry<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">ce<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">fullname<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">char<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">tag<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">max_prefix_len<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&gt;<pos:position pos:line="5" pos:column="32"/></operator> <call><name pos:line="5" pos:column="30">strlen<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">fullname<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"git ls-files: internal error - cache entry not superset of prefix"<pos:position pos:line="6" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="90"/></expr_stmt></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">recurse_submodules<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">&amp;&amp;<pos:position pos:line="8" pos:column="42"/></operator> <call><name pos:line="8" pos:column="35">S_ISGITLINK<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name><name pos:line="8" pos:column="47">ce<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">ce_mode<pos:position pos:line="8" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call> <operator pos:line="8" pos:column="60">&amp;&amp;<pos:position pos:line="8" pos:column="70"/></operator>
	    <call><name pos:line="9" pos:column="13">is_submodule_active<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">repo<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="39">ce<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">name<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">show_submodule<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">repo<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">dir<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="43">ce<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">name<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then> <elseif pos:line="11" pos:column="11">else <if pos:line="11" pos:column="16">if <condition pos:line="11" pos:column="19">(<expr><call><name pos:line="11" pos:column="20">match_pathspec<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="36">pathspec<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">fullname<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="56">strlen<pos:position pos:line="11" pos:column="62"/></name><argument_list pos:line="11" pos:column="62">(<argument><expr><name pos:line="11" pos:column="63">fullname<pos:position pos:line="11" pos:column="71"/></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr></argument>,
				  <argument><expr><name pos:line="12" pos:column="35">max_prefix_len<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="51">ps_matched<pos:position pos:line="12" pos:column="61"/></name></expr></argument>,
				  <argument><expr><call><name pos:line="13" pos:column="35">S_ISDIR<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name><name pos:line="13" pos:column="43">ce<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">ce_mode<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call> <operator pos:line="13" pos:column="56">||<pos:position pos:line="13" pos:column="58"/></operator>
				  <call><name pos:line="14" pos:column="35">S_ISGITLINK<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><name><name pos:line="14" pos:column="47">ce<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">ce_mode<pos:position pos:line="14" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61"> <block pos:line="14" pos:column="62">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">tag<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">get_tag<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">ce<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">tag<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">show_stage<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33"> <block pos:line="17" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">fputs<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">tag<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">stdout<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then> <else pos:line="19" pos:column="19">else <block pos:line="19" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">printf<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="string" pos:line="20" pos:column="32">"%s%06o %s %d\t"<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>,
			       <argument><expr><name pos:line="21" pos:column="32">tag<pos:position pos:line="21" pos:column="35"/></name></expr></argument>,
			       <argument><expr><name><name pos:line="22" pos:column="32">ce<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">ce_mode<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>,
			       <argument><expr><call><name pos:line="23" pos:column="32">find_unique_abbrev<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name><name pos:line="23" pos:column="51">ce<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="55">oid<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">.<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">hash<pos:position pos:line="23" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="65">abbrev<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr></argument>,
			       <argument><expr><call><name pos:line="24" pos:column="32">ce_stage<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">ce<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">write_eolinfo<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name><name pos:line="26" pos:column="31">repo<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">index<pos:position pos:line="26" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">ce<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">fullname<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">write_name<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">fullname<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">print_debug<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">ce<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

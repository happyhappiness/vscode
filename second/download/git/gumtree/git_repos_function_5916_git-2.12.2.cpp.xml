<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5916_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">strategy<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">get_strategy<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">name<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strategy<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">ret<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">cmdnames<pos:position pos:line="5" pos:column="31"/></name></name></type> <name pos:line="5" pos:column="32">main_cmds<pos:position pos:line="5" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="43">other_cmds<pos:position pos:line="5" pos:column="53"/></name></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">loaded<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">name<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <call><name pos:line="11" pos:column="25">ARRAY_SIZE<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">all_strategy<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></condition> <incr><expr><name pos:line="11" pos:column="51">i<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">++<pos:position pos:line="11" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="55"/></control>
		<block type="pseudo"><if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">strcmp<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">name<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="35">all_strategy<pos:position pos:line="12" pos:column="47"/></name><index pos:line="12" pos:column="47">[<expr><name pos:line="12" pos:column="48">i<pos:position pos:line="12" pos:column="49"/></name></expr>]<pos:position pos:line="12" pos:column="50"/></index></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">name<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="57"/></condition><then pos:line="12" pos:column="57">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="33">all_strategy<pos:position pos:line="13" pos:column="45"/></name><index pos:line="13" pos:column="45">[<expr><name pos:line="13" pos:column="46">i<pos:position pos:line="13" pos:column="47"/></name></expr>]<pos:position pos:line="13" pos:column="48"/></index></name></expr>;<pos:position pos:line="13" pos:column="49"/></return></block></then></if></block></for>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">loaded<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">struct<pos:position pos:line="16" pos:column="23"/></name> <name pos:line="16" pos:column="24">cmdnames<pos:position pos:line="16" pos:column="32"/></name></name></type> <name pos:line="16" pos:column="33">not_strategies<pos:position pos:line="16" pos:column="47"/></name></decl>;<pos:position pos:line="16" pos:column="48"/></decl_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">loaded<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">memset<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">not_strategies<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="41">0<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="44">sizeof<argument_list pos:line="19" pos:column="50">(<argument><expr pos:line="19" pos:column="51">struct <name pos:line="19" pos:column="58">cmdnames<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">load_command_list<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><literal type="string" pos:line="20" pos:column="35">"git-merge-"<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="49">&amp;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="50">main_cmds<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="61">&amp;<pos:position pos:line="20" pos:column="66"/></operator><name pos:line="20" pos:column="62">other_cmds<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
		<for pos:line="21" pos:column="17">for <control pos:line="21" pos:column="21">(<init><expr><name pos:line="21" pos:column="22">i<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></init> <condition><expr><name pos:line="21" pos:column="29">i<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">&lt;<pos:position pos:line="21" pos:column="35"/></operator> <name><name pos:line="21" pos:column="33">main_cmds<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">.<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">cnt<pos:position pos:line="21" pos:column="46"/></name></name></expr>;<pos:position pos:line="21" pos:column="47"/></condition> <incr><expr><name pos:line="21" pos:column="48">i<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">++<pos:position pos:line="21" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="52"/></control> <block pos:line="21" pos:column="53">{
			<decl_stmt><decl><type><name pos:line="22" pos:column="25">int<pos:position pos:line="22" pos:column="28"/></name></type> <name pos:line="22" pos:column="29">j<pos:position pos:line="22" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="32">found<pos:position pos:line="22" pos:column="37"/></name> <init pos:line="22" pos:column="38">= <expr><literal type="number" pos:line="22" pos:column="40">0<pos:position pos:line="22" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="23" pos:column="25">struct<pos:position pos:line="23" pos:column="31"/></name> <name pos:line="23" pos:column="32">cmdname<pos:position pos:line="23" pos:column="39"/></name></name> <modifier pos:line="23" pos:column="40">*<pos:position pos:line="23" pos:column="41"/></modifier></type><name pos:line="23" pos:column="41">ent<pos:position pos:line="23" pos:column="44"/></name> <init pos:line="23" pos:column="45">= <expr><name><name pos:line="23" pos:column="47">main_cmds<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">names<pos:position pos:line="23" pos:column="62"/></name><index pos:line="23" pos:column="62">[<expr><name pos:line="23" pos:column="63">i<pos:position pos:line="23" pos:column="64"/></name></expr>]<pos:position pos:line="23" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="23" pos:column="66"/></decl_stmt>
			<for pos:line="24" pos:column="25">for <control pos:line="24" pos:column="29">(<init><expr><name pos:line="24" pos:column="30">j<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <literal type="number" pos:line="24" pos:column="34">0<pos:position pos:line="24" pos:column="35"/></literal></expr>;<pos:position pos:line="24" pos:column="36"/></init> <condition><expr><name pos:line="24" pos:column="37">j<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">&lt;<pos:position pos:line="24" pos:column="43"/></operator> <call><name pos:line="24" pos:column="41">ARRAY_SIZE<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">all_strategy<pos:position pos:line="24" pos:column="64"/></name></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="66"/></condition> <incr><expr><name pos:line="24" pos:column="67">j<pos:position pos:line="24" pos:column="68"/></name><operator pos:line="24" pos:column="68">++<pos:position pos:line="24" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="71"/></control>
				<block type="pseudo"><if pos:line="25" pos:column="33">if <condition pos:line="25" pos:column="36">(<expr><operator pos:line="25" pos:column="37">!<pos:position pos:line="25" pos:column="38"/></operator><call><name pos:line="25" pos:column="38">strncmp<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name><name pos:line="25" pos:column="46">ent<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">-&gt;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="51">name<pos:position pos:line="25" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="57">all_strategy<pos:position pos:line="25" pos:column="69"/></name><index pos:line="25" pos:column="69">[<expr><name pos:line="25" pos:column="70">j<pos:position pos:line="25" pos:column="71"/></name></expr>]<pos:position pos:line="25" pos:column="72"/></index></name><operator pos:line="25" pos:column="72">.<pos:position pos:line="25" pos:column="73"/></operator><name pos:line="25" pos:column="73">name<pos:position pos:line="25" pos:column="77"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="79">ent<pos:position pos:line="25" pos:column="82"/></name><operator pos:line="25" pos:column="82">-&gt;<pos:position pos:line="25" pos:column="87"/></operator><name pos:line="25" pos:column="84">len<pos:position pos:line="25" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="88"/></argument_list></call>
						<operator pos:line="26" pos:column="49">&amp;&amp;<pos:position pos:line="26" pos:column="59"/></operator> <operator pos:line="26" pos:column="52">!<pos:position pos:line="26" pos:column="53"/></operator><name><name pos:line="26" pos:column="53">all_strategy<pos:position pos:line="26" pos:column="65"/></name><index pos:line="26" pos:column="65">[<expr><name pos:line="26" pos:column="66">j<pos:position pos:line="26" pos:column="67"/></name></expr>]<pos:position pos:line="26" pos:column="68"/></index></name><operator pos:line="26" pos:column="68">.<pos:position pos:line="26" pos:column="69"/></operator><name><name pos:line="26" pos:column="69">name<pos:position pos:line="26" pos:column="73"/></name><index pos:line="26" pos:column="73">[<expr><name><name pos:line="26" pos:column="74">ent<pos:position pos:line="26" pos:column="77"/></name><operator pos:line="26" pos:column="77">-&gt;<pos:position pos:line="26" pos:column="82"/></operator><name pos:line="26" pos:column="79">len<pos:position pos:line="26" pos:column="82"/></name></name></expr>]<pos:position pos:line="26" pos:column="83"/></index></name></expr>)<pos:position pos:line="26" pos:column="84"/></condition><then pos:line="26" pos:column="84">
					<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="41">found<pos:position pos:line="27" pos:column="46"/></name> <operator pos:line="27" pos:column="47">=<pos:position pos:line="27" pos:column="48"/></operator> <literal type="number" pos:line="27" pos:column="49">1<pos:position pos:line="27" pos:column="50"/></literal></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt></block></then></if></block></for>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">found<pos:position pos:line="28" pos:column="35"/></name></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="33">add_cmdname<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><operator pos:line="29" pos:column="45">&amp;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="46">not_strategies<pos:position pos:line="29" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="62">ent<pos:position pos:line="29" pos:column="65"/></name><operator pos:line="29" pos:column="65">-&gt;<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="67">name<pos:position pos:line="29" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="73">ent<pos:position pos:line="29" pos:column="76"/></name><operator pos:line="29" pos:column="76">-&gt;<pos:position pos:line="29" pos:column="81"/></operator><name pos:line="29" pos:column="78">len<pos:position pos:line="29" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt></block></then></if>
		}<pos:position pos:line="30" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">exclude_cmds<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><operator pos:line="31" pos:column="30">&amp;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="31">main_cmds<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="43">not_strategies<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">is_in_cmdlist<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><operator pos:line="33" pos:column="28">&amp;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="29">main_cmds<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">name<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call> <operator pos:line="33" pos:column="46">&amp;&amp;<pos:position pos:line="33" pos:column="56"/></operator> <operator pos:line="33" pos:column="49">!<pos:position pos:line="33" pos:column="50"/></operator><call><name pos:line="33" pos:column="50">is_in_cmdlist<pos:position pos:line="33" pos:column="63"/></name><argument_list pos:line="33" pos:column="63">(<argument><expr><operator pos:line="33" pos:column="64">&amp;<pos:position pos:line="33" pos:column="69"/></operator><name pos:line="33" pos:column="65">other_cmds<pos:position pos:line="33" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="77">name<pos:position pos:line="33" pos:column="81"/></name></expr></argument>)<pos:position pos:line="33" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="83"/></condition><then pos:line="33" pos:column="83"> <block pos:line="33" pos:column="84">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">fprintf<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">stderr<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="33">_<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><literal type="string" pos:line="34" pos:column="35">"Could not find merge strategy '%s'.\n"<pos:position pos:line="34" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="77">name<pos:position pos:line="34" pos:column="81"/></name></expr></argument>)<pos:position pos:line="34" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">fprintf<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">stderr<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="33">_<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><literal type="string" pos:line="35" pos:column="35">"Available strategies are:"<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
		<for pos:line="36" pos:column="17">for <control pos:line="36" pos:column="21">(<init><expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></init> <condition><expr><name pos:line="36" pos:column="29">i<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&lt;<pos:position pos:line="36" pos:column="35"/></operator> <name><name pos:line="36" pos:column="33">main_cmds<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">.<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">cnt<pos:position pos:line="36" pos:column="46"/></name></name></expr>;<pos:position pos:line="36" pos:column="47"/></condition> <incr><expr><name pos:line="36" pos:column="48">i<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">++<pos:position pos:line="36" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="52"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">fprintf<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">stderr<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="41">" %s"<pos:position pos:line="37" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="48">main_cmds<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">.<pos:position pos:line="37" pos:column="58"/></operator><name pos:line="37" pos:column="58">names<pos:position pos:line="37" pos:column="63"/></name><index pos:line="37" pos:column="63">[<expr><name pos:line="37" pos:column="64">i<pos:position pos:line="37" pos:column="65"/></name></expr>]<pos:position pos:line="37" pos:column="66"/></index></name><operator pos:line="37" pos:column="66">-&gt;<pos:position pos:line="37" pos:column="71"/></operator><name pos:line="37" pos:column="68">name<pos:position pos:line="37" pos:column="72"/></name></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">fprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">stderr<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">".\n"<pos:position pos:line="38" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name><name pos:line="39" pos:column="21">other_cmds<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">cnt<pos:position pos:line="39" pos:column="35"/></name></name></expr>)<pos:position pos:line="39" pos:column="36"/></condition><then pos:line="39" pos:column="36"> <block pos:line="39" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">fprintf<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">stderr<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="41">_<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><literal type="string" pos:line="40" pos:column="43">"Available custom strategies are:"<pos:position pos:line="40" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="80"/></expr_stmt>
			<for pos:line="41" pos:column="25">for <control pos:line="41" pos:column="29">(<init><expr><name pos:line="41" pos:column="30">i<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">0<pos:position pos:line="41" pos:column="35"/></literal></expr>;<pos:position pos:line="41" pos:column="36"/></init> <condition><expr><name pos:line="41" pos:column="37">i<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">&lt;<pos:position pos:line="41" pos:column="43"/></operator> <name><name pos:line="41" pos:column="41">other_cmds<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">.<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">cnt<pos:position pos:line="41" pos:column="55"/></name></name></expr>;<pos:position pos:line="41" pos:column="56"/></condition> <incr><expr><name pos:line="41" pos:column="57">i<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">++<pos:position pos:line="41" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="61"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="33">fprintf<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">stderr<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="49">" %s"<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="56">other_cmds<pos:position pos:line="42" pos:column="66"/></name><operator pos:line="42" pos:column="66">.<pos:position pos:line="42" pos:column="67"/></operator><name pos:line="42" pos:column="67">names<pos:position pos:line="42" pos:column="72"/></name><index pos:line="42" pos:column="72">[<expr><name pos:line="42" pos:column="73">i<pos:position pos:line="42" pos:column="74"/></name></expr>]<pos:position pos:line="42" pos:column="75"/></index></name><operator pos:line="42" pos:column="75">-&gt;<pos:position pos:line="42" pos:column="80"/></operator><name pos:line="42" pos:column="77">name<pos:position pos:line="42" pos:column="81"/></name></expr></argument>)<pos:position pos:line="42" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="83"/></expr_stmt></block></for>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">fprintf<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">stderr<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="41">".\n"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">exit<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><literal type="number" pos:line="45" pos:column="22">1<pos:position pos:line="45" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="48" pos:column="9">ret<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">xcalloc<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><literal type="number" pos:line="48" pos:column="23">1<pos:position pos:line="48" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="26">sizeof<argument_list pos:line="48" pos:column="32">(<argument><expr pos:line="48" pos:column="33">struct <name pos:line="48" pos:column="40">strategy<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">ret<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">name<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <call><name pos:line="49" pos:column="21">xstrdup<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">name<pos:position pos:line="49" pos:column="33"/></name></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">ret<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">attr<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">NO_TRIVIAL<pos:position pos:line="50" pos:column="31"/></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
	<return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">ret<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1052.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">run_builtin<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">cmd_struct<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">p<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">argc<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier><modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">argv<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">help<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">stat<pos:position pos:line="4" pos:column="20"/></name></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">prefix<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">prefix<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">help<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">argc<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="24">2<pos:position pos:line="8" pos:column="25"/></literal> <operator pos:line="8" pos:column="26">&amp;&amp;<pos:position pos:line="8" pos:column="36"/></operator> <operator pos:line="8" pos:column="29">!<pos:position pos:line="8" pos:column="30"/></operator><call><name pos:line="8" pos:column="30">strcmp<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name><name pos:line="8" pos:column="37">argv<pos:position pos:line="8" pos:column="41"/></name><index pos:line="8" pos:column="41">[<expr><literal type="number" pos:line="8" pos:column="42">1<pos:position pos:line="8" pos:column="43"/></literal></expr>]<pos:position pos:line="8" pos:column="44"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="46">"-h"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">help<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">p<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">option<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">&amp;<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="33">RUN_SETUP<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">prefix<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <call><name pos:line="11" pos:column="34">setup_git_directory<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">()<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt></block></then>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><name><name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">option<pos:position pos:line="12" pos:column="35"/></name></name> <operator pos:line="12" pos:column="36">&amp;<pos:position pos:line="12" pos:column="41"/></operator> <name pos:line="12" pos:column="38">RUN_SETUP_GENTLY<pos:position pos:line="12" pos:column="54"/></name></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55"> <block pos:line="12" pos:column="56">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">int<pos:position pos:line="13" pos:column="28"/></name></type> <name pos:line="13" pos:column="29">nongit_ok<pos:position pos:line="13" pos:column="38"/></name></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">prefix<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <call><name pos:line="14" pos:column="34">setup_git_directory_gently<pos:position pos:line="14" pos:column="60"/></name><argument_list pos:line="14" pos:column="60">(<argument><expr><operator pos:line="14" pos:column="61">&amp;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="62">nongit_ok<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">use_pager<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="34">-<pos:position pos:line="17" pos:column="35"/></operator><literal type="number" pos:line="17" pos:column="35">1<pos:position pos:line="17" pos:column="36"/></literal> <operator pos:line="17" pos:column="37">&amp;&amp;<pos:position pos:line="17" pos:column="47"/></operator> <name><name pos:line="17" pos:column="40">p<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">option<pos:position pos:line="17" pos:column="49"/></name></name> <operator pos:line="17" pos:column="50">&amp;<pos:position pos:line="17" pos:column="55"/></operator> <operator pos:line="17" pos:column="52">(<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="53">RUN_SETUP<pos:position pos:line="17" pos:column="62"/></name> <operator pos:line="17" pos:column="63">|<pos:position pos:line="17" pos:column="64"/></operator> <name pos:line="17" pos:column="65">RUN_SETUP_GENTLY<pos:position pos:line="17" pos:column="81"/></name><operator pos:line="17" pos:column="81">)<pos:position pos:line="17" pos:column="82"/></operator></expr>)<pos:position pos:line="17" pos:column="83"/></condition><then pos:line="17" pos:column="83">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">use_pager<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <call><name pos:line="18" pos:column="37">check_pager_config<pos:position pos:line="18" pos:column="55"/></name><argument_list pos:line="18" pos:column="55">(<argument><expr><name><name pos:line="18" pos:column="56">p<pos:position pos:line="18" pos:column="57"/></name><operator pos:line="18" pos:column="57">-&gt;<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="59">cmd<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">use_pager<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">==<pos:position pos:line="19" pos:column="33"/></operator> <operator pos:line="19" pos:column="34">-<pos:position pos:line="19" pos:column="35"/></operator><literal type="number" pos:line="19" pos:column="35">1<pos:position pos:line="19" pos:column="36"/></literal> <operator pos:line="19" pos:column="37">&amp;&amp;<pos:position pos:line="19" pos:column="47"/></operator> <name><name pos:line="19" pos:column="40">p<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">option<pos:position pos:line="19" pos:column="49"/></name></name> <operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator> <name pos:line="19" pos:column="52">USE_PAGER<pos:position pos:line="19" pos:column="61"/></name></expr>)<pos:position pos:line="19" pos:column="62"/></condition><then pos:line="19" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">use_pager<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <literal type="number" pos:line="20" pos:column="37">1<pos:position pos:line="20" pos:column="38"/></literal></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt></block></then></if>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><name><name pos:line="22" pos:column="22">p<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">option<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">&amp;<pos:position pos:line="22" pos:column="37"/></operator> <operator pos:line="22" pos:column="34">(<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">RUN_SETUP<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">|<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="47">RUN_SETUP_GENTLY<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">)<pos:position pos:line="22" pos:column="64"/></operator><operator pos:line="22" pos:column="64">)<pos:position pos:line="22" pos:column="65"/></operator> <operator pos:line="22" pos:column="66">&amp;&amp;<pos:position pos:line="22" pos:column="76"/></operator>
		    <name><name pos:line="23" pos:column="21">startup_info<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">have_repository<pos:position pos:line="23" pos:column="50"/></name></name></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51"> <comment type="block" pos:line="23" pos:column="52">/* get_git_dir() may set up repo, avoid that */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">trace_repo_setup<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">prefix<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">commit_pager_choice<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">()<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">help<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&amp;&amp;<pos:position pos:line="28" pos:column="29"/></operator> <call><name pos:line="28" pos:column="22">get_super_prefix<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">()<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41"> <block pos:line="28" pos:column="42">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><operator pos:line="29" pos:column="22">(<pos:position pos:line="29" pos:column="23"/></operator><name><name pos:line="29" pos:column="23">p<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">option<pos:position pos:line="29" pos:column="32"/></name></name> <operator pos:line="29" pos:column="33">&amp;<pos:position pos:line="29" pos:column="38"/></operator> <name pos:line="29" pos:column="35">SUPPORT_SUPER_PREFIX<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">)<pos:position pos:line="29" pos:column="56"/></operator></expr>)<pos:position pos:line="29" pos:column="57"/></condition><then pos:line="29" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">die<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><literal type="string" pos:line="30" pos:column="29">"%s doesn't support --super-prefix"<pos:position pos:line="30" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="66">p<pos:position pos:line="30" pos:column="67"/></name><operator pos:line="30" pos:column="67">-&gt;<pos:position pos:line="30" pos:column="72"/></operator><name pos:line="30" pos:column="69">cmd<pos:position pos:line="30" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">prefix<pos:position pos:line="31" pos:column="27"/></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">die<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><literal type="string" pos:line="32" pos:column="29">"can't use --super-prefix from a subdirectory"<pos:position pos:line="32" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">help<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&amp;&amp;<pos:position pos:line="35" pos:column="29"/></operator> <name><name pos:line="35" pos:column="22">p<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">option<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">&amp;<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="34">NEED_WORK_TREE<pos:position pos:line="35" pos:column="48"/></name></expr>)<pos:position pos:line="35" pos:column="49"/></condition><then pos:line="35" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">setup_work_tree<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">()<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">trace_argv_printf<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">argv<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"trace: built-in: git"<pos:position pos:line="38" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name><name pos:line="40" pos:column="18">p<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">fn<pos:position pos:line="40" pos:column="23"/></name></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">argc<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">argv<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="36">prefix<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">status<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20">
		<block type="pseudo"><return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">status<pos:position pos:line="42" pos:column="30"/></name></expr>;<pos:position pos:line="42" pos:column="31"/></return></block></then></if>

	<comment type="block" pos:line="44" pos:column="9">/* Somebody closed stdout? */</comment>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">fstat<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><call><name pos:line="45" pos:column="19">fileno<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">stdout<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="45" pos:column="35">&amp;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="36">st<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="40"/></condition><then pos:line="45" pos:column="40">
		<block type="pseudo"><return pos:line="46" pos:column="17">return <expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>;<pos:position pos:line="46" pos:column="26"/></return></block></then></if>
	<comment type="block" pos:line="47" pos:column="9">/* Ignore write errors for pipes and sockets.. */</comment>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">S_ISFIFO<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name><name pos:line="48" pos:column="22">st<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">.<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">st_mode<pos:position pos:line="48" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call> <operator pos:line="48" pos:column="34">||<pos:position pos:line="48" pos:column="36"/></operator> <call><name pos:line="48" pos:column="37">S_ISSOCK<pos:position pos:line="48" pos:column="45"/></name><argument_list pos:line="48" pos:column="45">(<argument><expr><name><name pos:line="48" pos:column="46">st<pos:position pos:line="48" pos:column="48"/></name><operator pos:line="48" pos:column="48">.<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="49">st_mode<pos:position pos:line="48" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="58"/></condition><then pos:line="48" pos:column="58">
		<block type="pseudo"><return pos:line="49" pos:column="17">return <expr><literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="51" pos:column="9">/* Check for ENOSPC and EIO errors.. */</comment>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><call><name pos:line="52" pos:column="13">fflush<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">stdout<pos:position pos:line="52" pos:column="26"/></name></expr></argument>)<pos:position pos:line="52" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="28"/></condition><then pos:line="52" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="17">die_errno<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><literal type="string" pos:line="53" pos:column="27">"write failure on standard output"<pos:position pos:line="53" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt></block></then></if>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><call><name pos:line="54" pos:column="13">ferror<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">stdout<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="17">die<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><literal type="string" pos:line="55" pos:column="21">"unknown write failure on standard output"<pos:position pos:line="55" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt></block></then></if>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">fclose<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">stdout<pos:position pos:line="56" pos:column="26"/></name></expr></argument>)<pos:position pos:line="56" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="17">die_errno<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><literal type="string" pos:line="57" pos:column="27">"close failed on standard output"<pos:position pos:line="57" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="62"/></expr_stmt></block></then></if>
	<return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_522.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_ws_error_highlight<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">diff_options<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">opt<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">arg<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">orig_arg<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">arg<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">val<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><operator pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">arg<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition> <block pos:line="5" pos:column="22">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><call><name pos:line="6" pos:column="21">parse_one_token<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><operator pos:line="6" pos:column="37">&amp;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="38">arg<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="43">"none"<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">val<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">=<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="31">0<pos:position pos:line="7" pos:column="32"/></literal></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt></block></then>
		<elseif pos:line="8" pos:column="17">else <if pos:line="8" pos:column="22">if <condition pos:line="8" pos:column="25">(<expr><call><name pos:line="8" pos:column="26">parse_one_token<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">arg<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="48">"default"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="59"/></condition><then pos:line="8" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">val<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">WSEH_NEW<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="10" pos:column="17">else <if pos:line="10" pos:column="22">if <condition pos:line="10" pos:column="25">(<expr><call><name pos:line="10" pos:column="26">parse_one_token<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><operator pos:line="10" pos:column="42">&amp;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="43">arg<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="48">"all"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">val<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">WSEH_NEW<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">|<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="42">WSEH_OLD<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">|<pos:position pos:line="11" pos:column="52"/></operator> <name pos:line="11" pos:column="53">WSEH_CONTEXT<pos:position pos:line="11" pos:column="65"/></name></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><call><name pos:line="12" pos:column="26">parse_one_token<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><operator pos:line="12" pos:column="42">&amp;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="43">arg<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="48">"new"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">val<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">|=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">WSEH_NEW<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="14" pos:column="17">else <if pos:line="14" pos:column="22">if <condition pos:line="14" pos:column="25">(<expr><call><name pos:line="14" pos:column="26">parse_one_token<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="43">arg<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="48">"old"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="55"/></condition><then pos:line="14" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">val<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">|=<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">WSEH_OLD<pos:position pos:line="15" pos:column="40"/></name></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="16" pos:column="17">else <if pos:line="16" pos:column="22">if <condition pos:line="16" pos:column="25">(<expr><call><name pos:line="16" pos:column="26">parse_one_token<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="43">arg<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="48">"context"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">val<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">|=<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">WSEH_CONTEXT<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<else pos:line="18" pos:column="17">else <block pos:line="18" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">error<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"unknown value after ws-error-highlight=%.*s"<pos:position pos:line="19" pos:column="76"/></literal></expr></argument>,
			      <argument><expr><call pos:line="20" pos:column="31">(<name pos:line="20" pos:column="32">int<pos:position pos:line="20" pos:column="35"/></name>)<argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">arg<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">-<pos:position pos:line="20" pos:column="42"/></operator> <name pos:line="20" pos:column="43">orig_arg<pos:position pos:line="20" pos:column="51"/></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">orig_arg<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
			<return pos:line="21" pos:column="25">return <expr><literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr>;<pos:position pos:line="21" pos:column="34"/></return>
		}<pos:position pos:line="22" pos:column="18"/></block></else></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">arg<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">arg<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">++<pos:position pos:line="24" pos:column="30"/></operator></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></while>
	<expr_stmt><expr><name><name pos:line="26" pos:column="9">opt<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">ws_error_highlight<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">val<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
	<return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

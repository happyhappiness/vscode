<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4842_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">long<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">xdl_hash_record_with_whitespace<pos:position pos:line="1" pos:column="53"/></name><parameter_list pos:line="1" pos:column="53">(<parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">data<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">top<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">long<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">flags<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">ha<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><literal type="number" pos:line="3" pos:column="28">5381<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <specifier pos:line="4" pos:column="14">const<pos:position pos:line="4" pos:column="19"/></specifier> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ptr<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">data<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init pos:line="6" pos:column="14">;<pos:position pos:line="6" pos:column="15"/></init> <condition><expr><name pos:line="6" pos:column="16">ptr<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">&lt;<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="22">top<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">&amp;&amp;<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">ptr<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">!=<pos:position pos:line="6" pos:column="36"/></operator> <literal type="char" pos:line="6" pos:column="37">'\n'<pos:position pos:line="6" pos:column="41"/></literal></expr>;<pos:position pos:line="6" pos:column="42"/></condition> <incr><expr><name pos:line="6" pos:column="43">ptr<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">++<pos:position pos:line="6" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="49"/></control> <block pos:line="6" pos:column="50">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">XDL_ISSPACE<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">ptr<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <block pos:line="7" pos:column="40">{
			<decl_stmt><decl><type><specifier pos:line="8" pos:column="25">const<pos:position pos:line="8" pos:column="30"/></specifier> <name pos:line="8" pos:column="31">char<pos:position pos:line="8" pos:column="35"/></name> <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier></type><name pos:line="8" pos:column="37">ptr2<pos:position pos:line="8" pos:column="41"/></name> <init pos:line="8" pos:column="42">= <expr><name pos:line="8" pos:column="44">ptr<pos:position pos:line="8" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="9" pos:column="25">int<pos:position pos:line="9" pos:column="28"/></name></type> <name pos:line="9" pos:column="29">at_eol<pos:position pos:line="9" pos:column="35"/></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
			<while pos:line="10" pos:column="25">while <condition pos:line="10" pos:column="31">(<expr><name pos:line="10" pos:column="32">ptr<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">+<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="38">1<pos:position pos:line="10" pos:column="39"/></literal> <operator pos:line="10" pos:column="40">&lt;<pos:position pos:line="10" pos:column="44"/></operator> <name pos:line="10" pos:column="42">top<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">&amp;&amp;<pos:position pos:line="10" pos:column="56"/></operator> <call><name pos:line="10" pos:column="49">XDL_ISSPACE<pos:position pos:line="10" pos:column="60"/></name><argument_list pos:line="10" pos:column="60">(<argument><expr><name><name pos:line="10" pos:column="61">ptr<pos:position pos:line="10" pos:column="64"/></name><index pos:line="10" pos:column="64">[<expr><literal type="number" pos:line="10" pos:column="65">1<pos:position pos:line="10" pos:column="66"/></literal></expr>]<pos:position pos:line="10" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call>
					<operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <name><name pos:line="11" pos:column="44">ptr<pos:position pos:line="11" pos:column="47"/></name><index pos:line="11" pos:column="47">[<expr><literal type="number" pos:line="11" pos:column="48">1<pos:position pos:line="11" pos:column="49"/></literal></expr>]<pos:position pos:line="11" pos:column="50"/></index></name> <operator pos:line="11" pos:column="51">!=<pos:position pos:line="11" pos:column="53"/></operator> <literal type="char" pos:line="11" pos:column="54">'\n'<pos:position pos:line="11" pos:column="58"/></literal></expr>)<pos:position pos:line="11" pos:column="59"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="33">ptr<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">++<pos:position pos:line="12" pos:column="38"/></operator></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="13" pos:column="25">at_eol<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <operator pos:line="13" pos:column="34">(<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">top<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&lt;=<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="42">ptr<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">+<pos:position pos:line="13" pos:column="47"/></operator> <literal type="number" pos:line="13" pos:column="48">1<pos:position pos:line="13" pos:column="49"/></literal> <operator pos:line="13" pos:column="50">||<pos:position pos:line="13" pos:column="52"/></operator> <name><name pos:line="13" pos:column="53">ptr<pos:position pos:line="13" pos:column="56"/></name><index pos:line="13" pos:column="56">[<expr><literal type="number" pos:line="13" pos:column="57">1<pos:position pos:line="13" pos:column="58"/></literal></expr>]<pos:position pos:line="13" pos:column="59"/></index></name> <operator pos:line="13" pos:column="60">==<pos:position pos:line="13" pos:column="62"/></operator> <literal type="char" pos:line="13" pos:column="63">'\n'<pos:position pos:line="13" pos:column="67"/></literal><operator pos:line="13" pos:column="67">)<pos:position pos:line="13" pos:column="68"/></operator></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">flags<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="37">XDF_IGNORE_WHITESPACE<pos:position pos:line="14" pos:column="58"/></name></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59">
				<block type="pseudo"><empty_stmt pos:line="15" pos:column="33">;<pos:position pos:line="15" pos:column="34"/></empty_stmt></block></then> <comment type="block" pos:line="15" pos:column="35">/* already handled */</comment>
			<elseif pos:line="16" pos:column="25">else <if pos:line="16" pos:column="30">if <condition pos:line="16" pos:column="33">(<expr><name pos:line="16" pos:column="34">flags<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="42">XDF_IGNORE_WHITESPACE_CHANGE<pos:position pos:line="16" pos:column="70"/></name>
				 <operator pos:line="17" pos:column="34">&amp;&amp;<pos:position pos:line="17" pos:column="44"/></operator> <operator pos:line="17" pos:column="37">!<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">at_eol<pos:position pos:line="17" pos:column="44"/></name></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45"> <block pos:line="17" pos:column="46">{
				<expr_stmt><expr><name pos:line="18" pos:column="33">ha<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">+=<pos:position pos:line="18" pos:column="38"/></operator> <operator pos:line="18" pos:column="39">(<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">ha<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">&lt;&lt;<pos:position pos:line="18" pos:column="51"/></operator> <literal type="number" pos:line="18" pos:column="46">5<pos:position pos:line="18" pos:column="47"/></literal><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name pos:line="19" pos:column="33">ha<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">^=<pos:position pos:line="19" pos:column="38"/></operator> <operator pos:line="19" pos:column="39">(<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">unsigned<pos:position pos:line="19" pos:column="48"/></name> <name pos:line="19" pos:column="49">long<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">)<pos:position pos:line="19" pos:column="54"/></operator> <literal type="char" pos:line="19" pos:column="55">' '<pos:position pos:line="19" pos:column="58"/></literal></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="20" pos:column="26"/></block></then></if></elseif>
			<elseif pos:line="21" pos:column="25">else <if pos:line="21" pos:column="30">if <condition pos:line="21" pos:column="33">(<expr><name pos:line="21" pos:column="34">flags<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="42">XDF_IGNORE_WHITESPACE_AT_EOL<pos:position pos:line="21" pos:column="70"/></name>
				 <operator pos:line="22" pos:column="34">&amp;&amp;<pos:position pos:line="22" pos:column="44"/></operator> <operator pos:line="22" pos:column="37">!<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">at_eol<pos:position pos:line="22" pos:column="44"/></name></expr>)<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45"> <block pos:line="22" pos:column="46">{
				<while pos:line="23" pos:column="33">while <condition pos:line="23" pos:column="39">(<expr><name pos:line="23" pos:column="40">ptr2<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">!=<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="48">ptr<pos:position pos:line="23" pos:column="51"/></name> <operator pos:line="23" pos:column="52">+<pos:position pos:line="23" pos:column="53"/></operator> <literal type="number" pos:line="23" pos:column="54">1<pos:position pos:line="23" pos:column="55"/></literal></expr>)<pos:position pos:line="23" pos:column="56"/></condition> <block pos:line="23" pos:column="57">{
					<expr_stmt><expr><name pos:line="24" pos:column="41">ha<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">+=<pos:position pos:line="24" pos:column="46"/></operator> <operator pos:line="24" pos:column="47">(<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">ha<pos:position pos:line="24" pos:column="50"/></name> <operator pos:line="24" pos:column="51">&lt;&lt;<pos:position pos:line="24" pos:column="59"/></operator> <literal type="number" pos:line="24" pos:column="54">5<pos:position pos:line="24" pos:column="55"/></literal><operator pos:line="24" pos:column="55">)<pos:position pos:line="24" pos:column="56"/></operator></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
					<expr_stmt><expr><name pos:line="25" pos:column="41">ha<pos:position pos:line="25" pos:column="43"/></name> <operator pos:line="25" pos:column="44">^=<pos:position pos:line="25" pos:column="46"/></operator> <operator pos:line="25" pos:column="47">(<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">unsigned<pos:position pos:line="25" pos:column="56"/></name> <name pos:line="25" pos:column="57">long<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">)<pos:position pos:line="25" pos:column="62"/></operator> <operator pos:line="25" pos:column="63">*<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="64">ptr2<pos:position pos:line="25" pos:column="68"/></name></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
					<expr_stmt><expr><name pos:line="26" pos:column="41">ptr2<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">++<pos:position pos:line="26" pos:column="47"/></operator></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
				}<pos:position pos:line="27" pos:column="34"/></block></while>
			}<pos:position pos:line="28" pos:column="26"/></block></then></if></elseif></if>
			<continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="31" pos:column="17">ha<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">+=<pos:position pos:line="31" pos:column="22"/></operator> <operator pos:line="31" pos:column="23">(<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">ha<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">&lt;&lt;<pos:position pos:line="31" pos:column="35"/></operator> <literal type="number" pos:line="31" pos:column="30">5<pos:position pos:line="31" pos:column="31"/></literal><operator pos:line="31" pos:column="31">)<pos:position pos:line="31" pos:column="32"/></operator></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">ha<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">^=<pos:position pos:line="32" pos:column="22"/></operator> <operator pos:line="32" pos:column="23">(<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">unsigned<pos:position pos:line="32" pos:column="32"/></name> <name pos:line="32" pos:column="33">long<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">)<pos:position pos:line="32" pos:column="38"/></operator> <operator pos:line="32" pos:column="39">*<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">ptr<pos:position pos:line="32" pos:column="43"/></name></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></for>
	<expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">data<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <ternary><condition><expr><name pos:line="34" pos:column="17">ptr<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&lt;<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="23">top<pos:position pos:line="34" pos:column="26"/></name></expr> ?<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28"> <expr><name pos:line="34" pos:column="29">ptr<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">+<pos:position pos:line="34" pos:column="34"/></operator> <literal type="number" pos:line="34" pos:column="35">1<pos:position pos:line="34" pos:column="36"/></literal></expr></then><else pos:line="34" pos:column="36">: <expr><name pos:line="34" pos:column="38">ptr<pos:position pos:line="34" pos:column="41"/></name></expr></else></ternary></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>

	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">ha<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

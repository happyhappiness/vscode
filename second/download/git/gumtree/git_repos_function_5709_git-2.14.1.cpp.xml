<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5709_git-2.14.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">strip_escapes<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">str<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">service<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier><modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">next<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">rpos<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">escape<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">special<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">service_noprefix<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name pos:line="7" pos:column="40">service<pos:position pos:line="7" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">ret<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">STRBUF_INIT<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">skip_prefix<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">service_noprefix<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"git-"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="48">service_noprefix<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Pass the service to command. */</comment>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">setenv<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"GIT_EXT_SERVICE"<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">service<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="44">1<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">setenv<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"GIT_EXT_SERVICE_NOPREFIX"<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">service_noprefix<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="62">1<pos:position pos:line="14" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* Scan the length of argument. */</comment>
	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><name><name pos:line="17" pos:column="16">str<pos:position pos:line="17" pos:column="19"/></name><index pos:line="17" pos:column="19">[<expr><name pos:line="17" pos:column="20">rpos<pos:position pos:line="17" pos:column="24"/></name></expr>]<pos:position pos:line="17" pos:column="25"/></index></name> <operator pos:line="17" pos:column="26">&amp;&amp;<pos:position pos:line="17" pos:column="36"/></operator> <operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">escape<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">||<pos:position pos:line="17" pos:column="39"/></operator> <name><name pos:line="17" pos:column="40">str<pos:position pos:line="17" pos:column="43"/></name><index pos:line="17" pos:column="43">[<expr><name pos:line="17" pos:column="44">rpos<pos:position pos:line="17" pos:column="48"/></name></expr>]<pos:position pos:line="17" pos:column="49"/></index></name> <operator pos:line="17" pos:column="50">!=<pos:position pos:line="17" pos:column="52"/></operator> <literal type="char" pos:line="17" pos:column="53">' '<pos:position pos:line="17" pos:column="56"/></literal><operator pos:line="17" pos:column="56">)<pos:position pos:line="17" pos:column="57"/></operator></expr>)<pos:position pos:line="17" pos:column="58"/></condition> <block pos:line="17" pos:column="59">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">escape<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28"> <block pos:line="18" pos:column="29">{
			<switch pos:line="19" pos:column="25">switch <condition pos:line="19" pos:column="32">(<expr><name><name pos:line="19" pos:column="33">str<pos:position pos:line="19" pos:column="36"/></name><index pos:line="19" pos:column="36">[<expr><name pos:line="19" pos:column="37">rpos<pos:position pos:line="19" pos:column="41"/></name></expr>]<pos:position pos:line="19" pos:column="42"/></index></name></expr>)<pos:position pos:line="19" pos:column="43"/></condition> <block pos:line="19" pos:column="44">{
			<case pos:line="20" pos:column="25">case <expr><literal type="char" pos:line="20" pos:column="30">' '<pos:position pos:line="20" pos:column="33"/></literal></expr>:<pos:position pos:line="20" pos:column="34"/></case>
			<case pos:line="21" pos:column="25">case <expr><literal type="char" pos:line="21" pos:column="30">'%'<pos:position pos:line="21" pos:column="33"/></literal></expr>:<pos:position pos:line="21" pos:column="34"/></case>
			<case pos:line="22" pos:column="25">case <expr><literal type="char" pos:line="22" pos:column="30">'s'<pos:position pos:line="22" pos:column="33"/></literal></expr>:<pos:position pos:line="22" pos:column="34"/></case>
			<case pos:line="23" pos:column="25">case <expr><literal type="char" pos:line="23" pos:column="30">'S'<pos:position pos:line="23" pos:column="33"/></literal></expr>:<pos:position pos:line="23" pos:column="34"/></case>
				<break pos:line="24" pos:column="33">break;<pos:position pos:line="24" pos:column="39"/></break>
			<case pos:line="25" pos:column="25">case <expr><literal type="char" pos:line="25" pos:column="30">'G'<pos:position pos:line="25" pos:column="33"/></literal></expr>:<pos:position pos:line="25" pos:column="34"/></case>
			<case pos:line="26" pos:column="25">case <expr><literal type="char" pos:line="26" pos:column="30">'V'<pos:position pos:line="26" pos:column="33"/></literal></expr>:<pos:position pos:line="26" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="27" pos:column="33">special<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">=<pos:position pos:line="27" pos:column="42"/></operator> <name><name pos:line="27" pos:column="43">str<pos:position pos:line="27" pos:column="46"/></name><index pos:line="27" pos:column="46">[<expr><name pos:line="27" pos:column="47">rpos<pos:position pos:line="27" pos:column="51"/></name></expr>]<pos:position pos:line="27" pos:column="52"/></index></name></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
				<if pos:line="28" pos:column="33">if <condition pos:line="28" pos:column="36">(<expr><name pos:line="28" pos:column="37">rpos<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">==<pos:position pos:line="28" pos:column="44"/></operator> <literal type="number" pos:line="28" pos:column="45">1<pos:position pos:line="28" pos:column="46"/></literal></expr>)<pos:position pos:line="28" pos:column="47"/></condition><then pos:line="28" pos:column="47">
					<block type="pseudo"><break pos:line="29" pos:column="41">break;<pos:position pos:line="29" pos:column="47"/></break></block></then></if>
				<comment type="block" pos:line="30" pos:column="33">/* Fall-through to error. */</comment>
			<default pos:line="31" pos:column="25">default:<pos:position pos:line="31" pos:column="33"/></default>
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">die<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><literal type="string" pos:line="32" pos:column="37">"Bad remote-ext placeholder '%%%c'."<pos:position pos:line="32" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="33" pos:column="41">str<pos:position pos:line="33" pos:column="44"/></name><index pos:line="33" pos:column="44">[<expr><name pos:line="33" pos:column="45">rpos<pos:position pos:line="33" pos:column="49"/></name></expr>]<pos:position pos:line="33" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="34" pos:column="26"/></block></switch>
			<expr_stmt><expr><name pos:line="35" pos:column="25">escape<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="34">0<pos:position pos:line="35" pos:column="35"/></literal></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then> <else pos:line="36" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">escape<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <operator pos:line="37" pos:column="34">(<pos:position pos:line="37" pos:column="35"/></operator><name><name pos:line="37" pos:column="35">str<pos:position pos:line="37" pos:column="38"/></name><index pos:line="37" pos:column="38">[<expr><name pos:line="37" pos:column="39">rpos<pos:position pos:line="37" pos:column="43"/></name></expr>]<pos:position pos:line="37" pos:column="44"/></index></name> <operator pos:line="37" pos:column="45">==<pos:position pos:line="37" pos:column="47"/></operator> <literal type="char" pos:line="37" pos:column="48">'%'<pos:position pos:line="37" pos:column="51"/></literal><operator pos:line="37" pos:column="51">)<pos:position pos:line="37" pos:column="52"/></operator></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">rpos<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">++<pos:position pos:line="38" pos:column="23"/></operator></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></while>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">escape<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">&amp;&amp;<pos:position pos:line="40" pos:column="30"/></operator> <operator pos:line="40" pos:column="23">!<pos:position pos:line="40" pos:column="24"/></operator><name><name pos:line="40" pos:column="24">str<pos:position pos:line="40" pos:column="27"/></name><index pos:line="40" pos:column="27">[<expr><name pos:line="40" pos:column="28">rpos<pos:position pos:line="40" pos:column="32"/></name></expr>]<pos:position pos:line="40" pos:column="33"/></index></name></expr>)<pos:position pos:line="40" pos:column="34"/></condition><then pos:line="40" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">die<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><literal type="string" pos:line="41" pos:column="21">"remote-ext command has incomplete placeholder"<pos:position pos:line="41" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="42" pos:column="9">*<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">next<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">str<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">+<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">rpos<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></operator><operator pos:line="43" pos:column="14">*<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">next<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">==<pos:position pos:line="43" pos:column="22"/></operator> <literal type="char" pos:line="43" pos:column="23">' '<pos:position pos:line="43" pos:column="26"/></literal></expr>)<pos:position pos:line="43" pos:column="27"/></condition><then pos:line="43" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="17">++<pos:position pos:line="44" pos:column="19"/></operator><operator pos:line="44" pos:column="19">*<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">next<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt></block></then></if>	<comment type="block" pos:line="44" pos:column="33">/* Skip over space */</comment>

	<comment type="block" pos:line="46" pos:column="9">/*
	 * Do the actual placeholder substitution. The string will be short
	 * enough not to overflow integers.
	 */</comment>
	<expr_stmt><expr><name pos:line="50" pos:column="9">rpos<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <ternary><condition><expr><name pos:line="50" pos:column="16">special<pos:position pos:line="50" pos:column="23"/></name></expr> ?<pos:position pos:line="50" pos:column="25"/></condition><then pos:line="50" pos:column="25"> <expr><literal type="number" pos:line="50" pos:column="26">2<pos:position pos:line="50" pos:column="27"/></literal></expr> <pos:position pos:line="50" pos:column="28"/></then><else pos:line="50" pos:column="28">: <expr><literal type="number" pos:line="50" pos:column="30">0<pos:position pos:line="50" pos:column="31"/></literal></expr></else></ternary></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>		<comment type="block" pos:line="50" pos:column="41">/* Skip first 2 bytes in specials. */</comment>
	<expr_stmt><expr><name pos:line="51" pos:column="9">escape<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <literal type="number" pos:line="51" pos:column="18">0<pos:position pos:line="51" pos:column="19"/></literal></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
	<while pos:line="52" pos:column="9">while <condition pos:line="52" pos:column="15">(<expr><name><name pos:line="52" pos:column="16">str<pos:position pos:line="52" pos:column="19"/></name><index pos:line="52" pos:column="19">[<expr><name pos:line="52" pos:column="20">rpos<pos:position pos:line="52" pos:column="24"/></name></expr>]<pos:position pos:line="52" pos:column="25"/></index></name> <operator pos:line="52" pos:column="26">&amp;&amp;<pos:position pos:line="52" pos:column="36"/></operator> <operator pos:line="52" pos:column="29">(<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">escape<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">||<pos:position pos:line="52" pos:column="39"/></operator> <name><name pos:line="52" pos:column="40">str<pos:position pos:line="52" pos:column="43"/></name><index pos:line="52" pos:column="43">[<expr><name pos:line="52" pos:column="44">rpos<pos:position pos:line="52" pos:column="48"/></name></expr>]<pos:position pos:line="52" pos:column="49"/></index></name> <operator pos:line="52" pos:column="50">!=<pos:position pos:line="52" pos:column="52"/></operator> <literal type="char" pos:line="52" pos:column="53">' '<pos:position pos:line="52" pos:column="56"/></literal><operator pos:line="52" pos:column="56">)<pos:position pos:line="52" pos:column="57"/></operator></expr>)<pos:position pos:line="52" pos:column="58"/></condition> <block pos:line="52" pos:column="59">{
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">escape<pos:position pos:line="53" pos:column="27"/></name></expr>)<pos:position pos:line="53" pos:column="28"/></condition><then pos:line="53" pos:column="28"> <block pos:line="53" pos:column="29">{
			<switch pos:line="54" pos:column="25">switch <condition pos:line="54" pos:column="32">(<expr><name><name pos:line="54" pos:column="33">str<pos:position pos:line="54" pos:column="36"/></name><index pos:line="54" pos:column="36">[<expr><name pos:line="54" pos:column="37">rpos<pos:position pos:line="54" pos:column="41"/></name></expr>]<pos:position pos:line="54" pos:column="42"/></index></name></expr>)<pos:position pos:line="54" pos:column="43"/></condition> <block pos:line="54" pos:column="44">{
			<case pos:line="55" pos:column="25">case <expr><literal type="char" pos:line="55" pos:column="30">' '<pos:position pos:line="55" pos:column="33"/></literal></expr>:<pos:position pos:line="55" pos:column="34"/></case>
			<case pos:line="56" pos:column="25">case <expr><literal type="char" pos:line="56" pos:column="30">'%'<pos:position pos:line="56" pos:column="33"/></literal></expr>:<pos:position pos:line="56" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="57" pos:column="33">strbuf_addch<pos:position pos:line="57" pos:column="45"/></name><argument_list pos:line="57" pos:column="45">(<argument><expr><operator pos:line="57" pos:column="46">&amp;<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="47">ret<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="52">str<pos:position pos:line="57" pos:column="55"/></name><index pos:line="57" pos:column="55">[<expr><name pos:line="57" pos:column="56">rpos<pos:position pos:line="57" pos:column="60"/></name></expr>]<pos:position pos:line="57" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="63"/></expr_stmt>
				<break pos:line="58" pos:column="33">break;<pos:position pos:line="58" pos:column="39"/></break>
			<case pos:line="59" pos:column="25">case <expr><literal type="char" pos:line="59" pos:column="30">'s'<pos:position pos:line="59" pos:column="33"/></literal></expr>:<pos:position pos:line="59" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="60" pos:column="33">strbuf_addstr<pos:position pos:line="60" pos:column="46"/></name><argument_list pos:line="60" pos:column="46">(<argument><expr><operator pos:line="60" pos:column="47">&amp;<pos:position pos:line="60" pos:column="52"/></operator><name pos:line="60" pos:column="48">ret<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">service_noprefix<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="71"/></expr_stmt>
				<break pos:line="61" pos:column="33">break;<pos:position pos:line="61" pos:column="39"/></break>
			<case pos:line="62" pos:column="25">case <expr><literal type="char" pos:line="62" pos:column="30">'S'<pos:position pos:line="62" pos:column="33"/></literal></expr>:<pos:position pos:line="62" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="63" pos:column="33">strbuf_addstr<pos:position pos:line="63" pos:column="46"/></name><argument_list pos:line="63" pos:column="46">(<argument><expr><operator pos:line="63" pos:column="47">&amp;<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="48">ret<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">service<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt>
				<break pos:line="64" pos:column="33">break;<pos:position pos:line="64" pos:column="39"/></break>
			}<pos:position pos:line="65" pos:column="26"/></block></switch>
			<expr_stmt><expr><name pos:line="66" pos:column="25">escape<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">=<pos:position pos:line="66" pos:column="33"/></operator> <literal type="number" pos:line="66" pos:column="34">0<pos:position pos:line="66" pos:column="35"/></literal></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="67" pos:column="18"/></block></then> <else pos:line="67" pos:column="19">else
			<block type="pseudo"><switch pos:line="68" pos:column="25">switch <condition pos:line="68" pos:column="32">(<expr><name><name pos:line="68" pos:column="33">str<pos:position pos:line="68" pos:column="36"/></name><index pos:line="68" pos:column="36">[<expr><name pos:line="68" pos:column="37">rpos<pos:position pos:line="68" pos:column="41"/></name></expr>]<pos:position pos:line="68" pos:column="42"/></index></name></expr>)<pos:position pos:line="68" pos:column="43"/></condition> <block pos:line="68" pos:column="44">{
			<case pos:line="69" pos:column="25">case <expr><literal type="char" pos:line="69" pos:column="30">'%'<pos:position pos:line="69" pos:column="33"/></literal></expr>:<pos:position pos:line="69" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="70" pos:column="33">escape<pos:position pos:line="70" pos:column="39"/></name> <operator pos:line="70" pos:column="40">=<pos:position pos:line="70" pos:column="41"/></operator> <literal type="number" pos:line="70" pos:column="42">1<pos:position pos:line="70" pos:column="43"/></literal></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt>
				<break pos:line="71" pos:column="33">break;<pos:position pos:line="71" pos:column="39"/></break>
			<default pos:line="72" pos:column="25">default:<pos:position pos:line="72" pos:column="33"/></default>
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">strbuf_addch<pos:position pos:line="73" pos:column="45"/></name><argument_list pos:line="73" pos:column="45">(<argument><expr><operator pos:line="73" pos:column="46">&amp;<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="47">ret<pos:position pos:line="73" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="52">str<pos:position pos:line="73" pos:column="55"/></name><index pos:line="73" pos:column="55">[<expr><name pos:line="73" pos:column="56">rpos<pos:position pos:line="73" pos:column="60"/></name></expr>]<pos:position pos:line="73" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="63"/></expr_stmt>
				<break pos:line="74" pos:column="33">break;<pos:position pos:line="74" pos:column="39"/></break>
			}<pos:position pos:line="75" pos:column="26"/></block></switch></block></else></if>
		<expr_stmt><expr><name pos:line="76" pos:column="17">rpos<pos:position pos:line="76" pos:column="21"/></name><operator pos:line="76" pos:column="21">++<pos:position pos:line="76" pos:column="23"/></operator></expr>;<pos:position pos:line="76" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="77" pos:column="10"/></block></while>
	<switch pos:line="78" pos:column="9">switch <condition pos:line="78" pos:column="16">(<expr><name pos:line="78" pos:column="17">special<pos:position pos:line="78" pos:column="24"/></name></expr>)<pos:position pos:line="78" pos:column="25"/></condition> <block pos:line="78" pos:column="26">{
	<case pos:line="79" pos:column="9">case <expr><literal type="char" pos:line="79" pos:column="14">'G'<pos:position pos:line="79" pos:column="17"/></literal></expr>:<pos:position pos:line="79" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="80" pos:column="17">git_req<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <call><name pos:line="80" pos:column="27">strbuf_detach<pos:position pos:line="80" pos:column="40"/></name><argument_list pos:line="80" pos:column="40">(<argument><expr><operator pos:line="80" pos:column="41">&amp;<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="42">ret<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="47">NULL<pos:position pos:line="80" pos:column="51"/></name></expr></argument>)<pos:position pos:line="80" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="53"/></expr_stmt>
		<return pos:line="81" pos:column="17">return <expr><name pos:line="81" pos:column="24">NULL<pos:position pos:line="81" pos:column="28"/></name></expr>;<pos:position pos:line="81" pos:column="29"/></return>
	<case pos:line="82" pos:column="9">case <expr><literal type="char" pos:line="82" pos:column="14">'V'<pos:position pos:line="82" pos:column="17"/></literal></expr>:<pos:position pos:line="82" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="83" pos:column="17">git_req_vhost<pos:position pos:line="83" pos:column="30"/></name> <operator pos:line="83" pos:column="31">=<pos:position pos:line="83" pos:column="32"/></operator> <call><name pos:line="83" pos:column="33">strbuf_detach<pos:position pos:line="83" pos:column="46"/></name><argument_list pos:line="83" pos:column="46">(<argument><expr><operator pos:line="83" pos:column="47">&amp;<pos:position pos:line="83" pos:column="52"/></operator><name pos:line="83" pos:column="48">ret<pos:position pos:line="83" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="53">NULL<pos:position pos:line="83" pos:column="57"/></name></expr></argument>)<pos:position pos:line="83" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="59"/></expr_stmt>
		<return pos:line="84" pos:column="17">return <expr><name pos:line="84" pos:column="24">NULL<pos:position pos:line="84" pos:column="28"/></name></expr>;<pos:position pos:line="84" pos:column="29"/></return>
	<default pos:line="85" pos:column="9">default:<pos:position pos:line="85" pos:column="17"/></default>
		<return pos:line="86" pos:column="17">return <expr><call><name pos:line="86" pos:column="24">strbuf_detach<pos:position pos:line="86" pos:column="37"/></name><argument_list pos:line="86" pos:column="37">(<argument><expr><operator pos:line="86" pos:column="38">&amp;<pos:position pos:line="86" pos:column="43"/></operator><name pos:line="86" pos:column="39">ret<pos:position pos:line="86" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="44">NULL<pos:position pos:line="86" pos:column="48"/></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="50"/></return>
	}<pos:position pos:line="87" pos:column="10"/></block></switch>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

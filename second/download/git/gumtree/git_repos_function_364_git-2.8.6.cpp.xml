<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_364_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_write_locked_index<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">index_state<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">istate<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="62">struct<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">lock_file<pos:position pos:line="1" pos:column="78"/></name></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">lock<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">unsigned<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">flags<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">do_write_index<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">istate<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="42">get_lock_file_fd<pos:position pos:line="4" pos:column="58"/></name><argument_list pos:line="4" pos:column="58">(<argument><expr><name pos:line="4" pos:column="59">lock<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="66">0<pos:position pos:line="4" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">ret<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">flags<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">COMMIT_LOCK<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">|<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="40">CLOSE_LOCK<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator> <operator pos:line="7" pos:column="53">!=<pos:position pos:line="7" pos:column="55"/></operator>
	       <operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">COMMIT_LOCK<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">|<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">CLOSE_LOCK<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">flags<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&amp;<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="21">COMMIT_LOCK<pos:position pos:line="9" pos:column="32"/></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">commit_locked_index<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">lock<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></return></block></then>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><name pos:line="11" pos:column="18">flags<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="26">CLOSE_LOCK<pos:position pos:line="11" pos:column="36"/></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">close_lock_file<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">lock<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></return></block></then></if></elseif>
	<else pos:line="13" pos:column="9">else
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">ret<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></return></block></else></if>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

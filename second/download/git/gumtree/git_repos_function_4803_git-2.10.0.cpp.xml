<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4803_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_out_results<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">apply_state<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">state<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">struct<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">patch<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">list<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">phase<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">errs<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">patch<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">l<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">string_list<pos:position pos:line="6" pos:column="27"/></name></name></type> <name pos:line="6" pos:column="28">cpath<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">STRING_LIST_INIT_DUP<pos:position pos:line="6" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">phase<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr>;<pos:position pos:line="8" pos:column="24"/></init> <condition><expr><name pos:line="8" pos:column="25">phase<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&lt;<pos:position pos:line="8" pos:column="35"/></operator> <literal type="number" pos:line="8" pos:column="33">2<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></condition> <incr><expr><name pos:line="8" pos:column="36">phase<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">++<pos:position pos:line="8" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="44"/></control> <block pos:line="8" pos:column="45">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">l<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">list<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><name pos:line="10" pos:column="24">l<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition> <block pos:line="10" pos:column="27">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name><name pos:line="11" pos:column="29">l<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">rejected<pos:position pos:line="11" pos:column="40"/></name></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="33">errs<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">=<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="40">1<pos:position pos:line="12" pos:column="41"/></literal></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt></block></then>
			<else pos:line="13" pos:column="25">else <block pos:line="13" pos:column="30">{
				<expr_stmt><expr><call><name pos:line="14" pos:column="33">write_out_one_result<pos:position pos:line="14" pos:column="53"/></name><argument_list pos:line="14" pos:column="53">(<argument><expr><name pos:line="14" pos:column="54">state<pos:position pos:line="14" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="61">l<pos:position pos:line="14" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="64">phase<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>
				<if pos:line="15" pos:column="33">if <condition pos:line="15" pos:column="36">(<expr><name pos:line="15" pos:column="37">phase<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">==<pos:position pos:line="15" pos:column="45"/></operator> <literal type="number" pos:line="15" pos:column="46">1<pos:position pos:line="15" pos:column="47"/></literal></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48"> <block pos:line="15" pos:column="49">{
					<if pos:line="16" pos:column="41">if <condition pos:line="16" pos:column="44">(<expr><call><name pos:line="16" pos:column="45">write_out_one_reject<pos:position pos:line="16" pos:column="65"/></name><argument_list pos:line="16" pos:column="65">(<argument><expr><name pos:line="16" pos:column="66">state<pos:position pos:line="16" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="73">l<pos:position pos:line="16" pos:column="74"/></name></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="76"/></condition><then pos:line="16" pos:column="76">
						<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="49">errs<pos:position pos:line="17" pos:column="53"/></name> <operator pos:line="17" pos:column="54">=<pos:position pos:line="17" pos:column="55"/></operator> <literal type="number" pos:line="17" pos:column="56">1<pos:position pos:line="17" pos:column="57"/></literal></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt></block></then></if>
					<if pos:line="18" pos:column="41">if <condition pos:line="18" pos:column="44">(<expr><name><name pos:line="18" pos:column="45">l<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">conflicted_threeway<pos:position pos:line="18" pos:column="67"/></name></name></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68"> <block pos:line="18" pos:column="69">{
						<expr_stmt><expr><call><name pos:line="19" pos:column="49">string_list_append<pos:position pos:line="19" pos:column="67"/></name><argument_list pos:line="19" pos:column="67">(<argument><expr><operator pos:line="19" pos:column="68">&amp;<pos:position pos:line="19" pos:column="73"/></operator><name pos:line="19" pos:column="69">cpath<pos:position pos:line="19" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="76">l<pos:position pos:line="19" pos:column="77"/></name><operator pos:line="19" pos:column="77">-&gt;<pos:position pos:line="19" pos:column="82"/></operator><name pos:line="19" pos:column="79">new_name<pos:position pos:line="19" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="89"/></expr_stmt>
						<expr_stmt><expr><name pos:line="20" pos:column="49">errs<pos:position pos:line="20" pos:column="53"/></name> <operator pos:line="20" pos:column="54">=<pos:position pos:line="20" pos:column="55"/></operator> <literal type="number" pos:line="20" pos:column="56">1<pos:position pos:line="20" pos:column="57"/></literal></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
					}<pos:position pos:line="21" pos:column="42"/></block></then></if>
				}<pos:position pos:line="22" pos:column="34"/></block></then></if>
			}<pos:position pos:line="23" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name pos:line="24" pos:column="25">l<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="29">l<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">next<pos:position pos:line="24" pos:column="36"/></name></name></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></while>
	}<pos:position pos:line="26" pos:column="10"/></block></for>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">cpath<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">nr<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
		<decl_stmt><decl><type><name><name pos:line="29" pos:column="17">struct<pos:position pos:line="29" pos:column="23"/></name> <name pos:line="29" pos:column="24">string_list_item<pos:position pos:line="29" pos:column="40"/></name></name> <modifier pos:line="29" pos:column="41">*<pos:position pos:line="29" pos:column="42"/></modifier></type><name pos:line="29" pos:column="42">item<pos:position pos:line="29" pos:column="46"/></name></decl>;<pos:position pos:line="29" pos:column="47"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="31" pos:column="17">string_list_sort<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">cpath<pos:position pos:line="31" pos:column="40"/></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
		<macro><name pos:line="32" pos:column="17">for_each_string_list_item<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument pos:line="32" pos:column="43">item<pos:position pos:line="32" pos:column="47"/></argument>, <argument pos:line="32" pos:column="49">&amp;cpath<pos:position pos:line="32" pos:column="55"/></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></macro>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">fprintf<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">stderr<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="41">"U %s\n"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="51">item<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">string<pos:position pos:line="33" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">string_list_clear<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="36">cpath<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="43">0<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="36" pos:column="17">rerere<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">errs<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

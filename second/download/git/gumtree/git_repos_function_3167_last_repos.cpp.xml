<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3167_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">convert_to_git<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">index_state<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">istate<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">path<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">src<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">size_t<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">len<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                   <parameter><decl><type><name><name pos:line="3" pos:column="20">struct<pos:position pos:line="3" pos:column="26"/></name> <name pos:line="3" pos:column="27">strbuf<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">dst<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="40">enum<pos:position pos:line="3" pos:column="44"/></name> <name pos:line="3" pos:column="45">safe_crlf<pos:position pos:line="3" pos:column="54"/></name></name></type> <name pos:line="3" pos:column="55">checksafe<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ret<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">conv_attrs<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">ca<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">convert_attrs<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">ca<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">path<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">|=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">apply_filter<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">path<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">src<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">len<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="45">-<pos:position pos:line="10" pos:column="46"/></operator><literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">dst<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="54">ca<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">.<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">drv<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">CAP_CLEAN<pos:position pos:line="10" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="73">NULL<pos:position pos:line="10" pos:column="77"/></name></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">ret<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&amp;&amp;<pos:position pos:line="11" pos:column="28"/></operator> <name><name pos:line="11" pos:column="21">ca<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">drv<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">&amp;&amp;<pos:position pos:line="11" pos:column="38"/></operator> <name><name pos:line="11" pos:column="31">ca<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">drv<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">required<pos:position pos:line="11" pos:column="47"/></name></name></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"%s: clean filter '%s' failed"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">path<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="59">ca<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">.<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="62">drv<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">-&gt;<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="67">name<pos:position pos:line="12" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ret<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="20">dst<pos:position pos:line="14" pos:column="23"/></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24"> <block pos:line="14" pos:column="25">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">src<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="23">dst<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">buf<pos:position pos:line="15" pos:column="31"/></name></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">len<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">dst<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">len<pos:position pos:line="16" pos:column="31"/></name></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">checksafe<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">!=<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">SAFE_CRLF_KEEP_CRLF<pos:position pos:line="18" pos:column="45"/></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46"> <block pos:line="18" pos:column="47">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">ret<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">|=<pos:position pos:line="19" pos:column="23"/></operator> <call><name pos:line="19" pos:column="24">crlf_to_git<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">istate<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">path<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">src<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">len<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="60">dst<pos:position pos:line="19" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="65">ca<pos:position pos:line="19" pos:column="67"/></name><operator pos:line="19" pos:column="67">.<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="68">crlf_action<pos:position pos:line="19" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="81">checksafe<pos:position pos:line="19" pos:column="90"/></name></expr></argument>)<pos:position pos:line="19" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="92"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">ret<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">&amp;&amp;<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="28">dst<pos:position pos:line="20" pos:column="31"/></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <block pos:line="20" pos:column="33">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">src<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <name><name pos:line="21" pos:column="31">dst<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">buf<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">len<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="31">dst<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">len<pos:position pos:line="22" pos:column="39"/></name></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>
	<return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">ret<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">|<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">ident_to_git<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">path<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">src<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">len<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">dst<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="56">ca<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">.<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">ident<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

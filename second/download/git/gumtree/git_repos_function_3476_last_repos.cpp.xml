<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3476_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ref_update_reject_duplicates<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">string_list<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">refnames<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">strbuf<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">err<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">i<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">n<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">refnames<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">nr<pos:position pos:line="4" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name></expr></argument>)<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="25">n<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></condition> <incr><expr><name pos:line="8" pos:column="28">i<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">++<pos:position pos:line="8" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="32"/></control> <block pos:line="8" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">cmp<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><call><name pos:line="9" pos:column="27">strcmp<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">refnames<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">items<pos:position pos:line="9" pos:column="49"/></name><index pos:line="9" pos:column="49">[<expr><name pos:line="9" pos:column="50">i<pos:position pos:line="9" pos:column="51"/></name> <operator pos:line="9" pos:column="52">-<pos:position pos:line="9" pos:column="53"/></operator> <literal type="number" pos:line="9" pos:column="54">1<pos:position pos:line="9" pos:column="55"/></literal></expr>]<pos:position pos:line="9" pos:column="56"/></index></name><operator pos:line="9" pos:column="56">.<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">string<pos:position pos:line="9" pos:column="63"/></name></expr></argument>,
				 <argument><expr><name><name pos:line="10" pos:column="34">refnames<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">items<pos:position pos:line="10" pos:column="49"/></name><index pos:line="10" pos:column="49">[<expr><name pos:line="10" pos:column="50">i<pos:position pos:line="10" pos:column="51"/></name></expr>]<pos:position pos:line="10" pos:column="52"/></index></name><operator pos:line="10" pos:column="52">.<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="53">string<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="61"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">cmp<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">strbuf_addf<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">err<pos:position pos:line="13" pos:column="40"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="14" pos:column="37">"multiple updates for ref '%s' not allowed."<pos:position pos:line="14" pos:column="81"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="15" pos:column="37">refnames<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">items<pos:position pos:line="15" pos:column="52"/></name><index pos:line="15" pos:column="52">[<expr><name pos:line="15" pos:column="53">i<pos:position pos:line="15" pos:column="54"/></name></expr>]<pos:position pos:line="15" pos:column="55"/></index></name><operator pos:line="15" pos:column="55">.<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="56">string<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
			<return pos:line="16" pos:column="25">return <expr><literal type="number" pos:line="16" pos:column="32">1<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></return>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><name pos:line="17" pos:column="28">cmp<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">&gt;<pos:position pos:line="17" pos:column="36"/></operator> <literal type="number" pos:line="17" pos:column="34">0<pos:position pos:line="17" pos:column="35"/></literal></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">die<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"BUG: ref_update_reject_duplicates() received unsorted list"<pos:position pos:line="18" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="91"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

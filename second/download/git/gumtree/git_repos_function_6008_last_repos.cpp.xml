<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6008_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">update_clone_task_finished<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">result<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
				      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">strbuf<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">err<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="3" pos:column="39">void<pos:position pos:line="3" pos:column="43"/></name> <modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">suc_cb<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="4" pos:column="39">void<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">idx_task_cb<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="57"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">cache_entry<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">ce<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">submodule_update_clone<pos:position pos:line="7" pos:column="38"/></name></name> <modifier pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></modifier></type><name pos:line="7" pos:column="40">suc<pos:position pos:line="7" pos:column="43"/></name> <init pos:line="7" pos:column="44">= <expr><name pos:line="7" pos:column="46">suc_cb<pos:position pos:line="7" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">idxP<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">idx_task_cb<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">idx<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><operator pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">idxP<pos:position pos:line="10" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">free<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">idxP<pos:position pos:line="11" pos:column="18"/></name></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">result<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">idx<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&lt;<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="19">suc<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">list<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">nr<pos:position pos:line="16" pos:column="31"/></name></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">ce<pos:position pos:line="17" pos:column="19"/></name>  <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name><name pos:line="17" pos:column="23">suc<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">list<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">.<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">entries<pos:position pos:line="17" pos:column="40"/></name><index pos:line="17" pos:column="40">[<expr><name pos:line="17" pos:column="41">idx<pos:position pos:line="17" pos:column="44"/></name></expr>]<pos:position pos:line="17" pos:column="45"/></index></name></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">strbuf_addf<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">err<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="34">_<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><literal type="string" pos:line="18" pos:column="36">"Failed to clone '%s'. Retry scheduled"<pos:position pos:line="18" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="19" pos:column="29">ce<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">name<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">strbuf_addch<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">err<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="35">'\n'<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">ALLOC_GROW<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">suc<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">failed_clones<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>,
			   <argument><expr><name><name pos:line="22" pos:column="28">suc<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">failed_clones_nr<pos:position pos:line="22" pos:column="49"/></name></name> <operator pos:line="22" pos:column="50">+<pos:position pos:line="22" pos:column="51"/></operator> <literal type="number" pos:line="22" pos:column="52">1<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>,
			   <argument><expr><name><name pos:line="23" pos:column="28">suc<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">failed_clones_alloc<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">suc<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">failed_clones<pos:position pos:line="24" pos:column="35"/></name><index pos:line="24" pos:column="35">[<expr><name><name pos:line="24" pos:column="36">suc<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">failed_clones_nr<pos:position pos:line="24" pos:column="57"/></name></name><operator pos:line="24" pos:column="57">++<pos:position pos:line="24" pos:column="59"/></operator></expr>]<pos:position pos:line="24" pos:column="60"/></index></name> <operator pos:line="24" pos:column="61">=<pos:position pos:line="24" pos:column="62"/></operator> <name pos:line="24" pos:column="63">ce<pos:position pos:line="24" pos:column="65"/></name></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">idx<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">-=<pos:position pos:line="27" pos:column="23"/></operator> <name><name pos:line="27" pos:column="24">suc<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">list<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">nr<pos:position pos:line="27" pos:column="36"/></name></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">ce<pos:position pos:line="28" pos:column="19"/></name>  <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name><name pos:line="28" pos:column="23">suc<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">failed_clones<pos:position pos:line="28" pos:column="41"/></name><index pos:line="28" pos:column="41">[<expr><name pos:line="28" pos:column="42">idx<pos:position pos:line="28" pos:column="45"/></name></expr>]<pos:position pos:line="28" pos:column="46"/></index></name></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">strbuf_addf<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">err<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="34">_<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><literal type="string" pos:line="29" pos:column="36">"Failed to clone '%s' a second time, aborting"<pos:position pos:line="29" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="83"/></argument_list></call></expr></argument>,
			    <argument><expr><name><name pos:line="30" pos:column="29">ce<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">name<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">strbuf_addch<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">err<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="35">'\n'<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">suc<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">quickstop<pos:position pos:line="32" pos:column="31"/></name></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <literal type="number" pos:line="32" pos:column="34">1<pos:position pos:line="32" pos:column="35"/></literal></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">1<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>

	<return pos:line="36" pos:column="9">return <expr><literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

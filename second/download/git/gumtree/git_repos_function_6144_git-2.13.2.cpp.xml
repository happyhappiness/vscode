<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6144_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_fetch_head<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">commit_list<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">remotes<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">strbuf<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">merge_names<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">filename<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">pos<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">npos<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">fetch_head_file<pos:position pos:line="5" pos:column="38"/></name> <init pos:line="5" pos:column="39">= <expr><name pos:line="5" pos:column="41">STRBUF_INIT<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">merge_names<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">merge_names<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <operator pos:line="8" pos:column="31">&amp;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="32">fetch_head_file<pos:position pos:line="8" pos:column="47"/></name></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">filename<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">git_path_fetch_head<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">fd<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">open<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">filename<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">O_RDONLY<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">fd<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&lt;<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">die_errno<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><call><name pos:line="13" pos:column="27">_<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"could not open '%s' for reading"<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="65">filename<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">strbuf_read<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">merge_names<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">fd<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="42">0<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call> <operator pos:line="15" pos:column="45">&lt;<pos:position pos:line="15" pos:column="49"/></operator> <literal type="number" pos:line="15" pos:column="47">0<pos:position pos:line="15" pos:column="48"/></literal></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die_errno<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><call><name pos:line="16" pos:column="27">_<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><literal type="string" pos:line="16" pos:column="29">"could not read '%s'"<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">filename<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">close<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">fd<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die_errno<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><call><name pos:line="18" pos:column="27">_<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"could not close '%s'"<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">filename<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt></block></then></if>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">pos<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></init> <condition><expr><name pos:line="20" pos:column="23">pos<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&lt;<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="29">merge_names<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">len<pos:position pos:line="20" pos:column="45"/></name></name></expr>;<pos:position pos:line="20" pos:column="46"/></condition> <incr><expr><name pos:line="20" pos:column="47">pos<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">=<pos:position pos:line="20" pos:column="52"/></operator> <name pos:line="20" pos:column="53">npos<pos:position pos:line="20" pos:column="57"/></name></expr></incr>)<pos:position pos:line="20" pos:column="58"/></control> <block pos:line="20" pos:column="59">{
		<decl_stmt><decl><type><name><name pos:line="21" pos:column="17">struct<pos:position pos:line="21" pos:column="23"/></name> <name pos:line="21" pos:column="24">object_id<pos:position pos:line="21" pos:column="33"/></name></name></type> <name pos:line="21" pos:column="34">oid<pos:position pos:line="21" pos:column="37"/></name></decl>;<pos:position pos:line="21" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <modifier pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></modifier></type><name pos:line="22" pos:column="23">ptr<pos:position pos:line="22" pos:column="26"/></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">commit<pos:position pos:line="23" pos:column="30"/></name></name> <modifier pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></modifier></type><name pos:line="23" pos:column="32">commit<pos:position pos:line="23" pos:column="38"/></name></decl>;<pos:position pos:line="23" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">ptr<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">strchr<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">merge_names<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">buf<pos:position pos:line="25" pos:column="46"/></name></name> <operator pos:line="25" pos:column="47">+<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">pos<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="54">'\n'<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">ptr<pos:position pos:line="26" pos:column="24"/></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">npos<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">ptr<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">-<pos:position pos:line="27" pos:column="37"/></operator> <name><name pos:line="27" pos:column="38">merge_names<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">buf<pos:position pos:line="27" pos:column="54"/></name></name> <operator pos:line="27" pos:column="55">+<pos:position pos:line="27" pos:column="56"/></operator> <literal type="number" pos:line="27" pos:column="57">1<pos:position pos:line="27" pos:column="58"/></literal></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt></block></then>
		<else pos:line="28" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">npos<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <name><name pos:line="29" pos:column="32">merge_names<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">len<pos:position pos:line="29" pos:column="48"/></name></name></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt></block></else></if>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">npos<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">-<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">pos<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">&lt;<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="34">GIT_SHA1_HEXSZ<pos:position pos:line="31" pos:column="48"/></name> <operator pos:line="31" pos:column="49">+<pos:position pos:line="31" pos:column="50"/></operator> <literal type="number" pos:line="31" pos:column="51">2<pos:position pos:line="31" pos:column="52"/></literal> <operator pos:line="31" pos:column="53">||<pos:position pos:line="31" pos:column="55"/></operator>
		    <call><name pos:line="32" pos:column="21">get_oid_hex<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name><name pos:line="32" pos:column="33">merge_names<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">buf<pos:position pos:line="32" pos:column="49"/></name></name> <operator pos:line="32" pos:column="50">+<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="52">pos<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="57">&amp;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="58">oid<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">commit<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">NULL<pos:position pos:line="33" pos:column="38"/></name></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt></block></then> <comment type="block" pos:line="33" pos:column="40">/* bad */</comment>
		<elseif pos:line="34" pos:column="17">else <if pos:line="34" pos:column="22">if <condition pos:line="34" pos:column="25">(<expr><call><name pos:line="34" pos:column="26">memcmp<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name><name pos:line="34" pos:column="33">merge_names<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">buf<pos:position pos:line="34" pos:column="49"/></name></name> <operator pos:line="34" pos:column="50">+<pos:position pos:line="34" pos:column="51"/></operator> <name pos:line="34" pos:column="52">pos<pos:position pos:line="34" pos:column="55"/></name> <operator pos:line="34" pos:column="56">+<pos:position pos:line="34" pos:column="57"/></operator> <name pos:line="34" pos:column="58">GIT_SHA1_HEXSZ<pos:position pos:line="34" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="74">"\t\t"<pos:position pos:line="34" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="82">2<pos:position pos:line="34" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="85"/></condition><then pos:line="34" pos:column="85">
			<block type="pseudo"><continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue></block></then></if></elseif> <comment type="block" pos:line="35" pos:column="35">/* not-for-merge */</comment>
		<else pos:line="36" pos:column="17">else <block pos:line="36" pos:column="22">{
			<decl_stmt><decl><type><name pos:line="37" pos:column="25">char<pos:position pos:line="37" pos:column="29"/></name></type> <name pos:line="37" pos:column="30">saved<pos:position pos:line="37" pos:column="35"/></name> <init pos:line="37" pos:column="36">= <expr><name><name pos:line="37" pos:column="38">merge_names<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">buf<pos:position pos:line="37" pos:column="54"/></name><index pos:line="37" pos:column="54">[<expr><name pos:line="37" pos:column="55">pos<pos:position pos:line="37" pos:column="58"/></name> <operator pos:line="37" pos:column="59">+<pos:position pos:line="37" pos:column="60"/></operator> <name pos:line="37" pos:column="61">GIT_SHA1_HEXSZ<pos:position pos:line="37" pos:column="75"/></name></expr>]<pos:position pos:line="37" pos:column="76"/></index></name></expr></init></decl>;<pos:position pos:line="37" pos:column="77"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="38" pos:column="25">merge_names<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">buf<pos:position pos:line="38" pos:column="41"/></name><index pos:line="38" pos:column="41">[<expr><name pos:line="38" pos:column="42">pos<pos:position pos:line="38" pos:column="45"/></name> <operator pos:line="38" pos:column="46">+<pos:position pos:line="38" pos:column="47"/></operator> <name pos:line="38" pos:column="48">GIT_SHA1_HEXSZ<pos:position pos:line="38" pos:column="62"/></name></expr>]<pos:position pos:line="38" pos:column="63"/></index></name> <operator pos:line="38" pos:column="64">=<pos:position pos:line="38" pos:column="65"/></operator> <literal type="char" pos:line="38" pos:column="66">'\0'<pos:position pos:line="38" pos:column="70"/></literal></expr>;<pos:position pos:line="38" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name pos:line="39" pos:column="25">commit<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <call><name pos:line="39" pos:column="34">get_merge_parent<pos:position pos:line="39" pos:column="50"/></name><argument_list pos:line="39" pos:column="50">(<argument><expr><name><name pos:line="39" pos:column="51">merge_names<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">-&gt;<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="64">buf<pos:position pos:line="39" pos:column="67"/></name></name> <operator pos:line="39" pos:column="68">+<pos:position pos:line="39" pos:column="69"/></operator> <name pos:line="39" pos:column="70">pos<pos:position pos:line="39" pos:column="73"/></name></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">merge_names<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">buf<pos:position pos:line="40" pos:column="41"/></name><index pos:line="40" pos:column="41">[<expr><name pos:line="40" pos:column="42">pos<pos:position pos:line="40" pos:column="45"/></name> <operator pos:line="40" pos:column="46">+<pos:position pos:line="40" pos:column="47"/></operator> <name pos:line="40" pos:column="48">GIT_SHA1_HEXSZ<pos:position pos:line="40" pos:column="62"/></name></expr>]<pos:position pos:line="40" pos:column="63"/></index></name> <operator pos:line="40" pos:column="64">=<pos:position pos:line="40" pos:column="65"/></operator> <name pos:line="40" pos:column="66">saved<pos:position pos:line="40" pos:column="71"/></name></expr>;<pos:position pos:line="40" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></else></if>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">commit<pos:position pos:line="42" pos:column="28"/></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29"> <block pos:line="42" pos:column="30">{
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">ptr<pos:position pos:line="43" pos:column="32"/></name></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="33">*<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="34">ptr<pos:position pos:line="44" pos:column="37"/></name> <operator pos:line="44" pos:column="38">=<pos:position pos:line="44" pos:column="39"/></operator> <literal type="char" pos:line="44" pos:column="40">'\0'<pos:position pos:line="44" pos:column="44"/></literal></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">die<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><call><name pos:line="45" pos:column="29">_<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><literal type="string" pos:line="45" pos:column="31">"not something we can merge in %s: %s"<pos:position pos:line="45" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="46" pos:column="29">filename<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="39">merge_names<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">-&gt;<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="52">buf<pos:position pos:line="46" pos:column="55"/></name></name> <operator pos:line="46" pos:column="56">+<pos:position pos:line="46" pos:column="57"/></operator> <name pos:line="46" pos:column="58">pos<pos:position pos:line="46" pos:column="61"/></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="48" pos:column="17">remotes<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">=<pos:position pos:line="48" pos:column="26"/></operator> <operator pos:line="48" pos:column="27">&amp;<pos:position pos:line="48" pos:column="32"/></operator><call><name pos:line="48" pos:column="28">commit_list_insert<pos:position pos:line="48" pos:column="46"/></name><argument_list pos:line="48" pos:column="46">(<argument><expr><name pos:line="48" pos:column="47">commit<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">remotes<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call><operator pos:line="48" pos:column="63">-&gt;<pos:position pos:line="48" pos:column="68"/></operator><name pos:line="48" pos:column="65">next<pos:position pos:line="48" pos:column="69"/></name></expr>;<pos:position pos:line="48" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></for>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">merge_names<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">==<pos:position pos:line="51" pos:column="27"/></operator> <operator pos:line="51" pos:column="28">&amp;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="29">fetch_head_file<pos:position pos:line="51" pos:column="44"/></name></expr>)<pos:position pos:line="51" pos:column="45"/></condition><then pos:line="51" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">strbuf_release<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><operator pos:line="52" pos:column="32">&amp;<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="33">fetch_head_file<pos:position pos:line="52" pos:column="48"/></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt></block></then></if>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

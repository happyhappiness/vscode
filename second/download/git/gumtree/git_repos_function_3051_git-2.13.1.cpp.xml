<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3051_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">stream_filter<pos:position pos:line="1" pos:column="28"/></name></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">ident_filter<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">sha1<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ident_filter<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">ident<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><call><name pos:line="3" pos:column="38">xmalloc<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">(<argument><expr><sizeof pos:line="3" pos:column="46">sizeof<argument_list pos:line="3" pos:column="52">(<argument><expr><operator pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="54">ident<pos:position pos:line="3" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">xsnprintf<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name><name pos:line="5" pos:column="19">ident<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">ident<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="33">sizeof<argument_list pos:line="5" pos:column="39">(<argument><expr><name><name pos:line="5" pos:column="40">ident<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">ident<pos:position pos:line="5" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></sizeof></expr></argument>,
		  <argument><expr><literal type="string" pos:line="6" pos:column="19">": %s $"<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="29">sha1_to_hex<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">sha1<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_init<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="22">ident<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">left<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="35">0<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">ident<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">filter<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">vtbl<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">&amp;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="31">ident_vtbl<pos:position pos:line="8" pos:column="41"/></name></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">ident<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">state<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator>struct <name pos:line="10" pos:column="24">stream_filter<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">ident<pos:position pos:line="10" pos:column="45"/></name></expr>;<pos:position pos:line="10" pos:column="46"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

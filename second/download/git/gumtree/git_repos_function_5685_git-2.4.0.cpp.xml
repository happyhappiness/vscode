<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5685_git-2.4.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">NOINLINE<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">threadcache<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">AllocCache<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">nedpool<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <name pos:line="1" pos:column="53">THROWSPEC<pos:position pos:line="1" pos:column="62"/></name>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">threadcache<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">tc<pos:position pos:line="3" pos:column="24"/></name><init pos:line="3" pos:column="24">=<expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">n<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">end<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">ACQUIRE_LOCK<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><operator pos:line="5" pos:column="22">&amp;<pos:position pos:line="5" pos:column="27"/></operator><name><name pos:line="5" pos:column="23">p<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">mutex<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
	<for pos:line="6" pos:column="9">for<control pos:line="6" pos:column="12">(<init><expr><name pos:line="6" pos:column="13">n<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></init> <condition><expr><name pos:line="6" pos:column="18">n<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">THREADCACHEMAXCACHES<pos:position pos:line="6" pos:column="40"/></name> <operator pos:line="6" pos:column="41">&amp;&amp;<pos:position pos:line="6" pos:column="51"/></operator> <name><name pos:line="6" pos:column="44">p<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">caches<pos:position pos:line="6" pos:column="53"/></name><index pos:line="6" pos:column="53">[<expr><name pos:line="6" pos:column="54">n<pos:position pos:line="6" pos:column="55"/></name></expr>]<pos:position pos:line="6" pos:column="56"/></index></name></expr>;<pos:position pos:line="6" pos:column="57"/></condition> <incr><expr><name pos:line="6" pos:column="58">n<pos:position pos:line="6" pos:column="59"/></name><operator pos:line="6" pos:column="59">++<pos:position pos:line="6" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="62"/></control><block type="pseudo"><empty_stmt pos:line="6" pos:column="62">;<pos:position pos:line="6" pos:column="63"/></empty_stmt></block></for>
	<if pos:line="7" pos:column="9">if<condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">THREADCACHEMAXCACHES<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">==<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">n<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
	<block pos:line="8" pos:column="9">{	<comment type="block" pos:line="8" pos:column="17">/* List exhausted, so disable for this thread */</comment>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">RELEASE_LOCK<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name><name pos:line="9" pos:column="31">p<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">mutex<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">tc<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator><name><name pos:line="12" pos:column="12">p<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">caches<pos:position pos:line="12" pos:column="21"/></name><index pos:line="12" pos:column="21">[<expr><name pos:line="12" pos:column="22">n<pos:position pos:line="12" pos:column="23"/></name></expr>]<pos:position pos:line="12" pos:column="24"/></index></name><operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">threadcache<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">*<pos:position pos:line="12" pos:column="39"/></operator><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator> <call><name pos:line="12" pos:column="41">mspace_calloc<pos:position pos:line="12" pos:column="54"/></name><argument_list pos:line="12" pos:column="54">(<argument><expr><name><name pos:line="12" pos:column="55">p<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">m<pos:position pos:line="12" pos:column="59"/></name><index pos:line="12" pos:column="59">[<expr><literal type="number" pos:line="12" pos:column="60">0<pos:position pos:line="12" pos:column="61"/></literal></expr>]<pos:position pos:line="12" pos:column="62"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="64">1<pos:position pos:line="12" pos:column="65"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="67">sizeof<argument_list pos:line="12" pos:column="73">(<argument><expr><name pos:line="12" pos:column="74">threadcache<pos:position pos:line="12" pos:column="85"/></name></expr></argument>)<pos:position pos:line="12" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="88"/></expr_stmt>
	<if pos:line="13" pos:column="9">if<condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">!<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">tc<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">RELEASE_LOCK<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name><name pos:line="15" pos:column="31">p<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">mutex<pos:position pos:line="15" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">FULLSANITYCHECKS<pos:position pos:line="18" pos:column="24"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">tc<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">magic1<pos:position pos:line="19" pos:column="19"/></name></name><operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator><operator pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></operator><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">unsigned<pos:position pos:line="19" pos:column="30"/></name> <name pos:line="19" pos:column="31">int<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></operator><operator pos:line="19" pos:column="36">)<pos:position pos:line="19" pos:column="37"/></operator><literal type="string" pos:line="19" pos:column="37">"NEDMALC1"<pos:position pos:line="19" pos:column="47"/></literal></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">tc<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">magic2<pos:position pos:line="20" pos:column="19"/></name></name><operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator><operator pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></operator><operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">unsigned<pos:position pos:line="20" pos:column="30"/></name> <name pos:line="20" pos:column="31">int<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><operator pos:line="20" pos:column="36">)<pos:position pos:line="20" pos:column="37"/></operator><literal type="string" pos:line="20" pos:column="37">"NEDMALC2"<pos:position pos:line="20" pos:column="47"/></literal></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">tc<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">threadid<pos:position pos:line="22" pos:column="21"/></name></name><operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">long<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator><operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">size_t<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">CURRENT_THREAD<pos:position pos:line="22" pos:column="50"/></name></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
	<for pos:line="23" pos:column="9">for<control pos:line="23" pos:column="12">(<init><expr><name pos:line="23" pos:column="13">end<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></init> <condition><expr><name><name pos:line="23" pos:column="20">p<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">m<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><name pos:line="23" pos:column="25">end<pos:position pos:line="23" pos:column="28"/></name></expr>]<pos:position pos:line="23" pos:column="29"/></index></name></expr>;<pos:position pos:line="23" pos:column="30"/></condition> <incr><expr><name pos:line="23" pos:column="31">end<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">++<pos:position pos:line="23" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="37"/></control><block type="pseudo"><empty_stmt pos:line="23" pos:column="37">;<pos:position pos:line="23" pos:column="38"/></empty_stmt></block></for>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">tc<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">mymspace<pos:position pos:line="24" pos:column="21"/></name></name><operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator><name><name pos:line="24" pos:column="22">tc<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">threadid<pos:position pos:line="24" pos:column="34"/></name></name> <operator pos:line="24" pos:column="35">%<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">end<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">RELEASE_LOCK<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator><name><name pos:line="25" pos:column="23">p<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">mutex<pos:position pos:line="25" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
	<if pos:line="26" pos:column="9">if<condition pos:line="26" pos:column="11">(<expr><call><name pos:line="26" pos:column="12">TLSSET<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name><name pos:line="26" pos:column="19">p<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">mycache<pos:position pos:line="26" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="31">(<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">void<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">*<pos:position pos:line="26" pos:column="38"/></operator><operator pos:line="26" pos:column="38">)<pos:position pos:line="26" pos:column="39"/></operator><call pos:line="26" pos:column="39">(<name pos:line="26" pos:column="40">size_t<pos:position pos:line="26" pos:column="46"/></name>)<argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">n<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">+<pos:position pos:line="26" pos:column="50"/></operator><literal type="number" pos:line="26" pos:column="50">1<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="55">abort<pos:position pos:line="26" pos:column="60"/></name><argument_list pos:line="26" pos:column="60">()<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt></block></then></if>
	<return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">tc<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

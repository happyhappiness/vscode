<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4217_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">fmt_with_err<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">buf<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">n<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">fmt<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">str_error<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><literal type="number" pos:line="3" pos:column="24">256<pos:position pos:line="3" pos:column="27"/></literal></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>, <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="31">err<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">j<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">err<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <call><name pos:line="6" pos:column="15">strerror<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">errno<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">j<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr>;<pos:position pos:line="7" pos:column="24"/></init> <condition><expr><name><name pos:line="7" pos:column="25">err<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><name pos:line="7" pos:column="29">i<pos:position pos:line="7" pos:column="30"/></name></expr>]<pos:position pos:line="7" pos:column="31"/></index></name> <operator pos:line="7" pos:column="32">&amp;&amp;<pos:position pos:line="7" pos:column="42"/></operator> <name pos:line="7" pos:column="35">j<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">&lt;<pos:position pos:line="7" pos:column="41"/></operator> <sizeof pos:line="7" pos:column="39">sizeof<argument_list pos:line="7" pos:column="45">(<argument><expr><name pos:line="7" pos:column="46">str_error<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></sizeof> <operator pos:line="7" pos:column="57">-<pos:position pos:line="7" pos:column="58"/></operator> <literal type="number" pos:line="7" pos:column="59">1<pos:position pos:line="7" pos:column="60"/></literal></expr>;<pos:position pos:line="7" pos:column="61"/></condition> <incr/>)<pos:position pos:line="7" pos:column="63"/></control> <block pos:line="7" pos:column="64">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="22">str_error<pos:position pos:line="8" pos:column="31"/></name><index pos:line="8" pos:column="31">[<expr><name pos:line="8" pos:column="32">j<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">++<pos:position pos:line="8" pos:column="35"/></operator></expr>]<pos:position pos:line="8" pos:column="36"/></index></name> <operator pos:line="8" pos:column="37">=<pos:position pos:line="8" pos:column="38"/></operator> <name><name pos:line="8" pos:column="39">err<pos:position pos:line="8" pos:column="42"/></name><index pos:line="8" pos:column="42">[<expr><name pos:line="8" pos:column="43">i<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">++<pos:position pos:line="8" pos:column="46"/></operator></expr>]<pos:position pos:line="8" pos:column="47"/></index></name><operator pos:line="8" pos:column="47">)<pos:position pos:line="8" pos:column="48"/></operator> <operator pos:line="8" pos:column="49">!=<pos:position pos:line="8" pos:column="51"/></operator> <literal type="char" pos:line="8" pos:column="52">'%'<pos:position pos:line="8" pos:column="55"/></literal></expr>)<pos:position pos:line="8" pos:column="56"/></condition><then pos:line="8" pos:column="56">
			<block type="pseudo"><continue pos:line="9" pos:column="25">continue;<pos:position pos:line="9" pos:column="34"/></continue></block></then></if>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">j<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <sizeof pos:line="10" pos:column="25">sizeof<argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">str_error<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></sizeof> <operator pos:line="10" pos:column="43">-<pos:position pos:line="10" pos:column="44"/></operator> <literal type="number" pos:line="10" pos:column="45">1<pos:position pos:line="10" pos:column="46"/></literal></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47"> <block pos:line="10" pos:column="48">{
			<expr_stmt><expr><name><name pos:line="11" pos:column="25">str_error<pos:position pos:line="11" pos:column="34"/></name><index pos:line="11" pos:column="34">[<expr><name pos:line="11" pos:column="35">j<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">++<pos:position pos:line="11" pos:column="38"/></operator></expr>]<pos:position pos:line="11" pos:column="39"/></index></name> <operator pos:line="11" pos:column="40">=<pos:position pos:line="11" pos:column="41"/></operator> <literal type="char" pos:line="11" pos:column="42">'%'<pos:position pos:line="11" pos:column="45"/></literal></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></then> <else pos:line="12" pos:column="19">else <block pos:line="12" pos:column="24">{
			<comment type="block" pos:line="13" pos:column="25">/* No room to double the '%', so we overwrite it with
			 * '\0' below */</comment>
			<expr_stmt><expr><name pos:line="15" pos:column="25">j<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">--<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
			<break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break>
		}<pos:position pos:line="17" pos:column="18"/></block></else></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">str_error<pos:position pos:line="19" pos:column="18"/></name><index pos:line="19" pos:column="18">[<expr><name pos:line="19" pos:column="19">j<pos:position pos:line="19" pos:column="20"/></name></expr>]<pos:position pos:line="19" pos:column="21"/></index></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">snprintf<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">buf<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">n<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="26">"%s: %s"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">fmt<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">str_error<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">buf<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4498_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_old_data<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">stat<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">st<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">path<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">strbuf<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">buf<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<switch pos:line="3" pos:column="9">switch <condition pos:line="3" pos:column="16">(<expr><name><name pos:line="3" pos:column="17">st<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">-&gt;<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="21">st_mode<pos:position pos:line="3" pos:column="28"/></name></name> <operator pos:line="3" pos:column="29">&amp;<pos:position pos:line="3" pos:column="34"/></operator> <name pos:line="3" pos:column="31">S_IFMT<pos:position pos:line="3" pos:column="37"/></name></expr>)<pos:position pos:line="3" pos:column="38"/></condition> <block pos:line="3" pos:column="39">{
	<case pos:line="4" pos:column="9">case <expr><name pos:line="4" pos:column="14">S_IFLNK<pos:position pos:line="4" pos:column="21"/></name></expr>:<pos:position pos:line="4" pos:column="22"/></case>
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">strbuf_readlink<pos:position pos:line="5" pos:column="36"/></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">buf<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">path<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="48">st<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">-&gt;<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="52">st_size<pos:position pos:line="5" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call> <operator pos:line="5" pos:column="61">&lt;<pos:position pos:line="5" pos:column="65"/></operator> <literal type="number" pos:line="5" pos:column="63">0<pos:position pos:line="5" pos:column="64"/></literal></expr>)<pos:position pos:line="5" pos:column="65"/></condition><then pos:line="5" pos:column="65">
			<block type="pseudo"><return pos:line="6" pos:column="25">return <expr><call><name pos:line="6" pos:column="32">error<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><call><name pos:line="6" pos:column="38">_<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><literal type="string" pos:line="6" pos:column="40">"unable to read symlink %s"<pos:position pos:line="6" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="70">path<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="76"/></return></block></then></if>
		<return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return>
	<case pos:line="8" pos:column="9">case <expr><name pos:line="8" pos:column="14">S_IFREG<pos:position pos:line="8" pos:column="21"/></name></expr>:<pos:position pos:line="8" pos:column="22"/></case>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">strbuf_read_file<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">buf<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">path<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="49">st<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">st_size<pos:position pos:line="9" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call> <operator pos:line="9" pos:column="62">!=<pos:position pos:line="9" pos:column="64"/></operator> <name><name pos:line="9" pos:column="65">st<pos:position pos:line="9" pos:column="67"/></name><operator pos:line="9" pos:column="67">-&gt;<pos:position pos:line="9" pos:column="72"/></operator><name pos:line="9" pos:column="69">st_size<pos:position pos:line="9" pos:column="76"/></name></name></expr>)<pos:position pos:line="9" pos:column="77"/></condition><then pos:line="9" pos:column="77">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><call><name pos:line="10" pos:column="32">error<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><call><name pos:line="10" pos:column="38">_<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><literal type="string" pos:line="10" pos:column="40">"unable to open or read %s"<pos:position pos:line="10" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="70">path<pos:position pos:line="10" pos:column="74"/></name></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">convert_to_git<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">path<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="38">buf<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">-&gt;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="43">buf<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="48">buf<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">len<pos:position pos:line="11" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">buf<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="63">0<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return>
	<default pos:line="13" pos:column="9">default:<pos:position pos:line="13" pos:column="17"/></default>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></switch>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

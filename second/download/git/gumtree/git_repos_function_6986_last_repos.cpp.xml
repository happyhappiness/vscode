<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6986_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">match_ctx_clean<pos:position pos:line="3" pos:column="16"/></name> <parameter_list pos:line="3" pos:column="17">(<parameter><decl><type><name pos:line="3" pos:column="18">re_match_context_t<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">mctx<pos:position pos:line="3" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="43"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">st_idx<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">st_idx<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></init> <condition><expr><name pos:line="6" pos:column="20">st_idx<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&lt;<pos:position pos:line="6" pos:column="31"/></operator> <name><name pos:line="6" pos:column="29">mctx<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">nsub_tops<pos:position pos:line="6" pos:column="44"/></name></name></expr>;<pos:position pos:line="6" pos:column="45"/></condition> <incr><expr><operator pos:line="6" pos:column="46">++<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">st_idx<pos:position pos:line="6" pos:column="54"/></name></expr></incr>)<pos:position pos:line="6" pos:column="55"/></control>
    <block pos:line="7" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="8" pos:column="7">int<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">sl_idx<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">re_sub_match_top_t<pos:position pos:line="9" pos:column="25"/></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">top<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name><name pos:line="9" pos:column="33">mctx<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">sub_tops<pos:position pos:line="9" pos:column="47"/></name><index pos:line="9" pos:column="47">[<expr><name pos:line="9" pos:column="48">st_idx<pos:position pos:line="9" pos:column="54"/></name></expr>]<pos:position pos:line="9" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
      <for pos:line="10" pos:column="7">for <control pos:line="10" pos:column="11">(<init><expr><name pos:line="10" pos:column="12">sl_idx<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></init> <condition><expr><name pos:line="10" pos:column="24">sl_idx<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&lt;<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="33">top<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">nlasts<pos:position pos:line="10" pos:column="44"/></name></name></expr>;<pos:position pos:line="10" pos:column="45"/></condition> <incr><expr><operator pos:line="10" pos:column="46">++<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">sl_idx<pos:position pos:line="10" pos:column="54"/></name></expr></incr>)<pos:position pos:line="10" pos:column="55"/></control>
	<block pos:line="11" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="12" pos:column="11">re_sub_match_last_t<pos:position pos:line="12" pos:column="30"/></name> <modifier pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></modifier></type><name pos:line="12" pos:column="32">last<pos:position pos:line="12" pos:column="36"/></name> <init pos:line="12" pos:column="37">= <expr><name><name pos:line="12" pos:column="39">top<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">lasts<pos:position pos:line="12" pos:column="49"/></name><index pos:line="12" pos:column="49">[<expr><name pos:line="12" pos:column="50">sl_idx<pos:position pos:line="12" pos:column="56"/></name></expr>]<pos:position pos:line="12" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="58"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="13" pos:column="11">re_free<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name><name pos:line="13" pos:column="20">last<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">path<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">array<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="14" pos:column="11">re_free<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">last<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></for>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">re_free<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">top<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">lasts<pos:position pos:line="16" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name><name pos:line="17" pos:column="11">top<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">path<pos:position pos:line="17" pos:column="20"/></name></name></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21">
	<block pos:line="18" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="19" pos:column="11">re_free<pos:position pos:line="19" pos:column="18"/></name> <argument_list pos:line="19" pos:column="19">(<argument><expr><name><name pos:line="19" pos:column="20">top<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">path<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">array<pos:position pos:line="19" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="20" pos:column="11">re_free<pos:position pos:line="20" pos:column="18"/></name> <argument_list pos:line="20" pos:column="19">(<argument><expr><name><name pos:line="20" pos:column="20">top<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">path<pos:position pos:line="20" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">free<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">top<pos:position pos:line="22" pos:column="16"/></name></expr></argument>)<pos:position pos:line="22" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></for>

  <expr_stmt><expr><name><name pos:line="25" pos:column="3">mctx<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">nsub_tops<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">mctx<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">nbkref_ents<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">0<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

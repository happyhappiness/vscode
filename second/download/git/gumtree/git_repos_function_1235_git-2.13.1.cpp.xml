<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1235_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">skip_tree_prefix<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">apply_state<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">state<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
				    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">line<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="3" pos:column="37">int<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">llen<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">nslash<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">state<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">p_value<pos:position pos:line="8" pos:column="28"/></name></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><ternary><condition><expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">llen<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&amp;&amp;<pos:position pos:line="9" pos:column="40"/></operator> <name><name pos:line="9" pos:column="33">line<pos:position pos:line="9" pos:column="37"/></name><index pos:line="9" pos:column="37">[<expr><literal type="number" pos:line="9" pos:column="38">0<pos:position pos:line="9" pos:column="39"/></literal></expr>]<pos:position pos:line="9" pos:column="40"/></index></name> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <literal type="char" pos:line="9" pos:column="44">'/'<pos:position pos:line="9" pos:column="47"/></literal><operator pos:line="9" pos:column="47">)<pos:position pos:line="9" pos:column="48"/></operator></expr> ?<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <expr><name pos:line="9" pos:column="51">NULL<pos:position pos:line="9" pos:column="55"/></name></expr> <pos:position pos:line="9" pos:column="56"/></then><else pos:line="9" pos:column="56">: <expr><name pos:line="9" pos:column="58">line<pos:position pos:line="9" pos:column="62"/></name></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="63"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="11" pos:column="9">nslash<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name><name pos:line="11" pos:column="18">state<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">p_value<pos:position pos:line="11" pos:column="32"/></name></name></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="25">llen<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></condition> <incr><expr><name pos:line="12" pos:column="31">i<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">++<pos:position pos:line="12" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="35"/></control> <block pos:line="12" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">ch<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><name><name pos:line="13" pos:column="26">line<pos:position pos:line="13" pos:column="30"/></name><index pos:line="13" pos:column="30">[<expr><name pos:line="13" pos:column="31">i<pos:position pos:line="13" pos:column="32"/></name></expr>]<pos:position pos:line="13" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">ch<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <literal type="char" pos:line="14" pos:column="27">'/'<pos:position pos:line="14" pos:column="30"/></literal> <operator pos:line="14" pos:column="31">&amp;&amp;<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="34">--<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">nslash<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">&lt;=<pos:position pos:line="14" pos:column="48"/></operator> <literal type="number" pos:line="14" pos:column="46">0<pos:position pos:line="14" pos:column="47"/></literal></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48">
			<block type="pseudo"><return pos:line="15" pos:column="25">return <expr><ternary><condition><expr><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">i<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">==<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="38">0<pos:position pos:line="15" pos:column="39"/></literal><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator></expr> ?<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42"> <expr><name pos:line="15" pos:column="43">NULL<pos:position pos:line="15" pos:column="47"/></name></expr> <pos:position pos:line="15" pos:column="48"/></then><else pos:line="15" pos:column="48">: <expr><operator pos:line="15" pos:column="50">&amp;<pos:position pos:line="15" pos:column="55"/></operator><name><name pos:line="15" pos:column="51">line<pos:position pos:line="15" pos:column="55"/></name><index pos:line="15" pos:column="55">[<expr><name pos:line="15" pos:column="56">i<pos:position pos:line="15" pos:column="57"/></name> <operator pos:line="15" pos:column="58">+<pos:position pos:line="15" pos:column="59"/></operator> <literal type="number" pos:line="15" pos:column="60">1<pos:position pos:line="15" pos:column="61"/></literal></expr>]<pos:position pos:line="15" pos:column="62"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="63"/></return></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></for>
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2451_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_head_ref<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">submodule<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">each_ref_fn<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">fn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">void<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">cb_data<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">flag<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">submodule<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">resolve_gitlink_ref<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">submodule<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="52">"HEAD"<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="60">sha1<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call> <operator pos:line="7" pos:column="66">==<pos:position pos:line="7" pos:column="68"/></operator> <literal type="number" pos:line="7" pos:column="69">0<pos:position pos:line="7" pos:column="70"/></literal></expr>)<pos:position pos:line="7" pos:column="71"/></condition><then pos:line="7" pos:column="71">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><call><name pos:line="8" pos:column="32">fn<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><literal type="string" pos:line="8" pos:column="35">"HEAD"<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">sha1<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="49">0<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">cb_data<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></return></block></then></if>

		<return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">read_ref_full<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="string" pos:line="13" pos:column="28">"HEAD"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">sha1<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="45">&amp;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="46">flag<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><call><name pos:line="14" pos:column="24">fn<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><literal type="string" pos:line="14" pos:column="27">"HEAD"<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">sha1<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">flag<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">cb_data<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></return></block></then></if>

	<return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

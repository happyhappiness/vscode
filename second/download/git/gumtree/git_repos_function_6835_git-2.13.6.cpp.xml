<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6835_git-2.13.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">poll<pos:position pos:line="2" pos:column="5"/></name> <parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><name><name pos:line="2" pos:column="7">struct<pos:position pos:line="2" pos:column="13"/></name> <name pos:line="2" pos:column="14">pollfd<pos:position pos:line="2" pos:column="20"/></name></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">pfd<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">nfds_t<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">nfd<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">timeout<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">WIN32_NATIVE<pos:position pos:line="4" pos:column="21"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">fd_set<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">rfds<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">wfds<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">efds<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">timeval<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">tv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">timeval<pos:position pos:line="7" pos:column="17"/></name></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">ptv<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">maxfd<pos:position pos:line="8" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="14">rc<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">nfds_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>

<cpp:ifdef pos:line="11" pos:column="1"># <cpp:directive pos:line="11" pos:column="3">ifdef<pos:position pos:line="11" pos:column="8"/></cpp:directive> <name pos:line="11" pos:column="9">_SC_OPEN_MAX<pos:position pos:line="11" pos:column="21"/></name></cpp:ifdef>
  <decl_stmt><decl><specifier pos:line="12" pos:column="3">static<pos:position pos:line="12" pos:column="9"/></specifier> <type><name pos:line="12" pos:column="10">int<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">sc_open_max<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><operator pos:line="12" pos:column="28">-<pos:position pos:line="12" pos:column="29"/></operator><literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">nfd<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">&lt;<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal>
      <operator pos:line="15" pos:column="7">||<pos:position pos:line="15" pos:column="9"/></operator> <operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">nfd<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">&gt;<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="17">sc_open_max<pos:position pos:line="15" pos:column="28"/></name>
	  <operator pos:line="16" pos:column="11">&amp;&amp;<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">sc_open_max<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">!=<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="30">-<pos:position pos:line="16" pos:column="31"/></operator><literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal>
	      <operator pos:line="17" pos:column="15">||<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">nfd<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">&gt;<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">sc_open_max<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">=<pos:position pos:line="17" pos:column="38"/></operator> <call><name pos:line="17" pos:column="39">sysconf<pos:position pos:line="17" pos:column="46"/></name> <argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">_SC_OPEN_MAX<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator><operator pos:line="17" pos:column="62">)<pos:position pos:line="17" pos:column="63"/></operator><operator pos:line="17" pos:column="63">)<pos:position pos:line="17" pos:column="64"/></operator></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65">
    <block pos:line="18" pos:column="5">{
      <expr_stmt><expr><name pos:line="19" pos:column="7">errno<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">EINVAL<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
<cpp:else pos:line="22" pos:column="1"># <cpp:directive pos:line="22" pos:column="3">else<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:else> <comment type="block" pos:line="22" pos:column="8">/* !_SC_OPEN_MAX */</comment>
<cpp:ifdef pos:line="23" pos:column="1">#  <cpp:directive pos:line="23" pos:column="4">ifdef<pos:position pos:line="23" pos:column="9"/></cpp:directive> <name pos:line="23" pos:column="10">OPEN_MAX<pos:position pos:line="23" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name><name pos:line="24" pos:column="7">nfd<pos:position pos:line="24" pos:column="10"/></name> <argument_list type="generic" pos:line="24" pos:column="11">&lt; <argument><expr><literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal> <operator pos:line="24" pos:column="15">||<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">nfd<pos:position pos:line="24" pos:column="21"/></name></expr></argument> &gt;<pos:position pos:line="24" pos:column="26"/></argument_list></name> <name pos:line="24" pos:column="24">OPEN_MAX<pos:position pos:line="24" pos:column="32"/></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">errno<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">EINVAL<pos:position pos:line="26" pos:column="21"/></name></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
<cpp:endif pos:line="29" pos:column="1">#  <cpp:directive pos:line="29" pos:column="4">endif<pos:position pos:line="29" pos:column="9"/></cpp:directive></cpp:endif> <comment type="block" pos:line="29" pos:column="10">/* OPEN_MAX -- else, no check is needed */</comment>
<cpp:endif pos:line="30" pos:column="1"># <cpp:directive pos:line="30" pos:column="3">endif<pos:position pos:line="30" pos:column="8"/></cpp:directive></cpp:endif> <comment type="block" pos:line="30" pos:column="9">/* !_SC_OPEN_MAX */</comment>

  <comment type="block" pos:line="32" pos:column="3">/* EFAULT is not necessary to implement, but let's do it in the
     simplest case. */</comment>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">!<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">pfd<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">&amp;&amp;<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="15">nfd<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><name pos:line="36" pos:column="7">errno<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">EFAULT<pos:position pos:line="36" pos:column="21"/></name></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
      <return pos:line="37" pos:column="7">return <expr><operator pos:line="37" pos:column="14">-<pos:position pos:line="37" pos:column="15"/></operator><literal type="number" pos:line="37" pos:column="15">1<pos:position pos:line="37" pos:column="16"/></literal></expr>;<pos:position pos:line="37" pos:column="17"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* convert timeout number into a timeval structure */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">timeout<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">==<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20">
    <block pos:line="42" pos:column="5">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">ptv<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <operator pos:line="43" pos:column="13">&amp;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="14">tv<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">ptv<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">tv_sec<pos:position pos:line="44" pos:column="18"/></name></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">ptv<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">tv_usec<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then>
  <elseif pos:line="47" pos:column="3">else <if pos:line="47" pos:column="8">if <condition pos:line="47" pos:column="11">(<expr><name pos:line="47" pos:column="12">timeout<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">&gt;<pos:position pos:line="47" pos:column="24"/></operator> <literal type="number" pos:line="47" pos:column="22">0<pos:position pos:line="47" pos:column="23"/></literal></expr>)<pos:position pos:line="47" pos:column="24"/></condition><then pos:line="47" pos:column="24">
    <block pos:line="48" pos:column="5">{
      <expr_stmt><expr><name pos:line="49" pos:column="7">ptv<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <operator pos:line="49" pos:column="13">&amp;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="14">tv<pos:position pos:line="49" pos:column="16"/></name></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">ptv<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">tv_sec<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">timeout<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">/<pos:position pos:line="50" pos:column="30"/></operator> <literal type="number" pos:line="50" pos:column="31">1000<pos:position pos:line="50" pos:column="35"/></literal></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">ptv<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">tv_usec<pos:position pos:line="51" pos:column="19"/></name></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <operator pos:line="51" pos:column="22">(<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">timeout<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">%<pos:position pos:line="51" pos:column="32"/></operator> <literal type="number" pos:line="51" pos:column="33">1000<pos:position pos:line="51" pos:column="37"/></literal><operator pos:line="51" pos:column="37">)<pos:position pos:line="51" pos:column="38"/></operator> <operator pos:line="51" pos:column="39">*<pos:position pos:line="51" pos:column="40"/></operator> <literal type="number" pos:line="51" pos:column="41">1000<pos:position pos:line="51" pos:column="45"/></literal></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif>
  <elseif pos:line="53" pos:column="3">else <if pos:line="53" pos:column="8">if <condition pos:line="53" pos:column="11">(<expr><name pos:line="53" pos:column="12">timeout<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">==<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">INFTIM<pos:position pos:line="53" pos:column="29"/></name></expr>)<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30">
    <comment type="block" pos:line="54" pos:column="5">/* wait forever */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="5">ptv<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <name pos:line="55" pos:column="11">NULL<pos:position pos:line="55" pos:column="15"/></name></expr>;<pos:position pos:line="55" pos:column="16"/></expr_stmt></block></then></if></elseif>
  <else pos:line="56" pos:column="3">else
    <block pos:line="57" pos:column="5">{
      <expr_stmt><expr><name pos:line="58" pos:column="7">errno<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">EINVAL<pos:position pos:line="58" pos:column="21"/></name></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
      <return pos:line="59" pos:column="7">return <expr><operator pos:line="59" pos:column="14">-<pos:position pos:line="59" pos:column="15"/></operator><literal type="number" pos:line="59" pos:column="15">1<pos:position pos:line="59" pos:column="16"/></literal></expr>;<pos:position pos:line="59" pos:column="17"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>

  <comment type="block" pos:line="62" pos:column="3">/* create fd sets and determine max fd */</comment>
  <expr_stmt><expr><name pos:line="63" pos:column="3">maxfd<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">=<pos:position pos:line="63" pos:column="10"/></operator> <operator pos:line="63" pos:column="11">-<pos:position pos:line="63" pos:column="12"/></operator><literal type="number" pos:line="63" pos:column="12">1<pos:position pos:line="63" pos:column="13"/></literal></expr>;<pos:position pos:line="63" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">FD_ZERO<pos:position pos:line="64" pos:column="10"/></name> <argument_list pos:line="64" pos:column="11">(<argument><expr><operator pos:line="64" pos:column="12">&amp;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="13">rfds<pos:position pos:line="64" pos:column="17"/></name></expr></argument>)<pos:position pos:line="64" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">FD_ZERO<pos:position pos:line="65" pos:column="10"/></name> <argument_list pos:line="65" pos:column="11">(<argument><expr><operator pos:line="65" pos:column="12">&amp;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="13">wfds<pos:position pos:line="65" pos:column="17"/></name></expr></argument>)<pos:position pos:line="65" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">FD_ZERO<pos:position pos:line="66" pos:column="10"/></name> <argument_list pos:line="66" pos:column="11">(<argument><expr><operator pos:line="66" pos:column="12">&amp;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="13">efds<pos:position pos:line="66" pos:column="17"/></name></expr></argument>)<pos:position pos:line="66" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
  <for pos:line="67" pos:column="3">for <control pos:line="67" pos:column="7">(<init><expr><name pos:line="67" pos:column="8">i<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <literal type="number" pos:line="67" pos:column="12">0<pos:position pos:line="67" pos:column="13"/></literal></expr>;<pos:position pos:line="67" pos:column="14"/></init> <condition><expr><name pos:line="67" pos:column="15">i<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">&lt;<pos:position pos:line="67" pos:column="21"/></operator> <name pos:line="67" pos:column="19">nfd<pos:position pos:line="67" pos:column="22"/></name></expr>;<pos:position pos:line="67" pos:column="23"/></condition> <incr><expr><name pos:line="67" pos:column="24">i<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">++<pos:position pos:line="67" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="28"/></control>
    <block pos:line="68" pos:column="5">{
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><name><name pos:line="69" pos:column="11">pfd<pos:position pos:line="69" pos:column="14"/></name><index pos:line="69" pos:column="14">[<expr><name pos:line="69" pos:column="15">i<pos:position pos:line="69" pos:column="16"/></name></expr>]<pos:position pos:line="69" pos:column="17"/></index></name><operator pos:line="69" pos:column="17">.<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">fd<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">&lt;<pos:position pos:line="69" pos:column="25"/></operator> <literal type="number" pos:line="69" pos:column="23">0<pos:position pos:line="69" pos:column="24"/></literal></expr>)<pos:position pos:line="69" pos:column="25"/></condition><then pos:line="69" pos:column="25">
	<block type="pseudo"><continue pos:line="70" pos:column="9">continue;<pos:position pos:line="70" pos:column="18"/></continue></block></then></if>

      <if pos:line="72" pos:column="7">if <condition pos:line="72" pos:column="10">(<expr><name><name pos:line="72" pos:column="11">pfd<pos:position pos:line="72" pos:column="14"/></name><index pos:line="72" pos:column="14">[<expr><name pos:line="72" pos:column="15">i<pos:position pos:line="72" pos:column="16"/></name></expr>]<pos:position pos:line="72" pos:column="17"/></index></name><operator pos:line="72" pos:column="17">.<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">events<pos:position pos:line="72" pos:column="24"/></name> <operator pos:line="72" pos:column="25">&amp;<pos:position pos:line="72" pos:column="30"/></operator> <operator pos:line="72" pos:column="27">(<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="28">POLLIN<pos:position pos:line="72" pos:column="34"/></name> <operator pos:line="72" pos:column="35">|<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">POLLRDNORM<pos:position pos:line="72" pos:column="47"/></name><operator pos:line="72" pos:column="47">)<pos:position pos:line="72" pos:column="48"/></operator></expr>)<pos:position pos:line="72" pos:column="49"/></condition><then pos:line="72" pos:column="49">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="9">FD_SET<pos:position pos:line="73" pos:column="15"/></name> <argument_list pos:line="73" pos:column="16">(<argument><expr><name><name pos:line="73" pos:column="17">pfd<pos:position pos:line="73" pos:column="20"/></name><index pos:line="73" pos:column="20">[<expr><name pos:line="73" pos:column="21">i<pos:position pos:line="73" pos:column="22"/></name></expr>]<pos:position pos:line="73" pos:column="23"/></index></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">fd<pos:position pos:line="73" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="28">&amp;<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="29">rfds<pos:position pos:line="73" pos:column="33"/></name></expr></argument>)<pos:position pos:line="73" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="75" pos:column="7">/* see select(2): "the only exceptional condition detectable
	 is out-of-band data received on a socket", hence we push
	 POLLWRBAND events onto wfds instead of efds. */</comment>
      <if pos:line="78" pos:column="7">if <condition pos:line="78" pos:column="10">(<expr><name><name pos:line="78" pos:column="11">pfd<pos:position pos:line="78" pos:column="14"/></name><index pos:line="78" pos:column="14">[<expr><name pos:line="78" pos:column="15">i<pos:position pos:line="78" pos:column="16"/></name></expr>]<pos:position pos:line="78" pos:column="17"/></index></name><operator pos:line="78" pos:column="17">.<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">events<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">&amp;<pos:position pos:line="78" pos:column="30"/></operator> <operator pos:line="78" pos:column="27">(<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="28">POLLOUT<pos:position pos:line="78" pos:column="35"/></name> <operator pos:line="78" pos:column="36">|<pos:position pos:line="78" pos:column="37"/></operator> <name pos:line="78" pos:column="38">POLLWRNORM<pos:position pos:line="78" pos:column="48"/></name> <operator pos:line="78" pos:column="49">|<pos:position pos:line="78" pos:column="50"/></operator> <name pos:line="78" pos:column="51">POLLWRBAND<pos:position pos:line="78" pos:column="61"/></name><operator pos:line="78" pos:column="61">)<pos:position pos:line="78" pos:column="62"/></operator></expr>)<pos:position pos:line="78" pos:column="63"/></condition><then pos:line="78" pos:column="63">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="9">FD_SET<pos:position pos:line="79" pos:column="15"/></name> <argument_list pos:line="79" pos:column="16">(<argument><expr><name><name pos:line="79" pos:column="17">pfd<pos:position pos:line="79" pos:column="20"/></name><index pos:line="79" pos:column="20">[<expr><name pos:line="79" pos:column="21">i<pos:position pos:line="79" pos:column="22"/></name></expr>]<pos:position pos:line="79" pos:column="23"/></index></name><operator pos:line="79" pos:column="23">.<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">fd<pos:position pos:line="79" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="28">&amp;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="29">wfds<pos:position pos:line="79" pos:column="33"/></name></expr></argument>)<pos:position pos:line="79" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt></block></then></if>
      <if pos:line="80" pos:column="7">if <condition pos:line="80" pos:column="10">(<expr><name><name pos:line="80" pos:column="11">pfd<pos:position pos:line="80" pos:column="14"/></name><index pos:line="80" pos:column="14">[<expr><name pos:line="80" pos:column="15">i<pos:position pos:line="80" pos:column="16"/></name></expr>]<pos:position pos:line="80" pos:column="17"/></index></name><operator pos:line="80" pos:column="17">.<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="18">events<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">&amp;<pos:position pos:line="80" pos:column="30"/></operator> <operator pos:line="80" pos:column="27">(<pos:position pos:line="80" pos:column="28"/></operator><name pos:line="80" pos:column="28">POLLPRI<pos:position pos:line="80" pos:column="35"/></name> <operator pos:line="80" pos:column="36">|<pos:position pos:line="80" pos:column="37"/></operator> <name pos:line="80" pos:column="38">POLLRDBAND<pos:position pos:line="80" pos:column="48"/></name><operator pos:line="80" pos:column="48">)<pos:position pos:line="80" pos:column="49"/></operator></expr>)<pos:position pos:line="80" pos:column="50"/></condition><then pos:line="80" pos:column="50">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="9">FD_SET<pos:position pos:line="81" pos:column="15"/></name> <argument_list pos:line="81" pos:column="16">(<argument><expr><name><name pos:line="81" pos:column="17">pfd<pos:position pos:line="81" pos:column="20"/></name><index pos:line="81" pos:column="20">[<expr><name pos:line="81" pos:column="21">i<pos:position pos:line="81" pos:column="22"/></name></expr>]<pos:position pos:line="81" pos:column="23"/></index></name><operator pos:line="81" pos:column="23">.<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="24">fd<pos:position pos:line="81" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="28">&amp;<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="29">efds<pos:position pos:line="81" pos:column="33"/></name></expr></argument>)<pos:position pos:line="81" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt></block></then></if>
      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><name><name pos:line="82" pos:column="11">pfd<pos:position pos:line="82" pos:column="14"/></name><index pos:line="82" pos:column="14">[<expr><name pos:line="82" pos:column="15">i<pos:position pos:line="82" pos:column="16"/></name></expr>]<pos:position pos:line="82" pos:column="17"/></index></name><operator pos:line="82" pos:column="17">.<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">fd<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">&gt;=<pos:position pos:line="82" pos:column="26"/></operator> <name pos:line="82" pos:column="24">maxfd<pos:position pos:line="82" pos:column="29"/></name>
	  <operator pos:line="83" pos:column="11">&amp;&amp;<pos:position pos:line="83" pos:column="21"/></operator> <operator pos:line="83" pos:column="14">(<pos:position pos:line="83" pos:column="15"/></operator><name><name pos:line="83" pos:column="15">pfd<pos:position pos:line="83" pos:column="18"/></name><index pos:line="83" pos:column="18">[<expr><name pos:line="83" pos:column="19">i<pos:position pos:line="83" pos:column="20"/></name></expr>]<pos:position pos:line="83" pos:column="21"/></index></name><operator pos:line="83" pos:column="21">.<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">events<pos:position pos:line="83" pos:column="28"/></name> <operator pos:line="83" pos:column="29">&amp;<pos:position pos:line="83" pos:column="34"/></operator> <operator pos:line="83" pos:column="31">(<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="32">POLLIN<pos:position pos:line="83" pos:column="38"/></name> <operator pos:line="83" pos:column="39">|<pos:position pos:line="83" pos:column="40"/></operator> <name pos:line="83" pos:column="41">POLLOUT<pos:position pos:line="83" pos:column="48"/></name> <operator pos:line="83" pos:column="49">|<pos:position pos:line="83" pos:column="50"/></operator> <name pos:line="83" pos:column="51">POLLPRI<pos:position pos:line="83" pos:column="58"/></name>
			       <operator pos:line="84" pos:column="32">|<pos:position pos:line="84" pos:column="33"/></operator> <name pos:line="84" pos:column="34">POLLRDNORM<pos:position pos:line="84" pos:column="44"/></name> <operator pos:line="84" pos:column="45">|<pos:position pos:line="84" pos:column="46"/></operator> <name pos:line="84" pos:column="47">POLLRDBAND<pos:position pos:line="84" pos:column="57"/></name>
			       <operator pos:line="85" pos:column="32">|<pos:position pos:line="85" pos:column="33"/></operator> <name pos:line="85" pos:column="34">POLLWRNORM<pos:position pos:line="85" pos:column="44"/></name> <operator pos:line="85" pos:column="45">|<pos:position pos:line="85" pos:column="46"/></operator> <name pos:line="85" pos:column="47">POLLWRBAND<pos:position pos:line="85" pos:column="57"/></name><operator pos:line="85" pos:column="57">)<pos:position pos:line="85" pos:column="58"/></operator><operator pos:line="85" pos:column="58">)<pos:position pos:line="85" pos:column="59"/></operator></expr>)<pos:position pos:line="85" pos:column="60"/></condition><then pos:line="85" pos:column="60">
	<block pos:line="86" pos:column="9">{
	  <expr_stmt><expr><name pos:line="87" pos:column="11">maxfd<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <name><name pos:line="87" pos:column="19">pfd<pos:position pos:line="87" pos:column="22"/></name><index pos:line="87" pos:column="22">[<expr><name pos:line="87" pos:column="23">i<pos:position pos:line="87" pos:column="24"/></name></expr>]<pos:position pos:line="87" pos:column="25"/></index></name><operator pos:line="87" pos:column="25">.<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="26">fd<pos:position pos:line="87" pos:column="28"/></name></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt>
	  <if pos:line="88" pos:column="11">if <condition pos:line="88" pos:column="14">(<expr><name pos:line="88" pos:column="15">maxfd<pos:position pos:line="88" pos:column="20"/></name> <operator pos:line="88" pos:column="21">&gt;<pos:position pos:line="88" pos:column="25"/></operator> <name pos:line="88" pos:column="23">FD_SETSIZE<pos:position pos:line="88" pos:column="33"/></name></expr>)<pos:position pos:line="88" pos:column="34"/></condition><then pos:line="88" pos:column="34">
	    <block pos:line="89" pos:column="13">{
	      <expr_stmt><expr><name pos:line="90" pos:column="15">errno<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <name pos:line="90" pos:column="23">EOVERFLOW<pos:position pos:line="90" pos:column="32"/></name></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt>
	      <return pos:line="91" pos:column="15">return <expr><operator pos:line="91" pos:column="22">-<pos:position pos:line="91" pos:column="23"/></operator><literal type="number" pos:line="91" pos:column="23">1<pos:position pos:line="91" pos:column="24"/></literal></expr>;<pos:position pos:line="91" pos:column="25"/></return>
	    }<pos:position pos:line="92" pos:column="14"/></block></then></if>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if>
    }<pos:position pos:line="94" pos:column="6"/></block></for>

  <comment type="block" pos:line="96" pos:column="3">/* examine fd sets */</comment>
  <expr_stmt><expr><name pos:line="97" pos:column="3">rc<pos:position pos:line="97" pos:column="5"/></name> <operator pos:line="97" pos:column="6">=<pos:position pos:line="97" pos:column="7"/></operator> <call><name pos:line="97" pos:column="8">select<pos:position pos:line="97" pos:column="14"/></name> <argument_list pos:line="97" pos:column="15">(<argument><expr><name pos:line="97" pos:column="16">maxfd<pos:position pos:line="97" pos:column="21"/></name> <operator pos:line="97" pos:column="22">+<pos:position pos:line="97" pos:column="23"/></operator> <literal type="number" pos:line="97" pos:column="24">1<pos:position pos:line="97" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="27">&amp;<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="28">rfds<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="34">&amp;<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="35">wfds<pos:position pos:line="97" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="41">&amp;<pos:position pos:line="97" pos:column="46"/></operator><name pos:line="97" pos:column="42">efds<pos:position pos:line="97" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="48">ptv<pos:position pos:line="97" pos:column="51"/></name></expr></argument>)<pos:position pos:line="97" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="53"/></expr_stmt>
  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><name pos:line="98" pos:column="7">rc<pos:position pos:line="98" pos:column="9"/></name> <operator pos:line="98" pos:column="10">&lt;<pos:position pos:line="98" pos:column="14"/></operator> <literal type="number" pos:line="98" pos:column="12">0<pos:position pos:line="98" pos:column="13"/></literal></expr>)<pos:position pos:line="98" pos:column="14"/></condition><then pos:line="98" pos:column="14">
    <block type="pseudo"><return pos:line="99" pos:column="5">return <expr><name pos:line="99" pos:column="12">rc<pos:position pos:line="99" pos:column="14"/></name></expr>;<pos:position pos:line="99" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="101" pos:column="3">/* establish results */</comment>
  <expr_stmt><expr><name pos:line="102" pos:column="3">rc<pos:position pos:line="102" pos:column="5"/></name> <operator pos:line="102" pos:column="6">=<pos:position pos:line="102" pos:column="7"/></operator> <literal type="number" pos:line="102" pos:column="8">0<pos:position pos:line="102" pos:column="9"/></literal></expr>;<pos:position pos:line="102" pos:column="10"/></expr_stmt>
  <for pos:line="103" pos:column="3">for <control pos:line="103" pos:column="7">(<init><expr><name pos:line="103" pos:column="8">i<pos:position pos:line="103" pos:column="9"/></name> <operator pos:line="103" pos:column="10">=<pos:position pos:line="103" pos:column="11"/></operator> <literal type="number" pos:line="103" pos:column="12">0<pos:position pos:line="103" pos:column="13"/></literal></expr>;<pos:position pos:line="103" pos:column="14"/></init> <condition><expr><name pos:line="103" pos:column="15">i<pos:position pos:line="103" pos:column="16"/></name> <operator pos:line="103" pos:column="17">&lt;<pos:position pos:line="103" pos:column="21"/></operator> <name pos:line="103" pos:column="19">nfd<pos:position pos:line="103" pos:column="22"/></name></expr>;<pos:position pos:line="103" pos:column="23"/></condition> <incr><expr><name pos:line="103" pos:column="24">i<pos:position pos:line="103" pos:column="25"/></name><operator pos:line="103" pos:column="25">++<pos:position pos:line="103" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="103" pos:column="28"/></control>
    <block type="pseudo"><if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name><name pos:line="104" pos:column="9">pfd<pos:position pos:line="104" pos:column="12"/></name><index pos:line="104" pos:column="12">[<expr><name pos:line="104" pos:column="13">i<pos:position pos:line="104" pos:column="14"/></name></expr>]<pos:position pos:line="104" pos:column="15"/></index></name><operator pos:line="104" pos:column="15">.<pos:position pos:line="104" pos:column="16"/></operator><name pos:line="104" pos:column="16">fd<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">&lt;<pos:position pos:line="104" pos:column="23"/></operator> <literal type="number" pos:line="104" pos:column="21">0<pos:position pos:line="104" pos:column="22"/></literal></expr>)<pos:position pos:line="104" pos:column="23"/></condition><then pos:line="104" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="105" pos:column="7">pfd<pos:position pos:line="105" pos:column="10"/></name><index pos:line="105" pos:column="10">[<expr><name pos:line="105" pos:column="11">i<pos:position pos:line="105" pos:column="12"/></name></expr>]<pos:position pos:line="105" pos:column="13"/></index></name><operator pos:line="105" pos:column="13">.<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="14">revents<pos:position pos:line="105" pos:column="21"/></name> <operator pos:line="105" pos:column="22">=<pos:position pos:line="105" pos:column="23"/></operator> <literal type="number" pos:line="105" pos:column="24">0<pos:position pos:line="105" pos:column="25"/></literal></expr>;<pos:position pos:line="105" pos:column="26"/></expr_stmt></block></then>
    <else pos:line="106" pos:column="5">else
      <block pos:line="107" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="108" pos:column="9">int<pos:position pos:line="108" pos:column="12"/></name></type> <name pos:line="108" pos:column="13">happened<pos:position pos:line="108" pos:column="21"/></name> <init pos:line="108" pos:column="22">= <expr><call><name pos:line="108" pos:column="24">compute_revents<pos:position pos:line="108" pos:column="39"/></name> <argument_list pos:line="108" pos:column="40">(<argument><expr><name><name pos:line="108" pos:column="41">pfd<pos:position pos:line="108" pos:column="44"/></name><index pos:line="108" pos:column="44">[<expr><name pos:line="108" pos:column="45">i<pos:position pos:line="108" pos:column="46"/></name></expr>]<pos:position pos:line="108" pos:column="47"/></index></name><operator pos:line="108" pos:column="47">.<pos:position pos:line="108" pos:column="48"/></operator><name pos:line="108" pos:column="48">fd<pos:position pos:line="108" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="52">pfd<pos:position pos:line="108" pos:column="55"/></name><index pos:line="108" pos:column="55">[<expr><name pos:line="108" pos:column="56">i<pos:position pos:line="108" pos:column="57"/></name></expr>]<pos:position pos:line="108" pos:column="58"/></index></name><operator pos:line="108" pos:column="58">.<pos:position pos:line="108" pos:column="59"/></operator><name pos:line="108" pos:column="59">events<pos:position pos:line="108" pos:column="65"/></name></expr></argument>,
					<argument><expr><operator pos:line="109" pos:column="41">&amp;<pos:position pos:line="109" pos:column="46"/></operator><name pos:line="109" pos:column="42">rfds<pos:position pos:line="109" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="48">&amp;<pos:position pos:line="109" pos:column="53"/></operator><name pos:line="109" pos:column="49">wfds<pos:position pos:line="109" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="55">&amp;<pos:position pos:line="109" pos:column="60"/></operator><name pos:line="109" pos:column="56">efds<pos:position pos:line="109" pos:column="60"/></name></expr></argument>)<pos:position pos:line="109" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="109" pos:column="62"/></decl_stmt>
	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name pos:line="110" pos:column="13">happened<pos:position pos:line="110" pos:column="21"/></name></expr>)<pos:position pos:line="110" pos:column="22"/></condition><then pos:line="110" pos:column="22">
	  <block pos:line="111" pos:column="11">{
	    <expr_stmt><expr><name><name pos:line="112" pos:column="13">pfd<pos:position pos:line="112" pos:column="16"/></name><index pos:line="112" pos:column="16">[<expr><name pos:line="112" pos:column="17">i<pos:position pos:line="112" pos:column="18"/></name></expr>]<pos:position pos:line="112" pos:column="19"/></index></name><operator pos:line="112" pos:column="19">.<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="20">revents<pos:position pos:line="112" pos:column="27"/></name> <operator pos:line="112" pos:column="28">=<pos:position pos:line="112" pos:column="29"/></operator> <name pos:line="112" pos:column="30">happened<pos:position pos:line="112" pos:column="38"/></name></expr>;<pos:position pos:line="112" pos:column="39"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="113" pos:column="13">rc<pos:position pos:line="113" pos:column="15"/></name><operator pos:line="113" pos:column="15">++<pos:position pos:line="113" pos:column="17"/></operator></expr>;<pos:position pos:line="113" pos:column="18"/></expr_stmt>
	  }<pos:position pos:line="114" pos:column="12"/></block></then></if>
      }<pos:position pos:line="115" pos:column="8"/></block></else></if></block></for>

  <return pos:line="117" pos:column="3">return <expr><name pos:line="117" pos:column="10">rc<pos:position pos:line="117" pos:column="12"/></name></expr>;<pos:position pos:line="117" pos:column="13"/></return>
<cpp:else pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">else<pos:position pos:line="118" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><specifier pos:line="119" pos:column="3">static<pos:position pos:line="119" pos:column="9"/></specifier> <type><name><name pos:line="119" pos:column="10">struct<pos:position pos:line="119" pos:column="16"/></name> <name pos:line="119" pos:column="17">timeval<pos:position pos:line="119" pos:column="24"/></name></name></type> <name pos:line="119" pos:column="25">tv0<pos:position pos:line="119" pos:column="28"/></name></decl>;<pos:position pos:line="119" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="120" pos:column="3">static<pos:position pos:line="120" pos:column="9"/></specifier> <type><name pos:line="120" pos:column="10">HANDLE<pos:position pos:line="120" pos:column="16"/></name></type> <name pos:line="120" pos:column="17">hEvent<pos:position pos:line="120" pos:column="23"/></name></decl>;<pos:position pos:line="120" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="121" pos:column="3">WSANETWORKEVENTS<pos:position pos:line="121" pos:column="19"/></name></type> <name pos:line="121" pos:column="20">ev<pos:position pos:line="121" pos:column="22"/></name></decl>;<pos:position pos:line="121" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="122" pos:column="3">HANDLE<pos:position pos:line="122" pos:column="9"/></name></type> <name pos:line="122" pos:column="10">h<pos:position pos:line="122" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="122" pos:column="13">handle_array<pos:position pos:line="122" pos:column="25"/></name><index pos:line="122" pos:column="25">[<expr><name pos:line="122" pos:column="26">FD_SETSIZE<pos:position pos:line="122" pos:column="36"/></name> <operator pos:line="122" pos:column="37">+<pos:position pos:line="122" pos:column="38"/></operator> <literal type="number" pos:line="122" pos:column="39">2<pos:position pos:line="122" pos:column="40"/></literal></expr>]<pos:position pos:line="122" pos:column="41"/></index></name></decl>;<pos:position pos:line="122" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="123" pos:column="3">DWORD<pos:position pos:line="123" pos:column="8"/></name></type> <name pos:line="123" pos:column="9">ret<pos:position pos:line="123" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="123" pos:column="14">wait_timeout<pos:position pos:line="123" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="123" pos:column="28">nhandles<pos:position pos:line="123" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="123" pos:column="38">start<pos:position pos:line="123" pos:column="43"/></name> <init pos:line="123" pos:column="44">= <expr><literal type="number" pos:line="123" pos:column="46">0<pos:position pos:line="123" pos:column="47"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="123" pos:column="49">elapsed<pos:position pos:line="123" pos:column="56"/></name></decl>, <decl><type ref="prev"/><name pos:line="123" pos:column="58">orig_timeout<pos:position pos:line="123" pos:column="70"/></name> <init pos:line="123" pos:column="71">= <expr><literal type="number" pos:line="123" pos:column="73">0<pos:position pos:line="123" pos:column="74"/></literal></expr></init></decl>;<pos:position pos:line="123" pos:column="75"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="124" pos:column="3">fd_set<pos:position pos:line="124" pos:column="9"/></name></type> <name pos:line="124" pos:column="10">rfds<pos:position pos:line="124" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="124" pos:column="16">wfds<pos:position pos:line="124" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="124" pos:column="22">xfds<pos:position pos:line="124" pos:column="26"/></name></decl>;<pos:position pos:line="124" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="125" pos:column="3">BOOL<pos:position pos:line="125" pos:column="7"/></name></type> <name pos:line="125" pos:column="8">poll_again<pos:position pos:line="125" pos:column="18"/></name></decl>;<pos:position pos:line="125" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="126" pos:column="3">MSG<pos:position pos:line="126" pos:column="6"/></name></type> <name pos:line="126" pos:column="7">msg<pos:position pos:line="126" pos:column="10"/></name></decl>;<pos:position pos:line="126" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="127" pos:column="3">int<pos:position pos:line="127" pos:column="6"/></name></type> <name pos:line="127" pos:column="7">rc<pos:position pos:line="127" pos:column="9"/></name> <init pos:line="127" pos:column="10">= <expr><literal type="number" pos:line="127" pos:column="12">0<pos:position pos:line="127" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="127" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="128" pos:column="3">nfds_t<pos:position pos:line="128" pos:column="9"/></name></type> <name pos:line="128" pos:column="10">i<pos:position pos:line="128" pos:column="11"/></name></decl>;<pos:position pos:line="128" pos:column="12"/></decl_stmt>

  <if pos:line="130" pos:column="3">if <condition pos:line="130" pos:column="6">(<expr><name pos:line="130" pos:column="7">nfd<pos:position pos:line="130" pos:column="10"/></name> <operator pos:line="130" pos:column="11">&lt;<pos:position pos:line="130" pos:column="15"/></operator> <literal type="number" pos:line="130" pos:column="13">0<pos:position pos:line="130" pos:column="14"/></literal> <operator pos:line="130" pos:column="15">||<pos:position pos:line="130" pos:column="17"/></operator> <name pos:line="130" pos:column="18">timeout<pos:position pos:line="130" pos:column="25"/></name> <operator pos:line="130" pos:column="26">&lt;<pos:position pos:line="130" pos:column="30"/></operator> <operator pos:line="130" pos:column="28">-<pos:position pos:line="130" pos:column="29"/></operator><literal type="number" pos:line="130" pos:column="29">1<pos:position pos:line="130" pos:column="30"/></literal></expr>)<pos:position pos:line="130" pos:column="31"/></condition><then pos:line="130" pos:column="31">
    <block pos:line="131" pos:column="5">{
      <expr_stmt><expr><name pos:line="132" pos:column="7">errno<pos:position pos:line="132" pos:column="12"/></name> <operator pos:line="132" pos:column="13">=<pos:position pos:line="132" pos:column="14"/></operator> <name pos:line="132" pos:column="15">EINVAL<pos:position pos:line="132" pos:column="21"/></name></expr>;<pos:position pos:line="132" pos:column="22"/></expr_stmt>
      <return pos:line="133" pos:column="7">return <expr><operator pos:line="133" pos:column="14">-<pos:position pos:line="133" pos:column="15"/></operator><literal type="number" pos:line="133" pos:column="15">1<pos:position pos:line="133" pos:column="16"/></literal></expr>;<pos:position pos:line="133" pos:column="17"/></return>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>

  <if pos:line="136" pos:column="3">if <condition pos:line="136" pos:column="6">(<expr><name pos:line="136" pos:column="7">timeout<pos:position pos:line="136" pos:column="14"/></name> <operator pos:line="136" pos:column="15">!=<pos:position pos:line="136" pos:column="17"/></operator> <name pos:line="136" pos:column="18">INFTIM<pos:position pos:line="136" pos:column="24"/></name></expr>)<pos:position pos:line="136" pos:column="25"/></condition><then pos:line="136" pos:column="25">
    <block pos:line="137" pos:column="5">{
      <expr_stmt><expr><name pos:line="138" pos:column="7">orig_timeout<pos:position pos:line="138" pos:column="19"/></name> <operator pos:line="138" pos:column="20">=<pos:position pos:line="138" pos:column="21"/></operator> <name pos:line="138" pos:column="22">timeout<pos:position pos:line="138" pos:column="29"/></name></expr>;<pos:position pos:line="138" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="139" pos:column="7">start<pos:position pos:line="139" pos:column="12"/></name> <operator pos:line="139" pos:column="13">=<pos:position pos:line="139" pos:column="14"/></operator> <call><name pos:line="139" pos:column="15">GetTickCount<pos:position pos:line="139" pos:column="27"/></name><argument_list pos:line="139" pos:column="27">()<pos:position pos:line="139" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if>

  <if pos:line="142" pos:column="3">if <condition pos:line="142" pos:column="6">(<expr><operator pos:line="142" pos:column="7">!<pos:position pos:line="142" pos:column="8"/></operator><name pos:line="142" pos:column="8">hEvent<pos:position pos:line="142" pos:column="14"/></name></expr>)<pos:position pos:line="142" pos:column="15"/></condition><then pos:line="142" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="5">hEvent<pos:position pos:line="143" pos:column="11"/></name> <operator pos:line="143" pos:column="12">=<pos:position pos:line="143" pos:column="13"/></operator> <call><name pos:line="143" pos:column="14">CreateEvent<pos:position pos:line="143" pos:column="25"/></name> <argument_list pos:line="143" pos:column="26">(<argument><expr><name pos:line="143" pos:column="27">NULL<pos:position pos:line="143" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="33">FALSE<pos:position pos:line="143" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="40">FALSE<pos:position pos:line="143" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="47">NULL<pos:position pos:line="143" pos:column="51"/></name></expr></argument>)<pos:position pos:line="143" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="53"/></expr_stmt></block></then></if>

<label><name pos:line="145" pos:column="1">restart<pos:position pos:line="145" pos:column="8"/></name>:<pos:position pos:line="145" pos:column="9"/></label>
  <expr_stmt><expr><name><name pos:line="146" pos:column="3">handle_array<pos:position pos:line="146" pos:column="15"/></name><index pos:line="146" pos:column="15">[<expr><literal type="number" pos:line="146" pos:column="16">0<pos:position pos:line="146" pos:column="17"/></literal></expr>]<pos:position pos:line="146" pos:column="18"/></index></name> <operator pos:line="146" pos:column="19">=<pos:position pos:line="146" pos:column="20"/></operator> <name pos:line="146" pos:column="21">hEvent<pos:position pos:line="146" pos:column="27"/></name></expr>;<pos:position pos:line="146" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="147" pos:column="3">nhandles<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">=<pos:position pos:line="147" pos:column="13"/></operator> <literal type="number" pos:line="147" pos:column="14">1<pos:position pos:line="147" pos:column="15"/></literal></expr>;<pos:position pos:line="147" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="148" pos:column="3">FD_ZERO<pos:position pos:line="148" pos:column="10"/></name> <argument_list pos:line="148" pos:column="11">(<argument><expr><operator pos:line="148" pos:column="12">&amp;<pos:position pos:line="148" pos:column="17"/></operator><name pos:line="148" pos:column="13">rfds<pos:position pos:line="148" pos:column="17"/></name></expr></argument>)<pos:position pos:line="148" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="149" pos:column="3">FD_ZERO<pos:position pos:line="149" pos:column="10"/></name> <argument_list pos:line="149" pos:column="11">(<argument><expr><operator pos:line="149" pos:column="12">&amp;<pos:position pos:line="149" pos:column="17"/></operator><name pos:line="149" pos:column="13">wfds<pos:position pos:line="149" pos:column="17"/></name></expr></argument>)<pos:position pos:line="149" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="150" pos:column="3">FD_ZERO<pos:position pos:line="150" pos:column="10"/></name> <argument_list pos:line="150" pos:column="11">(<argument><expr><operator pos:line="150" pos:column="12">&amp;<pos:position pos:line="150" pos:column="17"/></operator><name pos:line="150" pos:column="13">xfds<pos:position pos:line="150" pos:column="17"/></name></expr></argument>)<pos:position pos:line="150" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="152" pos:column="3">/* Classify socket handles and create fd sets. */</comment>
  <for pos:line="153" pos:column="3">for <control pos:line="153" pos:column="7">(<init><expr><name pos:line="153" pos:column="8">i<pos:position pos:line="153" pos:column="9"/></name> <operator pos:line="153" pos:column="10">=<pos:position pos:line="153" pos:column="11"/></operator> <literal type="number" pos:line="153" pos:column="12">0<pos:position pos:line="153" pos:column="13"/></literal></expr>;<pos:position pos:line="153" pos:column="14"/></init> <condition><expr><name pos:line="153" pos:column="15">i<pos:position pos:line="153" pos:column="16"/></name> <operator pos:line="153" pos:column="17">&lt;<pos:position pos:line="153" pos:column="21"/></operator> <name pos:line="153" pos:column="19">nfd<pos:position pos:line="153" pos:column="22"/></name></expr>;<pos:position pos:line="153" pos:column="23"/></condition> <incr><expr><name pos:line="153" pos:column="24">i<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">++<pos:position pos:line="153" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="153" pos:column="28"/></control>
    <block pos:line="154" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="155" pos:column="7">int<pos:position pos:line="155" pos:column="10"/></name></type> <name pos:line="155" pos:column="11">sought<pos:position pos:line="155" pos:column="17"/></name> <init pos:line="155" pos:column="18">= <expr><name><name pos:line="155" pos:column="20">pfd<pos:position pos:line="155" pos:column="23"/></name><index pos:line="155" pos:column="23">[<expr><name pos:line="155" pos:column="24">i<pos:position pos:line="155" pos:column="25"/></name></expr>]<pos:position pos:line="155" pos:column="26"/></index></name><operator pos:line="155" pos:column="26">.<pos:position pos:line="155" pos:column="27"/></operator><name pos:line="155" pos:column="27">events<pos:position pos:line="155" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="155" pos:column="34"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="156" pos:column="7">pfd<pos:position pos:line="156" pos:column="10"/></name><index pos:line="156" pos:column="10">[<expr><name pos:line="156" pos:column="11">i<pos:position pos:line="156" pos:column="12"/></name></expr>]<pos:position pos:line="156" pos:column="13"/></index></name><operator pos:line="156" pos:column="13">.<pos:position pos:line="156" pos:column="14"/></operator><name pos:line="156" pos:column="14">revents<pos:position pos:line="156" pos:column="21"/></name> <operator pos:line="156" pos:column="22">=<pos:position pos:line="156" pos:column="23"/></operator> <literal type="number" pos:line="156" pos:column="24">0<pos:position pos:line="156" pos:column="25"/></literal></expr>;<pos:position pos:line="156" pos:column="26"/></expr_stmt>
      <if pos:line="157" pos:column="7">if <condition pos:line="157" pos:column="10">(<expr><name><name pos:line="157" pos:column="11">pfd<pos:position pos:line="157" pos:column="14"/></name><index pos:line="157" pos:column="14">[<expr><name pos:line="157" pos:column="15">i<pos:position pos:line="157" pos:column="16"/></name></expr>]<pos:position pos:line="157" pos:column="17"/></index></name><operator pos:line="157" pos:column="17">.<pos:position pos:line="157" pos:column="18"/></operator><name pos:line="157" pos:column="18">fd<pos:position pos:line="157" pos:column="20"/></name> <operator pos:line="157" pos:column="21">&lt;<pos:position pos:line="157" pos:column="25"/></operator> <literal type="number" pos:line="157" pos:column="23">0<pos:position pos:line="157" pos:column="24"/></literal></expr>)<pos:position pos:line="157" pos:column="25"/></condition><then pos:line="157" pos:column="25">
	<block type="pseudo"><continue pos:line="158" pos:column="9">continue;<pos:position pos:line="158" pos:column="18"/></continue></block></then></if>
      <if pos:line="159" pos:column="7">if <condition pos:line="159" pos:column="10">(<expr><operator pos:line="159" pos:column="11">!<pos:position pos:line="159" pos:column="12"/></operator><operator pos:line="159" pos:column="12">(<pos:position pos:line="159" pos:column="13"/></operator><name pos:line="159" pos:column="13">sought<pos:position pos:line="159" pos:column="19"/></name> <operator pos:line="159" pos:column="20">&amp;<pos:position pos:line="159" pos:column="25"/></operator> <operator pos:line="159" pos:column="22">(<pos:position pos:line="159" pos:column="23"/></operator><name pos:line="159" pos:column="23">POLLIN<pos:position pos:line="159" pos:column="29"/></name> <operator pos:line="159" pos:column="30">|<pos:position pos:line="159" pos:column="31"/></operator> <name pos:line="159" pos:column="32">POLLRDNORM<pos:position pos:line="159" pos:column="42"/></name> <operator pos:line="159" pos:column="43">|<pos:position pos:line="159" pos:column="44"/></operator> <name pos:line="159" pos:column="45">POLLOUT<pos:position pos:line="159" pos:column="52"/></name> <operator pos:line="159" pos:column="53">|<pos:position pos:line="159" pos:column="54"/></operator> <name pos:line="159" pos:column="55">POLLWRNORM<pos:position pos:line="159" pos:column="65"/></name> <operator pos:line="159" pos:column="66">|<pos:position pos:line="159" pos:column="67"/></operator> <name pos:line="159" pos:column="68">POLLWRBAND<pos:position pos:line="159" pos:column="78"/></name>
		      <operator pos:line="160" pos:column="23">|<pos:position pos:line="160" pos:column="24"/></operator> <name pos:line="160" pos:column="25">POLLPRI<pos:position pos:line="160" pos:column="32"/></name> <operator pos:line="160" pos:column="33">|<pos:position pos:line="160" pos:column="34"/></operator> <name pos:line="160" pos:column="35">POLLRDBAND<pos:position pos:line="160" pos:column="45"/></name><operator pos:line="160" pos:column="45">)<pos:position pos:line="160" pos:column="46"/></operator><operator pos:line="160" pos:column="46">)<pos:position pos:line="160" pos:column="47"/></operator></expr>)<pos:position pos:line="160" pos:column="48"/></condition><then pos:line="160" pos:column="48">
	<block type="pseudo"><continue pos:line="161" pos:column="9">continue;<pos:position pos:line="161" pos:column="18"/></continue></block></then></if>

      <expr_stmt><expr><name pos:line="163" pos:column="7">h<pos:position pos:line="163" pos:column="8"/></name> <operator pos:line="163" pos:column="9">=<pos:position pos:line="163" pos:column="10"/></operator> <operator pos:line="163" pos:column="11">(<pos:position pos:line="163" pos:column="12"/></operator><name pos:line="163" pos:column="12">HANDLE<pos:position pos:line="163" pos:column="18"/></name><operator pos:line="163" pos:column="18">)<pos:position pos:line="163" pos:column="19"/></operator> <call><name pos:line="163" pos:column="20">_get_osfhandle<pos:position pos:line="163" pos:column="34"/></name> <argument_list pos:line="163" pos:column="35">(<argument><expr><name><name pos:line="163" pos:column="36">pfd<pos:position pos:line="163" pos:column="39"/></name><index pos:line="163" pos:column="39">[<expr><name pos:line="163" pos:column="40">i<pos:position pos:line="163" pos:column="41"/></name></expr>]<pos:position pos:line="163" pos:column="42"/></index></name><operator pos:line="163" pos:column="42">.<pos:position pos:line="163" pos:column="43"/></operator><name pos:line="163" pos:column="43">fd<pos:position pos:line="163" pos:column="45"/></name></expr></argument>)<pos:position pos:line="163" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="164" pos:column="7">assert<pos:position pos:line="164" pos:column="13"/></name> <argument_list pos:line="164" pos:column="14">(<argument><expr><name pos:line="164" pos:column="15">h<pos:position pos:line="164" pos:column="16"/></name> <operator pos:line="164" pos:column="17">!=<pos:position pos:line="164" pos:column="19"/></operator> <name pos:line="164" pos:column="20">NULL<pos:position pos:line="164" pos:column="24"/></name></expr></argument>)<pos:position pos:line="164" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="26"/></expr_stmt>
      <if pos:line="165" pos:column="7">if <condition pos:line="165" pos:column="10">(<expr><call><name pos:line="165" pos:column="11">IsSocketHandle<pos:position pos:line="165" pos:column="25"/></name> <argument_list pos:line="165" pos:column="26">(<argument><expr><name pos:line="165" pos:column="27">h<pos:position pos:line="165" pos:column="28"/></name></expr></argument>)<pos:position pos:line="165" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="165" pos:column="30"/></condition><then pos:line="165" pos:column="30">
	<block pos:line="166" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="167" pos:column="11">int<pos:position pos:line="167" pos:column="14"/></name></type> <name pos:line="167" pos:column="15">requested<pos:position pos:line="167" pos:column="24"/></name> <init pos:line="167" pos:column="25">= <expr><name pos:line="167" pos:column="27">FD_CLOSE<pos:position pos:line="167" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="167" pos:column="36"/></decl_stmt>

	  <comment type="block" pos:line="169" pos:column="11">/* see above; socket handles are mapped onto select.  */</comment>
	  <if pos:line="170" pos:column="11">if <condition pos:line="170" pos:column="14">(<expr><name pos:line="170" pos:column="15">sought<pos:position pos:line="170" pos:column="21"/></name> <operator pos:line="170" pos:column="22">&amp;<pos:position pos:line="170" pos:column="27"/></operator> <operator pos:line="170" pos:column="24">(<pos:position pos:line="170" pos:column="25"/></operator><name pos:line="170" pos:column="25">POLLIN<pos:position pos:line="170" pos:column="31"/></name> <operator pos:line="170" pos:column="32">|<pos:position pos:line="170" pos:column="33"/></operator> <name pos:line="170" pos:column="34">POLLRDNORM<pos:position pos:line="170" pos:column="44"/></name><operator pos:line="170" pos:column="44">)<pos:position pos:line="170" pos:column="45"/></operator></expr>)<pos:position pos:line="170" pos:column="46"/></condition><then pos:line="170" pos:column="46">
	    <block pos:line="171" pos:column="13">{
	      <expr_stmt><expr><name pos:line="172" pos:column="15">requested<pos:position pos:line="172" pos:column="24"/></name> <operator pos:line="172" pos:column="25">|=<pos:position pos:line="172" pos:column="27"/></operator> <name pos:line="172" pos:column="28">FD_READ<pos:position pos:line="172" pos:column="35"/></name> <operator pos:line="172" pos:column="36">|<pos:position pos:line="172" pos:column="37"/></operator> <name pos:line="172" pos:column="38">FD_ACCEPT<pos:position pos:line="172" pos:column="47"/></name></expr>;<pos:position pos:line="172" pos:column="48"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="173" pos:column="15">FD_SET<pos:position pos:line="173" pos:column="21"/></name> <argument_list pos:line="173" pos:column="22">(<argument><expr><operator pos:line="173" pos:column="23">(<pos:position pos:line="173" pos:column="24"/></operator><name pos:line="173" pos:column="24">SOCKET<pos:position pos:line="173" pos:column="30"/></name><operator pos:line="173" pos:column="30">)<pos:position pos:line="173" pos:column="31"/></operator> <name pos:line="173" pos:column="32">h<pos:position pos:line="173" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="35">&amp;<pos:position pos:line="173" pos:column="40"/></operator><name pos:line="173" pos:column="36">rfds<pos:position pos:line="173" pos:column="40"/></name></expr></argument>)<pos:position pos:line="173" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="42"/></expr_stmt>
	    }<pos:position pos:line="174" pos:column="14"/></block></then></if>
	  <if pos:line="175" pos:column="11">if <condition pos:line="175" pos:column="14">(<expr><name pos:line="175" pos:column="15">sought<pos:position pos:line="175" pos:column="21"/></name> <operator pos:line="175" pos:column="22">&amp;<pos:position pos:line="175" pos:column="27"/></operator> <operator pos:line="175" pos:column="24">(<pos:position pos:line="175" pos:column="25"/></operator><name pos:line="175" pos:column="25">POLLOUT<pos:position pos:line="175" pos:column="32"/></name> <operator pos:line="175" pos:column="33">|<pos:position pos:line="175" pos:column="34"/></operator> <name pos:line="175" pos:column="35">POLLWRNORM<pos:position pos:line="175" pos:column="45"/></name> <operator pos:line="175" pos:column="46">|<pos:position pos:line="175" pos:column="47"/></operator> <name pos:line="175" pos:column="48">POLLWRBAND<pos:position pos:line="175" pos:column="58"/></name><operator pos:line="175" pos:column="58">)<pos:position pos:line="175" pos:column="59"/></operator></expr>)<pos:position pos:line="175" pos:column="60"/></condition><then pos:line="175" pos:column="60">
	    <block pos:line="176" pos:column="13">{
	      <expr_stmt><expr><name pos:line="177" pos:column="15">requested<pos:position pos:line="177" pos:column="24"/></name> <operator pos:line="177" pos:column="25">|=<pos:position pos:line="177" pos:column="27"/></operator> <name pos:line="177" pos:column="28">FD_WRITE<pos:position pos:line="177" pos:column="36"/></name> <operator pos:line="177" pos:column="37">|<pos:position pos:line="177" pos:column="38"/></operator> <name pos:line="177" pos:column="39">FD_CONNECT<pos:position pos:line="177" pos:column="49"/></name></expr>;<pos:position pos:line="177" pos:column="50"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="178" pos:column="15">FD_SET<pos:position pos:line="178" pos:column="21"/></name> <argument_list pos:line="178" pos:column="22">(<argument><expr><operator pos:line="178" pos:column="23">(<pos:position pos:line="178" pos:column="24"/></operator><name pos:line="178" pos:column="24">SOCKET<pos:position pos:line="178" pos:column="30"/></name><operator pos:line="178" pos:column="30">)<pos:position pos:line="178" pos:column="31"/></operator> <name pos:line="178" pos:column="32">h<pos:position pos:line="178" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="178" pos:column="35">&amp;<pos:position pos:line="178" pos:column="40"/></operator><name pos:line="178" pos:column="36">wfds<pos:position pos:line="178" pos:column="40"/></name></expr></argument>)<pos:position pos:line="178" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="42"/></expr_stmt>
	    }<pos:position pos:line="179" pos:column="14"/></block></then></if>
	  <if pos:line="180" pos:column="11">if <condition pos:line="180" pos:column="14">(<expr><name pos:line="180" pos:column="15">sought<pos:position pos:line="180" pos:column="21"/></name> <operator pos:line="180" pos:column="22">&amp;<pos:position pos:line="180" pos:column="27"/></operator> <operator pos:line="180" pos:column="24">(<pos:position pos:line="180" pos:column="25"/></operator><name pos:line="180" pos:column="25">POLLPRI<pos:position pos:line="180" pos:column="32"/></name> <operator pos:line="180" pos:column="33">|<pos:position pos:line="180" pos:column="34"/></operator> <name pos:line="180" pos:column="35">POLLRDBAND<pos:position pos:line="180" pos:column="45"/></name><operator pos:line="180" pos:column="45">)<pos:position pos:line="180" pos:column="46"/></operator></expr>)<pos:position pos:line="180" pos:column="47"/></condition><then pos:line="180" pos:column="47">
	    <block pos:line="181" pos:column="13">{
	      <expr_stmt><expr><name pos:line="182" pos:column="15">requested<pos:position pos:line="182" pos:column="24"/></name> <operator pos:line="182" pos:column="25">|=<pos:position pos:line="182" pos:column="27"/></operator> <name pos:line="182" pos:column="28">FD_OOB<pos:position pos:line="182" pos:column="34"/></name></expr>;<pos:position pos:line="182" pos:column="35"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="183" pos:column="15">FD_SET<pos:position pos:line="183" pos:column="21"/></name> <argument_list pos:line="183" pos:column="22">(<argument><expr><operator pos:line="183" pos:column="23">(<pos:position pos:line="183" pos:column="24"/></operator><name pos:line="183" pos:column="24">SOCKET<pos:position pos:line="183" pos:column="30"/></name><operator pos:line="183" pos:column="30">)<pos:position pos:line="183" pos:column="31"/></operator> <name pos:line="183" pos:column="32">h<pos:position pos:line="183" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="35">&amp;<pos:position pos:line="183" pos:column="40"/></operator><name pos:line="183" pos:column="36">xfds<pos:position pos:line="183" pos:column="40"/></name></expr></argument>)<pos:position pos:line="183" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="42"/></expr_stmt>
	    }<pos:position pos:line="184" pos:column="14"/></block></then></if>

	  <if pos:line="186" pos:column="11">if <condition pos:line="186" pos:column="14">(<expr><name pos:line="186" pos:column="15">requested<pos:position pos:line="186" pos:column="24"/></name></expr>)<pos:position pos:line="186" pos:column="25"/></condition><then pos:line="186" pos:column="25">
	    <block type="pseudo"><macro><name pos:line="187" pos:column="13">WSAEventSelect<pos:position pos:line="187" pos:column="27"/></name> <argument_list pos:line="187" pos:column="28">(<argument pos:line="187" pos:column="29">(SOCKET) h<pos:position pos:line="187" pos:column="39"/></argument>, <argument pos:line="187" pos:column="41">hEvent<pos:position pos:line="187" pos:column="47"/></argument>, <argument pos:line="187" pos:column="49">requested<pos:position pos:line="187" pos:column="58"/></argument></argument_list></macro></block></then></if></block></then></if></block></for></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1295_git-2.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_info_ref<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">path<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">sha1<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">int<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">flag<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="80">void<pos:position pos:line="1" pos:column="84"/></name> <modifier pos:line="1" pos:column="85">*<pos:position pos:line="1" pos:column="86"/></modifier></type><name pos:line="1" pos:column="86">cb_data<pos:position pos:line="1" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="94"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fp<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">cb_data<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">o<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">parse_object<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">sha1<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">o<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">fprintf<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">fp<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="25">"%s	%s\n"<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="40">sha1_to_hex<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">sha1<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">path<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call> <operator pos:line="8" pos:column="65">&lt;<pos:position pos:line="8" pos:column="69"/></operator> <literal type="number" pos:line="8" pos:column="67">0<pos:position pos:line="8" pos:column="68"/></literal></expr>)<pos:position pos:line="8" pos:column="69"/></condition><then pos:line="8" pos:column="69">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">o<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">type<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">==<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">OBJ_TAG<pos:position pos:line="11" pos:column="31"/></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">o<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">deref_tag<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">o<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">path<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">o<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
			<block type="pseudo"><if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><call><name pos:line="14" pos:column="29">fprintf<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">fp<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="41">"%s	%s^{}\n"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="15" pos:column="33">sha1_to_hex<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><name><name pos:line="15" pos:column="45">o<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">sha1<pos:position pos:line="15" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="55">path<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call> <operator pos:line="15" pos:column="61">&lt;<pos:position pos:line="15" pos:column="65"/></operator> <literal type="number" pos:line="15" pos:column="63">0<pos:position pos:line="15" pos:column="64"/></literal></expr>)<pos:position pos:line="15" pos:column="65"/></condition><then pos:line="15" pos:column="65">
				<block type="pseudo"><return pos:line="16" pos:column="33">return <expr><operator pos:line="16" pos:column="40">-<pos:position pos:line="16" pos:column="41"/></operator><literal type="number" pos:line="16" pos:column="41">1<pos:position pos:line="16" pos:column="42"/></literal></expr>;<pos:position pos:line="16" pos:column="43"/></return></block></then></if></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

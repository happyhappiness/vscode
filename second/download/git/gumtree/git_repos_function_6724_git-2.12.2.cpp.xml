<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6724_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">reg_errcode_t<pos:position pos:line="1" pos:column="21"/></name></type>
<name pos:line="2" pos:column="1">lower_subexps<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">extra<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">bin_tree_t<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">node<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">regex_t<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">preg<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><operator pos:line="4" pos:column="19">(<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">regex_t<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><operator pos:line="4" pos:column="29">)<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="31">extra<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">reg_errcode_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">err<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">REG_NOERROR<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">node<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">left<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">&amp;&amp;<pos:position pos:line="7" pos:column="28"/></operator> <name><name pos:line="7" pos:column="21">node<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">left<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">token<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">type<pos:position pos:line="7" pos:column="43"/></name></name> <operator pos:line="7" pos:column="44">==<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="47">SUBEXP<pos:position pos:line="7" pos:column="53"/></name></expr>)<pos:position pos:line="7" pos:column="54"/></condition><then pos:line="7" pos:column="54">
    <block pos:line="8" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="9" pos:column="7">node<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">left<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">lower_subexp<pos:position pos:line="9" pos:column="32"/></name> <argument_list pos:line="9" pos:column="33">(<argument><expr><operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="35">err<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">preg<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="46">node<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">-&gt;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="52">left<pos:position pos:line="9" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><name><name pos:line="10" pos:column="11">node<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">left<pos:position pos:line="10" pos:column="21"/></name></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="9">node<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">left<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">parent<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">node<pos:position pos:line="11" pos:column="34"/></name></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">node<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">right<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">&amp;&amp;<pos:position pos:line="13" pos:column="29"/></operator> <name><name pos:line="13" pos:column="22">node<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">right<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">token<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">type<pos:position pos:line="13" pos:column="45"/></name></name> <operator pos:line="13" pos:column="46">==<pos:position pos:line="13" pos:column="48"/></operator> <name pos:line="13" pos:column="49">SUBEXP<pos:position pos:line="13" pos:column="55"/></name></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">node<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">right<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">lower_subexp<pos:position pos:line="15" pos:column="33"/></name> <argument_list pos:line="15" pos:column="34">(<argument><expr><operator pos:line="15" pos:column="35">&amp;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="36">err<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">preg<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">node<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">right<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name><name pos:line="16" pos:column="11">node<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">right<pos:position pos:line="16" pos:column="22"/></name></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="9">node<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">right<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">parent<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">node<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">err<pos:position pos:line="20" pos:column="13"/></name></expr>;<pos:position pos:line="20" pos:column="14"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

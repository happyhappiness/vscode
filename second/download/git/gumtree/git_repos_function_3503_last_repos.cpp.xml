<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3503_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">shrink_columns<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">column_data<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">data<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">REALLOC_ARRAY<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name><name pos:line="3" pos:column="23">data<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">width<pos:position pos:line="3" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">cols<pos:position pos:line="3" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="48"/></expr_stmt>
	<while pos:line="4" pos:column="9">while <condition pos:line="4" pos:column="15">(<expr><name><name pos:line="4" pos:column="16">data<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">rows<pos:position pos:line="4" pos:column="26"/></name></name> <operator pos:line="4" pos:column="27">&gt;<pos:position pos:line="4" pos:column="31"/></operator> <literal type="number" pos:line="4" pos:column="29">1<pos:position pos:line="4" pos:column="30"/></literal></expr>)<pos:position pos:line="4" pos:column="31"/></condition> <block pos:line="4" pos:column="32">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">int<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">x<pos:position pos:line="5" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">total_width<pos:position pos:line="5" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="37">cols<pos:position pos:line="5" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="43">rows<pos:position pos:line="5" pos:column="47"/></name></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
		<expr_stmt><expr><name pos:line="6" pos:column="17">rows<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="24">data<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">rows<pos:position pos:line="6" pos:column="34"/></name></name></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">cols<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <name><name pos:line="7" pos:column="24">data<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">cols<pos:position pos:line="7" pos:column="34"/></name></name></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">rows<pos:position pos:line="9" pos:column="27"/></name></name><operator pos:line="9" pos:column="27">--<pos:position pos:line="9" pos:column="29"/></operator></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">data<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">cols<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">DIV_ROUND_UP<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name><name pos:line="10" pos:column="43">data<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">list<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">nr<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="59">data<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">-&gt;<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="65">rows<pos:position pos:line="10" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">data<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">cols<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">!=<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">cols<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">REALLOC_ARRAY<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name><name pos:line="12" pos:column="39">data<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">width<pos:position pos:line="12" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="52">data<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">cols<pos:position pos:line="12" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">compute_column_width<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">data<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><name pos:line="15" pos:column="17">total_width<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <call><name pos:line="15" pos:column="31">strlen<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name><name pos:line="15" pos:column="38">data<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">opts<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">.<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">indent<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
		<for pos:line="16" pos:column="17">for <control pos:line="16" pos:column="21">(<init><expr><name pos:line="16" pos:column="22">x<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></init> <condition><expr><name pos:line="16" pos:column="29">x<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">&lt;<pos:position pos:line="16" pos:column="35"/></operator> <name><name pos:line="16" pos:column="33">data<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">cols<pos:position pos:line="16" pos:column="43"/></name></name></expr>;<pos:position pos:line="16" pos:column="44"/></condition> <incr><expr><name pos:line="16" pos:column="45">x<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">++<pos:position pos:line="16" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="49"/></control> <block pos:line="16" pos:column="50">{
			<expr_stmt><expr><name pos:line="17" pos:column="25">total_width<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">+=<pos:position pos:line="17" pos:column="39"/></operator> <name><name pos:line="17" pos:column="40">data<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">len<pos:position pos:line="17" pos:column="49"/></name><index pos:line="17" pos:column="49">[<expr><name><name pos:line="17" pos:column="50">data<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">width<pos:position pos:line="17" pos:column="61"/></name><index pos:line="17" pos:column="61">[<expr><name pos:line="17" pos:column="62">x<pos:position pos:line="17" pos:column="63"/></name></expr>]<pos:position pos:line="17" pos:column="64"/></index></name></expr>]<pos:position pos:line="17" pos:column="65"/></index></name></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">total_width<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">+=<pos:position pos:line="18" pos:column="39"/></operator> <name><name pos:line="18" pos:column="40">data<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">opts<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">padding<pos:position pos:line="18" pos:column="58"/></name></name></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></for>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">total_width<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">&gt;<pos:position pos:line="20" pos:column="37"/></operator> <name><name pos:line="20" pos:column="35">data<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">opts<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">width<pos:position pos:line="20" pos:column="51"/></name></name></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52"> <block pos:line="20" pos:column="53">{
			<expr_stmt><expr><name><name pos:line="21" pos:column="25">data<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">rows<pos:position pos:line="21" pos:column="35"/></name></name> <operator pos:line="21" pos:column="36">=<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">rows<pos:position pos:line="21" pos:column="42"/></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="22" pos:column="25">data<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">cols<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">cols<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
			<break pos:line="23" pos:column="25">break;<pos:position pos:line="23" pos:column="31"/></break>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">compute_column_width<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">data<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

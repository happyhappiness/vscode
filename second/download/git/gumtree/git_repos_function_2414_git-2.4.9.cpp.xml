<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2414_git-2.4.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unpack_trees<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">unsigned<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">len<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">tree_desc<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">t<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">unpack_trees_options<pos:position pos:line="1" pos:column="80"/></name></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="82">o<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">ret<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">cache_entry<pos:position pos:line="4" pos:column="34"/></name></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">dfc<pos:position pos:line="4" pos:column="39"/></name></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">exclude_list<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">el<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">len<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&gt;<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="19">MAX_UNPACK_TREES<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">die<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><literal type="string" pos:line="8" pos:column="21">"unpack_trees takes at most %d trees"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="60">MAX_UNPACK_TREES<pos:position pos:line="8" pos:column="76"/></name></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="17">state<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="27">sizeof<argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">state<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">state<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">base_dir<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="string" pos:line="10" pos:column="26">""<pos:position pos:line="10" pos:column="28"/></literal></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">state<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">force<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">state<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">quiet<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="23">1<pos:position pos:line="12" pos:column="24"/></literal></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">state<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">refresh_cache<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">state<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">istate<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name><name pos:line="14" pos:column="25">o<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">result<pos:position pos:line="14" pos:column="34"/></name></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">memset<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="17">el<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="21">0<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="24">sizeof<argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">el<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">core_apply_sparse_checkout<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">||<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="44">!<pos:position pos:line="17" pos:column="45"/></operator><name><name pos:line="17" pos:column="45">o<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">update<pos:position pos:line="17" pos:column="54"/></name></name></expr>)<pos:position pos:line="17" pos:column="55"/></condition><then pos:line="17" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="17">o<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">skip_sparse_checkout<pos:position pos:line="18" pos:column="40"/></name></name> <operator pos:line="18" pos:column="41">=<pos:position pos:line="18" pos:column="42"/></operator> <literal type="number" pos:line="18" pos:column="43">1<pos:position pos:line="18" pos:column="44"/></literal></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name><name pos:line="19" pos:column="14">o<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">skip_sparse_checkout<pos:position pos:line="19" pos:column="37"/></name></name></expr>)<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38"> <block pos:line="19" pos:column="39">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">add_excludes_from_file_to_list<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><call><name pos:line="20" pos:column="52">git_path<pos:position pos:line="20" pos:column="60"/></name><argument_list pos:line="20" pos:column="60">(<argument><expr><literal type="string" pos:line="20" pos:column="61">"info/sparse-checkout"<pos:position pos:line="20" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="86">""<pos:position pos:line="20" pos:column="88"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="90">0<pos:position pos:line="20" pos:column="91"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="93">&amp;<pos:position pos:line="20" pos:column="98"/></operator><name pos:line="20" pos:column="94">el<pos:position pos:line="20" pos:column="96"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="98">0<pos:position pos:line="20" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="100"/></argument_list></call> <operator pos:line="20" pos:column="101">&lt;<pos:position pos:line="20" pos:column="105"/></operator> <literal type="number" pos:line="20" pos:column="103">0<pos:position pos:line="20" pos:column="104"/></literal></expr>)<pos:position pos:line="20" pos:column="105"/></condition><then pos:line="20" pos:column="105">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="25">o<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">skip_sparse_checkout<pos:position pos:line="21" pos:column="48"/></name></name> <operator pos:line="21" pos:column="49">=<pos:position pos:line="21" pos:column="50"/></operator> <literal type="number" pos:line="21" pos:column="51">1<pos:position pos:line="21" pos:column="52"/></literal></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="25">o<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">el<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <operator pos:line="23" pos:column="33">&amp;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="34">el<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">memset<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><operator pos:line="26" pos:column="16">&amp;<pos:position pos:line="26" pos:column="21"/></operator><name><name pos:line="26" pos:column="17">o<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">result<pos:position pos:line="26" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="31">sizeof<argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">o<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">result<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="27" pos:column="9">o<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">result<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">initialized<pos:position pos:line="27" pos:column="30"/></name></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <literal type="number" pos:line="27" pos:column="33">1<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">o<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">result<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">timestamp<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">.<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">sec<pos:position pos:line="28" pos:column="32"/></name></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <name><name pos:line="28" pos:column="35">o<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">src_index<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">timestamp<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">.<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">sec<pos:position pos:line="28" pos:column="62"/></name></name></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">o<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">result<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">.<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">timestamp<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">.<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">nsec<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <name><name pos:line="29" pos:column="36">o<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">src_index<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">timestamp<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">.<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">nsec<pos:position pos:line="29" pos:column="64"/></name></name></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">o<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">result<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">.<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">version<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <name><name pos:line="30" pos:column="29">o<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">src_index<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">version<pos:position pos:line="30" pos:column="50"/></name></name></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">o<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">result<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">split_index<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <name><name pos:line="31" pos:column="33">o<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">src_index<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">split_index<pos:position pos:line="31" pos:column="58"/></name></name></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">o<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">result<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">split_index<pos:position pos:line="32" pos:column="34"/></name></name></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="17">o<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">result<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">.<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">split_index<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">refcount<pos:position pos:line="33" pos:column="48"/></name></name><operator pos:line="33" pos:column="48">++<pos:position pos:line="33" pos:column="50"/></operator></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">hashcpy<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><name><name pos:line="34" pos:column="17">o<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">result<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">.<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">sha1<pos:position pos:line="34" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="33">o<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">-&gt;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="36">src_index<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">sha1<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">o<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">merge_size<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">len<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="36" pos:column="9">mark_all_ce_unused<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name><name pos:line="36" pos:column="28">o<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">src_index<pos:position pos:line="36" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>

	<comment type="block" pos:line="38" pos:column="9">/*
	 * Sparse checkout loop #1: set NEW_SKIP_WORKTREE on existing entries
	 */</comment>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name><name pos:line="41" pos:column="14">o<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">skip_sparse_checkout<pos:position pos:line="41" pos:column="37"/></name></name></expr>)<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">mark_new_skip_worktree<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><name><name pos:line="42" pos:column="40">o<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">el<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="47">o<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">-&gt;<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="50">src_index<pos:position pos:line="42" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="61">0<pos:position pos:line="42" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">CE_NEW_SKIP_WORKTREE<pos:position pos:line="42" pos:column="84"/></name></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="86"/></expr_stmt></block></then></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">dfc<pos:position pos:line="44" pos:column="17"/></name></expr>)<pos:position pos:line="44" pos:column="18"/></condition><then pos:line="44" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="17">dfc<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <call><name pos:line="45" pos:column="23">xcalloc<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><literal type="number" pos:line="45" pos:column="31">1<pos:position pos:line="45" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="34">cache_entry_size<pos:position pos:line="45" pos:column="50"/></name><argument_list pos:line="45" pos:column="50">(<argument><expr><literal type="number" pos:line="45" pos:column="51">0<pos:position pos:line="45" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">o<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">df_conflict_entry<pos:position pos:line="46" pos:column="29"/></name></name> <operator pos:line="46" pos:column="30">=<pos:position pos:line="46" pos:column="31"/></operator> <name pos:line="46" pos:column="32">dfc<pos:position pos:line="46" pos:column="35"/></name></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">len<pos:position pos:line="48" pos:column="16"/></name></expr>)<pos:position pos:line="48" pos:column="17"/></condition><then pos:line="48" pos:column="17"> <block pos:line="48" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="49" pos:column="17">const<pos:position pos:line="49" pos:column="22"/></specifier> <name pos:line="49" pos:column="23">char<pos:position pos:line="49" pos:column="27"/></name> <modifier pos:line="49" pos:column="28">*<pos:position pos:line="49" pos:column="29"/></modifier></type><name pos:line="49" pos:column="29">prefix<pos:position pos:line="49" pos:column="35"/></name> <init pos:line="49" pos:column="36">= <expr><ternary><condition><expr><name><name pos:line="49" pos:column="38">o<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">-&gt;<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="41">prefix<pos:position pos:line="49" pos:column="47"/></name></name></expr> ?<pos:position pos:line="49" pos:column="49"/></condition><then pos:line="49" pos:column="49"> <expr><name><name pos:line="49" pos:column="50">o<pos:position pos:line="49" pos:column="51"/></name><operator pos:line="49" pos:column="51">-&gt;<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="53">prefix<pos:position pos:line="49" pos:column="59"/></name></name></expr> <pos:position pos:line="49" pos:column="60"/></then><else pos:line="49" pos:column="60">: <expr><literal type="string" pos:line="49" pos:column="62">""<pos:position pos:line="49" pos:column="64"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="49" pos:column="65"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="50" pos:column="17">struct<pos:position pos:line="50" pos:column="23"/></name> <name pos:line="50" pos:column="24">traverse_info<pos:position pos:line="50" pos:column="37"/></name></name></type> <name pos:line="50" pos:column="38">info<pos:position pos:line="50" pos:column="42"/></name></decl>;<pos:position pos:line="50" pos:column="43"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="52" pos:column="17">setup_traverse_info<pos:position pos:line="52" pos:column="36"/></name><argument_list pos:line="52" pos:column="36">(<argument><expr><operator pos:line="52" pos:column="37">&amp;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="38">info<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">prefix<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="53" pos:column="17">info<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">.<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">fn<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">unpack_callback<pos:position pos:line="53" pos:column="42"/></name></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="54" pos:column="17">info<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">.<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">data<pos:position pos:line="54" pos:column="26"/></name></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <name pos:line="54" pos:column="29">o<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">info<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">.<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">show_all_errors<pos:position pos:line="55" pos:column="37"/></name></name> <operator pos:line="55" pos:column="38">=<pos:position pos:line="55" pos:column="39"/></operator> <name><name pos:line="55" pos:column="40">o<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">show_all_errors<pos:position pos:line="55" pos:column="58"/></name></name></expr>;<pos:position pos:line="55" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="56" pos:column="17">info<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">.<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">pathspec<pos:position pos:line="56" pos:column="30"/></name></name> <operator pos:line="56" pos:column="31">=<pos:position pos:line="56" pos:column="32"/></operator> <name><name pos:line="56" pos:column="33">o<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">pathspec<pos:position pos:line="56" pos:column="44"/></name></name></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>

		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name><name pos:line="58" pos:column="21">o<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">prefix<pos:position pos:line="58" pos:column="30"/></name></name></expr>)<pos:position pos:line="58" pos:column="31"/></condition><then pos:line="58" pos:column="31"> <block pos:line="58" pos:column="32">{
			<comment type="block" pos:line="59" pos:column="25">/*
			 * Unpack existing index entries that sort before the
			 * prefix the tree is spliced into.  Note that o-&gt;merge
			 * is always true in this case.
			 */</comment>
			<while pos:line="64" pos:column="25">while <condition pos:line="64" pos:column="31">(<expr><literal type="number" pos:line="64" pos:column="32">1<pos:position pos:line="64" pos:column="33"/></literal></expr>)<pos:position pos:line="64" pos:column="34"/></condition> <block pos:line="64" pos:column="35">{
				<decl_stmt><decl><type><name><name pos:line="65" pos:column="33">struct<pos:position pos:line="65" pos:column="39"/></name> <name pos:line="65" pos:column="40">cache_entry<pos:position pos:line="65" pos:column="51"/></name></name> <modifier pos:line="65" pos:column="52">*<pos:position pos:line="65" pos:column="53"/></modifier></type><name pos:line="65" pos:column="53">ce<pos:position pos:line="65" pos:column="55"/></name> <init pos:line="65" pos:column="56">= <expr><call><name pos:line="65" pos:column="58">next_cache_entry<pos:position pos:line="65" pos:column="74"/></name><argument_list pos:line="65" pos:column="74">(<argument><expr><name pos:line="65" pos:column="75">o<pos:position pos:line="65" pos:column="76"/></name></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="78"/></decl_stmt>
				<if pos:line="66" pos:column="33">if <condition pos:line="66" pos:column="36">(<expr><operator pos:line="66" pos:column="37">!<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="38">ce<pos:position pos:line="66" pos:column="40"/></name></expr>)<pos:position pos:line="66" pos:column="41"/></condition><then pos:line="66" pos:column="41">
					<block type="pseudo"><break pos:line="67" pos:column="41">break;<pos:position pos:line="67" pos:column="47"/></break></block></then></if>
				<if pos:line="68" pos:column="33">if <condition pos:line="68" pos:column="36">(<expr><call><name pos:line="68" pos:column="37">ce_in_traverse_path<pos:position pos:line="68" pos:column="56"/></name><argument_list pos:line="68" pos:column="56">(<argument><expr><name pos:line="68" pos:column="57">ce<pos:position pos:line="68" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="61">&amp;<pos:position pos:line="68" pos:column="66"/></operator><name pos:line="68" pos:column="62">info<pos:position pos:line="68" pos:column="66"/></name></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="68"/></condition><then pos:line="68" pos:column="68">
					<block type="pseudo"><break pos:line="69" pos:column="41">break;<pos:position pos:line="69" pos:column="47"/></break></block></then></if>
				<if pos:line="70" pos:column="33">if <condition pos:line="70" pos:column="36">(<expr><call><name pos:line="70" pos:column="37">unpack_index_entry<pos:position pos:line="70" pos:column="55"/></name><argument_list pos:line="70" pos:column="55">(<argument><expr><name pos:line="70" pos:column="56">ce<pos:position pos:line="70" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="60">o<pos:position pos:line="70" pos:column="61"/></name></expr></argument>)<pos:position pos:line="70" pos:column="62"/></argument_list></call> <operator pos:line="70" pos:column="63">&lt;<pos:position pos:line="70" pos:column="67"/></operator> <literal type="number" pos:line="70" pos:column="65">0<pos:position pos:line="70" pos:column="66"/></literal></expr>)<pos:position pos:line="70" pos:column="67"/></condition><then pos:line="70" pos:column="67">
					<block type="pseudo"><goto pos:line="71" pos:column="41">goto <name pos:line="71" pos:column="46">return_failed<pos:position pos:line="71" pos:column="59"/></name>;<pos:position pos:line="71" pos:column="60"/></goto></block></then></if>
			}<pos:position pos:line="72" pos:column="26"/></block></while>
		}<pos:position pos:line="73" pos:column="18"/></block></then></if>

		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><call><name pos:line="75" pos:column="21">traverse_trees<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">(<argument><expr><name pos:line="75" pos:column="36">len<pos:position pos:line="75" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="41">t<pos:position pos:line="75" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="44">&amp;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="45">info<pos:position pos:line="75" pos:column="49"/></name></expr></argument>)<pos:position pos:line="75" pos:column="50"/></argument_list></call> <operator pos:line="75" pos:column="51">&lt;<pos:position pos:line="75" pos:column="55"/></operator> <literal type="number" pos:line="75" pos:column="53">0<pos:position pos:line="75" pos:column="54"/></literal></expr>)<pos:position pos:line="75" pos:column="55"/></condition><then pos:line="75" pos:column="55">
			<block type="pseudo"><goto pos:line="76" pos:column="25">goto <name pos:line="76" pos:column="30">return_failed<pos:position pos:line="76" pos:column="43"/></name>;<pos:position pos:line="76" pos:column="44"/></goto></block></then></if>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="79" pos:column="9">/* Any left-over entries in the index? */</comment>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name><name pos:line="80" pos:column="13">o<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">-&gt;<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="16">merge<pos:position pos:line="80" pos:column="21"/></name></name></expr>)<pos:position pos:line="80" pos:column="22"/></condition><then pos:line="80" pos:column="22"> <block pos:line="80" pos:column="23">{
		<while pos:line="81" pos:column="17">while <condition pos:line="81" pos:column="23">(<expr><literal type="number" pos:line="81" pos:column="24">1<pos:position pos:line="81" pos:column="25"/></literal></expr>)<pos:position pos:line="81" pos:column="26"/></condition> <block pos:line="81" pos:column="27">{
			<decl_stmt><decl><type><name><name pos:line="82" pos:column="25">struct<pos:position pos:line="82" pos:column="31"/></name> <name pos:line="82" pos:column="32">cache_entry<pos:position pos:line="82" pos:column="43"/></name></name> <modifier pos:line="82" pos:column="44">*<pos:position pos:line="82" pos:column="45"/></modifier></type><name pos:line="82" pos:column="45">ce<pos:position pos:line="82" pos:column="47"/></name> <init pos:line="82" pos:column="48">= <expr><call><name pos:line="82" pos:column="50">next_cache_entry<pos:position pos:line="82" pos:column="66"/></name><argument_list pos:line="82" pos:column="66">(<argument><expr><name pos:line="82" pos:column="67">o<pos:position pos:line="82" pos:column="68"/></name></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="70"/></decl_stmt>
			<if pos:line="83" pos:column="25">if <condition pos:line="83" pos:column="28">(<expr><operator pos:line="83" pos:column="29">!<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">ce<pos:position pos:line="83" pos:column="32"/></name></expr>)<pos:position pos:line="83" pos:column="33"/></condition><then pos:line="83" pos:column="33">
				<block type="pseudo"><break pos:line="84" pos:column="33">break;<pos:position pos:line="84" pos:column="39"/></break></block></then></if>
			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><call><name pos:line="85" pos:column="29">unpack_index_entry<pos:position pos:line="85" pos:column="47"/></name><argument_list pos:line="85" pos:column="47">(<argument><expr><name pos:line="85" pos:column="48">ce<pos:position pos:line="85" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="52">o<pos:position pos:line="85" pos:column="53"/></name></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call> <operator pos:line="85" pos:column="55">&lt;<pos:position pos:line="85" pos:column="59"/></operator> <literal type="number" pos:line="85" pos:column="57">0<pos:position pos:line="85" pos:column="58"/></literal></expr>)<pos:position pos:line="85" pos:column="59"/></condition><then pos:line="85" pos:column="59">
				<block type="pseudo"><goto pos:line="86" pos:column="33">goto <name pos:line="86" pos:column="38">return_failed<pos:position pos:line="86" pos:column="51"/></name>;<pos:position pos:line="86" pos:column="52"/></goto></block></then></if>
		}<pos:position pos:line="87" pos:column="18"/></block></while>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="89" pos:column="9">mark_all_ce_unused<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><name><name pos:line="89" pos:column="28">o<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">-&gt;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="31">src_index<pos:position pos:line="89" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="42"/></expr_stmt>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name><name pos:line="91" pos:column="13">o<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">-&gt;<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="16">trivial_merges_only<pos:position pos:line="91" pos:column="35"/></name></name> <operator pos:line="91" pos:column="36">&amp;&amp;<pos:position pos:line="91" pos:column="46"/></operator> <name><name pos:line="91" pos:column="39">o<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">-&gt;<pos:position pos:line="91" pos:column="45"/></operator><name pos:line="91" pos:column="42">nontrivial_merge<pos:position pos:line="91" pos:column="58"/></name></name></expr>)<pos:position pos:line="91" pos:column="59"/></condition><then pos:line="91" pos:column="59"> <block pos:line="91" pos:column="60">{
		<expr_stmt><expr><name pos:line="92" pos:column="17">ret<pos:position pos:line="92" pos:column="20"/></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <call><name pos:line="92" pos:column="23">unpack_failed<pos:position pos:line="92" pos:column="36"/></name><argument_list pos:line="92" pos:column="36">(<argument><expr><name pos:line="92" pos:column="37">o<pos:position pos:line="92" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="40">"Merge requires file-level merging"<pos:position pos:line="92" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="77"/></expr_stmt>
		<goto pos:line="93" pos:column="17">goto <name pos:line="93" pos:column="22">done<pos:position pos:line="93" pos:column="26"/></name>;<pos:position pos:line="93" pos:column="27"/></goto>
	}<pos:position pos:line="94" pos:column="10"/></block></then></if>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><name><name pos:line="96" pos:column="14">o<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">-&gt;<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="17">skip_sparse_checkout<pos:position pos:line="96" pos:column="37"/></name></name></expr>)<pos:position pos:line="96" pos:column="38"/></condition><then pos:line="96" pos:column="38"> <block pos:line="96" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="97" pos:column="17">int<pos:position pos:line="97" pos:column="20"/></name></type> <name pos:line="97" pos:column="21">empty_worktree<pos:position pos:line="97" pos:column="35"/></name> <init pos:line="97" pos:column="36">= <expr><literal type="number" pos:line="97" pos:column="38">1<pos:position pos:line="97" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="97" pos:column="40"/></decl_stmt>

		<comment type="block" pos:line="99" pos:column="17">/*
		 * Sparse checkout loop #2: set NEW_SKIP_WORKTREE on entries not in loop #1
		 * If the will have NEW_SKIP_WORKTREE, also set CE_SKIP_WORKTREE
		 * so apply_sparse_checkout() won't attempt to remove it from worktree
		 */</comment>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">mark_new_skip_worktree<pos:position pos:line="104" pos:column="39"/></name><argument_list pos:line="104" pos:column="39">(<argument><expr><name><name pos:line="104" pos:column="40">o<pos:position pos:line="104" pos:column="41"/></name><operator pos:line="104" pos:column="41">-&gt;<pos:position pos:line="104" pos:column="46"/></operator><name pos:line="104" pos:column="43">el<pos:position pos:line="104" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="47">&amp;<pos:position pos:line="104" pos:column="52"/></operator><name><name pos:line="104" pos:column="48">o<pos:position pos:line="104" pos:column="49"/></name><operator pos:line="104" pos:column="49">-&gt;<pos:position pos:line="104" pos:column="54"/></operator><name pos:line="104" pos:column="51">result<pos:position pos:line="104" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="59">CE_ADDED<pos:position pos:line="104" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="69">CE_SKIP_WORKTREE<pos:position pos:line="104" pos:column="85"/></name> <operator pos:line="104" pos:column="86">|<pos:position pos:line="104" pos:column="87"/></operator> <name pos:line="104" pos:column="88">CE_NEW_SKIP_WORKTREE<pos:position pos:line="104" pos:column="108"/></name></expr></argument>)<pos:position pos:line="104" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="110"/></expr_stmt>

		<expr_stmt><expr><name pos:line="106" pos:column="17">ret<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <literal type="number" pos:line="106" pos:column="23">0<pos:position pos:line="106" pos:column="24"/></literal></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
		<for pos:line="107" pos:column="17">for <control pos:line="107" pos:column="21">(<init><expr><name pos:line="107" pos:column="22">i<pos:position pos:line="107" pos:column="23"/></name> <operator pos:line="107" pos:column="24">=<pos:position pos:line="107" pos:column="25"/></operator> <literal type="number" pos:line="107" pos:column="26">0<pos:position pos:line="107" pos:column="27"/></literal></expr>;<pos:position pos:line="107" pos:column="28"/></init> <condition><expr><name pos:line="107" pos:column="29">i<pos:position pos:line="107" pos:column="30"/></name> <operator pos:line="107" pos:column="31">&lt;<pos:position pos:line="107" pos:column="35"/></operator> <name><name pos:line="107" pos:column="33">o<pos:position pos:line="107" pos:column="34"/></name><operator pos:line="107" pos:column="34">-&gt;<pos:position pos:line="107" pos:column="39"/></operator><name pos:line="107" pos:column="36">result<pos:position pos:line="107" pos:column="42"/></name><operator pos:line="107" pos:column="42">.<pos:position pos:line="107" pos:column="43"/></operator><name pos:line="107" pos:column="43">cache_nr<pos:position pos:line="107" pos:column="51"/></name></name></expr>;<pos:position pos:line="107" pos:column="52"/></condition> <incr><expr><name pos:line="107" pos:column="53">i<pos:position pos:line="107" pos:column="54"/></name><operator pos:line="107" pos:column="54">++<pos:position pos:line="107" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="107" pos:column="57"/></control> <block pos:line="107" pos:column="58">{
			<decl_stmt><decl><type><name><name pos:line="108" pos:column="25">struct<pos:position pos:line="108" pos:column="31"/></name> <name pos:line="108" pos:column="32">cache_entry<pos:position pos:line="108" pos:column="43"/></name></name> <modifier pos:line="108" pos:column="44">*<pos:position pos:line="108" pos:column="45"/></modifier></type><name pos:line="108" pos:column="45">ce<pos:position pos:line="108" pos:column="47"/></name> <init pos:line="108" pos:column="48">= <expr><name><name pos:line="108" pos:column="50">o<pos:position pos:line="108" pos:column="51"/></name><operator pos:line="108" pos:column="51">-&gt;<pos:position pos:line="108" pos:column="56"/></operator><name pos:line="108" pos:column="53">result<pos:position pos:line="108" pos:column="59"/></name><operator pos:line="108" pos:column="59">.<pos:position pos:line="108" pos:column="60"/></operator><name pos:line="108" pos:column="60">cache<pos:position pos:line="108" pos:column="65"/></name><index pos:line="108" pos:column="65">[<expr><name pos:line="108" pos:column="66">i<pos:position pos:line="108" pos:column="67"/></name></expr>]<pos:position pos:line="108" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="108" pos:column="69"/></decl_stmt>

			<comment type="block" pos:line="110" pos:column="25">/*
			 * Entries marked with CE_ADDED in merged_entry() do not have
			 * verify_absent() check (the check is effectively disabled
			 * because CE_NEW_SKIP_WORKTREE is set unconditionally).
			 *
			 * Do the real check now because we have had
			 * correct CE_NEW_SKIP_WORKTREE
			 */</comment>
			<if pos:line="118" pos:column="25">if <condition pos:line="118" pos:column="28">(<expr><name><name pos:line="118" pos:column="29">ce<pos:position pos:line="118" pos:column="31"/></name><operator pos:line="118" pos:column="31">-&gt;<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="33">ce_flags<pos:position pos:line="118" pos:column="41"/></name></name> <operator pos:line="118" pos:column="42">&amp;<pos:position pos:line="118" pos:column="47"/></operator> <name pos:line="118" pos:column="44">CE_ADDED<pos:position pos:line="118" pos:column="52"/></name> <operator pos:line="118" pos:column="53">&amp;&amp;<pos:position pos:line="118" pos:column="63"/></operator>
			    <call><name pos:line="119" pos:column="29">verify_absent<pos:position pos:line="119" pos:column="42"/></name><argument_list pos:line="119" pos:column="42">(<argument><expr><name pos:line="119" pos:column="43">ce<pos:position pos:line="119" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="47">ERROR_WOULD_LOSE_UNTRACKED_OVERWRITTEN<pos:position pos:line="119" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="87">o<pos:position pos:line="119" pos:column="88"/></name></expr></argument>)<pos:position pos:line="119" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="90"/></condition><then pos:line="119" pos:column="90"> <block pos:line="119" pos:column="91">{
				<if pos:line="120" pos:column="33">if <condition pos:line="120" pos:column="36">(<expr><operator pos:line="120" pos:column="37">!<pos:position pos:line="120" pos:column="38"/></operator><name><name pos:line="120" pos:column="38">o<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">-&gt;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="41">show_all_errors<pos:position pos:line="120" pos:column="56"/></name></name></expr>)<pos:position pos:line="120" pos:column="57"/></condition><then pos:line="120" pos:column="57">
					<block type="pseudo"><goto pos:line="121" pos:column="41">goto <name pos:line="121" pos:column="46">return_failed<pos:position pos:line="121" pos:column="59"/></name>;<pos:position pos:line="121" pos:column="60"/></goto></block></then></if>
				<expr_stmt><expr><name pos:line="122" pos:column="33">ret<pos:position pos:line="122" pos:column="36"/></name> <operator pos:line="122" pos:column="37">=<pos:position pos:line="122" pos:column="38"/></operator> <operator pos:line="122" pos:column="39">-<pos:position pos:line="122" pos:column="40"/></operator><literal type="number" pos:line="122" pos:column="40">1<pos:position pos:line="122" pos:column="41"/></literal></expr>;<pos:position pos:line="122" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="123" pos:column="26"/></block></then></if>

			<if pos:line="125" pos:column="25">if <condition pos:line="125" pos:column="28">(<expr><call><name pos:line="125" pos:column="29">apply_sparse_checkout<pos:position pos:line="125" pos:column="50"/></name><argument_list pos:line="125" pos:column="50">(<argument><expr><operator pos:line="125" pos:column="51">&amp;<pos:position pos:line="125" pos:column="56"/></operator><name><name pos:line="125" pos:column="52">o<pos:position pos:line="125" pos:column="53"/></name><operator pos:line="125" pos:column="53">-&gt;<pos:position pos:line="125" pos:column="58"/></operator><name pos:line="125" pos:column="55">result<pos:position pos:line="125" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="63">ce<pos:position pos:line="125" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="67">o<pos:position pos:line="125" pos:column="68"/></name></expr></argument>)<pos:position pos:line="125" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="70"/></condition><then pos:line="125" pos:column="70"> <block pos:line="125" pos:column="71">{
				<if pos:line="126" pos:column="33">if <condition pos:line="126" pos:column="36">(<expr><operator pos:line="126" pos:column="37">!<pos:position pos:line="126" pos:column="38"/></operator><name><name pos:line="126" pos:column="38">o<pos:position pos:line="126" pos:column="39"/></name><operator pos:line="126" pos:column="39">-&gt;<pos:position pos:line="126" pos:column="44"/></operator><name pos:line="126" pos:column="41">show_all_errors<pos:position pos:line="126" pos:column="56"/></name></name></expr>)<pos:position pos:line="126" pos:column="57"/></condition><then pos:line="126" pos:column="57">
					<block type="pseudo"><goto pos:line="127" pos:column="41">goto <name pos:line="127" pos:column="46">return_failed<pos:position pos:line="127" pos:column="59"/></name>;<pos:position pos:line="127" pos:column="60"/></goto></block></then></if>
				<expr_stmt><expr><name pos:line="128" pos:column="33">ret<pos:position pos:line="128" pos:column="36"/></name> <operator pos:line="128" pos:column="37">=<pos:position pos:line="128" pos:column="38"/></operator> <operator pos:line="128" pos:column="39">-<pos:position pos:line="128" pos:column="40"/></operator><literal type="number" pos:line="128" pos:column="40">1<pos:position pos:line="128" pos:column="41"/></literal></expr>;<pos:position pos:line="128" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="129" pos:column="26"/></block></then></if>
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><operator pos:line="130" pos:column="29">!<pos:position pos:line="130" pos:column="30"/></operator><call><name pos:line="130" pos:column="30">ce_skip_worktree<pos:position pos:line="130" pos:column="46"/></name><argument_list pos:line="130" pos:column="46">(<argument><expr><name pos:line="130" pos:column="47">ce<pos:position pos:line="130" pos:column="49"/></name></expr></argument>)<pos:position pos:line="130" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="51"/></condition><then pos:line="130" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="131" pos:column="33">empty_worktree<pos:position pos:line="131" pos:column="47"/></name> <operator pos:line="131" pos:column="48">=<pos:position pos:line="131" pos:column="49"/></operator> <literal type="number" pos:line="131" pos:column="50">0<pos:position pos:line="131" pos:column="51"/></literal></expr>;<pos:position pos:line="131" pos:column="52"/></expr_stmt></block></then></if>

		}<pos:position pos:line="133" pos:column="18"/></block></for>
		<if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><name pos:line="134" pos:column="21">ret<pos:position pos:line="134" pos:column="24"/></name> <operator pos:line="134" pos:column="25">&lt;<pos:position pos:line="134" pos:column="29"/></operator> <literal type="number" pos:line="134" pos:column="27">0<pos:position pos:line="134" pos:column="28"/></literal></expr>)<pos:position pos:line="134" pos:column="29"/></condition><then pos:line="134" pos:column="29">
			<block type="pseudo"><goto pos:line="135" pos:column="25">goto <name pos:line="135" pos:column="30">return_failed<pos:position pos:line="135" pos:column="43"/></name>;<pos:position pos:line="135" pos:column="44"/></goto></block></then></if>
		<comment type="block" pos:line="136" pos:column="17">/*
		 * Sparse checkout is meant to narrow down checkout area
		 * but it does not make sense to narrow down to empty working
		 * tree. This is usually a mistake in sparse checkout rules.
		 * Do not allow users to do that.
		 */</comment>
		<if pos:line="142" pos:column="17">if <condition pos:line="142" pos:column="20">(<expr><name><name pos:line="142" pos:column="21">o<pos:position pos:line="142" pos:column="22"/></name><operator pos:line="142" pos:column="22">-&gt;<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="24">result<pos:position pos:line="142" pos:column="30"/></name><operator pos:line="142" pos:column="30">.<pos:position pos:line="142" pos:column="31"/></operator><name pos:line="142" pos:column="31">cache_nr<pos:position pos:line="142" pos:column="39"/></name></name> <operator pos:line="142" pos:column="40">&amp;&amp;<pos:position pos:line="142" pos:column="50"/></operator> <name pos:line="142" pos:column="43">empty_worktree<pos:position pos:line="142" pos:column="57"/></name></expr>)<pos:position pos:line="142" pos:column="58"/></condition><then pos:line="142" pos:column="58"> <block pos:line="142" pos:column="59">{
			<expr_stmt><expr><name pos:line="143" pos:column="25">ret<pos:position pos:line="143" pos:column="28"/></name> <operator pos:line="143" pos:column="29">=<pos:position pos:line="143" pos:column="30"/></operator> <call><name pos:line="143" pos:column="31">unpack_failed<pos:position pos:line="143" pos:column="44"/></name><argument_list pos:line="143" pos:column="44">(<argument><expr><name pos:line="143" pos:column="45">o<pos:position pos:line="143" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="48">"Sparse checkout leaves no entry on working directory"<pos:position pos:line="143" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="104"/></expr_stmt>
			<goto pos:line="144" pos:column="25">goto <name pos:line="144" pos:column="30">done<pos:position pos:line="144" pos:column="34"/></name>;<pos:position pos:line="144" pos:column="35"/></goto>
		}<pos:position pos:line="145" pos:column="18"/></block></then></if>
	}<pos:position pos:line="146" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="148" pos:column="9">o<pos:position pos:line="148" pos:column="10"/></name><operator pos:line="148" pos:column="10">-&gt;<pos:position pos:line="148" pos:column="15"/></operator><name pos:line="148" pos:column="12">src_index<pos:position pos:line="148" pos:column="21"/></name></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <name pos:line="148" pos:column="24">NULL<pos:position pos:line="148" pos:column="28"/></name></expr>;<pos:position pos:line="148" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="149" pos:column="9">ret<pos:position pos:line="149" pos:column="12"/></name> <operator pos:line="149" pos:column="13">=<pos:position pos:line="149" pos:column="14"/></operator> <ternary><condition><expr><call><name pos:line="149" pos:column="15">check_updates<pos:position pos:line="149" pos:column="28"/></name><argument_list pos:line="149" pos:column="28">(<argument><expr><name pos:line="149" pos:column="29">o<pos:position pos:line="149" pos:column="30"/></name></expr></argument>)<pos:position pos:line="149" pos:column="31"/></argument_list></call></expr> ?<pos:position pos:line="149" pos:column="33"/></condition><then pos:line="149" pos:column="33"> <expr><operator pos:line="149" pos:column="34">(<pos:position pos:line="149" pos:column="35"/></operator><operator pos:line="149" pos:column="35">-<pos:position pos:line="149" pos:column="36"/></operator><literal type="number" pos:line="149" pos:column="36">2<pos:position pos:line="149" pos:column="37"/></literal><operator pos:line="149" pos:column="37">)<pos:position pos:line="149" pos:column="38"/></operator></expr> <pos:position pos:line="149" pos:column="39"/></then><else pos:line="149" pos:column="39">: <expr><literal type="number" pos:line="149" pos:column="41">0<pos:position pos:line="149" pos:column="42"/></literal></expr></else></ternary></expr>;<pos:position pos:line="149" pos:column="43"/></expr_stmt>
	<if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><name><name pos:line="150" pos:column="13">o<pos:position pos:line="150" pos:column="14"/></name><operator pos:line="150" pos:column="14">-&gt;<pos:position pos:line="150" pos:column="19"/></operator><name pos:line="150" pos:column="16">dst_index<pos:position pos:line="150" pos:column="25"/></name></name></expr>)<pos:position pos:line="150" pos:column="26"/></condition><then pos:line="150" pos:column="26"> <block pos:line="150" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="151" pos:column="17">discard_index<pos:position pos:line="151" pos:column="30"/></name><argument_list pos:line="151" pos:column="30">(<argument><expr><name><name pos:line="151" pos:column="31">o<pos:position pos:line="151" pos:column="32"/></name><operator pos:line="151" pos:column="32">-&gt;<pos:position pos:line="151" pos:column="37"/></operator><name pos:line="151" pos:column="34">dst_index<pos:position pos:line="151" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="152" pos:column="17">*<pos:position pos:line="152" pos:column="18"/></operator><name><name pos:line="152" pos:column="18">o<pos:position pos:line="152" pos:column="19"/></name><operator pos:line="152" pos:column="19">-&gt;<pos:position pos:line="152" pos:column="24"/></operator><name pos:line="152" pos:column="21">dst_index<pos:position pos:line="152" pos:column="30"/></name></name> <operator pos:line="152" pos:column="31">=<pos:position pos:line="152" pos:column="32"/></operator> <name><name pos:line="152" pos:column="33">o<pos:position pos:line="152" pos:column="34"/></name><operator pos:line="152" pos:column="34">-&gt;<pos:position pos:line="152" pos:column="39"/></operator><name pos:line="152" pos:column="36">result<pos:position pos:line="152" pos:column="42"/></name></name></expr>;<pos:position pos:line="152" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="153" pos:column="10"/></block></then> <else pos:line="153" pos:column="11">else <block pos:line="153" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="154" pos:column="17">discard_index<pos:position pos:line="154" pos:column="30"/></name><argument_list pos:line="154" pos:column="30">(<argument><expr><operator pos:line="154" pos:column="31">&amp;<pos:position pos:line="154" pos:column="36"/></operator><name><name pos:line="154" pos:column="32">o<pos:position pos:line="154" pos:column="33"/></name><operator pos:line="154" pos:column="33">-&gt;<pos:position pos:line="154" pos:column="38"/></operator><name pos:line="154" pos:column="35">result<pos:position pos:line="154" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="155" pos:column="10"/></block></else></if>

<label><name pos:line="157" pos:column="1">done<pos:position pos:line="157" pos:column="5"/></name>:<pos:position pos:line="157" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="158" pos:column="9">clear_exclude_list<pos:position pos:line="158" pos:column="27"/></name><argument_list pos:line="158" pos:column="27">(<argument><expr><operator pos:line="158" pos:column="28">&amp;<pos:position pos:line="158" pos:column="33"/></operator><name pos:line="158" pos:column="29">el<pos:position pos:line="158" pos:column="31"/></name></expr></argument>)<pos:position pos:line="158" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="33"/></expr_stmt>
	<return pos:line="159" pos:column="9">return <expr><name pos:line="159" pos:column="16">ret<pos:position pos:line="159" pos:column="19"/></name></expr>;<pos:position pos:line="159" pos:column="20"/></return>

<label><name pos:line="161" pos:column="1">return_failed<pos:position pos:line="161" pos:column="14"/></name>:<pos:position pos:line="161" pos:column="15"/></label>
	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name><name pos:line="162" pos:column="13">o<pos:position pos:line="162" pos:column="14"/></name><operator pos:line="162" pos:column="14">-&gt;<pos:position pos:line="162" pos:column="19"/></operator><name pos:line="162" pos:column="16">show_all_errors<pos:position pos:line="162" pos:column="31"/></name></name></expr>)<pos:position pos:line="162" pos:column="32"/></condition><then pos:line="162" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="17">display_error_msgs<pos:position pos:line="163" pos:column="35"/></name><argument_list pos:line="163" pos:column="35">(<argument><expr><name pos:line="163" pos:column="36">o<pos:position pos:line="163" pos:column="37"/></name></expr></argument>)<pos:position pos:line="163" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="39"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="164" pos:column="9">mark_all_ce_unused<pos:position pos:line="164" pos:column="27"/></name><argument_list pos:line="164" pos:column="27">(<argument><expr><name><name pos:line="164" pos:column="28">o<pos:position pos:line="164" pos:column="29"/></name><operator pos:line="164" pos:column="29">-&gt;<pos:position pos:line="164" pos:column="34"/></operator><name pos:line="164" pos:column="31">src_index<pos:position pos:line="164" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="165" pos:column="9">ret<pos:position pos:line="165" pos:column="12"/></name> <operator pos:line="165" pos:column="13">=<pos:position pos:line="165" pos:column="14"/></operator> <call><name pos:line="165" pos:column="15">unpack_failed<pos:position pos:line="165" pos:column="28"/></name><argument_list pos:line="165" pos:column="28">(<argument><expr><name pos:line="165" pos:column="29">o<pos:position pos:line="165" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="32">NULL<pos:position pos:line="165" pos:column="36"/></name></expr></argument>)<pos:position pos:line="165" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="38"/></expr_stmt>
	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name><name pos:line="166" pos:column="13">o<pos:position pos:line="166" pos:column="14"/></name><operator pos:line="166" pos:column="14">-&gt;<pos:position pos:line="166" pos:column="19"/></operator><name pos:line="166" pos:column="16">exiting_early<pos:position pos:line="166" pos:column="29"/></name></name></expr>)<pos:position pos:line="166" pos:column="30"/></condition><then pos:line="166" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="167" pos:column="17">ret<pos:position pos:line="167" pos:column="20"/></name> <operator pos:line="167" pos:column="21">=<pos:position pos:line="167" pos:column="22"/></operator> <literal type="number" pos:line="167" pos:column="23">0<pos:position pos:line="167" pos:column="24"/></literal></expr>;<pos:position pos:line="167" pos:column="25"/></expr_stmt></block></then></if>
	<goto pos:line="168" pos:column="9">goto <name pos:line="168" pos:column="14">done<pos:position pos:line="168" pos:column="18"/></name>;<pos:position pos:line="168" pos:column="19"/></goto>
}<pos:position pos:line="169" pos:column="2"/></block></function></unit>

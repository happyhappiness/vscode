<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3762_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">fetch_populated_submodules<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">argv_array<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">options<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">prefix<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">command_line_option<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="3" pos:column="32">int<pos:position pos:line="3" pos:column="35"/></name></type> <name pos:line="3" pos:column="36">quiet<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="43">int<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">max_parallel_jobs<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">submodule_parallel_fetch<pos:position pos:line="6" pos:column="40"/></name></name></type> <name pos:line="6" pos:column="41">spf<pos:position pos:line="6" pos:column="44"/></name> <init pos:line="6" pos:column="45">= <expr><name pos:line="6" pos:column="47">SPF_INIT<pos:position pos:line="6" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="8" pos:column="9">spf<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">work_tree<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <call><name pos:line="8" pos:column="25">get_git_work_tree<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">()<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">spf<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">.<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">command_line_option<pos:position pos:line="9" pos:column="32"/></name></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">command_line_option<pos:position pos:line="9" pos:column="54"/></name></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">spf<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">quiet<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">quiet<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">spf<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">.<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">prefix<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">prefix<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">spf<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">work_tree<pos:position pos:line="13" pos:column="27"/></name></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
		<block type="pseudo"><goto pos:line="14" pos:column="17">goto <name pos:line="14" pos:column="22">out<pos:position pos:line="14" pos:column="25"/></name>;<pos:position pos:line="14" pos:column="26"/></goto></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">read_cache<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">()<pos:position pos:line="16" pos:column="25"/></argument_list></call> <operator pos:line="16" pos:column="26">&lt;<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"index file corrupt"<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">argv_array_push<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">&amp;<pos:position pos:line="19" pos:column="30"/></operator><name><name pos:line="19" pos:column="26">spf<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">args<pos:position pos:line="19" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="36">"fetch"<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="25">options<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">argc<pos:position pos:line="20" pos:column="38"/></name></name></expr>;<pos:position pos:line="20" pos:column="39"/></condition> <incr><expr><name pos:line="20" pos:column="40">i<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">++<pos:position pos:line="20" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="44"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">argv_array_push<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator><name><name pos:line="21" pos:column="34">spf<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">.<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">args<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="44">options<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">-&gt;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="53">argv<pos:position pos:line="21" pos:column="57"/></name><index pos:line="21" pos:column="57">[<expr><name pos:line="21" pos:column="58">i<pos:position pos:line="21" pos:column="59"/></name></expr>]<pos:position pos:line="21" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">argv_array_push<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><operator pos:line="22" pos:column="25">&amp;<pos:position pos:line="22" pos:column="30"/></operator><name><name pos:line="22" pos:column="26">spf<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">args<pos:position pos:line="22" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="36">"--recurse-submodules-default"<pos:position pos:line="22" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
	<comment type="block" pos:line="23" pos:column="9">/* default value, "--submodule-prefix" and its value are added later */</comment>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">max_parallel_jobs<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">&lt;<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="33">0<pos:position pos:line="25" pos:column="34"/></literal></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">max_parallel_jobs<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">parallel_jobs<pos:position pos:line="26" pos:column="50"/></name></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">calculate_changed_submodule_paths<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">()<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">run_processes_parallel<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">max_parallel_jobs<pos:position pos:line="29" pos:column="49"/></name></expr></argument>,
			       <argument><expr><name pos:line="30" pos:column="32">get_next_submodule<pos:position pos:line="30" pos:column="50"/></name></expr></argument>,
			       <argument><expr><name pos:line="31" pos:column="32">fetch_start_failure<pos:position pos:line="31" pos:column="51"/></name></expr></argument>,
			       <argument><expr><name pos:line="32" pos:column="32">fetch_finish<pos:position pos:line="32" pos:column="44"/></name></expr></argument>,
			       <argument><expr><operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="33">spf<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="35" pos:column="9">argv_array_clear<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name><name pos:line="35" pos:column="27">spf<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">.<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">args<pos:position pos:line="35" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
<label><name pos:line="36" pos:column="1">out<pos:position pos:line="36" pos:column="4"/></name>:<pos:position pos:line="36" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">string_list_clear<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><operator pos:line="37" pos:column="27">&amp;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="28">changed_submodule_paths<pos:position pos:line="37" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="53">1<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
	<return pos:line="38" pos:column="9">return <expr><name><name pos:line="38" pos:column="16">spf<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">result<pos:position pos:line="38" pos:column="26"/></name></name></expr>;<pos:position pos:line="38" pos:column="27"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

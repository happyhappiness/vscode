<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1985.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">edit_patch<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">argc<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">argv<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">prefix<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">file<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><call><name pos:line="3" pos:column="22">git_pathdup<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><literal type="string" pos:line="3" pos:column="34">"ADD_EDIT.patch"<pos:position pos:line="3" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name><name pos:line="4" pos:column="21">apply_argv<pos:position pos:line="4" pos:column="31"/></name><index pos:line="4" pos:column="31">[]<pos:position pos:line="4" pos:column="33"/></index></name> <init pos:line="4" pos:column="34">= <expr><block pos:line="4" pos:column="36">{ <expr><literal type="string" pos:line="4" pos:column="38">"apply"<pos:position pos:line="4" pos:column="45"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="47">"--recount"<pos:position pos:line="4" pos:column="58"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="60">"--cached"<pos:position pos:line="4" pos:column="70"/></literal></expr>,
		<expr><name pos:line="5" pos:column="17">NULL<pos:position pos:line="5" pos:column="21"/></name></expr>, <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr> }<pos:position pos:line="5" pos:column="29"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">child_process<pos:position pos:line="6" pos:column="29"/></name></name></type> <name pos:line="6" pos:column="30">child<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><name pos:line="6" pos:column="38">CHILD_PROCESS_INIT<pos:position pos:line="6" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">rev_info<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">rev<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">out<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">stat<pos:position pos:line="9" pos:column="20"/></name></name></type> <name pos:line="9" pos:column="21">st<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">apply_argv<pos:position pos:line="11" pos:column="19"/></name><index pos:line="11" pos:column="19">[<expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr>]<pos:position pos:line="11" pos:column="22"/></index></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">file<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">git_config<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">git_diff_basic_config<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">NULL<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt> <comment type="block" pos:line="13" pos:column="50">/* no "diff" UI options */</comment>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">read_cache<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">()<pos:position pos:line="15" pos:column="25"/></argument_list></call> <operator pos:line="15" pos:column="26">&lt;<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">die<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><call><name pos:line="16" pos:column="21">_<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="string" pos:line="16" pos:column="23">"Could not read the index"<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">init_revisions<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="25">rev<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">prefix<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">rev<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">diffopt<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">context<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <literal type="number" pos:line="19" pos:column="31">7<pos:position pos:line="19" pos:column="32"/></literal></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="21" pos:column="9">argc<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">setup_revisions<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">argc<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">argv<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">rev<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">NULL<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">rev<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">diffopt<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">.<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">output_format<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">DIFF_FORMAT_PATCH<pos:position pos:line="22" pos:column="54"/></name></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">rev<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">diffopt<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">use_color<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">DIFF_OPT_SET<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><operator pos:line="24" pos:column="22">&amp;<pos:position pos:line="24" pos:column="27"/></operator><name><name pos:line="24" pos:column="23">rev<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">diffopt<pos:position pos:line="24" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">IGNORE_DIRTY_SUBMODULES<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">out<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">open<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">file<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">O_CREAT<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">|<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="36">O_WRONLY<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="46">0666<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">out<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&lt;<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">die<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><call><name pos:line="27" pos:column="21">_<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><literal type="string" pos:line="27" pos:column="23">"Could not open '%s' for writing."<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">file<pos:position pos:line="27" pos:column="64"/></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">rev<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">diffopt<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">file<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">=<pos:position pos:line="28" pos:column="27"/></operator> <call><name pos:line="28" pos:column="28">xfdopen<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">out<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">"w"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">rev<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">diffopt<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">.<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">close_file<pos:position pos:line="29" pos:column="31"/></name></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">run_diff_files<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="29">rev<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="34">0<pos:position pos:line="30" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="37"/></condition><then pos:line="30" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">die<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><call><name pos:line="31" pos:column="21">_<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><literal type="string" pos:line="31" pos:column="23">"Could not write patch"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">launch_editor<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">file<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">NULL<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">NULL<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">die<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><call><name pos:line="34" pos:column="21">_<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><literal type="string" pos:line="34" pos:column="23">"editing patch failed"<pos:position pos:line="34" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">stat<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">file<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="24">&amp;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="25">st<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">die_errno<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><call><name pos:line="37" pos:column="27">_<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><literal type="string" pos:line="37" pos:column="29">"Could not stat '%s'"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">file<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><name><name pos:line="38" pos:column="14">st<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">.<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">st_size<pos:position pos:line="38" pos:column="24"/></name></name></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">die<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><call><name pos:line="39" pos:column="21">_<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><literal type="string" pos:line="39" pos:column="23">"Empty patch. Aborted."<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="41" pos:column="9">child<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">git_cmd<pos:position pos:line="41" pos:column="22"/></name></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">child<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">.<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">argv<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">apply_argv<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">run_command<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><operator pos:line="43" pos:column="25">&amp;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="26">child<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="33"/></condition><then pos:line="43" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">die<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><call><name pos:line="44" pos:column="21">_<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><literal type="string" pos:line="44" pos:column="23">"Could not apply '%s'"<pos:position pos:line="44" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">file<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">unlink<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">file<pos:position pos:line="46" pos:column="20"/></name></expr></argument>)<pos:position pos:line="46" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">free<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">file<pos:position pos:line="47" pos:column="18"/></name></expr></argument>)<pos:position pos:line="47" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>
	<return pos:line="48" pos:column="9">return <expr><literal type="number" pos:line="48" pos:column="16">0<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

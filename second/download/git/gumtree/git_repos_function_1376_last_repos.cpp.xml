<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1376_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">use_patch<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">apply_state<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">state<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">patch<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">p<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">pathname<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><ternary><condition><expr><name><name pos:line="3" pos:column="32">p<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">new_name<pos:position pos:line="3" pos:column="43"/></name></name></expr> ?<pos:position pos:line="3" pos:column="45"/></condition><then pos:line="3" pos:column="45"> <expr><name><name pos:line="3" pos:column="46">p<pos:position pos:line="3" pos:column="47"/></name><operator pos:line="3" pos:column="47">-&gt;<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="49">new_name<pos:position pos:line="3" pos:column="57"/></name></name></expr> <pos:position pos:line="3" pos:column="58"/></then><else pos:line="3" pos:column="58">: <expr><name><name pos:line="3" pos:column="60">p<pos:position pos:line="3" pos:column="61"/></name><operator pos:line="3" pos:column="61">-&gt;<pos:position pos:line="3" pos:column="66"/></operator><name pos:line="3" pos:column="63">old_name<pos:position pos:line="3" pos:column="71"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="72"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Paths outside are not touched regardless of "--include" */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">state<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">prefix<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">&amp;&amp;<pos:position pos:line="7" pos:column="37"/></operator> <operator pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></operator><name><name pos:line="7" pos:column="31">state<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">prefix<pos:position pos:line="7" pos:column="44"/></name></name></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">rest<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><call><name pos:line="9" pos:column="22">skip_prefix<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">pathname<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="44">state<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">prefix<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="59">&amp;<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="60">rest<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call> <operator pos:line="9" pos:column="66">||<pos:position pos:line="9" pos:column="68"/></operator> <operator pos:line="9" pos:column="69">!<pos:position pos:line="9" pos:column="70"/></operator><operator pos:line="9" pos:column="70">*<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="71">rest<pos:position pos:line="9" pos:column="75"/></name></expr>)<pos:position pos:line="9" pos:column="76"/></condition><then pos:line="9" pos:column="76">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* See if it matches any of exclude/include rule */</comment>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">state<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">limit_by_name<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">.<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">nr<pos:position pos:line="14" pos:column="48"/></name></name></expr>;<pos:position pos:line="14" pos:column="49"/></condition> <incr><expr><name pos:line="14" pos:column="50">i<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">++<pos:position pos:line="14" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="54"/></control> <block pos:line="14" pos:column="55">{
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">string_list_item<pos:position pos:line="15" pos:column="40"/></name></name> <modifier pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></modifier></type><name pos:line="15" pos:column="42">it<pos:position pos:line="15" pos:column="44"/></name> <init pos:line="15" pos:column="45">= <expr><operator pos:line="15" pos:column="47">&amp;<pos:position pos:line="15" pos:column="52"/></operator><name><name pos:line="15" pos:column="48">state<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">limit_by_name<pos:position pos:line="15" pos:column="68"/></name><operator pos:line="15" pos:column="68">.<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="69">items<pos:position pos:line="15" pos:column="74"/></name><index pos:line="15" pos:column="74">[<expr><name pos:line="15" pos:column="75">i<pos:position pos:line="15" pos:column="76"/></name></expr>]<pos:position pos:line="15" pos:column="77"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="78"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">wildmatch<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name><name pos:line="16" pos:column="32">it<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">string<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">pathname<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="54">0<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="57"/></condition><then pos:line="16" pos:column="57">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><name><name pos:line="17" pos:column="33">it<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">util<pos:position pos:line="17" pos:column="41"/></name></name> <operator pos:line="17" pos:column="42">!=<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">NULL<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">)<pos:position pos:line="17" pos:column="50"/></operator></expr>;<pos:position pos:line="17" pos:column="51"/></return></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>

	<comment type="block" pos:line="20" pos:column="9">/*
	 * If we had any include, a path that does not match any rule is
	 * not used.  Otherwise, we saw bunch of exclude rules (or none)
	 * and such a path is used.
	 */</comment>
	<return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">!<pos:position pos:line="25" pos:column="17"/></operator><name><name pos:line="25" pos:column="17">state<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">has_include<pos:position pos:line="25" pos:column="35"/></name></name></expr>;<pos:position pos:line="25" pos:column="36"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

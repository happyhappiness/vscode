<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1317.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">git_config_raw<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">config_fn_t<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">fn<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">data<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">config_options<pos:position pos:line="3" pos:column="30"/></name></name></type> <name pos:line="3" pos:column="31">opts<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><block pos:line="3" pos:column="38">{<expr><literal type="number" pos:line="3" pos:column="39">0<pos:position pos:line="3" pos:column="40"/></literal></expr>}<pos:position pos:line="3" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="5" pos:column="9">opts<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">.<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">respect_includes<pos:position pos:line="5" pos:column="30"/></name></name> <operator pos:line="5" pos:column="31">=<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="33">1<pos:position pos:line="5" pos:column="34"/></literal></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">git_config_with_options<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">fn<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">data<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">NULL<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="53">&amp;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="54">opts<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call> <operator pos:line="6" pos:column="60">&lt;<pos:position pos:line="6" pos:column="64"/></operator> <literal type="number" pos:line="6" pos:column="62">0<pos:position pos:line="6" pos:column="63"/></literal></expr>)<pos:position pos:line="6" pos:column="64"/></condition><then pos:line="6" pos:column="64">
		<comment type="block" pos:line="7" pos:column="17">/*
		 * git_config_with_options() normally returns only
		 * zero, as most errors are fatal, and
		 * non-fatal potential errors are guarded by "if"
		 * statements that are entered only when no error is
		 * possible.
		 *
		 * If we ever encounter a non-fatal error, it means
		 * something went really wrong and we should stop
		 * immediately.
		 */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><call><name pos:line="18" pos:column="21">_<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"unknown error occurred while reading the configuration files"<pos:position pos:line="18" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="88"/></expr_stmt></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

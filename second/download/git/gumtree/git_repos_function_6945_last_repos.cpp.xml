<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6945_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">check_halt_state_context<pos:position pos:line="3" pos:column="25"/></name> <parameter_list pos:line="3" pos:column="26">(<parameter><decl><type><specifier pos:line="3" pos:column="27">const<pos:position pos:line="3" pos:column="32"/></specifier> <name pos:line="3" pos:column="33">re_match_context_t<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">mctx<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier> <name pos:line="4" pos:column="33">re_dfastate_t<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">state<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="55">int<pos:position pos:line="4" pos:column="58"/></name></type> <name pos:line="4" pos:column="59">idx<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="63"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">int<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">context<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">DEBUG<pos:position pos:line="8" pos:column="13"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">assert<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">state<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">halt<pos:position pos:line="9" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="11" pos:column="3">context<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">re_string_context_at<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator><name><name pos:line="11" pos:column="36">mctx<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">input<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">idx<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="54">mctx<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">eflags<pos:position pos:line="11" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">i<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></init> <condition><expr><name pos:line="12" pos:column="15">i<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <name><name pos:line="12" pos:column="19">state<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">nodes<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">nelem<pos:position pos:line="12" pos:column="37"/></name></name></expr>;<pos:position pos:line="12" pos:column="38"/></condition> <incr><expr><operator pos:line="12" pos:column="39">++<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">i<pos:position pos:line="12" pos:column="42"/></name></expr></incr>)<pos:position pos:line="12" pos:column="43"/></control>
    <block type="pseudo"><if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">check_halt_node_context<pos:position pos:line="13" pos:column="32"/></name> <argument_list pos:line="13" pos:column="33">(<argument><expr><name><name pos:line="13" pos:column="34">mctx<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">dfa<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="45">state<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">nodes<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">.<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="58">elems<pos:position pos:line="13" pos:column="63"/></name><index pos:line="13" pos:column="63">[<expr><name pos:line="13" pos:column="64">i<pos:position pos:line="13" pos:column="65"/></name></expr>]<pos:position pos:line="13" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="68">context<pos:position pos:line="13" pos:column="75"/></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="77"/></condition><then pos:line="13" pos:column="77">
      <block type="pseudo"><return pos:line="14" pos:column="7">return <expr><name><name pos:line="14" pos:column="14">state<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">nodes<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">elems<pos:position pos:line="14" pos:column="32"/></name><index pos:line="14" pos:column="32">[<expr><name pos:line="14" pos:column="33">i<pos:position pos:line="14" pos:column="34"/></name></expr>]<pos:position pos:line="14" pos:column="35"/></index></name></expr>;<pos:position pos:line="14" pos:column="36"/></return></block></then></if></block></for>
  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

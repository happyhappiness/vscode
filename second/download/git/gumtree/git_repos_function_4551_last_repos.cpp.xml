<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4551_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pool_entry_cmp<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">unused_cmp_data<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name><name pos:line="2" pos:column="33">struct<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">pool_entry<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">e1<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="3" pos:column="27">const<pos:position pos:line="3" pos:column="32"/></specifier> <name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">pool_entry<pos:position pos:line="3" pos:column="50"/></name></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">e2<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
			  <parameter><decl><type><specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier> <name pos:line="4" pos:column="33">unsigned<pos:position pos:line="4" pos:column="41"/></name> <name pos:line="4" pos:column="42">char<pos:position pos:line="4" pos:column="46"/></name> <modifier pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></modifier></type><name pos:line="4" pos:column="48">keydata<pos:position pos:line="4" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="56"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<return pos:line="6" pos:column="9">return <expr><name><name pos:line="6" pos:column="16">e1<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">data<pos:position pos:line="6" pos:column="24"/></name></name> <operator pos:line="6" pos:column="25">!=<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">keydata<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">&amp;&amp;<pos:position pos:line="6" pos:column="46"/></operator>
	       <operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name><name pos:line="7" pos:column="17">e1<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">len<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">!=<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="28">e2<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">len<pos:position pos:line="7" pos:column="35"/></name></name> <operator pos:line="7" pos:column="36">||<pos:position pos:line="7" pos:column="38"/></operator> <call><name pos:line="7" pos:column="39">memcmp<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">(<argument><expr><name><name pos:line="7" pos:column="46">e1<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">data<pos:position pos:line="7" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="56">keydata<pos:position pos:line="7" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="65">e1<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">-&gt;<pos:position pos:line="7" pos:column="72"/></operator><name pos:line="7" pos:column="69">len<pos:position pos:line="7" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call><operator pos:line="7" pos:column="73">)<pos:position pos:line="7" pos:column="74"/></operator></expr>;<pos:position pos:line="7" pos:column="75"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

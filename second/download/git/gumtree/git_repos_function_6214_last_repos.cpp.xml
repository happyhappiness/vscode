<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6214_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_merge_config<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">k<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">v<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">cb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">branch<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&amp;&amp;<pos:position pos:line="5" pos:column="30"/></operator> <call><name pos:line="5" pos:column="23">starts_with<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">k<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="38">"branch."<pos:position pos:line="5" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call> <operator pos:line="5" pos:column="49">&amp;&amp;<pos:position pos:line="5" pos:column="59"/></operator>
		<call><name pos:line="6" pos:column="17">starts_with<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">k<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">+<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="33">7<pos:position pos:line="6" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">branch<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call> <operator pos:line="6" pos:column="44">&amp;&amp;<pos:position pos:line="6" pos:column="54"/></operator>
		<operator pos:line="7" pos:column="17">!<pos:position pos:line="7" pos:column="18"/></operator><call><name pos:line="7" pos:column="18">strcmp<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">k<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="29">7<pos:position pos:line="7" pos:column="30"/></literal> <operator pos:line="7" pos:column="31">+<pos:position pos:line="7" pos:column="32"/></operator> <call><name pos:line="7" pos:column="33">strlen<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">branch<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="49">".mergeoptions"<pos:position pos:line="7" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="66"/></condition><then pos:line="7" pos:column="66"> <block pos:line="7" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">free<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">branch_mergeoptions<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">branch_mergeoptions<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">=<pos:position pos:line="9" pos:column="38"/></operator> <call><name pos:line="9" pos:column="39">xstrdup<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">v<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">k<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="24">"merge.diffstat"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call> <operator pos:line="13" pos:column="42">||<pos:position pos:line="13" pos:column="44"/></operator> <operator pos:line="13" pos:column="45">!<pos:position pos:line="13" pos:column="46"/></operator><call><name pos:line="13" pos:column="46">strcmp<pos:position pos:line="13" pos:column="52"/></name><argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">k<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="56">"merge.stat"<pos:position pos:line="13" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="70"/></condition><then pos:line="13" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">show_diffstat<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">=<pos:position pos:line="14" pos:column="32"/></operator> <call><name pos:line="14" pos:column="33">git_config_bool<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><name pos:line="14" pos:column="49">k<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">v<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt></block></then>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><operator pos:line="15" pos:column="18">!<pos:position pos:line="15" pos:column="19"/></operator><call><name pos:line="15" pos:column="19">strcmp<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">k<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="29">"pull.twohead"<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><call><name pos:line="16" pos:column="24">git_config_string<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="43">pull_twohead<pos:position pos:line="16" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">k<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">v<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></return></block></then></if></elseif>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><operator pos:line="17" pos:column="18">!<pos:position pos:line="17" pos:column="19"/></operator><call><name pos:line="17" pos:column="19">strcmp<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">k<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"pull.octopus"<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">git_config_string<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><operator pos:line="18" pos:column="42">&amp;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="43">pull_octopus<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">k<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">v<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></return></block></then></if></elseif>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><operator pos:line="19" pos:column="18">!<pos:position pos:line="19" pos:column="19"/></operator><call><name pos:line="19" pos:column="19">strcmp<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">k<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="29">"merge.renormalize"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">option_renormalize<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">=<pos:position pos:line="20" pos:column="37"/></operator> <call><name pos:line="20" pos:column="38">git_config_bool<pos:position pos:line="20" pos:column="53"/></name><argument_list pos:line="20" pos:column="53">(<argument><expr><name pos:line="20" pos:column="54">k<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">v<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><call><name pos:line="21" pos:column="19">strcmp<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">k<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="29">"merge.ff"<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41"> <block pos:line="21" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">int<pos:position pos:line="22" pos:column="20"/></name></type> <name pos:line="22" pos:column="21">boolval<pos:position pos:line="22" pos:column="28"/></name> <init pos:line="22" pos:column="29">= <expr><call><name pos:line="22" pos:column="31">git_config_maybe_bool<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name pos:line="22" pos:column="53">k<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="56">v<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="59"/></decl_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal> <operator pos:line="23" pos:column="23">&lt;=<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="26">boolval<pos:position pos:line="23" pos:column="33"/></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34"> <block pos:line="23" pos:column="35">{
			<expr_stmt><expr><name pos:line="24" pos:column="25">fast_forward<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">=<pos:position pos:line="24" pos:column="39"/></operator> <ternary><condition><expr><name pos:line="24" pos:column="40">boolval<pos:position pos:line="24" pos:column="47"/></name></expr> ?<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49"> <expr><name pos:line="24" pos:column="50">FF_ALLOW<pos:position pos:line="24" pos:column="58"/></name></expr> <pos:position pos:line="24" pos:column="59"/></then><else pos:line="24" pos:column="59">: <expr><name pos:line="24" pos:column="61">FF_NO<pos:position pos:line="24" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then> <elseif pos:line="25" pos:column="19">else <if pos:line="25" pos:column="24">if <condition pos:line="25" pos:column="27">(<expr><name pos:line="25" pos:column="28">v<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">&amp;&amp;<pos:position pos:line="25" pos:column="40"/></operator> <operator pos:line="25" pos:column="33">!<pos:position pos:line="25" pos:column="34"/></operator><call><name pos:line="25" pos:column="34">strcmp<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">v<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="44">"only"<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52"> <block pos:line="25" pos:column="53">{
			<expr_stmt><expr><name pos:line="26" pos:column="25">fast_forward<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">FF_ONLY<pos:position pos:line="26" pos:column="47"/></name></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if></elseif></if> <comment type="block" pos:line="27" pos:column="19">/* do not barf on values from future versions of git */</comment>
		<return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif> <elseif pos:line="29" pos:column="11">else <if pos:line="29" pos:column="16">if <condition pos:line="29" pos:column="19">(<expr><operator pos:line="29" pos:column="20">!<pos:position pos:line="29" pos:column="21"/></operator><call><name pos:line="29" pos:column="21">strcmp<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">k<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="31">"merge.defaulttoupstream"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="58"/></condition><then pos:line="29" pos:column="58"> <block pos:line="29" pos:column="59">{
		<expr_stmt><expr><name pos:line="30" pos:column="17">default_to_upstream<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <call><name pos:line="30" pos:column="39">git_config_bool<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><name pos:line="30" pos:column="55">k<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">v<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif> <elseif pos:line="32" pos:column="11">else <if pos:line="32" pos:column="16">if <condition pos:line="32" pos:column="19">(<expr><operator pos:line="32" pos:column="20">!<pos:position pos:line="32" pos:column="21"/></operator><call><name pos:line="32" pos:column="21">strcmp<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">k<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="31">"commit.gpgsign"<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49"> <block pos:line="32" pos:column="50">{
		<expr_stmt><expr><name pos:line="33" pos:column="17">sign_commit<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <ternary><condition><expr><call><name pos:line="33" pos:column="31">git_config_bool<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name pos:line="33" pos:column="47">k<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">v<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr> ?<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54"> <expr><literal type="string" pos:line="33" pos:column="55">""<pos:position pos:line="33" pos:column="57"/></literal></expr> <pos:position pos:line="33" pos:column="58"/></then><else pos:line="33" pos:column="58">: <expr><name pos:line="33" pos:column="60">NULL<pos:position pos:line="33" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
		<return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="37" pos:column="9">status<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">fmt_merge_msg_config<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">k<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">v<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">cb<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">status<pos:position pos:line="38" pos:column="19"/></name></expr>)<pos:position pos:line="38" pos:column="20"/></condition><then pos:line="38" pos:column="20">
		<block type="pseudo"><return pos:line="39" pos:column="17">return <expr><name pos:line="39" pos:column="24">status<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="40" pos:column="9">status<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">git_gpg_config<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">k<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="36">v<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">NULL<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">status<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20">
		<block type="pseudo"><return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">status<pos:position pos:line="42" pos:column="30"/></name></expr>;<pos:position pos:line="42" pos:column="31"/></return></block></then></if>
	<return pos:line="43" pos:column="9">return <expr><call><name pos:line="43" pos:column="16">git_diff_ui_config<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">k<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">v<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">cb<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

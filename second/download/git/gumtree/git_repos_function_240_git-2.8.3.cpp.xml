<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_240_git-2.8.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_objects_for_type<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(
	<parameter><decl><type><name><name pos:line="2" pos:column="9">struct<pos:position pos:line="2" pos:column="15"/></name> <name pos:line="2" pos:column="16">bitmap<pos:position pos:line="2" pos:column="22"/></name></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">objects<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">ewah_bitmap<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">type_filter<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
	<parameter><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">object_type<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">object_type<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
	<parameter><decl><type><name pos:line="5" pos:column="9">show_reachable_fn<pos:position pos:line="5" pos:column="26"/></name></type> <name pos:line="5" pos:column="27">show_reach<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">pos<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="25">i<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uint32_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">offset<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">ewah_iterator<pos:position pos:line="10" pos:column="29"/></name></name></type> <name pos:line="10" pos:column="30">it<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">eword_t<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">filter<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">bitmap_git<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">reuse_objects<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">==<pos:position pos:line="13" pos:column="40"/></operator> <name><name pos:line="13" pos:column="41">bitmap_git<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">.<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">pack<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">-&gt;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="58">num_objects<pos:position pos:line="13" pos:column="69"/></name></name></expr>)<pos:position pos:line="13" pos:column="70"/></condition><then pos:line="13" pos:column="70">
		<block type="pseudo"><return pos:line="14" pos:column="17">return;<pos:position pos:line="14" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">ewah_iterator_init<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">it<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">type_filter<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>

	<while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">i<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">&lt;<pos:position pos:line="18" pos:column="22"/></operator> <name><name pos:line="18" pos:column="20">objects<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">word_alloc<pos:position pos:line="18" pos:column="39"/></name></name> <operator pos:line="18" pos:column="40">&amp;&amp;<pos:position pos:line="18" pos:column="50"/></operator> <call><name pos:line="18" pos:column="43">ewah_iterator_next<pos:position pos:line="18" pos:column="61"/></name><argument_list pos:line="18" pos:column="61">(<argument><expr><operator pos:line="18" pos:column="62">&amp;<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="63">filter<pos:position pos:line="18" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="71">&amp;<pos:position pos:line="18" pos:column="76"/></operator><name pos:line="18" pos:column="72">it<pos:position pos:line="18" pos:column="74"/></name></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="76"/></condition> <block pos:line="18" pos:column="77">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">eword_t<pos:position pos:line="19" pos:column="24"/></name></type> <name pos:line="19" pos:column="25">word<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><name><name pos:line="19" pos:column="32">objects<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">words<pos:position pos:line="19" pos:column="46"/></name><index pos:line="19" pos:column="46">[<expr><name pos:line="19" pos:column="47">i<pos:position pos:line="19" pos:column="48"/></name></expr>]<pos:position pos:line="19" pos:column="49"/></index></name> <operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator> <name pos:line="19" pos:column="52">filter<pos:position pos:line="19" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="59"/></decl_stmt>

		<for pos:line="21" pos:column="17">for <control pos:line="21" pos:column="21">(<init><expr><name pos:line="21" pos:column="22">offset<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">0<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></init> <condition><expr><name pos:line="21" pos:column="34">offset<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">&lt;<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="43">BITS_IN_EWORD<pos:position pos:line="21" pos:column="56"/></name></expr>;<pos:position pos:line="21" pos:column="57"/></condition> <incr><expr><operator pos:line="21" pos:column="58">++<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="60">offset<pos:position pos:line="21" pos:column="66"/></name></expr></incr>)<pos:position pos:line="21" pos:column="67"/></control> <block pos:line="21" pos:column="68">{
			<decl_stmt><decl><type><specifier pos:line="22" pos:column="25">const<pos:position pos:line="22" pos:column="30"/></specifier> <name pos:line="22" pos:column="31">unsigned<pos:position pos:line="22" pos:column="39"/></name> <name pos:line="22" pos:column="40">char<pos:position pos:line="22" pos:column="44"/></name> <modifier pos:line="22" pos:column="45">*<pos:position pos:line="22" pos:column="46"/></modifier></type><name pos:line="22" pos:column="46">sha1<pos:position pos:line="22" pos:column="50"/></name></decl>;<pos:position pos:line="22" pos:column="51"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="23" pos:column="25">struct<pos:position pos:line="23" pos:column="31"/></name> <name pos:line="23" pos:column="32">revindex_entry<pos:position pos:line="23" pos:column="46"/></name></name> <modifier pos:line="23" pos:column="47">*<pos:position pos:line="23" pos:column="48"/></modifier></type><name pos:line="23" pos:column="48">entry<pos:position pos:line="23" pos:column="53"/></name></decl>;<pos:position pos:line="23" pos:column="54"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">uint32_t<pos:position pos:line="24" pos:column="33"/></name></type> <name pos:line="24" pos:column="34">hash<pos:position pos:line="24" pos:column="38"/></name> <init pos:line="24" pos:column="39">= <expr><literal type="number" pos:line="24" pos:column="41">0<pos:position pos:line="24" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="43"/></decl_stmt>

			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><operator pos:line="26" pos:column="29">(<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">word<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">&gt;&gt;<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="38">offset<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="46">==<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51">
				<block type="pseudo"><break pos:line="27" pos:column="33">break;<pos:position pos:line="27" pos:column="39"/></break></block></then></if>

			<expr_stmt><expr><name pos:line="29" pos:column="25">offset<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">+=<pos:position pos:line="29" pos:column="34"/></operator> <call><name pos:line="29" pos:column="35">ewah_bit_ctz64<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">word<pos:position pos:line="29" pos:column="54"/></name> <operator pos:line="29" pos:column="55">&gt;&gt;<pos:position pos:line="29" pos:column="60"/></operator> <name pos:line="29" pos:column="58">offset<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>

			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><name pos:line="31" pos:column="29">pos<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">+<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="35">offset<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">&lt;<pos:position pos:line="31" pos:column="46"/></operator> <name><name pos:line="31" pos:column="44">bitmap_git<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">.<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="55">reuse_objects<pos:position pos:line="31" pos:column="68"/></name></name></expr>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69">
				<block type="pseudo"><continue pos:line="32" pos:column="33">continue;<pos:position pos:line="32" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="34" pos:column="25">entry<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name><name pos:line="34" pos:column="34">bitmap_git<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">.<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">pack<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">revindex<pos:position pos:line="34" pos:column="59"/></name><index pos:line="34" pos:column="59">[<expr><name pos:line="34" pos:column="60">pos<pos:position pos:line="34" pos:column="63"/></name> <operator pos:line="34" pos:column="64">+<pos:position pos:line="34" pos:column="65"/></operator> <name pos:line="34" pos:column="66">offset<pos:position pos:line="34" pos:column="72"/></name></expr>]<pos:position pos:line="34" pos:column="73"/></index></name></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name pos:line="35" pos:column="25">sha1<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <call><name pos:line="35" pos:column="32">nth_packed_object_sha1<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">(<argument><expr><name><name pos:line="35" pos:column="55">bitmap_git<pos:position pos:line="35" pos:column="65"/></name><operator pos:line="35" pos:column="65">.<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="66">pack<pos:position pos:line="35" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="72">entry<pos:position pos:line="35" pos:column="77"/></name><operator pos:line="35" pos:column="77">-&gt;<pos:position pos:line="35" pos:column="82"/></operator><name pos:line="35" pos:column="79">nr<pos:position pos:line="35" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="83"/></expr_stmt>

			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name><name pos:line="37" pos:column="29">bitmap_git<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">.<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="40">hashes<pos:position pos:line="37" pos:column="46"/></name></name></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="33">hash<pos:position pos:line="38" pos:column="37"/></name> <operator pos:line="38" pos:column="38">=<pos:position pos:line="38" pos:column="39"/></operator> <call><name pos:line="38" pos:column="40">ntohl<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name><name pos:line="38" pos:column="46">bitmap_git<pos:position pos:line="38" pos:column="56"/></name><operator pos:line="38" pos:column="56">.<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="57">hashes<pos:position pos:line="38" pos:column="63"/></name><index pos:line="38" pos:column="63">[<expr><name><name pos:line="38" pos:column="64">entry<pos:position pos:line="38" pos:column="69"/></name><operator pos:line="38" pos:column="69">-&gt;<pos:position pos:line="38" pos:column="74"/></operator><name pos:line="38" pos:column="71">nr<pos:position pos:line="38" pos:column="73"/></name></name></expr>]<pos:position pos:line="38" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt></block></then></if>

			<expr_stmt><expr><call><name pos:line="40" pos:column="25">show_reach<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">sha1<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">object_type<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="55">0<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="58">hash<pos:position pos:line="40" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="64">bitmap_git<pos:position pos:line="40" pos:column="74"/></name><operator pos:line="40" pos:column="74">.<pos:position pos:line="40" pos:column="75"/></operator><name pos:line="40" pos:column="75">pack<pos:position pos:line="40" pos:column="79"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="81">entry<pos:position pos:line="40" pos:column="86"/></name><operator pos:line="40" pos:column="86">-&gt;<pos:position pos:line="40" pos:column="91"/></operator><name pos:line="40" pos:column="88">offset<pos:position pos:line="40" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="96"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></for>

		<expr_stmt><expr><name pos:line="43" pos:column="17">pos<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">+=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">BITS_IN_EWORD<pos:position pos:line="43" pos:column="37"/></name></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">++<pos:position pos:line="44" pos:column="20"/></operator></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></while>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

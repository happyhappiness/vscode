<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1022_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">emit_binary_diff_body<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">FILE<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">file<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">mmfile_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">one<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">mmfile_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">two<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">prefix<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">void<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">cp<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">void<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">delta<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">void<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">deflated<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">void<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">data<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">long<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">orig_size<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">long<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">delta_size<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">long<pos:position pos:line="10" pos:column="22"/></name></type> <name pos:line="10" pos:column="23">deflate_size<pos:position pos:line="10" pos:column="35"/></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">long<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">data_size<pos:position pos:line="11" pos:column="32"/></name></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* We could do deflated delta, or we could do just deflated two,
	 * whichever is smaller.
	 */</comment>
	<expr_stmt><expr><name pos:line="16" pos:column="9">delta<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">NULL<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">deflated<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">deflate_it<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name><name pos:line="17" pos:column="31">two<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">ptr<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="41">two<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">size<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="52">&amp;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="53">deflate_size<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">one<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">size<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">&amp;&amp;<pos:position pos:line="18" pos:column="33"/></operator> <name><name pos:line="18" pos:column="26">two<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">size<pos:position pos:line="18" pos:column="35"/></name></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36"> <block pos:line="18" pos:column="37">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">delta<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <call><name pos:line="19" pos:column="25">diff_delta<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name><name pos:line="19" pos:column="36">one<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">ptr<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">one<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">-&gt;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="51">size<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>,
				   <argument><expr><name><name pos:line="20" pos:column="36">two<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">ptr<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="46">two<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">size<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>,
				   <argument><expr><operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="37">delta_size<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">deflate_size<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">delta<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="23" pos:column="25">void<pos:position pos:line="23" pos:column="29"/></name> <modifier pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></modifier></type><name pos:line="23" pos:column="31">to_free<pos:position pos:line="23" pos:column="38"/></name> <init pos:line="23" pos:column="39">= <expr><name pos:line="23" pos:column="41">delta<pos:position pos:line="23" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="47"/></decl_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">orig_size<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">delta_size<pos:position pos:line="24" pos:column="47"/></name></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">delta<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <call><name pos:line="25" pos:column="33">deflate_it<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">delta<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">delta_size<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="63">&amp;<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="64">delta_size<pos:position pos:line="25" pos:column="74"/></name></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">free<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">to_free<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">delta<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&amp;&amp;<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="22">delta_size<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">&lt;<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="35">deflate_size<pos:position pos:line="30" pos:column="47"/></name></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48"> <block pos:line="30" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">fprintf<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">file<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="31">"%sdelta %lu\n"<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">prefix<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">orig_size<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">free<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">deflated<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">data<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">delta<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">data_size<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">delta_size<pos:position pos:line="34" pos:column="39"/></name></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then>
	<else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">fprintf<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">file<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="31">"%sliteral %lu\n"<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">prefix<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="58">two<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">size<pos:position pos:line="37" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">free<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">delta<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">data<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">deflated<pos:position pos:line="39" pos:column="32"/></name></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">data_size<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">deflate_size<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="43" pos:column="9">/* emit data encoded in base85 */</comment>
	<expr_stmt><expr><name pos:line="44" pos:column="9">cp<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">data<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
	<while pos:line="45" pos:column="9">while <condition pos:line="45" pos:column="15">(<expr><name pos:line="45" pos:column="16">data_size<pos:position pos:line="45" pos:column="25"/></name></expr>)<pos:position pos:line="45" pos:column="26"/></condition> <block pos:line="45" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">bytes<pos:position pos:line="46" pos:column="26"/></name> <init pos:line="46" pos:column="27">= <expr><ternary><condition><expr><operator pos:line="46" pos:column="29">(<pos:position pos:line="46" pos:column="30"/></operator><literal type="number" pos:line="46" pos:column="30">52<pos:position pos:line="46" pos:column="32"/></literal> <operator pos:line="46" pos:column="33">&lt;<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="35">data_size<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">)<pos:position pos:line="46" pos:column="45"/></operator></expr> ?<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47"> <expr><literal type="number" pos:line="46" pos:column="48">52<pos:position pos:line="46" pos:column="50"/></literal></expr> <pos:position pos:line="46" pos:column="51"/></then><else pos:line="46" pos:column="51">: <expr><name pos:line="46" pos:column="53">data_size<pos:position pos:line="46" pos:column="62"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="46" pos:column="63"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">char<pos:position pos:line="47" pos:column="21"/></name></type> <name><name pos:line="47" pos:column="22">line<pos:position pos:line="47" pos:column="26"/></name><index pos:line="47" pos:column="26">[<expr><literal type="number" pos:line="47" pos:column="27">70<pos:position pos:line="47" pos:column="29"/></literal></expr>]<pos:position pos:line="47" pos:column="30"/></index></name></decl>;<pos:position pos:line="47" pos:column="31"/></decl_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">data_size<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">-=<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="30">bytes<pos:position pos:line="48" pos:column="35"/></name></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">bytes<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">&lt;=<pos:position pos:line="49" pos:column="32"/></operator> <literal type="number" pos:line="49" pos:column="30">26<pos:position pos:line="49" pos:column="32"/></literal></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="25">line<pos:position pos:line="50" pos:column="29"/></name><index pos:line="50" pos:column="29">[<expr><literal type="number" pos:line="50" pos:column="30">0<pos:position pos:line="50" pos:column="31"/></literal></expr>]<pos:position pos:line="50" pos:column="32"/></index></name> <operator pos:line="50" pos:column="33">=<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="35">bytes<pos:position pos:line="50" pos:column="40"/></name> <operator pos:line="50" pos:column="41">+<pos:position pos:line="50" pos:column="42"/></operator> <literal type="char" pos:line="50" pos:column="43">'A'<pos:position pos:line="50" pos:column="46"/></literal> <operator pos:line="50" pos:column="47">-<pos:position pos:line="50" pos:column="48"/></operator> <literal type="number" pos:line="50" pos:column="49">1<pos:position pos:line="50" pos:column="50"/></literal></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt></block></then>
		<else pos:line="51" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="25">line<pos:position pos:line="52" pos:column="29"/></name><index pos:line="52" pos:column="29">[<expr><literal type="number" pos:line="52" pos:column="30">0<pos:position pos:line="52" pos:column="31"/></literal></expr>]<pos:position pos:line="52" pos:column="32"/></index></name> <operator pos:line="52" pos:column="33">=<pos:position pos:line="52" pos:column="34"/></operator> <name pos:line="52" pos:column="35">bytes<pos:position pos:line="52" pos:column="40"/></name> <operator pos:line="52" pos:column="41">-<pos:position pos:line="52" pos:column="42"/></operator> <literal type="number" pos:line="52" pos:column="43">26<pos:position pos:line="52" pos:column="45"/></literal> <operator pos:line="52" pos:column="46">+<pos:position pos:line="52" pos:column="47"/></operator> <literal type="char" pos:line="52" pos:column="48">'a'<pos:position pos:line="52" pos:column="51"/></literal> <operator pos:line="52" pos:column="52">-<pos:position pos:line="52" pos:column="53"/></operator> <literal type="number" pos:line="52" pos:column="54">1<pos:position pos:line="52" pos:column="55"/></literal></expr>;<pos:position pos:line="52" pos:column="56"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">encode_85<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">line<pos:position pos:line="53" pos:column="31"/></name> <operator pos:line="53" pos:column="32">+<pos:position pos:line="53" pos:column="33"/></operator> <literal type="number" pos:line="53" pos:column="34">1<pos:position pos:line="53" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="37">cp<pos:position pos:line="53" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="41">bytes<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="54" pos:column="17">cp<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <operator pos:line="54" pos:column="22">(<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">char<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">*<pos:position pos:line="54" pos:column="29"/></operator><operator pos:line="54" pos:column="29">)<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">cp<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">+<pos:position pos:line="54" pos:column="35"/></operator> <name pos:line="54" pos:column="36">bytes<pos:position pos:line="54" pos:column="41"/></name></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">fprintf<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">file<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="31">"%s"<pos:position pos:line="55" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="37">prefix<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">fputs<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">line<pos:position pos:line="56" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="29">file<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">fputc<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">(<argument><expr><literal type="char" pos:line="57" pos:column="23">'\n'<pos:position pos:line="57" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="29">file<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">fprintf<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">file<pos:position pos:line="59" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="23">"%s\n"<pos:position pos:line="59" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="31">prefix<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">free<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">data<pos:position pos:line="60" pos:column="18"/></name></expr></argument>)<pos:position pos:line="60" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

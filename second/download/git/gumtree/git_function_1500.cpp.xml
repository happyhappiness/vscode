<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1500.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_commit<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">commit<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">commit<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">rev_info<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">rev<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">saved_output_format<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name><name pos:line="3" pos:column="35">rev<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">-&gt;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="40">diffopt<pos:position pos:line="3" pos:column="47"/></name><operator pos:line="3" pos:column="47">.<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="48">output_format<pos:position pos:line="3" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">commit_buffer<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">author<pos:position pos:line="5" pos:column="27"/></name></decl>, <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="30">author_end<pos:position pos:line="5" pos:column="40"/></name></decl>, <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="43">committer<pos:position pos:line="5" pos:column="52"/></name></decl>, <modifier pos:line="5" pos:column="54">*<pos:position pos:line="5" pos:column="55"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="55">committer_end<pos:position pos:line="5" pos:column="68"/></name></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">encoding<pos:position pos:line="6" pos:column="29"/></name></decl>, <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="32">message<pos:position pos:line="6" pos:column="39"/></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">reencoded<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit_list<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">p<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">rev<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">diffopt<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">output_format<pos:position pos:line="11" pos:column="35"/></name></name> <operator pos:line="11" pos:column="36">=<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">DIFF_FORMAT_CALLBACK<pos:position pos:line="11" pos:column="58"/></name></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">parse_commit_or_die<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">commit<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">commit_buffer<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <call><name pos:line="14" pos:column="25">get_commit_buffer<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">commit<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">NULL<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">author<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">strstr<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">commit_buffer<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="40">"\nauthor "<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">author<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name> <argument_list pos:line="17" pos:column="21">(<argument><expr><literal type="string" pos:line="17" pos:column="22">"Could not find author in commit %s"<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>,
		     <argument><expr><call><name pos:line="18" pos:column="22">sha1_to_hex<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">commit<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">object<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">.<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">sha1<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="19" pos:column="9">author<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">++<pos:position pos:line="19" pos:column="17"/></operator></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">author_end<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">strchrnul<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">author<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="40">'\n'<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">committer<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">strstr<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">author_end<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="40">"\ncommitter "<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">committer<pos:position pos:line="22" pos:column="23"/></name></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">die<pos:position pos:line="23" pos:column="20"/></name> <argument_list pos:line="23" pos:column="21">(<argument><expr><literal type="string" pos:line="23" pos:column="22">"Could not find committer in commit %s"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>,
		     <argument><expr><call><name pos:line="24" pos:column="22">sha1_to_hex<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name><name pos:line="24" pos:column="34">commit<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">object<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">.<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">sha1<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="25" pos:column="9">committer<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">++<pos:position pos:line="25" pos:column="20"/></operator></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">committer_end<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <call><name pos:line="26" pos:column="25">strchrnul<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">committer<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="46">'\n'<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">message<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">strstr<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">committer_end<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="41">"\n\n"<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">encoding<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">find_encoding<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">committer_end<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">message<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">message<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">message<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">+=<pos:position pos:line="30" pos:column="27"/></operator> <literal type="number" pos:line="30" pos:column="28">2<pos:position pos:line="30" pos:column="29"/></literal></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">commit<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">parents<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">&amp;&amp;<pos:position pos:line="32" pos:column="39"/></operator>
	    <call><name pos:line="33" pos:column="13">get_object_mark<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><operator pos:line="33" pos:column="29">&amp;<pos:position pos:line="33" pos:column="34"/></operator><name><name pos:line="33" pos:column="30">commit<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">-&gt;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="38">parents<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">item<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">object<pos:position pos:line="33" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call> <operator pos:line="33" pos:column="61">!=<pos:position pos:line="33" pos:column="63"/></operator> <literal type="number" pos:line="33" pos:column="64">0<pos:position pos:line="33" pos:column="65"/></literal> <operator pos:line="33" pos:column="66">&amp;&amp;<pos:position pos:line="33" pos:column="76"/></operator>
	    <operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">full_tree<pos:position pos:line="34" pos:column="23"/></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24"> <block pos:line="34" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">parse_commit_or_die<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name><name pos:line="35" pos:column="37">commit<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">parents<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">item<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">diff_tree_sha1<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name><name pos:line="36" pos:column="32">commit<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">parents<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">item<pos:position pos:line="36" pos:column="53"/></name><operator pos:line="36" pos:column="53">-&gt;<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="55">tree<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">-&gt;<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="61">object<pos:position pos:line="36" pos:column="67"/></name><operator pos:line="36" pos:column="67">.<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="68">sha1<pos:position pos:line="36" pos:column="72"/></name></name></expr></argument>,
			       <argument><expr><name><name pos:line="37" pos:column="32">commit<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">tree<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">object<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">.<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="53">sha1<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="59">""<pos:position pos:line="37" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="63">&amp;<pos:position pos:line="37" pos:column="68"/></operator><name><name pos:line="37" pos:column="64">rev<pos:position pos:line="37" pos:column="67"/></name><operator pos:line="37" pos:column="67">-&gt;<pos:position pos:line="37" pos:column="72"/></operator><name pos:line="37" pos:column="69">diffopt<pos:position pos:line="37" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then>
	<else pos:line="39" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">diff_root_tree_sha1<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name><name pos:line="40" pos:column="37">commit<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">tree<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">object<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">.<pos:position pos:line="40" pos:column="58"/></operator><name pos:line="40" pos:column="58">sha1<pos:position pos:line="40" pos:column="62"/></name></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="41" pos:column="37">""<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="41">&amp;<pos:position pos:line="41" pos:column="46"/></operator><name><name pos:line="41" pos:column="42">rev<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">diffopt<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="43" pos:column="9">/* Export the referenced blobs, and remember the marks. */</comment>
	<for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></init> <condition><expr><name pos:line="44" pos:column="21">i<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">&lt;<pos:position pos:line="44" pos:column="27"/></operator> <name><name pos:line="44" pos:column="25">diff_queued_diff<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">.<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">nr<pos:position pos:line="44" pos:column="44"/></name></name></expr>;<pos:position pos:line="44" pos:column="45"/></condition> <incr><expr><name pos:line="44" pos:column="46">i<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">++<pos:position pos:line="44" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="50"/></control>
		<block type="pseudo"><if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><call><name pos:line="45" pos:column="22">S_ISGITLINK<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><name><name pos:line="45" pos:column="34">diff_queued_diff<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">.<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">queue<pos:position pos:line="45" pos:column="56"/></name><index pos:line="45" pos:column="56">[<expr><name pos:line="45" pos:column="57">i<pos:position pos:line="45" pos:column="58"/></name></expr>]<pos:position pos:line="45" pos:column="59"/></index></name><operator pos:line="45" pos:column="59">-&gt;<pos:position pos:line="45" pos:column="64"/></operator><name><name pos:line="45" pos:column="61">two<pos:position pos:line="45" pos:column="64"/></name><operator pos:line="45" pos:column="64">-&gt;<pos:position pos:line="45" pos:column="69"/></operator><name pos:line="45" pos:column="66">mode<pos:position pos:line="45" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="72"/></condition><then pos:line="45" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">export_blob<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name><name pos:line="46" pos:column="37">diff_queued_diff<pos:position pos:line="46" pos:column="53"/></name><operator pos:line="46" pos:column="53">.<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="54">queue<pos:position pos:line="46" pos:column="59"/></name><index pos:line="46" pos:column="59">[<expr><name pos:line="46" pos:column="60">i<pos:position pos:line="46" pos:column="61"/></name></expr>]<pos:position pos:line="46" pos:column="62"/></index></name><operator pos:line="46" pos:column="62">-&gt;<pos:position pos:line="46" pos:column="67"/></operator><name><name pos:line="46" pos:column="64">two<pos:position pos:line="46" pos:column="67"/></name><operator pos:line="46" pos:column="67">-&gt;<pos:position pos:line="46" pos:column="72"/></operator><name pos:line="46" pos:column="69">sha1<pos:position pos:line="46" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt></block></then></if></block></for>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">mark_next_object<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><operator pos:line="48" pos:column="26">&amp;<pos:position pos:line="48" pos:column="31"/></operator><name><name pos:line="48" pos:column="27">commit<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">object<pos:position pos:line="48" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name pos:line="49" pos:column="14">is_encoding_utf8<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">encoding<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="17">reencoded<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <call><name pos:line="50" pos:column="29">reencode_string<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name pos:line="50" pos:column="45">message<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="54">"UTF-8"<pos:position pos:line="50" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="63">encoding<pos:position pos:line="50" pos:column="71"/></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name><name pos:line="51" pos:column="14">commit<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">parents<pos:position pos:line="51" pos:column="29"/></name></name></expr>)<pos:position pos:line="51" pos:column="30"/></condition><then pos:line="51" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">printf<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><literal type="string" pos:line="52" pos:column="24">"reset %s\n"<pos:position pos:line="52" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="38">(<pos:position pos:line="52" pos:column="39"/></operator><specifier pos:line="52" pos:column="39">const<pos:position pos:line="52" pos:column="44"/></specifier> <name pos:line="52" pos:column="45">char<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">*<pos:position pos:line="52" pos:column="50"/></operator><operator pos:line="52" pos:column="50">)<pos:position pos:line="52" pos:column="51"/></operator><name><name pos:line="52" pos:column="51">commit<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">-&gt;<pos:position pos:line="52" pos:column="62"/></operator><name pos:line="52" pos:column="59">util<pos:position pos:line="52" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">printf<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><literal type="string" pos:line="53" pos:column="16">"commit %s\nmark :%"<pos:position pos:line="53" pos:column="36"/></literal><name pos:line="53" pos:column="36">PRIu32<pos:position pos:line="53" pos:column="42"/></name><literal type="string" pos:line="53" pos:column="42">"\n%.*s\n%.*s\ndata %u\n%s"<pos:position pos:line="53" pos:column="69"/></literal></expr></argument>,
	       <argument><expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><specifier pos:line="54" pos:column="17">const<pos:position pos:line="54" pos:column="22"/></specifier> <name pos:line="54" pos:column="23">char<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">*<pos:position pos:line="54" pos:column="29"/></operator><operator pos:line="54" pos:column="29">)<pos:position pos:line="54" pos:column="30"/></operator><name><name pos:line="54" pos:column="30">commit<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">-&gt;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="38">util<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">last_idnum<pos:position pos:line="54" pos:column="54"/></name></expr></argument>,
	       <argument><expr><call pos:line="55" pos:column="16">(<name pos:line="55" pos:column="17">int<pos:position pos:line="55" pos:column="20"/></name>)<argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">author_end<pos:position pos:line="55" pos:column="32"/></name> <operator pos:line="55" pos:column="33">-<pos:position pos:line="55" pos:column="34"/></operator> <name pos:line="55" pos:column="35">author<pos:position pos:line="55" pos:column="41"/></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">author<pos:position pos:line="55" pos:column="50"/></name></expr></argument>,
	       <argument><expr><call pos:line="56" pos:column="16">(<name pos:line="56" pos:column="17">int<pos:position pos:line="56" pos:column="20"/></name>)<argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">committer_end<pos:position pos:line="56" pos:column="35"/></name> <operator pos:line="56" pos:column="36">-<pos:position pos:line="56" pos:column="37"/></operator> <name pos:line="56" pos:column="38">committer<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="56" pos:column="50">committer<pos:position pos:line="56" pos:column="59"/></name></expr></argument>,
	       <argument><expr><call pos:line="57" pos:column="16">(<name pos:line="57" pos:column="17">unsigned<pos:position pos:line="57" pos:column="25"/></name>)<argument_list pos:line="57" pos:column="26">(<argument><expr><ternary><condition><expr><name pos:line="57" pos:column="27">reencoded<pos:position pos:line="57" pos:column="36"/></name></expr>
			  ?<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28"> <expr><call><name pos:line="58" pos:column="29">strlen<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><name pos:line="58" pos:column="36">reencoded<pos:position pos:line="58" pos:column="45"/></name></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call></expr> <pos:position pos:line="58" pos:column="47"/></then><else pos:line="58" pos:column="47">: <expr><ternary><condition><expr><name pos:line="58" pos:column="49">message<pos:position pos:line="58" pos:column="56"/></name></expr>
			  ?<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28"> <expr><call><name pos:line="59" pos:column="29">strlen<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">message<pos:position pos:line="59" pos:column="43"/></name></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="59" pos:column="45"/></then><else pos:line="59" pos:column="45">: <expr><literal type="number" pos:line="59" pos:column="47">0<pos:position pos:line="59" pos:column="48"/></literal></expr></else></ternary></expr></else></ternary></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="60" pos:column="16">reencoded<pos:position pos:line="60" pos:column="25"/></name></expr> ?<pos:position pos:line="60" pos:column="27"/></condition><then pos:line="60" pos:column="27"> <expr><name pos:line="60" pos:column="28">reencoded<pos:position pos:line="60" pos:column="37"/></name></expr> <pos:position pos:line="60" pos:column="38"/></then><else pos:line="60" pos:column="38">: <expr><ternary><condition><expr><name pos:line="60" pos:column="40">message<pos:position pos:line="60" pos:column="47"/></name></expr> ?<pos:position pos:line="60" pos:column="49"/></condition><then pos:line="60" pos:column="49"> <expr><name pos:line="60" pos:column="50">message<pos:position pos:line="60" pos:column="57"/></name></expr> <pos:position pos:line="60" pos:column="58"/></then><else pos:line="60" pos:column="58">: <expr><literal type="string" pos:line="60" pos:column="60">""<pos:position pos:line="60" pos:column="62"/></literal></expr></else></ternary></expr></else></ternary></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">free<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">reencoded<pos:position pos:line="61" pos:column="23"/></name></expr></argument>)<pos:position pos:line="61" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">unuse_commit_buffer<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">commit<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="37">commit_buffer<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>

	<for pos:line="64" pos:column="9">for <control pos:line="64" pos:column="13">(<init><expr><name pos:line="64" pos:column="14">i<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <literal type="number" pos:line="64" pos:column="18">0<pos:position pos:line="64" pos:column="19"/></literal></expr><operator pos:line="64" pos:column="19">,<pos:position pos:line="64" pos:column="20"/></operator> <expr><name pos:line="64" pos:column="21">p<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <name><name pos:line="64" pos:column="25">commit<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">-&gt;<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="33">parents<pos:position pos:line="64" pos:column="40"/></name></name></expr>;<pos:position pos:line="64" pos:column="41"/></init> <condition><expr><name pos:line="64" pos:column="42">p<pos:position pos:line="64" pos:column="43"/></name></expr>;<pos:position pos:line="64" pos:column="44"/></condition> <incr><expr><name pos:line="64" pos:column="45">p<pos:position pos:line="64" pos:column="46"/></name> <operator pos:line="64" pos:column="47">=<pos:position pos:line="64" pos:column="48"/></operator> <name><name pos:line="64" pos:column="49">p<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">-&gt;<pos:position pos:line="64" pos:column="55"/></operator><name pos:line="64" pos:column="52">next<pos:position pos:line="64" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="64" pos:column="57"/></control> <block pos:line="64" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="65" pos:column="17">int<pos:position pos:line="65" pos:column="20"/></name></type> <name pos:line="65" pos:column="21">mark<pos:position pos:line="65" pos:column="25"/></name> <init pos:line="65" pos:column="26">= <expr><call><name pos:line="65" pos:column="28">get_object_mark<pos:position pos:line="65" pos:column="43"/></name><argument_list pos:line="65" pos:column="43">(<argument><expr><operator pos:line="65" pos:column="44">&amp;<pos:position pos:line="65" pos:column="49"/></operator><name><name pos:line="65" pos:column="45">p<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">-&gt;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="48">item<pos:position pos:line="65" pos:column="52"/></name><operator pos:line="65" pos:column="52">-&gt;<pos:position pos:line="65" pos:column="57"/></operator><name pos:line="65" pos:column="54">object<pos:position pos:line="65" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="62"/></decl_stmt>
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><operator pos:line="66" pos:column="21">!<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">mark<pos:position pos:line="66" pos:column="26"/></name></expr>)<pos:position pos:line="66" pos:column="27"/></condition><then pos:line="66" pos:column="27">
			<block type="pseudo"><continue pos:line="67" pos:column="25">continue;<pos:position pos:line="67" pos:column="34"/></continue></block></then></if>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">i<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">==<pos:position pos:line="68" pos:column="25"/></operator> <literal type="number" pos:line="68" pos:column="26">0<pos:position pos:line="68" pos:column="27"/></literal></expr>)<pos:position pos:line="68" pos:column="28"/></condition><then pos:line="68" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">printf<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><literal type="string" pos:line="69" pos:column="32">"from :%d\n"<pos:position pos:line="69" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">mark<pos:position pos:line="69" pos:column="50"/></name></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="70" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="25">printf<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><literal type="string" pos:line="71" pos:column="32">"merge :%d\n"<pos:position pos:line="71" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="47">mark<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="72" pos:column="17">i<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">++<pos:position pos:line="72" pos:column="20"/></operator></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></for>

	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">full_tree<pos:position pos:line="75" pos:column="22"/></name></expr>)<pos:position pos:line="75" pos:column="23"/></condition><then pos:line="75" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="17">printf<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><literal type="string" pos:line="76" pos:column="24">"deleteall\n"<pos:position pos:line="76" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="39"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">log_tree_diff_flush<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><name pos:line="77" pos:column="29">rev<pos:position pos:line="77" pos:column="32"/></name></expr></argument>)<pos:position pos:line="77" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="78" pos:column="9">rev<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">diffopt<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">.<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="22">output_format<pos:position pos:line="78" pos:column="35"/></name></name> <operator pos:line="78" pos:column="36">=<pos:position pos:line="78" pos:column="37"/></operator> <name pos:line="78" pos:column="38">saved_output_format<pos:position pos:line="78" pos:column="57"/></name></expr>;<pos:position pos:line="78" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="80" pos:column="9">printf<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><literal type="string" pos:line="80" pos:column="16">"\n"<pos:position pos:line="80" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="82" pos:column="9">show_progress<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">()<pos:position pos:line="82" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

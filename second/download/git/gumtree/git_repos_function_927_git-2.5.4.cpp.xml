<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_927_git-2.5.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">commit_list<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier><modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">simplify_one<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">rev_info<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">revs<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="65">struct<pos:position pos:line="1" pos:column="71"/></name> <name pos:line="1" pos:column="72">commit<pos:position pos:line="1" pos:column="78"/></name></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">commit<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="88">struct<pos:position pos:line="1" pos:column="94"/></name> <name pos:line="1" pos:column="95">commit_list<pos:position pos:line="1" pos:column="106"/></name></name> <modifier pos:line="1" pos:column="107">*<pos:position pos:line="1" pos:column="108"/></modifier><modifier pos:line="1" pos:column="108">*<pos:position pos:line="1" pos:column="109"/></modifier></type><name pos:line="1" pos:column="109">tail<pos:position pos:line="1" pos:column="113"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="114"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit_list<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">p<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">parent<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">merge_simplify_state<pos:position pos:line="5" pos:column="36"/></name></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">st<pos:position pos:line="5" pos:column="40"/></name></decl>, <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="43">pst<pos:position pos:line="5" pos:column="46"/></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">cnt<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">st<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">locate_simplify_state<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">revs<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">commit<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/*
	 * Have we handled this one?
	 */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">st<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">simplified<pos:position pos:line="13" pos:column="27"/></name></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">tail<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="16" pos:column="9">/*
	 * An UNINTERESTING commit simplifies to itself, so does a
	 * root commit.  We do not rewrite parents of such commit
	 * anyway.
	 */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">commit<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">object<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">.<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">flags<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">&amp;<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="37">UNINTERESTING<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">)<pos:position pos:line="21" pos:column="51"/></operator> <operator pos:line="21" pos:column="52">||<pos:position pos:line="21" pos:column="54"/></operator> <operator pos:line="21" pos:column="55">!<pos:position pos:line="21" pos:column="56"/></operator><name><name pos:line="21" pos:column="56">commit<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">-&gt;<pos:position pos:line="21" pos:column="67"/></operator><name pos:line="21" pos:column="64">parents<pos:position pos:line="21" pos:column="71"/></name></name></expr>)<pos:position pos:line="21" pos:column="72"/></condition><then pos:line="21" pos:column="72"> <block pos:line="21" pos:column="73">{
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">st<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">simplified<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="34">commit<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><name pos:line="23" pos:column="24">tail<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="26" pos:column="9">/*
	 * Do we know what commit all of our parents that matter
	 * should be rewritten to?  Otherwise we are not ready to
	 * rewrite this one yet.
	 */</comment>
	<for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">cnt<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr><operator pos:line="31" pos:column="21">,<pos:position pos:line="31" pos:column="22"/></operator> <expr><name pos:line="31" pos:column="23">p<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name><name pos:line="31" pos:column="27">commit<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">parents<pos:position pos:line="31" pos:column="42"/></name></name></expr>;<pos:position pos:line="31" pos:column="43"/></init> <condition><expr><name pos:line="31" pos:column="44">p<pos:position pos:line="31" pos:column="45"/></name></expr>;<pos:position pos:line="31" pos:column="46"/></condition> <incr><expr><name pos:line="31" pos:column="47">p<pos:position pos:line="31" pos:column="48"/></name> <operator pos:line="31" pos:column="49">=<pos:position pos:line="31" pos:column="50"/></operator> <name><name pos:line="31" pos:column="51">p<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">next<pos:position pos:line="31" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="31" pos:column="59"/></control> <block pos:line="31" pos:column="60">{
		<expr_stmt><expr><name pos:line="32" pos:column="17">pst<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">locate_simplify_state<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">revs<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="51">p<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">-&gt;<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="54">item<pos:position pos:line="32" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name><name pos:line="33" pos:column="22">pst<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">simplified<pos:position pos:line="33" pos:column="37"/></name></name></expr>)<pos:position pos:line="33" pos:column="38"/></condition><then pos:line="33" pos:column="38"> <block pos:line="33" pos:column="39">{
			<expr_stmt><expr><name pos:line="34" pos:column="25">tail<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <operator pos:line="34" pos:column="32">&amp;<pos:position pos:line="34" pos:column="37"/></operator><call><name pos:line="34" pos:column="33">commit_list_insert<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><name><name pos:line="34" pos:column="52">p<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">-&gt;<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="55">item<pos:position pos:line="34" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">tail<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call><operator pos:line="34" pos:column="66">-&gt;<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="68">next<pos:position pos:line="34" pos:column="72"/></name></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="35" pos:column="25">cnt<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">++<pos:position pos:line="35" pos:column="30"/></operator></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">revs<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">first_parent_only<pos:position pos:line="37" pos:column="44"/></name></name></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45">
			<block type="pseudo"><break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></for>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">cnt<pos:position pos:line="40" pos:column="16"/></name></expr>)<pos:position pos:line="40" pos:column="17"/></condition><then pos:line="40" pos:column="17"> <block pos:line="40" pos:column="18">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">tail<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <operator pos:line="41" pos:column="24">&amp;<pos:position pos:line="41" pos:column="29"/></operator><call><name pos:line="41" pos:column="25">commit_list_insert<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name pos:line="41" pos:column="44">commit<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="52">tail<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call><operator pos:line="41" pos:column="57">-&gt;<pos:position pos:line="41" pos:column="62"/></operator><name pos:line="41" pos:column="59">next<pos:position pos:line="41" pos:column="63"/></name></expr>;<pos:position pos:line="41" pos:column="64"/></expr_stmt>
		<return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">tail<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="45" pos:column="9">/*
	 * Rewrite our list of parents. Note that this cannot
	 * affect our TREESAME flags in any way - a commit is
	 * always TREESAME to its simplification.
	 */</comment>
	<for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">p<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <name><name pos:line="50" pos:column="18">commit<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">parents<pos:position pos:line="50" pos:column="33"/></name></name></expr>;<pos:position pos:line="50" pos:column="34"/></init> <condition><expr><name pos:line="50" pos:column="35">p<pos:position pos:line="50" pos:column="36"/></name></expr>;<pos:position pos:line="50" pos:column="37"/></condition> <incr><expr><name pos:line="50" pos:column="38">p<pos:position pos:line="50" pos:column="39"/></name> <operator pos:line="50" pos:column="40">=<pos:position pos:line="50" pos:column="41"/></operator> <name><name pos:line="50" pos:column="42">p<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">next<pos:position pos:line="50" pos:column="49"/></name></name></expr></incr>)<pos:position pos:line="50" pos:column="50"/></control> <block pos:line="50" pos:column="51">{
		<expr_stmt><expr><name pos:line="51" pos:column="17">pst<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">locate_simplify_state<pos:position pos:line="51" pos:column="44"/></name><argument_list pos:line="51" pos:column="44">(<argument><expr><name pos:line="51" pos:column="45">revs<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="51">p<pos:position pos:line="51" pos:column="52"/></name><operator pos:line="51" pos:column="52">-&gt;<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="54">item<pos:position pos:line="51" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">p<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">-&gt;<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="20">item<pos:position pos:line="52" pos:column="24"/></name></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <name><name pos:line="52" pos:column="27">pst<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">-&gt;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="32">simplified<pos:position pos:line="52" pos:column="42"/></name></name></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name><name pos:line="53" pos:column="21">revs<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">first_parent_only<pos:position pos:line="53" pos:column="44"/></name></name></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45">
			<block type="pseudo"><break pos:line="54" pos:column="25">break;<pos:position pos:line="54" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></for>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">revs<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">-&gt;<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="19">first_parent_only<pos:position pos:line="57" pos:column="36"/></name></name></expr>)<pos:position pos:line="57" pos:column="37"/></condition><then pos:line="57" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="17">cnt<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <literal type="number" pos:line="58" pos:column="23">1<pos:position pos:line="58" pos:column="24"/></literal></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt></block></then>
	<else pos:line="59" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="17">cnt<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <call><name pos:line="60" pos:column="23">remove_duplicate_parents<pos:position pos:line="60" pos:column="47"/></name><argument_list pos:line="60" pos:column="47">(<argument><expr><name pos:line="60" pos:column="48">revs<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="54">commit<pos:position pos:line="60" pos:column="60"/></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="62"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="62" pos:column="9">/*
	 * It is possible that we are a merge and one side branch
	 * does not have any commit that touches the given paths;
	 * in such a case, the immediate parent from that branch
	 * will be rewritten to be the merge base.
	 *
	 *      o----X		X: the commit we are looking at;
	 *     /    /		o: a commit that touches the paths;
	 * ---o----'
	 *
	 * Further, a merge of an independent branch that doesn't
	 * touch the path will reduce to a treesame root parent:
	 *
	 *  ----o----X		X: the commit we are looking at;
	 *          /		o: a commit that touches the paths;
	 *         r		r: a root commit not touching the paths
	 *
	 * Detect and simplify both cases.
	 */</comment>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><literal type="number" pos:line="81" pos:column="13">1<pos:position pos:line="81" pos:column="14"/></literal> <operator pos:line="81" pos:column="15">&lt;<pos:position pos:line="81" pos:column="19"/></operator> <name pos:line="81" pos:column="17">cnt<pos:position pos:line="81" pos:column="20"/></name></expr>)<pos:position pos:line="81" pos:column="21"/></condition><then pos:line="81" pos:column="21"> <block pos:line="81" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="82" pos:column="17">int<pos:position pos:line="82" pos:column="20"/></name></type> <name pos:line="82" pos:column="21">marked<pos:position pos:line="82" pos:column="27"/></name> <init pos:line="82" pos:column="28">= <expr><call><name pos:line="82" pos:column="30">mark_redundant_parents<pos:position pos:line="82" pos:column="52"/></name><argument_list pos:line="82" pos:column="52">(<argument><expr><name pos:line="82" pos:column="53">revs<pos:position pos:line="82" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="59">commit<pos:position pos:line="82" pos:column="65"/></name></expr></argument>)<pos:position pos:line="82" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="67"/></decl_stmt>
		<expr_stmt><expr><name pos:line="83" pos:column="17">marked<pos:position pos:line="83" pos:column="23"/></name> <operator pos:line="83" pos:column="24">+=<pos:position pos:line="83" pos:column="26"/></operator> <call><name pos:line="83" pos:column="27">mark_treesame_root_parents<pos:position pos:line="83" pos:column="53"/></name><argument_list pos:line="83" pos:column="53">(<argument><expr><name pos:line="83" pos:column="54">revs<pos:position pos:line="83" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="60">commit<pos:position pos:line="83" pos:column="66"/></name></expr></argument>)<pos:position pos:line="83" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="68"/></expr_stmt>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">marked<pos:position pos:line="84" pos:column="27"/></name></expr>)<pos:position pos:line="84" pos:column="28"/></condition><then pos:line="84" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="25">marked<pos:position pos:line="85" pos:column="31"/></name> <operator pos:line="85" pos:column="32">-=<pos:position pos:line="85" pos:column="34"/></operator> <call><name pos:line="85" pos:column="35">leave_one_treesame_to_parent<pos:position pos:line="85" pos:column="63"/></name><argument_list pos:line="85" pos:column="63">(<argument><expr><name pos:line="85" pos:column="64">revs<pos:position pos:line="85" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="70">commit<pos:position pos:line="85" pos:column="76"/></name></expr></argument>)<pos:position pos:line="85" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="78"/></expr_stmt></block></then></if>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">marked<pos:position pos:line="86" pos:column="27"/></name></expr>)<pos:position pos:line="86" pos:column="28"/></condition><then pos:line="86" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="25">cnt<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">=<pos:position pos:line="87" pos:column="30"/></operator> <call><name pos:line="87" pos:column="31">remove_marked_parents<pos:position pos:line="87" pos:column="52"/></name><argument_list pos:line="87" pos:column="52">(<argument><expr><name pos:line="87" pos:column="53">revs<pos:position pos:line="87" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="59">commit<pos:position pos:line="87" pos:column="65"/></name></expr></argument>)<pos:position pos:line="87" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="67"/></expr_stmt></block></then></if>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="90" pos:column="9">/*
	 * A commit simplifies to itself if it is a root, if it is
	 * UNINTERESTING, if it touches the given paths, or if it is a
	 * merge and its parents don't simplify to one relevant commit
	 * (the first two cases are already handled at the beginning of
	 * this function).
	 *
	 * Otherwise, it simplifies to what its sole relevant parent
	 * simplifies to.
	 */</comment>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><operator pos:line="100" pos:column="13">!<pos:position pos:line="100" pos:column="14"/></operator><name pos:line="100" pos:column="14">cnt<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">||<pos:position pos:line="100" pos:column="20"/></operator>
	    <operator pos:line="101" pos:column="13">(<pos:position pos:line="101" pos:column="14"/></operator><name><name pos:line="101" pos:column="14">commit<pos:position pos:line="101" pos:column="20"/></name><operator pos:line="101" pos:column="20">-&gt;<pos:position pos:line="101" pos:column="25"/></operator><name pos:line="101" pos:column="22">object<pos:position pos:line="101" pos:column="28"/></name><operator pos:line="101" pos:column="28">.<pos:position pos:line="101" pos:column="29"/></operator><name pos:line="101" pos:column="29">flags<pos:position pos:line="101" pos:column="34"/></name></name> <operator pos:line="101" pos:column="35">&amp;<pos:position pos:line="101" pos:column="40"/></operator> <name pos:line="101" pos:column="37">UNINTERESTING<pos:position pos:line="101" pos:column="50"/></name><operator pos:line="101" pos:column="50">)<pos:position pos:line="101" pos:column="51"/></operator> <operator pos:line="101" pos:column="52">||<pos:position pos:line="101" pos:column="54"/></operator>
	    <operator pos:line="102" pos:column="13">!<pos:position pos:line="102" pos:column="14"/></operator><operator pos:line="102" pos:column="14">(<pos:position pos:line="102" pos:column="15"/></operator><name><name pos:line="102" pos:column="15">commit<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">-&gt;<pos:position pos:line="102" pos:column="26"/></operator><name pos:line="102" pos:column="23">object<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">.<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="30">flags<pos:position pos:line="102" pos:column="35"/></name></name> <operator pos:line="102" pos:column="36">&amp;<pos:position pos:line="102" pos:column="41"/></operator> <name pos:line="102" pos:column="38">TREESAME<pos:position pos:line="102" pos:column="46"/></name><operator pos:line="102" pos:column="46">)<pos:position pos:line="102" pos:column="47"/></operator> <operator pos:line="102" pos:column="48">||<pos:position pos:line="102" pos:column="50"/></operator>
	    <operator pos:line="103" pos:column="13">(<pos:position pos:line="103" pos:column="14"/></operator><name pos:line="103" pos:column="14">parent<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">=<pos:position pos:line="103" pos:column="22"/></operator> <call><name pos:line="103" pos:column="23">one_relevant_parent<pos:position pos:line="103" pos:column="42"/></name><argument_list pos:line="103" pos:column="42">(<argument><expr><name pos:line="103" pos:column="43">revs<pos:position pos:line="103" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="49">commit<pos:position pos:line="103" pos:column="55"/></name><operator pos:line="103" pos:column="55">-&gt;<pos:position pos:line="103" pos:column="60"/></operator><name pos:line="103" pos:column="57">parents<pos:position pos:line="103" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="65"/></argument_list></call><operator pos:line="103" pos:column="65">)<pos:position pos:line="103" pos:column="66"/></operator> <operator pos:line="103" pos:column="67">==<pos:position pos:line="103" pos:column="69"/></operator> <name pos:line="103" pos:column="70">NULL<pos:position pos:line="103" pos:column="74"/></name></expr>)<pos:position pos:line="103" pos:column="75"/></condition><then pos:line="103" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="104" pos:column="17">st<pos:position pos:line="104" pos:column="19"/></name><operator pos:line="104" pos:column="19">-&gt;<pos:position pos:line="104" pos:column="24"/></operator><name pos:line="104" pos:column="21">simplified<pos:position pos:line="104" pos:column="31"/></name></name> <operator pos:line="104" pos:column="32">=<pos:position pos:line="104" pos:column="33"/></operator> <name pos:line="104" pos:column="34">commit<pos:position pos:line="104" pos:column="40"/></name></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="105" pos:column="9">else <block pos:line="105" pos:column="14">{
		<expr_stmt><expr><name pos:line="106" pos:column="17">pst<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <call><name pos:line="106" pos:column="23">locate_simplify_state<pos:position pos:line="106" pos:column="44"/></name><argument_list pos:line="106" pos:column="44">(<argument><expr><name pos:line="106" pos:column="45">revs<pos:position pos:line="106" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="51">parent<pos:position pos:line="106" pos:column="57"/></name></expr></argument>)<pos:position pos:line="106" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="107" pos:column="17">st<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">-&gt;<pos:position pos:line="107" pos:column="24"/></operator><name pos:line="107" pos:column="21">simplified<pos:position pos:line="107" pos:column="31"/></name></name> <operator pos:line="107" pos:column="32">=<pos:position pos:line="107" pos:column="33"/></operator> <name><name pos:line="107" pos:column="34">pst<pos:position pos:line="107" pos:column="37"/></name><operator pos:line="107" pos:column="37">-&gt;<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="39">simplified<pos:position pos:line="107" pos:column="49"/></name></name></expr>;<pos:position pos:line="107" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="108" pos:column="10"/></block></else></if>
	<return pos:line="109" pos:column="9">return <expr><name pos:line="109" pos:column="16">tail<pos:position pos:line="109" pos:column="20"/></name></expr>;<pos:position pos:line="109" pos:column="21"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

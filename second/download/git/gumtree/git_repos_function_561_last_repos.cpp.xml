<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_561_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">grab_objectname<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">name<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">unsigned<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">sha1<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">atom_value<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">v<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="50">struct<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">used_atom<pos:position pos:line="2" pos:column="66"/></name></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">atom<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">starts_with<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">name<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="31">"objectname"<pos:position pos:line="4" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="45"/></condition><then pos:line="4" pos:column="45"> <block pos:line="4" pos:column="46">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><name><name pos:line="5" pos:column="21">atom<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">u<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">objectname<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">option<pos:position pos:line="5" pos:column="46"/></name></name> <operator pos:line="5" pos:column="47">==<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="50">O_SHORT<pos:position pos:line="5" pos:column="57"/></name></expr>)<pos:position pos:line="5" pos:column="58"/></condition><then pos:line="5" pos:column="58"> <block pos:line="5" pos:column="59">{
			<expr_stmt><expr><name><name pos:line="6" pos:column="25">v<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">s<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <call><name pos:line="6" pos:column="32">xstrdup<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><call><name pos:line="6" pos:column="40">find_unique_abbrev<pos:position pos:line="6" pos:column="58"/></name><argument_list pos:line="6" pos:column="58">(<argument><expr><name pos:line="6" pos:column="59">sha1<pos:position pos:line="6" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="65">DEFAULT_ABBREV<pos:position pos:line="6" pos:column="79"/></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="82"/></expr_stmt>
			<return pos:line="7" pos:column="25">return <expr><literal type="number" pos:line="7" pos:column="32">1<pos:position pos:line="7" pos:column="33"/></literal></expr>;<pos:position pos:line="7" pos:column="34"/></return>
		}<pos:position pos:line="8" pos:column="18"/></block></then> <elseif pos:line="8" pos:column="19">else <if pos:line="8" pos:column="24">if <condition pos:line="8" pos:column="27">(<expr><name><name pos:line="8" pos:column="28">atom<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">u<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">objectname<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">option<pos:position pos:line="8" pos:column="53"/></name></name> <operator pos:line="8" pos:column="54">==<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="57">O_FULL<pos:position pos:line="8" pos:column="63"/></name></expr>)<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64"> <block pos:line="8" pos:column="65">{
			<expr_stmt><expr><name><name pos:line="9" pos:column="25">v<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">s<pos:position pos:line="9" pos:column="29"/></name></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <call><name pos:line="9" pos:column="32">xstrdup<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><call><name pos:line="9" pos:column="40">sha1_to_hex<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name pos:line="9" pos:column="52">sha1<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
			<return pos:line="10" pos:column="25">return <expr><literal type="number" pos:line="10" pos:column="32">1<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></return>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if></elseif> <elseif pos:line="11" pos:column="19">else <if pos:line="11" pos:column="24">if <condition pos:line="11" pos:column="27">(<expr><name><name pos:line="11" pos:column="28">atom<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">u<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">objectname<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">option<pos:position pos:line="11" pos:column="53"/></name></name> <operator pos:line="11" pos:column="54">==<pos:position pos:line="11" pos:column="56"/></operator> <name pos:line="11" pos:column="57">O_LENGTH<pos:position pos:line="11" pos:column="65"/></name></expr>)<pos:position pos:line="11" pos:column="66"/></condition><then pos:line="11" pos:column="66"> <block pos:line="11" pos:column="67">{
			<expr_stmt><expr><name><name pos:line="12" pos:column="25">v<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">s<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">xstrdup<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><call><name pos:line="12" pos:column="40">find_unique_abbrev<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">(<argument><expr><name pos:line="12" pos:column="59">sha1<pos:position pos:line="12" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="65">atom<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">-&gt;<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="71">u<pos:position pos:line="12" pos:column="72"/></name><operator pos:line="12" pos:column="72">.<pos:position pos:line="12" pos:column="73"/></operator><name pos:line="12" pos:column="73">objectname<pos:position pos:line="12" pos:column="83"/></name><operator pos:line="12" pos:column="83">.<pos:position pos:line="12" pos:column="84"/></operator><name pos:line="12" pos:column="84">length<pos:position pos:line="12" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="93"/></expr_stmt>
			<return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">1<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if></elseif> <else pos:line="14" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">die<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="string" pos:line="15" pos:column="29">"BUG: unknown %%(objectname) option"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt></block></else></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

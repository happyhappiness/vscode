<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1422_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">unkeep_all_packs<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name><index pos:line="3" pos:column="25">[<expr><name pos:line="3" pos:column="26">PATH_MAX<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">k<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">k<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">k<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">pack_id<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></condition> <incr><expr><name pos:line="6" pos:column="34">k<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">++<pos:position pos:line="6" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="38"/></control> <block pos:line="6" pos:column="39">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">packed_git<pos:position pos:line="7" pos:column="34"/></name></name> <modifier pos:line="7" pos:column="35">*<pos:position pos:line="7" pos:column="36"/></modifier></type><name pos:line="7" pos:column="36">p<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><name><name pos:line="7" pos:column="40">all_packs<pos:position pos:line="7" pos:column="49"/></name><index pos:line="7" pos:column="49">[<expr><name pos:line="7" pos:column="50">k<pos:position pos:line="7" pos:column="51"/></name></expr>]<pos:position pos:line="7" pos:column="52"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">snprintf<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">name<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="32">sizeof<argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">name<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="46">"%s/pack/pack-%s.keep"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>,
			 <argument><expr><call><name pos:line="9" pos:column="26">get_object_directory<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">()<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="50">sha1_to_hex<pos:position pos:line="9" pos:column="61"/></name><argument_list pos:line="9" pos:column="61">(<argument><expr><name><name pos:line="9" pos:column="62">p<pos:position pos:line="9" pos:column="63"/></name><operator pos:line="9" pos:column="63">-&gt;<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="65">sha1<pos:position pos:line="9" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">unlink_or_warn<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">name<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

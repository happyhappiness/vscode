<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2631.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">install_branch_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">flag<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">local<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">origin<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="76">const<pos:position pos:line="1" pos:column="81"/></specifier> <name pos:line="1" pos:column="82">char<pos:position pos:line="1" pos:column="86"/></name> <modifier pos:line="1" pos:column="87">*<pos:position pos:line="1" pos:column="88"/></modifier></type><name pos:line="1" pos:column="88">remote<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="95"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">shortname<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">key<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">STRBUF_INIT<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">rebasing<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">should_setup_rebase<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">origin<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">skip_prefix<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">remote<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"refs/heads/"<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="48">&amp;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="49">shortname<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call>
	    <operator pos:line="8" pos:column="13">&amp;&amp;<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="16">!<pos:position pos:line="8" pos:column="17"/></operator><call><name pos:line="8" pos:column="17">strcmp<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">local<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">shortname<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call>
	    <operator pos:line="9" pos:column="13">&amp;&amp;<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="16">!<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">origin<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24"> <block pos:line="9" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">warning<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><call><name pos:line="10" pos:column="25">_<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="string" pos:line="10" pos:column="27">"Not setting branch %s as its own upstream."<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="11" pos:column="25">local<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_addf<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="22">key<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="27">"branch.%s.remote"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">local<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">git_config_set_gently<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name><name pos:line="16" pos:column="35">key<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">.<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">buf<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="16" pos:column="44">origin<pos:position pos:line="16" pos:column="50"/></name></expr> ?<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52"> <expr><name pos:line="16" pos:column="53">origin<pos:position pos:line="16" pos:column="59"/></name></expr> <pos:position pos:line="16" pos:column="60"/></then><else pos:line="16" pos:column="60">: <expr><literal type="string" pos:line="16" pos:column="62">"."<pos:position pos:line="16" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call> <operator pos:line="16" pos:column="67">&lt;<pos:position pos:line="16" pos:column="71"/></operator> <literal type="number" pos:line="16" pos:column="69">0<pos:position pos:line="16" pos:column="70"/></literal></expr>)<pos:position pos:line="16" pos:column="71"/></condition><then pos:line="16" pos:column="71">
		<block type="pseudo"><goto pos:line="17" pos:column="17">goto <name pos:line="17" pos:column="22">out_err<pos:position pos:line="17" pos:column="29"/></name>;<pos:position pos:line="17" pos:column="30"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">strbuf_reset<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><operator pos:line="19" pos:column="22">&amp;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="23">key<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strbuf_addf<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><operator pos:line="20" pos:column="21">&amp;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="22">key<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"branch.%s.merge"<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">local<pos:position pos:line="20" pos:column="51"/></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">git_config_set_gently<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name><name pos:line="21" pos:column="35">key<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">buf<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">remote<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call> <operator pos:line="21" pos:column="52">&lt;<pos:position pos:line="21" pos:column="56"/></operator> <literal type="number" pos:line="21" pos:column="54">0<pos:position pos:line="21" pos:column="55"/></literal></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56">
		<block type="pseudo"><goto pos:line="22" pos:column="17">goto <name pos:line="22" pos:column="22">out_err<pos:position pos:line="22" pos:column="29"/></name>;<pos:position pos:line="22" pos:column="30"/></goto></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">rebasing<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_reset<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="31">key<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_addf<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">&amp;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="30">key<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"branch.%s.rebase"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">local<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">git_config_set_gently<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name><name pos:line="27" pos:column="43">key<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">.<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="47">buf<pos:position pos:line="27" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="52">"true"<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call> <operator pos:line="27" pos:column="60">&lt;<pos:position pos:line="27" pos:column="64"/></operator> <literal type="number" pos:line="27" pos:column="62">0<pos:position pos:line="27" pos:column="63"/></literal></expr>)<pos:position pos:line="27" pos:column="64"/></condition><then pos:line="27" pos:column="64">
			<block type="pseudo"><goto pos:line="28" pos:column="25">goto <name pos:line="28" pos:column="30">out_err<pos:position pos:line="28" pos:column="37"/></name>;<pos:position pos:line="28" pos:column="38"/></goto></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_release<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">key<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">flag<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">&amp;<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="20">BRANCH_CONFIG_VERBOSE<pos:position pos:line="32" pos:column="41"/></name></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42"> <block pos:line="32" pos:column="43">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">shortname<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <block pos:line="33" pos:column="32">{
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><name pos:line="34" pos:column="29">origin<pos:position pos:line="34" pos:column="35"/></name></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="33">printf_ln<pos:position pos:line="35" pos:column="42"/></name><argument_list pos:line="35" pos:column="42">(<argument><expr><ternary><condition><expr><name pos:line="35" pos:column="43">rebasing<pos:position pos:line="35" pos:column="51"/></name></expr> ?<pos:position pos:line="35" pos:column="53"/></condition><then pos:line="35" pos:column="53">
					  <expr><call><name pos:line="36" pos:column="43">_<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><literal type="string" pos:line="36" pos:column="45">"Branch %s set up to track remote branch %s from %s by rebasing."<pos:position pos:line="36" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="111"/></argument_list></call></expr> <pos:position pos:line="36" pos:column="112"/></then><else pos:line="36" pos:column="112">:
					  <expr><call><name pos:line="37" pos:column="43">_<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><literal type="string" pos:line="37" pos:column="45">"Branch %s set up to track remote branch %s from %s."<pos:position pos:line="37" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="99"/></argument_list></call></expr></else></ternary></expr></argument>,
					  <argument><expr><name pos:line="38" pos:column="43">local<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">shortname<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">origin<pos:position pos:line="38" pos:column="67"/></name></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt></block></then>
			<else pos:line="39" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="33">printf_ln<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><ternary><condition><expr><name pos:line="40" pos:column="43">rebasing<pos:position pos:line="40" pos:column="51"/></name></expr> ?<pos:position pos:line="40" pos:column="53"/></condition><then pos:line="40" pos:column="53">
					  <expr><call><name pos:line="41" pos:column="43">_<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><literal type="string" pos:line="41" pos:column="45">"Branch %s set up to track local branch %s by rebasing."<pos:position pos:line="41" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="102"/></argument_list></call></expr> <pos:position pos:line="41" pos:column="103"/></then><else pos:line="41" pos:column="103">:
					  <expr><call><name pos:line="42" pos:column="43">_<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">(<argument><expr><literal type="string" pos:line="42" pos:column="45">"Branch %s set up to track local branch %s."<pos:position pos:line="42" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="90"/></argument_list></call></expr></else></ternary></expr></argument>,
					  <argument><expr><name pos:line="43" pos:column="43">local<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">shortname<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt></block></else></if>
		}<pos:position pos:line="44" pos:column="18"/></block></then> <else pos:line="44" pos:column="19">else <block pos:line="44" pos:column="24">{
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">origin<pos:position pos:line="45" pos:column="35"/></name></expr>)<pos:position pos:line="45" pos:column="36"/></condition><then pos:line="45" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="33">printf_ln<pos:position pos:line="46" pos:column="42"/></name><argument_list pos:line="46" pos:column="42">(<argument><expr><ternary><condition><expr><name pos:line="46" pos:column="43">rebasing<pos:position pos:line="46" pos:column="51"/></name></expr> ?<pos:position pos:line="46" pos:column="53"/></condition><then pos:line="46" pos:column="53">
					  <expr><call><name pos:line="47" pos:column="43">_<pos:position pos:line="47" pos:column="44"/></name><argument_list pos:line="47" pos:column="44">(<argument><expr><literal type="string" pos:line="47" pos:column="45">"Branch %s set up to track remote ref %s by rebasing."<pos:position pos:line="47" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="100"/></argument_list></call></expr> <pos:position pos:line="47" pos:column="101"/></then><else pos:line="47" pos:column="101">:
					  <expr><call><name pos:line="48" pos:column="43">_<pos:position pos:line="48" pos:column="44"/></name><argument_list pos:line="48" pos:column="44">(<argument><expr><literal type="string" pos:line="48" pos:column="45">"Branch %s set up to track remote ref %s."<pos:position pos:line="48" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="88"/></argument_list></call></expr></else></ternary></expr></argument>,
					  <argument><expr><name pos:line="49" pos:column="43">local<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">remote<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt></block></then>
			<else pos:line="50" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="33">printf_ln<pos:position pos:line="51" pos:column="42"/></name><argument_list pos:line="51" pos:column="42">(<argument><expr><ternary><condition><expr><name pos:line="51" pos:column="43">rebasing<pos:position pos:line="51" pos:column="51"/></name></expr> ?<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53">
					  <expr><call><name pos:line="52" pos:column="43">_<pos:position pos:line="52" pos:column="44"/></name><argument_list pos:line="52" pos:column="44">(<argument><expr><literal type="string" pos:line="52" pos:column="45">"Branch %s set up to track local ref %s by rebasing."<pos:position pos:line="52" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="99"/></argument_list></call></expr> <pos:position pos:line="52" pos:column="100"/></then><else pos:line="52" pos:column="100">:
					  <expr><call><name pos:line="53" pos:column="43">_<pos:position pos:line="53" pos:column="44"/></name><argument_list pos:line="53" pos:column="44">(<argument><expr><literal type="string" pos:line="53" pos:column="45">"Branch %s set up to track local ref %s."<pos:position pos:line="53" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="87"/></argument_list></call></expr></else></ternary></expr></argument>,
					  <argument><expr><name pos:line="54" pos:column="43">local<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">remote<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt></block></else></if>
		}<pos:position pos:line="55" pos:column="18"/></block></else></if>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>

<label><name pos:line="60" pos:column="1">out_err<pos:position pos:line="60" pos:column="8"/></name>:<pos:position pos:line="60" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">strbuf_release<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><operator pos:line="61" pos:column="24">&amp;<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="25">key<pos:position pos:line="61" pos:column="28"/></name></expr></argument>)<pos:position pos:line="61" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">error<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><call><name pos:line="62" pos:column="15">_<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><literal type="string" pos:line="62" pos:column="17">"Unable to write upstream branch configuration"<pos:position pos:line="62" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="67"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="64" pos:column="9">advise<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><call><name pos:line="64" pos:column="16">_<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><name pos:line="64" pos:column="18">tracking_advice<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="65" pos:column="16">origin<pos:position pos:line="65" pos:column="22"/></name></expr> ?<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24"> <expr><name pos:line="65" pos:column="25">origin<pos:position pos:line="65" pos:column="31"/></name></expr> <pos:position pos:line="65" pos:column="32"/></then><else pos:line="65" pos:column="32">: <expr><literal type="string" pos:line="65" pos:column="34">""<pos:position pos:line="65" pos:column="36"/></literal></expr></else></ternary></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="66" pos:column="16">origin<pos:position pos:line="66" pos:column="22"/></name></expr> ?<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24"> <expr><literal type="string" pos:line="66" pos:column="25">"/"<pos:position pos:line="66" pos:column="28"/></literal></expr> <pos:position pos:line="66" pos:column="29"/></then><else pos:line="66" pos:column="29">: <expr><literal type="string" pos:line="66" pos:column="31">""<pos:position pos:line="66" pos:column="33"/></literal></expr></else></ternary></expr></argument>,
	       <argument><expr><ternary><condition><expr><name pos:line="67" pos:column="16">shortname<pos:position pos:line="67" pos:column="25"/></name></expr> ?<pos:position pos:line="67" pos:column="27"/></condition><then pos:line="67" pos:column="27"> <expr><name pos:line="67" pos:column="28">shortname<pos:position pos:line="67" pos:column="37"/></name></expr> <pos:position pos:line="67" pos:column="38"/></then><else pos:line="67" pos:column="38">: <expr><name pos:line="67" pos:column="40">remote<pos:position pos:line="67" pos:column="46"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt>

	<return pos:line="69" pos:column="9">return <expr><operator pos:line="69" pos:column="16">-<pos:position pos:line="69" pos:column="17"/></operator><literal type="number" pos:line="69" pos:column="17">1<pos:position pos:line="69" pos:column="18"/></literal></expr>;<pos:position pos:line="69" pos:column="19"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

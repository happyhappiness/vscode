<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5968.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mingw_offset_1st_component<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">path<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">offset<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">has_dos_drive_prefix<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">path<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="17">offset<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="26">2<pos:position pos:line="5" pos:column="27"/></literal></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt></block></then>

	<comment type="block" pos:line="7" pos:column="9">/* unc paths */</comment>
	<elseif pos:line="8" pos:column="9">else <if pos:line="8" pos:column="14">if <condition pos:line="8" pos:column="17">(<expr><call><name pos:line="8" pos:column="18">is_dir_sep<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">path<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal></expr>]<pos:position pos:line="8" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call> <operator pos:line="8" pos:column="38">&amp;&amp;<pos:position pos:line="8" pos:column="48"/></operator> <call><name pos:line="8" pos:column="41">is_dir_sep<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name><name pos:line="8" pos:column="52">path<pos:position pos:line="8" pos:column="56"/></name><index pos:line="8" pos:column="56">[<expr><literal type="number" pos:line="8" pos:column="57">1<pos:position pos:line="8" pos:column="58"/></literal></expr>]<pos:position pos:line="8" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61"> <block pos:line="8" pos:column="62">{

		<comment type="block" pos:line="10" pos:column="17">/* skip server name */</comment>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">pos<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><call><name pos:line="11" pos:column="29">strpbrk<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">path<pos:position pos:line="11" pos:column="41"/></name> <operator pos:line="11" pos:column="42">+<pos:position pos:line="11" pos:column="43"/></operator> <literal type="number" pos:line="11" pos:column="44">2<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="47">"\\/"<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">pos<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="13" pos:column="35">/* Error: malformed unc path */</comment>

		<do pos:line="15" pos:column="17">do <block pos:line="15" pos:column="20">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">pos<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">++<pos:position pos:line="16" pos:column="30"/></operator></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block> while <condition pos:line="17" pos:column="25">(<expr><operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">pos<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">&amp;&amp;<pos:position pos:line="17" pos:column="41"/></operator> <operator pos:line="17" pos:column="34">!<pos:position pos:line="17" pos:column="35"/></operator><call><name pos:line="17" pos:column="35">is_dir_sep<pos:position pos:line="17" pos:column="45"/></name><argument_list pos:line="17" pos:column="45">(<argument><expr><operator pos:line="17" pos:column="46">*<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">pos<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition>;<pos:position pos:line="17" pos:column="53"/></do>

		<expr_stmt><expr><name pos:line="19" pos:column="17">offset<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">pos<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">-<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">path<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">offset<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">+<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">is_dir_sep<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name><name pos:line="22" pos:column="36">path<pos:position pos:line="22" pos:column="40"/></name><index pos:line="22" pos:column="40">[<expr><name pos:line="22" pos:column="41">offset<pos:position pos:line="22" pos:column="47"/></name></expr>]<pos:position pos:line="22" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1375_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_name_limit<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">apply_state<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">state<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">name<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="3" pos:column="28">int<pos:position pos:line="3" pos:column="31"/></name></type> <name pos:line="3" pos:column="32">exclude<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list_item<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">it<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">it<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">string_list_append<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><operator pos:line="7" pos:column="33">&amp;<pos:position pos:line="7" pos:column="38"/></operator><name><name pos:line="7" pos:column="34">state<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">limit_by_name<pos:position pos:line="7" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="56">name<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">it<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">util<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <ternary><condition><expr><name pos:line="8" pos:column="20">exclude<pos:position pos:line="8" pos:column="27"/></name></expr> ?<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr> <pos:position pos:line="8" pos:column="35"/></then><else pos:line="8" pos:column="35">: <expr><operator pos:line="8" pos:column="37">(<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">void<pos:position pos:line="8" pos:column="42"/></name> <operator pos:line="8" pos:column="43">*<pos:position pos:line="8" pos:column="44"/></operator><operator pos:line="8" pos:column="44">)<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">1<pos:position pos:line="8" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

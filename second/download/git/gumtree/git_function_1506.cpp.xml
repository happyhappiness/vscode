<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1506.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">gc_config<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">var<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">value<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">void<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">cb<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">var<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="26">"gc.packrefs"<pos:position pos:line="3" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41"> <block pos:line="3" pos:column="42">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><name pos:line="4" pos:column="21">value<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">&amp;&amp;<pos:position pos:line="4" pos:column="37"/></operator> <operator pos:line="4" pos:column="30">!<pos:position pos:line="4" pos:column="31"/></operator><call><name pos:line="4" pos:column="31">strcmp<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">value<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="45">"notbare"<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="56"/></condition><then pos:line="4" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="25">pack_refs<pos:position pos:line="5" pos:column="34"/></name> <operator pos:line="5" pos:column="35">=<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="37">-<pos:position pos:line="5" pos:column="38"/></operator><literal type="number" pos:line="5" pos:column="38">1<pos:position pos:line="5" pos:column="39"/></literal></expr>;<pos:position pos:line="5" pos:column="40"/></expr_stmt></block></then>
		<else pos:line="6" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="25">pack_refs<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">=<pos:position pos:line="7" pos:column="36"/></operator> <call><name pos:line="7" pos:column="37">git_config_bool<pos:position pos:line="7" pos:column="52"/></name><argument_list pos:line="7" pos:column="52">(<argument><expr><name pos:line="7" pos:column="53">var<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">value<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt></block></else></if>
		<return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">strcmp<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">var<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"gc.aggressivewindow"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49"> <block pos:line="10" pos:column="50">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">aggressive_window<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">=<pos:position pos:line="11" pos:column="36"/></operator> <call><name pos:line="11" pos:column="37">git_config_int<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">(<argument><expr><name pos:line="11" pos:column="52">var<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">value<pos:position pos:line="11" pos:column="62"/></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">strcmp<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">var<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"gc.aggressivedepth"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48"> <block pos:line="14" pos:column="49">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">aggressive_depth<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">=<pos:position pos:line="15" pos:column="35"/></operator> <call><name pos:line="15" pos:column="36">git_config_int<pos:position pos:line="15" pos:column="50"/></name><argument_list pos:line="15" pos:column="50">(<argument><expr><name pos:line="15" pos:column="51">var<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="56">value<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">strcmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">var<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"gc.auto"<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37"> <block pos:line="18" pos:column="38">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">gc_auto_threshold<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <call><name pos:line="19" pos:column="37">git_config_int<pos:position pos:line="19" pos:column="51"/></name><argument_list pos:line="19" pos:column="51">(<argument><expr><name pos:line="19" pos:column="52">var<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">value<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">strcmp<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">var<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="26">"gc.autopacklimit"<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46"> <block pos:line="22" pos:column="47">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">gc_auto_pack_limit<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <call><name pos:line="23" pos:column="38">git_config_int<pos:position pos:line="23" pos:column="52"/></name><argument_list pos:line="23" pos:column="52">(<argument><expr><name pos:line="23" pos:column="53">var<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">value<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><call><name pos:line="26" pos:column="14">strcmp<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">var<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="26">"gc.autodetach"<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">detach_auto<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <call><name pos:line="27" pos:column="31">git_config_bool<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">var<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">value<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><literal type="number" pos:line="28" pos:column="24">0<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">strcmp<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">var<pos:position pos:line="30" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="26">"gc.pruneexpire"<pos:position pos:line="30" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="44"/></condition><then pos:line="30" pos:column="44"> <block pos:line="30" pos:column="45">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">value<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">&amp;&amp;<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="30">strcmp<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">value<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="44">"now"<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51"> <block pos:line="31" pos:column="52">{
			<decl_stmt><decl><type><name pos:line="32" pos:column="25">unsigned<pos:position pos:line="32" pos:column="33"/></name> <name pos:line="32" pos:column="34">long<pos:position pos:line="32" pos:column="38"/></name></type> <name pos:line="32" pos:column="39">now<pos:position pos:line="32" pos:column="42"/></name> <init pos:line="32" pos:column="43">= <expr><call><name pos:line="32" pos:column="45">approxidate<pos:position pos:line="32" pos:column="56"/></name><argument_list pos:line="32" pos:column="56">(<argument><expr><literal type="string" pos:line="32" pos:column="57">"now"<pos:position pos:line="32" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="64"/></decl_stmt>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><call><name pos:line="33" pos:column="29">approxidate<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">value<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call> <operator pos:line="33" pos:column="48">&gt;=<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="51">now<pos:position pos:line="33" pos:column="54"/></name></expr>)<pos:position pos:line="33" pos:column="55"/></condition><then pos:line="33" pos:column="55">
				<block type="pseudo"><return pos:line="34" pos:column="33">return <expr><call><name pos:line="34" pos:column="40">error<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><call><name pos:line="34" pos:column="46">_<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><literal type="string" pos:line="34" pos:column="48">"Invalid %s: '%s'"<pos:position pos:line="34" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="69">var<pos:position pos:line="34" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="74">value<pos:position pos:line="34" pos:column="79"/></name></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="81"/></return></block></then></if>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
		<return pos:line="36" pos:column="17">return <expr><call><name pos:line="36" pos:column="24">git_config_string<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><operator pos:line="36" pos:column="42">&amp;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="43">prune_expire<pos:position pos:line="36" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="57">var<pos:position pos:line="36" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="62">value<pos:position pos:line="36" pos:column="67"/></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>
	<return pos:line="38" pos:column="9">return <expr><call><name pos:line="38" pos:column="16">git_default_config<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">var<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">value<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">cb<pos:position pos:line="38" pos:column="49"/></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

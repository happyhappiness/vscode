<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3648_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_ancestors<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">prefix<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_array<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">pending_copy<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">res<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">bisect_rev_setup<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><operator pos:line="7" pos:column="26">&amp;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="27">revs<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="33">prefix<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="41">"^%s"<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="48">"%s"<pos:position pos:line="7" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="54">0<pos:position pos:line="7" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* Save pending objects, so they can be cleaned up later. */</comment>
	<expr_stmt><expr><name pos:line="10" pos:column="9">pending_copy<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name><name pos:line="10" pos:column="24">revs<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">pending<pos:position pos:line="10" pos:column="36"/></name></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">revs<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">.<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">leak_pending<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="29">1<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * bisect_common calls prepare_revision_walk right away, which
	 * (together with .leak_pending = 1) makes us the sole owner of
	 * the list of pending objects.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">bisect_common<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">revs<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">res<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">(<pos:position pos:line="19" pos:column="16"/></operator><name><name pos:line="19" pos:column="16">revs<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">commits<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">!=<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">NULL<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">)<pos:position pos:line="19" pos:column="37"/></operator></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="21" pos:column="9">/* Clean up objects used, as they will be reused. */</comment>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">clear_commit_marks_for_object_array<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">(<argument><expr><operator pos:line="22" pos:column="45">&amp;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="46">pending_copy<pos:position pos:line="22" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="60">ALL_REV_FLAGS<pos:position pos:line="22" pos:column="73"/></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">free<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name><name pos:line="23" pos:column="14">pending_copy<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">objects<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>

	<return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">res<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

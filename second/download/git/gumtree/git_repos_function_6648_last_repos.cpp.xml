<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6648_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">warn_if_raster_font<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">DWORD<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">fontFamily<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><literal type="number" pos:line="3" pos:column="28">0<pos:position pos:line="3" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">PGETCURRENTCONSOLEFONTEX<pos:position pos:line="4" pos:column="33"/></name></type> <name pos:line="4" pos:column="34">pGetCurrentConsoleFontEx<pos:position pos:line="4" pos:column="58"/></name></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* don't bother if output was ascii only */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">non_ascii_used<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
		<block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

	<comment type="block" pos:line="10" pos:column="9">/* GetCurrentConsoleFontEx is available since Vista */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">pGetCurrentConsoleFontEx<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <operator pos:line="11" pos:column="36">(<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">PGETCURRENTCONSOLEFONTEX<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">)<pos:position pos:line="11" pos:column="62"/></operator> <call><name pos:line="11" pos:column="63">GetProcAddress<pos:position pos:line="11" pos:column="77"/></name><argument_list pos:line="11" pos:column="77">(
			<argument><expr><call><name pos:line="12" pos:column="25">GetModuleHandle<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><literal type="string" pos:line="12" pos:column="41">"kernel32.dll"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr></argument>,
			<argument><expr><literal type="string" pos:line="13" pos:column="25">"GetCurrentConsoleFontEx"<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">pGetCurrentConsoleFontEx<pos:position pos:line="14" pos:column="37"/></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38"> <block pos:line="14" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">CONSOLE_FONT_INFOEX<pos:position pos:line="15" pos:column="36"/></name></type> <name pos:line="15" pos:column="37">cfi<pos:position pos:line="15" pos:column="40"/></name></decl>;<pos:position pos:line="15" pos:column="41"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">cfi<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">cbSize<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <sizeof pos:line="16" pos:column="30">sizeof<argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">cfi<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">pGetCurrentConsoleFontEx<pos:position pos:line="17" pos:column="45"/></name><argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">console<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="55">0<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="58">&amp;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="59">cfi<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="64"/></condition><then pos:line="17" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">fontFamily<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">=<pos:position pos:line="18" pos:column="37"/></operator> <name><name pos:line="18" pos:column="38">cfi<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">.<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">FontFamily<pos:position pos:line="18" pos:column="52"/></name></name></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else <block pos:line="19" pos:column="16">{
		<comment type="block" pos:line="20" pos:column="17">/* pre-Vista: check default console font in registry */</comment>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">HKEY<pos:position pos:line="21" pos:column="21"/></name></type> <name pos:line="21" pos:column="22">hkey<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">ERROR_SUCCESS<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">==<pos:position pos:line="22" pos:column="37"/></operator> <call><name pos:line="22" pos:column="38">RegOpenKeyExA<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><name pos:line="22" pos:column="52">HKEY_CURRENT_USER<pos:position pos:line="22" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="71">"Console"<pos:position pos:line="22" pos:column="80"/></literal></expr></argument>,
				<argument><expr><literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">KEY_READ<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="46">&amp;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="47">hkey<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="53"/></condition><then pos:line="23" pos:column="53"> <block pos:line="23" pos:column="54">{
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">DWORD<pos:position pos:line="24" pos:column="30"/></name></type> <name pos:line="24" pos:column="31">size<pos:position pos:line="24" pos:column="35"/></name> <init pos:line="24" pos:column="36">= <expr><sizeof pos:line="24" pos:column="38">sizeof<argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">fontFamily<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="24" pos:column="57"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">RegQueryValueExA<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">hkey<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="48">"FontFamily"<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="62">NULL<pos:position pos:line="25" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="68">NULL<pos:position pos:line="25" pos:column="72"/></name></expr></argument>,
					<argument><expr><operator pos:line="26" pos:column="41">(<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">LPVOID<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">)<pos:position pos:line="26" pos:column="49"/></operator> <operator pos:line="26" pos:column="50">&amp;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="51">fontFamily<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="63">&amp;<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="64">size<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">RegCloseKey<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">hkey<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></else></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">fontFamily<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="28">TMPF_TRUETYPE<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">)<pos:position pos:line="31" pos:column="42"/></operator></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43"> <block pos:line="31" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="32" pos:column="17">const<pos:position pos:line="32" pos:column="22"/></specifier> <name pos:line="32" pos:column="23">wchar_t<pos:position pos:line="32" pos:column="30"/></name> <modifier pos:line="32" pos:column="31">*<pos:position pos:line="32" pos:column="32"/></modifier></type><name pos:line="32" pos:column="32">msg<pos:position pos:line="32" pos:column="35"/></name> <init pos:line="32" pos:column="36">= <expr><literal type="string" pos:line="32" pos:column="38">L"\nWarning: Your console font probably "<pos:position pos:line="32" pos:column="79"/></literal>
			<literal type="string" pos:line="33" pos:column="25">L"doesn\'t support Unicode. If you experience strange "<pos:position pos:line="33" pos:column="80"/></literal>
			<literal type="string" pos:line="34" pos:column="25">L"characters in the output, consider switching to a "<pos:position pos:line="34" pos:column="78"/></literal>
			<literal type="string" pos:line="35" pos:column="25">L"TrueType font such as Consolas!\n"<pos:position pos:line="35" pos:column="61"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="62"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">DWORD<pos:position pos:line="36" pos:column="22"/></name></type> <name pos:line="36" pos:column="23">dummy<pos:position pos:line="36" pos:column="28"/></name></decl>;<pos:position pos:line="36" pos:column="29"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">WriteConsoleW<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">console<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">msg<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="45">wcslen<pos:position pos:line="37" pos:column="51"/></name><argument_list pos:line="37" pos:column="51">(<argument><expr><name pos:line="37" pos:column="52">msg<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="37" pos:column="58">&amp;<pos:position pos:line="37" pos:column="63"/></operator><name pos:line="37" pos:column="59">dummy<pos:position pos:line="37" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="66">NULL<pos:position pos:line="37" pos:column="70"/></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

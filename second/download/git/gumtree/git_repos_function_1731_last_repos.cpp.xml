<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1731_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">expand_user_path<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">path<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">real_home<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">user_path<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name pos:line="3" pos:column="35">STRBUF_INIT<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">to_copy<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">path<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">path<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26">
		<block type="pseudo"><goto pos:line="7" pos:column="17">goto <name pos:line="7" pos:column="22">return_null<pos:position pos:line="7" pos:column="33"/></name>;<pos:position pos:line="7" pos:column="34"/></goto></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">path<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="char" pos:line="8" pos:column="24">'~'<pos:position pos:line="8" pos:column="27"/></literal></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <block pos:line="8" pos:column="29">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">first_slash<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><call><name pos:line="9" pos:column="43">strchrnul<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">path<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="59">'/'<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">username<pos:position pos:line="10" pos:column="37"/></name> <init pos:line="10" pos:column="38">= <expr><name pos:line="10" pos:column="40">path<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">+<pos:position pos:line="10" pos:column="46"/></operator> <literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">size_t<pos:position pos:line="11" pos:column="23"/></name></type> <name pos:line="11" pos:column="24">username_len<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><name pos:line="11" pos:column="39">first_slash<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">-<pos:position pos:line="11" pos:column="52"/></operator> <name pos:line="11" pos:column="53">username<pos:position pos:line="11" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="62"/></decl_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">username_len<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator> <literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <block pos:line="12" pos:column="40">{
			<decl_stmt><decl><type><specifier pos:line="13" pos:column="25">const<pos:position pos:line="13" pos:column="30"/></specifier> <name pos:line="13" pos:column="31">char<pos:position pos:line="13" pos:column="35"/></name> <modifier pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></modifier></type><name pos:line="13" pos:column="37">home<pos:position pos:line="13" pos:column="41"/></name> <init pos:line="13" pos:column="42">= <expr><call><name pos:line="13" pos:column="44">getenv<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><literal type="string" pos:line="13" pos:column="51">"HOME"<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="59"/></decl_stmt>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><operator pos:line="14" pos:column="29">!<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">home<pos:position pos:line="14" pos:column="34"/></name></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35">
				<block type="pseudo"><goto pos:line="15" pos:column="33">goto <name pos:line="15" pos:column="38">return_null<pos:position pos:line="15" pos:column="49"/></name>;<pos:position pos:line="15" pos:column="50"/></goto></block></then></if>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">real_home<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="33">strbuf_addstr<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><operator pos:line="17" pos:column="47">&amp;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="48">user_path<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="59">real_path<pos:position pos:line="17" pos:column="68"/></name><argument_list pos:line="17" pos:column="68">(<argument><expr><name pos:line="17" pos:column="69">home<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt></block></then>
			<else pos:line="18" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="33">strbuf_addstr<pos:position pos:line="19" pos:column="46"/></name><argument_list pos:line="19" pos:column="46">(<argument><expr><operator pos:line="19" pos:column="47">&amp;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="48">user_path<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">home<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt></block></else></if>
<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">GIT_WINDOWS_NATIVE<pos:position pos:line="20" pos:column="26"/></name></cpp:ifdef>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">convert_slashes<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name><name pos:line="21" pos:column="41">user_path<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">buf<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="23" pos:column="18"/></block></then> <else pos:line="23" pos:column="19">else <block pos:line="23" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="24" pos:column="25">struct<pos:position pos:line="24" pos:column="31"/></name> <name pos:line="24" pos:column="32">passwd<pos:position pos:line="24" pos:column="38"/></name></name> <modifier pos:line="24" pos:column="39">*<pos:position pos:line="24" pos:column="40"/></modifier></type><name pos:line="24" pos:column="40">pw<pos:position pos:line="24" pos:column="42"/></name> <init pos:line="24" pos:column="43">= <expr><call><name pos:line="24" pos:column="45">getpw_str<pos:position pos:line="24" pos:column="54"/></name><argument_list pos:line="24" pos:column="54">(<argument><expr><name pos:line="24" pos:column="55">username<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">username_len<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="79"/></decl_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">pw<pos:position pos:line="25" pos:column="32"/></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
				<block type="pseudo"><goto pos:line="26" pos:column="33">goto <name pos:line="26" pos:column="38">return_null<pos:position pos:line="26" pos:column="49"/></name>;<pos:position pos:line="26" pos:column="50"/></goto></block></then></if>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_addstr<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="40">user_path<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="51">pw<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">-&gt;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="55">pw_dir<pos:position pos:line="27" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="29" pos:column="17">to_copy<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">first_slash<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strbuf_addstr<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><operator pos:line="31" pos:column="23">&amp;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="24">user_path<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">to_copy<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
	<return pos:line="32" pos:column="9">return <expr><call><name pos:line="32" pos:column="16">strbuf_detach<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><operator pos:line="32" pos:column="30">&amp;<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="31">user_path<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">NULL<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></return>
<label><name pos:line="33" pos:column="1">return_null<pos:position pos:line="33" pos:column="12"/></name>:<pos:position pos:line="33" pos:column="13"/></label>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_release<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">user_path<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
	<return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">NULL<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

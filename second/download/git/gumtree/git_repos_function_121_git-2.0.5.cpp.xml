<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_121_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pack_revindex_ix<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">packed_git<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">long<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">ui<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">unsigned<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">long<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">)<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="43">p<pos:position pos:line="3" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">ui<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">ui<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">^<pos:position pos:line="6" pos:column="18"/></operator> <operator pos:line="6" pos:column="19">(<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">ui<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&gt;&gt;<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="26">16<pos:position pos:line="6" pos:column="28"/></literal><operator pos:line="6" pos:column="28">)<pos:position pos:line="6" pos:column="29"/></operator></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt> <comment type="block" pos:line="6" pos:column="31">/* defeat structure alignment */</comment>
	<expr_stmt><expr><name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call pos:line="7" pos:column="13">(<name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name>)<argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">ui<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">%<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">pack_revindex_hashsz<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name><name pos:line="8" pos:column="16">pack_revindex<pos:position pos:line="8" pos:column="29"/></name><index pos:line="8" pos:column="29">[<expr><name pos:line="8" pos:column="30">i<pos:position pos:line="8" pos:column="31"/></name></expr>]<pos:position pos:line="8" pos:column="32"/></index></name><operator pos:line="8" pos:column="32">.<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">p<pos:position pos:line="8" pos:column="34"/></name></expr>)<pos:position pos:line="8" pos:column="35"/></condition> <block pos:line="8" pos:column="36">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">pack_revindex<pos:position pos:line="9" pos:column="34"/></name><index pos:line="9" pos:column="34">[<expr><name pos:line="9" pos:column="35">i<pos:position pos:line="9" pos:column="36"/></name></expr>]<pos:position pos:line="9" pos:column="37"/></index></name><operator pos:line="9" pos:column="37">.<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">p<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">==<pos:position pos:line="9" pos:column="42"/></operator> <name pos:line="9" pos:column="43">p<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name pos:line="10" pos:column="32">i<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></return></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">++<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">i<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">pack_revindex_hashsz<pos:position pos:line="11" pos:column="48"/></name></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">i<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></while>
	<return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal> <operator pos:line="14" pos:column="19">-<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1661.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">update_ref<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><specifier pos:line="1" pos:column="16">const<pos:position pos:line="1" pos:column="21"/></specifier> <name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">action<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">refname<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
	       <parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">unsigned<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">sha1<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">unsigned<pos:position pos:line="2" pos:column="57"/></name> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">oldval<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
	       <parameter><decl><type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">flags<pos:position pos:line="3" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="27">enum<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">action_on_err<pos:position pos:line="3" pos:column="45"/></name></name></type> <name pos:line="3" pos:column="46">onerr<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_transaction<pos:position pos:line="5" pos:column="31"/></name></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">t<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">err<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">t<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">ref_transaction_begin<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><operator pos:line="8" pos:column="35">&amp;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="36">err<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">t<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">||<pos:position pos:line="9" pos:column="18"/></operator>
	    <call><name pos:line="10" pos:column="13">ref_transaction_update<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">t<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">refname<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">sha1<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">oldval<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">flags<pos:position pos:line="10" pos:column="67"/></name></expr></argument>,
				   <argument><expr><operator pos:line="11" pos:column="36">!<pos:position pos:line="11" pos:column="37"/></operator><operator pos:line="11" pos:column="37">!<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">oldval<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">action<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="54">&amp;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="55">err<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call> <operator pos:line="11" pos:column="60">||<pos:position pos:line="11" pos:column="62"/></operator>
	    <call><name pos:line="12" pos:column="13">ref_transaction_commit<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">t<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">err<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45"> <block pos:line="12" pos:column="46">{
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">str<pos:position pos:line="13" pos:column="32"/></name> <init pos:line="13" pos:column="33">= <expr><literal type="string" pos:line="13" pos:column="35">"update_ref failed for ref '%s': %s"<pos:position pos:line="13" pos:column="71"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="72"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ref_transaction_free<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">t<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
		<switch pos:line="16" pos:column="17">switch <condition pos:line="16" pos:column="24">(<expr><name pos:line="16" pos:column="25">onerr<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition> <block pos:line="16" pos:column="32">{
		<case pos:line="17" pos:column="17">case <expr><name pos:line="17" pos:column="22">UPDATE_REFS_MSG_ON_ERR<pos:position pos:line="17" pos:column="44"/></name></expr>:<pos:position pos:line="17" pos:column="45"/></case>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">error<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">str<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">refname<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="45">err<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">.<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">buf<pos:position pos:line="18" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
			<break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break>
		<case pos:line="20" pos:column="17">case <expr><name pos:line="20" pos:column="22">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="20" pos:column="44"/></name></expr>:<pos:position pos:line="20" pos:column="45"/></case>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">die<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">str<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">refname<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="43">err<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">.<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">buf<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
			<break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break>
		<case pos:line="23" pos:column="17">case <expr><name pos:line="23" pos:column="22">UPDATE_REFS_QUIET_ON_ERR<pos:position pos:line="23" pos:column="46"/></name></expr>:<pos:position pos:line="23" pos:column="47"/></case>
			<break pos:line="24" pos:column="25">break;<pos:position pos:line="24" pos:column="31"/></break>
		}<pos:position pos:line="25" pos:column="18"/></block></switch>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_release<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><operator pos:line="26" pos:column="32">&amp;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="33">err<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">1<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">strbuf_release<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">&amp;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="25">err<pos:position pos:line="29" pos:column="28"/></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">ref_transaction_free<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">t<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
	<return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

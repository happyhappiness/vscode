<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3033.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">print_one_push_status<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">ref<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">ref<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">dest<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">count<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="80">int<pos:position pos:line="1" pos:column="83"/></name></type> <name pos:line="1" pos:column="84">porcelain<pos:position pos:line="1" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="94"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">count<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">fprintf<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><ternary><condition><expr><name pos:line="4" pos:column="25">porcelain<pos:position pos:line="4" pos:column="34"/></name></expr> ?<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36"> <expr><name pos:line="4" pos:column="37">stdout<pos:position pos:line="4" pos:column="43"/></name></expr> <pos:position pos:line="4" pos:column="44"/></then><else pos:line="4" pos:column="44">: <expr><name pos:line="4" pos:column="46">stderr<pos:position pos:line="4" pos:column="52"/></name></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="54">"To %s\n"<pos:position pos:line="4" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="65">dest<pos:position pos:line="4" pos:column="69"/></name></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="71"/></expr_stmt></block></then></if>

	<switch pos:line="6" pos:column="9">switch<condition pos:line="6" pos:column="15">(<expr><name><name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">status<pos:position pos:line="6" pos:column="27"/></name></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition> <block pos:line="6" pos:column="29">{
	<case pos:line="7" pos:column="9">case <expr><name pos:line="7" pos:column="14">REF_STATUS_NONE<pos:position pos:line="7" pos:column="29"/></name></expr>:<pos:position pos:line="7" pos:column="30"/></case>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">print_ref_status<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><literal type="char" pos:line="8" pos:column="34">'X'<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="39">"[no match]"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">ref<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">NULL<pos:position pos:line="8" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">NULL<pos:position pos:line="8" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="70">porcelain<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="81"/></expr_stmt>
		<break pos:line="9" pos:column="17">break;<pos:position pos:line="9" pos:column="23"/></break>
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">REF_STATUS_REJECT_NODELETE<pos:position pos:line="10" pos:column="40"/></name></expr>:<pos:position pos:line="10" pos:column="41"/></case>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">print_ref_status<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><literal type="char" pos:line="11" pos:column="34">'!'<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="39">"[rejected]"<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">ref<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">NULL<pos:position pos:line="11" pos:column="62"/></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="12" pos:column="50">"remote does not support deleting refs"<pos:position pos:line="12" pos:column="89"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="91">porcelain<pos:position pos:line="12" pos:column="100"/></name></expr></argument>)<pos:position pos:line="12" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="102"/></expr_stmt>
		<break pos:line="13" pos:column="17">break;<pos:position pos:line="13" pos:column="23"/></break>
	<case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">REF_STATUS_UPTODATE<pos:position pos:line="14" pos:column="33"/></name></expr>:<pos:position pos:line="14" pos:column="34"/></case>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">print_ref_status<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><literal type="char" pos:line="15" pos:column="34">'='<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"[up to date]"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="55">ref<pos:position pos:line="15" pos:column="58"/></name></expr></argument>,
						 <argument><expr><name><name pos:line="16" pos:column="50">ref<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">peer_ref<pos:position pos:line="16" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="65">NULL<pos:position pos:line="16" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="71">porcelain<pos:position pos:line="16" pos:column="80"/></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt>
		<break pos:line="17" pos:column="17">break;<pos:position pos:line="17" pos:column="23"/></break>
	<case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">REF_STATUS_REJECT_NONFASTFORWARD<pos:position pos:line="18" pos:column="46"/></name></expr>:<pos:position pos:line="18" pos:column="47"/></case>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">print_ref_status<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><literal type="char" pos:line="19" pos:column="34">'!'<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"[rejected]"<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">ref<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="58">ref<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">-&gt;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="63">peer_ref<pos:position pos:line="19" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="20" pos:column="50">"non-fast-forward"<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="70">porcelain<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>
		<break pos:line="21" pos:column="17">break;<pos:position pos:line="21" pos:column="23"/></break>
	<case pos:line="22" pos:column="9">case <expr><name pos:line="22" pos:column="14">REF_STATUS_REJECT_ALREADY_EXISTS<pos:position pos:line="22" pos:column="46"/></name></expr>:<pos:position pos:line="22" pos:column="47"/></case>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">print_ref_status<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><literal type="char" pos:line="23" pos:column="34">'!'<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="39">"[rejected]"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">ref<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="58">ref<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">-&gt;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="63">peer_ref<pos:position pos:line="23" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="24" pos:column="50">"already exists"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="68">porcelain<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
		<break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>
	<case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">REF_STATUS_REJECT_FETCH_FIRST<pos:position pos:line="26" pos:column="43"/></name></expr>:<pos:position pos:line="26" pos:column="44"/></case>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">print_ref_status<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><literal type="char" pos:line="27" pos:column="34">'!'<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"[rejected]"<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">ref<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="58">ref<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">peer_ref<pos:position pos:line="27" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="28" pos:column="50">"fetch first"<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">porcelain<pos:position pos:line="28" pos:column="74"/></name></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="76"/></expr_stmt>
		<break pos:line="29" pos:column="17">break;<pos:position pos:line="29" pos:column="23"/></break>
	<case pos:line="30" pos:column="9">case <expr><name pos:line="30" pos:column="14">REF_STATUS_REJECT_NEEDS_FORCE<pos:position pos:line="30" pos:column="43"/></name></expr>:<pos:position pos:line="30" pos:column="44"/></case>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">print_ref_status<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><literal type="char" pos:line="31" pos:column="34">'!'<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="39">"[rejected]"<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">ref<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="58">ref<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">-&gt;<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="63">peer_ref<pos:position pos:line="31" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="32" pos:column="50">"needs force"<pos:position pos:line="32" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="65">porcelain<pos:position pos:line="32" pos:column="74"/></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
		<break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>
	<case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">REF_STATUS_REJECT_STALE<pos:position pos:line="34" pos:column="37"/></name></expr>:<pos:position pos:line="34" pos:column="38"/></case>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">print_ref_status<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><literal type="char" pos:line="35" pos:column="34">'!'<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">"[rejected]"<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">ref<pos:position pos:line="35" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="58">ref<pos:position pos:line="35" pos:column="61"/></name><operator pos:line="35" pos:column="61">-&gt;<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="63">peer_ref<pos:position pos:line="35" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="36" pos:column="50">"stale info"<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">porcelain<pos:position pos:line="36" pos:column="73"/></name></expr></argument>)<pos:position pos:line="36" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="75"/></expr_stmt>
		<break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>
	<case pos:line="38" pos:column="9">case <expr><name pos:line="38" pos:column="14">REF_STATUS_REJECT_SHALLOW<pos:position pos:line="38" pos:column="39"/></name></expr>:<pos:position pos:line="38" pos:column="40"/></case>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">print_ref_status<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><literal type="char" pos:line="39" pos:column="34">'!'<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="39">"[rejected]"<pos:position pos:line="39" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="53">ref<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="58">ref<pos:position pos:line="39" pos:column="61"/></name><operator pos:line="39" pos:column="61">-&gt;<pos:position pos:line="39" pos:column="66"/></operator><name pos:line="39" pos:column="63">peer_ref<pos:position pos:line="39" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="40" pos:column="50">"new shallow roots not allowed"<pos:position pos:line="40" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="83">porcelain<pos:position pos:line="40" pos:column="92"/></name></expr></argument>)<pos:position pos:line="40" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="94"/></expr_stmt>
		<break pos:line="41" pos:column="17">break;<pos:position pos:line="41" pos:column="23"/></break>
	<case pos:line="42" pos:column="9">case <expr><name pos:line="42" pos:column="14">REF_STATUS_REMOTE_REJECT<pos:position pos:line="42" pos:column="38"/></name></expr>:<pos:position pos:line="42" pos:column="39"/></case>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">print_ref_status<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><literal type="char" pos:line="43" pos:column="34">'!'<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="39">"[remote rejected]"<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">ref<pos:position pos:line="43" pos:column="63"/></name></expr></argument>,
						 <argument><expr><ternary><condition><expr><name><name pos:line="44" pos:column="50">ref<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">-&gt;<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="55">deletion<pos:position pos:line="44" pos:column="63"/></name></name></expr> ?<pos:position pos:line="44" pos:column="65"/></condition><then pos:line="44" pos:column="65"> <expr><name pos:line="44" pos:column="66">NULL<pos:position pos:line="44" pos:column="70"/></name></expr> <pos:position pos:line="44" pos:column="71"/></then><else pos:line="44" pos:column="71">: <expr><name><name pos:line="44" pos:column="73">ref<pos:position pos:line="44" pos:column="76"/></name><operator pos:line="44" pos:column="76">-&gt;<pos:position pos:line="44" pos:column="81"/></operator><name pos:line="44" pos:column="78">peer_ref<pos:position pos:line="44" pos:column="86"/></name></name></expr></else></ternary></expr></argument>,
						 <argument><expr><name><name pos:line="45" pos:column="50">ref<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">-&gt;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="55">remote_status<pos:position pos:line="45" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="70">porcelain<pos:position pos:line="45" pos:column="79"/></name></expr></argument>)<pos:position pos:line="45" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="81"/></expr_stmt>
		<break pos:line="46" pos:column="17">break;<pos:position pos:line="46" pos:column="23"/></break>
	<case pos:line="47" pos:column="9">case <expr><name pos:line="47" pos:column="14">REF_STATUS_EXPECTING_REPORT<pos:position pos:line="47" pos:column="41"/></name></expr>:<pos:position pos:line="47" pos:column="42"/></case>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">print_ref_status<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><literal type="char" pos:line="48" pos:column="34">'!'<pos:position pos:line="48" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="39">"[remote failure]"<pos:position pos:line="48" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">ref<pos:position pos:line="48" pos:column="62"/></name></expr></argument>,
						 <argument><expr><ternary><condition><expr><name><name pos:line="49" pos:column="50">ref<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">deletion<pos:position pos:line="49" pos:column="63"/></name></name></expr> ?<pos:position pos:line="49" pos:column="65"/></condition><then pos:line="49" pos:column="65"> <expr><name pos:line="49" pos:column="66">NULL<pos:position pos:line="49" pos:column="70"/></name></expr> <pos:position pos:line="49" pos:column="71"/></then><else pos:line="49" pos:column="71">: <expr><name><name pos:line="49" pos:column="73">ref<pos:position pos:line="49" pos:column="76"/></name><operator pos:line="49" pos:column="76">-&gt;<pos:position pos:line="49" pos:column="81"/></operator><name pos:line="49" pos:column="78">peer_ref<pos:position pos:line="49" pos:column="86"/></name></name></expr></else></ternary></expr></argument>,
						 <argument><expr><literal type="string" pos:line="50" pos:column="50">"remote failed to report status"<pos:position pos:line="50" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="84">porcelain<pos:position pos:line="50" pos:column="93"/></name></expr></argument>)<pos:position pos:line="50" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="95"/></expr_stmt>
		<break pos:line="51" pos:column="17">break;<pos:position pos:line="51" pos:column="23"/></break>
	<case pos:line="52" pos:column="9">case <expr><name pos:line="52" pos:column="14">REF_STATUS_ATOMIC_PUSH_FAILED<pos:position pos:line="52" pos:column="43"/></name></expr>:<pos:position pos:line="52" pos:column="44"/></case>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">print_ref_status<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><literal type="char" pos:line="53" pos:column="34">'!'<pos:position pos:line="53" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="39">"[rejected]"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="53">ref<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="58">ref<pos:position pos:line="53" pos:column="61"/></name><operator pos:line="53" pos:column="61">-&gt;<pos:position pos:line="53" pos:column="66"/></operator><name pos:line="53" pos:column="63">peer_ref<pos:position pos:line="53" pos:column="71"/></name></name></expr></argument>,
						 <argument><expr><literal type="string" pos:line="54" pos:column="50">"atomic push failed"<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="72">porcelain<pos:position pos:line="54" pos:column="81"/></name></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="83"/></expr_stmt>
		<break pos:line="55" pos:column="17">break;<pos:position pos:line="55" pos:column="23"/></break>
	<case pos:line="56" pos:column="9">case <expr><name pos:line="56" pos:column="14">REF_STATUS_OK<pos:position pos:line="56" pos:column="27"/></name></expr>:<pos:position pos:line="56" pos:column="28"/></case>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">print_ok_ref_status<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">ref<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="42">porcelain<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt>
		<break pos:line="58" pos:column="17">break;<pos:position pos:line="58" pos:column="23"/></break>
	}<pos:position pos:line="59" pos:column="10"/></block></switch>

	<return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">1<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

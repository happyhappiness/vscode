<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2061_git-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_loose_refs<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">strbuf<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">path<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">name_offset<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">ref<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier><modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">tail<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">DIR<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">dir<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">opendir<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name><name pos:line="4" pos:column="28">path<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">buf<pos:position pos:line="4" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">dirent<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">de<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<struct pos:line="6" pos:column="9">struct <block pos:line="6" pos:column="16">{<public type="default" pos:line="6" pos:column="17">
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier><modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">entries<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">nr<pos:position pos:line="8" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="25">alloc<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<pos:position pos:line="9" pos:column="2"/></public>}<pos:position pos:line="9" pos:column="10"/></block> <decl><name pos:line="9" pos:column="11">list<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></struct>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">i<pos:position pos:line="10" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="16">pathlen<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">dir<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><operator pos:line="15" pos:column="17">&amp;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="18">list<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="27">sizeof<argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">list<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>

	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">de<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">readdir<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">dir<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator></expr>)<pos:position pos:line="17" pos:column="36"/></condition> <block pos:line="17" pos:column="37">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">is_dot_or_dotdot<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name><name pos:line="18" pos:column="38">de<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">d_name<pos:position pos:line="18" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="50"/></condition><then pos:line="18" pos:column="50">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">ALLOC_GROW<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name><name pos:line="20" pos:column="28">list<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">.<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">entries<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="42">list<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">nr<pos:position pos:line="20" pos:column="49"/></name></name> <operator pos:line="20" pos:column="50">+<pos:position pos:line="20" pos:column="51"/></operator> <literal type="number" pos:line="20" pos:column="52">1<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="55">list<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">.<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="60">alloc<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">list<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">entries<pos:position pos:line="21" pos:column="29"/></name><index pos:line="21" pos:column="29">[<expr><name><name pos:line="21" pos:column="30">list<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">nr<pos:position pos:line="21" pos:column="37"/></name></name><operator pos:line="21" pos:column="37">++<pos:position pos:line="21" pos:column="39"/></operator></expr>]<pos:position pos:line="21" pos:column="40"/></index></name> <operator pos:line="21" pos:column="41">=<pos:position pos:line="21" pos:column="42"/></operator> <call><name pos:line="21" pos:column="43">xstrdup<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><name><name pos:line="21" pos:column="51">de<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">d_name<pos:position pos:line="21" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">closedir<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">dir<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>

	<comment type="block" pos:line="25" pos:column="9">/* sort the list */</comment>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">qsort<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">list<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">entries<pos:position pos:line="27" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="29">list<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">nr<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="38">sizeof<argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">char<pos:position pos:line="27" pos:column="49"/></name> <operator pos:line="27" pos:column="50">*<pos:position pos:line="27" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">str_cmp<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><name pos:line="29" pos:column="9">pathlen<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name><name pos:line="29" pos:column="19">path<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">len<pos:position pos:line="29" pos:column="28"/></name></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_addch<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">path<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="28">'/'<pos:position pos:line="30" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>

	<for pos:line="32" pos:column="9">for <control pos:line="32" pos:column="13">(<init><expr><name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></init> <condition><expr><name pos:line="32" pos:column="21">i<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name><name pos:line="32" pos:column="25">list<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">.<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">nr<pos:position pos:line="32" pos:column="32"/></name></name></expr>;<pos:position pos:line="32" pos:column="33"/></condition> <incr><expr><name pos:line="32" pos:column="34">i<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">++<pos:position pos:line="32" pos:column="37"/></operator></expr><operator pos:line="32" pos:column="37">,<pos:position pos:line="32" pos:column="38"/></operator> <expr><call><name pos:line="32" pos:column="39">strbuf_setlen<pos:position pos:line="32" pos:column="52"/></name><argument_list pos:line="32" pos:column="52">(<argument><expr><name pos:line="32" pos:column="53">path<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">pathlen<pos:position pos:line="32" pos:column="66"/></name> <operator pos:line="32" pos:column="67">+<pos:position pos:line="32" pos:column="68"/></operator> <literal type="number" pos:line="32" pos:column="69">1<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr></incr>)<pos:position pos:line="32" pos:column="72"/></control> <block pos:line="32" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strbuf_addstr<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">path<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="37">list<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">.<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">entries<pos:position pos:line="33" pos:column="49"/></name><index pos:line="33" pos:column="49">[<expr><name pos:line="33" pos:column="50">i<pos:position pos:line="33" pos:column="51"/></name></expr>]<pos:position pos:line="33" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">read_loose_refs<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">path<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">name_offset<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">tail<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="62"/></condition><then pos:line="34" pos:column="62"> <block pos:line="34" pos:column="63">{
			<decl_stmt><decl><type><name pos:line="35" pos:column="25">int<pos:position pos:line="35" pos:column="28"/></name></type> <name pos:line="35" pos:column="29">fd<pos:position pos:line="35" pos:column="31"/></name> <init pos:line="35" pos:column="32">= <expr><call><name pos:line="35" pos:column="34">open<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">path<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">buf<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">O_RDONLY<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="60"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="36" pos:column="25">char<pos:position pos:line="36" pos:column="29"/></name></type> <name><name pos:line="36" pos:column="30">buffer<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><literal type="number" pos:line="36" pos:column="37">40<pos:position pos:line="36" pos:column="39"/></literal></expr>]<pos:position pos:line="36" pos:column="40"/></index></name></decl>;<pos:position pos:line="36" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="37" pos:column="25">struct<pos:position pos:line="37" pos:column="31"/></name> <name pos:line="37" pos:column="32">ref<pos:position pos:line="37" pos:column="35"/></name></name> <modifier pos:line="37" pos:column="36">*<pos:position pos:line="37" pos:column="37"/></modifier></type><name pos:line="37" pos:column="37">next<pos:position pos:line="37" pos:column="41"/></name></decl>;<pos:position pos:line="37" pos:column="42"/></decl_stmt>

			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">fd<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">&lt;<pos:position pos:line="39" pos:column="36"/></operator> <literal type="number" pos:line="39" pos:column="34">0<pos:position pos:line="39" pos:column="35"/></literal></expr>)<pos:position pos:line="39" pos:column="36"/></condition><then pos:line="39" pos:column="36">
				<block type="pseudo"><continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="41" pos:column="25">next<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <call><name pos:line="41" pos:column="32">alloc_ref<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><name><name pos:line="41" pos:column="42">path<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">buf<pos:position pos:line="41" pos:column="51"/></name></name> <operator pos:line="41" pos:column="52">+<pos:position pos:line="41" pos:column="53"/></operator> <name pos:line="41" pos:column="54">name_offset<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><call><name pos:line="42" pos:column="29">read_in_full<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">fd<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">buffer<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="54">40<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call> <operator pos:line="42" pos:column="58">!=<pos:position pos:line="42" pos:column="60"/></operator> <literal type="number" pos:line="42" pos:column="61">40<pos:position pos:line="42" pos:column="63"/></literal> <operator pos:line="42" pos:column="64">||<pos:position pos:line="42" pos:column="66"/></operator>
					<call><name pos:line="43" pos:column="41">get_sha1_hex<pos:position pos:line="43" pos:column="53"/></name><argument_list pos:line="43" pos:column="53">(<argument><expr><name pos:line="43" pos:column="54">buffer<pos:position pos:line="43" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="62">next<pos:position pos:line="43" pos:column="66"/></name><operator pos:line="43" pos:column="66">-&gt;<pos:position pos:line="43" pos:column="71"/></operator><name pos:line="43" pos:column="68">old_sha1<pos:position pos:line="43" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="78"/></condition><then pos:line="43" pos:column="78"> <block pos:line="43" pos:column="79">{
				<expr_stmt><expr><call><name pos:line="44" pos:column="33">close<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">fd<pos:position pos:line="44" pos:column="41"/></name></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="45" pos:column="33">free<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">next<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
				<continue pos:line="46" pos:column="33">continue;<pos:position pos:line="46" pos:column="42"/></continue>
			}<pos:position pos:line="47" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">close<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">fd<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name><operator pos:line="49" pos:column="25">(<pos:position pos:line="49" pos:column="26"/></operator><operator pos:line="49" pos:column="26">*<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">tail<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">)<pos:position pos:line="49" pos:column="32"/></operator><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">next<pos:position pos:line="49" pos:column="38"/></name></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <name pos:line="49" pos:column="41">next<pos:position pos:line="49" pos:column="45"/></name></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="50" pos:column="25">*<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">tail<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">=<pos:position pos:line="50" pos:column="32"/></operator> <name pos:line="50" pos:column="33">next<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
	}<pos:position pos:line="52" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">strbuf_setlen<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">path<pos:position pos:line="53" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="29">pathlen<pos:position pos:line="53" pos:column="36"/></name></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>

	<for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">i<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <literal type="number" pos:line="55" pos:column="18">0<pos:position pos:line="55" pos:column="19"/></literal></expr>;<pos:position pos:line="55" pos:column="20"/></init> <condition><expr><name pos:line="55" pos:column="21">i<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">&lt;<pos:position pos:line="55" pos:column="27"/></operator> <name><name pos:line="55" pos:column="25">list<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">.<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">nr<pos:position pos:line="55" pos:column="32"/></name></name></expr>;<pos:position pos:line="55" pos:column="33"/></condition> <incr><expr><name pos:line="55" pos:column="34">i<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">++<pos:position pos:line="55" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="17">free<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name><name pos:line="56" pos:column="22">list<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">.<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="27">entries<pos:position pos:line="56" pos:column="34"/></name><index pos:line="56" pos:column="34">[<expr><name pos:line="56" pos:column="35">i<pos:position pos:line="56" pos:column="36"/></name></expr>]<pos:position pos:line="56" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">free<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><name><name pos:line="57" pos:column="14">list<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">entries<pos:position pos:line="57" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>

	<return pos:line="59" pos:column="9">return <expr><literal type="number" pos:line="59" pos:column="16">0<pos:position pos:line="59" pos:column="17"/></literal></expr>;<pos:position pos:line="59" pos:column="18"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

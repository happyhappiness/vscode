<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5809_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_choice<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">menu_stuff<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">menu_stuff<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">is_single<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">strbuf<pos:position pos:line="3" pos:column="38"/></name></name></type> <name pos:line="3" pos:column="39">input<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="4" pos:column="25">int<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier><modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">chosen<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="38"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier><modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">choice_list<pos:position pos:line="6" pos:column="36"/></name></decl>, <modifier pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></modifier><modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="40">ptr<pos:position pos:line="6" pos:column="43"/></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">nr<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">is_single<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23"> <block pos:line="10" pos:column="24">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">choice_list<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">strbuf_split_max<pos:position pos:line="11" pos:column="47"/></name><argument_list pos:line="11" pos:column="47">(<argument><expr><operator pos:line="11" pos:column="48">&amp;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="49">input<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="56">'\n'<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="62">0<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then> <else pos:line="12" pos:column="11">else <block pos:line="12" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">p<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><name><name pos:line="13" pos:column="27">input<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">buf<pos:position pos:line="13" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
		<do pos:line="14" pos:column="17">do <block pos:line="14" pos:column="20">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><operator pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">p<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">==<pos:position pos:line="15" pos:column="34"/></operator> <literal type="char" pos:line="15" pos:column="35">','<pos:position pos:line="15" pos:column="38"/></literal></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="33">*<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">p<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">=<pos:position pos:line="16" pos:column="37"/></operator> <literal type="char" pos:line="16" pos:column="38">' '<pos:position pos:line="16" pos:column="41"/></literal></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block> while <condition pos:line="17" pos:column="25">(<expr><operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">p<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">++<pos:position pos:line="17" pos:column="30"/></operator></expr>)<pos:position pos:line="17" pos:column="31"/></condition>;<pos:position pos:line="17" pos:column="32"/></do>
		<expr_stmt><expr><name pos:line="18" pos:column="17">choice_list<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">strbuf_split_max<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><operator pos:line="18" pos:column="48">&amp;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="49">input<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="56">' '<pos:position pos:line="18" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="61">0<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">ptr<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">choice_list<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></init> <condition><expr><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">ptr<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></condition> <incr><expr><name pos:line="21" pos:column="39">ptr<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name> <modifier pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></modifier></type><name pos:line="22" pos:column="23">p<pos:position pos:line="22" pos:column="24"/></name></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">int<pos:position pos:line="23" pos:column="20"/></name></type> <name pos:line="23" pos:column="21">choose<pos:position pos:line="23" pos:column="27"/></name> <init pos:line="23" pos:column="28">= <expr><literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">int<pos:position pos:line="24" pos:column="20"/></name></type> <name pos:line="24" pos:column="21">bottom<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="24" pos:column="33">top<pos:position pos:line="24" pos:column="36"/></name> <init pos:line="24" pos:column="37">= <expr><literal type="number" pos:line="24" pos:column="39">0<pos:position pos:line="24" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">is_range<pos:position pos:line="25" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="25" pos:column="31">is_number<pos:position pos:line="25" pos:column="40"/></name></decl>;<pos:position pos:line="25" pos:column="41"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_trim<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><operator pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">ptr<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name><operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">ptr<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">len<pos:position pos:line="28" pos:column="33"/></name></name></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
			<block type="pseudo"><continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="31" pos:column="17">/* Input that begins with '-'; unchoose */</comment>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">*<pos:position pos:line="32" pos:column="22"/></operator><name><operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">ptr<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">buf<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">==<pos:position pos:line="32" pos:column="36"/></operator> <literal type="char" pos:line="32" pos:column="37">'-'<pos:position pos:line="32" pos:column="40"/></literal></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41"> <block pos:line="32" pos:column="42">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">choose<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">strbuf_remove<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><operator pos:line="34" pos:column="39">(<pos:position pos:line="34" pos:column="40"/></operator><operator pos:line="34" pos:column="40">*<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">ptr<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">)<pos:position pos:line="34" pos:column="45"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="47">0<pos:position pos:line="34" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="50">1<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="37" pos:column="17">is_range<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="28">0<pos:position pos:line="37" pos:column="29"/></literal></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">is_number<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">1<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
		<for pos:line="39" pos:column="17">for <control pos:line="39" pos:column="21">(<init><expr><name pos:line="39" pos:column="22">p<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name><operator pos:line="39" pos:column="26">(<pos:position pos:line="39" pos:column="27"/></operator><operator pos:line="39" pos:column="27">*<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">ptr<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">)<pos:position pos:line="39" pos:column="32"/></operator><operator pos:line="39" pos:column="32">-&gt;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="34">buf<pos:position pos:line="39" pos:column="37"/></name></name></expr>;<pos:position pos:line="39" pos:column="38"/></init> <condition><expr><operator pos:line="39" pos:column="39">*<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="40">p<pos:position pos:line="39" pos:column="41"/></name></expr>;<pos:position pos:line="39" pos:column="42"/></condition> <incr><expr><name pos:line="39" pos:column="43">p<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">++<pos:position pos:line="39" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="47"/></control> <block pos:line="39" pos:column="48">{
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><literal type="char" pos:line="40" pos:column="29">'-'<pos:position pos:line="40" pos:column="32"/></literal> <operator pos:line="40" pos:column="33">==<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">*<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="37">p<pos:position pos:line="40" pos:column="38"/></name></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39"> <block pos:line="40" pos:column="40">{
				<if pos:line="41" pos:column="33">if <condition pos:line="41" pos:column="36">(<expr><operator pos:line="41" pos:column="37">!<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">is_range<pos:position pos:line="41" pos:column="46"/></name></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
					<expr_stmt><expr><name pos:line="42" pos:column="41">is_range<pos:position pos:line="42" pos:column="49"/></name> <operator pos:line="42" pos:column="50">=<pos:position pos:line="42" pos:column="51"/></operator> <literal type="number" pos:line="42" pos:column="52">1<pos:position pos:line="42" pos:column="53"/></literal></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
					<expr_stmt><expr><name pos:line="43" pos:column="41">is_number<pos:position pos:line="43" pos:column="50"/></name> <operator pos:line="43" pos:column="51">=<pos:position pos:line="43" pos:column="52"/></operator> <literal type="number" pos:line="43" pos:column="53">0<pos:position pos:line="43" pos:column="54"/></literal></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
				}<pos:position pos:line="44" pos:column="34"/></block></then> <else pos:line="44" pos:column="35">else <block pos:line="44" pos:column="40">{
					<expr_stmt><expr><name pos:line="45" pos:column="41">is_number<pos:position pos:line="45" pos:column="50"/></name> <operator pos:line="45" pos:column="51">=<pos:position pos:line="45" pos:column="52"/></operator> <literal type="number" pos:line="45" pos:column="53">0<pos:position pos:line="45" pos:column="54"/></literal></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
					<expr_stmt><expr><name pos:line="46" pos:column="41">is_range<pos:position pos:line="46" pos:column="49"/></name> <operator pos:line="46" pos:column="50">=<pos:position pos:line="46" pos:column="51"/></operator> <literal type="number" pos:line="46" pos:column="52">0<pos:position pos:line="46" pos:column="53"/></literal></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
					<break pos:line="47" pos:column="41">break;<pos:position pos:line="47" pos:column="47"/></break>
				}<pos:position pos:line="48" pos:column="34"/></block></else></if>
			}<pos:position pos:line="49" pos:column="26"/></block></then> <elseif pos:line="49" pos:column="27">else <if pos:line="49" pos:column="32">if <condition pos:line="49" pos:column="35">(<expr><operator pos:line="49" pos:column="36">!<pos:position pos:line="49" pos:column="37"/></operator><call><name pos:line="49" pos:column="37">isdigit<pos:position pos:line="49" pos:column="44"/></name><argument_list pos:line="49" pos:column="44">(<argument><expr><operator pos:line="49" pos:column="45">*<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">p<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="49"/></condition><then pos:line="49" pos:column="49"> <block pos:line="49" pos:column="50">{
				<expr_stmt><expr><name pos:line="50" pos:column="33">is_number<pos:position pos:line="50" pos:column="42"/></name> <operator pos:line="50" pos:column="43">=<pos:position pos:line="50" pos:column="44"/></operator> <literal type="number" pos:line="50" pos:column="45">0<pos:position pos:line="50" pos:column="46"/></literal></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="51" pos:column="33">is_range<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">=<pos:position pos:line="51" pos:column="43"/></operator> <literal type="number" pos:line="51" pos:column="44">0<pos:position pos:line="51" pos:column="45"/></literal></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt>
				<break pos:line="52" pos:column="33">break;<pos:position pos:line="52" pos:column="39"/></break>
			}<pos:position pos:line="53" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="54" pos:column="18"/></block></for>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">is_number<pos:position pos:line="56" pos:column="30"/></name></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31"> <block pos:line="56" pos:column="32">{
			<expr_stmt><expr><name pos:line="57" pos:column="25">bottom<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <call><name pos:line="57" pos:column="34">atoi<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name><operator pos:line="57" pos:column="39">(<pos:position pos:line="57" pos:column="40"/></operator><operator pos:line="57" pos:column="40">*<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="41">ptr<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">)<pos:position pos:line="57" pos:column="45"/></operator><operator pos:line="57" pos:column="45">-&gt;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="47">buf<pos:position pos:line="57" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="58" pos:column="25">top<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <name pos:line="58" pos:column="31">bottom<pos:position pos:line="58" pos:column="37"/></name></expr>;<pos:position pos:line="58" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then> <elseif pos:line="59" pos:column="19">else <if pos:line="59" pos:column="24">if <condition pos:line="59" pos:column="27">(<expr><name pos:line="59" pos:column="28">is_range<pos:position pos:line="59" pos:column="36"/></name></expr>)<pos:position pos:line="59" pos:column="37"/></condition><then pos:line="59" pos:column="37"> <block pos:line="59" pos:column="38">{
			<expr_stmt><expr><name pos:line="60" pos:column="25">bottom<pos:position pos:line="60" pos:column="31"/></name> <operator pos:line="60" pos:column="32">=<pos:position pos:line="60" pos:column="33"/></operator> <call><name pos:line="60" pos:column="34">atoi<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name><operator pos:line="60" pos:column="39">(<pos:position pos:line="60" pos:column="40"/></operator><operator pos:line="60" pos:column="40">*<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="41">ptr<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">)<pos:position pos:line="60" pos:column="45"/></operator><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">buf<pos:position pos:line="60" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="52"/></expr_stmt>
			<comment type="block" pos:line="61" pos:column="25">/* a range can be specified like 5-7 or 5- */</comment>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><operator pos:line="62" pos:column="29">!<pos:position pos:line="62" pos:column="30"/></operator><operator pos:line="62" pos:column="30">*<pos:position pos:line="62" pos:column="31"/></operator><operator pos:line="62" pos:column="31">(<pos:position pos:line="62" pos:column="32"/></operator><call><name pos:line="62" pos:column="32">strchr<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><name><operator pos:line="62" pos:column="39">(<pos:position pos:line="62" pos:column="40"/></operator><operator pos:line="62" pos:column="40">*<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="41">ptr<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">)<pos:position pos:line="62" pos:column="45"/></operator><operator pos:line="62" pos:column="45">-&gt;<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="47">buf<pos:position pos:line="62" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="62" pos:column="52">'-'<pos:position pos:line="62" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call> <operator pos:line="62" pos:column="57">+<pos:position pos:line="62" pos:column="58"/></operator> <literal type="number" pos:line="62" pos:column="59">1<pos:position pos:line="62" pos:column="60"/></literal><operator pos:line="62" pos:column="60">)<pos:position pos:line="62" pos:column="61"/></operator></expr>)<pos:position pos:line="62" pos:column="62"/></condition><then pos:line="62" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="33">top<pos:position pos:line="63" pos:column="36"/></name> <operator pos:line="63" pos:column="37">=<pos:position pos:line="63" pos:column="38"/></operator> <name><name pos:line="63" pos:column="39">menu_stuff<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">-&gt;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="51">nr<pos:position pos:line="63" pos:column="53"/></name></name></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt></block></then>
			<else pos:line="64" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="33">top<pos:position pos:line="65" pos:column="36"/></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <call><name pos:line="65" pos:column="39">atoi<pos:position pos:line="65" pos:column="43"/></name><argument_list pos:line="65" pos:column="43">(<argument><expr><call><name pos:line="65" pos:column="44">strchr<pos:position pos:line="65" pos:column="50"/></name><argument_list pos:line="65" pos:column="50">(<argument><expr><name><operator pos:line="65" pos:column="51">(<pos:position pos:line="65" pos:column="52"/></operator><operator pos:line="65" pos:column="52">*<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="53">ptr<pos:position pos:line="65" pos:column="56"/></name><operator pos:line="65" pos:column="56">)<pos:position pos:line="65" pos:column="57"/></operator><operator pos:line="65" pos:column="57">-&gt;<pos:position pos:line="65" pos:column="62"/></operator><name pos:line="65" pos:column="59">buf<pos:position pos:line="65" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="65" pos:column="64">'-'<pos:position pos:line="65" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call> <operator pos:line="65" pos:column="69">+<pos:position pos:line="65" pos:column="70"/></operator> <literal type="number" pos:line="65" pos:column="71">1<pos:position pos:line="65" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="74"/></expr_stmt></block></else></if>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if></elseif> <elseif pos:line="66" pos:column="19">else <if pos:line="66" pos:column="24">if <condition pos:line="66" pos:column="27">(<expr><operator pos:line="66" pos:column="28">!<pos:position pos:line="66" pos:column="29"/></operator><call><name pos:line="66" pos:column="29">strcmp<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><name><operator pos:line="66" pos:column="36">(<pos:position pos:line="66" pos:column="37"/></operator><operator pos:line="66" pos:column="37">*<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="38">ptr<pos:position pos:line="66" pos:column="41"/></name><operator pos:line="66" pos:column="41">)<pos:position pos:line="66" pos:column="42"/></operator><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">buf<pos:position pos:line="66" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="49">"*"<pos:position pos:line="66" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="54"/></condition><then pos:line="66" pos:column="54"> <block pos:line="66" pos:column="55">{
			<expr_stmt><expr><name pos:line="67" pos:column="25">bottom<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">=<pos:position pos:line="67" pos:column="33"/></operator> <literal type="number" pos:line="67" pos:column="34">1<pos:position pos:line="67" pos:column="35"/></literal></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="68" pos:column="25">top<pos:position pos:line="68" pos:column="28"/></name> <operator pos:line="68" pos:column="29">=<pos:position pos:line="68" pos:column="30"/></operator> <name><name pos:line="68" pos:column="31">menu_stuff<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">-&gt;<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="43">nr<pos:position pos:line="68" pos:column="45"/></name></name></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="69" pos:column="18"/></block></then></if></elseif> <else pos:line="69" pos:column="19">else <block pos:line="69" pos:column="24">{
			<expr_stmt><expr><name pos:line="70" pos:column="25">bottom<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">=<pos:position pos:line="70" pos:column="33"/></operator> <call><name pos:line="70" pos:column="34">find_unique<pos:position pos:line="70" pos:column="45"/></name><argument_list pos:line="70" pos:column="45">(<argument><expr><name><operator pos:line="70" pos:column="46">(<pos:position pos:line="70" pos:column="47"/></operator><operator pos:line="70" pos:column="47">*<pos:position pos:line="70" pos:column="48"/></operator><name pos:line="70" pos:column="48">ptr<pos:position pos:line="70" pos:column="51"/></name><operator pos:line="70" pos:column="51">)<pos:position pos:line="70" pos:column="52"/></operator><operator pos:line="70" pos:column="52">-&gt;<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="54">buf<pos:position pos:line="70" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="59">menu_stuff<pos:position pos:line="70" pos:column="69"/></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">top<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="31">bottom<pos:position pos:line="71" pos:column="37"/></name></expr>;<pos:position pos:line="71" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></else></if>

		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">top<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">&lt;=<pos:position pos:line="74" pos:column="30"/></operator> <literal type="number" pos:line="74" pos:column="28">0<pos:position pos:line="74" pos:column="29"/></literal> <operator pos:line="74" pos:column="30">||<pos:position pos:line="74" pos:column="32"/></operator> <name pos:line="74" pos:column="33">bottom<pos:position pos:line="74" pos:column="39"/></name> <operator pos:line="74" pos:column="40">&lt;=<pos:position pos:line="74" pos:column="45"/></operator> <literal type="number" pos:line="74" pos:column="43">0<pos:position pos:line="74" pos:column="44"/></literal> <operator pos:line="74" pos:column="45">||<pos:position pos:line="74" pos:column="47"/></operator> <name pos:line="74" pos:column="48">top<pos:position pos:line="74" pos:column="51"/></name> <operator pos:line="74" pos:column="52">&gt;<pos:position pos:line="74" pos:column="56"/></operator> <name><name pos:line="74" pos:column="54">menu_stuff<pos:position pos:line="74" pos:column="64"/></name><operator pos:line="74" pos:column="64">-&gt;<pos:position pos:line="74" pos:column="69"/></operator><name pos:line="74" pos:column="66">nr<pos:position pos:line="74" pos:column="68"/></name></name> <operator pos:line="74" pos:column="69">||<pos:position pos:line="74" pos:column="71"/></operator> <name pos:line="74" pos:column="72">bottom<pos:position pos:line="74" pos:column="78"/></name> <operator pos:line="74" pos:column="79">&gt;<pos:position pos:line="74" pos:column="83"/></operator> <name pos:line="74" pos:column="81">top<pos:position pos:line="74" pos:column="84"/></name> <operator pos:line="74" pos:column="85">||<pos:position pos:line="74" pos:column="87"/></operator>
		    <operator pos:line="75" pos:column="21">(<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">is_single<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">&amp;&amp;<pos:position pos:line="75" pos:column="42"/></operator> <name pos:line="75" pos:column="35">bottom<pos:position pos:line="75" pos:column="41"/></name> <operator pos:line="75" pos:column="42">!=<pos:position pos:line="75" pos:column="44"/></operator> <name pos:line="75" pos:column="45">top<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">)<pos:position pos:line="75" pos:column="49"/></operator></expr>)<pos:position pos:line="75" pos:column="50"/></condition><then pos:line="75" pos:column="50"> <block pos:line="75" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">clean_print_color<pos:position pos:line="76" pos:column="42"/></name><argument_list pos:line="76" pos:column="42">(<argument><expr><name pos:line="76" pos:column="43">CLEAN_COLOR_ERROR<pos:position pos:line="76" pos:column="60"/></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">printf<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><call><name pos:line="77" pos:column="32">_<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">(<argument><expr><literal type="string" pos:line="77" pos:column="34">"Huh (%s)?\n"<pos:position pos:line="77" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><operator pos:line="77" pos:column="50">(<pos:position pos:line="77" pos:column="51"/></operator><operator pos:line="77" pos:column="51">*<pos:position pos:line="77" pos:column="52"/></operator><name pos:line="77" pos:column="52">ptr<pos:position pos:line="77" pos:column="55"/></name><operator pos:line="77" pos:column="55">)<pos:position pos:line="77" pos:column="56"/></operator><operator pos:line="77" pos:column="56">-&gt;<pos:position pos:line="77" pos:column="61"/></operator><name pos:line="77" pos:column="58">buf<pos:position pos:line="77" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">clean_print_color<pos:position pos:line="78" pos:column="42"/></name><argument_list pos:line="78" pos:column="42">(<argument><expr><name pos:line="78" pos:column="43">CLEAN_COLOR_RESET<pos:position pos:line="78" pos:column="60"/></name></expr></argument>)<pos:position pos:line="78" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="62"/></expr_stmt>
			<continue pos:line="79" pos:column="25">continue;<pos:position pos:line="79" pos:column="34"/></continue>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

		<for pos:line="82" pos:column="17">for <control pos:line="82" pos:column="21">(<init><expr><name pos:line="82" pos:column="22">i<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">=<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">bottom<pos:position pos:line="82" pos:column="32"/></name></expr>;<pos:position pos:line="82" pos:column="33"/></init> <condition><expr><name pos:line="82" pos:column="34">i<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">&lt;=<pos:position pos:line="82" pos:column="41"/></operator> <name pos:line="82" pos:column="39">top<pos:position pos:line="82" pos:column="42"/></name></expr>;<pos:position pos:line="82" pos:column="43"/></condition> <incr><expr><name pos:line="82" pos:column="44">i<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">++<pos:position pos:line="82" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="48"/></control>
			<block type="pseudo"><expr_stmt><expr><operator pos:line="83" pos:column="25">(<pos:position pos:line="83" pos:column="26"/></operator><operator pos:line="83" pos:column="26">*<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="27">chosen<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">)<pos:position pos:line="83" pos:column="34"/></operator><index pos:line="83" pos:column="34">[<expr><name pos:line="83" pos:column="35">i<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">-<pos:position pos:line="83" pos:column="37"/></operator><literal type="number" pos:line="83" pos:column="37">1<pos:position pos:line="83" pos:column="38"/></literal></expr>]<pos:position pos:line="83" pos:column="39"/></index> <operator pos:line="83" pos:column="40">=<pos:position pos:line="83" pos:column="41"/></operator> <name pos:line="83" pos:column="42">choose<pos:position pos:line="83" pos:column="48"/></name></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt></block></for>
	}<pos:position pos:line="84" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="86" pos:column="9">strbuf_list_free<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">choice_list<pos:position pos:line="86" pos:column="37"/></name></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>

	<for pos:line="88" pos:column="9">for <control pos:line="88" pos:column="13">(<init><expr><name pos:line="88" pos:column="14">i<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <literal type="number" pos:line="88" pos:column="18">0<pos:position pos:line="88" pos:column="19"/></literal></expr>;<pos:position pos:line="88" pos:column="20"/></init> <condition><expr><name pos:line="88" pos:column="21">i<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">&lt;<pos:position pos:line="88" pos:column="27"/></operator> <name><name pos:line="88" pos:column="25">menu_stuff<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">-&gt;<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="37">nr<pos:position pos:line="88" pos:column="39"/></name></name></expr>;<pos:position pos:line="88" pos:column="40"/></condition> <incr><expr><name pos:line="88" pos:column="41">i<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">++<pos:position pos:line="88" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="88" pos:column="45"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="17">nr<pos:position pos:line="89" pos:column="19"/></name> <operator pos:line="89" pos:column="20">+=<pos:position pos:line="89" pos:column="22"/></operator> <operator pos:line="89" pos:column="23">(<pos:position pos:line="89" pos:column="24"/></operator><operator pos:line="89" pos:column="24">*<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="25">chosen<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">)<pos:position pos:line="89" pos:column="32"/></operator><index pos:line="89" pos:column="32">[<expr><name pos:line="89" pos:column="33">i<pos:position pos:line="89" pos:column="34"/></name></expr>]<pos:position pos:line="89" pos:column="35"/></index></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt></block></for>
	<return pos:line="90" pos:column="9">return <expr><name pos:line="90" pos:column="16">nr<pos:position pos:line="90" pos:column="18"/></name></expr>;<pos:position pos:line="90" pos:column="19"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

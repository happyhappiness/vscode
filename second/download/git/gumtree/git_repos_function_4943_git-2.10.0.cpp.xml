<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4943_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_commit_info<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">am_state<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">state<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">commit<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">commit<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">buffer<pos:position pos:line="3" pos:column="27"/></name></decl>, <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="30">ident_line<pos:position pos:line="3" pos:column="40"/></name></decl>, <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="43">author_date<pos:position pos:line="3" pos:column="54"/></name></decl>, <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="57">msg<pos:position pos:line="3" pos:column="60"/></name></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">ident_len<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ident_split<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">ident_split<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">sb<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">STRBUF_INIT<pos:position pos:line="6" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">buffer<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">logmsg_reencode<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">commit<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">NULL<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="48">get_commit_output_encoding<pos:position pos:line="8" pos:column="74"/></name><argument_list pos:line="8" pos:column="74">()<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">ident_line<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">find_commit_header<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><name pos:line="10" pos:column="41">buffer<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="49">"author"<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="59">&amp;<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="60">ident_len<pos:position pos:line="10" pos:column="69"/></name></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">split_ident_line<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><operator pos:line="12" pos:column="30">&amp;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="31">ident_split<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">ident_line<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">ident_len<pos:position pos:line="12" pos:column="65"/></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call> <operator pos:line="12" pos:column="67">&lt;<pos:position pos:line="12" pos:column="71"/></operator> <literal type="number" pos:line="12" pos:column="69">0<pos:position pos:line="12" pos:column="70"/></literal></expr>)<pos:position pos:line="12" pos:column="71"/></condition><then pos:line="12" pos:column="71"> <block pos:line="12" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">strbuf_add<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">sb<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">ident_line<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">ident_len<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">die<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><call><name pos:line="14" pos:column="21">_<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"invalid ident line: %s"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="50">sb<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">.<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="53">buf<pos:position pos:line="14" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">assert<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">!<pos:position pos:line="17" pos:column="17"/></operator><name><name pos:line="17" pos:column="17">state<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">author_name<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">ident_split<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">name_begin<pos:position pos:line="18" pos:column="35"/></name></name></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36"> <block pos:line="18" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_add<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="29">sb<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="33">ident_split<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">name_begin<pos:position pos:line="19" pos:column="55"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="20" pos:column="25">ident_split<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">name_end<pos:position pos:line="20" pos:column="45"/></name></name> <operator pos:line="20" pos:column="46">-<pos:position pos:line="20" pos:column="47"/></operator> <name><name pos:line="20" pos:column="48">ident_split<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">.<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="60">name_begin<pos:position pos:line="20" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">state<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">author_name<pos:position pos:line="21" pos:column="35"/></name></name> <operator pos:line="21" pos:column="36">=<pos:position pos:line="21" pos:column="37"/></operator> <call><name pos:line="21" pos:column="38">strbuf_detach<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><operator pos:line="21" pos:column="52">&amp;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="53">sb<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">NULL<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">state<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">author_name<pos:position pos:line="23" pos:column="35"/></name></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <call><name pos:line="23" pos:column="38">xstrdup<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><literal type="string" pos:line="23" pos:column="46">""<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">assert<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><operator pos:line="25" pos:column="16">!<pos:position pos:line="25" pos:column="17"/></operator><name><name pos:line="25" pos:column="17">state<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">author_email<pos:position pos:line="25" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">ident_split<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">mail_begin<pos:position pos:line="26" pos:column="35"/></name></name></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <block pos:line="26" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_add<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><operator pos:line="27" pos:column="28">&amp;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="29">sb<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="33">ident_split<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">.<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="45">mail_begin<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="28" pos:column="25">ident_split<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">.<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">mail_end<pos:position pos:line="28" pos:column="45"/></name></name> <operator pos:line="28" pos:column="46">-<pos:position pos:line="28" pos:column="47"/></operator> <name><name pos:line="28" pos:column="48">ident_split<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">.<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="60">mail_begin<pos:position pos:line="28" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">state<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">author_email<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <call><name pos:line="29" pos:column="39">strbuf_detach<pos:position pos:line="29" pos:column="52"/></name><argument_list pos:line="29" pos:column="52">(<argument><expr><operator pos:line="29" pos:column="53">&amp;<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="54">sb<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">NULL<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then> <else pos:line="30" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="17">state<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">author_email<pos:position pos:line="31" pos:column="36"/></name></name> <operator pos:line="31" pos:column="37">=<pos:position pos:line="31" pos:column="38"/></operator> <call><name pos:line="31" pos:column="39">xstrdup<pos:position pos:line="31" pos:column="46"/></name><argument_list pos:line="31" pos:column="46">(<argument><expr><literal type="string" pos:line="31" pos:column="47">""<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="33" pos:column="9">author_date<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">show_ident_date<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">ident_split<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="53">DATE_MODE<pos:position pos:line="33" pos:column="62"/></name><argument_list pos:line="33" pos:column="62">(<argument><expr><name pos:line="33" pos:column="63">NORMAL<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_addstr<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><operator pos:line="34" pos:column="23">&amp;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="24">sb<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="28">author_date<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">assert<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><operator pos:line="35" pos:column="16">!<pos:position pos:line="35" pos:column="17"/></operator><name><name pos:line="35" pos:column="17">state<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">author_date<pos:position pos:line="35" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">state<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">author_date<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <call><name pos:line="36" pos:column="30">strbuf_detach<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><operator pos:line="36" pos:column="44">&amp;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="45">sb<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">NULL<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">assert<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><operator pos:line="38" pos:column="16">!<pos:position pos:line="38" pos:column="17"/></operator><name><name pos:line="38" pos:column="17">state<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">msg<pos:position pos:line="38" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="39" pos:column="9">msg<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <call><name pos:line="39" pos:column="15">strstr<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">buffer<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="30">"\n\n"<pos:position pos:line="39" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">msg<pos:position pos:line="40" pos:column="17"/></name></expr>)<pos:position pos:line="40" pos:column="18"/></condition><then pos:line="40" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">die<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><call><name pos:line="41" pos:column="21">_<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><literal type="string" pos:line="41" pos:column="23">"unable to parse commit %s"<pos:position pos:line="41" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="53">oid_to_hex<pos:position pos:line="41" pos:column="63"/></name><argument_list pos:line="41" pos:column="63">(<argument><expr><operator pos:line="41" pos:column="64">&amp;<pos:position pos:line="41" pos:column="69"/></operator><name><name pos:line="41" pos:column="65">commit<pos:position pos:line="41" pos:column="71"/></name><operator pos:line="41" pos:column="71">-&gt;<pos:position pos:line="41" pos:column="76"/></operator><name pos:line="41" pos:column="73">object<pos:position pos:line="41" pos:column="79"/></name><operator pos:line="41" pos:column="79">.<pos:position pos:line="41" pos:column="80"/></operator><name pos:line="41" pos:column="80">oid<pos:position pos:line="41" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="86"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">state<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">msg<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <call><name pos:line="42" pos:column="22">xstrdup<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">msg<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">+<pos:position pos:line="42" pos:column="35"/></operator> <literal type="number" pos:line="42" pos:column="36">2<pos:position pos:line="42" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">state<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">msg_len<pos:position pos:line="43" pos:column="23"/></name></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <call><name pos:line="43" pos:column="26">strlen<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name><name pos:line="43" pos:column="33">state<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">msg<pos:position pos:line="43" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

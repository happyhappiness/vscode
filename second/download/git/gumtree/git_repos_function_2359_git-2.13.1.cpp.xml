<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2359_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_index_dtype<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">path<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">len<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pos<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">cache_entry<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="35">ce<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">ce<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">cache_file_exists<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">path<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">len<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ce<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16"> <block pos:line="7" pos:column="17">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">ce_uptodate<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">ce<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><name pos:line="9" pos:column="32">DT_UNKNOWN<pos:position pos:line="9" pos:column="42"/></name></expr>;<pos:position pos:line="9" pos:column="43"/></return></block></then></if>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">S_ISGITLINK<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name><name pos:line="10" pos:column="33">ce<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">ce_mode<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><name pos:line="11" pos:column="32">DT_DIR<pos:position pos:line="11" pos:column="38"/></name></expr>;<pos:position pos:line="11" pos:column="39"/></return></block></then></if>
		<comment type="block" pos:line="12" pos:column="17">/*
		 * Nobody actually cares about the
		 * difference between DT_LNK and DT_REG
		 */</comment>
		<return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">DT_REG<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="19" pos:column="9">/* Try to look it up as a directory */</comment>
	<expr_stmt><expr><name pos:line="20" pos:column="9">pos<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">cache_name_pos<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">path<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">len<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">pos<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&gt;=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">DT_UNKNOWN<pos:position pos:line="22" pos:column="34"/></name></expr>;<pos:position pos:line="22" pos:column="35"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="23" pos:column="9">pos<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">-<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">pos<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-<pos:position pos:line="23" pos:column="20"/></operator><literal type="number" pos:line="23" pos:column="20">1<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><name pos:line="24" pos:column="16">pos<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">&lt;<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="22">active_nr<pos:position pos:line="24" pos:column="31"/></name></expr>)<pos:position pos:line="24" pos:column="32"/></condition> <block pos:line="24" pos:column="33">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">ce<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="22">active_cache<pos:position pos:line="25" pos:column="34"/></name><index pos:line="25" pos:column="34">[<expr><name pos:line="25" pos:column="35">pos<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">++<pos:position pos:line="25" pos:column="40"/></operator></expr>]<pos:position pos:line="25" pos:column="41"/></index></name></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">strncmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">ce<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">name<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">path<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">len<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50">
			<block type="pseudo"><break pos:line="27" pos:column="25">break;<pos:position pos:line="27" pos:column="31"/></break></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">ce<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">name<pos:position pos:line="28" pos:column="29"/></name><index pos:line="28" pos:column="29">[<expr><name pos:line="28" pos:column="30">len<pos:position pos:line="28" pos:column="33"/></name></expr>]<pos:position pos:line="28" pos:column="34"/></index></name> <operator pos:line="28" pos:column="35">&gt;<pos:position pos:line="28" pos:column="39"/></operator> <literal type="char" pos:line="28" pos:column="37">'/'<pos:position pos:line="28" pos:column="40"/></literal></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
			<block type="pseudo"><break pos:line="29" pos:column="25">break;<pos:position pos:line="29" pos:column="31"/></break></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">ce<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">name<pos:position pos:line="30" pos:column="29"/></name><index pos:line="30" pos:column="29">[<expr><name pos:line="30" pos:column="30">len<pos:position pos:line="30" pos:column="33"/></name></expr>]<pos:position pos:line="30" pos:column="34"/></index></name> <operator pos:line="30" pos:column="35">&lt;<pos:position pos:line="30" pos:column="39"/></operator> <literal type="char" pos:line="30" pos:column="37">'/'<pos:position pos:line="30" pos:column="40"/></literal></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
			<block type="pseudo"><continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><call><name pos:line="32" pos:column="22">ce_uptodate<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">ce<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="38"/></condition><then pos:line="32" pos:column="38">
			<block type="pseudo"><break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break></block></then></if>	<comment type="block" pos:line="33" pos:column="33">/* continue? */</comment>
		<return pos:line="34" pos:column="17">return <expr><name pos:line="34" pos:column="24">DT_DIR<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></while>
	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">DT_UNKNOWN<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

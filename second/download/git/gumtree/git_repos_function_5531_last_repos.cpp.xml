<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5531_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">name_commits<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">commit_list<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">list<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">commit<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">rev<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="3" pos:column="26">char<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">ref_name<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="4" pos:column="26">int<pos:position pos:line="4" pos:column="29"/></name></type> <name pos:line="4" pos:column="30">num_rev<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="38"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit_list<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">cl<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">c<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* First give names to the given heads */</comment>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">cl<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">list<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></init> <condition><expr><name pos:line="11" pos:column="25">cl<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></condition> <incr><expr><name pos:line="11" pos:column="29">cl<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="34">cl<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">next<pos:position pos:line="11" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="43"/></control> <block pos:line="11" pos:column="44">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">c<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name><name pos:line="12" pos:column="21">cl<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">item<pos:position pos:line="12" pos:column="29"/></name></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">c<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">util<pos:position pos:line="13" pos:column="28"/></name></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>
		<for pos:line="15" pos:column="17">for <control pos:line="15" pos:column="21">(<init><expr><name pos:line="15" pos:column="22">i<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>;<pos:position pos:line="15" pos:column="28"/></init> <condition><expr><name pos:line="15" pos:column="29">i<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">&lt;<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="33">num_rev<pos:position pos:line="15" pos:column="40"/></name></expr>;<pos:position pos:line="15" pos:column="41"/></condition> <incr><expr><name pos:line="15" pos:column="42">i<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">++<pos:position pos:line="15" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="46"/></control> <block pos:line="15" pos:column="47">{
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name><name pos:line="16" pos:column="29">rev<pos:position pos:line="16" pos:column="32"/></name><index pos:line="16" pos:column="32">[<expr><name pos:line="16" pos:column="33">i<pos:position pos:line="16" pos:column="34"/></name></expr>]<pos:position pos:line="16" pos:column="35"/></index></name> <operator pos:line="16" pos:column="36">==<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="39">c<pos:position pos:line="16" pos:column="40"/></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41"> <block pos:line="16" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="17" pos:column="33">name_commit<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">c<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="48">ref_name<pos:position pos:line="17" pos:column="56"/></name><index pos:line="17" pos:column="56">[<expr><name pos:line="17" pos:column="57">i<pos:position pos:line="17" pos:column="58"/></name></expr>]<pos:position pos:line="17" pos:column="59"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="61">0<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
				<break pos:line="18" pos:column="33">break;<pos:position pos:line="18" pos:column="39"/></break>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if>
		}<pos:position pos:line="20" pos:column="18"/></block></for>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<comment type="block" pos:line="23" pos:column="9">/* Then commits on the first parent ancestry chain */</comment>
	<do pos:line="24" pos:column="9">do <block pos:line="24" pos:column="12">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">i<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
		<for pos:line="26" pos:column="17">for <control pos:line="26" pos:column="21">(<init><expr><name pos:line="26" pos:column="22">cl<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">list<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></init> <condition><expr><name pos:line="26" pos:column="33">cl<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></condition> <incr><expr><name pos:line="26" pos:column="37">cl<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">=<pos:position pos:line="26" pos:column="41"/></operator> <name><name pos:line="26" pos:column="42">cl<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">next<pos:position pos:line="26" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="51"/></control> <block pos:line="26" pos:column="52">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">i<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">+=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">name_first_parent_chain<pos:position pos:line="27" pos:column="53"/></name><argument_list pos:line="27" pos:column="53">(<argument><expr><name><name pos:line="27" pos:column="54">cl<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">-&gt;<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="58">item<pos:position pos:line="27" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></for>
	}<pos:position pos:line="29" pos:column="10"/></block> while <condition pos:line="29" pos:column="17">(<expr><name pos:line="29" pos:column="18">i<pos:position pos:line="29" pos:column="19"/></name></expr>)<pos:position pos:line="29" pos:column="20"/></condition>;<pos:position pos:line="29" pos:column="21"/></do>

	<comment type="block" pos:line="31" pos:column="9">/* Finally, any unnamed commits */</comment>
	<do pos:line="32" pos:column="9">do <block pos:line="32" pos:column="12">{
		<expr_stmt><expr><name pos:line="33" pos:column="17">i<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
		<for pos:line="34" pos:column="17">for <control pos:line="34" pos:column="21">(<init><expr><name pos:line="34" pos:column="22">cl<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">list<pos:position pos:line="34" pos:column="31"/></name></expr>;<pos:position pos:line="34" pos:column="32"/></init> <condition><expr><name pos:line="34" pos:column="33">cl<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></condition> <incr><expr><name pos:line="34" pos:column="37">cl<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">=<pos:position pos:line="34" pos:column="41"/></operator> <name><name pos:line="34" pos:column="42">cl<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">next<pos:position pos:line="34" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="34" pos:column="51"/></control> <block pos:line="34" pos:column="52">{
			<decl_stmt><decl><type><name><name pos:line="35" pos:column="25">struct<pos:position pos:line="35" pos:column="31"/></name> <name pos:line="35" pos:column="32">commit_list<pos:position pos:line="35" pos:column="43"/></name></name> <modifier pos:line="35" pos:column="44">*<pos:position pos:line="35" pos:column="45"/></modifier></type><name pos:line="35" pos:column="45">parents<pos:position pos:line="35" pos:column="52"/></name></decl>;<pos:position pos:line="35" pos:column="53"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="36" pos:column="25">struct<pos:position pos:line="36" pos:column="31"/></name> <name pos:line="36" pos:column="32">commit_name<pos:position pos:line="36" pos:column="43"/></name></name> <modifier pos:line="36" pos:column="44">*<pos:position pos:line="36" pos:column="45"/></modifier></type><name pos:line="36" pos:column="45">n<pos:position pos:line="36" pos:column="46"/></name></decl>;<pos:position pos:line="36" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="37" pos:column="25">int<pos:position pos:line="37" pos:column="28"/></name></type> <name pos:line="37" pos:column="29">nth<pos:position pos:line="37" pos:column="32"/></name></decl>;<pos:position pos:line="37" pos:column="33"/></decl_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">c<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <name><name pos:line="38" pos:column="29">cl<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">item<pos:position pos:line="38" pos:column="37"/></name></name></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">!<pos:position pos:line="39" pos:column="30"/></operator><name><name pos:line="39" pos:column="30">c<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">util<pos:position pos:line="39" pos:column="37"/></name></name></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38">
				<block type="pseudo"><continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="41" pos:column="25">n<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name><name pos:line="41" pos:column="29">c<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">util<pos:position pos:line="41" pos:column="36"/></name></name></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">parents<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <name><name pos:line="42" pos:column="35">c<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">parents<pos:position pos:line="42" pos:column="45"/></name></name></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="43" pos:column="25">nth<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="31">0<pos:position pos:line="43" pos:column="32"/></literal></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
			<while pos:line="44" pos:column="25">while <condition pos:line="44" pos:column="31">(<expr><name pos:line="44" pos:column="32">parents<pos:position pos:line="44" pos:column="39"/></name></expr>)<pos:position pos:line="44" pos:column="40"/></condition> <block pos:line="44" pos:column="41">{
				<decl_stmt><decl><type><name><name pos:line="45" pos:column="33">struct<pos:position pos:line="45" pos:column="39"/></name> <name pos:line="45" pos:column="40">commit<pos:position pos:line="45" pos:column="46"/></name></name> <modifier pos:line="45" pos:column="47">*<pos:position pos:line="45" pos:column="48"/></modifier></type><name pos:line="45" pos:column="48">p<pos:position pos:line="45" pos:column="49"/></name> <init pos:line="45" pos:column="50">= <expr><name><name pos:line="45" pos:column="52">parents<pos:position pos:line="45" pos:column="59"/></name><operator pos:line="45" pos:column="59">-&gt;<pos:position pos:line="45" pos:column="64"/></operator><name pos:line="45" pos:column="61">item<pos:position pos:line="45" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="45" pos:column="66"/></decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="46" pos:column="33">struct<pos:position pos:line="46" pos:column="39"/></name> <name pos:line="46" pos:column="40">strbuf<pos:position pos:line="46" pos:column="46"/></name></name></type> <name pos:line="46" pos:column="47">newname<pos:position pos:line="46" pos:column="54"/></name> <init pos:line="46" pos:column="55">= <expr><name pos:line="46" pos:column="57">STRBUF_INIT<pos:position pos:line="46" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="69"/></decl_stmt>
				<expr_stmt><expr><name pos:line="47" pos:column="33">parents<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">=<pos:position pos:line="47" pos:column="42"/></operator> <name><name pos:line="47" pos:column="43">parents<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">-&gt;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="52">next<pos:position pos:line="47" pos:column="56"/></name></name></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name pos:line="48" pos:column="33">nth<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">++<pos:position pos:line="48" pos:column="38"/></operator></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
				<if pos:line="49" pos:column="33">if <condition pos:line="49" pos:column="36">(<expr><name><name pos:line="49" pos:column="37">p<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">-&gt;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="40">util<pos:position pos:line="49" pos:column="44"/></name></name></expr>)<pos:position pos:line="49" pos:column="45"/></condition><then pos:line="49" pos:column="45">
					<block type="pseudo"><continue pos:line="50" pos:column="41">continue;<pos:position pos:line="50" pos:column="50"/></continue></block></then></if>
				<switch pos:line="51" pos:column="33">switch <condition pos:line="51" pos:column="40">(<expr><name><name pos:line="51" pos:column="41">n<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">-&gt;<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="44">generation<pos:position pos:line="51" pos:column="54"/></name></name></expr>)<pos:position pos:line="51" pos:column="55"/></condition> <block pos:line="51" pos:column="56">{
				<case pos:line="52" pos:column="33">case <expr><literal type="number" pos:line="52" pos:column="38">0<pos:position pos:line="52" pos:column="39"/></literal></expr>:<pos:position pos:line="52" pos:column="40"/></case>
					<expr_stmt><expr><call><name pos:line="53" pos:column="41">strbuf_addstr<pos:position pos:line="53" pos:column="54"/></name><argument_list pos:line="53" pos:column="54">(<argument><expr><operator pos:line="53" pos:column="55">&amp;<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="56">newname<pos:position pos:line="53" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="65">n<pos:position pos:line="53" pos:column="66"/></name><operator pos:line="53" pos:column="66">-&gt;<pos:position pos:line="53" pos:column="71"/></operator><name pos:line="53" pos:column="68">head_name<pos:position pos:line="53" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="79"/></expr_stmt>
					<break pos:line="54" pos:column="41">break;<pos:position pos:line="54" pos:column="47"/></break>
				<case pos:line="55" pos:column="33">case <expr><literal type="number" pos:line="55" pos:column="38">1<pos:position pos:line="55" pos:column="39"/></literal></expr>:<pos:position pos:line="55" pos:column="40"/></case>
					<expr_stmt><expr><call><name pos:line="56" pos:column="41">strbuf_addf<pos:position pos:line="56" pos:column="52"/></name><argument_list pos:line="56" pos:column="52">(<argument><expr><operator pos:line="56" pos:column="53">&amp;<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="54">newname<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="63">"%s^"<pos:position pos:line="56" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="70">n<pos:position pos:line="56" pos:column="71"/></name><operator pos:line="56" pos:column="71">-&gt;<pos:position pos:line="56" pos:column="76"/></operator><name pos:line="56" pos:column="73">head_name<pos:position pos:line="56" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="84"/></expr_stmt>
					<break pos:line="57" pos:column="41">break;<pos:position pos:line="57" pos:column="47"/></break>
				<default pos:line="58" pos:column="33">default:<pos:position pos:line="58" pos:column="41"/></default>
					<expr_stmt><expr><call><name pos:line="59" pos:column="41">strbuf_addf<pos:position pos:line="59" pos:column="52"/></name><argument_list pos:line="59" pos:column="52">(<argument><expr><operator pos:line="59" pos:column="53">&amp;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="54">newname<pos:position pos:line="59" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="63">"%s~%d"<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>,
						    <argument><expr><name><name pos:line="60" pos:column="53">n<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">-&gt;<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="56">head_name<pos:position pos:line="60" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="67">n<pos:position pos:line="60" pos:column="68"/></name><operator pos:line="60" pos:column="68">-&gt;<pos:position pos:line="60" pos:column="73"/></operator><name pos:line="60" pos:column="70">generation<pos:position pos:line="60" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="82"/></expr_stmt>
					<break pos:line="61" pos:column="41">break;<pos:position pos:line="61" pos:column="47"/></break>
				}<pos:position pos:line="62" pos:column="34"/></block></switch>
				<if pos:line="63" pos:column="33">if <condition pos:line="63" pos:column="36">(<expr><name pos:line="63" pos:column="37">nth<pos:position pos:line="63" pos:column="40"/></name> <operator pos:line="63" pos:column="41">==<pos:position pos:line="63" pos:column="43"/></operator> <literal type="number" pos:line="63" pos:column="44">1<pos:position pos:line="63" pos:column="45"/></literal></expr>)<pos:position pos:line="63" pos:column="46"/></condition><then pos:line="63" pos:column="46">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="41">strbuf_addch<pos:position pos:line="64" pos:column="53"/></name><argument_list pos:line="64" pos:column="53">(<argument><expr><operator pos:line="64" pos:column="54">&amp;<pos:position pos:line="64" pos:column="59"/></operator><name pos:line="64" pos:column="55">newname<pos:position pos:line="64" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="64" pos:column="64">'^'<pos:position pos:line="64" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="69"/></expr_stmt></block></then>
				<else pos:line="65" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="41">strbuf_addf<pos:position pos:line="66" pos:column="52"/></name><argument_list pos:line="66" pos:column="52">(<argument><expr><operator pos:line="66" pos:column="53">&amp;<pos:position pos:line="66" pos:column="58"/></operator><name pos:line="66" pos:column="54">newname<pos:position pos:line="66" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="63">"^%d"<pos:position pos:line="66" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="70">nth<pos:position pos:line="66" pos:column="73"/></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="67" pos:column="33">name_commit<pos:position pos:line="67" pos:column="44"/></name><argument_list pos:line="67" pos:column="44">(<argument><expr><name pos:line="67" pos:column="45">p<pos:position pos:line="67" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="48">strbuf_detach<pos:position pos:line="67" pos:column="61"/></name><argument_list pos:line="67" pos:column="61">(<argument><expr><operator pos:line="67" pos:column="62">&amp;<pos:position pos:line="67" pos:column="67"/></operator><name pos:line="67" pos:column="63">newname<pos:position pos:line="67" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="72">NULL<pos:position pos:line="67" pos:column="76"/></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="79">0<pos:position pos:line="67" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="82"/></expr_stmt>
				<expr_stmt><expr><name pos:line="68" pos:column="33">i<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">++<pos:position pos:line="68" pos:column="36"/></operator></expr>;<pos:position pos:line="68" pos:column="37"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="69" pos:column="33">name_first_parent_chain<pos:position pos:line="69" pos:column="56"/></name><argument_list pos:line="69" pos:column="56">(<argument><expr><name pos:line="69" pos:column="57">p<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="70" pos:column="26"/></block></while>
		}<pos:position pos:line="71" pos:column="18"/></block></for>
	}<pos:position pos:line="72" pos:column="10"/></block> while <condition pos:line="72" pos:column="17">(<expr><name pos:line="72" pos:column="18">i<pos:position pos:line="72" pos:column="19"/></name></expr>)<pos:position pos:line="72" pos:column="20"/></condition>;<pos:position pos:line="72" pos:column="21"/></do>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

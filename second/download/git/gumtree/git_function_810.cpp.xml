<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_810.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_graph_colors_config<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">argv_array<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">colors<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <name pos:line="1" pos:column="72">char<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">string<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">end<pos:position pos:line="3" pos:column="24"/></name></decl>, <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="27">start<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">start<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">string<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">end<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">string<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">+<pos:position pos:line="6" pos:column="23"/></operator> <call><name pos:line="6" pos:column="24">strlen<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">string<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">start<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">&lt;<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="24">end<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition> <block pos:line="7" pos:column="29">{
		<decl_stmt><decl><type><specifier pos:line="8" pos:column="17">const<pos:position pos:line="8" pos:column="22"/></specifier> <name pos:line="8" pos:column="23">char<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">comma<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><call><name pos:line="8" pos:column="37">strchrnul<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name pos:line="8" pos:column="47">start<pos:position pos:line="8" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="54">','<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name></type> <name><name pos:line="9" pos:column="22">color<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><name pos:line="9" pos:column="28">COLOR_MAXLEN<pos:position pos:line="9" pos:column="40"/></name></expr>]<pos:position pos:line="9" pos:column="41"/></index></name></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">color_parse_mem<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">start<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">comma<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">-<pos:position pos:line="11" pos:column="52"/></operator> <name pos:line="11" pos:column="53">start<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">color<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">argv_array_push<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">colors<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">color<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">warning<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><call><name pos:line="14" pos:column="33">_<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><literal type="string" pos:line="14" pos:column="35">"ignore invalid color '%.*s' in log.graphColors"<pos:position pos:line="14" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="84"/></argument_list></call></expr></argument>,
				<argument><expr><call pos:line="15" pos:column="33">(<name pos:line="15" pos:column="34">int<pos:position pos:line="15" pos:column="37"/></name>)<argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">comma<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">-<pos:position pos:line="15" pos:column="46"/></operator> <name pos:line="15" pos:column="47">start<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="55">start<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">start<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">comma<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">+<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="33">1<pos:position pos:line="16" pos:column="34"/></literal></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">argv_array_push<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">colors<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">GIT_COLOR_RESET<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6485_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prefix_ref_iterator_peel<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">ref_iterator<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ref_iterator<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
				    <parameter><decl><type><name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">object_id<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">peeled<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">prefix_ref_iterator<pos:position pos:line="4" pos:column="35"/></name></name> <modifier pos:line="4" pos:column="36">*<pos:position pos:line="4" pos:column="37"/></modifier></type><name pos:line="4" pos:column="37">iter<pos:position pos:line="4" pos:column="41"/></name> <init pos:line="4" pos:column="42">=
		<expr><operator pos:line="5" pos:column="17">(<pos:position pos:line="5" pos:column="18"/></operator>struct <name pos:line="5" pos:column="25">prefix_ref_iterator<pos:position pos:line="5" pos:column="44"/></name> <operator pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></operator><operator pos:line="5" pos:column="46">)<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">ref_iterator<pos:position pos:line="5" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>

	<return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">ref_iterator_peel<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name><name pos:line="7" pos:column="34">iter<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">iter0<pos:position pos:line="7" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">peeled<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

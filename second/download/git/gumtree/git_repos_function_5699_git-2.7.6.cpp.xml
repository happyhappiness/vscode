<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5699_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_for_each_entry_in_dirs<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">ref_dir<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">dir1<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				     <parameter><decl><type><name><name pos:line="2" pos:column="38">struct<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">ref_dir<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">dir2<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="3" pos:column="38">each_ref_entry_fn<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">fn<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="60">void<pos:position pos:line="3" pos:column="64"/></name> <modifier pos:line="3" pos:column="65">*<pos:position pos:line="3" pos:column="66"/></modifier></type><name pos:line="3" pos:column="66">cb_data<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">retval<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i1<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">i2<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name><name pos:line="8" pos:column="16">dir1<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">sorted<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">==<pos:position pos:line="8" pos:column="31"/></operator> <name><name pos:line="8" pos:column="32">dir1<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">nr<pos:position pos:line="8" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name><name pos:line="9" pos:column="16">dir2<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">sorted<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <name><name pos:line="9" pos:column="32">dir2<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">nr<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>)<pos:position pos:line="10" pos:column="18"/></condition> <block pos:line="10" pos:column="19">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">ref_entry<pos:position pos:line="11" pos:column="33"/></name></name> <modifier pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></modifier></type><name pos:line="11" pos:column="35">e1<pos:position pos:line="11" pos:column="37"/></name></decl>, <modifier pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="40">e2<pos:position pos:line="11" pos:column="42"/></name></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">cmp<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">i1<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator> <name><name pos:line="13" pos:column="27">dir1<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">nr<pos:position pos:line="13" pos:column="35"/></name></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <block pos:line="13" pos:column="37">{
			<return pos:line="14" pos:column="25">return <expr><call><name pos:line="14" pos:column="32">do_for_each_entry_in_dir<pos:position pos:line="14" pos:column="56"/></name><argument_list pos:line="14" pos:column="56">(<argument><expr><name pos:line="14" pos:column="57">dir2<pos:position pos:line="14" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">i2<pos:position pos:line="14" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="67">fn<pos:position pos:line="14" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="71">cb_data<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></return>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">i2<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <name><name pos:line="16" pos:column="27">dir2<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">nr<pos:position pos:line="16" pos:column="35"/></name></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
			<return pos:line="17" pos:column="25">return <expr><call><name pos:line="17" pos:column="32">do_for_each_entry_in_dir<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">(<argument><expr><name pos:line="17" pos:column="57">dir1<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">i1<pos:position pos:line="17" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">fn<pos:position pos:line="17" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="71">cb_data<pos:position pos:line="17" pos:column="78"/></name></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></return>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">e1<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <name><name pos:line="19" pos:column="22">dir1<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">entries<pos:position pos:line="19" pos:column="35"/></name><index pos:line="19" pos:column="35">[<expr><name pos:line="19" pos:column="36">i1<pos:position pos:line="19" pos:column="38"/></name></expr>]<pos:position pos:line="19" pos:column="39"/></index></name></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">e2<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name><name pos:line="20" pos:column="22">dir2<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">entries<pos:position pos:line="20" pos:column="35"/></name><index pos:line="20" pos:column="35">[<expr><name pos:line="20" pos:column="36">i2<pos:position pos:line="20" pos:column="38"/></name></expr>]<pos:position pos:line="20" pos:column="39"/></index></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">cmp<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">strcmp<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">e1<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">name<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">e2<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">name<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">cmp<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30"> <block pos:line="22" pos:column="31">{
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><name><name pos:line="23" pos:column="30">e1<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">flag<pos:position pos:line="23" pos:column="38"/></name></name> <operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="41">REF_DIR<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator> <operator pos:line="23" pos:column="50">&amp;&amp;<pos:position pos:line="23" pos:column="60"/></operator> <operator pos:line="23" pos:column="53">(<pos:position pos:line="23" pos:column="54"/></operator><name><name pos:line="23" pos:column="54">e2<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">flag<pos:position pos:line="23" pos:column="62"/></name></name> <operator pos:line="23" pos:column="63">&amp;<pos:position pos:line="23" pos:column="68"/></operator> <name pos:line="23" pos:column="65">REF_DIR<pos:position pos:line="23" pos:column="72"/></name><operator pos:line="23" pos:column="72">)<pos:position pos:line="23" pos:column="73"/></operator></expr>)<pos:position pos:line="23" pos:column="74"/></condition><then pos:line="23" pos:column="74"> <block pos:line="23" pos:column="75">{
				<comment type="block" pos:line="24" pos:column="33">/* Both are directories; descend them in parallel. */</comment>
				<decl_stmt><decl><type><name><name pos:line="25" pos:column="33">struct<pos:position pos:line="25" pos:column="39"/></name> <name pos:line="25" pos:column="40">ref_dir<pos:position pos:line="25" pos:column="47"/></name></name> <modifier pos:line="25" pos:column="48">*<pos:position pos:line="25" pos:column="49"/></modifier></type><name pos:line="25" pos:column="49">subdir1<pos:position pos:line="25" pos:column="56"/></name> <init pos:line="25" pos:column="57">= <expr><call><name pos:line="25" pos:column="59">get_ref_dir<pos:position pos:line="25" pos:column="70"/></name><argument_list pos:line="25" pos:column="70">(<argument><expr><name pos:line="25" pos:column="71">e1<pos:position pos:line="25" pos:column="73"/></name></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="75"/></decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="26" pos:column="33">struct<pos:position pos:line="26" pos:column="39"/></name> <name pos:line="26" pos:column="40">ref_dir<pos:position pos:line="26" pos:column="47"/></name></name> <modifier pos:line="26" pos:column="48">*<pos:position pos:line="26" pos:column="49"/></modifier></type><name pos:line="26" pos:column="49">subdir2<pos:position pos:line="26" pos:column="56"/></name> <init pos:line="26" pos:column="57">= <expr><call><name pos:line="26" pos:column="59">get_ref_dir<pos:position pos:line="26" pos:column="70"/></name><argument_list pos:line="26" pos:column="70">(<argument><expr><name pos:line="26" pos:column="71">e2<pos:position pos:line="26" pos:column="73"/></name></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="75"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="27" pos:column="33">sort_ref_dir<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">subdir1<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="28" pos:column="33">sort_ref_dir<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name pos:line="28" pos:column="46">subdir2<pos:position pos:line="28" pos:column="53"/></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name pos:line="29" pos:column="33">retval<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">=<pos:position pos:line="29" pos:column="41"/></operator> <call><name pos:line="29" pos:column="42">do_for_each_entry_in_dirs<pos:position pos:line="29" pos:column="67"/></name><argument_list pos:line="29" pos:column="67">(
						<argument><expr><name pos:line="30" pos:column="49">subdir1<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">subdir2<pos:position pos:line="30" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="67">fn<pos:position pos:line="30" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="71">cb_data<pos:position pos:line="30" pos:column="78"/></name></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="80"/></expr_stmt>
				<expr_stmt><expr><name pos:line="31" pos:column="33">i1<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">++<pos:position pos:line="31" pos:column="37"/></operator></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>
				<expr_stmt><expr><name pos:line="32" pos:column="33">i2<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">++<pos:position pos:line="32" pos:column="37"/></operator></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then> <elseif pos:line="33" pos:column="27">else <if pos:line="33" pos:column="32">if <condition pos:line="33" pos:column="35">(<expr><operator pos:line="33" pos:column="36">!<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="37">(<pos:position pos:line="33" pos:column="38"/></operator><name><name pos:line="33" pos:column="38">e1<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">flag<pos:position pos:line="33" pos:column="46"/></name></name> <operator pos:line="33" pos:column="47">&amp;<pos:position pos:line="33" pos:column="52"/></operator> <name pos:line="33" pos:column="49">REF_DIR<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">)<pos:position pos:line="33" pos:column="57"/></operator> <operator pos:line="33" pos:column="58">&amp;&amp;<pos:position pos:line="33" pos:column="68"/></operator> <operator pos:line="33" pos:column="61">!<pos:position pos:line="33" pos:column="62"/></operator><operator pos:line="33" pos:column="62">(<pos:position pos:line="33" pos:column="63"/></operator><name><name pos:line="33" pos:column="63">e2<pos:position pos:line="33" pos:column="65"/></name><operator pos:line="33" pos:column="65">-&gt;<pos:position pos:line="33" pos:column="70"/></operator><name pos:line="33" pos:column="67">flag<pos:position pos:line="33" pos:column="71"/></name></name> <operator pos:line="33" pos:column="72">&amp;<pos:position pos:line="33" pos:column="77"/></operator> <name pos:line="33" pos:column="74">REF_DIR<pos:position pos:line="33" pos:column="81"/></name><operator pos:line="33" pos:column="81">)<pos:position pos:line="33" pos:column="82"/></operator></expr>)<pos:position pos:line="33" pos:column="83"/></condition><then pos:line="33" pos:column="83"> <block pos:line="33" pos:column="84">{
				<comment type="block" pos:line="34" pos:column="33">/* Both are references; ignore the one from dir1. */</comment>
				<expr_stmt><expr><name pos:line="35" pos:column="33">retval<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">=<pos:position pos:line="35" pos:column="41"/></operator> <call><name pos:line="35" pos:column="42">fn<pos:position pos:line="35" pos:column="44"/></name><argument_list pos:line="35" pos:column="44">(<argument><expr><name pos:line="35" pos:column="45">e2<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">cb_data<pos:position pos:line="35" pos:column="56"/></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="36" pos:column="33">i1<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">++<pos:position pos:line="36" pos:column="37"/></operator></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
				<expr_stmt><expr><name pos:line="37" pos:column="33">i2<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">++<pos:position pos:line="37" pos:column="37"/></operator></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if></elseif> <else pos:line="38" pos:column="27">else <block pos:line="38" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="39" pos:column="33">die<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><literal type="string" pos:line="39" pos:column="37">"conflict between reference and directory: %s"<pos:position pos:line="39" pos:column="83"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="40" pos:column="37">e1<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">name<pos:position pos:line="40" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="41" pos:column="26"/></block></else></if>
		}<pos:position pos:line="42" pos:column="18"/></block></then> <else pos:line="42" pos:column="19">else <block pos:line="42" pos:column="24">{
			<decl_stmt><decl><type><name><name pos:line="43" pos:column="25">struct<pos:position pos:line="43" pos:column="31"/></name> <name pos:line="43" pos:column="32">ref_entry<pos:position pos:line="43" pos:column="41"/></name></name> <modifier pos:line="43" pos:column="42">*<pos:position pos:line="43" pos:column="43"/></modifier></type><name pos:line="43" pos:column="43">e<pos:position pos:line="43" pos:column="44"/></name></decl>;<pos:position pos:line="43" pos:column="45"/></decl_stmt>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">cmp<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">&lt;<pos:position pos:line="44" pos:column="37"/></operator> <literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr>)<pos:position pos:line="44" pos:column="37"/></condition><then pos:line="44" pos:column="37"> <block pos:line="44" pos:column="38">{
				<expr_stmt><expr><name pos:line="45" pos:column="33">e<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">=<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="37">e1<pos:position pos:line="45" pos:column="39"/></name></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
				<expr_stmt><expr><name pos:line="46" pos:column="33">i1<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">++<pos:position pos:line="46" pos:column="37"/></operator></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
			}<pos:position pos:line="47" pos:column="26"/></block></then> <else pos:line="47" pos:column="27">else <block pos:line="47" pos:column="32">{
				<expr_stmt><expr><name pos:line="48" pos:column="33">e<pos:position pos:line="48" pos:column="34"/></name> <operator pos:line="48" pos:column="35">=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">e2<pos:position pos:line="48" pos:column="39"/></name></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
				<expr_stmt><expr><name pos:line="49" pos:column="33">i2<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">++<pos:position pos:line="49" pos:column="37"/></operator></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
			}<pos:position pos:line="50" pos:column="26"/></block></else></if>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name><name pos:line="51" pos:column="29">e<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">-&gt;<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="32">flag<pos:position pos:line="51" pos:column="36"/></name></name> <operator pos:line="51" pos:column="37">&amp;<pos:position pos:line="51" pos:column="42"/></operator> <name pos:line="51" pos:column="39">REF_DIR<pos:position pos:line="51" pos:column="46"/></name></expr>)<pos:position pos:line="51" pos:column="47"/></condition><then pos:line="51" pos:column="47"> <block pos:line="51" pos:column="48">{
				<decl_stmt><decl><type><name><name pos:line="52" pos:column="33">struct<pos:position pos:line="52" pos:column="39"/></name> <name pos:line="52" pos:column="40">ref_dir<pos:position pos:line="52" pos:column="47"/></name></name> <modifier pos:line="52" pos:column="48">*<pos:position pos:line="52" pos:column="49"/></modifier></type><name pos:line="52" pos:column="49">subdir<pos:position pos:line="52" pos:column="55"/></name> <init pos:line="52" pos:column="56">= <expr><call><name pos:line="52" pos:column="58">get_ref_dir<pos:position pos:line="52" pos:column="69"/></name><argument_list pos:line="52" pos:column="69">(<argument><expr><name pos:line="52" pos:column="70">e<pos:position pos:line="52" pos:column="71"/></name></expr></argument>)<pos:position pos:line="52" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="73"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="53" pos:column="33">sort_ref_dir<pos:position pos:line="53" pos:column="45"/></name><argument_list pos:line="53" pos:column="45">(<argument><expr><name pos:line="53" pos:column="46">subdir<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name pos:line="54" pos:column="33">retval<pos:position pos:line="54" pos:column="39"/></name> <operator pos:line="54" pos:column="40">=<pos:position pos:line="54" pos:column="41"/></operator> <call><name pos:line="54" pos:column="42">do_for_each_entry_in_dir<pos:position pos:line="54" pos:column="66"/></name><argument_list pos:line="54" pos:column="66">(
						<argument><expr><name pos:line="55" pos:column="49">subdir<pos:position pos:line="55" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="57">0<pos:position pos:line="55" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="60">fn<pos:position pos:line="55" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="64">cb_data<pos:position pos:line="55" pos:column="71"/></name></expr></argument>)<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="73"/></expr_stmt>
			}<pos:position pos:line="56" pos:column="26"/></block></then> <else pos:line="56" pos:column="27">else <block pos:line="56" pos:column="32">{
				<expr_stmt><expr><name pos:line="57" pos:column="33">retval<pos:position pos:line="57" pos:column="39"/></name> <operator pos:line="57" pos:column="40">=<pos:position pos:line="57" pos:column="41"/></operator> <call><name pos:line="57" pos:column="42">fn<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">e<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="48">cb_data<pos:position pos:line="57" pos:column="55"/></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="58" pos:column="26"/></block></else></if>
		}<pos:position pos:line="59" pos:column="18"/></block></else></if>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">retval<pos:position pos:line="60" pos:column="27"/></name></expr>)<pos:position pos:line="60" pos:column="28"/></condition><then pos:line="60" pos:column="28">
			<block type="pseudo"><return pos:line="61" pos:column="25">return <expr><name pos:line="61" pos:column="32">retval<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></return></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></while>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2078_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">exclude_matches_pathspec<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">path<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">len<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">path_simplify<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">simplify<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">simplify<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
		<for pos:line="5" pos:column="17">for <control pos:line="5" pos:column="21">(<init pos:line="5" pos:column="22">;<pos:position pos:line="5" pos:column="23"/></init> <condition><expr><name><name pos:line="5" pos:column="24">simplify<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">path<pos:position pos:line="5" pos:column="38"/></name></name></expr>;<pos:position pos:line="5" pos:column="39"/></condition> <incr><expr><name pos:line="5" pos:column="40">simplify<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">++<pos:position pos:line="5" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="51"/></control> <block pos:line="5" pos:column="52">{
			<if pos:line="6" pos:column="25">if <condition pos:line="6" pos:column="28">(<expr><name pos:line="6" pos:column="29">len<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">==<pos:position pos:line="6" pos:column="35"/></operator> <name><name pos:line="6" pos:column="36">simplify<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">len<pos:position pos:line="6" pos:column="49"/></name></name>
			    <operator pos:line="7" pos:column="29">&amp;&amp;<pos:position pos:line="7" pos:column="39"/></operator> <operator pos:line="7" pos:column="32">!<pos:position pos:line="7" pos:column="33"/></operator><call><name pos:line="7" pos:column="33">memcmp<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">path<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="46">simplify<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">path<pos:position pos:line="7" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="62">len<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="67"/></condition><then pos:line="7" pos:column="67">
				<block type="pseudo"><return pos:line="8" pos:column="33">return <expr><literal type="number" pos:line="8" pos:column="40">1<pos:position pos:line="8" pos:column="41"/></literal></expr>;<pos:position pos:line="8" pos:column="42"/></return></block></then></if>
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">&lt;<pos:position pos:line="9" pos:column="37"/></operator> <name><name pos:line="9" pos:column="35">simplify<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">len<pos:position pos:line="9" pos:column="48"/></name></name>
			    <operator pos:line="10" pos:column="29">&amp;&amp;<pos:position pos:line="10" pos:column="39"/></operator> <name><name pos:line="10" pos:column="32">simplify<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">path<pos:position pos:line="10" pos:column="46"/></name><index pos:line="10" pos:column="46">[<expr><name pos:line="10" pos:column="47">len<pos:position pos:line="10" pos:column="50"/></name></expr>]<pos:position pos:line="10" pos:column="51"/></index></name> <operator pos:line="10" pos:column="52">==<pos:position pos:line="10" pos:column="54"/></operator> <literal type="char" pos:line="10" pos:column="55">'/'<pos:position pos:line="10" pos:column="58"/></literal>
			    <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <operator pos:line="11" pos:column="32">!<pos:position pos:line="11" pos:column="33"/></operator><call><name pos:line="11" pos:column="33">memcmp<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">path<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="46">simplify<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="56">path<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="62">len<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67">
				<block type="pseudo"><return pos:line="12" pos:column="33">return <expr><literal type="number" pos:line="12" pos:column="40">1<pos:position pos:line="12" pos:column="41"/></literal></expr>;<pos:position pos:line="12" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="13" pos:column="18"/></block></for>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

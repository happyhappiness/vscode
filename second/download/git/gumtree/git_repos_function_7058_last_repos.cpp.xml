<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7058_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">re_string_skip_chars<pos:position pos:line="3" pos:column="21"/></name> <parameter_list pos:line="3" pos:column="22">(<parameter><decl><type><name pos:line="3" pos:column="23">re_string_t<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">pstr<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">new_raw_idx<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">wint_t<pos:position pos:line="3" pos:column="65"/></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">last_wc<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="75"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">mbstate_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">prev_st<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rawbuf_idx<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">mbclen<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">wint_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">wc<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">WEOF<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Skip the characters which are not necessary to check.  */</comment>
  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">rawbuf_idx<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name><name pos:line="11" pos:column="21">pstr<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">raw_mbs_idx<pos:position pos:line="11" pos:column="38"/></name></name> <operator pos:line="11" pos:column="39">+<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="41">pstr<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">-&gt;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="47">valid_raw_len<pos:position pos:line="11" pos:column="60"/></name></name></expr>;<pos:position pos:line="11" pos:column="61"/></init>
       <condition><expr><name pos:line="12" pos:column="8">rawbuf_idx<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&lt;<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="21">new_raw_idx<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></condition><incr/>)<pos:position pos:line="12" pos:column="34"/></control>
    <block pos:line="13" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">wchar_t<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">wc2<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">int<pos:position pos:line="15" pos:column="10"/></name></type> <name pos:line="15" pos:column="11">remain_len<pos:position pos:line="15" pos:column="21"/></name> <init pos:line="15" pos:column="22">= <expr><name><name pos:line="15" pos:column="24">pstr<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">len<pos:position pos:line="15" pos:column="33"/></name></name> <operator pos:line="15" pos:column="34">-<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">rawbuf_idx<pos:position pos:line="15" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">prev_st<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name><name pos:line="16" pos:column="17">pstr<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">cur_state<pos:position pos:line="16" pos:column="32"/></name></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="17" pos:column="7">mbclen<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">__mbrtowc<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="28">wc2<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="33">(<pos:position pos:line="17" pos:column="34"/></operator><specifier pos:line="17" pos:column="34">const<pos:position pos:line="17" pos:column="39"/></specifier> <name pos:line="17" pos:column="40">char<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">*<pos:position pos:line="17" pos:column="46"/></operator><operator pos:line="17" pos:column="46">)<pos:position pos:line="17" pos:column="47"/></operator> <name><name pos:line="17" pos:column="48">pstr<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">raw_mbs<pos:position pos:line="17" pos:column="61"/></name></name> <operator pos:line="17" pos:column="62">+<pos:position pos:line="17" pos:column="63"/></operator> <name pos:line="17" pos:column="64">rawbuf_idx<pos:position pos:line="17" pos:column="74"/></name></expr></argument>,
			  <argument><expr><name pos:line="18" pos:column="27">remain_len<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="39">&amp;<pos:position pos:line="18" pos:column="44"/></operator><name><name pos:line="18" pos:column="40">pstr<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">cur_state<pos:position pos:line="18" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><call><name pos:line="19" pos:column="11">BE<pos:position pos:line="19" pos:column="13"/></name> <argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">mbclen<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">==<pos:position pos:line="19" pos:column="24"/></operator> <operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">size_t<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">)<pos:position pos:line="19" pos:column="33"/></operator> <operator pos:line="19" pos:column="34">-<pos:position pos:line="19" pos:column="35"/></operator><literal type="number" pos:line="19" pos:column="35">2<pos:position pos:line="19" pos:column="36"/></literal> <operator pos:line="19" pos:column="37">||<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">mbclen<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">==<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="50">(<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">size_t<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">)<pos:position pos:line="19" pos:column="58"/></operator> <operator pos:line="19" pos:column="59">-<pos:position pos:line="19" pos:column="60"/></operator><literal type="number" pos:line="19" pos:column="60">1<pos:position pos:line="19" pos:column="61"/></literal> <operator pos:line="19" pos:column="62">||<pos:position pos:line="19" pos:column="64"/></operator> <name pos:line="19" pos:column="65">mbclen<pos:position pos:line="19" pos:column="71"/></name> <operator pos:line="19" pos:column="72">==<pos:position pos:line="19" pos:column="74"/></operator> <literal type="number" pos:line="19" pos:column="75">0<pos:position pos:line="19" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="78">0<pos:position pos:line="19" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="81"/></condition><then pos:line="19" pos:column="81">
	<block pos:line="20" pos:column="9">{
	  <comment type="block" pos:line="21" pos:column="11">/* We treat these cases as a single byte character.  */</comment>
	  <if pos:line="22" pos:column="11">if <condition pos:line="22" pos:column="14">(<expr><name pos:line="22" pos:column="15">mbclen<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">==<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal> <operator pos:line="22" pos:column="27">||<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">remain_len<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">==<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">0<pos:position pos:line="22" pos:column="45"/></literal></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">wc<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="string" pos:line="23" pos:column="18">L'<pos:position pos:line="23" pos:column="20"/></literal>\0'<pos:position pos:line="23" pos:column="23"/></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt></block></then>
	  <else pos:line="24" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="13">wc<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">*<pos:position pos:line="25" pos:column="19"/></operator><operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">unsigned<pos:position pos:line="25" pos:column="28"/></name> <name pos:line="25" pos:column="29">char<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">*<pos:position pos:line="25" pos:column="35"/></operator><operator pos:line="25" pos:column="35">)<pos:position pos:line="25" pos:column="36"/></operator> <operator pos:line="25" pos:column="37">(<pos:position pos:line="25" pos:column="38"/></operator><name><name pos:line="25" pos:column="38">pstr<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">raw_mbs<pos:position pos:line="25" pos:column="51"/></name></name> <operator pos:line="25" pos:column="52">+<pos:position pos:line="25" pos:column="53"/></operator> <name pos:line="25" pos:column="54">rawbuf_idx<pos:position pos:line="25" pos:column="64"/></name><operator pos:line="25" pos:column="64">)<pos:position pos:line="25" pos:column="65"/></operator></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt></block></else></if>
	  <expr_stmt><expr><name pos:line="26" pos:column="11">mbclen<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="20">1<pos:position pos:line="26" pos:column="21"/></literal></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="27" pos:column="11">pstr<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">cur_state<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">prev_st<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then>
      <else pos:line="29" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="9">wc<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">wint_t<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">)<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">wc2<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt></block></else></if>
      <comment type="block" pos:line="31" pos:column="7">/* Then proceed the next character.  */</comment>
      <expr_stmt><expr><name pos:line="32" pos:column="7">rawbuf_idx<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">+=<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="21">mbclen<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
  <expr_stmt><expr><operator pos:line="34" pos:column="3">*<pos:position pos:line="34" pos:column="4"/></operator><name pos:line="34" pos:column="4">last_wc<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">wint_t<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">wc<pos:position pos:line="34" pos:column="25"/></name></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">rawbuf_idx<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

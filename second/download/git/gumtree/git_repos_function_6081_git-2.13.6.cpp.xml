<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6081_git-2.13.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_remote_ref_states<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">name<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">ref_states<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">states<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="3" pos:column="34">int<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">query<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">transport<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">transport<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">ref<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">remote_refs<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="8" pos:column="9">states<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">remote<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">remote_get<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">name<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">states<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">remote<pos:position pos:line="9" pos:column="28"/></name></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">error<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><call><name pos:line="10" pos:column="30">_<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><literal type="string" pos:line="10" pos:column="32">"No such remote: %s"<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">name<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">read_branches<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">query<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">transport<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">transport_get<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name><name pos:line="15" pos:column="43">states<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">remote<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="15" pos:column="59">states<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">-&gt;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="67">remote<pos:position pos:line="15" pos:column="73"/></name><operator pos:line="15" pos:column="73">-&gt;<pos:position pos:line="15" pos:column="78"/></operator><name pos:line="15" pos:column="75">url_nr<pos:position pos:line="15" pos:column="81"/></name></name> <operator pos:line="15" pos:column="82">&gt;<pos:position pos:line="15" pos:column="86"/></operator> <literal type="number" pos:line="15" pos:column="84">0<pos:position pos:line="15" pos:column="85"/></literal></expr> ?<pos:position pos:line="15" pos:column="87"/></condition><then pos:line="15" pos:column="87">
			<expr><name><name pos:line="16" pos:column="25">states<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">remote<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">url<pos:position pos:line="16" pos:column="44"/></name><index pos:line="16" pos:column="44">[<expr><literal type="number" pos:line="16" pos:column="45">0<pos:position pos:line="16" pos:column="46"/></literal></expr>]<pos:position pos:line="16" pos:column="47"/></index></name></expr> <pos:position pos:line="16" pos:column="48"/></then><else pos:line="16" pos:column="48">: <expr><name pos:line="16" pos:column="50">NULL<pos:position pos:line="16" pos:column="54"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">remote_refs<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">transport_get_remote_refs<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">(<argument><expr><name pos:line="17" pos:column="57">transport<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">transport_disconnect<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">transport<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="20" pos:column="17">states<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">queried<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <literal type="number" pos:line="20" pos:column="35">1<pos:position pos:line="20" pos:column="36"/></literal></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">query<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="29">GET_REF_STATES<pos:position pos:line="21" pos:column="43"/></name></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">get_ref_states<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">remote_refs<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">states<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">query<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">&amp;<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="29">GET_HEAD_NAMES<pos:position pos:line="23" pos:column="43"/></name></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">get_head_names<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">remote_refs<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">states<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">query<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&amp;<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="29">GET_PUSH_REF_STATES<pos:position pos:line="25" pos:column="48"/></name></expr>)<pos:position pos:line="25" pos:column="49"/></condition><then pos:line="25" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">get_push_ref_states<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">remote_refs<pos:position pos:line="26" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">states<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">for_each_ref<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">append_ref_to_tracked_list<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="58">states<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">string_list_sort<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator><name><name pos:line="29" pos:column="35">states<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">tracked<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">get_push_ref_states_noquery<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">states<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></else></if>

	<return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

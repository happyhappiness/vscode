<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5748_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_non_local_tags<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">transport<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">transport<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">ref<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier><modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">head<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="3" pos:column="25">struct<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">ref<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">tail<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">existing_refs<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><name pos:line="5" pos:column="44">STRING_LIST_INIT_DUP<pos:position pos:line="5" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">string_list<pos:position pos:line="6" pos:column="27"/></name></name></type> <name pos:line="6" pos:column="28">remote_refs<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><name pos:line="6" pos:column="42">STRING_LIST_INIT_NODUP<pos:position pos:line="6" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name><name pos:line="7" pos:column="15">struct<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">ref<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">ref<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">string_list_item<pos:position pos:line="8" pos:column="32"/></name></name> <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier></type><name pos:line="8" pos:column="34">item<pos:position pos:line="8" pos:column="38"/></name> <init pos:line="8" pos:column="39">= <expr><name pos:line="8" pos:column="41">NULL<pos:position pos:line="8" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">for_each_ref<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">add_existing<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="37">existing_refs<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">ref<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">transport_get_remote_refs<pos:position pos:line="11" pos:column="45"/></name><argument_list pos:line="11" pos:column="45">(<argument><expr><name pos:line="11" pos:column="46">transport<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></init> <condition><expr><name pos:line="11" pos:column="58">ref<pos:position pos:line="11" pos:column="61"/></name></expr>;<pos:position pos:line="11" pos:column="62"/></condition> <incr><expr><name pos:line="11" pos:column="63">ref<pos:position pos:line="11" pos:column="66"/></name> <operator pos:line="11" pos:column="67">=<pos:position pos:line="11" pos:column="68"/></operator> <name><name pos:line="11" pos:column="69">ref<pos:position pos:line="11" pos:column="72"/></name><operator pos:line="11" pos:column="72">-&gt;<pos:position pos:line="11" pos:column="77"/></operator><name pos:line="11" pos:column="74">next<pos:position pos:line="11" pos:column="78"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="79"/></control> <block pos:line="11" pos:column="80">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">starts_with<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">ref<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">name<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"refs/tags/"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>

		<comment type="block" pos:line="15" pos:column="17">/*
		 * The peeled ref always follows the matching base
		 * ref, so if we see a peeled ref that we don't want
		 * to fetch then we can mark the ref entry in the list
		 * as one to ignore by setting util to NULL.
		 */</comment>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">ends_with<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name><name pos:line="21" pos:column="31">ref<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">name<pos:position pos:line="21" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="42">"^{}"<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">item<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">&amp;&amp;<pos:position pos:line="22" pos:column="44"/></operator>
			    <operator pos:line="23" pos:column="29">!<pos:position pos:line="23" pos:column="30"/></operator><call><name pos:line="23" pos:column="30">has_object_file_with_flags<pos:position pos:line="23" pos:column="56"/></name><argument_list pos:line="23" pos:column="56">(<argument><expr><operator pos:line="23" pos:column="57">&amp;<pos:position pos:line="23" pos:column="62"/></operator><name><name pos:line="23" pos:column="58">ref<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">-&gt;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="63">old_oid<pos:position pos:line="23" pos:column="70"/></name></name></expr></argument>,
							<argument><expr><name pos:line="24" pos:column="57">OBJECT_INFO_QUICK<pos:position pos:line="24" pos:column="74"/></name></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call> <operator pos:line="24" pos:column="76">&amp;&amp;<pos:position pos:line="24" pos:column="86"/></operator>
			    <operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">will_fetch<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">head<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="47">ref<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">old_oid<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">.<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">hash<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call> <operator pos:line="25" pos:column="66">&amp;&amp;<pos:position pos:line="25" pos:column="76"/></operator>
			    <operator pos:line="26" pos:column="29">!<pos:position pos:line="26" pos:column="30"/></operator><call><name pos:line="26" pos:column="30">has_sha1_file_with_flags<pos:position pos:line="26" pos:column="54"/></name><argument_list pos:line="26" pos:column="54">(<argument><expr><name><name pos:line="26" pos:column="55">item<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">-&gt;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="61">util<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>,
						      <argument><expr><name pos:line="27" pos:column="55">OBJECT_INFO_QUICK<pos:position pos:line="27" pos:column="72"/></name></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call> <operator pos:line="27" pos:column="74">&amp;&amp;<pos:position pos:line="27" pos:column="84"/></operator>
			    <operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><call><name pos:line="28" pos:column="30">will_fetch<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">head<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="47">item<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">-&gt;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="53">util<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="59"/></condition><then pos:line="28" pos:column="59">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="33">item<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">util<pos:position pos:line="29" pos:column="43"/></name></name> <operator pos:line="29" pos:column="44">=<pos:position pos:line="29" pos:column="45"/></operator> <name pos:line="29" pos:column="46">NULL<pos:position pos:line="29" pos:column="50"/></name></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="30" pos:column="25">item<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">NULL<pos:position pos:line="30" pos:column="36"/></name></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
			<continue pos:line="31" pos:column="25">continue;<pos:position pos:line="31" pos:column="34"/></continue>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="34" pos:column="17">/*
		 * If item is non-NULL here, then we previously saw a
		 * ref not followed by a peeled reference, so we need
		 * to check if it is a lightweight tag that we want to
		 * fetch.
		 */</comment>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">item<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">&amp;&amp;<pos:position pos:line="40" pos:column="36"/></operator>
		    <operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><call><name pos:line="41" pos:column="22">has_sha1_file_with_flags<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">(<argument><expr><name><name pos:line="41" pos:column="47">item<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">util<pos:position pos:line="41" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">OBJECT_INFO_QUICK<pos:position pos:line="41" pos:column="76"/></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call> <operator pos:line="41" pos:column="78">&amp;&amp;<pos:position pos:line="41" pos:column="88"/></operator>
		    <operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><call><name pos:line="42" pos:column="22">will_fetch<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">head<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="39">item<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">util<pos:position pos:line="42" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="51"/></condition><then pos:line="42" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="25">item<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">util<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <name pos:line="43" pos:column="38">NULL<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="45" pos:column="17">item<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">NULL<pos:position pos:line="45" pos:column="28"/></name></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>

		<comment type="block" pos:line="47" pos:column="17">/* skip duplicates and refs that we already have */</comment>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><call><name pos:line="48" pos:column="21">string_list_has_string<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><operator pos:line="48" pos:column="44">&amp;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="45">remote_refs<pos:position pos:line="48" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="58">ref<pos:position pos:line="48" pos:column="61"/></name><operator pos:line="48" pos:column="61">-&gt;<pos:position pos:line="48" pos:column="66"/></operator><name pos:line="48" pos:column="63">name<pos:position pos:line="48" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call> <operator pos:line="48" pos:column="69">||<pos:position pos:line="48" pos:column="71"/></operator>
		    <call><name pos:line="49" pos:column="21">string_list_has_string<pos:position pos:line="49" pos:column="43"/></name><argument_list pos:line="49" pos:column="43">(<argument><expr><operator pos:line="49" pos:column="44">&amp;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="45">existing_refs<pos:position pos:line="49" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="60">ref<pos:position pos:line="49" pos:column="63"/></name><operator pos:line="49" pos:column="63">-&gt;<pos:position pos:line="49" pos:column="68"/></operator><name pos:line="49" pos:column="65">name<pos:position pos:line="49" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="71"/></condition><then pos:line="49" pos:column="71">
			<block type="pseudo"><continue pos:line="50" pos:column="25">continue;<pos:position pos:line="50" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="52" pos:column="17">item<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">=<pos:position pos:line="52" pos:column="23"/></operator> <call><name pos:line="52" pos:column="24">string_list_insert<pos:position pos:line="52" pos:column="42"/></name><argument_list pos:line="52" pos:column="42">(<argument><expr><operator pos:line="52" pos:column="43">&amp;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="44">remote_refs<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="57">ref<pos:position pos:line="52" pos:column="60"/></name><operator pos:line="52" pos:column="60">-&gt;<pos:position pos:line="52" pos:column="65"/></operator><name pos:line="52" pos:column="62">name<pos:position pos:line="52" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="53" pos:column="17">item<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">util<pos:position pos:line="53" pos:column="27"/></name></name> <operator pos:line="53" pos:column="28">=<pos:position pos:line="53" pos:column="29"/></operator> <operator pos:line="53" pos:column="30">(<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">void<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">*<pos:position pos:line="53" pos:column="37"/></operator><operator pos:line="53" pos:column="37">)<pos:position pos:line="53" pos:column="38"/></operator><operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name><name pos:line="53" pos:column="39">ref<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">-&gt;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="44">old_oid<pos:position pos:line="53" pos:column="51"/></name></name></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">string_list_clear<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><operator pos:line="55" pos:column="27">&amp;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="28">existing_refs<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="43">1<pos:position pos:line="55" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt>

	<comment type="block" pos:line="57" pos:column="9">/*
	 * We may have a final lightweight tag that needs to be
	 * checked to see if it needs fetching.
	 */</comment>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">item<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">&amp;&amp;<pos:position pos:line="61" pos:column="28"/></operator>
	    <operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><call><name pos:line="62" pos:column="14">has_sha1_file_with_flags<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><name><name pos:line="62" pos:column="39">item<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">util<pos:position pos:line="62" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">OBJECT_INFO_QUICK<pos:position pos:line="62" pos:column="68"/></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call> <operator pos:line="62" pos:column="70">&amp;&amp;<pos:position pos:line="62" pos:column="80"/></operator>
	    <operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><call><name pos:line="63" pos:column="14">will_fetch<pos:position pos:line="63" pos:column="24"/></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name pos:line="63" pos:column="25">head<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="31">item<pos:position pos:line="63" pos:column="35"/></name><operator pos:line="63" pos:column="35">-&gt;<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="37">util<pos:position pos:line="63" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="17">item<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">-&gt;<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="23">util<pos:position pos:line="64" pos:column="27"/></name></name> <operator pos:line="64" pos:column="28">=<pos:position pos:line="64" pos:column="29"/></operator> <name pos:line="64" pos:column="30">NULL<pos:position pos:line="64" pos:column="34"/></name></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="66" pos:column="9">/*
	 * For all the tags in the remote_refs string list,
	 * add them to the list of refs to be fetched
	 */</comment>
	<macro><name pos:line="70" pos:column="9">for_each_string_list_item<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">(<argument pos:line="70" pos:column="35">item<pos:position pos:line="70" pos:column="39"/></argument>, <argument pos:line="70" pos:column="41">&amp;remote_refs<pos:position pos:line="70" pos:column="53"/></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></macro> <block pos:line="70" pos:column="55">{
		<comment type="block" pos:line="71" pos:column="17">/* Unless we have already decided to ignore this item... */</comment>
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">item<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">util<pos:position pos:line="72" pos:column="31"/></name></name></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32">
		<block pos:line="73" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="74" pos:column="25">struct<pos:position pos:line="74" pos:column="31"/></name> <name pos:line="74" pos:column="32">ref<pos:position pos:line="74" pos:column="35"/></name></name> <modifier pos:line="74" pos:column="36">*<pos:position pos:line="74" pos:column="37"/></modifier></type><name pos:line="74" pos:column="37">rm<pos:position pos:line="74" pos:column="39"/></name> <init pos:line="74" pos:column="40">= <expr><call><name pos:line="74" pos:column="42">alloc_ref<pos:position pos:line="74" pos:column="51"/></name><argument_list pos:line="74" pos:column="51">(<argument><expr><name><name pos:line="74" pos:column="52">item<pos:position pos:line="74" pos:column="56"/></name><operator pos:line="74" pos:column="56">-&gt;<pos:position pos:line="74" pos:column="61"/></operator><name pos:line="74" pos:column="58">string<pos:position pos:line="74" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="66"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">rm<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">-&gt;<pos:position pos:line="75" pos:column="32"/></operator><name pos:line="75" pos:column="29">peer_ref<pos:position pos:line="75" pos:column="37"/></name></name> <operator pos:line="75" pos:column="38">=<pos:position pos:line="75" pos:column="39"/></operator> <call><name pos:line="75" pos:column="40">alloc_ref<pos:position pos:line="75" pos:column="49"/></name><argument_list pos:line="75" pos:column="49">(<argument><expr><name><name pos:line="75" pos:column="50">item<pos:position pos:line="75" pos:column="54"/></name><operator pos:line="75" pos:column="54">-&gt;<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="56">string<pos:position pos:line="75" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">oidcpy<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><operator pos:line="76" pos:column="32">&amp;<pos:position pos:line="76" pos:column="37"/></operator><name><name pos:line="76" pos:column="33">rm<pos:position pos:line="76" pos:column="35"/></name><operator pos:line="76" pos:column="35">-&gt;<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="37">old_oid<pos:position pos:line="76" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="46">item<pos:position pos:line="76" pos:column="50"/></name><operator pos:line="76" pos:column="50">-&gt;<pos:position pos:line="76" pos:column="55"/></operator><name pos:line="76" pos:column="52">util<pos:position pos:line="76" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="77" pos:column="25">*<pos:position pos:line="77" pos:column="26"/></operator><operator pos:line="77" pos:column="26">*<pos:position pos:line="77" pos:column="27"/></operator><name pos:line="77" pos:column="27">tail<pos:position pos:line="77" pos:column="31"/></name> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <name pos:line="77" pos:column="34">rm<pos:position pos:line="77" pos:column="36"/></name></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="78" pos:column="25">*<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="26">tail<pos:position pos:line="78" pos:column="30"/></name> <operator pos:line="78" pos:column="31">=<pos:position pos:line="78" pos:column="32"/></operator> <operator pos:line="78" pos:column="33">&amp;<pos:position pos:line="78" pos:column="38"/></operator><name><name pos:line="78" pos:column="34">rm<pos:position pos:line="78" pos:column="36"/></name><operator pos:line="78" pos:column="36">-&gt;<pos:position pos:line="78" pos:column="41"/></operator><name pos:line="78" pos:column="38">next<pos:position pos:line="78" pos:column="42"/></name></name></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="79" pos:column="18"/></block></then></if>
	}<pos:position pos:line="80" pos:column="10"/></block>

	<expr_stmt><expr><call><name pos:line="82" pos:column="9">string_list_clear<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument><expr><operator pos:line="82" pos:column="27">&amp;<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="28">remote_refs<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="41">0<pos:position pos:line="82" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

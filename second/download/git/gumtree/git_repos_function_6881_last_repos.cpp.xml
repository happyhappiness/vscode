<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6881_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_segment<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">mstate<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">m<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">tbase<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">size_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">tsize<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">flag_t<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">mmapped<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list> <block pos:line="1" pos:column="78">{
  <comment type="block" pos:line="2" pos:column="3">/* Determine locations and sizes of segment, fenceposts, old top */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name><modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type> <name pos:line="3" pos:column="9">old_top<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">(<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">char<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></operator><operator pos:line="3" pos:column="25">)<pos:position pos:line="3" pos:column="26"/></operator><name><name pos:line="3" pos:column="26">m<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">top<pos:position pos:line="3" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">msegmentptr<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">oldsp<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">segment_holding<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">m<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="42">old_top<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name><modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type> <name pos:line="5" pos:column="9">old_end<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name><name pos:line="5" pos:column="19">oldsp<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">base<pos:position pos:line="5" pos:column="30"/></name></name> <operator pos:line="5" pos:column="31">+<pos:position pos:line="5" pos:column="32"/></operator> <name><name pos:line="5" pos:column="33">oldsp<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">size<pos:position pos:line="5" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">ssize<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><call><name pos:line="6" pos:column="18">pad_request<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><sizeof pos:line="6" pos:column="30">sizeof<argument_list pos:line="6" pos:column="36">(<argument><expr pos:line="6" pos:column="37">struct <name pos:line="6" pos:column="44">malloc_segment<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name><modifier pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></modifier></type> <name pos:line="7" pos:column="9">rawsp<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name pos:line="7" pos:column="17">old_end<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator> <operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">ssize<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">+<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="36">FOUR_SIZE_T_SIZES<pos:position pos:line="7" pos:column="53"/></name> <operator pos:line="7" pos:column="54">+<pos:position pos:line="7" pos:column="55"/></operator> <name pos:line="7" pos:column="56">CHUNK_ALIGN_MASK<pos:position pos:line="7" pos:column="72"/></name><operator pos:line="7" pos:column="72">)<pos:position pos:line="7" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="74"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">offset<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><call><name pos:line="8" pos:column="19">align_offset<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><call><name pos:line="8" pos:column="32">chunk2mem<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">rawsp<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name><modifier pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></modifier></type> <name pos:line="9" pos:column="9">asp<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><name pos:line="9" pos:column="15">rawsp<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">+<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">offset<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name><modifier pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></modifier></type> <name pos:line="10" pos:column="9">csp<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><ternary><condition><expr><operator pos:line="10" pos:column="15">(<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">asp<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&lt;<pos:position pos:line="10" pos:column="24"/></operator> <operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">old_top<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">+<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">MIN_CHUNK_SIZE<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">)<pos:position pos:line="10" pos:column="48"/></operator><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator></expr>?<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <expr><name pos:line="10" pos:column="51">old_top<pos:position pos:line="10" pos:column="58"/></name></expr> <pos:position pos:line="10" pos:column="59"/></then><else pos:line="10" pos:column="59">: <expr><name pos:line="10" pos:column="61">asp<pos:position pos:line="10" pos:column="64"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="10" pos:column="65"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">mchunkptr<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">sp<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">mchunkptr<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">)<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">csp<pos:position pos:line="11" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">msegmentptr<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">ss<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><call pos:line="12" pos:column="20">(<name pos:line="12" pos:column="21">msegmentptr<pos:position pos:line="12" pos:column="32"/></name>)<argument_list pos:line="12" pos:column="33">(<argument><expr><call><name pos:line="12" pos:column="34">chunk2mem<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">sp<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">mchunkptr<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">tnext<pos:position pos:line="13" pos:column="18"/></name> <init pos:line="13" pos:column="19">= <expr><call><name pos:line="13" pos:column="21">chunk_plus_offset<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">sp<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">ssize<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">mchunkptr<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">p<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><name pos:line="14" pos:column="17">tnext<pos:position pos:line="14" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">nfences<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* reset top to new space */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">init_top<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">m<pos:position pos:line="18" pos:column="13"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">mchunkptr<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">)<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">tbase<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">tsize<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">-<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">TOP_FOOT_SIZE<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* Set up segment record */</comment>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">assert<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><call><name pos:line="21" pos:column="10">is_aligned<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">ss<pos:position pos:line="21" pos:column="23"/></name></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">set_size_and_pinuse_of_inuse_chunk<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">m<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">sp<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">ssize<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="23" pos:column="3">*<pos:position pos:line="23" pos:column="4"/></operator><name pos:line="23" pos:column="4">ss<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <name><name pos:line="23" pos:column="9">m<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">seg<pos:position pos:line="23" pos:column="15"/></name></name></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt> <comment type="block" pos:line="23" pos:column="17">/* Push current record */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">m<pos:position pos:line="24" pos:column="4"/></name><operator pos:line="24" pos:column="4">-&gt;<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="6">seg<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">.<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">base<pos:position pos:line="24" pos:column="14"/></name></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">tbase<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">m<pos:position pos:line="25" pos:column="4"/></name><operator pos:line="25" pos:column="4">-&gt;<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="6">seg<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">.<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">size<pos:position pos:line="25" pos:column="14"/></name></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">tsize<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">m<pos:position pos:line="26" pos:column="4"/></name><operator pos:line="26" pos:column="4">-&gt;<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="6">seg<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">.<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">sflags<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">mmapped<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">m<pos:position pos:line="27" pos:column="4"/></name><operator pos:line="27" pos:column="4">-&gt;<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="6">seg<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">.<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">next<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">ss<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* Insert trailing fenceposts */</comment>
  <for pos:line="30" pos:column="3">for <control pos:line="30" pos:column="7">(<init pos:line="30" pos:column="8">;<pos:position pos:line="30" pos:column="9"/></init><condition pos:line="30" pos:column="9">;<pos:position pos:line="30" pos:column="10"/></condition><incr/>)<pos:position pos:line="30" pos:column="11"/></control> <block pos:line="30" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">mchunkptr<pos:position pos:line="31" pos:column="14"/></name></type> <name pos:line="31" pos:column="15">nextp<pos:position pos:line="31" pos:column="20"/></name> <init pos:line="31" pos:column="21">= <expr><call><name pos:line="31" pos:column="23">chunk_plus_offset<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">p<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">SIZE_T_SIZE<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">p<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">head<pos:position pos:line="32" pos:column="12"/></name></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">FENCEPOST_HEAD<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">++<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">nfences<pos:position pos:line="33" pos:column="14"/></name></expr>;<pos:position pos:line="33" pos:column="15"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">char<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">*<pos:position pos:line="34" pos:column="15"/></operator><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><operator pos:line="34" pos:column="17">&amp;<pos:position pos:line="34" pos:column="22"/></operator><operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><name><name pos:line="34" pos:column="19">nextp<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">head<pos:position pos:line="34" pos:column="30"/></name></name><operator pos:line="34" pos:column="30">)<pos:position pos:line="34" pos:column="31"/></operator><operator pos:line="34" pos:column="31">)<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="33">&lt;<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="35">old_end<pos:position pos:line="34" pos:column="42"/></name></expr>)<pos:position pos:line="34" pos:column="43"/></condition><then pos:line="34" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">p<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <name pos:line="35" pos:column="11">nextp<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt></block></then>
    <else pos:line="36" pos:column="5">else
      <block type="pseudo"><break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">assert<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><name pos:line="39" pos:column="10">nfences<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">&gt;=<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="21">2<pos:position pos:line="39" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* Insert the rest of old top into a bin as an ordinary free chunk */</comment>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name pos:line="42" pos:column="7">csp<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">!=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">old_top<pos:position pos:line="42" pos:column="21"/></name></expr>)<pos:position pos:line="42" pos:column="22"/></condition><then pos:line="42" pos:column="22"> <block pos:line="42" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">mchunkptr<pos:position pos:line="43" pos:column="14"/></name></type> <name pos:line="43" pos:column="15">q<pos:position pos:line="43" pos:column="16"/></name> <init pos:line="43" pos:column="17">= <expr><operator pos:line="43" pos:column="19">(<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">mchunkptr<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">)<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">old_top<pos:position pos:line="43" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">size_t<pos:position pos:line="44" pos:column="11"/></name></type> <name pos:line="44" pos:column="12">psize<pos:position pos:line="44" pos:column="17"/></name> <init pos:line="44" pos:column="18">= <expr><name pos:line="44" pos:column="20">csp<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">-<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">old_top<pos:position pos:line="44" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">mchunkptr<pos:position pos:line="45" pos:column="14"/></name></type> <name pos:line="45" pos:column="15">tn<pos:position pos:line="45" pos:column="17"/></name> <init pos:line="45" pos:column="18">= <expr><call><name pos:line="45" pos:column="20">chunk_plus_offset<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">q<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="41">psize<pos:position pos:line="45" pos:column="46"/></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">set_free_with_pinuse<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">q<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="29">psize<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">tn<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">insert_chunk<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">m<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="21">q<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="24">psize<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">check_top_chunk<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><name pos:line="50" pos:column="19">m<pos:position pos:line="50" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="22">m<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">top<pos:position pos:line="50" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

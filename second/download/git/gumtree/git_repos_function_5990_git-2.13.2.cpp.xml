<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5990_git-2.13.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">run_dir_diff<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">extcmd<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">symlinks<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <name pos:line="1" pos:column="65">char<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">prefix<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">argc<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">argv<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">tmpdir<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><name pos:line="4" pos:column="21">PATH_MAX<pos:position pos:line="4" pos:column="29"/></name></expr>]<pos:position pos:line="4" pos:column="30"/></index></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">info<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">STRBUF_INIT<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="43">lpath<pos:position pos:line="5" pos:column="48"/></name> <init pos:line="5" pos:column="49">= <expr><name pos:line="5" pos:column="51">STRBUF_INIT<pos:position pos:line="5" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">rpath<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><name pos:line="6" pos:column="31">STRBUF_INIT<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="44">buf<pos:position pos:line="6" pos:column="47"/></name> <init pos:line="6" pos:column="48">= <expr><name pos:line="6" pos:column="50">STRBUF_INIT<pos:position pos:line="6" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">ldir<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">STRBUF_INIT<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="43">rdir<pos:position pos:line="7" pos:column="47"/></name> <init pos:line="7" pos:column="48">= <expr><name pos:line="7" pos:column="50">STRBUF_INIT<pos:position pos:line="7" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">wtdir<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">STRBUF_INIT<pos:position pos:line="8" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">lbase_dir<pos:position pos:line="9" pos:column="24"/></name></decl>, <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="27">rbase_dir<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">ldir_len<pos:position pos:line="10" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="26">rdir_len<pos:position pos:line="10" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="36">wtdir_len<pos:position pos:line="10" pos:column="45"/></name></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">workdir<pos:position pos:line="11" pos:column="28"/></name></decl>, <modifier pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="31">tmp<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">ret<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="22">i<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">FILE<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">fp<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">hashmap<pos:position pos:line="14" pos:column="23"/></name></name></type> <name pos:line="14" pos:column="24">working_tree_dups<pos:position pos:line="14" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="43">submodules<pos:position pos:line="14" pos:column="53"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="55">symlinks2<pos:position pos:line="14" pos:column="64"/></name></decl>;<pos:position pos:line="14" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">hashmap_iter<pos:position pos:line="15" pos:column="28"/></name></name></type> <name pos:line="15" pos:column="29">iter<pos:position pos:line="15" pos:column="33"/></name></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">pair_entry<pos:position pos:line="16" pos:column="26"/></name></name> <modifier pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></modifier></type><name pos:line="16" pos:column="28">entry<pos:position pos:line="16" pos:column="33"/></name></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">index_state<pos:position pos:line="17" pos:column="27"/></name></name></type> <name pos:line="17" pos:column="28">wtindex<pos:position pos:line="17" pos:column="35"/></name></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="18" pos:column="9">struct<pos:position pos:line="18" pos:column="15"/></name> <name pos:line="18" pos:column="16">checkout<pos:position pos:line="18" pos:column="24"/></name></name></type> <name pos:line="18" pos:column="25">lstate<pos:position pos:line="18" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="33">rstate<pos:position pos:line="18" pos:column="39"/></name></decl>;<pos:position pos:line="18" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">rc<pos:position pos:line="19" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="17">flags<pos:position pos:line="19" pos:column="22"/></name> <init pos:line="19" pos:column="23">= <expr><name pos:line="19" pos:column="25">RUN_GIT_CMD<pos:position pos:line="19" pos:column="36"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="38">err<pos:position pos:line="19" pos:column="41"/></name> <init pos:line="19" pos:column="42">= <expr><literal type="number" pos:line="19" pos:column="44">0<pos:position pos:line="19" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="20" pos:column="9">struct<pos:position pos:line="20" pos:column="15"/></name> <name pos:line="20" pos:column="16">child_process<pos:position pos:line="20" pos:column="29"/></name></name></type> <name pos:line="20" pos:column="30">child<pos:position pos:line="20" pos:column="35"/></name> <init pos:line="20" pos:column="36">= <expr><name pos:line="20" pos:column="38">CHILD_PROCESS_INIT<pos:position pos:line="20" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="21" pos:column="9">const<pos:position pos:line="21" pos:column="14"/></specifier> <name pos:line="21" pos:column="15">char<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name><name pos:line="21" pos:column="21">helper_argv<pos:position pos:line="21" pos:column="32"/></name><index pos:line="21" pos:column="32">[]<pos:position pos:line="21" pos:column="34"/></index></name> <init pos:line="21" pos:column="35">= <expr><block pos:line="21" pos:column="37">{ <expr><literal type="string" pos:line="21" pos:column="39">"difftool--helper"<pos:position pos:line="21" pos:column="57"/></literal></expr>, <expr><name pos:line="21" pos:column="59">NULL<pos:position pos:line="21" pos:column="63"/></name></expr>, <expr><name pos:line="21" pos:column="65">NULL<pos:position pos:line="21" pos:column="69"/></name></expr>, <expr><name pos:line="21" pos:column="71">NULL<pos:position pos:line="21" pos:column="75"/></name></expr> }<pos:position pos:line="21" pos:column="77"/></block></expr></init></decl>;<pos:position pos:line="21" pos:column="78"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="22" pos:column="9">struct<pos:position pos:line="22" pos:column="15"/></name> <name pos:line="22" pos:column="16">hashmap<pos:position pos:line="22" pos:column="23"/></name></name></type> <name pos:line="22" pos:column="24">wt_modified<pos:position pos:line="22" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="37">tmp_modified<pos:position pos:line="22" pos:column="49"/></name></decl>;<pos:position pos:line="22" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">indices_loaded<pos:position pos:line="23" pos:column="27"/></name> <init pos:line="23" pos:column="28">= <expr><literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="25" pos:column="9">workdir<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">get_git_work_tree<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">()<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>

	<comment type="block" pos:line="27" pos:column="9">/* Setup temp directories */</comment>
	<expr_stmt><expr><name pos:line="28" pos:column="9">tmp<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">getenv<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><literal type="string" pos:line="28" pos:column="22">"TMPDIR"<pos:position pos:line="28" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">xsnprintf<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">tmpdir<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="27">sizeof<argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">tmpdir<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="43">"%s/git-difftool.XXXXXX"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="29" pos:column="69">tmp<pos:position pos:line="29" pos:column="72"/></name></expr> ?<pos:position pos:line="29" pos:column="74"/></condition><then pos:line="29" pos:column="74"> <expr><name pos:line="29" pos:column="75">tmp<pos:position pos:line="29" pos:column="78"/></name></expr> <pos:position pos:line="29" pos:column="79"/></then><else pos:line="29" pos:column="79">: <expr><literal type="string" pos:line="29" pos:column="81">"/tmp"<pos:position pos:line="29" pos:column="87"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="89"/></expr_stmt>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">mkdtemp<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">tmpdir<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
		<block type="pseudo"><return pos:line="31" pos:column="17">return <expr><call><name pos:line="31" pos:column="24">error<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><literal type="string" pos:line="31" pos:column="30">"could not create '%s'"<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">tmpdir<pos:position pos:line="31" pos:column="61"/></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_addf<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="22">ldir<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="28">"%s/left/"<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">tmpdir<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">strbuf_addf<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><operator pos:line="33" pos:column="21">&amp;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="22">rdir<pos:position pos:line="33" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="28">"%s/right/"<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">tmpdir<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_addstr<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><operator pos:line="34" pos:column="23">&amp;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="24">wtdir<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">workdir<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name><name pos:line="35" pos:column="14">wtdir<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">.<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">len<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">||<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">!<pos:position pos:line="35" pos:column="28"/></operator><call><name pos:line="35" pos:column="28">is_dir_sep<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">wtdir<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">.<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="45">buf<pos:position pos:line="35" pos:column="48"/></name><index pos:line="35" pos:column="48">[<expr><name><name pos:line="35" pos:column="49">wtdir<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">.<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="55">len<pos:position pos:line="35" pos:column="58"/></name></name> <operator pos:line="35" pos:column="59">-<pos:position pos:line="35" pos:column="60"/></operator> <literal type="number" pos:line="35" pos:column="61">1<pos:position pos:line="35" pos:column="62"/></literal></expr>]<pos:position pos:line="35" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="65"/></condition><then pos:line="35" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">strbuf_addch<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="31">wtdir<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="38">'/'<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">mkdir<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name><name pos:line="37" pos:column="15">ldir<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">buf<pos:position pos:line="37" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="25">0700<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">mkdir<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name><name pos:line="38" pos:column="15">rdir<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">buf<pos:position pos:line="38" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="25">0700<pos:position pos:line="38" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">memset<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><operator pos:line="40" pos:column="16">&amp;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="17">wtindex<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="26">0<pos:position pos:line="40" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="29">sizeof<argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">wtindex<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">memset<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><operator pos:line="42" pos:column="16">&amp;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="17">lstate<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="25">0<pos:position pos:line="42" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="28">sizeof<argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">lstate<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">lstate<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">.<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">base_dir<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <name pos:line="43" pos:column="27">lbase_dir<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">=<pos:position pos:line="43" pos:column="38"/></operator> <call><name pos:line="43" pos:column="39">xstrdup<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name><name pos:line="43" pos:column="47">ldir<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">.<pos:position pos:line="43" pos:column="52"/></operator><name pos:line="43" pos:column="52">buf<pos:position pos:line="43" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">lstate<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">.<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">base_dir_len<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <name><name pos:line="44" pos:column="31">ldir<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">.<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">len<pos:position pos:line="44" pos:column="39"/></name></name></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">lstate<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">.<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">force<pos:position pos:line="45" pos:column="21"/></name></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <literal type="number" pos:line="45" pos:column="24">1<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">memset<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><operator pos:line="46" pos:column="16">&amp;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="17">rstate<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="25">0<pos:position pos:line="46" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="28">sizeof<argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">rstate<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">rstate<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">.<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">base_dir<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="27">rbase_dir<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">=<pos:position pos:line="47" pos:column="38"/></operator> <call><name pos:line="47" pos:column="39">xstrdup<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr><name><name pos:line="47" pos:column="47">rdir<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><name pos:line="47" pos:column="52">buf<pos:position pos:line="47" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">rstate<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">.<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">base_dir_len<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <name><name pos:line="48" pos:column="31">rdir<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">.<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">len<pos:position pos:line="48" pos:column="39"/></name></name></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">rstate<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">.<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">force<pos:position pos:line="49" pos:column="21"/></name></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="24">1<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><name pos:line="51" pos:column="9">ldir_len<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name><name pos:line="51" pos:column="20">ldir<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">.<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="25">len<pos:position pos:line="51" pos:column="28"/></name></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="52" pos:column="9">rdir_len<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <name><name pos:line="52" pos:column="20">rdir<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">.<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">len<pos:position pos:line="52" pos:column="28"/></name></name></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="53" pos:column="9">wtdir_len<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <name><name pos:line="53" pos:column="21">wtdir<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">.<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">len<pos:position pos:line="53" pos:column="30"/></name></name></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">hashmap_init<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><operator pos:line="55" pos:column="22">&amp;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="23">working_tree_dups<pos:position pos:line="55" pos:column="40"/></name></expr></argument>,
		     <argument><expr><operator pos:line="56" pos:column="22">(<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="23">hashmap_cmp_fn<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">)<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">working_tree_entry_cmp<pos:position pos:line="56" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="62">0<pos:position pos:line="56" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">hashmap_init<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><operator pos:line="57" pos:column="22">&amp;<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="23">submodules<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="35">(<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="36">hashmap_cmp_fn<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">)<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="51">pair_cmp<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="61">0<pos:position pos:line="57" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">hashmap_init<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><operator pos:line="58" pos:column="22">&amp;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="23">symlinks2<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="34">(<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">hashmap_cmp_fn<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">)<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="50">pair_cmp<pos:position pos:line="58" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="60">0<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="60" pos:column="9">child<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">.<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="15">no_stdin<pos:position pos:line="60" pos:column="23"/></name></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <literal type="number" pos:line="60" pos:column="26">1<pos:position pos:line="60" pos:column="27"/></literal></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">child<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">.<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">git_cmd<pos:position pos:line="61" pos:column="22"/></name></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <literal type="number" pos:line="61" pos:column="25">1<pos:position pos:line="61" pos:column="26"/></literal></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="62" pos:column="9">child<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">.<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">use_shell<pos:position pos:line="62" pos:column="24"/></name></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <literal type="number" pos:line="62" pos:column="27">0<pos:position pos:line="62" pos:column="28"/></literal></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="63" pos:column="9">child<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">.<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="15">clean_on_exit<pos:position pos:line="63" pos:column="28"/></name></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <literal type="number" pos:line="63" pos:column="31">1<pos:position pos:line="63" pos:column="32"/></literal></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="64" pos:column="9">child<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">.<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">dir<pos:position pos:line="64" pos:column="18"/></name></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <name pos:line="64" pos:column="21">prefix<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="65" pos:column="9">child<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">.<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">out<pos:position pos:line="65" pos:column="18"/></name></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <operator pos:line="65" pos:column="21">-<pos:position pos:line="65" pos:column="22"/></operator><literal type="number" pos:line="65" pos:column="22">1<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">argv_array_pushl<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><operator pos:line="66" pos:column="26">&amp;<pos:position pos:line="66" pos:column="31"/></operator><name><name pos:line="66" pos:column="27">child<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">.<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="33">args<pos:position pos:line="66" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="39">"diff"<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="47">"--raw"<pos:position pos:line="66" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="56">"--no-abbrev"<pos:position pos:line="66" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="71">"-z"<pos:position pos:line="66" pos:column="75"/></literal></expr></argument>,
			 <argument><expr><name pos:line="67" pos:column="26">NULL<pos:position pos:line="67" pos:column="30"/></name></expr></argument>)<pos:position pos:line="67" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="32"/></expr_stmt>
	<for pos:line="68" pos:column="9">for <control pos:line="68" pos:column="13">(<init><expr><name pos:line="68" pos:column="14">i<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <literal type="number" pos:line="68" pos:column="18">0<pos:position pos:line="68" pos:column="19"/></literal></expr>;<pos:position pos:line="68" pos:column="20"/></init> <condition><expr><name pos:line="68" pos:column="21">i<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">&lt;<pos:position pos:line="68" pos:column="27"/></operator> <name pos:line="68" pos:column="25">argc<pos:position pos:line="68" pos:column="29"/></name></expr>;<pos:position pos:line="68" pos:column="30"/></condition> <incr><expr><name pos:line="68" pos:column="31">i<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">++<pos:position pos:line="68" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="68" pos:column="35"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">argv_array_push<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><operator pos:line="69" pos:column="33">&amp;<pos:position pos:line="69" pos:column="38"/></operator><name><name pos:line="69" pos:column="34">child<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">.<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="40">args<pos:position pos:line="69" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="46">argv<pos:position pos:line="69" pos:column="50"/></name><index pos:line="69" pos:column="50">[<expr><name pos:line="69" pos:column="51">i<pos:position pos:line="69" pos:column="52"/></name></expr>]<pos:position pos:line="69" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="55"/></expr_stmt></block></for>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><call><name pos:line="70" pos:column="13">start_command<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><operator pos:line="70" pos:column="27">&amp;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="28">child<pos:position pos:line="70" pos:column="33"/></name></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="35"/></condition><then pos:line="70" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">die<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><literal type="string" pos:line="71" pos:column="21">"could not obtain raw diff"<pos:position pos:line="71" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="50"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="72" pos:column="9">fp<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">xfdopen<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name><name pos:line="72" pos:column="22">child<pos:position pos:line="72" pos:column="27"/></name><operator pos:line="72" pos:column="27">.<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="28">out<pos:position pos:line="72" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="33">"r"<pos:position pos:line="72" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="74" pos:column="9">/* Build index info for left and right sides of the diff */</comment>
	<expr_stmt><expr><name pos:line="75" pos:column="9">i<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <literal type="number" pos:line="75" pos:column="13">0<pos:position pos:line="75" pos:column="14"/></literal></expr>;<pos:position pos:line="75" pos:column="15"/></expr_stmt>
	<while pos:line="76" pos:column="9">while <condition pos:line="76" pos:column="15">(<expr><operator pos:line="76" pos:column="16">!<pos:position pos:line="76" pos:column="17"/></operator><call><name pos:line="76" pos:column="17">strbuf_getline_nul<pos:position pos:line="76" pos:column="35"/></name><argument_list pos:line="76" pos:column="35">(<argument><expr><operator pos:line="76" pos:column="36">&amp;<pos:position pos:line="76" pos:column="41"/></operator><name pos:line="76" pos:column="37">info<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="43">fp<pos:position pos:line="76" pos:column="45"/></name></expr></argument>)<pos:position pos:line="76" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="47"/></condition> <block pos:line="76" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="77" pos:column="17">int<pos:position pos:line="77" pos:column="20"/></name></type> <name pos:line="77" pos:column="21">lmode<pos:position pos:line="77" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="77" pos:column="28">rmode<pos:position pos:line="77" pos:column="33"/></name></decl>;<pos:position pos:line="77" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="78" pos:column="17">struct<pos:position pos:line="78" pos:column="23"/></name> <name pos:line="78" pos:column="24">object_id<pos:position pos:line="78" pos:column="33"/></name></name></type> <name pos:line="78" pos:column="34">loid<pos:position pos:line="78" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="78" pos:column="40">roid<pos:position pos:line="78" pos:column="44"/></name></decl>;<pos:position pos:line="78" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="79" pos:column="17">char<pos:position pos:line="79" pos:column="21"/></name></type> <name pos:line="79" pos:column="22">status<pos:position pos:line="79" pos:column="28"/></name></decl>;<pos:position pos:line="79" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="80" pos:column="17">const<pos:position pos:line="80" pos:column="22"/></specifier> <name pos:line="80" pos:column="23">char<pos:position pos:line="80" pos:column="27"/></name> <modifier pos:line="80" pos:column="28">*<pos:position pos:line="80" pos:column="29"/></modifier></type><name pos:line="80" pos:column="29">src_path<pos:position pos:line="80" pos:column="37"/></name></decl>, <modifier pos:line="80" pos:column="39">*<pos:position pos:line="80" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="80" pos:column="40">dst_path<pos:position pos:line="80" pos:column="48"/></name></decl>;<pos:position pos:line="80" pos:column="49"/></decl_stmt>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><call><name pos:line="82" pos:column="21">starts_with<pos:position pos:line="82" pos:column="32"/></name><argument_list pos:line="82" pos:column="32">(<argument><expr><name><name pos:line="82" pos:column="33">info<pos:position pos:line="82" pos:column="37"/></name><operator pos:line="82" pos:column="37">.<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="38">buf<pos:position pos:line="82" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="43">"::"<pos:position pos:line="82" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="49"/></condition><then pos:line="82" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="25">die<pos:position pos:line="83" pos:column="28"/></name><argument_list pos:line="83" pos:column="28">(<argument><expr><call><name pos:line="83" pos:column="29">N_<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><literal type="string" pos:line="83" pos:column="32">"combined diff formats('-c' and '--cc') are "<pos:position pos:line="83" pos:column="77"/></literal>
			       <literal type="string" pos:line="84" pos:column="32">"not supported in\n"<pos:position pos:line="84" pos:column="52"/></literal>
			       <literal type="string" pos:line="85" pos:column="32">"directory diff mode('-d' and '--dir-diff')."<pos:position pos:line="85" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="80"/></expr_stmt></block></then></if>

		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><call><name pos:line="87" pos:column="21">parse_index_info<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><name><name pos:line="87" pos:column="38">info<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">.<pos:position pos:line="87" pos:column="43"/></operator><name pos:line="87" pos:column="43">buf<pos:position pos:line="87" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="48">&amp;<pos:position pos:line="87" pos:column="53"/></operator><name pos:line="87" pos:column="49">lmode<pos:position pos:line="87" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="56">&amp;<pos:position pos:line="87" pos:column="61"/></operator><name pos:line="87" pos:column="57">rmode<pos:position pos:line="87" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="64">&amp;<pos:position pos:line="87" pos:column="69"/></operator><name pos:line="87" pos:column="65">loid<pos:position pos:line="87" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="71">&amp;<pos:position pos:line="87" pos:column="76"/></operator><name pos:line="87" pos:column="72">roid<pos:position pos:line="87" pos:column="76"/></name></expr></argument>,
				     <argument><expr><operator pos:line="88" pos:column="38">&amp;<pos:position pos:line="88" pos:column="43"/></operator><name pos:line="88" pos:column="39">status<pos:position pos:line="88" pos:column="45"/></name></expr></argument>)<pos:position pos:line="88" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="47"/></condition><then pos:line="88" pos:column="47">
			<block type="pseudo"><break pos:line="89" pos:column="25">break;<pos:position pos:line="89" pos:column="31"/></break></block></then></if>
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><call><name pos:line="90" pos:column="21">strbuf_getline_nul<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><operator pos:line="90" pos:column="40">&amp;<pos:position pos:line="90" pos:column="45"/></operator><name pos:line="90" pos:column="41">lpath<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="48">fp<pos:position pos:line="90" pos:column="50"/></name></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="52"/></condition><then pos:line="90" pos:column="52">
			<block type="pseudo"><break pos:line="91" pos:column="25">break;<pos:position pos:line="91" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="92" pos:column="17">src_path<pos:position pos:line="92" pos:column="25"/></name> <operator pos:line="92" pos:column="26">=<pos:position pos:line="92" pos:column="27"/></operator> <name><name pos:line="92" pos:column="28">lpath<pos:position pos:line="92" pos:column="33"/></name><operator pos:line="92" pos:column="33">.<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="34">buf<pos:position pos:line="92" pos:column="37"/></name></name></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>

		<expr_stmt><expr><name pos:line="94" pos:column="17">i<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">++<pos:position pos:line="94" pos:column="20"/></operator></expr>;<pos:position pos:line="94" pos:column="21"/></expr_stmt>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">status<pos:position pos:line="95" pos:column="27"/></name> <operator pos:line="95" pos:column="28">!=<pos:position pos:line="95" pos:column="30"/></operator> <literal type="char" pos:line="95" pos:column="31">'C'<pos:position pos:line="95" pos:column="34"/></literal> <operator pos:line="95" pos:column="35">&amp;&amp;<pos:position pos:line="95" pos:column="45"/></operator> <name pos:line="95" pos:column="38">status<pos:position pos:line="95" pos:column="44"/></name> <operator pos:line="95" pos:column="45">!=<pos:position pos:line="95" pos:column="47"/></operator> <literal type="char" pos:line="95" pos:column="48">'R'<pos:position pos:line="95" pos:column="51"/></literal></expr>)<pos:position pos:line="95" pos:column="52"/></condition><then pos:line="95" pos:column="52"> <block pos:line="95" pos:column="53">{
			<expr_stmt><expr><name pos:line="96" pos:column="25">dst_path<pos:position pos:line="96" pos:column="33"/></name> <operator pos:line="96" pos:column="34">=<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="36">src_path<pos:position pos:line="96" pos:column="44"/></name></expr>;<pos:position pos:line="96" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="97" pos:column="18"/></block></then> <else pos:line="97" pos:column="19">else <block pos:line="97" pos:column="24">{
			<if pos:line="98" pos:column="25">if <condition pos:line="98" pos:column="28">(<expr><call><name pos:line="98" pos:column="29">strbuf_getline_nul<pos:position pos:line="98" pos:column="47"/></name><argument_list pos:line="98" pos:column="47">(<argument><expr><operator pos:line="98" pos:column="48">&amp;<pos:position pos:line="98" pos:column="53"/></operator><name pos:line="98" pos:column="49">rpath<pos:position pos:line="98" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="56">fp<pos:position pos:line="98" pos:column="58"/></name></expr></argument>)<pos:position pos:line="98" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="60"/></condition><then pos:line="98" pos:column="60">
				<block type="pseudo"><break pos:line="99" pos:column="33">break;<pos:position pos:line="99" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="100" pos:column="25">dst_path<pos:position pos:line="100" pos:column="33"/></name> <operator pos:line="100" pos:column="34">=<pos:position pos:line="100" pos:column="35"/></operator> <name><name pos:line="100" pos:column="36">rpath<pos:position pos:line="100" pos:column="41"/></name><operator pos:line="100" pos:column="41">.<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="42">buf<pos:position pos:line="100" pos:column="45"/></name></name></expr>;<pos:position pos:line="100" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="101" pos:column="18"/></block></else></if>

		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><call><name pos:line="103" pos:column="21">S_ISGITLINK<pos:position pos:line="103" pos:column="32"/></name><argument_list pos:line="103" pos:column="32">(<argument><expr><name pos:line="103" pos:column="33">lmode<pos:position pos:line="103" pos:column="38"/></name></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></call> <operator pos:line="103" pos:column="40">||<pos:position pos:line="103" pos:column="42"/></operator> <call><name pos:line="103" pos:column="43">S_ISGITLINK<pos:position pos:line="103" pos:column="54"/></name><argument_list pos:line="103" pos:column="54">(<argument><expr><name pos:line="103" pos:column="55">rmode<pos:position pos:line="103" pos:column="60"/></name></expr></argument>)<pos:position pos:line="103" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="62"/></condition><then pos:line="103" pos:column="62"> <block pos:line="103" pos:column="63">{
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">strbuf_reset<pos:position pos:line="104" pos:column="37"/></name><argument_list pos:line="104" pos:column="37">(<argument><expr><operator pos:line="104" pos:column="38">&amp;<pos:position pos:line="104" pos:column="43"/></operator><name pos:line="104" pos:column="39">buf<pos:position pos:line="104" pos:column="42"/></name></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">strbuf_addf<pos:position pos:line="105" pos:column="36"/></name><argument_list pos:line="105" pos:column="36">(<argument><expr><operator pos:line="105" pos:column="37">&amp;<pos:position pos:line="105" pos:column="42"/></operator><name pos:line="105" pos:column="38">buf<pos:position pos:line="105" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="43">"Subproject commit %s"<pos:position pos:line="105" pos:column="65"/></literal></expr></argument>,
				    <argument><expr><call><name pos:line="106" pos:column="37">oid_to_hex<pos:position pos:line="106" pos:column="47"/></name><argument_list pos:line="106" pos:column="47">(<argument><expr><operator pos:line="106" pos:column="48">&amp;<pos:position pos:line="106" pos:column="53"/></operator><name pos:line="106" pos:column="49">loid<pos:position pos:line="106" pos:column="53"/></name></expr></argument>)<pos:position pos:line="106" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="107" pos:column="25">add_left_or_right<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">(<argument><expr><operator pos:line="107" pos:column="43">&amp;<pos:position pos:line="107" pos:column="48"/></operator><name pos:line="107" pos:column="44">submodules<pos:position pos:line="107" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="56">src_path<pos:position pos:line="107" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="66">buf<pos:position pos:line="107" pos:column="69"/></name><operator pos:line="107" pos:column="69">.<pos:position pos:line="107" pos:column="70"/></operator><name pos:line="107" pos:column="70">buf<pos:position pos:line="107" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="75">0<pos:position pos:line="107" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="108" pos:column="25">strbuf_reset<pos:position pos:line="108" pos:column="37"/></name><argument_list pos:line="108" pos:column="37">(<argument><expr><operator pos:line="108" pos:column="38">&amp;<pos:position pos:line="108" pos:column="43"/></operator><name pos:line="108" pos:column="39">buf<pos:position pos:line="108" pos:column="42"/></name></expr></argument>)<pos:position pos:line="108" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="109" pos:column="25">strbuf_addf<pos:position pos:line="109" pos:column="36"/></name><argument_list pos:line="109" pos:column="36">(<argument><expr><operator pos:line="109" pos:column="37">&amp;<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="38">buf<pos:position pos:line="109" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="43">"Subproject commit %s"<pos:position pos:line="109" pos:column="65"/></literal></expr></argument>,
				    <argument><expr><call><name pos:line="110" pos:column="37">oid_to_hex<pos:position pos:line="110" pos:column="47"/></name><argument_list pos:line="110" pos:column="47">(<argument><expr><operator pos:line="110" pos:column="48">&amp;<pos:position pos:line="110" pos:column="53"/></operator><name pos:line="110" pos:column="49">roid<pos:position pos:line="110" pos:column="53"/></name></expr></argument>)<pos:position pos:line="110" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="56"/></expr_stmt>
			<if pos:line="111" pos:column="25">if <condition pos:line="111" pos:column="28">(<expr><operator pos:line="111" pos:column="29">!<pos:position pos:line="111" pos:column="30"/></operator><call><name pos:line="111" pos:column="30">oidcmp<pos:position pos:line="111" pos:column="36"/></name><argument_list pos:line="111" pos:column="36">(<argument><expr><operator pos:line="111" pos:column="37">&amp;<pos:position pos:line="111" pos:column="42"/></operator><name pos:line="111" pos:column="38">loid<pos:position pos:line="111" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="44">&amp;<pos:position pos:line="111" pos:column="49"/></operator><name pos:line="111" pos:column="45">roid<pos:position pos:line="111" pos:column="49"/></name></expr></argument>)<pos:position pos:line="111" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="51"/></condition><then pos:line="111" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="33">strbuf_addstr<pos:position pos:line="112" pos:column="46"/></name><argument_list pos:line="112" pos:column="46">(<argument><expr><operator pos:line="112" pos:column="47">&amp;<pos:position pos:line="112" pos:column="52"/></operator><name pos:line="112" pos:column="48">buf<pos:position pos:line="112" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="53">"-dirty"<pos:position pos:line="112" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="63"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="113" pos:column="25">add_left_or_right<pos:position pos:line="113" pos:column="42"/></name><argument_list pos:line="113" pos:column="42">(<argument><expr><operator pos:line="113" pos:column="43">&amp;<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="44">submodules<pos:position pos:line="113" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="56">dst_path<pos:position pos:line="113" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="66">buf<pos:position pos:line="113" pos:column="69"/></name><operator pos:line="113" pos:column="69">.<pos:position pos:line="113" pos:column="70"/></operator><name pos:line="113" pos:column="70">buf<pos:position pos:line="113" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="75">1<pos:position pos:line="113" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="78"/></expr_stmt>
			<continue pos:line="114" pos:column="25">continue;<pos:position pos:line="114" pos:column="34"/></continue>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if>

		<if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><call><name pos:line="117" pos:column="21">S_ISLNK<pos:position pos:line="117" pos:column="28"/></name><argument_list pos:line="117" pos:column="28">(<argument><expr><name pos:line="117" pos:column="29">lmode<pos:position pos:line="117" pos:column="34"/></name></expr></argument>)<pos:position pos:line="117" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="36"/></condition><then pos:line="117" pos:column="36"> <block pos:line="117" pos:column="37">{
			<decl_stmt><decl><type><name pos:line="118" pos:column="25">char<pos:position pos:line="118" pos:column="29"/></name> <modifier pos:line="118" pos:column="30">*<pos:position pos:line="118" pos:column="31"/></modifier></type><name pos:line="118" pos:column="31">content<pos:position pos:line="118" pos:column="38"/></name> <init pos:line="118" pos:column="39">= <expr><call><name pos:line="118" pos:column="41">get_symlink<pos:position pos:line="118" pos:column="52"/></name><argument_list pos:line="118" pos:column="52">(<argument><expr><operator pos:line="118" pos:column="53">&amp;<pos:position pos:line="118" pos:column="58"/></operator><name pos:line="118" pos:column="54">loid<pos:position pos:line="118" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="60">src_path<pos:position pos:line="118" pos:column="68"/></name></expr></argument>)<pos:position pos:line="118" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="118" pos:column="70"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="119" pos:column="25">add_left_or_right<pos:position pos:line="119" pos:column="42"/></name><argument_list pos:line="119" pos:column="42">(<argument><expr><operator pos:line="119" pos:column="43">&amp;<pos:position pos:line="119" pos:column="48"/></operator><name pos:line="119" pos:column="44">symlinks2<pos:position pos:line="119" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="55">src_path<pos:position pos:line="119" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="65">content<pos:position pos:line="119" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="74">0<pos:position pos:line="119" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">free<pos:position pos:line="120" pos:column="29"/></name><argument_list pos:line="120" pos:column="29">(<argument><expr><name pos:line="120" pos:column="30">content<pos:position pos:line="120" pos:column="37"/></name></expr></argument>)<pos:position pos:line="120" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="121" pos:column="18"/></block></then></if>

		<if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><call><name pos:line="123" pos:column="21">S_ISLNK<pos:position pos:line="123" pos:column="28"/></name><argument_list pos:line="123" pos:column="28">(<argument><expr><name pos:line="123" pos:column="29">rmode<pos:position pos:line="123" pos:column="34"/></name></expr></argument>)<pos:position pos:line="123" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="36"/></condition><then pos:line="123" pos:column="36"> <block pos:line="123" pos:column="37">{
			<decl_stmt><decl><type><name pos:line="124" pos:column="25">char<pos:position pos:line="124" pos:column="29"/></name> <modifier pos:line="124" pos:column="30">*<pos:position pos:line="124" pos:column="31"/></modifier></type><name pos:line="124" pos:column="31">content<pos:position pos:line="124" pos:column="38"/></name> <init pos:line="124" pos:column="39">= <expr><call><name pos:line="124" pos:column="41">get_symlink<pos:position pos:line="124" pos:column="52"/></name><argument_list pos:line="124" pos:column="52">(<argument><expr><operator pos:line="124" pos:column="53">&amp;<pos:position pos:line="124" pos:column="58"/></operator><name pos:line="124" pos:column="54">roid<pos:position pos:line="124" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="60">dst_path<pos:position pos:line="124" pos:column="68"/></name></expr></argument>)<pos:position pos:line="124" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="124" pos:column="70"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="125" pos:column="25">add_left_or_right<pos:position pos:line="125" pos:column="42"/></name><argument_list pos:line="125" pos:column="42">(<argument><expr><operator pos:line="125" pos:column="43">&amp;<pos:position pos:line="125" pos:column="48"/></operator><name pos:line="125" pos:column="44">symlinks2<pos:position pos:line="125" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="55">dst_path<pos:position pos:line="125" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="65">content<pos:position pos:line="125" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="74">1<pos:position pos:line="125" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="126" pos:column="25">free<pos:position pos:line="126" pos:column="29"/></name><argument_list pos:line="126" pos:column="29">(<argument><expr><name pos:line="126" pos:column="30">content<pos:position pos:line="126" pos:column="37"/></name></expr></argument>)<pos:position pos:line="126" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="127" pos:column="18"/></block></then></if>

		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name pos:line="129" pos:column="21">lmode<pos:position pos:line="129" pos:column="26"/></name> <operator pos:line="129" pos:column="27">&amp;&amp;<pos:position pos:line="129" pos:column="37"/></operator> <name pos:line="129" pos:column="30">status<pos:position pos:line="129" pos:column="36"/></name> <operator pos:line="129" pos:column="37">!=<pos:position pos:line="129" pos:column="39"/></operator> <literal type="char" pos:line="129" pos:column="40">'C'<pos:position pos:line="129" pos:column="43"/></literal></expr>)<pos:position pos:line="129" pos:column="44"/></condition><then pos:line="129" pos:column="44"> <block pos:line="129" pos:column="45">{
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><call><name pos:line="130" pos:column="29">checkout_path<pos:position pos:line="130" pos:column="42"/></name><argument_list pos:line="130" pos:column="42">(<argument><expr><name pos:line="130" pos:column="43">lmode<pos:position pos:line="130" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="50">&amp;<pos:position pos:line="130" pos:column="55"/></operator><name pos:line="130" pos:column="51">loid<pos:position pos:line="130" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="57">src_path<pos:position pos:line="130" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="67">&amp;<pos:position pos:line="130" pos:column="72"/></operator><name pos:line="130" pos:column="68">lstate<pos:position pos:line="130" pos:column="74"/></name></expr></argument>)<pos:position pos:line="130" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="76"/></condition><then pos:line="130" pos:column="76"> <block pos:line="130" pos:column="77">{
				<expr_stmt><expr><name pos:line="131" pos:column="33">ret<pos:position pos:line="131" pos:column="36"/></name> <operator pos:line="131" pos:column="37">=<pos:position pos:line="131" pos:column="38"/></operator> <call><name pos:line="131" pos:column="39">error<pos:position pos:line="131" pos:column="44"/></name><argument_list pos:line="131" pos:column="44">(<argument><expr><literal type="string" pos:line="131" pos:column="45">"could not write '%s'"<pos:position pos:line="131" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="69">src_path<pos:position pos:line="131" pos:column="77"/></name></expr></argument>)<pos:position pos:line="131" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="79"/></expr_stmt>
				<goto pos:line="132" pos:column="33">goto <name pos:line="132" pos:column="38">finish<pos:position pos:line="132" pos:column="44"/></name>;<pos:position pos:line="132" pos:column="45"/></goto>
			}<pos:position pos:line="133" pos:column="26"/></block></then></if>
		}<pos:position pos:line="134" pos:column="18"/></block></then></if>

		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><name pos:line="136" pos:column="21">rmode<pos:position pos:line="136" pos:column="26"/></name> <operator pos:line="136" pos:column="27">&amp;&amp;<pos:position pos:line="136" pos:column="37"/></operator> <operator pos:line="136" pos:column="30">!<pos:position pos:line="136" pos:column="31"/></operator><call><name pos:line="136" pos:column="31">S_ISLNK<pos:position pos:line="136" pos:column="38"/></name><argument_list pos:line="136" pos:column="38">(<argument><expr><name pos:line="136" pos:column="39">rmode<pos:position pos:line="136" pos:column="44"/></name></expr></argument>)<pos:position pos:line="136" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="46"/></condition><then pos:line="136" pos:column="46"> <block pos:line="136" pos:column="47">{
			<decl_stmt><decl><type><name><name pos:line="137" pos:column="25">struct<pos:position pos:line="137" pos:column="31"/></name> <name pos:line="137" pos:column="32">working_tree_entry<pos:position pos:line="137" pos:column="50"/></name></name> <modifier pos:line="137" pos:column="51">*<pos:position pos:line="137" pos:column="52"/></modifier></type><name pos:line="137" pos:column="52">entry<pos:position pos:line="137" pos:column="57"/></name></decl>;<pos:position pos:line="137" pos:column="58"/></decl_stmt>

			<comment type="block" pos:line="139" pos:column="25">/* Avoid duplicate working_tree entries */</comment>
			<expr_stmt><expr><call><name pos:line="140" pos:column="25">FLEX_ALLOC_STR<pos:position pos:line="140" pos:column="39"/></name><argument_list pos:line="140" pos:column="39">(<argument><expr><name pos:line="140" pos:column="40">entry<pos:position pos:line="140" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="47">path<pos:position pos:line="140" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="53">dst_path<pos:position pos:line="140" pos:column="61"/></name></expr></argument>)<pos:position pos:line="140" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="141" pos:column="25">hashmap_entry_init<pos:position pos:line="141" pos:column="43"/></name><argument_list pos:line="141" pos:column="43">(<argument><expr><name pos:line="141" pos:column="44">entry<pos:position pos:line="141" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="141" pos:column="51">strhash<pos:position pos:line="141" pos:column="58"/></name><argument_list pos:line="141" pos:column="58">(<argument><expr><name pos:line="141" pos:column="59">dst_path<pos:position pos:line="141" pos:column="67"/></name></expr></argument>)<pos:position pos:line="141" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="141" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="70"/></expr_stmt>
			<if pos:line="142" pos:column="25">if <condition pos:line="142" pos:column="28">(<expr><call><name pos:line="142" pos:column="29">hashmap_get<pos:position pos:line="142" pos:column="40"/></name><argument_list pos:line="142" pos:column="40">(<argument><expr><operator pos:line="142" pos:column="41">&amp;<pos:position pos:line="142" pos:column="46"/></operator><name pos:line="142" pos:column="42">working_tree_dups<pos:position pos:line="142" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="61">entry<pos:position pos:line="142" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="68">NULL<pos:position pos:line="142" pos:column="72"/></name></expr></argument>)<pos:position pos:line="142" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="74"/></condition><then pos:line="142" pos:column="74"> <block pos:line="142" pos:column="75">{
				<expr_stmt><expr><call><name pos:line="143" pos:column="33">free<pos:position pos:line="143" pos:column="37"/></name><argument_list pos:line="143" pos:column="37">(<argument><expr><name pos:line="143" pos:column="38">entry<pos:position pos:line="143" pos:column="43"/></name></expr></argument>)<pos:position pos:line="143" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="45"/></expr_stmt>
				<continue pos:line="144" pos:column="33">continue;<pos:position pos:line="144" pos:column="42"/></continue>
			}<pos:position pos:line="145" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="146" pos:column="25">hashmap_add<pos:position pos:line="146" pos:column="36"/></name><argument_list pos:line="146" pos:column="36">(<argument><expr><operator pos:line="146" pos:column="37">&amp;<pos:position pos:line="146" pos:column="42"/></operator><name pos:line="146" pos:column="38">working_tree_dups<pos:position pos:line="146" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="57">entry<pos:position pos:line="146" pos:column="62"/></name></expr></argument>)<pos:position pos:line="146" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="64"/></expr_stmt>

			<if pos:line="148" pos:column="25">if <condition pos:line="148" pos:column="28">(<expr><operator pos:line="148" pos:column="29">!<pos:position pos:line="148" pos:column="30"/></operator><call><name pos:line="148" pos:column="30">use_wt_file<pos:position pos:line="148" pos:column="41"/></name><argument_list pos:line="148" pos:column="41">(<argument><expr><name pos:line="148" pos:column="42">workdir<pos:position pos:line="148" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="51">dst_path<pos:position pos:line="148" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="61">&amp;<pos:position pos:line="148" pos:column="66"/></operator><name pos:line="148" pos:column="62">roid<pos:position pos:line="148" pos:column="66"/></name></expr></argument>)<pos:position pos:line="148" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="148" pos:column="68"/></condition><then pos:line="148" pos:column="68"> <block pos:line="148" pos:column="69">{
				<if pos:line="149" pos:column="33">if <condition pos:line="149" pos:column="36">(<expr><call><name pos:line="149" pos:column="37">checkout_path<pos:position pos:line="149" pos:column="50"/></name><argument_list pos:line="149" pos:column="50">(<argument><expr><name pos:line="149" pos:column="51">rmode<pos:position pos:line="149" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="149" pos:column="58">&amp;<pos:position pos:line="149" pos:column="63"/></operator><name pos:line="149" pos:column="59">roid<pos:position pos:line="149" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="65">dst_path<pos:position pos:line="149" pos:column="73"/></name></expr></argument>,
						  <argument><expr><operator pos:line="150" pos:column="51">&amp;<pos:position pos:line="150" pos:column="56"/></operator><name pos:line="150" pos:column="52">rstate<pos:position pos:line="150" pos:column="58"/></name></expr></argument>)<pos:position pos:line="150" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="60"/></condition><then pos:line="150" pos:column="60"> <block pos:line="150" pos:column="61">{
					<expr_stmt><expr><name pos:line="151" pos:column="41">ret<pos:position pos:line="151" pos:column="44"/></name> <operator pos:line="151" pos:column="45">=<pos:position pos:line="151" pos:column="46"/></operator> <call><name pos:line="151" pos:column="47">error<pos:position pos:line="151" pos:column="52"/></name><argument_list pos:line="151" pos:column="52">(<argument><expr><literal type="string" pos:line="151" pos:column="53">"could not write '%s'"<pos:position pos:line="151" pos:column="75"/></literal></expr></argument>,
						    <argument><expr><name pos:line="152" pos:column="53">dst_path<pos:position pos:line="152" pos:column="61"/></name></expr></argument>)<pos:position pos:line="152" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="63"/></expr_stmt>
					<goto pos:line="153" pos:column="41">goto <name pos:line="153" pos:column="46">finish<pos:position pos:line="153" pos:column="52"/></name>;<pos:position pos:line="153" pos:column="53"/></goto>
				}<pos:position pos:line="154" pos:column="34"/></block></then></if>
			}<pos:position pos:line="155" pos:column="26"/></block></then> <elseif pos:line="155" pos:column="27">else <if pos:line="155" pos:column="32">if <condition pos:line="155" pos:column="35">(<expr><operator pos:line="155" pos:column="36">!<pos:position pos:line="155" pos:column="37"/></operator><call><name pos:line="155" pos:column="37">is_null_oid<pos:position pos:line="155" pos:column="48"/></name><argument_list pos:line="155" pos:column="48">(<argument><expr><operator pos:line="155" pos:column="49">&amp;<pos:position pos:line="155" pos:column="54"/></operator><name pos:line="155" pos:column="50">roid<pos:position pos:line="155" pos:column="54"/></name></expr></argument>)<pos:position pos:line="155" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="155" pos:column="56"/></condition><then pos:line="155" pos:column="56"> <block pos:line="155" pos:column="57">{
				<comment type="block" pos:line="156" pos:column="33">/*
				 * Changes in the working tree need special
				 * treatment since they are not part of the
				 * index.
				 */</comment>
				<decl_stmt><decl><type><name><name pos:line="161" pos:column="33">struct<pos:position pos:line="161" pos:column="39"/></name> <name pos:line="161" pos:column="40">cache_entry<pos:position pos:line="161" pos:column="51"/></name></name> <modifier pos:line="161" pos:column="52">*<pos:position pos:line="161" pos:column="53"/></modifier></type><name pos:line="161" pos:column="53">ce2<pos:position pos:line="161" pos:column="56"/></name> <init pos:line="161" pos:column="57">=
					<expr><call><name pos:line="162" pos:column="41">make_cache_entry<pos:position pos:line="162" pos:column="57"/></name><argument_list pos:line="162" pos:column="57">(<argument><expr><name pos:line="162" pos:column="58">rmode<pos:position pos:line="162" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="65">roid<pos:position pos:line="162" pos:column="69"/></name><operator pos:line="162" pos:column="69">.<pos:position pos:line="162" pos:column="70"/></operator><name pos:line="162" pos:column="70">hash<pos:position pos:line="162" pos:column="74"/></name></name></expr></argument>,
							 <argument><expr><name pos:line="163" pos:column="58">dst_path<pos:position pos:line="163" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="68">0<pos:position pos:line="163" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="71">0<pos:position pos:line="163" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="163" pos:column="74"/></decl_stmt>

				<expr_stmt><expr><call><name pos:line="165" pos:column="33">add_index_entry<pos:position pos:line="165" pos:column="48"/></name><argument_list pos:line="165" pos:column="48">(<argument><expr><operator pos:line="165" pos:column="49">&amp;<pos:position pos:line="165" pos:column="54"/></operator><name pos:line="165" pos:column="50">wtindex<pos:position pos:line="165" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="59">ce2<pos:position pos:line="165" pos:column="62"/></name></expr></argument>,
						<argument><expr><name pos:line="166" pos:column="49">ADD_CACHE_JUST_APPEND<pos:position pos:line="166" pos:column="70"/></name></expr></argument>)<pos:position pos:line="166" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="72"/></expr_stmt>

				<expr_stmt><expr><call><name pos:line="168" pos:column="33">add_path<pos:position pos:line="168" pos:column="41"/></name><argument_list pos:line="168" pos:column="41">(<argument><expr><operator pos:line="168" pos:column="42">&amp;<pos:position pos:line="168" pos:column="47"/></operator><name pos:line="168" pos:column="43">rdir<pos:position pos:line="168" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="49">rdir_len<pos:position pos:line="168" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="59">dst_path<pos:position pos:line="168" pos:column="67"/></name></expr></argument>)<pos:position pos:line="168" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="69"/></expr_stmt>
				<if pos:line="169" pos:column="33">if <condition pos:line="169" pos:column="36">(<expr><call><name pos:line="169" pos:column="37">ensure_leading_directories<pos:position pos:line="169" pos:column="63"/></name><argument_list pos:line="169" pos:column="63">(<argument><expr><name><name pos:line="169" pos:column="64">rdir<pos:position pos:line="169" pos:column="68"/></name><operator pos:line="169" pos:column="68">.<pos:position pos:line="169" pos:column="69"/></operator><name pos:line="169" pos:column="69">buf<pos:position pos:line="169" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="169" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="74"/></condition><then pos:line="169" pos:column="74"> <block pos:line="169" pos:column="75">{
					<expr_stmt><expr><name pos:line="170" pos:column="41">ret<pos:position pos:line="170" pos:column="44"/></name> <operator pos:line="170" pos:column="45">=<pos:position pos:line="170" pos:column="46"/></operator> <call><name pos:line="170" pos:column="47">error<pos:position pos:line="170" pos:column="52"/></name><argument_list pos:line="170" pos:column="52">(<argument><expr><literal type="string" pos:line="170" pos:column="53">"could not create "<pos:position pos:line="170" pos:column="72"/></literal>
						    <literal type="string" pos:line="171" pos:column="53">"directory for '%s'"<pos:position pos:line="171" pos:column="73"/></literal></expr></argument>,
						    <argument><expr><name pos:line="172" pos:column="53">dst_path<pos:position pos:line="172" pos:column="61"/></name></expr></argument>)<pos:position pos:line="172" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="63"/></expr_stmt>
					<goto pos:line="173" pos:column="41">goto <name pos:line="173" pos:column="46">finish<pos:position pos:line="173" pos:column="52"/></name>;<pos:position pos:line="173" pos:column="53"/></goto>
				}<pos:position pos:line="174" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="175" pos:column="33">add_path<pos:position pos:line="175" pos:column="41"/></name><argument_list pos:line="175" pos:column="41">(<argument><expr><operator pos:line="175" pos:column="42">&amp;<pos:position pos:line="175" pos:column="47"/></operator><name pos:line="175" pos:column="43">wtdir<pos:position pos:line="175" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="50">wtdir_len<pos:position pos:line="175" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="61">dst_path<pos:position pos:line="175" pos:column="69"/></name></expr></argument>)<pos:position pos:line="175" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="71"/></expr_stmt>
				<if pos:line="176" pos:column="33">if <condition pos:line="176" pos:column="36">(<expr><name pos:line="176" pos:column="37">symlinks<pos:position pos:line="176" pos:column="45"/></name></expr>)<pos:position pos:line="176" pos:column="46"/></condition><then pos:line="176" pos:column="46"> <block pos:line="176" pos:column="47">{
					<if pos:line="177" pos:column="41">if <condition pos:line="177" pos:column="44">(<expr><call><name pos:line="177" pos:column="45">symlink<pos:position pos:line="177" pos:column="52"/></name><argument_list pos:line="177" pos:column="52">(<argument><expr><name><name pos:line="177" pos:column="53">wtdir<pos:position pos:line="177" pos:column="58"/></name><operator pos:line="177" pos:column="58">.<pos:position pos:line="177" pos:column="59"/></operator><name pos:line="177" pos:column="59">buf<pos:position pos:line="177" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="64">rdir<pos:position pos:line="177" pos:column="68"/></name><operator pos:line="177" pos:column="68">.<pos:position pos:line="177" pos:column="69"/></operator><name pos:line="177" pos:column="69">buf<pos:position pos:line="177" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="74"/></condition><then pos:line="177" pos:column="74"> <block pos:line="177" pos:column="75">{
						<expr_stmt><expr><name pos:line="178" pos:column="49">ret<pos:position pos:line="178" pos:column="52"/></name> <operator pos:line="178" pos:column="53">=<pos:position pos:line="178" pos:column="54"/></operator> <call><name pos:line="178" pos:column="55">error_errno<pos:position pos:line="178" pos:column="66"/></name><argument_list pos:line="178" pos:column="66">(<argument><expr><literal type="string" pos:line="178" pos:column="67">"could not symlink '%s' to '%s'"<pos:position pos:line="178" pos:column="99"/></literal></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="101">wtdir<pos:position pos:line="178" pos:column="106"/></name><operator pos:line="178" pos:column="106">.<pos:position pos:line="178" pos:column="107"/></operator><name pos:line="178" pos:column="107">buf<pos:position pos:line="178" pos:column="110"/></name></name></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="112">rdir<pos:position pos:line="178" pos:column="116"/></name><operator pos:line="178" pos:column="116">.<pos:position pos:line="178" pos:column="117"/></operator><name pos:line="178" pos:column="117">buf<pos:position pos:line="178" pos:column="120"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="122"/></expr_stmt>
						<goto pos:line="179" pos:column="49">goto <name pos:line="179" pos:column="54">finish<pos:position pos:line="179" pos:column="60"/></name>;<pos:position pos:line="179" pos:column="61"/></goto>
					}<pos:position pos:line="180" pos:column="42"/></block></then></if>
				}<pos:position pos:line="181" pos:column="34"/></block></then> <else pos:line="181" pos:column="35">else <block pos:line="181" pos:column="40">{
					<decl_stmt><decl><type><name><name pos:line="182" pos:column="41">struct<pos:position pos:line="182" pos:column="47"/></name> <name pos:line="182" pos:column="48">stat<pos:position pos:line="182" pos:column="52"/></name></name></type> <name pos:line="182" pos:column="53">st<pos:position pos:line="182" pos:column="55"/></name></decl>;<pos:position pos:line="182" pos:column="56"/></decl_stmt>
					<if pos:line="183" pos:column="41">if <condition pos:line="183" pos:column="44">(<expr><call><name pos:line="183" pos:column="45">stat<pos:position pos:line="183" pos:column="49"/></name><argument_list pos:line="183" pos:column="49">(<argument><expr><name><name pos:line="183" pos:column="50">wtdir<pos:position pos:line="183" pos:column="55"/></name><operator pos:line="183" pos:column="55">.<pos:position pos:line="183" pos:column="56"/></operator><name pos:line="183" pos:column="56">buf<pos:position pos:line="183" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="61">&amp;<pos:position pos:line="183" pos:column="66"/></operator><name pos:line="183" pos:column="62">st<pos:position pos:line="183" pos:column="64"/></name></expr></argument>)<pos:position pos:line="183" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="183" pos:column="66"/></condition><then pos:line="183" pos:column="66">
						<block type="pseudo"><expr_stmt><expr><name><name pos:line="184" pos:column="49">st<pos:position pos:line="184" pos:column="51"/></name><operator pos:line="184" pos:column="51">.<pos:position pos:line="184" pos:column="52"/></operator><name pos:line="184" pos:column="52">st_mode<pos:position pos:line="184" pos:column="59"/></name></name> <operator pos:line="184" pos:column="60">=<pos:position pos:line="184" pos:column="61"/></operator> <literal type="number" pos:line="184" pos:column="62">0644<pos:position pos:line="184" pos:column="66"/></literal></expr>;<pos:position pos:line="184" pos:column="67"/></expr_stmt></block></then></if>
					<if pos:line="185" pos:column="41">if <condition pos:line="185" pos:column="44">(<expr><call><name pos:line="185" pos:column="45">copy_file<pos:position pos:line="185" pos:column="54"/></name><argument_list pos:line="185" pos:column="54">(<argument><expr><name><name pos:line="185" pos:column="55">rdir<pos:position pos:line="185" pos:column="59"/></name><operator pos:line="185" pos:column="59">.<pos:position pos:line="185" pos:column="60"/></operator><name pos:line="185" pos:column="60">buf<pos:position pos:line="185" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="65">wtdir<pos:position pos:line="185" pos:column="70"/></name><operator pos:line="185" pos:column="70">.<pos:position pos:line="185" pos:column="71"/></operator><name pos:line="185" pos:column="71">buf<pos:position pos:line="185" pos:column="74"/></name></name></expr></argument>,
						      <argument><expr><name><name pos:line="186" pos:column="55">st<pos:position pos:line="186" pos:column="57"/></name><operator pos:line="186" pos:column="57">.<pos:position pos:line="186" pos:column="58"/></operator><name pos:line="186" pos:column="58">st_mode<pos:position pos:line="186" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="186" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="186" pos:column="67"/></condition><then pos:line="186" pos:column="67"> <block pos:line="186" pos:column="68">{
						<expr_stmt><expr><name pos:line="187" pos:column="49">ret<pos:position pos:line="187" pos:column="52"/></name> <operator pos:line="187" pos:column="53">=<pos:position pos:line="187" pos:column="54"/></operator> <call><name pos:line="187" pos:column="55">error<pos:position pos:line="187" pos:column="60"/></name><argument_list pos:line="187" pos:column="60">(<argument><expr><literal type="string" pos:line="187" pos:column="61">"could not copy '%s' to '%s'"<pos:position pos:line="187" pos:column="90"/></literal></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="92">wtdir<pos:position pos:line="187" pos:column="97"/></name><operator pos:line="187" pos:column="97">.<pos:position pos:line="187" pos:column="98"/></operator><name pos:line="187" pos:column="98">buf<pos:position pos:line="187" pos:column="101"/></name></name></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="103">rdir<pos:position pos:line="187" pos:column="107"/></name><operator pos:line="187" pos:column="107">.<pos:position pos:line="187" pos:column="108"/></operator><name pos:line="187" pos:column="108">buf<pos:position pos:line="187" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="113"/></expr_stmt>
						<goto pos:line="188" pos:column="49">goto <name pos:line="188" pos:column="54">finish<pos:position pos:line="188" pos:column="60"/></name>;<pos:position pos:line="188" pos:column="61"/></goto>
					}<pos:position pos:line="189" pos:column="42"/></block></then></if>
				}<pos:position pos:line="190" pos:column="34"/></block></else></if>
			}<pos:position pos:line="191" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="192" pos:column="18"/></block></then></if>
	}<pos:position pos:line="193" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="195" pos:column="9">fclose<pos:position pos:line="195" pos:column="15"/></name><argument_list pos:line="195" pos:column="15">(<argument><expr><name pos:line="195" pos:column="16">fp<pos:position pos:line="195" pos:column="18"/></name></expr></argument>)<pos:position pos:line="195" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="196" pos:column="9">fp<pos:position pos:line="196" pos:column="11"/></name> <operator pos:line="196" pos:column="12">=<pos:position pos:line="196" pos:column="13"/></operator> <name pos:line="196" pos:column="14">NULL<pos:position pos:line="196" pos:column="18"/></name></expr>;<pos:position pos:line="196" pos:column="19"/></expr_stmt>
	<if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><call><name pos:line="197" pos:column="13">finish_command<pos:position pos:line="197" pos:column="27"/></name><argument_list pos:line="197" pos:column="27">(<argument><expr><operator pos:line="197" pos:column="28">&amp;<pos:position pos:line="197" pos:column="33"/></operator><name pos:line="197" pos:column="29">child<pos:position pos:line="197" pos:column="34"/></name></expr></argument>)<pos:position pos:line="197" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="36"/></condition><then pos:line="197" pos:column="36"> <block pos:line="197" pos:column="37">{
		<expr_stmt><expr><name pos:line="198" pos:column="17">ret<pos:position pos:line="198" pos:column="20"/></name> <operator pos:line="198" pos:column="21">=<pos:position pos:line="198" pos:column="22"/></operator> <call><name pos:line="198" pos:column="23">error<pos:position pos:line="198" pos:column="28"/></name><argument_list pos:line="198" pos:column="28">(<argument><expr><literal type="string" pos:line="198" pos:column="29">"error occurred running diff --raw"<pos:position pos:line="198" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="66"/></expr_stmt>
		<goto pos:line="199" pos:column="17">goto <name pos:line="199" pos:column="22">finish<pos:position pos:line="199" pos:column="28"/></name>;<pos:position pos:line="199" pos:column="29"/></goto>
	}<pos:position pos:line="200" pos:column="10"/></block></then></if>

	<if pos:line="202" pos:column="9">if <condition pos:line="202" pos:column="12">(<expr><operator pos:line="202" pos:column="13">!<pos:position pos:line="202" pos:column="14"/></operator><name pos:line="202" pos:column="14">i<pos:position pos:line="202" pos:column="15"/></name></expr>)<pos:position pos:line="202" pos:column="16"/></condition><then pos:line="202" pos:column="16">
		<block type="pseudo"><goto pos:line="203" pos:column="17">goto <name pos:line="203" pos:column="22">finish<pos:position pos:line="203" pos:column="28"/></name>;<pos:position pos:line="203" pos:column="29"/></goto></block></then></if>

	<comment type="block" pos:line="205" pos:column="9">/*
	 * Changes to submodules require special treatment.This loop writes a
	 * temporary file to both the left and right directories to show the
	 * change in the recorded SHA1 for the submodule.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="210" pos:column="9">hashmap_iter_init<pos:position pos:line="210" pos:column="26"/></name><argument_list pos:line="210" pos:column="26">(<argument><expr><operator pos:line="210" pos:column="27">&amp;<pos:position pos:line="210" pos:column="32"/></operator><name pos:line="210" pos:column="28">submodules<pos:position pos:line="210" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="40">&amp;<pos:position pos:line="210" pos:column="45"/></operator><name pos:line="210" pos:column="41">iter<pos:position pos:line="210" pos:column="45"/></name></expr></argument>)<pos:position pos:line="210" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="47"/></expr_stmt>
	<while pos:line="211" pos:column="9">while <condition pos:line="211" pos:column="15">(<expr><operator pos:line="211" pos:column="16">(<pos:position pos:line="211" pos:column="17"/></operator><name pos:line="211" pos:column="17">entry<pos:position pos:line="211" pos:column="22"/></name> <operator pos:line="211" pos:column="23">=<pos:position pos:line="211" pos:column="24"/></operator> <call><name pos:line="211" pos:column="25">hashmap_iter_next<pos:position pos:line="211" pos:column="42"/></name><argument_list pos:line="211" pos:column="42">(<argument><expr><operator pos:line="211" pos:column="43">&amp;<pos:position pos:line="211" pos:column="48"/></operator><name pos:line="211" pos:column="44">iter<pos:position pos:line="211" pos:column="48"/></name></expr></argument>)<pos:position pos:line="211" pos:column="49"/></argument_list></call><operator pos:line="211" pos:column="49">)<pos:position pos:line="211" pos:column="50"/></operator></expr>)<pos:position pos:line="211" pos:column="51"/></condition> <block pos:line="211" pos:column="52">{
		<if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><operator pos:line="212" pos:column="21">*<pos:position pos:line="212" pos:column="22"/></operator><name><name pos:line="212" pos:column="22">entry<pos:position pos:line="212" pos:column="27"/></name><operator pos:line="212" pos:column="27">-&gt;<pos:position pos:line="212" pos:column="32"/></operator><name pos:line="212" pos:column="29">left<pos:position pos:line="212" pos:column="33"/></name></name></expr>)<pos:position pos:line="212" pos:column="34"/></condition><then pos:line="212" pos:column="34"> <block pos:line="212" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="213" pos:column="25">add_path<pos:position pos:line="213" pos:column="33"/></name><argument_list pos:line="213" pos:column="33">(<argument><expr><operator pos:line="213" pos:column="34">&amp;<pos:position pos:line="213" pos:column="39"/></operator><name pos:line="213" pos:column="35">ldir<pos:position pos:line="213" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="41">ldir_len<pos:position pos:line="213" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="51">entry<pos:position pos:line="213" pos:column="56"/></name><operator pos:line="213" pos:column="56">-&gt;<pos:position pos:line="213" pos:column="61"/></operator><name pos:line="213" pos:column="58">path<pos:position pos:line="213" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="214" pos:column="25">ensure_leading_directories<pos:position pos:line="214" pos:column="51"/></name><argument_list pos:line="214" pos:column="51">(<argument><expr><name><name pos:line="214" pos:column="52">ldir<pos:position pos:line="214" pos:column="56"/></name><operator pos:line="214" pos:column="56">.<pos:position pos:line="214" pos:column="57"/></operator><name pos:line="214" pos:column="57">buf<pos:position pos:line="214" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="215" pos:column="25">write_file<pos:position pos:line="215" pos:column="35"/></name><argument_list pos:line="215" pos:column="35">(<argument><expr><name><name pos:line="215" pos:column="36">ldir<pos:position pos:line="215" pos:column="40"/></name><operator pos:line="215" pos:column="40">.<pos:position pos:line="215" pos:column="41"/></operator><name pos:line="215" pos:column="41">buf<pos:position pos:line="215" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="46">"%s"<pos:position pos:line="215" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="215" pos:column="52">entry<pos:position pos:line="215" pos:column="57"/></name><operator pos:line="215" pos:column="57">-&gt;<pos:position pos:line="215" pos:column="62"/></operator><name pos:line="215" pos:column="59">left<pos:position pos:line="215" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="216" pos:column="18"/></block></then></if>
		<if pos:line="217" pos:column="17">if <condition pos:line="217" pos:column="20">(<expr><operator pos:line="217" pos:column="21">*<pos:position pos:line="217" pos:column="22"/></operator><name><name pos:line="217" pos:column="22">entry<pos:position pos:line="217" pos:column="27"/></name><operator pos:line="217" pos:column="27">-&gt;<pos:position pos:line="217" pos:column="32"/></operator><name pos:line="217" pos:column="29">right<pos:position pos:line="217" pos:column="34"/></name></name></expr>)<pos:position pos:line="217" pos:column="35"/></condition><then pos:line="217" pos:column="35"> <block pos:line="217" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="218" pos:column="25">add_path<pos:position pos:line="218" pos:column="33"/></name><argument_list pos:line="218" pos:column="33">(<argument><expr><operator pos:line="218" pos:column="34">&amp;<pos:position pos:line="218" pos:column="39"/></operator><name pos:line="218" pos:column="35">rdir<pos:position pos:line="218" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="41">rdir_len<pos:position pos:line="218" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="51">entry<pos:position pos:line="218" pos:column="56"/></name><operator pos:line="218" pos:column="56">-&gt;<pos:position pos:line="218" pos:column="61"/></operator><name pos:line="218" pos:column="58">path<pos:position pos:line="218" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="219" pos:column="25">ensure_leading_directories<pos:position pos:line="219" pos:column="51"/></name><argument_list pos:line="219" pos:column="51">(<argument><expr><name><name pos:line="219" pos:column="52">rdir<pos:position pos:line="219" pos:column="56"/></name><operator pos:line="219" pos:column="56">.<pos:position pos:line="219" pos:column="57"/></operator><name pos:line="219" pos:column="57">buf<pos:position pos:line="219" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="220" pos:column="25">write_file<pos:position pos:line="220" pos:column="35"/></name><argument_list pos:line="220" pos:column="35">(<argument><expr><name><name pos:line="220" pos:column="36">rdir<pos:position pos:line="220" pos:column="40"/></name><operator pos:line="220" pos:column="40">.<pos:position pos:line="220" pos:column="41"/></operator><name pos:line="220" pos:column="41">buf<pos:position pos:line="220" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="46">"%s"<pos:position pos:line="220" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="52">entry<pos:position pos:line="220" pos:column="57"/></name><operator pos:line="220" pos:column="57">-&gt;<pos:position pos:line="220" pos:column="62"/></operator><name pos:line="220" pos:column="59">right<pos:position pos:line="220" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="221" pos:column="18"/></block></then></if>
	}<pos:position pos:line="222" pos:column="10"/></block></while>

	<comment type="block" pos:line="224" pos:column="9">/*
	 * Symbolic links require special treatment.The standard "git diff"
	 * shows only the link itself, not the contents of the link target.
	 * This loop replicates that behavior.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="229" pos:column="9">hashmap_iter_init<pos:position pos:line="229" pos:column="26"/></name><argument_list pos:line="229" pos:column="26">(<argument><expr><operator pos:line="229" pos:column="27">&amp;<pos:position pos:line="229" pos:column="32"/></operator><name pos:line="229" pos:column="28">symlinks2<pos:position pos:line="229" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="229" pos:column="39">&amp;<pos:position pos:line="229" pos:column="44"/></operator><name pos:line="229" pos:column="40">iter<pos:position pos:line="229" pos:column="44"/></name></expr></argument>)<pos:position pos:line="229" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="46"/></expr_stmt>
	<while pos:line="230" pos:column="9">while <condition pos:line="230" pos:column="15">(<expr><operator pos:line="230" pos:column="16">(<pos:position pos:line="230" pos:column="17"/></operator><name pos:line="230" pos:column="17">entry<pos:position pos:line="230" pos:column="22"/></name> <operator pos:line="230" pos:column="23">=<pos:position pos:line="230" pos:column="24"/></operator> <call><name pos:line="230" pos:column="25">hashmap_iter_next<pos:position pos:line="230" pos:column="42"/></name><argument_list pos:line="230" pos:column="42">(<argument><expr><operator pos:line="230" pos:column="43">&amp;<pos:position pos:line="230" pos:column="48"/></operator><name pos:line="230" pos:column="44">iter<pos:position pos:line="230" pos:column="48"/></name></expr></argument>)<pos:position pos:line="230" pos:column="49"/></argument_list></call><operator pos:line="230" pos:column="49">)<pos:position pos:line="230" pos:column="50"/></operator></expr>)<pos:position pos:line="230" pos:column="51"/></condition> <block pos:line="230" pos:column="52">{
		<if pos:line="231" pos:column="17">if <condition pos:line="231" pos:column="20">(<expr><operator pos:line="231" pos:column="21">*<pos:position pos:line="231" pos:column="22"/></operator><name><name pos:line="231" pos:column="22">entry<pos:position pos:line="231" pos:column="27"/></name><operator pos:line="231" pos:column="27">-&gt;<pos:position pos:line="231" pos:column="32"/></operator><name pos:line="231" pos:column="29">left<pos:position pos:line="231" pos:column="33"/></name></name></expr>)<pos:position pos:line="231" pos:column="34"/></condition><then pos:line="231" pos:column="34"> <block pos:line="231" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="232" pos:column="25">add_path<pos:position pos:line="232" pos:column="33"/></name><argument_list pos:line="232" pos:column="33">(<argument><expr><operator pos:line="232" pos:column="34">&amp;<pos:position pos:line="232" pos:column="39"/></operator><name pos:line="232" pos:column="35">ldir<pos:position pos:line="232" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="41">ldir_len<pos:position pos:line="232" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="232" pos:column="51">entry<pos:position pos:line="232" pos:column="56"/></name><operator pos:line="232" pos:column="56">-&gt;<pos:position pos:line="232" pos:column="61"/></operator><name pos:line="232" pos:column="58">path<pos:position pos:line="232" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="232" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="233" pos:column="25">ensure_leading_directories<pos:position pos:line="233" pos:column="51"/></name><argument_list pos:line="233" pos:column="51">(<argument><expr><name><name pos:line="233" pos:column="52">ldir<pos:position pos:line="233" pos:column="56"/></name><operator pos:line="233" pos:column="56">.<pos:position pos:line="233" pos:column="57"/></operator><name pos:line="233" pos:column="57">buf<pos:position pos:line="233" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="233" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="234" pos:column="25">write_file<pos:position pos:line="234" pos:column="35"/></name><argument_list pos:line="234" pos:column="35">(<argument><expr><name><name pos:line="234" pos:column="36">ldir<pos:position pos:line="234" pos:column="40"/></name><operator pos:line="234" pos:column="40">.<pos:position pos:line="234" pos:column="41"/></operator><name pos:line="234" pos:column="41">buf<pos:position pos:line="234" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="46">"%s"<pos:position pos:line="234" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="234" pos:column="52">entry<pos:position pos:line="234" pos:column="57"/></name><operator pos:line="234" pos:column="57">-&gt;<pos:position pos:line="234" pos:column="62"/></operator><name pos:line="234" pos:column="59">left<pos:position pos:line="234" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="234" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="235" pos:column="18"/></block></then></if>
		<if pos:line="236" pos:column="17">if <condition pos:line="236" pos:column="20">(<expr><operator pos:line="236" pos:column="21">*<pos:position pos:line="236" pos:column="22"/></operator><name><name pos:line="236" pos:column="22">entry<pos:position pos:line="236" pos:column="27"/></name><operator pos:line="236" pos:column="27">-&gt;<pos:position pos:line="236" pos:column="32"/></operator><name pos:line="236" pos:column="29">right<pos:position pos:line="236" pos:column="34"/></name></name></expr>)<pos:position pos:line="236" pos:column="35"/></condition><then pos:line="236" pos:column="35"> <block pos:line="236" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="237" pos:column="25">add_path<pos:position pos:line="237" pos:column="33"/></name><argument_list pos:line="237" pos:column="33">(<argument><expr><operator pos:line="237" pos:column="34">&amp;<pos:position pos:line="237" pos:column="39"/></operator><name pos:line="237" pos:column="35">rdir<pos:position pos:line="237" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="41">rdir_len<pos:position pos:line="237" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="237" pos:column="51">entry<pos:position pos:line="237" pos:column="56"/></name><operator pos:line="237" pos:column="56">-&gt;<pos:position pos:line="237" pos:column="61"/></operator><name pos:line="237" pos:column="58">path<pos:position pos:line="237" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="237" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="238" pos:column="25">ensure_leading_directories<pos:position pos:line="238" pos:column="51"/></name><argument_list pos:line="238" pos:column="51">(<argument><expr><name><name pos:line="238" pos:column="52">rdir<pos:position pos:line="238" pos:column="56"/></name><operator pos:line="238" pos:column="56">.<pos:position pos:line="238" pos:column="57"/></operator><name pos:line="238" pos:column="57">buf<pos:position pos:line="238" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="238" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="239" pos:column="25">write_file<pos:position pos:line="239" pos:column="35"/></name><argument_list pos:line="239" pos:column="35">(<argument><expr><name><name pos:line="239" pos:column="36">rdir<pos:position pos:line="239" pos:column="40"/></name><operator pos:line="239" pos:column="40">.<pos:position pos:line="239" pos:column="41"/></operator><name pos:line="239" pos:column="41">buf<pos:position pos:line="239" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="46">"%s"<pos:position pos:line="239" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="239" pos:column="52">entry<pos:position pos:line="239" pos:column="57"/></name><operator pos:line="239" pos:column="57">-&gt;<pos:position pos:line="239" pos:column="62"/></operator><name pos:line="239" pos:column="59">right<pos:position pos:line="239" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="239" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="240" pos:column="18"/></block></then></if>
	}<pos:position pos:line="241" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="243" pos:column="9">strbuf_release<pos:position pos:line="243" pos:column="23"/></name><argument_list pos:line="243" pos:column="23">(<argument><expr><operator pos:line="243" pos:column="24">&amp;<pos:position pos:line="243" pos:column="29"/></operator><name pos:line="243" pos:column="25">buf<pos:position pos:line="243" pos:column="28"/></name></expr></argument>)<pos:position pos:line="243" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="245" pos:column="9">strbuf_setlen<pos:position pos:line="245" pos:column="22"/></name><argument_list pos:line="245" pos:column="22">(<argument><expr><operator pos:line="245" pos:column="23">&amp;<pos:position pos:line="245" pos:column="28"/></operator><name pos:line="245" pos:column="24">ldir<pos:position pos:line="245" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="30">ldir_len<pos:position pos:line="245" pos:column="38"/></name></expr></argument>)<pos:position pos:line="245" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="246" pos:column="9">helper_argv<pos:position pos:line="246" pos:column="20"/></name><index pos:line="246" pos:column="20">[<expr><literal type="number" pos:line="246" pos:column="21">1<pos:position pos:line="246" pos:column="22"/></literal></expr>]<pos:position pos:line="246" pos:column="23"/></index></name> <operator pos:line="246" pos:column="24">=<pos:position pos:line="246" pos:column="25"/></operator> <name><name pos:line="246" pos:column="26">ldir<pos:position pos:line="246" pos:column="30"/></name><operator pos:line="246" pos:column="30">.<pos:position pos:line="246" pos:column="31"/></operator><name pos:line="246" pos:column="31">buf<pos:position pos:line="246" pos:column="34"/></name></name></expr>;<pos:position pos:line="246" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="247" pos:column="9">strbuf_setlen<pos:position pos:line="247" pos:column="22"/></name><argument_list pos:line="247" pos:column="22">(<argument><expr><operator pos:line="247" pos:column="23">&amp;<pos:position pos:line="247" pos:column="28"/></operator><name pos:line="247" pos:column="24">rdir<pos:position pos:line="247" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="30">rdir_len<pos:position pos:line="247" pos:column="38"/></name></expr></argument>)<pos:position pos:line="247" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="248" pos:column="9">helper_argv<pos:position pos:line="248" pos:column="20"/></name><index pos:line="248" pos:column="20">[<expr><literal type="number" pos:line="248" pos:column="21">2<pos:position pos:line="248" pos:column="22"/></literal></expr>]<pos:position pos:line="248" pos:column="23"/></index></name> <operator pos:line="248" pos:column="24">=<pos:position pos:line="248" pos:column="25"/></operator> <name><name pos:line="248" pos:column="26">rdir<pos:position pos:line="248" pos:column="30"/></name><operator pos:line="248" pos:column="30">.<pos:position pos:line="248" pos:column="31"/></operator><name pos:line="248" pos:column="31">buf<pos:position pos:line="248" pos:column="34"/></name></name></expr>;<pos:position pos:line="248" pos:column="35"/></expr_stmt>

	<if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name pos:line="250" pos:column="13">extcmd<pos:position pos:line="250" pos:column="19"/></name></expr>)<pos:position pos:line="250" pos:column="20"/></condition><then pos:line="250" pos:column="20"> <block pos:line="250" pos:column="21">{
		<expr_stmt><expr><name><name pos:line="251" pos:column="17">helper_argv<pos:position pos:line="251" pos:column="28"/></name><index pos:line="251" pos:column="28">[<expr><literal type="number" pos:line="251" pos:column="29">0<pos:position pos:line="251" pos:column="30"/></literal></expr>]<pos:position pos:line="251" pos:column="31"/></index></name> <operator pos:line="251" pos:column="32">=<pos:position pos:line="251" pos:column="33"/></operator> <name pos:line="251" pos:column="34">extcmd<pos:position pos:line="251" pos:column="40"/></name></expr>;<pos:position pos:line="251" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="252" pos:column="17">flags<pos:position pos:line="252" pos:column="22"/></name> <operator pos:line="252" pos:column="23">=<pos:position pos:line="252" pos:column="24"/></operator> <literal type="number" pos:line="252" pos:column="25">0<pos:position pos:line="252" pos:column="26"/></literal></expr>;<pos:position pos:line="252" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="253" pos:column="10"/></block></then> <else pos:line="253" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="254" pos:column="17">setenv<pos:position pos:line="254" pos:column="23"/></name><argument_list pos:line="254" pos:column="23">(<argument><expr><literal type="string" pos:line="254" pos:column="24">"GIT_DIFFTOOL_DIRDIFF"<pos:position pos:line="254" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="48">"true"<pos:position pos:line="254" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="254" pos:column="56">1<pos:position pos:line="254" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="59"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="255" pos:column="9">rc<pos:position pos:line="255" pos:column="11"/></name> <operator pos:line="255" pos:column="12">=<pos:position pos:line="255" pos:column="13"/></operator> <call><name pos:line="255" pos:column="14">run_command_v_opt<pos:position pos:line="255" pos:column="31"/></name><argument_list pos:line="255" pos:column="31">(<argument><expr><name pos:line="255" pos:column="32">helper_argv<pos:position pos:line="255" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="45">flags<pos:position pos:line="255" pos:column="50"/></name></expr></argument>)<pos:position pos:line="255" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="52"/></expr_stmt>

	<comment type="block" pos:line="257" pos:column="9">/*
	 * If the diff includes working copy files and those
	 * files were modified during the diff, then the changes
	 * should be copied back to the working tree.
	 * Do not copy back files when symlinks are used and the
	 * external tool did not replace the original link with a file.
	 *
	 * These hashes are loaded lazily since they aren't needed
	 * in the common case of --symlinks and the difftool updating
	 * files through the symlink.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="268" pos:column="9">hashmap_init<pos:position pos:line="268" pos:column="21"/></name><argument_list pos:line="268" pos:column="21">(<argument><expr><operator pos:line="268" pos:column="22">&amp;<pos:position pos:line="268" pos:column="27"/></operator><name pos:line="268" pos:column="23">wt_modified<pos:position pos:line="268" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="268" pos:column="36">(<pos:position pos:line="268" pos:column="37"/></operator><name pos:line="268" pos:column="37">hashmap_cmp_fn<pos:position pos:line="268" pos:column="51"/></name><operator pos:line="268" pos:column="51">)<pos:position pos:line="268" pos:column="52"/></operator><name pos:line="268" pos:column="52">path_entry_cmp<pos:position pos:line="268" pos:column="66"/></name></expr></argument>,
		     <argument><expr><name><name pos:line="269" pos:column="22">wtindex<pos:position pos:line="269" pos:column="29"/></name><operator pos:line="269" pos:column="29">.<pos:position pos:line="269" pos:column="30"/></operator><name pos:line="269" pos:column="30">cache_nr<pos:position pos:line="269" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="269" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="270" pos:column="9">hashmap_init<pos:position pos:line="270" pos:column="21"/></name><argument_list pos:line="270" pos:column="21">(<argument><expr><operator pos:line="270" pos:column="22">&amp;<pos:position pos:line="270" pos:column="27"/></operator><name pos:line="270" pos:column="23">tmp_modified<pos:position pos:line="270" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="270" pos:column="37">(<pos:position pos:line="270" pos:column="38"/></operator><name pos:line="270" pos:column="38">hashmap_cmp_fn<pos:position pos:line="270" pos:column="52"/></name><operator pos:line="270" pos:column="52">)<pos:position pos:line="270" pos:column="53"/></operator><name pos:line="270" pos:column="53">path_entry_cmp<pos:position pos:line="270" pos:column="67"/></name></expr></argument>,
		     <argument><expr><name><name pos:line="271" pos:column="22">wtindex<pos:position pos:line="271" pos:column="29"/></name><operator pos:line="271" pos:column="29">.<pos:position pos:line="271" pos:column="30"/></operator><name pos:line="271" pos:column="30">cache_nr<pos:position pos:line="271" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="40"/></expr_stmt>

	<for pos:line="273" pos:column="9">for <control pos:line="273" pos:column="13">(<init><expr><name pos:line="273" pos:column="14">i<pos:position pos:line="273" pos:column="15"/></name> <operator pos:line="273" pos:column="16">=<pos:position pos:line="273" pos:column="17"/></operator> <literal type="number" pos:line="273" pos:column="18">0<pos:position pos:line="273" pos:column="19"/></literal></expr>;<pos:position pos:line="273" pos:column="20"/></init> <condition><expr><name pos:line="273" pos:column="21">i<pos:position pos:line="273" pos:column="22"/></name> <operator pos:line="273" pos:column="23">&lt;<pos:position pos:line="273" pos:column="27"/></operator> <name><name pos:line="273" pos:column="25">wtindex<pos:position pos:line="273" pos:column="32"/></name><operator pos:line="273" pos:column="32">.<pos:position pos:line="273" pos:column="33"/></operator><name pos:line="273" pos:column="33">cache_nr<pos:position pos:line="273" pos:column="41"/></name></name></expr>;<pos:position pos:line="273" pos:column="42"/></condition> <incr><expr><name pos:line="273" pos:column="43">i<pos:position pos:line="273" pos:column="44"/></name><operator pos:line="273" pos:column="44">++<pos:position pos:line="273" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="273" pos:column="47"/></control> <block pos:line="273" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="274" pos:column="17">struct<pos:position pos:line="274" pos:column="23"/></name> <name pos:line="274" pos:column="24">hashmap_entry<pos:position pos:line="274" pos:column="37"/></name></name></type> <name pos:line="274" pos:column="38">dummy<pos:position pos:line="274" pos:column="43"/></name></decl>;<pos:position pos:line="274" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="275" pos:column="17">const<pos:position pos:line="275" pos:column="22"/></specifier> <name pos:line="275" pos:column="23">char<pos:position pos:line="275" pos:column="27"/></name> <modifier pos:line="275" pos:column="28">*<pos:position pos:line="275" pos:column="29"/></modifier></type><name pos:line="275" pos:column="29">name<pos:position pos:line="275" pos:column="33"/></name> <init pos:line="275" pos:column="34">= <expr><name><name pos:line="275" pos:column="36">wtindex<pos:position pos:line="275" pos:column="43"/></name><operator pos:line="275" pos:column="43">.<pos:position pos:line="275" pos:column="44"/></operator><name pos:line="275" pos:column="44">cache<pos:position pos:line="275" pos:column="49"/></name><index pos:line="275" pos:column="49">[<expr><name pos:line="275" pos:column="50">i<pos:position pos:line="275" pos:column="51"/></name></expr>]<pos:position pos:line="275" pos:column="52"/></index></name><operator pos:line="275" pos:column="52">-&gt;<pos:position pos:line="275" pos:column="57"/></operator><name pos:line="275" pos:column="54">name<pos:position pos:line="275" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="275" pos:column="59"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="276" pos:column="17">struct<pos:position pos:line="276" pos:column="23"/></name> <name pos:line="276" pos:column="24">stat<pos:position pos:line="276" pos:column="28"/></name></name></type> <name pos:line="276" pos:column="29">st<pos:position pos:line="276" pos:column="31"/></name></decl>;<pos:position pos:line="276" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="278" pos:column="17">add_path<pos:position pos:line="278" pos:column="25"/></name><argument_list pos:line="278" pos:column="25">(<argument><expr><operator pos:line="278" pos:column="26">&amp;<pos:position pos:line="278" pos:column="31"/></operator><name pos:line="278" pos:column="27">rdir<pos:position pos:line="278" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="33">rdir_len<pos:position pos:line="278" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="43">name<pos:position pos:line="278" pos:column="47"/></name></expr></argument>)<pos:position pos:line="278" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="49"/></expr_stmt>
		<if pos:line="279" pos:column="17">if <condition pos:line="279" pos:column="20">(<expr><call><name pos:line="279" pos:column="21">lstat<pos:position pos:line="279" pos:column="26"/></name><argument_list pos:line="279" pos:column="26">(<argument><expr><name><name pos:line="279" pos:column="27">rdir<pos:position pos:line="279" pos:column="31"/></name><operator pos:line="279" pos:column="31">.<pos:position pos:line="279" pos:column="32"/></operator><name pos:line="279" pos:column="32">buf<pos:position pos:line="279" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="279" pos:column="37">&amp;<pos:position pos:line="279" pos:column="42"/></operator><name pos:line="279" pos:column="38">st<pos:position pos:line="279" pos:column="40"/></name></expr></argument>)<pos:position pos:line="279" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="279" pos:column="42"/></condition><then pos:line="279" pos:column="42">
			<block type="pseudo"><continue pos:line="280" pos:column="25">continue;<pos:position pos:line="280" pos:column="34"/></continue></block></then></if>

		<if pos:line="282" pos:column="17">if <condition pos:line="282" pos:column="20">(<expr><operator pos:line="282" pos:column="21">(<pos:position pos:line="282" pos:column="22"/></operator><name pos:line="282" pos:column="22">symlinks<pos:position pos:line="282" pos:column="30"/></name> <operator pos:line="282" pos:column="31">&amp;&amp;<pos:position pos:line="282" pos:column="41"/></operator> <call><name pos:line="282" pos:column="34">S_ISLNK<pos:position pos:line="282" pos:column="41"/></name><argument_list pos:line="282" pos:column="41">(<argument><expr><name><name pos:line="282" pos:column="42">st<pos:position pos:line="282" pos:column="44"/></name><operator pos:line="282" pos:column="44">.<pos:position pos:line="282" pos:column="45"/></operator><name pos:line="282" pos:column="45">st_mode<pos:position pos:line="282" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="53"/></argument_list></call><operator pos:line="282" pos:column="53">)<pos:position pos:line="282" pos:column="54"/></operator> <operator pos:line="282" pos:column="55">||<pos:position pos:line="282" pos:column="57"/></operator> <operator pos:line="282" pos:column="58">!<pos:position pos:line="282" pos:column="59"/></operator><call><name pos:line="282" pos:column="59">S_ISREG<pos:position pos:line="282" pos:column="66"/></name><argument_list pos:line="282" pos:column="66">(<argument><expr><name><name pos:line="282" pos:column="67">st<pos:position pos:line="282" pos:column="69"/></name><operator pos:line="282" pos:column="69">.<pos:position pos:line="282" pos:column="70"/></operator><name pos:line="282" pos:column="70">st_mode<pos:position pos:line="282" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="282" pos:column="79"/></condition><then pos:line="282" pos:column="79">
			<block type="pseudo"><continue pos:line="283" pos:column="25">continue;<pos:position pos:line="283" pos:column="34"/></continue></block></then></if>

		<if pos:line="285" pos:column="17">if <condition pos:line="285" pos:column="20">(<expr><operator pos:line="285" pos:column="21">!<pos:position pos:line="285" pos:column="22"/></operator><name pos:line="285" pos:column="22">indices_loaded<pos:position pos:line="285" pos:column="36"/></name></expr>)<pos:position pos:line="285" pos:column="37"/></condition><then pos:line="285" pos:column="37"> <block pos:line="285" pos:column="38">{
			<decl_stmt><decl><specifier pos:line="286" pos:column="25">static<pos:position pos:line="286" pos:column="31"/></specifier> <type><name><name pos:line="286" pos:column="32">struct<pos:position pos:line="286" pos:column="38"/></name> <name pos:line="286" pos:column="39">lock_file<pos:position pos:line="286" pos:column="48"/></name></name></type> <name pos:line="286" pos:column="49">lock<pos:position pos:line="286" pos:column="53"/></name></decl>;<pos:position pos:line="286" pos:column="54"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="287" pos:column="25">strbuf_reset<pos:position pos:line="287" pos:column="37"/></name><argument_list pos:line="287" pos:column="37">(<argument><expr><operator pos:line="287" pos:column="38">&amp;<pos:position pos:line="287" pos:column="43"/></operator><name pos:line="287" pos:column="39">buf<pos:position pos:line="287" pos:column="42"/></name></expr></argument>)<pos:position pos:line="287" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="288" pos:column="25">strbuf_addf<pos:position pos:line="288" pos:column="36"/></name><argument_list pos:line="288" pos:column="36">(<argument><expr><operator pos:line="288" pos:column="37">&amp;<pos:position pos:line="288" pos:column="42"/></operator><name pos:line="288" pos:column="38">buf<pos:position pos:line="288" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="43">"%s/wtindex"<pos:position pos:line="288" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="288" pos:column="57">tmpdir<pos:position pos:line="288" pos:column="63"/></name></expr></argument>)<pos:position pos:line="288" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="65"/></expr_stmt>
			<if pos:line="289" pos:column="25">if <condition pos:line="289" pos:column="28">(<expr><call><name pos:line="289" pos:column="29">hold_lock_file_for_update<pos:position pos:line="289" pos:column="54"/></name><argument_list pos:line="289" pos:column="54">(<argument><expr><operator pos:line="289" pos:column="55">&amp;<pos:position pos:line="289" pos:column="60"/></operator><name pos:line="289" pos:column="56">lock<pos:position pos:line="289" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="289" pos:column="62">buf<pos:position pos:line="289" pos:column="65"/></name><operator pos:line="289" pos:column="65">.<pos:position pos:line="289" pos:column="66"/></operator><name pos:line="289" pos:column="66">buf<pos:position pos:line="289" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="289" pos:column="71">0<pos:position pos:line="289" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="73"/></argument_list></call> <operator pos:line="289" pos:column="74">&lt;<pos:position pos:line="289" pos:column="78"/></operator> <literal type="number" pos:line="289" pos:column="76">0<pos:position pos:line="289" pos:column="77"/></literal> <operator pos:line="289" pos:column="78">||<pos:position pos:line="289" pos:column="80"/></operator>
			    <call><name pos:line="290" pos:column="29">write_locked_index<pos:position pos:line="290" pos:column="47"/></name><argument_list pos:line="290" pos:column="47">(<argument><expr><operator pos:line="290" pos:column="48">&amp;<pos:position pos:line="290" pos:column="53"/></operator><name pos:line="290" pos:column="49">wtindex<pos:position pos:line="290" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="290" pos:column="58">&amp;<pos:position pos:line="290" pos:column="63"/></operator><name pos:line="290" pos:column="59">lock<pos:position pos:line="290" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="65">COMMIT_LOCK<pos:position pos:line="290" pos:column="76"/></name></expr></argument>)<pos:position pos:line="290" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="290" pos:column="78"/></condition><then pos:line="290" pos:column="78"> <block pos:line="290" pos:column="79">{
				<expr_stmt><expr><name pos:line="291" pos:column="33">ret<pos:position pos:line="291" pos:column="36"/></name> <operator pos:line="291" pos:column="37">=<pos:position pos:line="291" pos:column="38"/></operator> <call><name pos:line="291" pos:column="39">error<pos:position pos:line="291" pos:column="44"/></name><argument_list pos:line="291" pos:column="44">(<argument><expr><literal type="string" pos:line="291" pos:column="45">"could not write %s"<pos:position pos:line="291" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="291" pos:column="67">buf<pos:position pos:line="291" pos:column="70"/></name><operator pos:line="291" pos:column="70">.<pos:position pos:line="291" pos:column="71"/></operator><name pos:line="291" pos:column="71">buf<pos:position pos:line="291" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="291" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="292" pos:column="33">rollback_lock_file<pos:position pos:line="292" pos:column="51"/></name><argument_list pos:line="292" pos:column="51">(<argument><expr><operator pos:line="292" pos:column="52">&amp;<pos:position pos:line="292" pos:column="57"/></operator><name pos:line="292" pos:column="53">lock<pos:position pos:line="292" pos:column="57"/></name></expr></argument>)<pos:position pos:line="292" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="59"/></expr_stmt>
				<goto pos:line="293" pos:column="33">goto <name pos:line="293" pos:column="38">finish<pos:position pos:line="293" pos:column="44"/></name>;<pos:position pos:line="293" pos:column="45"/></goto>
			}<pos:position pos:line="294" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="295" pos:column="25">changed_files<pos:position pos:line="295" pos:column="38"/></name><argument_list pos:line="295" pos:column="38">(<argument><expr><operator pos:line="295" pos:column="39">&amp;<pos:position pos:line="295" pos:column="44"/></operator><name pos:line="295" pos:column="40">wt_modified<pos:position pos:line="295" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="295" pos:column="53">buf<pos:position pos:line="295" pos:column="56"/></name><operator pos:line="295" pos:column="56">.<pos:position pos:line="295" pos:column="57"/></operator><name pos:line="295" pos:column="57">buf<pos:position pos:line="295" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="62">workdir<pos:position pos:line="295" pos:column="69"/></name></expr></argument>)<pos:position pos:line="295" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="296" pos:column="25">strbuf_setlen<pos:position pos:line="296" pos:column="38"/></name><argument_list pos:line="296" pos:column="38">(<argument><expr><operator pos:line="296" pos:column="39">&amp;<pos:position pos:line="296" pos:column="44"/></operator><name pos:line="296" pos:column="40">rdir<pos:position pos:line="296" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="46">rdir_len<pos:position pos:line="296" pos:column="54"/></name></expr></argument>)<pos:position pos:line="296" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="297" pos:column="25">changed_files<pos:position pos:line="297" pos:column="38"/></name><argument_list pos:line="297" pos:column="38">(<argument><expr><operator pos:line="297" pos:column="39">&amp;<pos:position pos:line="297" pos:column="44"/></operator><name pos:line="297" pos:column="40">tmp_modified<pos:position pos:line="297" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="54">buf<pos:position pos:line="297" pos:column="57"/></name><operator pos:line="297" pos:column="57">.<pos:position pos:line="297" pos:column="58"/></operator><name pos:line="297" pos:column="58">buf<pos:position pos:line="297" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="63">rdir<pos:position pos:line="297" pos:column="67"/></name><operator pos:line="297" pos:column="67">.<pos:position pos:line="297" pos:column="68"/></operator><name pos:line="297" pos:column="68">buf<pos:position pos:line="297" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="297" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="298" pos:column="25">add_path<pos:position pos:line="298" pos:column="33"/></name><argument_list pos:line="298" pos:column="33">(<argument><expr><operator pos:line="298" pos:column="34">&amp;<pos:position pos:line="298" pos:column="39"/></operator><name pos:line="298" pos:column="35">rdir<pos:position pos:line="298" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="41">rdir_len<pos:position pos:line="298" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="51">name<pos:position pos:line="298" pos:column="55"/></name></expr></argument>)<pos:position pos:line="298" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="299" pos:column="25">indices_loaded<pos:position pos:line="299" pos:column="39"/></name> <operator pos:line="299" pos:column="40">=<pos:position pos:line="299" pos:column="41"/></operator> <literal type="number" pos:line="299" pos:column="42">1<pos:position pos:line="299" pos:column="43"/></literal></expr>;<pos:position pos:line="299" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="300" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="302" pos:column="17">hashmap_entry_init<pos:position pos:line="302" pos:column="35"/></name><argument_list pos:line="302" pos:column="35">(<argument><expr><operator pos:line="302" pos:column="36">&amp;<pos:position pos:line="302" pos:column="41"/></operator><name pos:line="302" pos:column="37">dummy<pos:position pos:line="302" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="302" pos:column="44">strhash<pos:position pos:line="302" pos:column="51"/></name><argument_list pos:line="302" pos:column="51">(<argument><expr><name pos:line="302" pos:column="52">name<pos:position pos:line="302" pos:column="56"/></name></expr></argument>)<pos:position pos:line="302" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="302" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="59"/></expr_stmt>
		<if pos:line="303" pos:column="17">if <condition pos:line="303" pos:column="20">(<expr><call><name pos:line="303" pos:column="21">hashmap_get<pos:position pos:line="303" pos:column="32"/></name><argument_list pos:line="303" pos:column="32">(<argument><expr><operator pos:line="303" pos:column="33">&amp;<pos:position pos:line="303" pos:column="38"/></operator><name pos:line="303" pos:column="34">tmp_modified<pos:position pos:line="303" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="303" pos:column="48">&amp;<pos:position pos:line="303" pos:column="53"/></operator><name pos:line="303" pos:column="49">dummy<pos:position pos:line="303" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="56">name<pos:position pos:line="303" pos:column="60"/></name></expr></argument>)<pos:position pos:line="303" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="303" pos:column="62"/></condition><then pos:line="303" pos:column="62"> <block pos:line="303" pos:column="63">{
			<expr_stmt><expr><call><name pos:line="304" pos:column="25">add_path<pos:position pos:line="304" pos:column="33"/></name><argument_list pos:line="304" pos:column="33">(<argument><expr><operator pos:line="304" pos:column="34">&amp;<pos:position pos:line="304" pos:column="39"/></operator><name pos:line="304" pos:column="35">wtdir<pos:position pos:line="304" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="42">wtdir_len<pos:position pos:line="304" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="53">name<pos:position pos:line="304" pos:column="57"/></name></expr></argument>)<pos:position pos:line="304" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="59"/></expr_stmt>
			<if pos:line="305" pos:column="25">if <condition pos:line="305" pos:column="28">(<expr><call><name pos:line="305" pos:column="29">hashmap_get<pos:position pos:line="305" pos:column="40"/></name><argument_list pos:line="305" pos:column="40">(<argument><expr><operator pos:line="305" pos:column="41">&amp;<pos:position pos:line="305" pos:column="46"/></operator><name pos:line="305" pos:column="42">wt_modified<pos:position pos:line="305" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="305" pos:column="55">&amp;<pos:position pos:line="305" pos:column="60"/></operator><name pos:line="305" pos:column="56">dummy<pos:position pos:line="305" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="63">name<pos:position pos:line="305" pos:column="67"/></name></expr></argument>)<pos:position pos:line="305" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="305" pos:column="69"/></condition><then pos:line="305" pos:column="69"> <block pos:line="305" pos:column="70">{
				<expr_stmt><expr><call><name pos:line="306" pos:column="33">warning<pos:position pos:line="306" pos:column="40"/></name><argument_list pos:line="306" pos:column="40">(<argument><expr><call><name pos:line="306" pos:column="41">_<pos:position pos:line="306" pos:column="42"/></name><argument_list pos:line="306" pos:column="42">(<argument><expr><literal type="string" pos:line="306" pos:column="43">"both files modified: '%s' and '%s'."<pos:position pos:line="306" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="81"/></argument_list></call></expr></argument>,
					<argument><expr><name><name pos:line="307" pos:column="41">wtdir<pos:position pos:line="307" pos:column="46"/></name><operator pos:line="307" pos:column="46">.<pos:position pos:line="307" pos:column="47"/></operator><name pos:line="307" pos:column="47">buf<pos:position pos:line="307" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="307" pos:column="52">rdir<pos:position pos:line="307" pos:column="56"/></name><operator pos:line="307" pos:column="56">.<pos:position pos:line="307" pos:column="57"/></operator><name pos:line="307" pos:column="57">buf<pos:position pos:line="307" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="307" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="308" pos:column="33">warning<pos:position pos:line="308" pos:column="40"/></name><argument_list pos:line="308" pos:column="40">(<argument><expr><call><name pos:line="308" pos:column="41">_<pos:position pos:line="308" pos:column="42"/></name><argument_list pos:line="308" pos:column="42">(<argument><expr><literal type="string" pos:line="308" pos:column="43">"working tree file has been left."<pos:position pos:line="308" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="308" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="308" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="80"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="309" pos:column="33">warning<pos:position pos:line="309" pos:column="40"/></name><argument_list pos:line="309" pos:column="40">(<argument><expr><literal type="string" pos:line="309" pos:column="41">"%s"<pos:position pos:line="309" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="309" pos:column="47">""<pos:position pos:line="309" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="309" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name pos:line="310" pos:column="33">err<pos:position pos:line="310" pos:column="36"/></name> <operator pos:line="310" pos:column="37">=<pos:position pos:line="310" pos:column="38"/></operator> <literal type="number" pos:line="310" pos:column="39">1<pos:position pos:line="310" pos:column="40"/></literal></expr>;<pos:position pos:line="310" pos:column="41"/></expr_stmt>
			}<pos:position pos:line="311" pos:column="26"/></block></then> <elseif pos:line="311" pos:column="27">else <if pos:line="311" pos:column="32">if <condition pos:line="311" pos:column="35">(<expr><call><name pos:line="311" pos:column="36">unlink<pos:position pos:line="311" pos:column="42"/></name><argument_list pos:line="311" pos:column="42">(<argument><expr><name><name pos:line="311" pos:column="43">wtdir<pos:position pos:line="311" pos:column="48"/></name><operator pos:line="311" pos:column="48">.<pos:position pos:line="311" pos:column="49"/></operator><name pos:line="311" pos:column="49">buf<pos:position pos:line="311" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="311" pos:column="53"/></argument_list></call> <operator pos:line="311" pos:column="54">||<pos:position pos:line="311" pos:column="56"/></operator>
				   <call><name pos:line="312" pos:column="36">copy_file<pos:position pos:line="312" pos:column="45"/></name><argument_list pos:line="312" pos:column="45">(<argument><expr><name><name pos:line="312" pos:column="46">wtdir<pos:position pos:line="312" pos:column="51"/></name><operator pos:line="312" pos:column="51">.<pos:position pos:line="312" pos:column="52"/></operator><name pos:line="312" pos:column="52">buf<pos:position pos:line="312" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="312" pos:column="57">rdir<pos:position pos:line="312" pos:column="61"/></name><operator pos:line="312" pos:column="61">.<pos:position pos:line="312" pos:column="62"/></operator><name pos:line="312" pos:column="62">buf<pos:position pos:line="312" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="312" pos:column="67">st<pos:position pos:line="312" pos:column="69"/></name><operator pos:line="312" pos:column="69">.<pos:position pos:line="312" pos:column="70"/></operator><name pos:line="312" pos:column="70">st_mode<pos:position pos:line="312" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="312" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="312" pos:column="79"/></condition><then pos:line="312" pos:column="79">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="313" pos:column="33">warning_errno<pos:position pos:line="313" pos:column="46"/></name><argument_list pos:line="313" pos:column="46">(<argument><expr><call><name pos:line="313" pos:column="47">_<pos:position pos:line="313" pos:column="48"/></name><argument_list pos:line="313" pos:column="48">(<argument><expr><literal type="string" pos:line="313" pos:column="49">"could not copy '%s' to '%s'"<pos:position pos:line="313" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="79"/></argument_list></call></expr></argument>,
					      <argument><expr><name><name pos:line="314" pos:column="47">rdir<pos:position pos:line="314" pos:column="51"/></name><operator pos:line="314" pos:column="51">.<pos:position pos:line="314" pos:column="52"/></operator><name pos:line="314" pos:column="52">buf<pos:position pos:line="314" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="314" pos:column="57">wtdir<pos:position pos:line="314" pos:column="62"/></name><operator pos:line="314" pos:column="62">.<pos:position pos:line="314" pos:column="63"/></operator><name pos:line="314" pos:column="63">buf<pos:position pos:line="314" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="314" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="68"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="315" pos:column="18"/></block></then></if>
	}<pos:position pos:line="316" pos:column="10"/></block></for>

	<if pos:line="318" pos:column="9">if <condition pos:line="318" pos:column="12">(<expr><name pos:line="318" pos:column="13">err<pos:position pos:line="318" pos:column="16"/></name></expr>)<pos:position pos:line="318" pos:column="17"/></condition><then pos:line="318" pos:column="17"> <block pos:line="318" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="319" pos:column="17">warning<pos:position pos:line="319" pos:column="24"/></name><argument_list pos:line="319" pos:column="24">(<argument><expr><call><name pos:line="319" pos:column="25">_<pos:position pos:line="319" pos:column="26"/></name><argument_list pos:line="319" pos:column="26">(<argument><expr><literal type="string" pos:line="319" pos:column="27">"temporary files exist in '%s'."<pos:position pos:line="319" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="319" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="319" pos:column="62">tmpdir<pos:position pos:line="319" pos:column="68"/></name></expr></argument>)<pos:position pos:line="319" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="320" pos:column="17">warning<pos:position pos:line="320" pos:column="24"/></name><argument_list pos:line="320" pos:column="24">(<argument><expr><call><name pos:line="320" pos:column="25">_<pos:position pos:line="320" pos:column="26"/></name><argument_list pos:line="320" pos:column="26">(<argument><expr><literal type="string" pos:line="320" pos:column="27">"you may want to cleanup or recover these."<pos:position pos:line="320" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="320" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="320" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="321" pos:column="17">exit<pos:position pos:line="321" pos:column="21"/></name><argument_list pos:line="321" pos:column="21">(<argument><expr><literal type="number" pos:line="321" pos:column="22">1<pos:position pos:line="321" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="321" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="322" pos:column="10"/></block></then> <else pos:line="322" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="323" pos:column="17">exit_cleanup<pos:position pos:line="323" pos:column="29"/></name><argument_list pos:line="323" pos:column="29">(<argument><expr><name pos:line="323" pos:column="30">tmpdir<pos:position pos:line="323" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="323" pos:column="38">rc<pos:position pos:line="323" pos:column="40"/></name></expr></argument>)<pos:position pos:line="323" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="42"/></expr_stmt></block></else></if>

<label><name pos:line="325" pos:column="1">finish<pos:position pos:line="325" pos:column="7"/></name>:<pos:position pos:line="325" pos:column="8"/></label>
	<if pos:line="326" pos:column="9">if <condition pos:line="326" pos:column="12">(<expr><name pos:line="326" pos:column="13">fp<pos:position pos:line="326" pos:column="15"/></name></expr>)<pos:position pos:line="326" pos:column="16"/></condition><then pos:line="326" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="327" pos:column="17">fclose<pos:position pos:line="327" pos:column="23"/></name><argument_list pos:line="327" pos:column="23">(<argument><expr><name pos:line="327" pos:column="24">fp<pos:position pos:line="327" pos:column="26"/></name></expr></argument>)<pos:position pos:line="327" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="28"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="329" pos:column="9">free<pos:position pos:line="329" pos:column="13"/></name><argument_list pos:line="329" pos:column="13">(<argument><expr><name pos:line="329" pos:column="14">lbase_dir<pos:position pos:line="329" pos:column="23"/></name></expr></argument>)<pos:position pos:line="329" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="330" pos:column="9">free<pos:position pos:line="330" pos:column="13"/></name><argument_list pos:line="330" pos:column="13">(<argument><expr><name pos:line="330" pos:column="14">rbase_dir<pos:position pos:line="330" pos:column="23"/></name></expr></argument>)<pos:position pos:line="330" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="331" pos:column="9">strbuf_release<pos:position pos:line="331" pos:column="23"/></name><argument_list pos:line="331" pos:column="23">(<argument><expr><operator pos:line="331" pos:column="24">&amp;<pos:position pos:line="331" pos:column="29"/></operator><name pos:line="331" pos:column="25">ldir<pos:position pos:line="331" pos:column="29"/></name></expr></argument>)<pos:position pos:line="331" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="332" pos:column="9">strbuf_release<pos:position pos:line="332" pos:column="23"/></name><argument_list pos:line="332" pos:column="23">(<argument><expr><operator pos:line="332" pos:column="24">&amp;<pos:position pos:line="332" pos:column="29"/></operator><name pos:line="332" pos:column="25">rdir<pos:position pos:line="332" pos:column="29"/></name></expr></argument>)<pos:position pos:line="332" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="333" pos:column="9">strbuf_release<pos:position pos:line="333" pos:column="23"/></name><argument_list pos:line="333" pos:column="23">(<argument><expr><operator pos:line="333" pos:column="24">&amp;<pos:position pos:line="333" pos:column="29"/></operator><name pos:line="333" pos:column="25">wtdir<pos:position pos:line="333" pos:column="30"/></name></expr></argument>)<pos:position pos:line="333" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="334" pos:column="9">strbuf_release<pos:position pos:line="334" pos:column="23"/></name><argument_list pos:line="334" pos:column="23">(<argument><expr><operator pos:line="334" pos:column="24">&amp;<pos:position pos:line="334" pos:column="29"/></operator><name pos:line="334" pos:column="25">buf<pos:position pos:line="334" pos:column="28"/></name></expr></argument>)<pos:position pos:line="334" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="30"/></expr_stmt>

	<return pos:line="336" pos:column="9">return <expr><name pos:line="336" pos:column="16">ret<pos:position pos:line="336" pos:column="19"/></name></expr>;<pos:position pos:line="336" pos:column="20"/></return>
}<pos:position pos:line="337" pos:column="2"/></block></function></unit>

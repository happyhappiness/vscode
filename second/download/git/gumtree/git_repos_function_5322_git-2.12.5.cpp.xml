<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5322_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_base_data<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">base_data<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">c<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">c<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">data<pos:position pos:line="3" pos:column="21"/></name></name></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22"> <block pos:line="3" pos:column="23">{
		<decl_stmt><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">object_entry<pos:position pos:line="4" pos:column="36"/></name></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">obj<pos:position pos:line="4" pos:column="41"/></name> <init pos:line="4" pos:column="42">= <expr><name><name pos:line="4" pos:column="44">c<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">obj<pos:position pos:line="4" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">base_data<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier><modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">delta<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><name pos:line="5" pos:column="44">NULL<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">delta_nr<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">delta_alloc<pos:position pos:line="6" pos:column="46"/></name> <init pos:line="6" pos:column="47">= <expr><literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>

		<while pos:line="8" pos:column="17">while <condition pos:line="8" pos:column="23">(<expr><call><name pos:line="8" pos:column="24">is_delta_type<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name><name pos:line="8" pos:column="38">c<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">obj<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">type<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call> <operator pos:line="8" pos:column="52">&amp;&amp;<pos:position pos:line="8" pos:column="62"/></operator> <operator pos:line="8" pos:column="55">!<pos:position pos:line="8" pos:column="56"/></operator><name><name pos:line="8" pos:column="56">c<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">data<pos:position pos:line="8" pos:column="63"/></name></name></expr>)<pos:position pos:line="8" pos:column="64"/></condition> <block pos:line="8" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">ALLOC_GROW<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">delta<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">delta_nr<pos:position pos:line="9" pos:column="51"/></name> <operator pos:line="9" pos:column="52">+<pos:position pos:line="9" pos:column="53"/></operator> <literal type="number" pos:line="9" pos:column="54">1<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="57">delta_alloc<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="10" pos:column="25">delta<pos:position pos:line="10" pos:column="30"/></name><index pos:line="10" pos:column="30">[<expr><name pos:line="10" pos:column="31">delta_nr<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">++<pos:position pos:line="10" pos:column="41"/></operator></expr>]<pos:position pos:line="10" pos:column="42"/></index></name> <operator pos:line="10" pos:column="43">=<pos:position pos:line="10" pos:column="44"/></operator> <name pos:line="10" pos:column="45">c<pos:position pos:line="10" pos:column="46"/></name></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="11" pos:column="25">c<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <name><name pos:line="11" pos:column="29">c<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">base<pos:position pos:line="11" pos:column="36"/></name></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></while>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">delta_nr<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
			<expr_stmt><expr><name><name pos:line="14" pos:column="25">c<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">data<pos:position pos:line="14" pos:column="32"/></name></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <call><name pos:line="14" pos:column="35">get_data_from_pack<pos:position pos:line="14" pos:column="53"/></name><argument_list pos:line="14" pos:column="53">(<argument><expr><name pos:line="14" pos:column="54">obj<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="15" pos:column="25">c<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">size<pos:position pos:line="15" pos:column="32"/></name></name> <operator pos:line="15" pos:column="33">=<pos:position pos:line="15" pos:column="34"/></operator> <name><name pos:line="15" pos:column="35">obj<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">size<pos:position pos:line="15" pos:column="44"/></name></name></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">get_thread_data<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">()<pos:position pos:line="16" pos:column="42"/></argument_list></call><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">base_cache_used<pos:position pos:line="16" pos:column="59"/></name> <operator pos:line="16" pos:column="60">+=<pos:position pos:line="16" pos:column="62"/></operator> <name><name pos:line="16" pos:column="63">c<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">size<pos:position pos:line="16" pos:column="70"/></name></name></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">prune_base_data<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">c<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<for pos:line="19" pos:column="17">for <control pos:line="19" pos:column="21">(<init pos:line="19" pos:column="22">;<pos:position pos:line="19" pos:column="23"/></init> <condition><expr><name pos:line="19" pos:column="24">delta_nr<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">&gt;<pos:position pos:line="19" pos:column="37"/></operator> <literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr>;<pos:position pos:line="19" pos:column="37"/></condition> <incr><expr><name pos:line="19" pos:column="38">delta_nr<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">--<pos:position pos:line="19" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="49"/></control> <block pos:line="19" pos:column="50">{
			<decl_stmt><decl><type><name pos:line="20" pos:column="25">void<pos:position pos:line="20" pos:column="29"/></name> <modifier pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></modifier></type><name pos:line="20" pos:column="31">base<pos:position pos:line="20" pos:column="35"/></name></decl>, <modifier pos:line="20" pos:column="37">*<pos:position pos:line="20" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="20" pos:column="38">raw<pos:position pos:line="20" pos:column="41"/></name></decl>;<pos:position pos:line="20" pos:column="42"/></decl_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">c<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name><name pos:line="21" pos:column="29">delta<pos:position pos:line="21" pos:column="34"/></name><index pos:line="21" pos:column="34">[<expr><name pos:line="21" pos:column="35">delta_nr<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">-<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="46">1<pos:position pos:line="21" pos:column="47"/></literal></expr>]<pos:position pos:line="21" pos:column="48"/></index></name></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">obj<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="31">c<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">obj<pos:position pos:line="22" pos:column="37"/></name></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">base<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">get_base_data<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><name><name pos:line="23" pos:column="46">c<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">base<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">raw<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">get_data_from_pack<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">obj<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">c<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">data<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <call><name pos:line="25" pos:column="35">patch_delta<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(
				<argument><expr><name pos:line="26" pos:column="33">base<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="39">c<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">base<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">size<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>,
				<argument><expr><name pos:line="27" pos:column="33">raw<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="38">obj<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">size<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>,
				<argument><expr><operator pos:line="28" pos:column="33">&amp;<pos:position pos:line="28" pos:column="38"/></operator><name><name pos:line="28" pos:column="34">c<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">size<pos:position pos:line="28" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">free<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">raw<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><operator pos:line="30" pos:column="29">!<pos:position pos:line="30" pos:column="30"/></operator><name><name pos:line="30" pos:column="30">c<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">data<pos:position pos:line="30" pos:column="37"/></name></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="33">bad_object<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><name><name pos:line="31" pos:column="44">obj<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">idx<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">.<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="53">offset<pos:position pos:line="31" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="61">_<pos:position pos:line="31" pos:column="62"/></name><argument_list pos:line="31" pos:column="62">(<argument><expr><literal type="string" pos:line="31" pos:column="63">"failed to apply delta"<pos:position pos:line="31" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="89"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">get_thread_data<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">()<pos:position pos:line="32" pos:column="42"/></argument_list></call><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">base_cache_used<pos:position pos:line="32" pos:column="59"/></name> <operator pos:line="32" pos:column="60">+=<pos:position pos:line="32" pos:column="62"/></operator> <name><name pos:line="32" pos:column="63">c<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">-&gt;<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="66">size<pos:position pos:line="32" pos:column="70"/></name></name></expr>;<pos:position pos:line="32" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">prune_base_data<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">c<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">free<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">delta<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<return pos:line="37" pos:column="9">return <expr><name><name pos:line="37" pos:column="16">c<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">data<pos:position pos:line="37" pos:column="23"/></name></name></expr>;<pos:position pos:line="37" pos:column="24"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

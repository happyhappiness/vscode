<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2307_git-2.11.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">clear_directory<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">dir_struct<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">dir<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">j<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">exclude_list_group<pos:position pos:line="4" pos:column="34"/></name></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">group<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">exclude_list<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier></type><name pos:line="5" pos:column="30">el<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">exclude_stack<pos:position pos:line="6" pos:column="29"/></name></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">stk<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">EXC_CMDL<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></init> <condition><expr><name pos:line="8" pos:column="28">i<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">&lt;=<pos:position pos:line="8" pos:column="35"/></operator> <name pos:line="8" pos:column="33">EXC_FILE<pos:position pos:line="8" pos:column="41"/></name></expr>;<pos:position pos:line="8" pos:column="42"/></condition> <incr><expr><name pos:line="8" pos:column="43">i<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">++<pos:position pos:line="8" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="47"/></control> <block pos:line="8" pos:column="48">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">group<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name><name pos:line="9" pos:column="26">dir<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">exclude_list_group<pos:position pos:line="9" pos:column="49"/></name><index pos:line="9" pos:column="49">[<expr><name pos:line="9" pos:column="50">i<pos:position pos:line="9" pos:column="51"/></name></expr>]<pos:position pos:line="9" pos:column="52"/></index></name></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
		<for pos:line="10" pos:column="17">for <control pos:line="10" pos:column="21">(<init><expr><name pos:line="10" pos:column="22">j<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr>;<pos:position pos:line="10" pos:column="28"/></init> <condition><expr><name pos:line="10" pos:column="29">j<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&lt;<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="33">group<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">nr<pos:position pos:line="10" pos:column="42"/></name></name></expr>;<pos:position pos:line="10" pos:column="43"/></condition> <incr><expr><name pos:line="10" pos:column="44">j<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">++<pos:position pos:line="10" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="48"/></control> <block pos:line="10" pos:column="49">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">el<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <operator pos:line="11" pos:column="30">&amp;<pos:position pos:line="11" pos:column="35"/></operator><name><name pos:line="11" pos:column="31">group<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">el<pos:position pos:line="11" pos:column="40"/></name><index pos:line="11" pos:column="40">[<expr><name pos:line="11" pos:column="41">j<pos:position pos:line="11" pos:column="42"/></name></expr>]<pos:position pos:line="11" pos:column="43"/></index></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">i<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">==<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">EXC_DIRS<pos:position pos:line="12" pos:column="42"/></name></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="33">free<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><operator pos:line="13" pos:column="38">(<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">char<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">*<pos:position pos:line="13" pos:column="45"/></operator><operator pos:line="13" pos:column="45">)<pos:position pos:line="13" pos:column="46"/></operator><name><name pos:line="13" pos:column="46">el<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">src<pos:position pos:line="13" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">clear_exclude_list<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">el<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></for>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">free<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name><name pos:line="16" pos:column="22">group<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">el<pos:position pos:line="16" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="19" pos:column="9">stk<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name><name pos:line="19" pos:column="15">dir<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">exclude_stack<pos:position pos:line="19" pos:column="33"/></name></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">stk<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition> <block pos:line="20" pos:column="21">{
		<decl_stmt><decl><type><name><name pos:line="21" pos:column="17">struct<pos:position pos:line="21" pos:column="23"/></name> <name pos:line="21" pos:column="24">exclude_stack<pos:position pos:line="21" pos:column="37"/></name></name> <modifier pos:line="21" pos:column="38">*<pos:position pos:line="21" pos:column="39"/></modifier></type><name pos:line="21" pos:column="39">prev<pos:position pos:line="21" pos:column="43"/></name> <init pos:line="21" pos:column="44">= <expr><name><name pos:line="21" pos:column="46">stk<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">prev<pos:position pos:line="21" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="56"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">free<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">stk<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">stk<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">prev<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strbuf_release<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name><name pos:line="25" pos:column="25">dir<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">basebuf<pos:position pos:line="25" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

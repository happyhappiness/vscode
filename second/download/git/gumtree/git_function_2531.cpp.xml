<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2531.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_loose_object<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">unsigned<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">sha1<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">path<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">void<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">data<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">object_type<pos:position pos:line="4" pos:column="25"/></name></name></type> <name pos:line="4" pos:column="26">type<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><call><name pos:line="4" pos:column="33">sha1_object_info<pos:position pos:line="4" pos:column="49"/></name><argument_list pos:line="4" pos:column="49">(<argument><expr><name pos:line="4" pos:column="50">sha1<pos:position pos:line="4" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="56">NULL<pos:position pos:line="4" pos:column="60"/></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">type<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&lt;<pos:position pos:line="6" pos:column="22"/></operator> <literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">warning<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><literal type="string" pos:line="7" pos:column="25">"loose object at %s could not be examined"<pos:position pos:line="7" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="69">path<pos:position pos:line="7" pos:column="73"/></name></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt>
		<return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">add_object_entry<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">sha1<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">type<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="38">""<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="42">0<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	<return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

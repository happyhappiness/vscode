<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5927_git-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">free_token<pos:position pos:line="2" pos:column="11"/></name> <parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">re_token_t<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">node<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">RE_ENABLE_I18N<pos:position pos:line="4" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">node<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">type<pos:position pos:line="5" pos:column="17"/></name></name> <operator pos:line="5" pos:column="18">==<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">COMPLEX_BRACKET<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">&amp;&amp;<pos:position pos:line="5" pos:column="47"/></operator> <name><name pos:line="5" pos:column="40">node<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">duplicated<pos:position pos:line="5" pos:column="56"/></name></name> <operator pos:line="5" pos:column="57">==<pos:position pos:line="5" pos:column="59"/></operator> <literal type="number" pos:line="5" pos:column="60">0<pos:position pos:line="5" pos:column="61"/></literal></expr>)<pos:position pos:line="5" pos:column="62"/></condition><then pos:line="5" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">free_charset<pos:position pos:line="6" pos:column="17"/></name> <argument_list pos:line="6" pos:column="18">(<argument><expr><name><name pos:line="6" pos:column="19">node<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">opr<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">mbcset<pos:position pos:line="6" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt></block></then>
  <elseif pos:line="7" pos:column="3">else
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="8" pos:column="8">/* RE_ENABLE_I18N */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">node<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">type<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">SIMPLE_BRACKET<pos:position pos:line="9" pos:column="37"/></name> <operator pos:line="9" pos:column="38">&amp;&amp;<pos:position pos:line="9" pos:column="48"/></operator> <name><name pos:line="9" pos:column="41">node<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">-&gt;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="47">duplicated<pos:position pos:line="9" pos:column="57"/></name></name> <operator pos:line="9" pos:column="58">==<pos:position pos:line="9" pos:column="60"/></operator> <literal type="number" pos:line="9" pos:column="61">0<pos:position pos:line="9" pos:column="62"/></literal></expr>)<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">re_free<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><name><name pos:line="10" pos:column="16">node<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">opr<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">sbcset<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt></block></then></if></elseif></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

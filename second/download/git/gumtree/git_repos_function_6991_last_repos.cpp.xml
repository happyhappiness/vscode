<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6991_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">re_sub_match_last_t<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">match_ctx_add_sublast<pos:position pos:line="3" pos:column="22"/></name> <parameter_list pos:line="3" pos:column="23">(<parameter><decl><type><name pos:line="3" pos:column="24">re_sub_match_top_t<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">subtop<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">int<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">node<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="62">int<pos:position pos:line="3" pos:column="65"/></name></type> <name pos:line="3" pos:column="66">str_idx<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">re_sub_match_last_t<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">new_entry<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">BE<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><name><name pos:line="6" pos:column="11">subtop<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">nlasts<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">==<pos:position pos:line="6" pos:column="28"/></operator> <name><name pos:line="6" pos:column="29">subtop<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">alasts<pos:position pos:line="6" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
    <block pos:line="7" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="8" pos:column="7">int<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">new_alasts<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">2<pos:position pos:line="8" pos:column="25"/></literal> <operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator> <name><name pos:line="8" pos:column="28">subtop<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">alasts<pos:position pos:line="8" pos:column="42"/></name></name> <operator pos:line="8" pos:column="43">+<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">1<pos:position pos:line="8" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">re_sub_match_last_t<pos:position pos:line="9" pos:column="26"/></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier><modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">new_array<pos:position pos:line="9" pos:column="38"/></name> <init pos:line="9" pos:column="39">= <expr><call><name pos:line="9" pos:column="41">re_realloc<pos:position pos:line="9" pos:column="51"/></name> <argument_list pos:line="9" pos:column="52">(<argument><expr><name><name pos:line="9" pos:column="53">subtop<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">-&gt;<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="61">lasts<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>,
						    <argument><expr><name pos:line="10" pos:column="53">re_sub_match_last_t<pos:position pos:line="10" pos:column="72"/></name> <operator pos:line="10" pos:column="73">*<pos:position pos:line="10" pos:column="74"/></operator></expr></argument>,
						    <argument><expr><name pos:line="11" pos:column="53">new_alasts<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="65"/></decl_stmt>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><call><name pos:line="12" pos:column="11">BE<pos:position pos:line="12" pos:column="13"/></name> <argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">new_array<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="14" pos:column="7">subtop<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">lasts<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">new_array<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">subtop<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">alasts<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">new_alasts<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
  <expr_stmt><expr><name pos:line="17" pos:column="3">new_entry<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">calloc<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="number" pos:line="17" pos:column="23">1<pos:position pos:line="17" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="26">sizeof <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">re_sub_match_last_t<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">BE<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">new_entry<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">!=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="30">1<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="20" pos:column="7">subtop<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">lasts<pos:position pos:line="20" pos:column="20"/></name><index pos:line="20" pos:column="20">[<expr><name><name pos:line="20" pos:column="21">subtop<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">nlasts<pos:position pos:line="20" pos:column="35"/></name></name></expr>]<pos:position pos:line="20" pos:column="36"/></index></name> <operator pos:line="20" pos:column="37">=<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">new_entry<pos:position pos:line="20" pos:column="48"/></name></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">new_entry<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">node<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">node<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">new_entry<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">str_idx<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">str_idx<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="23" pos:column="7">++<pos:position pos:line="23" pos:column="9"/></operator><name><name pos:line="23" pos:column="9">subtop<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">nlasts<pos:position pos:line="23" pos:column="23"/></name></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
  <return pos:line="25" pos:column="3">return <expr><name pos:line="25" pos:column="10">new_entry<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

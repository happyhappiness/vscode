<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1664_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_removed<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">cache_entry<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ce<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">stat<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">st<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">lstat<pos:position pos:line="3" pos:column="18"/></name><argument_list pos:line="3" pos:column="18">(<argument><expr><name><name pos:line="3" pos:column="19">ce<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">-&gt;<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="23">name<pos:position pos:line="3" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="29">st<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call> <operator pos:line="3" pos:column="33">&lt;<pos:position pos:line="3" pos:column="37"/></operator> <literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <block pos:line="3" pos:column="38">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><name pos:line="4" pos:column="21">errno<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">!=<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">ENOENT<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">&amp;&amp;<pos:position pos:line="4" pos:column="47"/></operator> <name pos:line="4" pos:column="40">errno<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">!=<pos:position pos:line="4" pos:column="48"/></operator> <name pos:line="4" pos:column="49">ENOTDIR<pos:position pos:line="4" pos:column="56"/></name></expr>)<pos:position pos:line="4" pos:column="57"/></condition><then pos:line="4" pos:column="57">
			<block type="pseudo"><return pos:line="5" pos:column="25">return <expr><operator pos:line="5" pos:column="32">-<pos:position pos:line="5" pos:column="33"/></operator><literal type="number" pos:line="5" pos:column="33">1<pos:position pos:line="5" pos:column="34"/></literal></expr>;<pos:position pos:line="5" pos:column="35"/></return></block></then></if>
		<return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">has_symlink_leading_path<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name><name pos:line="8" pos:column="38">ce<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">name<pos:position pos:line="8" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="48">ce_namelen<pos:position pos:line="8" pos:column="58"/></name><argument_list pos:line="8" pos:column="58">(<argument><expr><name pos:line="8" pos:column="59">ce<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">S_ISDIR<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name><name pos:line="10" pos:column="21">st<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">st_mode<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">unsigned<pos:position pos:line="11" pos:column="25"/></name> <name pos:line="11" pos:column="26">char<pos:position pos:line="11" pos:column="30"/></name></type> <name><name pos:line="11" pos:column="31">sub<pos:position pos:line="11" pos:column="34"/></name><index pos:line="11" pos:column="34">[<expr><literal type="number" pos:line="11" pos:column="35">20<pos:position pos:line="11" pos:column="37"/></literal></expr>]<pos:position pos:line="11" pos:column="38"/></index></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>

		<comment type="block" pos:line="13" pos:column="17">/*
		 * If ce is already a gitlink, we can have a plain
		 * directory (i.e. the submodule is not checked out),
		 * or a checked out submodule.  Either case this is not
		 * a case where something was removed from the work tree,
		 * so we will return 0.
		 *
		 * Otherwise, if the directory is not a submodule
		 * repository, that means ce which was a blob turned into
		 * a directory --- the blob was removed!
		 */</comment>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">S_ISGITLINK<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name><name pos:line="24" pos:column="34">ce<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">ce_mode<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call> <operator pos:line="24" pos:column="47">&amp;&amp;<pos:position pos:line="24" pos:column="57"/></operator>
		    <call><name pos:line="25" pos:column="21">resolve_gitlink_ref<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name><name pos:line="25" pos:column="41">ce<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">name<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="51">"HEAD"<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">sub<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="64"/></condition><then pos:line="25" pos:column="64">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

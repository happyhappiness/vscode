<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1551_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">emit_line_0<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">diff_options<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">o<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">set<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <name pos:line="1" pos:column="72">char<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">reset<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">first<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">line<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">len<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">has_trailing_newline<pos:position pos:line="4" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="35">has_trailing_carriage_return<pos:position pos:line="4" pos:column="63"/></name></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">nofirst<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">file<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">o<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">file<pos:position pos:line="6" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">fputs<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><call><name pos:line="8" pos:column="15">diff_line_prefix<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">o<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">file<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">has_trailing_newline<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">=<pos:position pos:line="11" pos:column="39"/></operator> <operator pos:line="11" pos:column="40">(<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">first<pos:position pos:line="11" pos:column="46"/></name> <operator pos:line="11" pos:column="47">==<pos:position pos:line="11" pos:column="49"/></operator> <literal type="char" pos:line="11" pos:column="50">'\n'<pos:position pos:line="11" pos:column="54"/></literal><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">has_trailing_carriage_return<pos:position pos:line="12" pos:column="45"/></name> <operator pos:line="12" pos:column="46">=<pos:position pos:line="12" pos:column="47"/></operator> <operator pos:line="12" pos:column="48">(<pos:position pos:line="12" pos:column="49"/></operator><operator pos:line="12" pos:column="49">!<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">has_trailing_newline<pos:position pos:line="12" pos:column="70"/></name> <operator pos:line="12" pos:column="71">&amp;&amp;<pos:position pos:line="12" pos:column="81"/></operator>
						<operator pos:line="13" pos:column="49">(<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">first<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">==<pos:position pos:line="13" pos:column="58"/></operator> <literal type="char" pos:line="13" pos:column="59">'\r'<pos:position pos:line="13" pos:column="63"/></literal><operator pos:line="13" pos:column="63">)<pos:position pos:line="13" pos:column="64"/></operator><operator pos:line="13" pos:column="64">)<pos:position pos:line="13" pos:column="65"/></operator></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">nofirst<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">has_trailing_newline<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">||<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="51">has_trailing_carriage_return<pos:position pos:line="14" pos:column="79"/></name></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then> <else pos:line="15" pos:column="11">else <block pos:line="15" pos:column="16">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">has_trailing_newline<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">=<pos:position pos:line="16" pos:column="39"/></operator> <operator pos:line="16" pos:column="40">(<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">len<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">&gt;<pos:position pos:line="16" pos:column="49"/></operator> <literal type="number" pos:line="16" pos:column="47">0<pos:position pos:line="16" pos:column="48"/></literal> <operator pos:line="16" pos:column="49">&amp;&amp;<pos:position pos:line="16" pos:column="59"/></operator> <name><name pos:line="16" pos:column="52">line<pos:position pos:line="16" pos:column="56"/></name><index pos:line="16" pos:column="56">[<expr><name pos:line="16" pos:column="57">len<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">-<pos:position pos:line="16" pos:column="61"/></operator><literal type="number" pos:line="16" pos:column="61">1<pos:position pos:line="16" pos:column="62"/></literal></expr>]<pos:position pos:line="16" pos:column="63"/></index></name> <operator pos:line="16" pos:column="64">==<pos:position pos:line="16" pos:column="66"/></operator> <literal type="char" pos:line="16" pos:column="67">'\n'<pos:position pos:line="16" pos:column="71"/></literal><operator pos:line="16" pos:column="71">)<pos:position pos:line="16" pos:column="72"/></operator></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">has_trailing_newline<pos:position pos:line="17" pos:column="41"/></name></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">len<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">--<pos:position pos:line="18" pos:column="30"/></operator></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">has_trailing_carriage_return<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">=<pos:position pos:line="19" pos:column="47"/></operator> <operator pos:line="19" pos:column="48">(<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="49">len<pos:position pos:line="19" pos:column="52"/></name> <operator pos:line="19" pos:column="53">&gt;<pos:position pos:line="19" pos:column="57"/></operator> <literal type="number" pos:line="19" pos:column="55">0<pos:position pos:line="19" pos:column="56"/></literal> <operator pos:line="19" pos:column="57">&amp;&amp;<pos:position pos:line="19" pos:column="67"/></operator> <name><name pos:line="19" pos:column="60">line<pos:position pos:line="19" pos:column="64"/></name><index pos:line="19" pos:column="64">[<expr><name pos:line="19" pos:column="65">len<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">-<pos:position pos:line="19" pos:column="69"/></operator><literal type="number" pos:line="19" pos:column="69">1<pos:position pos:line="19" pos:column="70"/></literal></expr>]<pos:position pos:line="19" pos:column="71"/></index></name> <operator pos:line="19" pos:column="72">==<pos:position pos:line="19" pos:column="74"/></operator> <literal type="char" pos:line="19" pos:column="75">'\r'<pos:position pos:line="19" pos:column="79"/></literal><operator pos:line="19" pos:column="79">)<pos:position pos:line="19" pos:column="80"/></operator></expr>;<pos:position pos:line="19" pos:column="81"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">has_trailing_carriage_return<pos:position pos:line="20" pos:column="49"/></name></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">len<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">--<pos:position pos:line="21" pos:column="30"/></operator></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">nofirst<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <literal type="number" pos:line="22" pos:column="27">0<pos:position pos:line="22" pos:column="28"/></literal></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">len<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">||<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="20">!<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">nofirst<pos:position pos:line="25" pos:column="28"/></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29"> <block pos:line="25" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">fputs<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">set<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">file<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">nofirst<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">fputc<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">first<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">file<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">fwrite<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">line<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">len<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="35">1<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">file<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">fputs<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">reset<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">file<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">has_trailing_carriage_return<pos:position pos:line="32" pos:column="41"/></name></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">fputc<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><literal type="char" pos:line="33" pos:column="23">'\r'<pos:position pos:line="33" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">file<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">has_trailing_newline<pos:position pos:line="34" pos:column="33"/></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">fputc<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><literal type="char" pos:line="35" pos:column="23">'\n'<pos:position pos:line="35" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">file<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

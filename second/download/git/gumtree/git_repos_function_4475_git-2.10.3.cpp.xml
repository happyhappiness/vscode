<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4475_git-2.10.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">emit_porcelain<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">scoreboard<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">sb<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">blame_entry<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">ent<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">opt<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">repeat<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">opt<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">&amp;<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="28">OUTPUT_LINE_PORCELAIN<pos:position pos:line="4" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">cnt<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">cp<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">origin<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">suspect<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name><name pos:line="7" pos:column="34">ent<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">suspect<pos:position pos:line="7" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">hex<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">GIT_SHA1_HEXSZ<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">+<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="35">1<pos:position pos:line="8" pos:column="36"/></literal></expr>]<pos:position pos:line="8" pos:column="37"/></index></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">sha1_to_hex_r<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">hex<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="28">suspect<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">commit<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">object<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">.<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">oid<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">.<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="56">hash<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">printf<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">"%s %d %d %d\n"<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>,
	       <argument><expr><name pos:line="12" pos:column="16">hex<pos:position pos:line="12" pos:column="19"/></name></expr></argument>,
	       <argument><expr><name><name pos:line="13" pos:column="16">ent<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">s_lno<pos:position pos:line="13" pos:column="26"/></name></name> <operator pos:line="13" pos:column="27">+<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">1<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>,
	       <argument><expr><name><name pos:line="14" pos:column="16">ent<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">lno<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">+<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr></argument>,
	       <argument><expr><name><name pos:line="15" pos:column="16">ent<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">num_lines<pos:position pos:line="15" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">emit_porcelain_details<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">suspect<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">repeat<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><name pos:line="18" pos:column="9">cp<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">nth_line<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">sb<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="27">ent<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">lno<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">cnt<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></init> <condition><expr><name pos:line="19" pos:column="23">cnt<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;<pos:position pos:line="19" pos:column="31"/></operator> <name><name pos:line="19" pos:column="29">ent<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">num_lines<pos:position pos:line="19" pos:column="43"/></name></name></expr>;<pos:position pos:line="19" pos:column="44"/></condition> <incr><expr><name pos:line="19" pos:column="45">cnt<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">++<pos:position pos:line="19" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="51"/></control> <block pos:line="19" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name></type> <name pos:line="20" pos:column="22">ch<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">cnt<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25"> <block pos:line="21" pos:column="26">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">printf<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><literal type="string" pos:line="22" pos:column="32">"%s %d %d\n"<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">hex<pos:position pos:line="22" pos:column="49"/></name></expr></argument>,
			       <argument><expr><name><name pos:line="23" pos:column="32">ent<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">s_lno<pos:position pos:line="23" pos:column="42"/></name></name> <operator pos:line="23" pos:column="43">+<pos:position pos:line="23" pos:column="44"/></operator> <literal type="number" pos:line="23" pos:column="45">1<pos:position pos:line="23" pos:column="46"/></literal> <operator pos:line="23" pos:column="47">+<pos:position pos:line="23" pos:column="48"/></operator> <name pos:line="23" pos:column="49">cnt<pos:position pos:line="23" pos:column="52"/></name></expr></argument>,
			       <argument><expr><name><name pos:line="24" pos:column="32">ent<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">lno<pos:position pos:line="24" pos:column="40"/></name></name> <operator pos:line="24" pos:column="41">+<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="43">1<pos:position pos:line="24" pos:column="44"/></literal> <operator pos:line="24" pos:column="45">+<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="47">cnt<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">repeat<pos:position pos:line="25" pos:column="35"/></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="33">emit_porcelain_details<pos:position pos:line="26" pos:column="55"/></name><argument_list pos:line="26" pos:column="55">(<argument><expr><name pos:line="26" pos:column="56">suspect<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="65">1<pos:position pos:line="26" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">putchar<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><literal type="char" pos:line="28" pos:column="25">'\t'<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
		<do pos:line="29" pos:column="17">do <block pos:line="29" pos:column="20">{
			<expr_stmt><expr><name pos:line="30" pos:column="25">ch<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <operator pos:line="30" pos:column="30">*<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">cp<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">++<pos:position pos:line="30" pos:column="35"/></operator></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">putchar<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">ch<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block> while <condition pos:line="32" pos:column="25">(<expr><name pos:line="32" pos:column="26">ch<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">!=<pos:position pos:line="32" pos:column="31"/></operator> <literal type="char" pos:line="32" pos:column="32">'\n'<pos:position pos:line="32" pos:column="36"/></literal> <operator pos:line="32" pos:column="37">&amp;&amp;<pos:position pos:line="32" pos:column="47"/></operator>
			 <name pos:line="33" pos:column="26">cp<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">&lt;<pos:position pos:line="33" pos:column="33"/></operator> <name><name pos:line="33" pos:column="31">sb<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">final_buf<pos:position pos:line="33" pos:column="44"/></name></name> <operator pos:line="33" pos:column="45">+<pos:position pos:line="33" pos:column="46"/></operator> <name><name pos:line="33" pos:column="47">sb<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">final_buf_size<pos:position pos:line="33" pos:column="65"/></name></name></expr>)<pos:position pos:line="33" pos:column="66"/></condition>;<pos:position pos:line="33" pos:column="67"/></do>
	}<pos:position pos:line="34" pos:column="10"/></block></for>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">sb<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">final_buf_size<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">&amp;&amp;<pos:position pos:line="36" pos:column="42"/></operator> <name><name pos:line="36" pos:column="35">cp<pos:position pos:line="36" pos:column="37"/></name><index pos:line="36" pos:column="37">[<expr><operator pos:line="36" pos:column="38">-<pos:position pos:line="36" pos:column="39"/></operator><literal type="number" pos:line="36" pos:column="39">1<pos:position pos:line="36" pos:column="40"/></literal></expr>]<pos:position pos:line="36" pos:column="41"/></index></name> <operator pos:line="36" pos:column="42">!=<pos:position pos:line="36" pos:column="44"/></operator> <literal type="char" pos:line="36" pos:column="45">'\n'<pos:position pos:line="36" pos:column="49"/></literal></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">putchar<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="char" pos:line="37" pos:column="25">'\n'<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt></block></then></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

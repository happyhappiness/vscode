<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5205_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">resolve_delta<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">unsigned<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">nr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="40">enum<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">object_type<pos:position pos:line="1" pos:column="56"/></name></name></type> <name pos:line="1" pos:column="57">type<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">void<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">base<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">unsigned<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">long<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">base_size<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="3" pos:column="27">void<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">delta<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">unsigned<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">long<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">delta_size<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">void<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">result<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">result_size<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">result<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">patch_delta<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">base<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">base_size<pos:position pos:line="8" pos:column="45"/></name></expr></argument>,
			     <argument><expr><name pos:line="9" pos:column="30">delta<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">delta_size<pos:position pos:line="9" pos:column="47"/></name></expr></argument>,
			     <argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">result_size<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">result<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"failed to apply delta"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">free<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">delta<pos:position pos:line="13" pos:column="19"/></name></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">write_object<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">nr<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="26">type<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">result<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">result_size<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

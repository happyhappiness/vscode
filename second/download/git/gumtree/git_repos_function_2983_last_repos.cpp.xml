<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2983_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_pick_commit<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">enum<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">todo_command<pos:position pos:line="1" pos:column="44"/></name></name></type> <name pos:line="1" pos:column="45">command<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="54">struct<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">commit<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">commit<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">replay_opts<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">opts<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">final_fixup<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">flags<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><ternary><condition><expr><name><name pos:line="4" pos:column="30">opts<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">edit<pos:position pos:line="4" pos:column="40"/></name></name></expr> ?<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42"> <expr><name pos:line="4" pos:column="43">EDIT_MSG<pos:position pos:line="4" pos:column="51"/></name></expr> <pos:position pos:line="4" pos:column="52"/></then><else pos:line="4" pos:column="52">: <expr><literal type="number" pos:line="4" pos:column="54">0<pos:position pos:line="4" pos:column="55"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">msg_file<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><ternary><condition><expr><name><name pos:line="5" pos:column="32">opts<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">edit<pos:position pos:line="5" pos:column="42"/></name></name></expr> ?<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44"> <expr><name pos:line="5" pos:column="45">NULL<pos:position pos:line="5" pos:column="49"/></name></expr> <pos:position pos:line="5" pos:column="50"/></then><else pos:line="5" pos:column="50">: <expr><call><name pos:line="5" pos:column="52">git_path_merge_msg<pos:position pos:line="5" pos:column="70"/></name><argument_list pos:line="5" pos:column="70">()<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">object_id<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">head<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">base<pos:position pos:line="7" pos:column="28"/></name></decl>, <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="31">next<pos:position pos:line="7" pos:column="35"/></name></decl>, <modifier pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="38">parent<pos:position pos:line="7" pos:column="44"/></name></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">base_label<pos:position pos:line="8" pos:column="31"/></name></decl>, <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="34">next_label<pos:position pos:line="8" pos:column="44"/></name></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">commit_message<pos:position pos:line="9" pos:column="30"/></name></name></type> <name pos:line="9" pos:column="31">msg<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><block pos:line="9" pos:column="37">{ <expr><name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name></expr>, <expr><name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name></expr>, <expr><name pos:line="9" pos:column="51">NULL<pos:position pos:line="9" pos:column="55"/></name></expr>, <expr><name pos:line="9" pos:column="57">NULL<pos:position pos:line="9" pos:column="61"/></name></expr> }<pos:position pos:line="9" pos:column="63"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">strbuf<pos:position pos:line="10" pos:column="22"/></name></name></type> <name pos:line="10" pos:column="23">msgbuf<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><name pos:line="10" pos:column="32">STRBUF_INIT<pos:position pos:line="10" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">res<pos:position pos:line="11" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="18">unborn<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="30">allow<pos:position pos:line="11" pos:column="35"/></name></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">opts<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">no_commit<pos:position pos:line="13" pos:column="28"/></name></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <block pos:line="13" pos:column="30">{
		<comment type="block" pos:line="14" pos:column="17">/*
		 * We do not intend to commit immediately.  We just want to
		 * merge the differences in, so let's compute the tree
		 * that represents the "current" state for merge-recursive
		 * to work on.
		 */</comment>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">write_cache_as_tree<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name><name pos:line="20" pos:column="41">head<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">hash<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="52">0<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">NULL<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="61"/></condition><then pos:line="20" pos:column="61">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><call><name pos:line="21" pos:column="32">error<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><call><name pos:line="21" pos:column="38">_<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><literal type="string" pos:line="21" pos:column="40">"your index file is unmerged."<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></return></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">unborn<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">get_oid<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><literal type="string" pos:line="23" pos:column="34">"HEAD"<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="43">head<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">unborn<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">oidcpy<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">head<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="39">&amp;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="40">empty_tree_oid<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">index_differs_from<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><ternary><condition><expr><name pos:line="26" pos:column="40">unborn<pos:position pos:line="26" pos:column="46"/></name></expr> ?<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48"> <expr><name pos:line="26" pos:column="49">EMPTY_TREE_SHA1_HEX<pos:position pos:line="26" pos:column="68"/></name></expr> <pos:position pos:line="26" pos:column="69"/></then><else pos:line="26" pos:column="69">: <expr><literal type="string" pos:line="26" pos:column="71">"HEAD"<pos:position pos:line="26" pos:column="77"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="79">0<pos:position pos:line="26" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="82">0<pos:position pos:line="26" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="85"/></condition><then pos:line="26" pos:column="85">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><call><name pos:line="27" pos:column="32">error_dirty_index<pos:position pos:line="27" pos:column="49"/></name><argument_list pos:line="27" pos:column="49">(<argument><expr><name pos:line="27" pos:column="50">opts<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></return></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">discard_cache<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">()<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">commit<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">parents<pos:position pos:line="31" pos:column="29"/></name></name></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">parent<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">NULL<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt></block></then>
	<elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><name><name pos:line="33" pos:column="18">commit<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">parents<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">next<pos:position pos:line="33" pos:column="39"/></name></name></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40"> <block pos:line="33" pos:column="41">{
		<comment type="block" pos:line="34" pos:column="17">/* Reverting or cherry-picking a merge commit */</comment>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">cnt<pos:position pos:line="35" pos:column="24"/></name></decl>;<pos:position pos:line="35" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="36" pos:column="17">struct<pos:position pos:line="36" pos:column="23"/></name> <name pos:line="36" pos:column="24">commit_list<pos:position pos:line="36" pos:column="35"/></name></name> <modifier pos:line="36" pos:column="36">*<pos:position pos:line="36" pos:column="37"/></modifier></type><name pos:line="36" pos:column="37">p<pos:position pos:line="36" pos:column="38"/></name></decl>;<pos:position pos:line="36" pos:column="39"/></decl_stmt>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name><name pos:line="38" pos:column="22">opts<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">-&gt;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="28">mainline<pos:position pos:line="38" pos:column="36"/></name></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><call><name pos:line="39" pos:column="32">error<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><call><name pos:line="39" pos:column="38">_<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><literal type="string" pos:line="39" pos:column="40">"commit %s is a merge but no -m option was given."<pos:position pos:line="39" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="91"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="40" pos:column="33">oid_to_hex<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><operator pos:line="40" pos:column="44">&amp;<pos:position pos:line="40" pos:column="49"/></operator><name><name pos:line="40" pos:column="45">commit<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">-&gt;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="53">object<pos:position pos:line="40" pos:column="59"/></name><operator pos:line="40" pos:column="59">.<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="60">oid<pos:position pos:line="40" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></return></block></then></if>

		<for pos:line="42" pos:column="17">for <control pos:line="42" pos:column="21">(<init><expr><name pos:line="42" pos:column="22">cnt<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <literal type="number" pos:line="42" pos:column="28">1<pos:position pos:line="42" pos:column="29"/></literal></expr><operator pos:line="42" pos:column="29">,<pos:position pos:line="42" pos:column="30"/></operator> <expr><name pos:line="42" pos:column="31">p<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <name><name pos:line="42" pos:column="35">commit<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">parents<pos:position pos:line="42" pos:column="50"/></name></name></expr>;<pos:position pos:line="42" pos:column="51"/></init>
		     <condition><expr><name pos:line="43" pos:column="22">cnt<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">!=<pos:position pos:line="43" pos:column="28"/></operator> <name><name pos:line="43" pos:column="29">opts<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">mainline<pos:position pos:line="43" pos:column="43"/></name></name> <operator pos:line="43" pos:column="44">&amp;&amp;<pos:position pos:line="43" pos:column="54"/></operator> <name pos:line="43" pos:column="47">p<pos:position pos:line="43" pos:column="48"/></name></expr>;<pos:position pos:line="43" pos:column="49"/></condition>
		     <incr><expr><name pos:line="44" pos:column="22">cnt<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">++<pos:position pos:line="44" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="28"/></control>
			<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="25">p<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name><name pos:line="45" pos:column="29">p<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">-&gt;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="32">next<pos:position pos:line="45" pos:column="36"/></name></name></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt></block></for>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">cnt<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">!=<pos:position pos:line="46" pos:column="27"/></operator> <name><name pos:line="46" pos:column="28">opts<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">mainline<pos:position pos:line="46" pos:column="42"/></name></name> <operator pos:line="46" pos:column="43">||<pos:position pos:line="46" pos:column="45"/></operator> <operator pos:line="46" pos:column="46">!<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="47">p<pos:position pos:line="46" pos:column="48"/></name></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49">
			<block type="pseudo"><return pos:line="47" pos:column="25">return <expr><call><name pos:line="47" pos:column="32">error<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><call><name pos:line="47" pos:column="38">_<pos:position pos:line="47" pos:column="39"/></name><argument_list pos:line="47" pos:column="39">(<argument><expr><literal type="string" pos:line="47" pos:column="40">"commit %s does not have parent %d"<pos:position pos:line="47" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="76"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="48" pos:column="33">oid_to_hex<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><operator pos:line="48" pos:column="44">&amp;<pos:position pos:line="48" pos:column="49"/></operator><name><name pos:line="48" pos:column="45">commit<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">-&gt;<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="53">object<pos:position pos:line="48" pos:column="59"/></name><operator pos:line="48" pos:column="59">.<pos:position pos:line="48" pos:column="60"/></operator><name pos:line="48" pos:column="60">oid<pos:position pos:line="48" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="66">opts<pos:position pos:line="48" pos:column="70"/></name><operator pos:line="48" pos:column="70">-&gt;<pos:position pos:line="48" pos:column="75"/></operator><name pos:line="48" pos:column="72">mainline<pos:position pos:line="48" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="82"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="49" pos:column="17">parent<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <name><name pos:line="49" pos:column="26">p<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">item<pos:position pos:line="49" pos:column="33"/></name></name></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif> <elseif pos:line="50" pos:column="11">else <if pos:line="50" pos:column="16">if <condition pos:line="50" pos:column="19">(<expr><literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal> <operator pos:line="50" pos:column="22">&lt;<pos:position pos:line="50" pos:column="26"/></operator> <name><name pos:line="50" pos:column="24">opts<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">mainline<pos:position pos:line="50" pos:column="38"/></name></name></expr>)<pos:position pos:line="50" pos:column="39"/></condition><then pos:line="50" pos:column="39">
		<block type="pseudo"><return pos:line="51" pos:column="17">return <expr><call><name pos:line="51" pos:column="24">error<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><call><name pos:line="51" pos:column="30">_<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><literal type="string" pos:line="51" pos:column="32">"mainline was specified but commit %s is not a merge."<pos:position pos:line="51" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="87"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="52" pos:column="25">oid_to_hex<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><operator pos:line="52" pos:column="36">&amp;<pos:position pos:line="52" pos:column="41"/></operator><name><name pos:line="52" pos:column="37">commit<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">object<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">.<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="52">oid<pos:position pos:line="52" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></return></block></then></if></elseif>
	<else pos:line="53" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="17">parent<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <name><name pos:line="54" pos:column="26">commit<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">parents<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">-&gt;<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="43">item<pos:position pos:line="54" pos:column="47"/></name></name></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt></block></else></if>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">get_message<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">commit<pos:position pos:line="56" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="34">msg<pos:position pos:line="56" pos:column="37"/></name></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call> <operator pos:line="56" pos:column="39">!=<pos:position pos:line="56" pos:column="41"/></operator> <literal type="number" pos:line="56" pos:column="42">0<pos:position pos:line="56" pos:column="43"/></literal></expr>)<pos:position pos:line="56" pos:column="44"/></condition><then pos:line="56" pos:column="44">
		<block type="pseudo"><return pos:line="57" pos:column="17">return <expr><call><name pos:line="57" pos:column="24">error<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><call><name pos:line="57" pos:column="30">_<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><literal type="string" pos:line="57" pos:column="32">"cannot get commit message for %s"<pos:position pos:line="57" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="58" pos:column="25">oid_to_hex<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><operator pos:line="58" pos:column="36">&amp;<pos:position pos:line="58" pos:column="41"/></operator><name><name pos:line="58" pos:column="37">commit<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">object<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">.<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="52">oid<pos:position pos:line="58" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></return></block></then></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">opts<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">allow_ff<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">&amp;&amp;<pos:position pos:line="60" pos:column="38"/></operator> <operator pos:line="60" pos:column="31">!<pos:position pos:line="60" pos:column="32"/></operator><call><name pos:line="60" pos:column="32">is_fixup<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name pos:line="60" pos:column="41">command<pos:position pos:line="60" pos:column="48"/></name></expr></argument>)<pos:position pos:line="60" pos:column="49"/></argument_list></call> <operator pos:line="60" pos:column="50">&amp;&amp;<pos:position pos:line="60" pos:column="60"/></operator>
	    <operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><operator pos:line="61" pos:column="14">(<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">parent<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">&amp;&amp;<pos:position pos:line="61" pos:column="32"/></operator> <operator pos:line="61" pos:column="25">!<pos:position pos:line="61" pos:column="26"/></operator><call><name pos:line="61" pos:column="26">oidcmp<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><operator pos:line="61" pos:column="33">&amp;<pos:position pos:line="61" pos:column="38"/></operator><name><name pos:line="61" pos:column="34">parent<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">-&gt;<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="42">object<pos:position pos:line="61" pos:column="48"/></name><operator pos:line="61" pos:column="48">.<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="49">oid<pos:position pos:line="61" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="54">&amp;<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="55">head<pos:position pos:line="61" pos:column="59"/></name></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></call><operator pos:line="61" pos:column="60">)<pos:position pos:line="61" pos:column="61"/></operator> <operator pos:line="61" pos:column="62">||<pos:position pos:line="61" pos:column="64"/></operator>
	     <operator pos:line="62" pos:column="14">(<pos:position pos:line="62" pos:column="15"/></operator><operator pos:line="62" pos:column="15">!<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">parent<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">&amp;&amp;<pos:position pos:line="62" pos:column="33"/></operator> <name pos:line="62" pos:column="26">unborn<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">)<pos:position pos:line="62" pos:column="33"/></operator><operator pos:line="62" pos:column="33">)<pos:position pos:line="62" pos:column="34"/></operator></expr>)<pos:position pos:line="62" pos:column="35"/></condition><then pos:line="62" pos:column="35"> <block pos:line="62" pos:column="36">{
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><call><name pos:line="63" pos:column="21">is_rebase_i<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">opts<pos:position pos:line="63" pos:column="37"/></name></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="39"/></condition><then pos:line="63" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">write_author_script<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(<argument><expr><name><name pos:line="64" pos:column="45">msg<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">.<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="49">message<pos:position pos:line="64" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="65" pos:column="17">res<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <call><name pos:line="65" pos:column="23">fast_forward_to<pos:position pos:line="65" pos:column="38"/></name><argument_list pos:line="65" pos:column="38">(<argument><expr><operator pos:line="65" pos:column="39">&amp;<pos:position pos:line="65" pos:column="44"/></operator><name><name pos:line="65" pos:column="40">commit<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">-&gt;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="48">object<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">.<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="55">oid<pos:position pos:line="65" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="60">&amp;<pos:position pos:line="65" pos:column="65"/></operator><name pos:line="65" pos:column="61">head<pos:position pos:line="65" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="67">unborn<pos:position pos:line="65" pos:column="73"/></name></expr></argument>,
			<argument><expr><name pos:line="66" pos:column="25">opts<pos:position pos:line="66" pos:column="29"/></name></expr></argument>)<pos:position pos:line="66" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">res<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">||<pos:position pos:line="67" pos:column="27"/></operator> <name pos:line="67" pos:column="28">command<pos:position pos:line="67" pos:column="35"/></name> <operator pos:line="67" pos:column="36">!=<pos:position pos:line="67" pos:column="38"/></operator> <name pos:line="67" pos:column="39">TODO_REWORD<pos:position pos:line="67" pos:column="50"/></name></expr>)<pos:position pos:line="67" pos:column="51"/></condition><then pos:line="67" pos:column="51">
			<block type="pseudo"><goto pos:line="68" pos:column="25">goto <name pos:line="68" pos:column="30">leave<pos:position pos:line="68" pos:column="35"/></name>;<pos:position pos:line="68" pos:column="36"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="69" pos:column="17">flags<pos:position pos:line="69" pos:column="22"/></name> <operator pos:line="69" pos:column="23">|=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">EDIT_MSG<pos:position pos:line="69" pos:column="34"/></name> <operator pos:line="69" pos:column="35">|<pos:position pos:line="69" pos:column="36"/></operator> <name pos:line="69" pos:column="37">AMEND_MSG<pos:position pos:line="69" pos:column="46"/></name></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">command<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">==<pos:position pos:line="70" pos:column="31"/></operator> <name pos:line="70" pos:column="32">TODO_REWORD<pos:position pos:line="70" pos:column="43"/></name></expr>)<pos:position pos:line="70" pos:column="44"/></condition><then pos:line="70" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="25">flags<pos:position pos:line="71" pos:column="30"/></name> <operator pos:line="71" pos:column="31">|=<pos:position pos:line="71" pos:column="33"/></operator> <name pos:line="71" pos:column="34">VERIFY_MSG<pos:position pos:line="71" pos:column="44"/></name></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="72" pos:column="17">msg_file<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">=<pos:position pos:line="72" pos:column="27"/></operator> <name pos:line="72" pos:column="28">NULL<pos:position pos:line="72" pos:column="32"/></name></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
		<goto pos:line="73" pos:column="17">goto <name pos:line="73" pos:column="22">fast_forward_edit<pos:position pos:line="73" pos:column="39"/></name>;<pos:position pos:line="73" pos:column="40"/></goto>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">parent<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">&amp;&amp;<pos:position pos:line="75" pos:column="30"/></operator> <call><name pos:line="75" pos:column="23">parse_commit<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">(<argument><expr><name pos:line="75" pos:column="36">parent<pos:position pos:line="75" pos:column="42"/></name></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></call> <operator pos:line="75" pos:column="44">&lt;<pos:position pos:line="75" pos:column="48"/></operator> <literal type="number" pos:line="75" pos:column="46">0<pos:position pos:line="75" pos:column="47"/></literal></expr>)<pos:position pos:line="75" pos:column="48"/></condition><then pos:line="75" pos:column="48">
		<comment type="block" pos:line="76" pos:column="17">/* TRANSLATORS: The first %s will be a "todo" command like
		   "revert" or "pick", the second %s a SHA1. */</comment>
		<block type="pseudo"><return pos:line="78" pos:column="17">return <expr><call><name pos:line="78" pos:column="24">error<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><call><name pos:line="78" pos:column="30">_<pos:position pos:line="78" pos:column="31"/></name><argument_list pos:line="78" pos:column="31">(<argument><expr><literal type="string" pos:line="78" pos:column="32">"%s: cannot parse parent commit %s"<pos:position pos:line="78" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="79" pos:column="25">command_to_string<pos:position pos:line="79" pos:column="42"/></name><argument_list pos:line="79" pos:column="42">(<argument><expr><name pos:line="79" pos:column="43">command<pos:position pos:line="79" pos:column="50"/></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="80" pos:column="25">oid_to_hex<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><operator pos:line="80" pos:column="36">&amp;<pos:position pos:line="80" pos:column="41"/></operator><name><name pos:line="80" pos:column="37">parent<pos:position pos:line="80" pos:column="43"/></name><operator pos:line="80" pos:column="43">-&gt;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="45">object<pos:position pos:line="80" pos:column="51"/></name><operator pos:line="80" pos:column="51">.<pos:position pos:line="80" pos:column="52"/></operator><name pos:line="80" pos:column="52">oid<pos:position pos:line="80" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="58"/></return></block></then></if>

	<comment type="block" pos:line="82" pos:column="9">/*
	 * "commit" is an existing commit.  We would want to apply
	 * the difference it introduces since its first parent "prev"
	 * on top of the current HEAD if we are cherry-pick.  Or the
	 * reverse of it if we are revert.
	 */</comment>

	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">command<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">==<pos:position pos:line="89" pos:column="23"/></operator> <name pos:line="89" pos:column="24">TODO_REVERT<pos:position pos:line="89" pos:column="35"/></name></expr>)<pos:position pos:line="89" pos:column="36"/></condition><then pos:line="89" pos:column="36"> <block pos:line="89" pos:column="37">{
		<expr_stmt><expr><name pos:line="90" pos:column="17">base<pos:position pos:line="90" pos:column="21"/></name> <operator pos:line="90" pos:column="22">=<pos:position pos:line="90" pos:column="23"/></operator> <name pos:line="90" pos:column="24">commit<pos:position pos:line="90" pos:column="30"/></name></expr>;<pos:position pos:line="90" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="91" pos:column="17">base_label<pos:position pos:line="91" pos:column="27"/></name> <operator pos:line="91" pos:column="28">=<pos:position pos:line="91" pos:column="29"/></operator> <name><name pos:line="91" pos:column="30">msg<pos:position pos:line="91" pos:column="33"/></name><operator pos:line="91" pos:column="33">.<pos:position pos:line="91" pos:column="34"/></operator><name pos:line="91" pos:column="34">label<pos:position pos:line="91" pos:column="39"/></name></name></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="92" pos:column="17">next<pos:position pos:line="92" pos:column="21"/></name> <operator pos:line="92" pos:column="22">=<pos:position pos:line="92" pos:column="23"/></operator> <name pos:line="92" pos:column="24">parent<pos:position pos:line="92" pos:column="30"/></name></expr>;<pos:position pos:line="92" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="93" pos:column="17">next_label<pos:position pos:line="93" pos:column="27"/></name> <operator pos:line="93" pos:column="28">=<pos:position pos:line="93" pos:column="29"/></operator> <name><name pos:line="93" pos:column="30">msg<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">.<pos:position pos:line="93" pos:column="34"/></operator><name pos:line="93" pos:column="34">parent_label<pos:position pos:line="93" pos:column="46"/></name></name></expr>;<pos:position pos:line="93" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">strbuf_addstr<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><operator pos:line="94" pos:column="31">&amp;<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="32">msgbuf<pos:position pos:line="94" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="40">"Revert \""<pos:position pos:line="94" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">strbuf_addstr<pos:position pos:line="95" pos:column="30"/></name><argument_list pos:line="95" pos:column="30">(<argument><expr><operator pos:line="95" pos:column="31">&amp;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="32">msgbuf<pos:position pos:line="95" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="40">msg<pos:position pos:line="95" pos:column="43"/></name><operator pos:line="95" pos:column="43">.<pos:position pos:line="95" pos:column="44"/></operator><name pos:line="95" pos:column="44">subject<pos:position pos:line="95" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">strbuf_addstr<pos:position pos:line="96" pos:column="30"/></name><argument_list pos:line="96" pos:column="30">(<argument><expr><operator pos:line="96" pos:column="31">&amp;<pos:position pos:line="96" pos:column="36"/></operator><name pos:line="96" pos:column="32">msgbuf<pos:position pos:line="96" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="40">"\"\n\nThis reverts commit "<pos:position pos:line="96" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">strbuf_addstr<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><operator pos:line="97" pos:column="31">&amp;<pos:position pos:line="97" pos:column="36"/></operator><name pos:line="97" pos:column="32">msgbuf<pos:position pos:line="97" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="40">oid_to_hex<pos:position pos:line="97" pos:column="50"/></name><argument_list pos:line="97" pos:column="50">(<argument><expr><operator pos:line="97" pos:column="51">&amp;<pos:position pos:line="97" pos:column="56"/></operator><name><name pos:line="97" pos:column="52">commit<pos:position pos:line="97" pos:column="58"/></name><operator pos:line="97" pos:column="58">-&gt;<pos:position pos:line="97" pos:column="63"/></operator><name pos:line="97" pos:column="60">object<pos:position pos:line="97" pos:column="66"/></name><operator pos:line="97" pos:column="66">.<pos:position pos:line="97" pos:column="67"/></operator><name pos:line="97" pos:column="67">oid<pos:position pos:line="97" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="73"/></expr_stmt>

		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><name><name pos:line="99" pos:column="21">commit<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">-&gt;<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="29">parents<pos:position pos:line="99" pos:column="36"/></name></name> <operator pos:line="99" pos:column="37">&amp;&amp;<pos:position pos:line="99" pos:column="47"/></operator> <name><name pos:line="99" pos:column="40">commit<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">-&gt;<pos:position pos:line="99" pos:column="51"/></operator><name pos:line="99" pos:column="48">parents<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">-&gt;<pos:position pos:line="99" pos:column="60"/></operator><name pos:line="99" pos:column="57">next<pos:position pos:line="99" pos:column="61"/></name></name></expr>)<pos:position pos:line="99" pos:column="62"/></condition><then pos:line="99" pos:column="62"> <block pos:line="99" pos:column="63">{
			<expr_stmt><expr><call><name pos:line="100" pos:column="25">strbuf_addstr<pos:position pos:line="100" pos:column="38"/></name><argument_list pos:line="100" pos:column="38">(<argument><expr><operator pos:line="100" pos:column="39">&amp;<pos:position pos:line="100" pos:column="44"/></operator><name pos:line="100" pos:column="40">msgbuf<pos:position pos:line="100" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="48">", reversing\nchanges made to "<pos:position pos:line="100" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="101" pos:column="25">strbuf_addstr<pos:position pos:line="101" pos:column="38"/></name><argument_list pos:line="101" pos:column="38">(<argument><expr><operator pos:line="101" pos:column="39">&amp;<pos:position pos:line="101" pos:column="44"/></operator><name pos:line="101" pos:column="40">msgbuf<pos:position pos:line="101" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="48">oid_to_hex<pos:position pos:line="101" pos:column="58"/></name><argument_list pos:line="101" pos:column="58">(<argument><expr><operator pos:line="101" pos:column="59">&amp;<pos:position pos:line="101" pos:column="64"/></operator><name><name pos:line="101" pos:column="60">parent<pos:position pos:line="101" pos:column="66"/></name><operator pos:line="101" pos:column="66">-&gt;<pos:position pos:line="101" pos:column="71"/></operator><name pos:line="101" pos:column="68">object<pos:position pos:line="101" pos:column="74"/></name><operator pos:line="101" pos:column="74">.<pos:position pos:line="101" pos:column="75"/></operator><name pos:line="101" pos:column="75">oid<pos:position pos:line="101" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="102" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">strbuf_addstr<pos:position pos:line="103" pos:column="30"/></name><argument_list pos:line="103" pos:column="30">(<argument><expr><operator pos:line="103" pos:column="31">&amp;<pos:position pos:line="103" pos:column="36"/></operator><name pos:line="103" pos:column="32">msgbuf<pos:position pos:line="103" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="40">".\n"<pos:position pos:line="103" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="104" pos:column="10"/></block></then> <else pos:line="104" pos:column="11">else <block pos:line="104" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="105" pos:column="17">const<pos:position pos:line="105" pos:column="22"/></specifier> <name pos:line="105" pos:column="23">char<pos:position pos:line="105" pos:column="27"/></name> <modifier pos:line="105" pos:column="28">*<pos:position pos:line="105" pos:column="29"/></modifier></type><name pos:line="105" pos:column="29">p<pos:position pos:line="105" pos:column="30"/></name></decl>;<pos:position pos:line="105" pos:column="31"/></decl_stmt>

		<expr_stmt><expr><name pos:line="107" pos:column="17">base<pos:position pos:line="107" pos:column="21"/></name> <operator pos:line="107" pos:column="22">=<pos:position pos:line="107" pos:column="23"/></operator> <name pos:line="107" pos:column="24">parent<pos:position pos:line="107" pos:column="30"/></name></expr>;<pos:position pos:line="107" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="108" pos:column="17">base_label<pos:position pos:line="108" pos:column="27"/></name> <operator pos:line="108" pos:column="28">=<pos:position pos:line="108" pos:column="29"/></operator> <name><name pos:line="108" pos:column="30">msg<pos:position pos:line="108" pos:column="33"/></name><operator pos:line="108" pos:column="33">.<pos:position pos:line="108" pos:column="34"/></operator><name pos:line="108" pos:column="34">parent_label<pos:position pos:line="108" pos:column="46"/></name></name></expr>;<pos:position pos:line="108" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="109" pos:column="17">next<pos:position pos:line="109" pos:column="21"/></name> <operator pos:line="109" pos:column="22">=<pos:position pos:line="109" pos:column="23"/></operator> <name pos:line="109" pos:column="24">commit<pos:position pos:line="109" pos:column="30"/></name></expr>;<pos:position pos:line="109" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="110" pos:column="17">next_label<pos:position pos:line="110" pos:column="27"/></name> <operator pos:line="110" pos:column="28">=<pos:position pos:line="110" pos:column="29"/></operator> <name><name pos:line="110" pos:column="30">msg<pos:position pos:line="110" pos:column="33"/></name><operator pos:line="110" pos:column="33">.<pos:position pos:line="110" pos:column="34"/></operator><name pos:line="110" pos:column="34">label<pos:position pos:line="110" pos:column="39"/></name></name></expr>;<pos:position pos:line="110" pos:column="40"/></expr_stmt>

		<comment type="block" pos:line="112" pos:column="17">/* Append the commit log message to msgbuf. */</comment>
		<if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><call><name pos:line="113" pos:column="21">find_commit_subject<pos:position pos:line="113" pos:column="40"/></name><argument_list pos:line="113" pos:column="40">(<argument><expr><name><name pos:line="113" pos:column="41">msg<pos:position pos:line="113" pos:column="44"/></name><operator pos:line="113" pos:column="44">.<pos:position pos:line="113" pos:column="45"/></operator><name pos:line="113" pos:column="45">message<pos:position pos:line="113" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="54">&amp;<pos:position pos:line="113" pos:column="59"/></operator><name pos:line="113" pos:column="55">p<pos:position pos:line="113" pos:column="56"/></name></expr></argument>)<pos:position pos:line="113" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="58"/></condition><then pos:line="113" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="25">strbuf_addstr<pos:position pos:line="114" pos:column="38"/></name><argument_list pos:line="114" pos:column="38">(<argument><expr><operator pos:line="114" pos:column="39">&amp;<pos:position pos:line="114" pos:column="44"/></operator><name pos:line="114" pos:column="40">msgbuf<pos:position pos:line="114" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="48">p<pos:position pos:line="114" pos:column="49"/></name></expr></argument>)<pos:position pos:line="114" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="51"/></expr_stmt></block></then></if>

		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name><name pos:line="116" pos:column="21">opts<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">-&gt;<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="27">record_origin<pos:position pos:line="116" pos:column="40"/></name></name></expr>)<pos:position pos:line="116" pos:column="41"/></condition><then pos:line="116" pos:column="41"> <block pos:line="116" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="117" pos:column="25">strbuf_complete_line<pos:position pos:line="117" pos:column="45"/></name><argument_list pos:line="117" pos:column="45">(<argument><expr><operator pos:line="117" pos:column="46">&amp;<pos:position pos:line="117" pos:column="51"/></operator><name pos:line="117" pos:column="47">msgbuf<pos:position pos:line="117" pos:column="53"/></name></expr></argument>)<pos:position pos:line="117" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="55"/></expr_stmt>
			<if pos:line="118" pos:column="25">if <condition pos:line="118" pos:column="28">(<expr><operator pos:line="118" pos:column="29">!<pos:position pos:line="118" pos:column="30"/></operator><call><name pos:line="118" pos:column="30">has_conforming_footer<pos:position pos:line="118" pos:column="51"/></name><argument_list pos:line="118" pos:column="51">(<argument><expr><operator pos:line="118" pos:column="52">&amp;<pos:position pos:line="118" pos:column="57"/></operator><name pos:line="118" pos:column="53">msgbuf<pos:position pos:line="118" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="61">NULL<pos:position pos:line="118" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="67">0<pos:position pos:line="118" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="70"/></condition><then pos:line="118" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="33">strbuf_addch<pos:position pos:line="119" pos:column="45"/></name><argument_list pos:line="119" pos:column="45">(<argument><expr><operator pos:line="119" pos:column="46">&amp;<pos:position pos:line="119" pos:column="51"/></operator><name pos:line="119" pos:column="47">msgbuf<pos:position pos:line="119" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="119" pos:column="55">'\n'<pos:position pos:line="119" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="61"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">strbuf_addstr<pos:position pos:line="120" pos:column="38"/></name><argument_list pos:line="120" pos:column="38">(<argument><expr><operator pos:line="120" pos:column="39">&amp;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="40">msgbuf<pos:position pos:line="120" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="48">cherry_picked_prefix<pos:position pos:line="120" pos:column="68"/></name></expr></argument>)<pos:position pos:line="120" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="121" pos:column="25">strbuf_addstr<pos:position pos:line="121" pos:column="38"/></name><argument_list pos:line="121" pos:column="38">(<argument><expr><operator pos:line="121" pos:column="39">&amp;<pos:position pos:line="121" pos:column="44"/></operator><name pos:line="121" pos:column="40">msgbuf<pos:position pos:line="121" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="48">oid_to_hex<pos:position pos:line="121" pos:column="58"/></name><argument_list pos:line="121" pos:column="58">(<argument><expr><operator pos:line="121" pos:column="59">&amp;<pos:position pos:line="121" pos:column="64"/></operator><name><name pos:line="121" pos:column="60">commit<pos:position pos:line="121" pos:column="66"/></name><operator pos:line="121" pos:column="66">-&gt;<pos:position pos:line="121" pos:column="71"/></operator><name pos:line="121" pos:column="68">object<pos:position pos:line="121" pos:column="74"/></name><operator pos:line="121" pos:column="74">.<pos:position pos:line="121" pos:column="75"/></operator><name pos:line="121" pos:column="75">oid<pos:position pos:line="121" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="122" pos:column="25">strbuf_addstr<pos:position pos:line="122" pos:column="38"/></name><argument_list pos:line="122" pos:column="38">(<argument><expr><operator pos:line="122" pos:column="39">&amp;<pos:position pos:line="122" pos:column="44"/></operator><name pos:line="122" pos:column="40">msgbuf<pos:position pos:line="122" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="48">")\n"<pos:position pos:line="122" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="123" pos:column="18"/></block></then></if>
	}<pos:position pos:line="124" pos:column="10"/></block></else></if>

	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><name pos:line="126" pos:column="13">command<pos:position pos:line="126" pos:column="20"/></name> <operator pos:line="126" pos:column="21">==<pos:position pos:line="126" pos:column="23"/></operator> <name pos:line="126" pos:column="24">TODO_REWORD<pos:position pos:line="126" pos:column="35"/></name></expr>)<pos:position pos:line="126" pos:column="36"/></condition><then pos:line="126" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="17">flags<pos:position pos:line="127" pos:column="22"/></name> <operator pos:line="127" pos:column="23">|=<pos:position pos:line="127" pos:column="25"/></operator> <name pos:line="127" pos:column="26">EDIT_MSG<pos:position pos:line="127" pos:column="34"/></name> <operator pos:line="127" pos:column="35">|<pos:position pos:line="127" pos:column="36"/></operator> <name pos:line="127" pos:column="37">VERIFY_MSG<pos:position pos:line="127" pos:column="47"/></name></expr>;<pos:position pos:line="127" pos:column="48"/></expr_stmt></block></then>
	<elseif pos:line="128" pos:column="9">else <if pos:line="128" pos:column="14">if <condition pos:line="128" pos:column="17">(<expr><call><name pos:line="128" pos:column="18">is_fixup<pos:position pos:line="128" pos:column="26"/></name><argument_list pos:line="128" pos:column="26">(<argument><expr><name pos:line="128" pos:column="27">command<pos:position pos:line="128" pos:column="34"/></name></expr></argument>)<pos:position pos:line="128" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="36"/></condition><then pos:line="128" pos:column="36"> <block pos:line="128" pos:column="37">{
		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><call><name pos:line="129" pos:column="21">update_squash_messages<pos:position pos:line="129" pos:column="43"/></name><argument_list pos:line="129" pos:column="43">(<argument><expr><name pos:line="129" pos:column="44">command<pos:position pos:line="129" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="53">commit<pos:position pos:line="129" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="61">opts<pos:position pos:line="129" pos:column="65"/></name></expr></argument>)<pos:position pos:line="129" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="67"/></condition><then pos:line="129" pos:column="67">
			<block type="pseudo"><return pos:line="130" pos:column="25">return <expr><operator pos:line="130" pos:column="32">-<pos:position pos:line="130" pos:column="33"/></operator><literal type="number" pos:line="130" pos:column="33">1<pos:position pos:line="130" pos:column="34"/></literal></expr>;<pos:position pos:line="130" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="131" pos:column="17">flags<pos:position pos:line="131" pos:column="22"/></name> <operator pos:line="131" pos:column="23">|=<pos:position pos:line="131" pos:column="25"/></operator> <name pos:line="131" pos:column="26">AMEND_MSG<pos:position pos:line="131" pos:column="35"/></name></expr>;<pos:position pos:line="131" pos:column="36"/></expr_stmt>
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><operator pos:line="132" pos:column="21">!<pos:position pos:line="132" pos:column="22"/></operator><name pos:line="132" pos:column="22">final_fixup<pos:position pos:line="132" pos:column="33"/></name></expr>)<pos:position pos:line="132" pos:column="34"/></condition><then pos:line="132" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="25">msg_file<pos:position pos:line="133" pos:column="33"/></name> <operator pos:line="133" pos:column="34">=<pos:position pos:line="133" pos:column="35"/></operator> <call><name pos:line="133" pos:column="36">rebase_path_squash_msg<pos:position pos:line="133" pos:column="58"/></name><argument_list pos:line="133" pos:column="58">()<pos:position pos:line="133" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="61"/></expr_stmt></block></then>
		<elseif pos:line="134" pos:column="17">else <if pos:line="134" pos:column="22">if <condition pos:line="134" pos:column="25">(<expr><call><name pos:line="134" pos:column="26">file_exists<pos:position pos:line="134" pos:column="37"/></name><argument_list pos:line="134" pos:column="37">(<argument><expr><call><name pos:line="134" pos:column="38">rebase_path_fixup_msg<pos:position pos:line="134" pos:column="59"/></name><argument_list pos:line="134" pos:column="59">()<pos:position pos:line="134" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="134" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="63"/></condition><then pos:line="134" pos:column="63"> <block pos:line="134" pos:column="64">{
			<expr_stmt><expr><name pos:line="135" pos:column="25">flags<pos:position pos:line="135" pos:column="30"/></name> <operator pos:line="135" pos:column="31">|=<pos:position pos:line="135" pos:column="33"/></operator> <name pos:line="135" pos:column="34">CLEANUP_MSG<pos:position pos:line="135" pos:column="45"/></name></expr>;<pos:position pos:line="135" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="136" pos:column="25">msg_file<pos:position pos:line="136" pos:column="33"/></name> <operator pos:line="136" pos:column="34">=<pos:position pos:line="136" pos:column="35"/></operator> <call><name pos:line="136" pos:column="36">rebase_path_fixup_msg<pos:position pos:line="136" pos:column="57"/></name><argument_list pos:line="136" pos:column="57">()<pos:position pos:line="136" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="137" pos:column="18"/></block></then></if></elseif> <else pos:line="137" pos:column="19">else <block pos:line="137" pos:column="24">{
			<decl_stmt><decl><type><specifier pos:line="138" pos:column="25">const<pos:position pos:line="138" pos:column="30"/></specifier> <name pos:line="138" pos:column="31">char<pos:position pos:line="138" pos:column="35"/></name> <modifier pos:line="138" pos:column="36">*<pos:position pos:line="138" pos:column="37"/></modifier></type><name pos:line="138" pos:column="37">dest<pos:position pos:line="138" pos:column="41"/></name> <init pos:line="138" pos:column="42">= <expr><call><name pos:line="138" pos:column="44">git_path_squash_msg<pos:position pos:line="138" pos:column="63"/></name><argument_list pos:line="138" pos:column="63">()<pos:position pos:line="138" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="138" pos:column="66"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="139" pos:column="25">unlink<pos:position pos:line="139" pos:column="31"/></name><argument_list pos:line="139" pos:column="31">(<argument><expr><name pos:line="139" pos:column="32">dest<pos:position pos:line="139" pos:column="36"/></name></expr></argument>)<pos:position pos:line="139" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="38"/></expr_stmt>
			<if pos:line="140" pos:column="25">if <condition pos:line="140" pos:column="28">(<expr><call><name pos:line="140" pos:column="29">copy_file<pos:position pos:line="140" pos:column="38"/></name><argument_list pos:line="140" pos:column="38">(<argument><expr><name pos:line="140" pos:column="39">dest<pos:position pos:line="140" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="140" pos:column="45">rebase_path_squash_msg<pos:position pos:line="140" pos:column="67"/></name><argument_list pos:line="140" pos:column="67">()<pos:position pos:line="140" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="140" pos:column="71">0666<pos:position pos:line="140" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="77"/></condition><then pos:line="140" pos:column="77">
				<block type="pseudo"><return pos:line="141" pos:column="33">return <expr><call><name pos:line="141" pos:column="40">error<pos:position pos:line="141" pos:column="45"/></name><argument_list pos:line="141" pos:column="45">(<argument><expr><call><name pos:line="141" pos:column="46">_<pos:position pos:line="141" pos:column="47"/></name><argument_list pos:line="141" pos:column="47">(<argument><expr><literal type="string" pos:line="141" pos:column="48">"could not rename '%s' to '%s'"<pos:position pos:line="141" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="80"/></argument_list></call></expr></argument>,
					     <argument><expr><call><name pos:line="142" pos:column="46">rebase_path_squash_msg<pos:position pos:line="142" pos:column="68"/></name><argument_list pos:line="142" pos:column="68">()<pos:position pos:line="142" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="142" pos:column="72">dest<pos:position pos:line="142" pos:column="76"/></name></expr></argument>)<pos:position pos:line="142" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="78"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="143" pos:column="25">unlink<pos:position pos:line="143" pos:column="31"/></name><argument_list pos:line="143" pos:column="31">(<argument><expr><call><name pos:line="143" pos:column="32">git_path_merge_msg<pos:position pos:line="143" pos:column="50"/></name><argument_list pos:line="143" pos:column="50">()<pos:position pos:line="143" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="143" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="144" pos:column="25">msg_file<pos:position pos:line="144" pos:column="33"/></name> <operator pos:line="144" pos:column="34">=<pos:position pos:line="144" pos:column="35"/></operator> <name pos:line="144" pos:column="36">dest<pos:position pos:line="144" pos:column="40"/></name></expr>;<pos:position pos:line="144" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="145" pos:column="25">flags<pos:position pos:line="145" pos:column="30"/></name> <operator pos:line="145" pos:column="31">|=<pos:position pos:line="145" pos:column="33"/></operator> <name pos:line="145" pos:column="34">EDIT_MSG<pos:position pos:line="145" pos:column="42"/></name></expr>;<pos:position pos:line="145" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="146" pos:column="18"/></block></else></if>
	}<pos:position pos:line="147" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><call><name pos:line="149" pos:column="13">is_rebase_i<pos:position pos:line="149" pos:column="24"/></name><argument_list pos:line="149" pos:column="24">(<argument><expr><name pos:line="149" pos:column="25">opts<pos:position pos:line="149" pos:column="29"/></name></expr></argument>)<pos:position pos:line="149" pos:column="30"/></argument_list></call> <operator pos:line="149" pos:column="31">&amp;&amp;<pos:position pos:line="149" pos:column="41"/></operator> <call><name pos:line="149" pos:column="34">write_author_script<pos:position pos:line="149" pos:column="53"/></name><argument_list pos:line="149" pos:column="53">(<argument><expr><name><name pos:line="149" pos:column="54">msg<pos:position pos:line="149" pos:column="57"/></name><operator pos:line="149" pos:column="57">.<pos:position pos:line="149" pos:column="58"/></operator><name pos:line="149" pos:column="58">message<pos:position pos:line="149" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="66"/></argument_list></call> <operator pos:line="149" pos:column="67">&lt;<pos:position pos:line="149" pos:column="71"/></operator> <literal type="number" pos:line="149" pos:column="69">0<pos:position pos:line="149" pos:column="70"/></literal></expr>)<pos:position pos:line="149" pos:column="71"/></condition><then pos:line="149" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="17">res<pos:position pos:line="150" pos:column="20"/></name> <operator pos:line="150" pos:column="21">=<pos:position pos:line="150" pos:column="22"/></operator> <operator pos:line="150" pos:column="23">-<pos:position pos:line="150" pos:column="24"/></operator><literal type="number" pos:line="150" pos:column="24">1<pos:position pos:line="150" pos:column="25"/></literal></expr>;<pos:position pos:line="150" pos:column="26"/></expr_stmt></block></then>
	<elseif pos:line="151" pos:column="9">else <if pos:line="151" pos:column="14">if <condition pos:line="151" pos:column="17">(<expr><operator pos:line="151" pos:column="18">!<pos:position pos:line="151" pos:column="19"/></operator><name><name pos:line="151" pos:column="19">opts<pos:position pos:line="151" pos:column="23"/></name><operator pos:line="151" pos:column="23">-&gt;<pos:position pos:line="151" pos:column="28"/></operator><name pos:line="151" pos:column="25">strategy<pos:position pos:line="151" pos:column="33"/></name></name> <operator pos:line="151" pos:column="34">||<pos:position pos:line="151" pos:column="36"/></operator> <operator pos:line="151" pos:column="37">!<pos:position pos:line="151" pos:column="38"/></operator><call><name pos:line="151" pos:column="38">strcmp<pos:position pos:line="151" pos:column="44"/></name><argument_list pos:line="151" pos:column="44">(<argument><expr><name><name pos:line="151" pos:column="45">opts<pos:position pos:line="151" pos:column="49"/></name><operator pos:line="151" pos:column="49">-&gt;<pos:position pos:line="151" pos:column="54"/></operator><name pos:line="151" pos:column="51">strategy<pos:position pos:line="151" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="61">"recursive"<pos:position pos:line="151" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="73"/></argument_list></call> <operator pos:line="151" pos:column="74">||<pos:position pos:line="151" pos:column="76"/></operator> <name pos:line="151" pos:column="77">command<pos:position pos:line="151" pos:column="84"/></name> <operator pos:line="151" pos:column="85">==<pos:position pos:line="151" pos:column="87"/></operator> <name pos:line="151" pos:column="88">TODO_REVERT<pos:position pos:line="151" pos:column="99"/></name></expr>)<pos:position pos:line="151" pos:column="100"/></condition><then pos:line="151" pos:column="100"> <block pos:line="151" pos:column="101">{
		<expr_stmt><expr><name pos:line="152" pos:column="17">res<pos:position pos:line="152" pos:column="20"/></name> <operator pos:line="152" pos:column="21">=<pos:position pos:line="152" pos:column="22"/></operator> <call><name pos:line="152" pos:column="23">do_recursive_merge<pos:position pos:line="152" pos:column="41"/></name><argument_list pos:line="152" pos:column="41">(<argument><expr><name pos:line="152" pos:column="42">base<pos:position pos:line="152" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="48">next<pos:position pos:line="152" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="54">base_label<pos:position pos:line="152" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="66">next_label<pos:position pos:line="152" pos:column="76"/></name></expr></argument>,
					 <argument><expr><operator pos:line="153" pos:column="42">&amp;<pos:position pos:line="153" pos:column="47"/></operator><name pos:line="153" pos:column="43">head<pos:position pos:line="153" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="49">&amp;<pos:position pos:line="153" pos:column="54"/></operator><name pos:line="153" pos:column="50">msgbuf<pos:position pos:line="153" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="58">opts<pos:position pos:line="153" pos:column="62"/></name></expr></argument>)<pos:position pos:line="153" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="64"/></expr_stmt>
		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><name pos:line="154" pos:column="21">res<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">&lt;<pos:position pos:line="154" pos:column="29"/></operator> <literal type="number" pos:line="154" pos:column="27">0<pos:position pos:line="154" pos:column="28"/></literal></expr>)<pos:position pos:line="154" pos:column="29"/></condition><then pos:line="154" pos:column="29">
			<block type="pseudo"><return pos:line="155" pos:column="25">return <expr><name pos:line="155" pos:column="32">res<pos:position pos:line="155" pos:column="35"/></name></expr>;<pos:position pos:line="155" pos:column="36"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="156" pos:column="17">res<pos:position pos:line="156" pos:column="20"/></name> <operator pos:line="156" pos:column="21">|=<pos:position pos:line="156" pos:column="23"/></operator> <call><name pos:line="156" pos:column="24">write_message<pos:position pos:line="156" pos:column="37"/></name><argument_list pos:line="156" pos:column="37">(<argument><expr><name><name pos:line="156" pos:column="38">msgbuf<pos:position pos:line="156" pos:column="44"/></name><operator pos:line="156" pos:column="44">.<pos:position pos:line="156" pos:column="45"/></operator><name pos:line="156" pos:column="45">buf<pos:position pos:line="156" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="50">msgbuf<pos:position pos:line="156" pos:column="56"/></name><operator pos:line="156" pos:column="56">.<pos:position pos:line="156" pos:column="57"/></operator><name pos:line="156" pos:column="57">len<pos:position pos:line="156" pos:column="60"/></name></name></expr></argument>,
				     <argument><expr><call><name pos:line="157" pos:column="38">git_path_merge_msg<pos:position pos:line="157" pos:column="56"/></name><argument_list pos:line="157" pos:column="56">()<pos:position pos:line="157" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="60">0<pos:position pos:line="157" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="158" pos:column="10"/></block></then></if></elseif> <else pos:line="158" pos:column="11">else <block pos:line="158" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="159" pos:column="17">struct<pos:position pos:line="159" pos:column="23"/></name> <name pos:line="159" pos:column="24">commit_list<pos:position pos:line="159" pos:column="35"/></name></name> <modifier pos:line="159" pos:column="36">*<pos:position pos:line="159" pos:column="37"/></modifier></type><name pos:line="159" pos:column="37">common<pos:position pos:line="159" pos:column="43"/></name> <init pos:line="159" pos:column="44">= <expr><name pos:line="159" pos:column="46">NULL<pos:position pos:line="159" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="159" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="160" pos:column="17">struct<pos:position pos:line="160" pos:column="23"/></name> <name pos:line="160" pos:column="24">commit_list<pos:position pos:line="160" pos:column="35"/></name></name> <modifier pos:line="160" pos:column="36">*<pos:position pos:line="160" pos:column="37"/></modifier></type><name pos:line="160" pos:column="37">remotes<pos:position pos:line="160" pos:column="44"/></name> <init pos:line="160" pos:column="45">= <expr><name pos:line="160" pos:column="47">NULL<pos:position pos:line="160" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="160" pos:column="52"/></decl_stmt>

		<expr_stmt><expr><name pos:line="162" pos:column="17">res<pos:position pos:line="162" pos:column="20"/></name> <operator pos:line="162" pos:column="21">=<pos:position pos:line="162" pos:column="22"/></operator> <call><name pos:line="162" pos:column="23">write_message<pos:position pos:line="162" pos:column="36"/></name><argument_list pos:line="162" pos:column="36">(<argument><expr><name><name pos:line="162" pos:column="37">msgbuf<pos:position pos:line="162" pos:column="43"/></name><operator pos:line="162" pos:column="43">.<pos:position pos:line="162" pos:column="44"/></operator><name pos:line="162" pos:column="44">buf<pos:position pos:line="162" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="49">msgbuf<pos:position pos:line="162" pos:column="55"/></name><operator pos:line="162" pos:column="55">.<pos:position pos:line="162" pos:column="56"/></operator><name pos:line="162" pos:column="56">len<pos:position pos:line="162" pos:column="59"/></name></name></expr></argument>,
				    <argument><expr><call><name pos:line="163" pos:column="37">git_path_merge_msg<pos:position pos:line="163" pos:column="55"/></name><argument_list pos:line="163" pos:column="55">()<pos:position pos:line="163" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="59">0<pos:position pos:line="163" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="62"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="165" pos:column="17">commit_list_insert<pos:position pos:line="165" pos:column="35"/></name><argument_list pos:line="165" pos:column="35">(<argument><expr><name pos:line="165" pos:column="36">base<pos:position pos:line="165" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="165" pos:column="42">&amp;<pos:position pos:line="165" pos:column="47"/></operator><name pos:line="165" pos:column="43">common<pos:position pos:line="165" pos:column="49"/></name></expr></argument>)<pos:position pos:line="165" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="166" pos:column="17">commit_list_insert<pos:position pos:line="166" pos:column="35"/></name><argument_list pos:line="166" pos:column="35">(<argument><expr><name pos:line="166" pos:column="36">next<pos:position pos:line="166" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="42">&amp;<pos:position pos:line="166" pos:column="47"/></operator><name pos:line="166" pos:column="43">remotes<pos:position pos:line="166" pos:column="50"/></name></expr></argument>)<pos:position pos:line="166" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="167" pos:column="17">res<pos:position pos:line="167" pos:column="20"/></name> <operator pos:line="167" pos:column="21">|=<pos:position pos:line="167" pos:column="23"/></operator> <call><name pos:line="167" pos:column="24">try_merge_command<pos:position pos:line="167" pos:column="41"/></name><argument_list pos:line="167" pos:column="41">(<argument><expr><name><name pos:line="167" pos:column="42">opts<pos:position pos:line="167" pos:column="46"/></name><operator pos:line="167" pos:column="46">-&gt;<pos:position pos:line="167" pos:column="51"/></operator><name pos:line="167" pos:column="48">strategy<pos:position pos:line="167" pos:column="56"/></name></name></expr></argument>,
					 <argument><expr><name><name pos:line="168" pos:column="42">opts<pos:position pos:line="168" pos:column="46"/></name><operator pos:line="168" pos:column="46">-&gt;<pos:position pos:line="168" pos:column="51"/></operator><name pos:line="168" pos:column="48">xopts_nr<pos:position pos:line="168" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="168" pos:column="58">(<pos:position pos:line="168" pos:column="59"/></operator><specifier pos:line="168" pos:column="59">const<pos:position pos:line="168" pos:column="64"/></specifier> <name pos:line="168" pos:column="65">char<pos:position pos:line="168" pos:column="69"/></name> <operator pos:line="168" pos:column="70">*<pos:position pos:line="168" pos:column="71"/></operator><operator pos:line="168" pos:column="71">*<pos:position pos:line="168" pos:column="72"/></operator><operator pos:line="168" pos:column="72">)<pos:position pos:line="168" pos:column="73"/></operator><name><name pos:line="168" pos:column="73">opts<pos:position pos:line="168" pos:column="77"/></name><operator pos:line="168" pos:column="77">-&gt;<pos:position pos:line="168" pos:column="82"/></operator><name pos:line="168" pos:column="79">xopts<pos:position pos:line="168" pos:column="84"/></name></name></expr></argument>,
					<argument><expr><name pos:line="169" pos:column="41">common<pos:position pos:line="169" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="169" pos:column="49">oid_to_hex<pos:position pos:line="169" pos:column="59"/></name><argument_list pos:line="169" pos:column="59">(<argument><expr><operator pos:line="169" pos:column="60">&amp;<pos:position pos:line="169" pos:column="65"/></operator><name pos:line="169" pos:column="61">head<pos:position pos:line="169" pos:column="65"/></name></expr></argument>)<pos:position pos:line="169" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="169" pos:column="68">remotes<pos:position pos:line="169" pos:column="75"/></name></expr></argument>)<pos:position pos:line="169" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="170" pos:column="17">free_commit_list<pos:position pos:line="170" pos:column="33"/></name><argument_list pos:line="170" pos:column="33">(<argument><expr><name pos:line="170" pos:column="34">common<pos:position pos:line="170" pos:column="40"/></name></expr></argument>)<pos:position pos:line="170" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="171" pos:column="17">free_commit_list<pos:position pos:line="171" pos:column="33"/></name><argument_list pos:line="171" pos:column="33">(<argument><expr><name pos:line="171" pos:column="34">remotes<pos:position pos:line="171" pos:column="41"/></name></expr></argument>)<pos:position pos:line="171" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="172" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="173" pos:column="9">strbuf_release<pos:position pos:line="173" pos:column="23"/></name><argument_list pos:line="173" pos:column="23">(<argument><expr><operator pos:line="173" pos:column="24">&amp;<pos:position pos:line="173" pos:column="29"/></operator><name pos:line="173" pos:column="25">msgbuf<pos:position pos:line="173" pos:column="31"/></name></expr></argument>)<pos:position pos:line="173" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="175" pos:column="9">/*
	 * If the merge was clean or if it failed due to conflict, we write
	 * CHERRY_PICK_HEAD for the subsequent invocation of commit to use.
	 * However, if the merge did not even start, then we don't want to
	 * write it at all.
	 */</comment>
	<if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">command<pos:position pos:line="181" pos:column="20"/></name> <operator pos:line="181" pos:column="21">==<pos:position pos:line="181" pos:column="23"/></operator> <name pos:line="181" pos:column="24">TODO_PICK<pos:position pos:line="181" pos:column="33"/></name> <operator pos:line="181" pos:column="34">&amp;&amp;<pos:position pos:line="181" pos:column="44"/></operator> <operator pos:line="181" pos:column="37">!<pos:position pos:line="181" pos:column="38"/></operator><name><name pos:line="181" pos:column="38">opts<pos:position pos:line="181" pos:column="42"/></name><operator pos:line="181" pos:column="42">-&gt;<pos:position pos:line="181" pos:column="47"/></operator><name pos:line="181" pos:column="44">no_commit<pos:position pos:line="181" pos:column="53"/></name></name> <operator pos:line="181" pos:column="54">&amp;&amp;<pos:position pos:line="181" pos:column="64"/></operator> <operator pos:line="181" pos:column="57">(<pos:position pos:line="181" pos:column="58"/></operator><name pos:line="181" pos:column="58">res<pos:position pos:line="181" pos:column="61"/></name> <operator pos:line="181" pos:column="62">==<pos:position pos:line="181" pos:column="64"/></operator> <literal type="number" pos:line="181" pos:column="65">0<pos:position pos:line="181" pos:column="66"/></literal> <operator pos:line="181" pos:column="67">||<pos:position pos:line="181" pos:column="69"/></operator> <name pos:line="181" pos:column="70">res<pos:position pos:line="181" pos:column="73"/></name> <operator pos:line="181" pos:column="74">==<pos:position pos:line="181" pos:column="76"/></operator> <literal type="number" pos:line="181" pos:column="77">1<pos:position pos:line="181" pos:column="78"/></literal><operator pos:line="181" pos:column="78">)<pos:position pos:line="181" pos:column="79"/></operator> <operator pos:line="181" pos:column="80">&amp;&amp;<pos:position pos:line="181" pos:column="90"/></operator>
	    <call><name pos:line="182" pos:column="13">update_ref<pos:position pos:line="182" pos:column="23"/></name><argument_list pos:line="182" pos:column="23">(<argument><expr><name pos:line="182" pos:column="24">NULL<pos:position pos:line="182" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="30">"CHERRY_PICK_HEAD"<pos:position pos:line="182" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="182" pos:column="50">commit<pos:position pos:line="182" pos:column="56"/></name><operator pos:line="182" pos:column="56">-&gt;<pos:position pos:line="182" pos:column="61"/></operator><name pos:line="182" pos:column="58">object<pos:position pos:line="182" pos:column="64"/></name><operator pos:line="182" pos:column="64">.<pos:position pos:line="182" pos:column="65"/></operator><name pos:line="182" pos:column="65">oid<pos:position pos:line="182" pos:column="68"/></name><operator pos:line="182" pos:column="68">.<pos:position pos:line="182" pos:column="69"/></operator><name pos:line="182" pos:column="69">hash<pos:position pos:line="182" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="75">NULL<pos:position pos:line="182" pos:column="79"/></name></expr></argument>,
		       <argument><expr><name pos:line="183" pos:column="24">REF_NODEREF<pos:position pos:line="183" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="37">UPDATE_REFS_MSG_ON_ERR<pos:position pos:line="183" pos:column="59"/></name></expr></argument>)<pos:position pos:line="183" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="183" pos:column="61"/></condition><then pos:line="183" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name pos:line="184" pos:column="17">res<pos:position pos:line="184" pos:column="20"/></name> <operator pos:line="184" pos:column="21">=<pos:position pos:line="184" pos:column="22"/></operator> <operator pos:line="184" pos:column="23">-<pos:position pos:line="184" pos:column="24"/></operator><literal type="number" pos:line="184" pos:column="24">1<pos:position pos:line="184" pos:column="25"/></literal></expr>;<pos:position pos:line="184" pos:column="26"/></expr_stmt></block></then></if>
	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">command<pos:position pos:line="185" pos:column="20"/></name> <operator pos:line="185" pos:column="21">==<pos:position pos:line="185" pos:column="23"/></operator> <name pos:line="185" pos:column="24">TODO_REVERT<pos:position pos:line="185" pos:column="35"/></name> <operator pos:line="185" pos:column="36">&amp;&amp;<pos:position pos:line="185" pos:column="46"/></operator> <operator pos:line="185" pos:column="39">(<pos:position pos:line="185" pos:column="40"/></operator><operator pos:line="185" pos:column="40">(<pos:position pos:line="185" pos:column="41"/></operator><name><name pos:line="185" pos:column="41">opts<pos:position pos:line="185" pos:column="45"/></name><operator pos:line="185" pos:column="45">-&gt;<pos:position pos:line="185" pos:column="50"/></operator><name pos:line="185" pos:column="47">no_commit<pos:position pos:line="185" pos:column="56"/></name></name> <operator pos:line="185" pos:column="57">&amp;&amp;<pos:position pos:line="185" pos:column="67"/></operator> <name pos:line="185" pos:column="60">res<pos:position pos:line="185" pos:column="63"/></name> <operator pos:line="185" pos:column="64">==<pos:position pos:line="185" pos:column="66"/></operator> <literal type="number" pos:line="185" pos:column="67">0<pos:position pos:line="185" pos:column="68"/></literal><operator pos:line="185" pos:column="68">)<pos:position pos:line="185" pos:column="69"/></operator> <operator pos:line="185" pos:column="70">||<pos:position pos:line="185" pos:column="72"/></operator> <name pos:line="185" pos:column="73">res<pos:position pos:line="185" pos:column="76"/></name> <operator pos:line="185" pos:column="77">==<pos:position pos:line="185" pos:column="79"/></operator> <literal type="number" pos:line="185" pos:column="80">1<pos:position pos:line="185" pos:column="81"/></literal><operator pos:line="185" pos:column="81">)<pos:position pos:line="185" pos:column="82"/></operator> <operator pos:line="185" pos:column="83">&amp;&amp;<pos:position pos:line="185" pos:column="93"/></operator>
	    <call><name pos:line="186" pos:column="13">update_ref<pos:position pos:line="186" pos:column="23"/></name><argument_list pos:line="186" pos:column="23">(<argument><expr><name pos:line="186" pos:column="24">NULL<pos:position pos:line="186" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="186" pos:column="30">"REVERT_HEAD"<pos:position pos:line="186" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="186" pos:column="45">commit<pos:position pos:line="186" pos:column="51"/></name><operator pos:line="186" pos:column="51">-&gt;<pos:position pos:line="186" pos:column="56"/></operator><name pos:line="186" pos:column="53">object<pos:position pos:line="186" pos:column="59"/></name><operator pos:line="186" pos:column="59">.<pos:position pos:line="186" pos:column="60"/></operator><name pos:line="186" pos:column="60">oid<pos:position pos:line="186" pos:column="63"/></name><operator pos:line="186" pos:column="63">.<pos:position pos:line="186" pos:column="64"/></operator><name pos:line="186" pos:column="64">hash<pos:position pos:line="186" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="70">NULL<pos:position pos:line="186" pos:column="74"/></name></expr></argument>,
		       <argument><expr><name pos:line="187" pos:column="24">REF_NODEREF<pos:position pos:line="187" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="37">UPDATE_REFS_MSG_ON_ERR<pos:position pos:line="187" pos:column="59"/></name></expr></argument>)<pos:position pos:line="187" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="61"/></condition><then pos:line="187" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name pos:line="188" pos:column="17">res<pos:position pos:line="188" pos:column="20"/></name> <operator pos:line="188" pos:column="21">=<pos:position pos:line="188" pos:column="22"/></operator> <operator pos:line="188" pos:column="23">-<pos:position pos:line="188" pos:column="24"/></operator><literal type="number" pos:line="188" pos:column="24">1<pos:position pos:line="188" pos:column="25"/></literal></expr>;<pos:position pos:line="188" pos:column="26"/></expr_stmt></block></then></if>

	<if pos:line="190" pos:column="9">if <condition pos:line="190" pos:column="12">(<expr><name pos:line="190" pos:column="13">res<pos:position pos:line="190" pos:column="16"/></name></expr>)<pos:position pos:line="190" pos:column="17"/></condition><then pos:line="190" pos:column="17"> <block pos:line="190" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="191" pos:column="17">error<pos:position pos:line="191" pos:column="22"/></name><argument_list pos:line="191" pos:column="22">(<argument><expr><ternary><condition><expr><name pos:line="191" pos:column="23">command<pos:position pos:line="191" pos:column="30"/></name> <operator pos:line="191" pos:column="31">==<pos:position pos:line="191" pos:column="33"/></operator> <name pos:line="191" pos:column="34">TODO_REVERT<pos:position pos:line="191" pos:column="45"/></name></expr>
		      ?<pos:position pos:line="192" pos:column="24"/></condition><then pos:line="192" pos:column="24"> <expr><call><name pos:line="192" pos:column="25">_<pos:position pos:line="192" pos:column="26"/></name><argument_list pos:line="192" pos:column="26">(<argument><expr><literal type="string" pos:line="192" pos:column="27">"could not revert %s... %s"<pos:position pos:line="192" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="55"/></argument_list></call></expr>
		      <pos:position pos:line="193" pos:column="9"/></then><else pos:line="193" pos:column="23">: <expr><call><name pos:line="193" pos:column="25">_<pos:position pos:line="193" pos:column="26"/></name><argument_list pos:line="193" pos:column="26">(<argument><expr><literal type="string" pos:line="193" pos:column="27">"could not apply %s... %s"<pos:position pos:line="193" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="54"/></argument_list></call></expr></else></ternary></expr></argument>,
		      <argument><expr><call><name pos:line="194" pos:column="23">short_commit_name<pos:position pos:line="194" pos:column="40"/></name><argument_list pos:line="194" pos:column="40">(<argument><expr><name pos:line="194" pos:column="41">commit<pos:position pos:line="194" pos:column="47"/></name></expr></argument>)<pos:position pos:line="194" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="50">msg<pos:position pos:line="194" pos:column="53"/></name><operator pos:line="194" pos:column="53">.<pos:position pos:line="194" pos:column="54"/></operator><name pos:line="194" pos:column="54">subject<pos:position pos:line="194" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="194" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="195" pos:column="17">print_advice<pos:position pos:line="195" pos:column="29"/></name><argument_list pos:line="195" pos:column="29">(<argument><expr><name pos:line="195" pos:column="30">res<pos:position pos:line="195" pos:column="33"/></name> <operator pos:line="195" pos:column="34">==<pos:position pos:line="195" pos:column="36"/></operator> <literal type="number" pos:line="195" pos:column="37">1<pos:position pos:line="195" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="195" pos:column="40">opts<pos:position pos:line="195" pos:column="44"/></name></expr></argument>)<pos:position pos:line="195" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="196" pos:column="17">rerere<pos:position pos:line="196" pos:column="23"/></name><argument_list pos:line="196" pos:column="23">(<argument><expr><name><name pos:line="196" pos:column="24">opts<pos:position pos:line="196" pos:column="28"/></name><operator pos:line="196" pos:column="28">-&gt;<pos:position pos:line="196" pos:column="33"/></operator><name pos:line="196" pos:column="30">allow_rerere_auto<pos:position pos:line="196" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="49"/></expr_stmt>
		<goto pos:line="197" pos:column="17">goto <name pos:line="197" pos:column="22">leave<pos:position pos:line="197" pos:column="27"/></name>;<pos:position pos:line="197" pos:column="28"/></goto>
	}<pos:position pos:line="198" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="200" pos:column="9">allow<pos:position pos:line="200" pos:column="14"/></name> <operator pos:line="200" pos:column="15">=<pos:position pos:line="200" pos:column="16"/></operator> <call><name pos:line="200" pos:column="17">allow_empty<pos:position pos:line="200" pos:column="28"/></name><argument_list pos:line="200" pos:column="28">(<argument><expr><name pos:line="200" pos:column="29">opts<pos:position pos:line="200" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="35">commit<pos:position pos:line="200" pos:column="41"/></name></expr></argument>)<pos:position pos:line="200" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="43"/></expr_stmt>
	<if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><name pos:line="201" pos:column="13">allow<pos:position pos:line="201" pos:column="18"/></name> <operator pos:line="201" pos:column="19">&lt;<pos:position pos:line="201" pos:column="23"/></operator> <literal type="number" pos:line="201" pos:column="21">0<pos:position pos:line="201" pos:column="22"/></literal></expr>)<pos:position pos:line="201" pos:column="23"/></condition><then pos:line="201" pos:column="23"> <block pos:line="201" pos:column="24">{
		<expr_stmt><expr><name pos:line="202" pos:column="17">res<pos:position pos:line="202" pos:column="20"/></name> <operator pos:line="202" pos:column="21">=<pos:position pos:line="202" pos:column="22"/></operator> <name pos:line="202" pos:column="23">allow<pos:position pos:line="202" pos:column="28"/></name></expr>;<pos:position pos:line="202" pos:column="29"/></expr_stmt>
		<goto pos:line="203" pos:column="17">goto <name pos:line="203" pos:column="22">leave<pos:position pos:line="203" pos:column="27"/></name>;<pos:position pos:line="203" pos:column="28"/></goto>
	}<pos:position pos:line="204" pos:column="10"/></block></then> <elseif pos:line="204" pos:column="11">else <if pos:line="204" pos:column="16">if <condition pos:line="204" pos:column="19">(<expr><name pos:line="204" pos:column="20">allow<pos:position pos:line="204" pos:column="25"/></name></expr>)<pos:position pos:line="204" pos:column="26"/></condition><then pos:line="204" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="205" pos:column="17">flags<pos:position pos:line="205" pos:column="22"/></name> <operator pos:line="205" pos:column="23">|=<pos:position pos:line="205" pos:column="25"/></operator> <name pos:line="205" pos:column="26">ALLOW_EMPTY<pos:position pos:line="205" pos:column="37"/></name></expr>;<pos:position pos:line="205" pos:column="38"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="206" pos:column="9">if <condition pos:line="206" pos:column="12">(<expr><operator pos:line="206" pos:column="13">!<pos:position pos:line="206" pos:column="14"/></operator><name><name pos:line="206" pos:column="14">opts<pos:position pos:line="206" pos:column="18"/></name><operator pos:line="206" pos:column="18">-&gt;<pos:position pos:line="206" pos:column="23"/></operator><name pos:line="206" pos:column="20">no_commit<pos:position pos:line="206" pos:column="29"/></name></name></expr>)<pos:position pos:line="206" pos:column="30"/></condition><then pos:line="206" pos:column="30">
<block type="pseudo"><label><name pos:line="207" pos:column="1">fast_forward_edit<pos:position pos:line="207" pos:column="18"/></name>:<pos:position pos:line="207" pos:column="19"/></label>
		<expr_stmt><expr><name pos:line="208" pos:column="17">res<pos:position pos:line="208" pos:column="20"/></name> <operator pos:line="208" pos:column="21">=<pos:position pos:line="208" pos:column="22"/></operator> <call><name pos:line="208" pos:column="23">run_git_commit<pos:position pos:line="208" pos:column="37"/></name><argument_list pos:line="208" pos:column="37">(<argument><expr><name pos:line="208" pos:column="38">msg_file<pos:position pos:line="208" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="48">opts<pos:position pos:line="208" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="54">flags<pos:position pos:line="208" pos:column="59"/></name></expr></argument>)<pos:position pos:line="208" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="61"/></expr_stmt></block></then></if>

	<if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><operator pos:line="210" pos:column="13">!<pos:position pos:line="210" pos:column="14"/></operator><name pos:line="210" pos:column="14">res<pos:position pos:line="210" pos:column="17"/></name> <operator pos:line="210" pos:column="18">&amp;&amp;<pos:position pos:line="210" pos:column="28"/></operator> <name pos:line="210" pos:column="21">final_fixup<pos:position pos:line="210" pos:column="32"/></name></expr>)<pos:position pos:line="210" pos:column="33"/></condition><then pos:line="210" pos:column="33"> <block pos:line="210" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="211" pos:column="17">unlink<pos:position pos:line="211" pos:column="23"/></name><argument_list pos:line="211" pos:column="23">(<argument><expr><call><name pos:line="211" pos:column="24">rebase_path_fixup_msg<pos:position pos:line="211" pos:column="45"/></name><argument_list pos:line="211" pos:column="45">()<pos:position pos:line="211" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="211" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="212" pos:column="17">unlink<pos:position pos:line="212" pos:column="23"/></name><argument_list pos:line="212" pos:column="23">(<argument><expr><call><name pos:line="212" pos:column="24">rebase_path_squash_msg<pos:position pos:line="212" pos:column="46"/></name><argument_list pos:line="212" pos:column="46">()<pos:position pos:line="212" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="212" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="213" pos:column="10"/></block></then></if>

<label><name pos:line="215" pos:column="1">leave<pos:position pos:line="215" pos:column="6"/></name>:<pos:position pos:line="215" pos:column="7"/></label>
	<expr_stmt><expr><call><name pos:line="216" pos:column="9">free_message<pos:position pos:line="216" pos:column="21"/></name><argument_list pos:line="216" pos:column="21">(<argument><expr><name pos:line="216" pos:column="22">commit<pos:position pos:line="216" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="216" pos:column="30">&amp;<pos:position pos:line="216" pos:column="35"/></operator><name pos:line="216" pos:column="31">msg<pos:position pos:line="216" pos:column="34"/></name></expr></argument>)<pos:position pos:line="216" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="217" pos:column="9">update_abort_safety_file<pos:position pos:line="217" pos:column="33"/></name><argument_list pos:line="217" pos:column="33">()<pos:position pos:line="217" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="36"/></expr_stmt>

	<return pos:line="219" pos:column="9">return <expr><name pos:line="219" pos:column="16">res<pos:position pos:line="219" pos:column="19"/></name></expr>;<pos:position pos:line="219" pos:column="20"/></return>
}<pos:position pos:line="220" pos:column="2"/></block></function></unit>

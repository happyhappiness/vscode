<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3279_git-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">format_subst<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">commit<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">commit<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">src<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">size_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">len<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                         <parameter><decl><type><name><name pos:line="3" pos:column="26">struct<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">strbuf<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">buf<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="45"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">to_free<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">fmt<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">STRBUF_INIT<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">pretty_print_context<pos:position pos:line="7" pos:column="36"/></name></name></type> <name pos:line="7" pos:column="37">ctx<pos:position pos:line="7" pos:column="40"/></name> <init pos:line="7" pos:column="41">= <expr><block pos:line="7" pos:column="43">{<expr><literal type="number" pos:line="7" pos:column="44">0<pos:position pos:line="7" pos:column="45"/></literal></expr>}<pos:position pos:line="7" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">ctx<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">date_mode<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">DATE_NORMAL<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">.<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">abbrev<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">DEFAULT_ABBREV<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">src<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="20">buf<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">buf<pos:position pos:line="11" pos:column="28"/></name></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">to_free<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <call><name pos:line="12" pos:column="27">strbuf_detach<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">buf<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">NULL<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt></block></then></if>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init pos:line="13" pos:column="14">;<pos:position pos:line="13" pos:column="15"/></init><condition pos:line="13" pos:column="15">;<pos:position pos:line="13" pos:column="16"/></condition><incr/>)<pos:position pos:line="13" pos:column="17"/></control> <block pos:line="13" pos:column="18">{
		<decl_stmt><decl><type><specifier pos:line="14" pos:column="17">const<pos:position pos:line="14" pos:column="22"/></specifier> <name pos:line="14" pos:column="23">char<pos:position pos:line="14" pos:column="27"/></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">b<pos:position pos:line="14" pos:column="30"/></name></decl>, <modifier pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="14" pos:column="33">c<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>

		<expr_stmt><expr><name pos:line="16" pos:column="17">b<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">memmem<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">src<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">len<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="38">"$Format:"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="50">8<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">b<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24">
			<block type="pseudo"><break pos:line="18" pos:column="25">break;<pos:position pos:line="18" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="19" pos:column="17">c<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="21">memchr<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">b<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">+<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="32">8<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="35">'$'<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="40">(<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">src<pos:position pos:line="19" pos:column="44"/></name> <operator pos:line="19" pos:column="45">+<pos:position pos:line="19" pos:column="46"/></operator> <name pos:line="19" pos:column="47">len<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator> <operator pos:line="19" pos:column="52">-<pos:position pos:line="19" pos:column="53"/></operator> <name pos:line="19" pos:column="54">b<pos:position pos:line="19" pos:column="55"/></name> <operator pos:line="19" pos:column="56">-<pos:position pos:line="19" pos:column="57"/></operator> <literal type="number" pos:line="19" pos:column="58">8<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">c<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
			<block type="pseudo"><break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="23" pos:column="17">strbuf_reset<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><operator pos:line="23" pos:column="30">&amp;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="31">fmt<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">strbuf_add<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><operator pos:line="24" pos:column="28">&amp;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="29">fmt<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">b<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">+<pos:position pos:line="24" pos:column="37"/></operator> <literal type="number" pos:line="24" pos:column="38">8<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">c<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">-<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="45">b<pos:position pos:line="24" pos:column="46"/></name> <operator pos:line="24" pos:column="47">-<pos:position pos:line="24" pos:column="48"/></operator> <literal type="number" pos:line="24" pos:column="49">8<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="26" pos:column="17">strbuf_add<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">buf<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="33">src<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">b<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">-<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">src<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">format_commit_message<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">commit<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="47">fmt<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">.<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="51">buf<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">buf<pos:position pos:line="27" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="61">&amp;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="62">ctx<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">-=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">c<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">+<pos:position pos:line="28" pos:column="27"/></operator> <literal type="number" pos:line="28" pos:column="28">1<pos:position pos:line="28" pos:column="29"/></literal> <operator pos:line="28" pos:column="30">-<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">src<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">src<pos:position pos:line="29" pos:column="20"/></name>  <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">c<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">+<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="28">1<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strbuf_add<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">buf<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="25">src<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">len<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_release<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><operator pos:line="32" pos:column="24">&amp;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="25">fmt<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">free<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">to_free<pos:position pos:line="33" pos:column="21"/></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

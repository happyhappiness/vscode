<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_442.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_commit<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">notes_merge_options<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">o<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">msg<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">sha1<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">20<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="33">parent_sha1<pos:position pos:line="4" pos:column="44"/></name><index pos:line="4" pos:column="44">[<expr><literal type="number" pos:line="4" pos:column="45">20<pos:position pos:line="4" pos:column="47"/></literal></expr>]<pos:position pos:line="4" pos:column="48"/></index></name></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">notes_tree<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">t<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">commit<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">partial<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">pretty_print_context<pos:position pos:line="7" pos:column="36"/></name></name></type> <name pos:line="7" pos:column="37">pretty_ctx<pos:position pos:line="7" pos:column="47"/></name></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">void<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">local_ref_to_free<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">ret<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/*
	 * Read partial merge result from .git/NOTES_MERGE_PARTIAL,
	 * and target notes ref from .git/NOTES_MERGE_REF.
	 */</comment>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">get_sha1<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><literal type="string" pos:line="16" pos:column="22">"NOTES_MERGE_PARTIAL"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">sha1<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">die<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"Failed to read ref NOTES_MERGE_PARTIAL"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt></block></then>
	<elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if <condition pos:line="18" pos:column="17">(<expr><operator pos:line="18" pos:column="18">!<pos:position pos:line="18" pos:column="19"/></operator><operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">partial<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <call><name pos:line="18" pos:column="30">lookup_commit_reference<pos:position pos:line="18" pos:column="53"/></name><argument_list pos:line="18" pos:column="53">(<argument><expr><name pos:line="18" pos:column="54">sha1<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call><operator pos:line="18" pos:column="59">)<pos:position pos:line="18" pos:column="60"/></operator></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">die<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><literal type="string" pos:line="19" pos:column="21">"Could not find commit from NOTES_MERGE_PARTIAL."<pos:position pos:line="19" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><call><name pos:line="20" pos:column="18">parse_commit<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">partial<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">die<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="string" pos:line="21" pos:column="21">"Could not parse commit from NOTES_MERGE_PARTIAL."<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">partial<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">parents<pos:position pos:line="23" pos:column="29"/></name></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">hashcpy<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">parent_sha1<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="38">partial<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">parents<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">item<pos:position pos:line="24" pos:column="60"/></name><operator pos:line="24" pos:column="60">-&gt;<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="62">object<pos:position pos:line="24" pos:column="68"/></name><operator pos:line="24" pos:column="68">.<pos:position pos:line="24" pos:column="69"/></operator><name pos:line="24" pos:column="69">oid<pos:position pos:line="24" pos:column="72"/></name><operator pos:line="24" pos:column="72">.<pos:position pos:line="24" pos:column="73"/></operator><name pos:line="24" pos:column="73">hash<pos:position pos:line="24" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt></block></then>
	<else pos:line="25" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">hashclr<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">parent_sha1<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">t<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">xcalloc<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="number" pos:line="28" pos:column="21">1<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="24">sizeof<argument_list pos:line="28" pos:column="30">(<argument><expr pos:line="28" pos:column="31">struct <name pos:line="28" pos:column="38">notes_tree<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">init_notes<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">t<pos:position pos:line="29" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="23">"NOTES_MERGE_PARTIAL"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">combine_notes_overwrite<pos:position pos:line="29" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="71">0<pos:position pos:line="29" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="31" pos:column="9">o<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">local_ref<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">local_ref_to_free<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">=<pos:position pos:line="31" pos:column="43"/></operator>
		<call><name pos:line="32" pos:column="17">resolve_refdup<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><literal type="string" pos:line="32" pos:column="32">"NOTES_MERGE_REF"<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="51">0<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">sha1<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">NULL<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name><name pos:line="33" pos:column="14">o<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">local_ref<pos:position pos:line="33" pos:column="26"/></name></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">die<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><literal type="string" pos:line="34" pos:column="21">"Failed to resolve NOTES_MERGE_REF"<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">notes_merge_commit<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">o<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">t<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">partial<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">sha1<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="53"/></condition><then pos:line="36" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">die<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><literal type="string" pos:line="37" pos:column="21">"Failed to finalize notes merge"<pos:position pos:line="37" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="39" pos:column="9">/* Reuse existing commit message in reflog message */</comment>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">memset<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><operator pos:line="40" pos:column="16">&amp;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="17">pretty_ctx<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="29">0<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="32">sizeof<argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">pretty_ctx<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">format_commit_message<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">partial<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="40">"%s"<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="46">&amp;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="47">msg<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="52">&amp;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="53">pretty_ctx<pos:position pos:line="41" pos:column="63"/></name></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">strbuf_trim<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><operator pos:line="42" pos:column="21">&amp;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="22">msg<pos:position pos:line="42" pos:column="25"/></name></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">strbuf_insert<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><operator pos:line="43" pos:column="23">&amp;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="24">msg<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="29">0<pos:position pos:line="43" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="32">"notes: "<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="43">7<pos:position pos:line="43" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">update_ref<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><name><name pos:line="44" pos:column="20">msg<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">buf<pos:position pos:line="44" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="29">o<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">local_ref<pos:position pos:line="44" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">sha1<pos:position pos:line="44" pos:column="47"/></name></expr></argument>,
		   <argument><expr><ternary><condition><expr><call><name pos:line="45" pos:column="20">is_null_sha1<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">parent_sha1<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr> ?<pos:position pos:line="45" pos:column="47"/></condition><then pos:line="45" pos:column="47"> <expr><name pos:line="45" pos:column="48">NULL<pos:position pos:line="45" pos:column="52"/></name></expr> <pos:position pos:line="45" pos:column="53"/></then><else pos:line="45" pos:column="53">: <expr><name pos:line="45" pos:column="55">parent_sha1<pos:position pos:line="45" pos:column="66"/></name></expr></else></ternary></expr></argument>,
		   <argument><expr><literal type="number" pos:line="46" pos:column="20">0<pos:position pos:line="46" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="23">UPDATE_REFS_DIE_ON_ERR<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">free_notes<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">t<pos:position pos:line="48" pos:column="21"/></name></expr></argument>)<pos:position pos:line="48" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">strbuf_release<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><operator pos:line="49" pos:column="24">&amp;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="25">msg<pos:position pos:line="49" pos:column="28"/></name></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="50" pos:column="9">ret<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <call><name pos:line="50" pos:column="15">merge_abort<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">o<pos:position pos:line="50" pos:column="28"/></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">free<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">local_ref_to_free<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>
	<return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">ret<pos:position pos:line="52" pos:column="19"/></name></expr>;<pos:position pos:line="52" pos:column="20"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1127.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">setup_git_directory_gently_1<pos:position pos:line="1" pos:column="48"/></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">nongit_ok<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">env_ceiling_dirs<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">= <expr><call><name pos:line="3" pos:column="40">getenv<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">CEILING_DIRECTORIES_ENVIRONMENT<pos:position pos:line="3" pos:column="78"/></name></expr></argument>)<pos:position pos:line="3" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="80"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">string_list<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">ceiling_dirs<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><name pos:line="4" pos:column="43">STRING_LIST_INIT_DUP<pos:position pos:line="4" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">strbuf<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">cwd<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">STRBUF_INIT<pos:position pos:line="5" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">gitdirenv<pos:position pos:line="6" pos:column="30"/></name></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">ret<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">gitfile<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">offset<pos:position pos:line="8" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">offset_parent<pos:position pos:line="8" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="36">ceil_offset<pos:position pos:line="8" pos:column="47"/></name> <init pos:line="8" pos:column="48">= <expr><operator pos:line="8" pos:column="50">-<pos:position pos:line="8" pos:column="51"/></operator><literal type="number" pos:line="8" pos:column="51">1<pos:position pos:line="8" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">dev_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">current_device<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">one_filesystem<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>

	<comment type="block" pos:line="12" pos:column="9">/*
	 * We may have read an incomplete configuration before
	 * setting-up the git directory. If so, clear the cache so
	 * that the next queries to the configuration reload complete
	 * configuration (including the per-repo config file that we
	 * ignored previously).
	 */</comment>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">git_config_clear<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">()<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>

	<comment type="block" pos:line="21" pos:column="9">/*
	 * Let's assume that we are in a git repository.
	 * If it turns out later that we are somewhere else, the value will be
	 * updated accordingly.
	 */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">nongit_ok<pos:position pos:line="26" pos:column="22"/></name></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">nongit_ok<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">strbuf_getcwd<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="28">cwd<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">die_errno<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><call><name pos:line="30" pos:column="27">_<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><literal type="string" pos:line="30" pos:column="29">"Unable to read current working directory"<pos:position pos:line="30" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="31" pos:column="9">offset<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name><name pos:line="31" pos:column="18">cwd<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">len<pos:position pos:line="31" pos:column="25"/></name></name></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="33" pos:column="9">/*
	 * If GIT_DIR is set explicitly, we're not going
	 * to do any discovery, but we still do repository
	 * validation.
	 */</comment>
	<expr_stmt><expr><name pos:line="38" pos:column="9">gitdirenv<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">getenv<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">GIT_DIR_ENVIRONMENT<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">gitdirenv<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23">
		<block type="pseudo"><return pos:line="40" pos:column="17">return <expr><call><name pos:line="40" pos:column="24">setup_explicit_git_dir<pos:position pos:line="40" pos:column="46"/></name><argument_list pos:line="40" pos:column="46">(<argument><expr><name pos:line="40" pos:column="47">gitdirenv<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="58">&amp;<pos:position pos:line="40" pos:column="63"/></operator><name pos:line="40" pos:column="59">cwd<pos:position pos:line="40" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="64">nongit_ok<pos:position pos:line="40" pos:column="73"/></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></return></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">env_ceiling_dirs<pos:position pos:line="42" pos:column="29"/></name></expr>)<pos:position pos:line="42" pos:column="30"/></condition><then pos:line="42" pos:column="30"> <block pos:line="42" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">int<pos:position pos:line="43" pos:column="20"/></name></type> <name pos:line="43" pos:column="21">empty_entry_found<pos:position pos:line="43" pos:column="38"/></name> <init pos:line="43" pos:column="39">= <expr><literal type="number" pos:line="43" pos:column="41">0<pos:position pos:line="43" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="43"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="45" pos:column="17">string_list_split<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><operator pos:line="45" pos:column="35">&amp;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="36">ceiling_dirs<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="50">env_ceiling_dirs<pos:position pos:line="45" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="68">PATH_SEP<pos:position pos:line="45" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="78">-<pos:position pos:line="45" pos:column="79"/></operator><literal type="number" pos:line="45" pos:column="79">1<pos:position pos:line="45" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">filter_string_list<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><operator pos:line="46" pos:column="36">&amp;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="37">ceiling_dirs<pos:position pos:line="46" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="51">0<pos:position pos:line="46" pos:column="52"/></literal></expr></argument>,
				   <argument><expr><name pos:line="47" pos:column="36">canonicalize_ceiling_entry<pos:position pos:line="47" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="64">&amp;<pos:position pos:line="47" pos:column="69"/></operator><name pos:line="47" pos:column="65">empty_entry_found<pos:position pos:line="47" pos:column="82"/></name></expr></argument>)<pos:position pos:line="47" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">ceil_offset<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <call><name pos:line="48" pos:column="31">longest_ancestor_length<pos:position pos:line="48" pos:column="54"/></name><argument_list pos:line="48" pos:column="54">(<argument><expr><name><name pos:line="48" pos:column="55">cwd<pos:position pos:line="48" pos:column="58"/></name><operator pos:line="48" pos:column="58">.<pos:position pos:line="48" pos:column="59"/></operator><name pos:line="48" pos:column="59">buf<pos:position pos:line="48" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="64">&amp;<pos:position pos:line="48" pos:column="69"/></operator><name pos:line="48" pos:column="65">ceiling_dirs<pos:position pos:line="48" pos:column="77"/></name></expr></argument>)<pos:position pos:line="48" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">string_list_clear<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><operator pos:line="49" pos:column="35">&amp;<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="36">ceiling_dirs<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="50">0<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">ceil_offset<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">&lt;<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="27">0<pos:position pos:line="52" pos:column="28"/></literal> <operator pos:line="52" pos:column="29">&amp;&amp;<pos:position pos:line="52" pos:column="39"/></operator> <call><name pos:line="52" pos:column="32">has_dos_drive_prefix<pos:position pos:line="52" pos:column="52"/></name><argument_list pos:line="52" pos:column="52">(<argument><expr><name><name pos:line="52" pos:column="53">cwd<pos:position pos:line="52" pos:column="56"/></name><operator pos:line="52" pos:column="56">.<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="57">buf<pos:position pos:line="52" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="62"/></condition><then pos:line="52" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="17">ceil_offset<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">=<pos:position pos:line="53" pos:column="30"/></operator> <literal type="number" pos:line="53" pos:column="31">1<pos:position pos:line="53" pos:column="32"/></literal></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="55" pos:column="9">/*
	 * Test in the following order (relative to the cwd):
	 * - .git (file containing "gitdir: &lt;path&gt;")
	 * - .git/
	 * - ./ (bare)
	 * - ../.git
	 * - ../.git/
	 * - ../ (bare)
	 * - ../../.git/
	 *   etc.
	 */</comment>
	<expr_stmt><expr><name pos:line="66" pos:column="9">one_filesystem<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <operator pos:line="66" pos:column="26">!<pos:position pos:line="66" pos:column="27"/></operator><call><name pos:line="66" pos:column="27">git_env_bool<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">(<argument><expr><literal type="string" pos:line="66" pos:column="40">"GIT_DISCOVERY_ACROSS_FILESYSTEM"<pos:position pos:line="66" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="75">0<pos:position pos:line="66" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="78"/></expr_stmt>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">one_filesystem<pos:position pos:line="67" pos:column="27"/></name></expr>)<pos:position pos:line="67" pos:column="28"/></condition><then pos:line="67" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="68" pos:column="17">current_device<pos:position pos:line="68" pos:column="31"/></name> <operator pos:line="68" pos:column="32">=<pos:position pos:line="68" pos:column="33"/></operator> <call><name pos:line="68" pos:column="34">get_device_or_die<pos:position pos:line="68" pos:column="51"/></name><argument_list pos:line="68" pos:column="51">(<argument><expr><literal type="string" pos:line="68" pos:column="52">"."<pos:position pos:line="68" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="57">NULL<pos:position pos:line="68" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="63">0<pos:position pos:line="68" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="66"/></expr_stmt></block></then></if>
	<for pos:line="69" pos:column="9">for <control pos:line="69" pos:column="13">(<init pos:line="69" pos:column="14">;<pos:position pos:line="69" pos:column="15"/></init><condition pos:line="69" pos:column="15">;<pos:position pos:line="69" pos:column="16"/></condition><incr/>)<pos:position pos:line="69" pos:column="17"/></control> <block pos:line="69" pos:column="18">{
		<expr_stmt><expr><name pos:line="70" pos:column="17">gitfile<pos:position pos:line="70" pos:column="24"/></name> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <operator pos:line="70" pos:column="27">(<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="28">char<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">*<pos:position pos:line="70" pos:column="33"/></operator><operator pos:line="70" pos:column="33">)<pos:position pos:line="70" pos:column="34"/></operator><call><name pos:line="70" pos:column="34">read_gitfile<pos:position pos:line="70" pos:column="46"/></name><argument_list pos:line="70" pos:column="46">(<argument><expr><name pos:line="70" pos:column="47">DEFAULT_GIT_DIR_ENVIRONMENT<pos:position pos:line="70" pos:column="74"/></name></expr></argument>)<pos:position pos:line="70" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="76"/></expr_stmt>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">gitfile<pos:position pos:line="71" pos:column="28"/></name></expr>)<pos:position pos:line="71" pos:column="29"/></condition><then pos:line="71" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="25">gitdirenv<pos:position pos:line="72" pos:column="34"/></name> <operator pos:line="72" pos:column="35">=<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">gitfile<pos:position pos:line="72" pos:column="44"/></name> <operator pos:line="72" pos:column="45">=<pos:position pos:line="72" pos:column="46"/></operator> <call><name pos:line="72" pos:column="47">xstrdup<pos:position pos:line="72" pos:column="54"/></name><argument_list pos:line="72" pos:column="54">(<argument><expr><name pos:line="72" pos:column="55">gitfile<pos:position pos:line="72" pos:column="62"/></name></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="64"/></expr_stmt></block></then>
		<else pos:line="73" pos:column="17">else <block pos:line="73" pos:column="22">{
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><call><name pos:line="74" pos:column="29">is_git_directory<pos:position pos:line="74" pos:column="45"/></name><argument_list pos:line="74" pos:column="45">(<argument><expr><name pos:line="74" pos:column="46">DEFAULT_GIT_DIR_ENVIRONMENT<pos:position pos:line="74" pos:column="73"/></name></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="75"/></condition><then pos:line="74" pos:column="75">
				<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="33">gitdirenv<pos:position pos:line="75" pos:column="42"/></name> <operator pos:line="75" pos:column="43">=<pos:position pos:line="75" pos:column="44"/></operator> <name pos:line="75" pos:column="45">DEFAULT_GIT_DIR_ENVIRONMENT<pos:position pos:line="75" pos:column="72"/></name></expr>;<pos:position pos:line="75" pos:column="73"/></expr_stmt></block></then></if>
		}<pos:position pos:line="76" pos:column="18"/></block></else></if>

		<if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><name pos:line="78" pos:column="21">gitdirenv<pos:position pos:line="78" pos:column="30"/></name></expr>)<pos:position pos:line="78" pos:column="31"/></condition><then pos:line="78" pos:column="31"> <block pos:line="78" pos:column="32">{
			<expr_stmt><expr><name pos:line="79" pos:column="25">ret<pos:position pos:line="79" pos:column="28"/></name> <operator pos:line="79" pos:column="29">=<pos:position pos:line="79" pos:column="30"/></operator> <call><name pos:line="79" pos:column="31">setup_discovered_git_dir<pos:position pos:line="79" pos:column="55"/></name><argument_list pos:line="79" pos:column="55">(<argument><expr><name pos:line="79" pos:column="56">gitdirenv<pos:position pos:line="79" pos:column="65"/></name></expr></argument>,
						       <argument><expr><operator pos:line="80" pos:column="56">&amp;<pos:position pos:line="80" pos:column="61"/></operator><name pos:line="80" pos:column="57">cwd<pos:position pos:line="80" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="62">offset<pos:position pos:line="80" pos:column="68"/></name></expr></argument>,
						       <argument><expr><name pos:line="81" pos:column="56">nongit_ok<pos:position pos:line="81" pos:column="65"/></name></expr></argument>)<pos:position pos:line="81" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="82" pos:column="25">free<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">gitfile<pos:position pos:line="82" pos:column="37"/></name></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="39"/></expr_stmt>
			<return pos:line="83" pos:column="25">return <expr><name pos:line="83" pos:column="32">ret<pos:position pos:line="83" pos:column="35"/></name></expr>;<pos:position pos:line="83" pos:column="36"/></return>
		}<pos:position pos:line="84" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="85" pos:column="17">free<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">gitfile<pos:position pos:line="85" pos:column="29"/></name></expr></argument>)<pos:position pos:line="85" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="31"/></expr_stmt>

		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><call><name pos:line="87" pos:column="21">is_git_directory<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><literal type="string" pos:line="87" pos:column="38">"."<pos:position pos:line="87" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="43"/></condition><then pos:line="87" pos:column="43">
			<block type="pseudo"><return pos:line="88" pos:column="25">return <expr><call><name pos:line="88" pos:column="32">setup_bare_git_dir<pos:position pos:line="88" pos:column="50"/></name><argument_list pos:line="88" pos:column="50">(<argument><expr><operator pos:line="88" pos:column="51">&amp;<pos:position pos:line="88" pos:column="56"/></operator><name pos:line="88" pos:column="52">cwd<pos:position pos:line="88" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="57">offset<pos:position pos:line="88" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="65">nongit_ok<pos:position pos:line="88" pos:column="74"/></name></expr></argument>)<pos:position pos:line="88" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="76"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="90" pos:column="17">offset_parent<pos:position pos:line="90" pos:column="30"/></name> <operator pos:line="90" pos:column="31">=<pos:position pos:line="90" pos:column="32"/></operator> <name pos:line="90" pos:column="33">offset<pos:position pos:line="90" pos:column="39"/></name></expr>;<pos:position pos:line="90" pos:column="40"/></expr_stmt>
		<while pos:line="91" pos:column="17">while <condition pos:line="91" pos:column="23">(<expr><operator pos:line="91" pos:column="24">--<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="26">offset_parent<pos:position pos:line="91" pos:column="39"/></name> <operator pos:line="91" pos:column="40">&gt;<pos:position pos:line="91" pos:column="44"/></operator> <name pos:line="91" pos:column="42">ceil_offset<pos:position pos:line="91" pos:column="53"/></name> <operator pos:line="91" pos:column="54">&amp;&amp;<pos:position pos:line="91" pos:column="64"/></operator> <name><name pos:line="91" pos:column="57">cwd<pos:position pos:line="91" pos:column="60"/></name><operator pos:line="91" pos:column="60">.<pos:position pos:line="91" pos:column="61"/></operator><name pos:line="91" pos:column="61">buf<pos:position pos:line="91" pos:column="64"/></name><index pos:line="91" pos:column="64">[<expr><name pos:line="91" pos:column="65">offset_parent<pos:position pos:line="91" pos:column="78"/></name></expr>]<pos:position pos:line="91" pos:column="79"/></index></name> <operator pos:line="91" pos:column="80">!=<pos:position pos:line="91" pos:column="82"/></operator> <literal type="char" pos:line="91" pos:column="83">'/'<pos:position pos:line="91" pos:column="86"/></literal></expr>)<pos:position pos:line="91" pos:column="87"/></condition><block type="pseudo"><empty_stmt pos:line="91" pos:column="87">;<pos:position pos:line="91" pos:column="88"/></empty_stmt></block></while>
		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><name pos:line="92" pos:column="21">offset_parent<pos:position pos:line="92" pos:column="34"/></name> <operator pos:line="92" pos:column="35">&lt;=<pos:position pos:line="92" pos:column="40"/></operator> <name pos:line="92" pos:column="38">ceil_offset<pos:position pos:line="92" pos:column="49"/></name></expr>)<pos:position pos:line="92" pos:column="50"/></condition><then pos:line="92" pos:column="50">
			<block type="pseudo"><return pos:line="93" pos:column="25">return <expr><call><name pos:line="93" pos:column="32">setup_nongit<pos:position pos:line="93" pos:column="44"/></name><argument_list pos:line="93" pos:column="44">(<argument><expr><name><name pos:line="93" pos:column="45">cwd<pos:position pos:line="93" pos:column="48"/></name><operator pos:line="93" pos:column="48">.<pos:position pos:line="93" pos:column="49"/></operator><name pos:line="93" pos:column="49">buf<pos:position pos:line="93" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">nongit_ok<pos:position pos:line="93" pos:column="63"/></name></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="65"/></return></block></then></if>
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">one_filesystem<pos:position pos:line="94" pos:column="35"/></name></expr>)<pos:position pos:line="94" pos:column="36"/></condition><then pos:line="94" pos:column="36"> <block pos:line="94" pos:column="37">{
			<decl_stmt><decl><type><name pos:line="95" pos:column="25">dev_t<pos:position pos:line="95" pos:column="30"/></name></type> <name pos:line="95" pos:column="31">parent_device<pos:position pos:line="95" pos:column="44"/></name> <init pos:line="95" pos:column="45">= <expr><call><name pos:line="95" pos:column="47">get_device_or_die<pos:position pos:line="95" pos:column="64"/></name><argument_list pos:line="95" pos:column="64">(<argument><expr><literal type="string" pos:line="95" pos:column="65">".."<pos:position pos:line="95" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="71">cwd<pos:position pos:line="95" pos:column="74"/></name><operator pos:line="95" pos:column="74">.<pos:position pos:line="95" pos:column="75"/></operator><name pos:line="95" pos:column="75">buf<pos:position pos:line="95" pos:column="78"/></name></name></expr></argument>,
								<argument><expr><name pos:line="96" pos:column="65">offset<pos:position pos:line="96" pos:column="71"/></name></expr></argument>)<pos:position pos:line="96" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="73"/></decl_stmt>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><name pos:line="97" pos:column="29">parent_device<pos:position pos:line="97" pos:column="42"/></name> <operator pos:line="97" pos:column="43">!=<pos:position pos:line="97" pos:column="45"/></operator> <name pos:line="97" pos:column="46">current_device<pos:position pos:line="97" pos:column="60"/></name></expr>)<pos:position pos:line="97" pos:column="61"/></condition><then pos:line="97" pos:column="61"> <block pos:line="97" pos:column="62">{
				<if pos:line="98" pos:column="33">if <condition pos:line="98" pos:column="36">(<expr><name pos:line="98" pos:column="37">nongit_ok<pos:position pos:line="98" pos:column="46"/></name></expr>)<pos:position pos:line="98" pos:column="47"/></condition><then pos:line="98" pos:column="47"> <block pos:line="98" pos:column="48">{
					<if pos:line="99" pos:column="41">if <condition pos:line="99" pos:column="44">(<expr><call><name pos:line="99" pos:column="45">chdir<pos:position pos:line="99" pos:column="50"/></name><argument_list pos:line="99" pos:column="50">(<argument><expr><name><name pos:line="99" pos:column="51">cwd<pos:position pos:line="99" pos:column="54"/></name><operator pos:line="99" pos:column="54">.<pos:position pos:line="99" pos:column="55"/></operator><name pos:line="99" pos:column="55">buf<pos:position pos:line="99" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="60"/></condition><then pos:line="99" pos:column="60">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="49">die_errno<pos:position pos:line="100" pos:column="58"/></name><argument_list pos:line="100" pos:column="58">(<argument><expr><call><name pos:line="100" pos:column="59">_<pos:position pos:line="100" pos:column="60"/></name><argument_list pos:line="100" pos:column="60">(<argument><expr><literal type="string" pos:line="100" pos:column="61">"Cannot come back to cwd"<pos:position pos:line="100" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="89"/></expr_stmt></block></then></if>
					<expr_stmt><expr><operator pos:line="101" pos:column="41">*<pos:position pos:line="101" pos:column="42"/></operator><name pos:line="101" pos:column="42">nongit_ok<pos:position pos:line="101" pos:column="51"/></name> <operator pos:line="101" pos:column="52">=<pos:position pos:line="101" pos:column="53"/></operator> <literal type="number" pos:line="101" pos:column="54">1<pos:position pos:line="101" pos:column="55"/></literal></expr>;<pos:position pos:line="101" pos:column="56"/></expr_stmt>
					<return pos:line="102" pos:column="41">return <expr><name pos:line="102" pos:column="48">NULL<pos:position pos:line="102" pos:column="52"/></name></expr>;<pos:position pos:line="102" pos:column="53"/></return>
				}<pos:position pos:line="103" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="104" pos:column="33">strbuf_setlen<pos:position pos:line="104" pos:column="46"/></name><argument_list pos:line="104" pos:column="46">(<argument><expr><operator pos:line="104" pos:column="47">&amp;<pos:position pos:line="104" pos:column="52"/></operator><name pos:line="104" pos:column="48">cwd<pos:position pos:line="104" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="53">offset<pos:position pos:line="104" pos:column="59"/></name></expr></argument>)<pos:position pos:line="104" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="105" pos:column="33">die<pos:position pos:line="105" pos:column="36"/></name><argument_list pos:line="105" pos:column="36">(<argument><expr><call><name pos:line="105" pos:column="37">_<pos:position pos:line="105" pos:column="38"/></name><argument_list pos:line="105" pos:column="38">(<argument><expr><literal type="string" pos:line="105" pos:column="39">"Not a git repository (or any parent up to mount point %s)\n"<pos:position pos:line="105" pos:column="100"/></literal>
				<literal type="string" pos:line="106" pos:column="33">"Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set)."<pos:position pos:line="106" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="110"/></argument_list></call></expr></argument>,
				    <argument><expr><name><name pos:line="107" pos:column="37">cwd<pos:position pos:line="107" pos:column="40"/></name><operator pos:line="107" pos:column="40">.<pos:position pos:line="107" pos:column="41"/></operator><name pos:line="107" pos:column="41">buf<pos:position pos:line="107" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="108" pos:column="26"/></block></then></if>
		}<pos:position pos:line="109" pos:column="18"/></block></then></if>
		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><call><name pos:line="110" pos:column="21">chdir<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">(<argument><expr><literal type="string" pos:line="110" pos:column="27">".."<pos:position pos:line="110" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="33"/></condition><then pos:line="110" pos:column="33"> <block pos:line="110" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="111" pos:column="25">strbuf_setlen<pos:position pos:line="111" pos:column="38"/></name><argument_list pos:line="111" pos:column="38">(<argument><expr><operator pos:line="111" pos:column="39">&amp;<pos:position pos:line="111" pos:column="44"/></operator><name pos:line="111" pos:column="40">cwd<pos:position pos:line="111" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="45">offset<pos:position pos:line="111" pos:column="51"/></name></expr></argument>)<pos:position pos:line="111" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="112" pos:column="25">die_errno<pos:position pos:line="112" pos:column="34"/></name><argument_list pos:line="112" pos:column="34">(<argument><expr><call><name pos:line="112" pos:column="35">_<pos:position pos:line="112" pos:column="36"/></name><argument_list pos:line="112" pos:column="36">(<argument><expr><literal type="string" pos:line="112" pos:column="37">"Cannot change to '%s/..'"<pos:position pos:line="112" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="66">cwd<pos:position pos:line="112" pos:column="69"/></name><operator pos:line="112" pos:column="69">.<pos:position pos:line="112" pos:column="70"/></operator><name pos:line="112" pos:column="70">buf<pos:position pos:line="112" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="113" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="114" pos:column="17">offset<pos:position pos:line="114" pos:column="23"/></name> <operator pos:line="114" pos:column="24">=<pos:position pos:line="114" pos:column="25"/></operator> <name pos:line="114" pos:column="26">offset_parent<pos:position pos:line="114" pos:column="39"/></name></expr>;<pos:position pos:line="114" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></for>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

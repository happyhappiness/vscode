<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3817_git-2.9.4.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">ref<pos:position pos:line="1" pos:column="11"/></name></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">guess_remote_head<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">ref<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">head<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">ref<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">refs<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">all<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name><name pos:line="5" pos:column="15">struct<pos:position pos:line="5" pos:column="21"/></name> <name pos:line="5" pos:column="22">ref<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">r<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">ref<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">list<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ref<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">tail<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="30">list<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">head<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="12" pos:column="9">/*
	 * Some transports support directly peeking at
	 * where HEAD points; if that is the case, then
	 * we don't have to guess.
	 */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">head<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">symref<pos:position pos:line="17" pos:column="25"/></name></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">copy_ref<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><call><name pos:line="18" pos:column="33">find_ref_by_name<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">refs<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="56">head<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">symref<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></return></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/* If refs/heads/master could be right, it is. */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">all<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18"> <block pos:line="21" pos:column="19">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">r<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">find_ref_by_name<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">refs<pos:position pos:line="22" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="44">"refs/heads/master"<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">r<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&amp;&amp;<pos:position pos:line="23" pos:column="33"/></operator> <operator pos:line="23" pos:column="26">!<pos:position pos:line="23" pos:column="27"/></operator><call><name pos:line="23" pos:column="27">oidcmp<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><operator pos:line="23" pos:column="34">&amp;<pos:position pos:line="23" pos:column="39"/></operator><name><name pos:line="23" pos:column="35">r<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">old_oid<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="47">&amp;<pos:position pos:line="23" pos:column="52"/></operator><name><name pos:line="23" pos:column="48">head<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">old_oid<pos:position pos:line="23" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="63"/></condition><then pos:line="23" pos:column="63">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><call><name pos:line="24" pos:column="32">copy_ref<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">r<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></return></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="27" pos:column="9">/* Look for another ref that points there */</comment>
	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">r<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">refs<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></init> <condition><expr><name pos:line="28" pos:column="24">r<pos:position pos:line="28" pos:column="25"/></name></expr>;<pos:position pos:line="28" pos:column="26"/></condition> <incr><expr><name pos:line="28" pos:column="27">r<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <name><name pos:line="28" pos:column="31">r<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">next<pos:position pos:line="28" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="39"/></control> <block pos:line="28" pos:column="40">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">r<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">!=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">head<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">&amp;&amp;<pos:position pos:line="29" pos:column="41"/></operator>
		    <call><name pos:line="30" pos:column="21">starts_with<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">r<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">name<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="42">"refs/heads/"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call> <operator pos:line="30" pos:column="57">&amp;&amp;<pos:position pos:line="30" pos:column="67"/></operator>
		    <operator pos:line="31" pos:column="21">!<pos:position pos:line="31" pos:column="22"/></operator><call><name pos:line="31" pos:column="22">oidcmp<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><operator pos:line="31" pos:column="29">&amp;<pos:position pos:line="31" pos:column="34"/></operator><name><name pos:line="31" pos:column="30">r<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">old_oid<pos:position pos:line="31" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator><name><name pos:line="31" pos:column="43">head<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">old_oid<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58"> <block pos:line="31" pos:column="59">{
			<expr_stmt><expr><operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">tail<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">copy_ref<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">r<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="33" pos:column="25">tail<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="33">(<pos:position pos:line="33" pos:column="34"/></operator><name><operator pos:line="33" pos:column="34">(<pos:position pos:line="33" pos:column="35"/></operator><operator pos:line="33" pos:column="35">*<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">tail<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">)<pos:position pos:line="33" pos:column="41"/></operator><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">next<pos:position pos:line="33" pos:column="47"/></name></name><operator pos:line="33" pos:column="47">)<pos:position pos:line="33" pos:column="48"/></operator></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><operator pos:line="34" pos:column="29">!<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">all<pos:position pos:line="34" pos:column="33"/></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34">
				<block type="pseudo"><break pos:line="35" pos:column="33">break;<pos:position pos:line="35" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">list<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

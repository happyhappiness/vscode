<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_785_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">read_packetized_to_strbuf<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">fd_in<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">strbuf<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">sb_out<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">packet_len<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">orig_len<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name><name pos:line="5" pos:column="27">sb_out<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">len<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">orig_alloc<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name><name pos:line="6" pos:column="29">sb_out<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">alloc<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init pos:line="8" pos:column="14">;<pos:position pos:line="8" pos:column="15"/></init><condition pos:line="8" pos:column="15">;<pos:position pos:line="8" pos:column="16"/></condition><incr/>)<pos:position pos:line="8" pos:column="17"/></control> <block pos:line="8" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">strbuf_grow<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">sb_out<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">LARGE_PACKET_DATA_MAX<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">packet_len<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">packet_read<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">fd_in<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">NULL<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">NULL<pos:position pos:line="10" pos:column="59"/></name></expr></argument>,
			<comment type="block" pos:line="11" pos:column="25">/* strbuf_grow() above always allocates one extra byte to
			 * store a '\0' at the end of the string. packet_read()
			 * writes a '\0' extra byte at the end, too. Let it know
			 * that there is already room for the extra byte.
			 */</comment>
			<argument><expr><name><name pos:line="16" pos:column="25">sb_out<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">buf<pos:position pos:line="16" pos:column="36"/></name></name> <operator pos:line="16" pos:column="37">+<pos:position pos:line="16" pos:column="38"/></operator> <name><name pos:line="16" pos:column="39">sb_out<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">len<pos:position pos:line="16" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">LARGE_PACKET_DATA_MAX<pos:position pos:line="16" pos:column="73"/></name><operator pos:line="16" pos:column="73">+<pos:position pos:line="16" pos:column="74"/></operator><literal type="number" pos:line="16" pos:column="74">1<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>,
			<argument><expr><name pos:line="17" pos:column="25">PACKET_READ_GENTLE_ON_EOF<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">packet_len<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">&lt;=<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
			<block type="pseudo"><break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">sb_out<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">len<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">+=<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">packet_len<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">packet_len<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&lt;<pos:position pos:line="23" pos:column="28"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <block pos:line="23" pos:column="29">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">orig_alloc<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">==<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">strbuf_release<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">sb_out<pos:position pos:line="25" pos:column="46"/></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="26" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">strbuf_setlen<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">sb_out<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">orig_len<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt></block></else></if>
		<return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">packet_len<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<return pos:line="30" pos:column="9">return <expr><name><name pos:line="30" pos:column="16">sb_out<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">len<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">-<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">orig_len<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4709_git-2.12.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_stripspace<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">buf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">enum<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">stripspace_mode<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">mode<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><name pos:line="4" pos:column="37">STRIP_DEFAULT<pos:position pos:line="4" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">option<pos:position pos:line="6" pos:column="28"/></name></name></type> <name><name pos:line="6" pos:column="29">options<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[]<pos:position pos:line="6" pos:column="38"/></index></name> <init pos:line="6" pos:column="39">= <expr><block pos:line="6" pos:column="41">{
		<expr><call><name pos:line="7" pos:column="17">OPT_CMDMODE<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><literal type="char" pos:line="7" pos:column="29">'s'<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"strip-comments"<pos:position pos:line="7" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="52">&amp;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="53">mode<pos:position pos:line="7" pos:column="57"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="8" pos:column="29">N_<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><literal type="string" pos:line="8" pos:column="32">"skip and remove all lines starting with comment character"<pos:position pos:line="8" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="92"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="9" pos:column="29">STRIP_COMMENTS<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>,
		<expr><call><name pos:line="10" pos:column="17">OPT_CMDMODE<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="char" pos:line="10" pos:column="29">'c'<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"comment-lines"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="51">&amp;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="52">mode<pos:position pos:line="10" pos:column="56"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="11" pos:column="29">N_<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><literal type="string" pos:line="11" pos:column="32">"prepend comment character and space to each line"<pos:position pos:line="11" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="83"/></argument_list></call></expr></argument>,
			    <argument><expr><name pos:line="12" pos:column="29">COMMENT_LINES<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>,
		<macro><name pos:line="13" pos:column="17">OPT_END<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="14" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">argc<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">parse_options<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">argc<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">argv<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">prefix<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">options<pos:position pos:line="16" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">stripspace_usage<pos:position pos:line="16" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="77">0<pos:position pos:line="16" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">argc<pos:position pos:line="17" pos:column="17"/></name></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">usage_with_options<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">stripspace_usage<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">options<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">mode<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">STRIP_COMMENTS<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">||<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">mode<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">==<pos:position pos:line="20" pos:column="46"/></operator> <name pos:line="20" pos:column="47">COMMENT_LINES<pos:position pos:line="20" pos:column="60"/></name></expr>)<pos:position pos:line="20" pos:column="61"/></condition><then pos:line="20" pos:column="61"> <block pos:line="20" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">setup_git_directory_gently<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">NULL<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">git_config<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">git_default_config<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">NULL<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">strbuf_read<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="26">buf<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="31">0<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="34">1024<pos:position pos:line="25" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call> <operator pos:line="25" pos:column="40">&lt;<pos:position pos:line="25" pos:column="44"/></operator> <literal type="number" pos:line="25" pos:column="42">0<pos:position pos:line="25" pos:column="43"/></literal></expr>)<pos:position pos:line="25" pos:column="44"/></condition><then pos:line="25" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">die_errno<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><literal type="string" pos:line="26" pos:column="27">"could not read the input"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">mode<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">STRIP_DEFAULT<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">||<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="38">mode<pos:position pos:line="28" pos:column="42"/></name> <operator pos:line="28" pos:column="43">==<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="46">STRIP_COMMENTS<pos:position pos:line="28" pos:column="60"/></name></expr>)<pos:position pos:line="28" pos:column="61"/></condition><then pos:line="28" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">strbuf_stripspace<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><operator pos:line="29" pos:column="35">&amp;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="36">buf<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">mode<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">==<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="49">STRIP_COMMENTS<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt></block></then>
	<else pos:line="30" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">comment_lines<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><operator pos:line="31" pos:column="31">&amp;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="32">buf<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">write_or_die<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><literal type="number" pos:line="33" pos:column="22">1<pos:position pos:line="33" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="25">buf<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">.<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="29">buf<pos:position pos:line="33" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="34">buf<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">.<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">len<pos:position pos:line="33" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_release<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">buf<pos:position pos:line="34" pos:column="28"/></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
	<return pos:line="35" pos:column="9">return <expr><literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>;<pos:position pos:line="35" pos:column="18"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_156_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">send_sideband<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">fd<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">band<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">data<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">ssize_t<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">sz<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">packet_max<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ssize_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">ssz<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">sz<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">p<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">sz<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition> <block pos:line="6" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">unsigned<pos:position pos:line="7" pos:column="25"/></name></type> <name pos:line="7" pos:column="26">n<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name></type> <name><name pos:line="8" pos:column="22">hdr<pos:position pos:line="8" pos:column="25"/></name><index pos:line="8" pos:column="25">[<expr><literal type="number" pos:line="8" pos:column="26">5<pos:position pos:line="8" pos:column="27"/></literal></expr>]<pos:position pos:line="8" pos:column="28"/></index></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

		<expr_stmt><expr><name pos:line="10" pos:column="17">n<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">sz<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">packet_max<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">-<pos:position pos:line="11" pos:column="33"/></operator> <literal type="number" pos:line="11" pos:column="34">5<pos:position pos:line="11" pos:column="35"/></literal> <operator pos:line="11" pos:column="36">&lt;<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="38">n<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">n<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">packet_max<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">-<pos:position pos:line="12" pos:column="41"/></operator> <literal type="number" pos:line="12" pos:column="42">5<pos:position pos:line="12" pos:column="43"/></literal></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal> <operator pos:line="13" pos:column="23">&lt;=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="26">band<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">sprintf<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">hdr<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">"%04x"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">n<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">+<pos:position pos:line="14" pos:column="49"/></operator> <literal type="number" pos:line="14" pos:column="50">5<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="15" pos:column="25">hdr<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><literal type="number" pos:line="15" pos:column="29">4<pos:position pos:line="15" pos:column="30"/></literal></expr>]<pos:position pos:line="15" pos:column="31"/></index></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">band<pos:position pos:line="15" pos:column="38"/></name></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">write_or_die<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">fd<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">hdr<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="47">5<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <else pos:line="17" pos:column="19">else <block pos:line="17" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">sprintf<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">hdr<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="38">"%04x"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">n<pos:position pos:line="18" pos:column="47"/></name> <operator pos:line="18" pos:column="48">+<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">4<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">write_or_die<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">fd<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">hdr<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="47">4<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">write_or_die<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">fd<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">p<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">n<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">+=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">n<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">sz<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">-=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">n<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>
	<return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">ssz<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4252_git-2.0.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_branch<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">argc<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">prefix<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">delete<pos:position pos:line="3" pos:column="19"/></operator> <operator pos:line="3" pos:column="20">=<pos:position pos:line="3" pos:column="21"/></operator> <literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr><operator pos:line="3" pos:column="23">,<pos:position pos:line="3" pos:column="24"/></operator> <expr><name pos:line="3" pos:column="25">rename<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">=<pos:position pos:line="3" pos:column="33"/></operator> <literal type="number" pos:line="3" pos:column="34">0<pos:position pos:line="3" pos:column="35"/></literal></expr><operator pos:line="3" pos:column="35">,<pos:position pos:line="3" pos:column="36"/></operator> <expr><name pos:line="3" pos:column="37">force_create<pos:position pos:line="3" pos:column="49"/></name> <operator pos:line="3" pos:column="50">=<pos:position pos:line="3" pos:column="51"/></operator> <literal type="number" pos:line="3" pos:column="52">0<pos:position pos:line="3" pos:column="53"/></literal></expr><operator pos:line="3" pos:column="53">,<pos:position pos:line="3" pos:column="54"/></operator> <expr><name pos:line="3" pos:column="55">list<pos:position pos:line="3" pos:column="59"/></name> <operator pos:line="3" pos:column="60">=<pos:position pos:line="3" pos:column="61"/></operator> <literal type="number" pos:line="3" pos:column="62">0<pos:position pos:line="3" pos:column="63"/></literal></expr>;<pos:position pos:line="3" pos:column="64"/></expr_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">verbose<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">abbrev<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><operator pos:line="4" pos:column="35">-<pos:position pos:line="4" pos:column="36"/></operator><literal type="number" pos:line="4" pos:column="36">1<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="39">detached<pos:position pos:line="4" pos:column="47"/></name> <init pos:line="4" pos:column="48">= <expr><literal type="number" pos:line="4" pos:column="50">0<pos:position pos:line="4" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">reflog<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="25">edit_description<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">quiet<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="24">unset_upstream<pos:position pos:line="6" pos:column="38"/></name> <init pos:line="6" pos:column="39">= <expr><literal type="number" pos:line="6" pos:column="41">0<pos:position pos:line="6" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">new_upstream<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name pos:line="7" pos:column="36">NULL<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">enum<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">branch_track<pos:position pos:line="8" pos:column="26"/></name></name></type> <name pos:line="8" pos:column="27">track<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">kinds<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">REF_LOCAL_BRANCH<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">commit_list<pos:position pos:line="10" pos:column="27"/></name></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">with_commit<pos:position pos:line="10" pos:column="40"/></name> <init pos:line="10" pos:column="41">= <expr><name pos:line="10" pos:column="43">NULL<pos:position pos:line="10" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">option<pos:position pos:line="12" pos:column="22"/></name></name></type> <name><name pos:line="12" pos:column="23">options<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[]<pos:position pos:line="12" pos:column="32"/></index></name> <init pos:line="12" pos:column="33">= <expr><block pos:line="12" pos:column="35">{
		<expr><call><name pos:line="13" pos:column="17">OPT_GROUP<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><call><name pos:line="13" pos:column="27">N_<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><literal type="string" pos:line="13" pos:column="30">"Generic options"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>,
		<expr><call><name pos:line="14" pos:column="17">OPT__VERBOSE<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="31">verbose<pos:position pos:line="14" pos:column="38"/></name></expr></argument>,
			<argument><expr><call><name pos:line="15" pos:column="25">N_<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"show hash and subject, give twice for upstream branch"<pos:position pos:line="15" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="16" pos:column="17">OPT__QUIET<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">quiet<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="36">N_<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"suppress informational messages"<pos:position pos:line="16" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_SET_INT<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="char" pos:line="17" pos:column="29">'t'<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="34">"track"<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>,  <argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="45">track<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="52">N_<pos:position pos:line="17" pos:column="54"/></name><argument_list pos:line="17" pos:column="54">(<argument><expr><literal type="string" pos:line="17" pos:column="55">"set up tracking mode (see git-pull(1))"<pos:position pos:line="17" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="96"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="18" pos:column="25">BRANCH_TRACK_EXPLICIT<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>,
		<expr><call><name pos:line="19" pos:column="17">OPT_SET_INT<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">( <argument><expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"set-upstream"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>,  <argument><expr><operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="51">track<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="58">N_<pos:position pos:line="19" pos:column="60"/></name><argument_list pos:line="19" pos:column="60">(<argument><expr><literal type="string" pos:line="19" pos:column="61">"change upstream info"<pos:position pos:line="19" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="84"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="20" pos:column="25">BRANCH_TRACK_OVERRIDE<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>,
		<expr><call><name pos:line="21" pos:column="17">OPT_STRING<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><literal type="char" pos:line="21" pos:column="28">'u'<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"set-upstream-to"<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="52">&amp;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="53">new_upstream<pos:position pos:line="21" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="67">"upstream"<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="79">"change the upstream info"<pos:position pos:line="21" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="106"/></argument_list></call></expr>,
		<expr><call><name pos:line="22" pos:column="17">OPT_BOOL<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="29">"unset-upstream"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="47">&amp;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="48">unset_upstream<pos:position pos:line="22" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="64">"Unset the upstream info"<pos:position pos:line="22" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="90"/></argument_list></call></expr>,
		<expr><call><name pos:line="23" pos:column="17">OPT__COLOR<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="29">branch_use_color<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="47">N_<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><literal type="string" pos:line="23" pos:column="50">"use colored output"<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>,
		<expr><call><name pos:line="24" pos:column="17">OPT_SET_INT<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><literal type="char" pos:line="24" pos:column="29">'r'<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"remotes"<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>,     <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="50">kinds<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="57">N_<pos:position pos:line="24" pos:column="59"/></name><argument_list pos:line="24" pos:column="59">(<argument><expr><literal type="string" pos:line="24" pos:column="60">"act on remote-tracking branches"<pos:position pos:line="24" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="94"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="25" pos:column="25">REF_REMOTE_BRANCH<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>,
		<expr><block pos:line="26" pos:column="17">{
			<expr><name pos:line="27" pos:column="25">OPTION_CALLBACK<pos:position pos:line="27" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="27" pos:column="42">0<pos:position pos:line="27" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="27" pos:column="45">"contains"<pos:position pos:line="27" pos:column="55"/></literal></expr>, <expr><operator pos:line="27" pos:column="57">&amp;<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="58">with_commit<pos:position pos:line="27" pos:column="69"/></name></expr>, <expr><call><name pos:line="27" pos:column="71">N_<pos:position pos:line="27" pos:column="73"/></name><argument_list pos:line="27" pos:column="73">(<argument><expr><literal type="string" pos:line="27" pos:column="74">"commit"<pos:position pos:line="27" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>,
			<expr><call><name pos:line="28" pos:column="25">N_<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="string" pos:line="28" pos:column="28">"print only branches that contain the commit"<pos:position pos:line="28" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>,
			<expr><name pos:line="29" pos:column="25">PARSE_OPT_LASTARG_DEFAULT<pos:position pos:line="29" pos:column="50"/></name></expr>,
			<expr><name pos:line="30" pos:column="25">parse_opt_with_commit<pos:position pos:line="30" pos:column="46"/></name></expr>, <expr><operator pos:line="30" pos:column="48">(<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">intptr_t<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">)<pos:position pos:line="30" pos:column="58"/></operator><literal type="string" pos:line="30" pos:column="58">"HEAD"<pos:position pos:line="30" pos:column="64"/></literal></expr>,
		}<pos:position pos:line="31" pos:column="18"/></block></expr>,
		<expr><block pos:line="32" pos:column="17">{
			<expr><name pos:line="33" pos:column="25">OPTION_CALLBACK<pos:position pos:line="33" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="33" pos:column="42">0<pos:position pos:line="33" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="33" pos:column="45">"with"<pos:position pos:line="33" pos:column="51"/></literal></expr>, <expr><operator pos:line="33" pos:column="53">&amp;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="54">with_commit<pos:position pos:line="33" pos:column="65"/></name></expr>, <expr><call><name pos:line="33" pos:column="67">N_<pos:position pos:line="33" pos:column="69"/></name><argument_list pos:line="33" pos:column="69">(<argument><expr><literal type="string" pos:line="33" pos:column="70">"commit"<pos:position pos:line="33" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>,
			<expr><call><name pos:line="34" pos:column="25">N_<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><literal type="string" pos:line="34" pos:column="28">"print only branches that contain the commit"<pos:position pos:line="34" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>,
			<expr><name pos:line="35" pos:column="25">PARSE_OPT_HIDDEN<pos:position pos:line="35" pos:column="41"/></name> <operator pos:line="35" pos:column="42">|<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="44">PARSE_OPT_LASTARG_DEFAULT<pos:position pos:line="35" pos:column="69"/></name></expr>,
			<expr><name pos:line="36" pos:column="25">parse_opt_with_commit<pos:position pos:line="36" pos:column="46"/></name></expr>, <expr><operator pos:line="36" pos:column="48">(<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="49">intptr_t<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator> <literal type="string" pos:line="36" pos:column="59">"HEAD"<pos:position pos:line="36" pos:column="65"/></literal></expr>,
		}<pos:position pos:line="37" pos:column="18"/></block></expr>,
		<expr><call><name pos:line="38" pos:column="17">OPT__ABBREV<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">&amp;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="30">abbrev<pos:position pos:line="38" pos:column="36"/></name></expr></argument>)<pos:position pos:line="38" pos:column="37"/></argument_list></call></expr>,

		<expr><call><name pos:line="40" pos:column="17">OPT_GROUP<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><call><name pos:line="40" pos:column="27">N_<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><literal type="string" pos:line="40" pos:column="30">"Specific git-branch actions:"<pos:position pos:line="40" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>,
		<expr><call><name pos:line="41" pos:column="17">OPT_SET_INT<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><literal type="char" pos:line="41" pos:column="29">'a'<pos:position pos:line="41" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="34">"all"<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="41">&amp;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="42">kinds<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="49">N_<pos:position pos:line="41" pos:column="51"/></name><argument_list pos:line="41" pos:column="51">(<argument><expr><literal type="string" pos:line="41" pos:column="52">"list both remote-tracking and local branches"<pos:position pos:line="41" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="99"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="42" pos:column="25">REF_REMOTE_BRANCH<pos:position pos:line="42" pos:column="42"/></name> <operator pos:line="42" pos:column="43">|<pos:position pos:line="42" pos:column="44"/></operator> <name pos:line="42" pos:column="45">REF_LOCAL_BRANCH<pos:position pos:line="42" pos:column="61"/></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>,
		<expr><call><name pos:line="43" pos:column="17">OPT_BIT<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><literal type="char" pos:line="43" pos:column="25">'d'<pos:position pos:line="43" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="30">"delete"<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator><operator pos:line="43" pos:column="41">delete<pos:position pos:line="43" pos:column="47"/></operator></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="49">N_<pos:position pos:line="43" pos:column="51"/></name><argument_list pos:line="43" pos:column="51">(<argument><expr><literal type="string" pos:line="43" pos:column="52">"delete fully merged branch"<pos:position pos:line="43" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="83">1<pos:position pos:line="43" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="85"/></argument_list></call></expr>,
		<expr><call><name pos:line="44" pos:column="17">OPT_BIT<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><literal type="char" pos:line="44" pos:column="25">'D'<pos:position pos:line="44" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">NULL<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="36">&amp;<pos:position pos:line="44" pos:column="41"/></operator><operator pos:line="44" pos:column="37">delete<pos:position pos:line="44" pos:column="43"/></operator></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="45">N_<pos:position pos:line="44" pos:column="47"/></name><argument_list pos:line="44" pos:column="47">(<argument><expr><literal type="string" pos:line="44" pos:column="48">"delete branch (even if not merged)"<pos:position pos:line="44" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="87">2<pos:position pos:line="44" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="89"/></argument_list></call></expr>,
		<expr><call><name pos:line="45" pos:column="17">OPT_BIT<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><literal type="char" pos:line="45" pos:column="25">'m'<pos:position pos:line="45" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="30">"move"<pos:position pos:line="45" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="38">&amp;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="39">rename<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="47">N_<pos:position pos:line="45" pos:column="49"/></name><argument_list pos:line="45" pos:column="49">(<argument><expr><literal type="string" pos:line="45" pos:column="50">"move/rename a branch and its reflog"<pos:position pos:line="45" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="90">1<pos:position pos:line="45" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="92"/></argument_list></call></expr>,
		<expr><call><name pos:line="46" pos:column="17">OPT_BIT<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><literal type="char" pos:line="46" pos:column="25">'M'<pos:position pos:line="46" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="30">NULL<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="36">&amp;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="37">rename<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="45">N_<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">(<argument><expr><literal type="string" pos:line="46" pos:column="48">"move/rename a branch, even if target exists"<pos:position pos:line="46" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="94"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="96">2<pos:position pos:line="46" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="98"/></argument_list></call></expr>,
		<expr><call><name pos:line="47" pos:column="17">OPT_BOOL<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="29">"list"<pos:position pos:line="47" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="37">&amp;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="38">list<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="44">N_<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr><literal type="string" pos:line="47" pos:column="47">"list branch names"<pos:position pos:line="47" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="48" pos:column="17">OPT_BOOL<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><literal type="char" pos:line="48" pos:column="26">'l'<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="31">"create-reflog"<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="48">&amp;<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="49">reflog<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="57">N_<pos:position pos:line="48" pos:column="59"/></name><argument_list pos:line="48" pos:column="59">(<argument><expr><literal type="string" pos:line="48" pos:column="60">"create the branch's reflog"<pos:position pos:line="48" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="90"/></argument_list></call></expr>,
		<expr><call><name pos:line="49" pos:column="17">OPT_BOOL<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><literal type="number" pos:line="49" pos:column="26">0<pos:position pos:line="49" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="29">"edit-description"<pos:position pos:line="49" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="49">&amp;<pos:position pos:line="49" pos:column="54"/></operator><name pos:line="49" pos:column="50">edit_description<pos:position pos:line="49" pos:column="66"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="50" pos:column="26">N_<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><literal type="string" pos:line="50" pos:column="29">"edit the description for the branch"<pos:position pos:line="50" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="51" pos:column="17">OPT__FORCE<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><operator pos:line="51" pos:column="28">&amp;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="29">force_create<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="43">N_<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><literal type="string" pos:line="51" pos:column="46">"force creation (when already exists)"<pos:position pos:line="51" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="86"/></argument_list></call></expr>,
		<expr><block pos:line="52" pos:column="17">{
			<expr><name pos:line="53" pos:column="25">OPTION_CALLBACK<pos:position pos:line="53" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="53" pos:column="42">0<pos:position pos:line="53" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="53" pos:column="45">"no-merged"<pos:position pos:line="53" pos:column="56"/></literal></expr>, <expr><operator pos:line="53" pos:column="58">&amp;<pos:position pos:line="53" pos:column="63"/></operator><name pos:line="53" pos:column="59">merge_filter_ref<pos:position pos:line="53" pos:column="75"/></name></expr>,
			<expr><call><name pos:line="54" pos:column="25">N_<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><literal type="string" pos:line="54" pos:column="28">"commit"<pos:position pos:line="54" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="37"/></argument_list></call></expr>, <expr><call><name pos:line="54" pos:column="39">N_<pos:position pos:line="54" pos:column="41"/></name><argument_list pos:line="54" pos:column="41">(<argument><expr><literal type="string" pos:line="54" pos:column="42">"print only not merged branches"<pos:position pos:line="54" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>,
			<expr><name pos:line="55" pos:column="25">PARSE_OPT_LASTARG_DEFAULT<pos:position pos:line="55" pos:column="50"/></name> <operator pos:line="55" pos:column="51">|<pos:position pos:line="55" pos:column="52"/></operator> <name pos:line="55" pos:column="53">PARSE_OPT_NONEG<pos:position pos:line="55" pos:column="68"/></name></expr>,
			<expr><name pos:line="56" pos:column="25">opt_parse_merge_filter<pos:position pos:line="56" pos:column="47"/></name></expr>, <expr><operator pos:line="56" pos:column="49">(<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="50">intptr_t<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">)<pos:position pos:line="56" pos:column="59"/></operator> <literal type="string" pos:line="56" pos:column="60">"HEAD"<pos:position pos:line="56" pos:column="66"/></literal></expr>,
		}<pos:position pos:line="57" pos:column="18"/></block></expr>,
		<expr><block pos:line="58" pos:column="17">{
			<expr><name pos:line="59" pos:column="25">OPTION_CALLBACK<pos:position pos:line="59" pos:column="40"/></name></expr>, <expr><literal type="number" pos:line="59" pos:column="42">0<pos:position pos:line="59" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="59" pos:column="45">"merged"<pos:position pos:line="59" pos:column="53"/></literal></expr>, <expr><operator pos:line="59" pos:column="55">&amp;<pos:position pos:line="59" pos:column="60"/></operator><name pos:line="59" pos:column="56">merge_filter_ref<pos:position pos:line="59" pos:column="72"/></name></expr>,
			<expr><call><name pos:line="60" pos:column="25">N_<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><literal type="string" pos:line="60" pos:column="28">"commit"<pos:position pos:line="60" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr>, <expr><call><name pos:line="60" pos:column="39">N_<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><literal type="string" pos:line="60" pos:column="42">"print only merged branches"<pos:position pos:line="60" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call></expr>,
			<expr><name pos:line="61" pos:column="25">PARSE_OPT_LASTARG_DEFAULT<pos:position pos:line="61" pos:column="50"/></name> <operator pos:line="61" pos:column="51">|<pos:position pos:line="61" pos:column="52"/></operator> <name pos:line="61" pos:column="53">PARSE_OPT_NONEG<pos:position pos:line="61" pos:column="68"/></name></expr>,
			<expr><name pos:line="62" pos:column="25">opt_parse_merge_filter<pos:position pos:line="62" pos:column="47"/></name></expr>, <expr><operator pos:line="62" pos:column="49">(<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="50">intptr_t<pos:position pos:line="62" pos:column="58"/></name><operator pos:line="62" pos:column="58">)<pos:position pos:line="62" pos:column="59"/></operator> <literal type="string" pos:line="62" pos:column="60">"HEAD"<pos:position pos:line="62" pos:column="66"/></literal></expr>,
		}<pos:position pos:line="63" pos:column="18"/></block></expr>,
		<expr><call><name pos:line="64" pos:column="17">OPT_COLUMN<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><literal type="number" pos:line="64" pos:column="28">0<pos:position pos:line="64" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="31">"column"<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="41">&amp;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="42">colopts<pos:position pos:line="64" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="51">N_<pos:position pos:line="64" pos:column="53"/></name><argument_list pos:line="64" pos:column="53">(<argument><expr><literal type="string" pos:line="64" pos:column="54">"list branches in columns"<pos:position pos:line="64" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="82"/></argument_list></call></expr>,
		<expr><call><name pos:line="65" pos:column="17">OPT_END<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">()<pos:position pos:line="65" pos:column="26"/></argument_list></call></expr>,
	}<pos:position pos:line="66" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="66" pos:column="11"/></decl_stmt>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">argc<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">==<pos:position pos:line="68" pos:column="20"/></operator> <literal type="number" pos:line="68" pos:column="21">2<pos:position pos:line="68" pos:column="22"/></literal> <operator pos:line="68" pos:column="23">&amp;&amp;<pos:position pos:line="68" pos:column="33"/></operator> <operator pos:line="68" pos:column="26">!<pos:position pos:line="68" pos:column="27"/></operator><call><name pos:line="68" pos:column="27">strcmp<pos:position pos:line="68" pos:column="33"/></name><argument_list pos:line="68" pos:column="33">(<argument><expr><name><name pos:line="68" pos:column="34">argv<pos:position pos:line="68" pos:column="38"/></name><index pos:line="68" pos:column="38">[<expr><literal type="number" pos:line="68" pos:column="39">1<pos:position pos:line="68" pos:column="40"/></literal></expr>]<pos:position pos:line="68" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="43">"-h"<pos:position pos:line="68" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="49"/></condition><then pos:line="68" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">usage_with_options<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">builtin_branch_usage<pos:position pos:line="69" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="58">options<pos:position pos:line="69" pos:column="65"/></name></expr></argument>)<pos:position pos:line="69" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="71" pos:column="9">git_config<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">git_branch_config<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="39">NULL<pos:position pos:line="71" pos:column="43"/></name></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name pos:line="73" pos:column="9">track<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <name pos:line="73" pos:column="17">git_branch_track<pos:position pos:line="73" pos:column="33"/></name></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name pos:line="75" pos:column="9">head<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">resolve_refdup<pos:position pos:line="75" pos:column="30"/></name><argument_list pos:line="75" pos:column="30">(<argument><expr><literal type="string" pos:line="75" pos:column="31">"HEAD"<pos:position pos:line="75" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="39">head_sha1<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="50">0<pos:position pos:line="75" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="53">NULL<pos:position pos:line="75" pos:column="57"/></name></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><operator pos:line="76" pos:column="13">!<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">head<pos:position pos:line="76" pos:column="18"/></name></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="17">die<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><call><name pos:line="77" pos:column="21">_<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><literal type="string" pos:line="77" pos:column="23">"Failed to resolve HEAD as a valid ref."<pos:position pos:line="77" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="66"/></expr_stmt></block></then></if>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">!<pos:position pos:line="78" pos:column="14"/></operator><call><name pos:line="78" pos:column="14">strcmp<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><name pos:line="78" pos:column="21">head<pos:position pos:line="78" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="27">"HEAD"<pos:position pos:line="78" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="35"/></condition><then pos:line="78" pos:column="35"> <block pos:line="78" pos:column="36">{
		<expr_stmt><expr><name pos:line="79" pos:column="17">detached<pos:position pos:line="79" pos:column="25"/></name> <operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator> <literal type="number" pos:line="79" pos:column="28">1<pos:position pos:line="79" pos:column="29"/></literal></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></then> <else pos:line="80" pos:column="11">else <block pos:line="80" pos:column="16">{
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><operator pos:line="81" pos:column="21">!<pos:position pos:line="81" pos:column="22"/></operator><call><name pos:line="81" pos:column="22">starts_with<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">head<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="40">"refs/heads/"<pos:position pos:line="81" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="55"/></condition><then pos:line="81" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="25">die<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><call><name pos:line="82" pos:column="29">_<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><literal type="string" pos:line="82" pos:column="31">"HEAD not found below refs/heads!"<pos:position pos:line="82" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="68"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="83" pos:column="17">head<pos:position pos:line="83" pos:column="21"/></name> <operator pos:line="83" pos:column="22">+=<pos:position pos:line="83" pos:column="24"/></operator> <literal type="number" pos:line="83" pos:column="25">11<pos:position pos:line="83" pos:column="27"/></literal></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="84" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">hashcpy<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><name pos:line="85" pos:column="17">merge_filter_ref<pos:position pos:line="85" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="35">head_sha1<pos:position pos:line="85" pos:column="44"/></name></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>


	<expr_stmt><expr><name pos:line="88" pos:column="9">argc<pos:position pos:line="88" pos:column="13"/></name> <operator pos:line="88" pos:column="14">=<pos:position pos:line="88" pos:column="15"/></operator> <call><name pos:line="88" pos:column="16">parse_options<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><name pos:line="88" pos:column="30">argc<pos:position pos:line="88" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="36">argv<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="42">prefix<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">options<pos:position pos:line="88" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="59">builtin_branch_usage<pos:position pos:line="88" pos:column="79"/></name></expr></argument>,
			     <argument><expr><literal type="number" pos:line="89" pos:column="30">0<pos:position pos:line="89" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><operator pos:line="91" pos:column="14">delete<pos:position pos:line="91" pos:column="20"/></operator> <operator pos:line="91" pos:column="21">&amp;&amp;<pos:position pos:line="91" pos:column="31"/></operator> <operator pos:line="91" pos:column="24">!<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="25">rename<pos:position pos:line="91" pos:column="31"/></name> <operator pos:line="91" pos:column="32">&amp;&amp;<pos:position pos:line="91" pos:column="42"/></operator> <operator pos:line="91" pos:column="35">!<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="36">edit_description<pos:position pos:line="91" pos:column="52"/></name> <operator pos:line="91" pos:column="53">&amp;&amp;<pos:position pos:line="91" pos:column="63"/></operator> <operator pos:line="91" pos:column="56">!<pos:position pos:line="91" pos:column="57"/></operator><name pos:line="91" pos:column="57">new_upstream<pos:position pos:line="91" pos:column="69"/></name> <operator pos:line="91" pos:column="70">&amp;&amp;<pos:position pos:line="91" pos:column="80"/></operator> <operator pos:line="91" pos:column="73">!<pos:position pos:line="91" pos:column="74"/></operator><name pos:line="91" pos:column="74">unset_upstream<pos:position pos:line="91" pos:column="88"/></name> <operator pos:line="91" pos:column="89">&amp;&amp;<pos:position pos:line="91" pos:column="99"/></operator> <name pos:line="91" pos:column="92">argc<pos:position pos:line="91" pos:column="96"/></name> <operator pos:line="91" pos:column="97">==<pos:position pos:line="91" pos:column="99"/></operator> <literal type="number" pos:line="91" pos:column="100">0<pos:position pos:line="91" pos:column="101"/></literal></expr>)<pos:position pos:line="91" pos:column="102"/></condition><then pos:line="91" pos:column="102">
		<block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="17">list<pos:position pos:line="92" pos:column="21"/></name> <operator pos:line="92" pos:column="22">=<pos:position pos:line="92" pos:column="23"/></operator> <literal type="number" pos:line="92" pos:column="24">1<pos:position pos:line="92" pos:column="25"/></literal></expr>;<pos:position pos:line="92" pos:column="26"/></expr_stmt></block></then></if>

	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">with_commit<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">||<pos:position pos:line="94" pos:column="27"/></operator> <name pos:line="94" pos:column="28">merge_filter<pos:position pos:line="94" pos:column="40"/></name> <operator pos:line="94" pos:column="41">!=<pos:position pos:line="94" pos:column="43"/></operator> <name pos:line="94" pos:column="44">NO_FILTER<pos:position pos:line="94" pos:column="53"/></name></expr>)<pos:position pos:line="94" pos:column="54"/></condition><then pos:line="94" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="17">list<pos:position pos:line="95" pos:column="21"/></name> <operator pos:line="95" pos:column="22">=<pos:position pos:line="95" pos:column="23"/></operator> <literal type="number" pos:line="95" pos:column="24">1<pos:position pos:line="95" pos:column="25"/></literal></expr>;<pos:position pos:line="95" pos:column="26"/></expr_stmt></block></then></if>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><operator pos:line="97" pos:column="13">!<pos:position pos:line="97" pos:column="14"/></operator><operator pos:line="97" pos:column="14">!<pos:position pos:line="97" pos:column="15"/></operator><operator pos:line="97" pos:column="15">delete<pos:position pos:line="97" pos:column="21"/></operator> <operator pos:line="97" pos:column="22">+<pos:position pos:line="97" pos:column="23"/></operator> <operator pos:line="97" pos:column="24">!<pos:position pos:line="97" pos:column="25"/></operator><operator pos:line="97" pos:column="25">!<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="26">rename<pos:position pos:line="97" pos:column="32"/></name> <operator pos:line="97" pos:column="33">+<pos:position pos:line="97" pos:column="34"/></operator> <operator pos:line="97" pos:column="35">!<pos:position pos:line="97" pos:column="36"/></operator><operator pos:line="97" pos:column="36">!<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="37">force_create<pos:position pos:line="97" pos:column="49"/></name> <operator pos:line="97" pos:column="50">+<pos:position pos:line="97" pos:column="51"/></operator> <operator pos:line="97" pos:column="52">!<pos:position pos:line="97" pos:column="53"/></operator><operator pos:line="97" pos:column="53">!<pos:position pos:line="97" pos:column="54"/></operator><name pos:line="97" pos:column="54">new_upstream<pos:position pos:line="97" pos:column="66"/></name> <operator pos:line="97" pos:column="67">+<pos:position pos:line="97" pos:column="68"/></operator>
	    <name pos:line="98" pos:column="13">list<pos:position pos:line="98" pos:column="17"/></name> <operator pos:line="98" pos:column="18">+<pos:position pos:line="98" pos:column="19"/></operator> <name pos:line="98" pos:column="20">unset_upstream<pos:position pos:line="98" pos:column="34"/></name> <operator pos:line="98" pos:column="35">&gt;<pos:position pos:line="98" pos:column="39"/></operator> <literal type="number" pos:line="98" pos:column="37">1<pos:position pos:line="98" pos:column="38"/></literal></expr>)<pos:position pos:line="98" pos:column="39"/></condition><then pos:line="98" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="17">usage_with_options<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">(<argument><expr><name pos:line="99" pos:column="36">builtin_branch_usage<pos:position pos:line="99" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="58">options<pos:position pos:line="99" pos:column="65"/></name></expr></argument>)<pos:position pos:line="99" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="67"/></expr_stmt></block></then></if>

	<if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">abbrev<pos:position pos:line="101" pos:column="19"/></name> <operator pos:line="101" pos:column="20">==<pos:position pos:line="101" pos:column="22"/></operator> <operator pos:line="101" pos:column="23">-<pos:position pos:line="101" pos:column="24"/></operator><literal type="number" pos:line="101" pos:column="24">1<pos:position pos:line="101" pos:column="25"/></literal></expr>)<pos:position pos:line="101" pos:column="26"/></condition><then pos:line="101" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="17">abbrev<pos:position pos:line="102" pos:column="23"/></name> <operator pos:line="102" pos:column="24">=<pos:position pos:line="102" pos:column="25"/></operator> <name pos:line="102" pos:column="26">DEFAULT_ABBREV<pos:position pos:line="102" pos:column="40"/></name></expr>;<pos:position pos:line="102" pos:column="41"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="103" pos:column="9">finalize_colopts<pos:position pos:line="103" pos:column="25"/></name><argument_list pos:line="103" pos:column="25">(<argument><expr><operator pos:line="103" pos:column="26">&amp;<pos:position pos:line="103" pos:column="31"/></operator><name pos:line="103" pos:column="27">colopts<pos:position pos:line="103" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="36">-<pos:position pos:line="103" pos:column="37"/></operator><literal type="number" pos:line="103" pos:column="37">1<pos:position pos:line="103" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name pos:line="104" pos:column="13">verbose<pos:position pos:line="104" pos:column="20"/></name></expr>)<pos:position pos:line="104" pos:column="21"/></condition><then pos:line="104" pos:column="21"> <block pos:line="104" pos:column="22">{
		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><call><name pos:line="105" pos:column="21">explicitly_enable_column<pos:position pos:line="105" pos:column="45"/></name><argument_list pos:line="105" pos:column="45">(<argument><expr><name pos:line="105" pos:column="46">colopts<pos:position pos:line="105" pos:column="53"/></name></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="55"/></condition><then pos:line="105" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="25">die<pos:position pos:line="106" pos:column="28"/></name><argument_list pos:line="106" pos:column="28">(<argument><expr><call><name pos:line="106" pos:column="29">_<pos:position pos:line="106" pos:column="30"/></name><argument_list pos:line="106" pos:column="30">(<argument><expr><literal type="string" pos:line="106" pos:column="31">"--column and --verbose are incompatible"<pos:position pos:line="106" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="75"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="107" pos:column="17">colopts<pos:position pos:line="107" pos:column="24"/></name> <operator pos:line="107" pos:column="25">=<pos:position pos:line="107" pos:column="26"/></operator> <literal type="number" pos:line="107" pos:column="27">0<pos:position pos:line="107" pos:column="28"/></literal></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="108" pos:column="10"/></block></then></if>

	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><operator pos:line="110" pos:column="13">delete<pos:position pos:line="110" pos:column="19"/></operator></expr>)<pos:position pos:line="110" pos:column="20"/></condition><then pos:line="110" pos:column="20"> <block pos:line="110" pos:column="21">{
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><operator pos:line="111" pos:column="21">!<pos:position pos:line="111" pos:column="22"/></operator><name pos:line="111" pos:column="22">argc<pos:position pos:line="111" pos:column="26"/></name></expr>)<pos:position pos:line="111" pos:column="27"/></condition><then pos:line="111" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="25">die<pos:position pos:line="112" pos:column="28"/></name><argument_list pos:line="112" pos:column="28">(<argument><expr><call><name pos:line="112" pos:column="29">_<pos:position pos:line="112" pos:column="30"/></name><argument_list pos:line="112" pos:column="30">(<argument><expr><literal type="string" pos:line="112" pos:column="31">"branch name required"<pos:position pos:line="112" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="56"/></expr_stmt></block></then></if>
		<return pos:line="113" pos:column="17">return <expr><call><name pos:line="113" pos:column="24">delete_branches<pos:position pos:line="113" pos:column="39"/></name><argument_list pos:line="113" pos:column="39">(<argument><expr><name pos:line="113" pos:column="40">argc<pos:position pos:line="113" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="46">argv<pos:position pos:line="113" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="52">delete<pos:position pos:line="113" pos:column="58"/></operator> <operator pos:line="113" pos:column="59">&gt;<pos:position pos:line="113" pos:column="63"/></operator> <literal type="number" pos:line="113" pos:column="61">1<pos:position pos:line="113" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="64">kinds<pos:position pos:line="113" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="71">quiet<pos:position pos:line="113" pos:column="76"/></name></expr></argument>)<pos:position pos:line="113" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="78"/></return>
	}<pos:position pos:line="114" pos:column="10"/></block></then> <elseif pos:line="114" pos:column="11">else <if pos:line="114" pos:column="16">if <condition pos:line="114" pos:column="19">(<expr><name pos:line="114" pos:column="20">list<pos:position pos:line="114" pos:column="24"/></name></expr>)<pos:position pos:line="114" pos:column="25"/></condition><then pos:line="114" pos:column="25"> <block pos:line="114" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="115" pos:column="17">int<pos:position pos:line="115" pos:column="20"/></name></type> <name pos:line="115" pos:column="21">ret<pos:position pos:line="115" pos:column="24"/></name> <init pos:line="115" pos:column="25">= <expr><call><name pos:line="115" pos:column="27">print_ref_list<pos:position pos:line="115" pos:column="41"/></name><argument_list pos:line="115" pos:column="41">(<argument><expr><name pos:line="115" pos:column="42">kinds<pos:position pos:line="115" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="49">detached<pos:position pos:line="115" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="59">verbose<pos:position pos:line="115" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="68">abbrev<pos:position pos:line="115" pos:column="74"/></name></expr></argument>,
					 <argument><expr><name pos:line="116" pos:column="42">with_commit<pos:position pos:line="116" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="55">argv<pos:position pos:line="116" pos:column="59"/></name></expr></argument>)<pos:position pos:line="116" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="116" pos:column="61"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="117" pos:column="17">print_columns<pos:position pos:line="117" pos:column="30"/></name><argument_list pos:line="117" pos:column="30">(<argument><expr><operator pos:line="117" pos:column="31">&amp;<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="32">output<pos:position pos:line="117" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="40">colopts<pos:position pos:line="117" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="49">NULL<pos:position pos:line="117" pos:column="53"/></name></expr></argument>)<pos:position pos:line="117" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">string_list_clear<pos:position pos:line="118" pos:column="34"/></name><argument_list pos:line="118" pos:column="34">(<argument><expr><operator pos:line="118" pos:column="35">&amp;<pos:position pos:line="118" pos:column="40"/></operator><name pos:line="118" pos:column="36">output<pos:position pos:line="118" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="44">0<pos:position pos:line="118" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="47"/></expr_stmt>
		<return pos:line="119" pos:column="17">return <expr><name pos:line="119" pos:column="24">ret<pos:position pos:line="119" pos:column="27"/></name></expr>;<pos:position pos:line="119" pos:column="28"/></return>
	}<pos:position pos:line="120" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="121" pos:column="9">else <if pos:line="121" pos:column="14">if <condition pos:line="121" pos:column="17">(<expr><name pos:line="121" pos:column="18">edit_description<pos:position pos:line="121" pos:column="34"/></name></expr>)<pos:position pos:line="121" pos:column="35"/></condition><then pos:line="121" pos:column="35"> <block pos:line="121" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="122" pos:column="17">const<pos:position pos:line="122" pos:column="22"/></specifier> <name pos:line="122" pos:column="23">char<pos:position pos:line="122" pos:column="27"/></name> <modifier pos:line="122" pos:column="28">*<pos:position pos:line="122" pos:column="29"/></modifier></type><name pos:line="122" pos:column="29">branch_name<pos:position pos:line="122" pos:column="40"/></name></decl>;<pos:position pos:line="122" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="123" pos:column="17">struct<pos:position pos:line="123" pos:column="23"/></name> <name pos:line="123" pos:column="24">strbuf<pos:position pos:line="123" pos:column="30"/></name></name></type> <name pos:line="123" pos:column="31">branch_ref<pos:position pos:line="123" pos:column="41"/></name> <init pos:line="123" pos:column="42">= <expr><name pos:line="123" pos:column="44">STRBUF_INIT<pos:position pos:line="123" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="123" pos:column="56"/></decl_stmt>

		<if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><operator pos:line="125" pos:column="21">!<pos:position pos:line="125" pos:column="22"/></operator><name pos:line="125" pos:column="22">argc<pos:position pos:line="125" pos:column="26"/></name></expr>)<pos:position pos:line="125" pos:column="27"/></condition><then pos:line="125" pos:column="27"> <block pos:line="125" pos:column="28">{
			<if pos:line="126" pos:column="25">if <condition pos:line="126" pos:column="28">(<expr><name pos:line="126" pos:column="29">detached<pos:position pos:line="126" pos:column="37"/></name></expr>)<pos:position pos:line="126" pos:column="38"/></condition><then pos:line="126" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="33">die<pos:position pos:line="127" pos:column="36"/></name><argument_list pos:line="127" pos:column="36">(<argument><expr><call><name pos:line="127" pos:column="37">_<pos:position pos:line="127" pos:column="38"/></name><argument_list pos:line="127" pos:column="38">(<argument><expr><literal type="string" pos:line="127" pos:column="39">"Cannot give description to detached HEAD"<pos:position pos:line="127" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="84"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="128" pos:column="25">branch_name<pos:position pos:line="128" pos:column="36"/></name> <operator pos:line="128" pos:column="37">=<pos:position pos:line="128" pos:column="38"/></operator> <name pos:line="128" pos:column="39">head<pos:position pos:line="128" pos:column="43"/></name></expr>;<pos:position pos:line="128" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="129" pos:column="18"/></block></then> <elseif pos:line="129" pos:column="19">else <if pos:line="129" pos:column="24">if <condition pos:line="129" pos:column="27">(<expr><name pos:line="129" pos:column="28">argc<pos:position pos:line="129" pos:column="32"/></name> <operator pos:line="129" pos:column="33">==<pos:position pos:line="129" pos:column="35"/></operator> <literal type="number" pos:line="129" pos:column="36">1<pos:position pos:line="129" pos:column="37"/></literal></expr>)<pos:position pos:line="129" pos:column="38"/></condition><then pos:line="129" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="25">branch_name<pos:position pos:line="130" pos:column="36"/></name> <operator pos:line="130" pos:column="37">=<pos:position pos:line="130" pos:column="38"/></operator> <name><name pos:line="130" pos:column="39">argv<pos:position pos:line="130" pos:column="43"/></name><index pos:line="130" pos:column="43">[<expr><literal type="number" pos:line="130" pos:column="44">0<pos:position pos:line="130" pos:column="45"/></literal></expr>]<pos:position pos:line="130" pos:column="46"/></index></name></expr>;<pos:position pos:line="130" pos:column="47"/></expr_stmt></block></then></if></elseif>
		<else pos:line="131" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="25">die<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><call><name pos:line="132" pos:column="29">_<pos:position pos:line="132" pos:column="30"/></name><argument_list pos:line="132" pos:column="30">(<argument><expr><literal type="string" pos:line="132" pos:column="31">"cannot edit description of more than one branch"<pos:position pos:line="132" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="132" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="83"/></expr_stmt></block></else></if>

		<expr_stmt><expr><call><name pos:line="134" pos:column="17">strbuf_addf<pos:position pos:line="134" pos:column="28"/></name><argument_list pos:line="134" pos:column="28">(<argument><expr><operator pos:line="134" pos:column="29">&amp;<pos:position pos:line="134" pos:column="34"/></operator><name pos:line="134" pos:column="30">branch_ref<pos:position pos:line="134" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="42">"refs/heads/%s"<pos:position pos:line="134" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="59">branch_name<pos:position pos:line="134" pos:column="70"/></name></expr></argument>)<pos:position pos:line="134" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="72"/></expr_stmt>
		<if pos:line="135" pos:column="17">if <condition pos:line="135" pos:column="20">(<expr><operator pos:line="135" pos:column="21">!<pos:position pos:line="135" pos:column="22"/></operator><call><name pos:line="135" pos:column="22">ref_exists<pos:position pos:line="135" pos:column="32"/></name><argument_list pos:line="135" pos:column="32">(<argument><expr><name><name pos:line="135" pos:column="33">branch_ref<pos:position pos:line="135" pos:column="43"/></name><operator pos:line="135" pos:column="43">.<pos:position pos:line="135" pos:column="44"/></operator><name pos:line="135" pos:column="44">buf<pos:position pos:line="135" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="49"/></condition><then pos:line="135" pos:column="49"> <block pos:line="135" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="136" pos:column="25">strbuf_release<pos:position pos:line="136" pos:column="39"/></name><argument_list pos:line="136" pos:column="39">(<argument><expr><operator pos:line="136" pos:column="40">&amp;<pos:position pos:line="136" pos:column="45"/></operator><name pos:line="136" pos:column="41">branch_ref<pos:position pos:line="136" pos:column="51"/></name></expr></argument>)<pos:position pos:line="136" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="53"/></expr_stmt>

			<if pos:line="138" pos:column="25">if <condition pos:line="138" pos:column="28">(<expr><operator pos:line="138" pos:column="29">!<pos:position pos:line="138" pos:column="30"/></operator><name pos:line="138" pos:column="30">argc<pos:position pos:line="138" pos:column="34"/></name></expr>)<pos:position pos:line="138" pos:column="35"/></condition><then pos:line="138" pos:column="35">
				<block type="pseudo"><return pos:line="139" pos:column="33">return <expr><call><name pos:line="139" pos:column="40">error<pos:position pos:line="139" pos:column="45"/></name><argument_list pos:line="139" pos:column="45">(<argument><expr><call><name pos:line="139" pos:column="46">_<pos:position pos:line="139" pos:column="47"/></name><argument_list pos:line="139" pos:column="47">(<argument><expr><literal type="string" pos:line="139" pos:column="48">"No commit on branch '%s' yet."<pos:position pos:line="139" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="80"/></argument_list></call></expr></argument>,
					     <argument><expr><name pos:line="140" pos:column="46">branch_name<pos:position pos:line="140" pos:column="57"/></name></expr></argument>)<pos:position pos:line="140" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="59"/></return></block></then>
			<else pos:line="141" pos:column="25">else
				<block type="pseudo"><return pos:line="142" pos:column="33">return <expr><call><name pos:line="142" pos:column="40">error<pos:position pos:line="142" pos:column="45"/></name><argument_list pos:line="142" pos:column="45">(<argument><expr><call><name pos:line="142" pos:column="46">_<pos:position pos:line="142" pos:column="47"/></name><argument_list pos:line="142" pos:column="47">(<argument><expr><literal type="string" pos:line="142" pos:column="48">"No branch named '%s'."<pos:position pos:line="142" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="72"/></argument_list></call></expr></argument>,
					     <argument><expr><name pos:line="143" pos:column="46">branch_name<pos:position pos:line="143" pos:column="57"/></name></expr></argument>)<pos:position pos:line="143" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="59"/></return></block></else></if>
		}<pos:position pos:line="144" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="145" pos:column="17">strbuf_release<pos:position pos:line="145" pos:column="31"/></name><argument_list pos:line="145" pos:column="31">(<argument><expr><operator pos:line="145" pos:column="32">&amp;<pos:position pos:line="145" pos:column="37"/></operator><name pos:line="145" pos:column="33">branch_ref<pos:position pos:line="145" pos:column="43"/></name></expr></argument>)<pos:position pos:line="145" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="45"/></expr_stmt>

		<if pos:line="147" pos:column="17">if <condition pos:line="147" pos:column="20">(<expr><call><name pos:line="147" pos:column="21">edit_branch_description<pos:position pos:line="147" pos:column="44"/></name><argument_list pos:line="147" pos:column="44">(<argument><expr><name pos:line="147" pos:column="45">branch_name<pos:position pos:line="147" pos:column="56"/></name></expr></argument>)<pos:position pos:line="147" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="58"/></condition><then pos:line="147" pos:column="58">
			<block type="pseudo"><return pos:line="148" pos:column="25">return <expr><literal type="number" pos:line="148" pos:column="32">1<pos:position pos:line="148" pos:column="33"/></literal></expr>;<pos:position pos:line="148" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="149" pos:column="10"/></block></then></if></elseif> <elseif pos:line="149" pos:column="11">else <if pos:line="149" pos:column="16">if <condition pos:line="149" pos:column="19">(<expr><name pos:line="149" pos:column="20">rename<pos:position pos:line="149" pos:column="26"/></name></expr>)<pos:position pos:line="149" pos:column="27"/></condition><then pos:line="149" pos:column="27"> <block pos:line="149" pos:column="28">{
		<if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><operator pos:line="150" pos:column="21">!<pos:position pos:line="150" pos:column="22"/></operator><name pos:line="150" pos:column="22">argc<pos:position pos:line="150" pos:column="26"/></name></expr>)<pos:position pos:line="150" pos:column="27"/></condition><then pos:line="150" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="25">die<pos:position pos:line="151" pos:column="28"/></name><argument_list pos:line="151" pos:column="28">(<argument><expr><call><name pos:line="151" pos:column="29">_<pos:position pos:line="151" pos:column="30"/></name><argument_list pos:line="151" pos:column="30">(<argument><expr><literal type="string" pos:line="151" pos:column="31">"branch name required"<pos:position pos:line="151" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="151" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="56"/></expr_stmt></block></then>
		<elseif pos:line="152" pos:column="17">else <if pos:line="152" pos:column="22">if <condition pos:line="152" pos:column="25">(<expr><name pos:line="152" pos:column="26">argc<pos:position pos:line="152" pos:column="30"/></name> <operator pos:line="152" pos:column="31">==<pos:position pos:line="152" pos:column="33"/></operator> <literal type="number" pos:line="152" pos:column="34">1<pos:position pos:line="152" pos:column="35"/></literal></expr>)<pos:position pos:line="152" pos:column="36"/></condition><then pos:line="152" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="153" pos:column="25">rename_branch<pos:position pos:line="153" pos:column="38"/></name><argument_list pos:line="153" pos:column="38">(<argument><expr><name pos:line="153" pos:column="39">head<pos:position pos:line="153" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="45">argv<pos:position pos:line="153" pos:column="49"/></name><index pos:line="153" pos:column="49">[<expr><literal type="number" pos:line="153" pos:column="50">0<pos:position pos:line="153" pos:column="51"/></literal></expr>]<pos:position pos:line="153" pos:column="52"/></index></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="54">rename<pos:position pos:line="153" pos:column="60"/></name> <operator pos:line="153" pos:column="61">&gt;<pos:position pos:line="153" pos:column="65"/></operator> <literal type="number" pos:line="153" pos:column="63">1<pos:position pos:line="153" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="66"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="154" pos:column="17">else <if pos:line="154" pos:column="22">if <condition pos:line="154" pos:column="25">(<expr><name pos:line="154" pos:column="26">argc<pos:position pos:line="154" pos:column="30"/></name> <operator pos:line="154" pos:column="31">==<pos:position pos:line="154" pos:column="33"/></operator> <literal type="number" pos:line="154" pos:column="34">2<pos:position pos:line="154" pos:column="35"/></literal></expr>)<pos:position pos:line="154" pos:column="36"/></condition><then pos:line="154" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="25">rename_branch<pos:position pos:line="155" pos:column="38"/></name><argument_list pos:line="155" pos:column="38">(<argument><expr><name><name pos:line="155" pos:column="39">argv<pos:position pos:line="155" pos:column="43"/></name><index pos:line="155" pos:column="43">[<expr><literal type="number" pos:line="155" pos:column="44">0<pos:position pos:line="155" pos:column="45"/></literal></expr>]<pos:position pos:line="155" pos:column="46"/></index></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="48">argv<pos:position pos:line="155" pos:column="52"/></name><index pos:line="155" pos:column="52">[<expr><literal type="number" pos:line="155" pos:column="53">1<pos:position pos:line="155" pos:column="54"/></literal></expr>]<pos:position pos:line="155" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="57">rename<pos:position pos:line="155" pos:column="63"/></name> <operator pos:line="155" pos:column="64">&gt;<pos:position pos:line="155" pos:column="68"/></operator> <literal type="number" pos:line="155" pos:column="66">1<pos:position pos:line="155" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="69"/></expr_stmt></block></then></if></elseif>
		<else pos:line="156" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="25">die<pos:position pos:line="157" pos:column="28"/></name><argument_list pos:line="157" pos:column="28">(<argument><expr><call><name pos:line="157" pos:column="29">_<pos:position pos:line="157" pos:column="30"/></name><argument_list pos:line="157" pos:column="30">(<argument><expr><literal type="string" pos:line="157" pos:column="31">"too many branches for a rename operation"<pos:position pos:line="157" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="157" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="76"/></expr_stmt></block></else></if>
	}<pos:position pos:line="158" pos:column="10"/></block></then></if></elseif> <elseif pos:line="158" pos:column="11">else <if pos:line="158" pos:column="16">if <condition pos:line="158" pos:column="19">(<expr><name pos:line="158" pos:column="20">new_upstream<pos:position pos:line="158" pos:column="32"/></name></expr>)<pos:position pos:line="158" pos:column="33"/></condition><then pos:line="158" pos:column="33"> <block pos:line="158" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="159" pos:column="17">struct<pos:position pos:line="159" pos:column="23"/></name> <name pos:line="159" pos:column="24">branch<pos:position pos:line="159" pos:column="30"/></name></name> <modifier pos:line="159" pos:column="31">*<pos:position pos:line="159" pos:column="32"/></modifier></type><name pos:line="159" pos:column="32">branch<pos:position pos:line="159" pos:column="38"/></name> <init pos:line="159" pos:column="39">= <expr><call><name pos:line="159" pos:column="41">branch_get<pos:position pos:line="159" pos:column="51"/></name><argument_list pos:line="159" pos:column="51">(<argument><expr><name><name pos:line="159" pos:column="52">argv<pos:position pos:line="159" pos:column="56"/></name><index pos:line="159" pos:column="56">[<expr><literal type="number" pos:line="159" pos:column="57">0<pos:position pos:line="159" pos:column="58"/></literal></expr>]<pos:position pos:line="159" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="159" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="159" pos:column="61"/></decl_stmt>

		<if pos:line="161" pos:column="17">if <condition pos:line="161" pos:column="20">(<expr><name pos:line="161" pos:column="21">argc<pos:position pos:line="161" pos:column="25"/></name> <operator pos:line="161" pos:column="26">&gt;<pos:position pos:line="161" pos:column="30"/></operator> <literal type="number" pos:line="161" pos:column="28">1<pos:position pos:line="161" pos:column="29"/></literal></expr>)<pos:position pos:line="161" pos:column="30"/></condition><then pos:line="161" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="162" pos:column="25">die<pos:position pos:line="162" pos:column="28"/></name><argument_list pos:line="162" pos:column="28">(<argument><expr><call><name pos:line="162" pos:column="29">_<pos:position pos:line="162" pos:column="30"/></name><argument_list pos:line="162" pos:column="30">(<argument><expr><literal type="string" pos:line="162" pos:column="31">"too many branches to set new upstream"<pos:position pos:line="162" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="162" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="73"/></expr_stmt></block></then></if>

		<if pos:line="164" pos:column="17">if <condition pos:line="164" pos:column="20">(<expr><operator pos:line="164" pos:column="21">!<pos:position pos:line="164" pos:column="22"/></operator><name pos:line="164" pos:column="22">branch<pos:position pos:line="164" pos:column="28"/></name></expr>)<pos:position pos:line="164" pos:column="29"/></condition><then pos:line="164" pos:column="29"> <block pos:line="164" pos:column="30">{
			<if pos:line="165" pos:column="25">if <condition pos:line="165" pos:column="28">(<expr><operator pos:line="165" pos:column="29">!<pos:position pos:line="165" pos:column="30"/></operator><name pos:line="165" pos:column="30">argc<pos:position pos:line="165" pos:column="34"/></name> <operator pos:line="165" pos:column="35">||<pos:position pos:line="165" pos:column="37"/></operator> <operator pos:line="165" pos:column="38">!<pos:position pos:line="165" pos:column="39"/></operator><call><name pos:line="165" pos:column="39">strcmp<pos:position pos:line="165" pos:column="45"/></name><argument_list pos:line="165" pos:column="45">(<argument><expr><name><name pos:line="165" pos:column="46">argv<pos:position pos:line="165" pos:column="50"/></name><index pos:line="165" pos:column="50">[<expr><literal type="number" pos:line="165" pos:column="51">0<pos:position pos:line="165" pos:column="52"/></literal></expr>]<pos:position pos:line="165" pos:column="53"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="55">"HEAD"<pos:position pos:line="165" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="165" pos:column="63"/></condition><then pos:line="165" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="33">die<pos:position pos:line="166" pos:column="36"/></name><argument_list pos:line="166" pos:column="36">(<argument><expr><call><name pos:line="166" pos:column="37">_<pos:position pos:line="166" pos:column="38"/></name><argument_list pos:line="166" pos:column="38">(<argument><expr><literal type="string" pos:line="166" pos:column="39">"could not set upstream of HEAD to %s when "<pos:position pos:line="166" pos:column="83"/></literal>
				      <literal type="string" pos:line="167" pos:column="39">"it does not point to any branch."<pos:position pos:line="167" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="74"/></argument_list></call></expr></argument>,
				    <argument><expr><name pos:line="168" pos:column="37">new_upstream<pos:position pos:line="168" pos:column="49"/></name></expr></argument>)<pos:position pos:line="168" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="51"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="169" pos:column="25">die<pos:position pos:line="169" pos:column="28"/></name><argument_list pos:line="169" pos:column="28">(<argument><expr><call><name pos:line="169" pos:column="29">_<pos:position pos:line="169" pos:column="30"/></name><argument_list pos:line="169" pos:column="30">(<argument><expr><literal type="string" pos:line="169" pos:column="31">"no such branch '%s'"<pos:position pos:line="169" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="169" pos:column="55">argv<pos:position pos:line="169" pos:column="59"/></name><index pos:line="169" pos:column="59">[<expr><literal type="number" pos:line="169" pos:column="60">0<pos:position pos:line="169" pos:column="61"/></literal></expr>]<pos:position pos:line="169" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="169" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="170" pos:column="18"/></block></then></if>

		<if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><operator pos:line="172" pos:column="21">!<pos:position pos:line="172" pos:column="22"/></operator><call><name pos:line="172" pos:column="22">ref_exists<pos:position pos:line="172" pos:column="32"/></name><argument_list pos:line="172" pos:column="32">(<argument><expr><name><name pos:line="172" pos:column="33">branch<pos:position pos:line="172" pos:column="39"/></name><operator pos:line="172" pos:column="39">-&gt;<pos:position pos:line="172" pos:column="44"/></operator><name pos:line="172" pos:column="41">refname<pos:position pos:line="172" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="172" pos:column="50"/></condition><then pos:line="172" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="173" pos:column="25">die<pos:position pos:line="173" pos:column="28"/></name><argument_list pos:line="173" pos:column="28">(<argument><expr><call><name pos:line="173" pos:column="29">_<pos:position pos:line="173" pos:column="30"/></name><argument_list pos:line="173" pos:column="30">(<argument><expr><literal type="string" pos:line="173" pos:column="31">"branch '%s' does not exist"<pos:position pos:line="173" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="62">branch<pos:position pos:line="173" pos:column="68"/></name><operator pos:line="173" pos:column="68">-&gt;<pos:position pos:line="173" pos:column="73"/></operator><name pos:line="173" pos:column="70">name<pos:position pos:line="173" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="76"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="175" pos:column="17">/*
		 * create_branch takes care of setting up the tracking
		 * info and making sure new_upstream is correct
		 */</comment>
		<expr_stmt><expr><call><name pos:line="179" pos:column="17">create_branch<pos:position pos:line="179" pos:column="30"/></name><argument_list pos:line="179" pos:column="30">(<argument><expr><name pos:line="179" pos:column="31">head<pos:position pos:line="179" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="179" pos:column="37">branch<pos:position pos:line="179" pos:column="43"/></name><operator pos:line="179" pos:column="43">-&gt;<pos:position pos:line="179" pos:column="48"/></operator><name pos:line="179" pos:column="45">name<pos:position pos:line="179" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="51">new_upstream<pos:position pos:line="179" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="65">0<pos:position pos:line="179" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="68">0<pos:position pos:line="179" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="71">0<pos:position pos:line="179" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="179" pos:column="74">quiet<pos:position pos:line="179" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="81">BRANCH_TRACK_OVERRIDE<pos:position pos:line="179" pos:column="102"/></name></expr></argument>)<pos:position pos:line="179" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="104"/></expr_stmt>
	}<pos:position pos:line="180" pos:column="10"/></block></then></if></elseif> <elseif pos:line="180" pos:column="11">else <if pos:line="180" pos:column="16">if <condition pos:line="180" pos:column="19">(<expr><name pos:line="180" pos:column="20">unset_upstream<pos:position pos:line="180" pos:column="34"/></name></expr>)<pos:position pos:line="180" pos:column="35"/></condition><then pos:line="180" pos:column="35"> <block pos:line="180" pos:column="36">{
		<decl_stmt><decl><type><name><name pos:line="181" pos:column="17">struct<pos:position pos:line="181" pos:column="23"/></name> <name pos:line="181" pos:column="24">branch<pos:position pos:line="181" pos:column="30"/></name></name> <modifier pos:line="181" pos:column="31">*<pos:position pos:line="181" pos:column="32"/></modifier></type><name pos:line="181" pos:column="32">branch<pos:position pos:line="181" pos:column="38"/></name> <init pos:line="181" pos:column="39">= <expr><call><name pos:line="181" pos:column="41">branch_get<pos:position pos:line="181" pos:column="51"/></name><argument_list pos:line="181" pos:column="51">(<argument><expr><name><name pos:line="181" pos:column="52">argv<pos:position pos:line="181" pos:column="56"/></name><index pos:line="181" pos:column="56">[<expr><literal type="number" pos:line="181" pos:column="57">0<pos:position pos:line="181" pos:column="58"/></literal></expr>]<pos:position pos:line="181" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="181" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="181" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="182" pos:column="17">struct<pos:position pos:line="182" pos:column="23"/></name> <name pos:line="182" pos:column="24">strbuf<pos:position pos:line="182" pos:column="30"/></name></name></type> <name pos:line="182" pos:column="31">buf<pos:position pos:line="182" pos:column="34"/></name> <init pos:line="182" pos:column="35">= <expr><name pos:line="182" pos:column="37">STRBUF_INIT<pos:position pos:line="182" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="182" pos:column="49"/></decl_stmt>

		<if pos:line="184" pos:column="17">if <condition pos:line="184" pos:column="20">(<expr><name pos:line="184" pos:column="21">argc<pos:position pos:line="184" pos:column="25"/></name> <operator pos:line="184" pos:column="26">&gt;<pos:position pos:line="184" pos:column="30"/></operator> <literal type="number" pos:line="184" pos:column="28">1<pos:position pos:line="184" pos:column="29"/></literal></expr>)<pos:position pos:line="184" pos:column="30"/></condition><then pos:line="184" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="25">die<pos:position pos:line="185" pos:column="28"/></name><argument_list pos:line="185" pos:column="28">(<argument><expr><call><name pos:line="185" pos:column="29">_<pos:position pos:line="185" pos:column="30"/></name><argument_list pos:line="185" pos:column="30">(<argument><expr><literal type="string" pos:line="185" pos:column="31">"too many branches to unset upstream"<pos:position pos:line="185" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="185" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="71"/></expr_stmt></block></then></if>

		<if pos:line="187" pos:column="17">if <condition pos:line="187" pos:column="20">(<expr><operator pos:line="187" pos:column="21">!<pos:position pos:line="187" pos:column="22"/></operator><name pos:line="187" pos:column="22">branch<pos:position pos:line="187" pos:column="28"/></name></expr>)<pos:position pos:line="187" pos:column="29"/></condition><then pos:line="187" pos:column="29"> <block pos:line="187" pos:column="30">{
			<if pos:line="188" pos:column="25">if <condition pos:line="188" pos:column="28">(<expr><operator pos:line="188" pos:column="29">!<pos:position pos:line="188" pos:column="30"/></operator><name pos:line="188" pos:column="30">argc<pos:position pos:line="188" pos:column="34"/></name> <operator pos:line="188" pos:column="35">||<pos:position pos:line="188" pos:column="37"/></operator> <operator pos:line="188" pos:column="38">!<pos:position pos:line="188" pos:column="39"/></operator><call><name pos:line="188" pos:column="39">strcmp<pos:position pos:line="188" pos:column="45"/></name><argument_list pos:line="188" pos:column="45">(<argument><expr><name><name pos:line="188" pos:column="46">argv<pos:position pos:line="188" pos:column="50"/></name><index pos:line="188" pos:column="50">[<expr><literal type="number" pos:line="188" pos:column="51">0<pos:position pos:line="188" pos:column="52"/></literal></expr>]<pos:position pos:line="188" pos:column="53"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="55">"HEAD"<pos:position pos:line="188" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="188" pos:column="63"/></condition><then pos:line="188" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="33">die<pos:position pos:line="189" pos:column="36"/></name><argument_list pos:line="189" pos:column="36">(<argument><expr><call><name pos:line="189" pos:column="37">_<pos:position pos:line="189" pos:column="38"/></name><argument_list pos:line="189" pos:column="38">(<argument><expr><literal type="string" pos:line="189" pos:column="39">"could not unset upstream of HEAD when "<pos:position pos:line="189" pos:column="79"/></literal>
				      <literal type="string" pos:line="190" pos:column="39">"it does not point to any branch."<pos:position pos:line="190" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="190" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="76"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="191" pos:column="25">die<pos:position pos:line="191" pos:column="28"/></name><argument_list pos:line="191" pos:column="28">(<argument><expr><call><name pos:line="191" pos:column="29">_<pos:position pos:line="191" pos:column="30"/></name><argument_list pos:line="191" pos:column="30">(<argument><expr><literal type="string" pos:line="191" pos:column="31">"no such branch '%s'"<pos:position pos:line="191" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="55">argv<pos:position pos:line="191" pos:column="59"/></name><index pos:line="191" pos:column="59">[<expr><literal type="number" pos:line="191" pos:column="60">0<pos:position pos:line="191" pos:column="61"/></literal></expr>]<pos:position pos:line="191" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="191" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="192" pos:column="18"/></block></then></if>

		<if pos:line="194" pos:column="17">if <condition pos:line="194" pos:column="20">(<expr><operator pos:line="194" pos:column="21">!<pos:position pos:line="194" pos:column="22"/></operator><call><name pos:line="194" pos:column="22">branch_has_merge_config<pos:position pos:line="194" pos:column="45"/></name><argument_list pos:line="194" pos:column="45">(<argument><expr><name pos:line="194" pos:column="46">branch<pos:position pos:line="194" pos:column="52"/></name></expr></argument>)<pos:position pos:line="194" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="194" pos:column="54"/></condition><then pos:line="194" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="195" pos:column="25">die<pos:position pos:line="195" pos:column="28"/></name><argument_list pos:line="195" pos:column="28">(<argument><expr><call><name pos:line="195" pos:column="29">_<pos:position pos:line="195" pos:column="30"/></name><argument_list pos:line="195" pos:column="30">(<argument><expr><literal type="string" pos:line="195" pos:column="31">"Branch '%s' has no upstream information"<pos:position pos:line="195" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="75">branch<pos:position pos:line="195" pos:column="81"/></name><operator pos:line="195" pos:column="81">-&gt;<pos:position pos:line="195" pos:column="86"/></operator><name pos:line="195" pos:column="83">name<pos:position pos:line="195" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="89"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="197" pos:column="17">strbuf_addf<pos:position pos:line="197" pos:column="28"/></name><argument_list pos:line="197" pos:column="28">(<argument><expr><operator pos:line="197" pos:column="29">&amp;<pos:position pos:line="197" pos:column="34"/></operator><name pos:line="197" pos:column="30">buf<pos:position pos:line="197" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="35">"branch.%s.remote"<pos:position pos:line="197" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="55">branch<pos:position pos:line="197" pos:column="61"/></name><operator pos:line="197" pos:column="61">-&gt;<pos:position pos:line="197" pos:column="66"/></operator><name pos:line="197" pos:column="63">name<pos:position pos:line="197" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="198" pos:column="17">git_config_set_multivar<pos:position pos:line="198" pos:column="40"/></name><argument_list pos:line="198" pos:column="40">(<argument><expr><name><name pos:line="198" pos:column="41">buf<pos:position pos:line="198" pos:column="44"/></name><operator pos:line="198" pos:column="44">.<pos:position pos:line="198" pos:column="45"/></operator><name pos:line="198" pos:column="45">buf<pos:position pos:line="198" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="50">NULL<pos:position pos:line="198" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="56">NULL<pos:position pos:line="198" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="198" pos:column="62">1<pos:position pos:line="198" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="199" pos:column="17">strbuf_reset<pos:position pos:line="199" pos:column="29"/></name><argument_list pos:line="199" pos:column="29">(<argument><expr><operator pos:line="199" pos:column="30">&amp;<pos:position pos:line="199" pos:column="35"/></operator><name pos:line="199" pos:column="31">buf<pos:position pos:line="199" pos:column="34"/></name></expr></argument>)<pos:position pos:line="199" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="200" pos:column="17">strbuf_addf<pos:position pos:line="200" pos:column="28"/></name><argument_list pos:line="200" pos:column="28">(<argument><expr><operator pos:line="200" pos:column="29">&amp;<pos:position pos:line="200" pos:column="34"/></operator><name pos:line="200" pos:column="30">buf<pos:position pos:line="200" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="35">"branch.%s.merge"<pos:position pos:line="200" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="54">branch<pos:position pos:line="200" pos:column="60"/></name><operator pos:line="200" pos:column="60">-&gt;<pos:position pos:line="200" pos:column="65"/></operator><name pos:line="200" pos:column="62">name<pos:position pos:line="200" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="201" pos:column="17">git_config_set_multivar<pos:position pos:line="201" pos:column="40"/></name><argument_list pos:line="201" pos:column="40">(<argument><expr><name><name pos:line="201" pos:column="41">buf<pos:position pos:line="201" pos:column="44"/></name><operator pos:line="201" pos:column="44">.<pos:position pos:line="201" pos:column="45"/></operator><name pos:line="201" pos:column="45">buf<pos:position pos:line="201" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="50">NULL<pos:position pos:line="201" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="56">NULL<pos:position pos:line="201" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="62">1<pos:position pos:line="201" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="202" pos:column="17">strbuf_release<pos:position pos:line="202" pos:column="31"/></name><argument_list pos:line="202" pos:column="31">(<argument><expr><operator pos:line="202" pos:column="32">&amp;<pos:position pos:line="202" pos:column="37"/></operator><name pos:line="202" pos:column="33">buf<pos:position pos:line="202" pos:column="36"/></name></expr></argument>)<pos:position pos:line="202" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="203" pos:column="10"/></block></then></if></elseif> <elseif pos:line="203" pos:column="11">else <if pos:line="203" pos:column="16">if <condition pos:line="203" pos:column="19">(<expr><name pos:line="203" pos:column="20">argc<pos:position pos:line="203" pos:column="24"/></name> <operator pos:line="203" pos:column="25">&gt;<pos:position pos:line="203" pos:column="29"/></operator> <literal type="number" pos:line="203" pos:column="27">0<pos:position pos:line="203" pos:column="28"/></literal> <operator pos:line="203" pos:column="29">&amp;&amp;<pos:position pos:line="203" pos:column="39"/></operator> <name pos:line="203" pos:column="32">argc<pos:position pos:line="203" pos:column="36"/></name> <operator pos:line="203" pos:column="37">&lt;=<pos:position pos:line="203" pos:column="42"/></operator> <literal type="number" pos:line="203" pos:column="40">2<pos:position pos:line="203" pos:column="41"/></literal></expr>)<pos:position pos:line="203" pos:column="42"/></condition><then pos:line="203" pos:column="42"> <block pos:line="203" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="204" pos:column="17">struct<pos:position pos:line="204" pos:column="23"/></name> <name pos:line="204" pos:column="24">branch<pos:position pos:line="204" pos:column="30"/></name></name> <modifier pos:line="204" pos:column="31">*<pos:position pos:line="204" pos:column="32"/></modifier></type><name pos:line="204" pos:column="32">branch<pos:position pos:line="204" pos:column="38"/></name> <init pos:line="204" pos:column="39">= <expr><call><name pos:line="204" pos:column="41">branch_get<pos:position pos:line="204" pos:column="51"/></name><argument_list pos:line="204" pos:column="51">(<argument><expr><name><name pos:line="204" pos:column="52">argv<pos:position pos:line="204" pos:column="56"/></name><index pos:line="204" pos:column="56">[<expr><literal type="number" pos:line="204" pos:column="57">0<pos:position pos:line="204" pos:column="58"/></literal></expr>]<pos:position pos:line="204" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="204" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="204" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="205" pos:column="17">int<pos:position pos:line="205" pos:column="20"/></name></type> <name pos:line="205" pos:column="21">branch_existed<pos:position pos:line="205" pos:column="35"/></name> <init pos:line="205" pos:column="36">= <expr><literal type="number" pos:line="205" pos:column="38">0<pos:position pos:line="205" pos:column="39"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="205" pos:column="41">remote_tracking<pos:position pos:line="205" pos:column="56"/></name> <init pos:line="205" pos:column="57">= <expr><literal type="number" pos:line="205" pos:column="59">0<pos:position pos:line="205" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="205" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="206" pos:column="17">struct<pos:position pos:line="206" pos:column="23"/></name> <name pos:line="206" pos:column="24">strbuf<pos:position pos:line="206" pos:column="30"/></name></name></type> <name pos:line="206" pos:column="31">buf<pos:position pos:line="206" pos:column="34"/></name> <init pos:line="206" pos:column="35">= <expr><name pos:line="206" pos:column="37">STRBUF_INIT<pos:position pos:line="206" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="206" pos:column="49"/></decl_stmt>

		<if pos:line="208" pos:column="17">if <condition pos:line="208" pos:column="20">(<expr><operator pos:line="208" pos:column="21">!<pos:position pos:line="208" pos:column="22"/></operator><call><name pos:line="208" pos:column="22">strcmp<pos:position pos:line="208" pos:column="28"/></name><argument_list pos:line="208" pos:column="28">(<argument><expr><name><name pos:line="208" pos:column="29">argv<pos:position pos:line="208" pos:column="33"/></name><index pos:line="208" pos:column="33">[<expr><literal type="number" pos:line="208" pos:column="34">0<pos:position pos:line="208" pos:column="35"/></literal></expr>]<pos:position pos:line="208" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="38">"HEAD"<pos:position pos:line="208" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="46"/></condition><then pos:line="208" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="209" pos:column="25">die<pos:position pos:line="209" pos:column="28"/></name><argument_list pos:line="209" pos:column="28">(<argument><expr><call><name pos:line="209" pos:column="29">_<pos:position pos:line="209" pos:column="30"/></name><argument_list pos:line="209" pos:column="30">(<argument><expr><literal type="string" pos:line="209" pos:column="31">"it does not make sense to create 'HEAD' manually"<pos:position pos:line="209" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="209" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="84"/></expr_stmt></block></then></if>

		<if pos:line="211" pos:column="17">if <condition pos:line="211" pos:column="20">(<expr><operator pos:line="211" pos:column="21">!<pos:position pos:line="211" pos:column="22"/></operator><name pos:line="211" pos:column="22">branch<pos:position pos:line="211" pos:column="28"/></name></expr>)<pos:position pos:line="211" pos:column="29"/></condition><then pos:line="211" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="212" pos:column="25">die<pos:position pos:line="212" pos:column="28"/></name><argument_list pos:line="212" pos:column="28">(<argument><expr><call><name pos:line="212" pos:column="29">_<pos:position pos:line="212" pos:column="30"/></name><argument_list pos:line="212" pos:column="30">(<argument><expr><literal type="string" pos:line="212" pos:column="31">"no such branch '%s'"<pos:position pos:line="212" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="55">argv<pos:position pos:line="212" pos:column="59"/></name><index pos:line="212" pos:column="59">[<expr><literal type="number" pos:line="212" pos:column="60">0<pos:position pos:line="212" pos:column="61"/></literal></expr>]<pos:position pos:line="212" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="212" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="64"/></expr_stmt></block></then></if>

		<if pos:line="214" pos:column="17">if <condition pos:line="214" pos:column="20">(<expr><name pos:line="214" pos:column="21">kinds<pos:position pos:line="214" pos:column="26"/></name> <operator pos:line="214" pos:column="27">!=<pos:position pos:line="214" pos:column="29"/></operator> <name pos:line="214" pos:column="30">REF_LOCAL_BRANCH<pos:position pos:line="214" pos:column="46"/></name></expr>)<pos:position pos:line="214" pos:column="47"/></condition><then pos:line="214" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="215" pos:column="25">die<pos:position pos:line="215" pos:column="28"/></name><argument_list pos:line="215" pos:column="28">(<argument><expr><call><name pos:line="215" pos:column="29">_<pos:position pos:line="215" pos:column="30"/></name><argument_list pos:line="215" pos:column="30">(<argument><expr><literal type="string" pos:line="215" pos:column="31">"-a and -r options to 'git branch' do not make sense with a branch name"<pos:position pos:line="215" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="215" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="106"/></expr_stmt></block></then></if>

		<if pos:line="217" pos:column="17">if <condition pos:line="217" pos:column="20">(<expr><name pos:line="217" pos:column="21">track<pos:position pos:line="217" pos:column="26"/></name> <operator pos:line="217" pos:column="27">==<pos:position pos:line="217" pos:column="29"/></operator> <name pos:line="217" pos:column="30">BRANCH_TRACK_OVERRIDE<pos:position pos:line="217" pos:column="51"/></name></expr>)<pos:position pos:line="217" pos:column="52"/></condition><then pos:line="217" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="218" pos:column="25">fprintf<pos:position pos:line="218" pos:column="32"/></name><argument_list pos:line="218" pos:column="32">(<argument><expr><name pos:line="218" pos:column="33">stderr<pos:position pos:line="218" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="218" pos:column="41">_<pos:position pos:line="218" pos:column="42"/></name><argument_list pos:line="218" pos:column="42">(<argument><expr><literal type="string" pos:line="218" pos:column="43">"The --set-upstream flag is deprecated and will be removed. Consider using --track or --set-upstream-to\n"<pos:position pos:line="218" pos:column="149"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="150"/></argument_list></call></expr></argument>)<pos:position pos:line="218" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="152"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="220" pos:column="17">strbuf_addf<pos:position pos:line="220" pos:column="28"/></name><argument_list pos:line="220" pos:column="28">(<argument><expr><operator pos:line="220" pos:column="29">&amp;<pos:position pos:line="220" pos:column="34"/></operator><name pos:line="220" pos:column="30">buf<pos:position pos:line="220" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="35">"refs/remotes/%s"<pos:position pos:line="220" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="54">branch<pos:position pos:line="220" pos:column="60"/></name><operator pos:line="220" pos:column="60">-&gt;<pos:position pos:line="220" pos:column="65"/></operator><name pos:line="220" pos:column="62">name<pos:position pos:line="220" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="221" pos:column="17">remote_tracking<pos:position pos:line="221" pos:column="32"/></name> <operator pos:line="221" pos:column="33">=<pos:position pos:line="221" pos:column="34"/></operator> <call><name pos:line="221" pos:column="35">ref_exists<pos:position pos:line="221" pos:column="45"/></name><argument_list pos:line="221" pos:column="45">(<argument><expr><name><name pos:line="221" pos:column="46">buf<pos:position pos:line="221" pos:column="49"/></name><operator pos:line="221" pos:column="49">.<pos:position pos:line="221" pos:column="50"/></operator><name pos:line="221" pos:column="50">buf<pos:position pos:line="221" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="222" pos:column="17">strbuf_release<pos:position pos:line="222" pos:column="31"/></name><argument_list pos:line="222" pos:column="31">(<argument><expr><operator pos:line="222" pos:column="32">&amp;<pos:position pos:line="222" pos:column="37"/></operator><name pos:line="222" pos:column="33">buf<pos:position pos:line="222" pos:column="36"/></name></expr></argument>)<pos:position pos:line="222" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="38"/></expr_stmt>

		<expr_stmt><expr><name pos:line="224" pos:column="17">branch_existed<pos:position pos:line="224" pos:column="31"/></name> <operator pos:line="224" pos:column="32">=<pos:position pos:line="224" pos:column="33"/></operator> <call><name pos:line="224" pos:column="34">ref_exists<pos:position pos:line="224" pos:column="44"/></name><argument_list pos:line="224" pos:column="44">(<argument><expr><name><name pos:line="224" pos:column="45">branch<pos:position pos:line="224" pos:column="51"/></name><operator pos:line="224" pos:column="51">-&gt;<pos:position pos:line="224" pos:column="56"/></operator><name pos:line="224" pos:column="53">refname<pos:position pos:line="224" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="224" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="225" pos:column="17">create_branch<pos:position pos:line="225" pos:column="30"/></name><argument_list pos:line="225" pos:column="30">(<argument><expr><name pos:line="225" pos:column="31">head<pos:position pos:line="225" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="225" pos:column="37">argv<pos:position pos:line="225" pos:column="41"/></name><index pos:line="225" pos:column="41">[<expr><literal type="number" pos:line="225" pos:column="42">0<pos:position pos:line="225" pos:column="43"/></literal></expr>]<pos:position pos:line="225" pos:column="44"/></index></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="225" pos:column="46">(<pos:position pos:line="225" pos:column="47"/></operator><name pos:line="225" pos:column="47">argc<pos:position pos:line="225" pos:column="51"/></name> <operator pos:line="225" pos:column="52">==<pos:position pos:line="225" pos:column="54"/></operator> <literal type="number" pos:line="225" pos:column="55">2<pos:position pos:line="225" pos:column="56"/></literal><operator pos:line="225" pos:column="56">)<pos:position pos:line="225" pos:column="57"/></operator></expr> ?<pos:position pos:line="225" pos:column="59"/></condition><then pos:line="225" pos:column="59"> <expr><name><name pos:line="225" pos:column="60">argv<pos:position pos:line="225" pos:column="64"/></name><index pos:line="225" pos:column="64">[<expr><literal type="number" pos:line="225" pos:column="65">1<pos:position pos:line="225" pos:column="66"/></literal></expr>]<pos:position pos:line="225" pos:column="67"/></index></name></expr> <pos:position pos:line="225" pos:column="68"/></then><else pos:line="225" pos:column="68">: <expr><name pos:line="225" pos:column="70">head<pos:position pos:line="225" pos:column="74"/></name></expr></else></ternary></expr></argument>,
			      <argument><expr><name pos:line="226" pos:column="31">force_create<pos:position pos:line="226" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="45">reflog<pos:position pos:line="226" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="226" pos:column="53">0<pos:position pos:line="226" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="56">quiet<pos:position pos:line="226" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="63">track<pos:position pos:line="226" pos:column="68"/></name></expr></argument>)<pos:position pos:line="226" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="70"/></expr_stmt>

		<comment type="block" pos:line="228" pos:column="17">/*
		 * We only show the instructions if the user gave us
		 * one branch which doesn't exist locally, but is the
		 * name of a remote-tracking branch.
		 */</comment>
		<if pos:line="233" pos:column="17">if <condition pos:line="233" pos:column="20">(<expr><name pos:line="233" pos:column="21">argc<pos:position pos:line="233" pos:column="25"/></name> <operator pos:line="233" pos:column="26">==<pos:position pos:line="233" pos:column="28"/></operator> <literal type="number" pos:line="233" pos:column="29">1<pos:position pos:line="233" pos:column="30"/></literal> <operator pos:line="233" pos:column="31">&amp;&amp;<pos:position pos:line="233" pos:column="41"/></operator> <name pos:line="233" pos:column="34">track<pos:position pos:line="233" pos:column="39"/></name> <operator pos:line="233" pos:column="40">==<pos:position pos:line="233" pos:column="42"/></operator> <name pos:line="233" pos:column="43">BRANCH_TRACK_OVERRIDE<pos:position pos:line="233" pos:column="64"/></name> <operator pos:line="233" pos:column="65">&amp;&amp;<pos:position pos:line="233" pos:column="75"/></operator>
		    <operator pos:line="234" pos:column="21">!<pos:position pos:line="234" pos:column="22"/></operator><name pos:line="234" pos:column="22">branch_existed<pos:position pos:line="234" pos:column="36"/></name> <operator pos:line="234" pos:column="37">&amp;&amp;<pos:position pos:line="234" pos:column="47"/></operator> <name pos:line="234" pos:column="40">remote_tracking<pos:position pos:line="234" pos:column="55"/></name></expr>)<pos:position pos:line="234" pos:column="56"/></condition><then pos:line="234" pos:column="56"> <block pos:line="234" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="235" pos:column="25">fprintf<pos:position pos:line="235" pos:column="32"/></name><argument_list pos:line="235" pos:column="32">(<argument><expr><name pos:line="235" pos:column="33">stderr<pos:position pos:line="235" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="235" pos:column="41">_<pos:position pos:line="235" pos:column="42"/></name><argument_list pos:line="235" pos:column="42">(<argument><expr><literal type="string" pos:line="235" pos:column="43">"\nIf you wanted to make '%s' track '%s', do this:\n\n"<pos:position pos:line="235" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="99"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="235" pos:column="101">head<pos:position pos:line="235" pos:column="105"/></name></expr></argument>, <argument><expr><name><name pos:line="235" pos:column="107">branch<pos:position pos:line="235" pos:column="113"/></name><operator pos:line="235" pos:column="113">-&gt;<pos:position pos:line="235" pos:column="118"/></operator><name pos:line="235" pos:column="115">name<pos:position pos:line="235" pos:column="119"/></name></name></expr></argument>)<pos:position pos:line="235" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="121"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="236" pos:column="25">fprintf<pos:position pos:line="236" pos:column="32"/></name><argument_list pos:line="236" pos:column="32">(<argument><expr><name pos:line="236" pos:column="33">stderr<pos:position pos:line="236" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="236" pos:column="41">_<pos:position pos:line="236" pos:column="42"/></name><argument_list pos:line="236" pos:column="42">(<argument><expr><literal type="string" pos:line="236" pos:column="43">"    git branch -d %s\n"<pos:position pos:line="236" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="236" pos:column="70">branch<pos:position pos:line="236" pos:column="76"/></name><operator pos:line="236" pos:column="76">-&gt;<pos:position pos:line="236" pos:column="81"/></operator><name pos:line="236" pos:column="78">name<pos:position pos:line="236" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="236" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="237" pos:column="25">fprintf<pos:position pos:line="237" pos:column="32"/></name><argument_list pos:line="237" pos:column="32">(<argument><expr><name pos:line="237" pos:column="33">stderr<pos:position pos:line="237" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="237" pos:column="41">_<pos:position pos:line="237" pos:column="42"/></name><argument_list pos:line="237" pos:column="42">(<argument><expr><literal type="string" pos:line="237" pos:column="43">"    git branch --set-upstream-to %s\n"<pos:position pos:line="237" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="237" pos:column="85">branch<pos:position pos:line="237" pos:column="91"/></name><operator pos:line="237" pos:column="91">-&gt;<pos:position pos:line="237" pos:column="96"/></operator><name pos:line="237" pos:column="93">name<pos:position pos:line="237" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="237" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="99"/></expr_stmt>
		}<pos:position pos:line="238" pos:column="18"/></block></then></if>

	}<pos:position pos:line="240" pos:column="10"/></block></then></if></elseif> <else pos:line="240" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="241" pos:column="17">usage_with_options<pos:position pos:line="241" pos:column="35"/></name><argument_list pos:line="241" pos:column="35">(<argument><expr><name pos:line="241" pos:column="36">builtin_branch_usage<pos:position pos:line="241" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="58">options<pos:position pos:line="241" pos:column="65"/></name></expr></argument>)<pos:position pos:line="241" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="67"/></expr_stmt></block></else></if>

	<return pos:line="243" pos:column="9">return <expr><literal type="number" pos:line="243" pos:column="16">0<pos:position pos:line="243" pos:column="17"/></literal></expr>;<pos:position pos:line="243" pos:column="18"/></return>
}<pos:position pos:line="244" pos:column="2"/></block></function></unit>

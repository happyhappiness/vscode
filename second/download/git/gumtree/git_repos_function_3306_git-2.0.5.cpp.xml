<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3306_git-2.0.5.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier><modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">argv_array_detach<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">argv_array<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">array<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">argc<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">argv<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">=
		<expr><ternary><condition><expr><name><name pos:line="4" pos:column="17">array<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">argv<pos:position pos:line="4" pos:column="28"/></name></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="32">empty_argv<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">||<pos:position pos:line="4" pos:column="45"/></operator> <name><name pos:line="4" pos:column="46">array<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">argc<pos:position pos:line="4" pos:column="57"/></name></name> <operator pos:line="4" pos:column="58">==<pos:position pos:line="4" pos:column="60"/></operator> <literal type="number" pos:line="4" pos:column="61">0<pos:position pos:line="4" pos:column="62"/></literal></expr> ?<pos:position pos:line="4" pos:column="64"/></condition><then pos:line="4" pos:column="64"> <expr><name pos:line="4" pos:column="65">NULL<pos:position pos:line="4" pos:column="69"/></name></expr> <pos:position pos:line="4" pos:column="70"/></then><else pos:line="4" pos:column="70">: <expr><name><name pos:line="4" pos:column="72">array<pos:position pos:line="4" pos:column="77"/></name><operator pos:line="4" pos:column="77">-&gt;<pos:position pos:line="4" pos:column="82"/></operator><name pos:line="4" pos:column="79">argv<pos:position pos:line="4" pos:column="83"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="84"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">argc<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">argc<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name><name pos:line="6" pos:column="25">array<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">argc<pos:position pos:line="6" pos:column="36"/></name></name></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">argv_array_init<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">array<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">argv<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3931_git-2.13.6.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">enum<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">interesting<pos:position pos:line="1" pos:column="17"/></name></name></type> <name pos:line="1" pos:column="18">tree_entry_interesting<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">name_entry<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">entry<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
					<parameter><decl><type><name><name pos:line="2" pos:column="41">struct<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">strbuf<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">base<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">int<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">base_offset<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
					<parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name><name pos:line="3" pos:column="47">struct<pos:position pos:line="3" pos:column="53"/></name> <name pos:line="3" pos:column="54">pathspec<pos:position pos:line="3" pos:column="62"/></name></name> <modifier pos:line="3" pos:column="63">*<pos:position pos:line="3" pos:column="64"/></modifier></type><name pos:line="3" pos:column="64">ps<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">enum<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">interesting<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">positive<pos:position pos:line="5" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="36">negative<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">positive<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <call><name pos:line="6" pos:column="20">do_match<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">entry<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">base<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">base_offset<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">ps<pos:position pos:line="6" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="59">0<pos:position pos:line="6" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * case | entry | positive | negative | result
	 * -----+-------+----------+----------+-------
	 *   1  |  file |   -1     |  -1..2   |  -1
	 *   2  |  file |    0     |  -1..2   |   0
	 *   3  |  file |    1     |   -1     |   1
	 *   4  |  file |    1     |    0     |   1
	 *   5  |  file |    1     |    1     |   0
	 *   6  |  file |    1     |    2     |   0
	 *   7  |  file |    2     |   -1     |   2
	 *   8  |  file |    2     |    0     |   2
	 *   9  |  file |    2     |    1     |   0
	 *  10  |  file |    2     |    2     |  -1
	 * -----+-------+----------+----------+-------
	 *  11  |  dir  |   -1     |  -1..2   |  -1
	 *  12  |  dir  |    0     |  -1..2   |   0
	 *  13  |  dir  |    1     |   -1     |   1
	 *  14  |  dir  |    1     |    0     |   1
	 *  15  |  dir  |    1     |    1     |   1 (*)
	 *  16  |  dir  |    1     |    2     |   0
	 *  17  |  dir  |    2     |   -1     |   2
	 *  18  |  dir  |    2     |    0     |   2
	 *  19  |  dir  |    2     |    1     |   1 (*)
	 *  20  |  dir  |    2     |    2     |  -1
	 *
	 * (*) An exclude pattern interested in a directory does not
	 * necessarily mean it will exclude all of the directory. In
	 * wildcard case, it can't decide until looking at individual
	 * files inside. So don't write such directories off yet.
	 */</comment>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><operator pos:line="39" pos:column="14">(<pos:position pos:line="39" pos:column="15"/></operator><name><name pos:line="39" pos:column="15">ps<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">magic<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">&amp;<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="27">PATHSPEC_EXCLUDE<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">)<pos:position pos:line="39" pos:column="44"/></operator> <operator pos:line="39" pos:column="45">||<pos:position pos:line="39" pos:column="47"/></operator>
	    <name pos:line="40" pos:column="13">positive<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">&lt;=<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="25">entry_not_interesting<pos:position pos:line="40" pos:column="46"/></name></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47"> <comment type="block" pos:line="40" pos:column="48">/* #1, #2, #11, #12 */</comment>
		<block type="pseudo"><return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">positive<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="43" pos:column="9">negative<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <call><name pos:line="43" pos:column="20">do_match<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">entry<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="36">base<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">base_offset<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="55">ps<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="59">1<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>

	<comment type="block" pos:line="45" pos:column="9">/* #3, #4, #7, #8, #13, #14, #17, #18 */</comment>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">negative<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">&lt;=<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="25">entry_not_interesting<pos:position pos:line="46" pos:column="46"/></name></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47">
		<block type="pseudo"><return pos:line="47" pos:column="17">return <expr><name pos:line="47" pos:column="24">positive<pos:position pos:line="47" pos:column="32"/></name></expr>;<pos:position pos:line="47" pos:column="33"/></return></block></then></if>

	<comment type="block" pos:line="49" pos:column="9">/* #15, #19 */</comment>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">S_ISDIR<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name><name pos:line="50" pos:column="21">entry<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">-&gt;<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="28">mode<pos:position pos:line="50" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="33"/></argument_list></call> <operator pos:line="50" pos:column="34">&amp;&amp;<pos:position pos:line="50" pos:column="44"/></operator>
	    <name pos:line="51" pos:column="13">positive<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">&gt;=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="25">entry_interesting<pos:position pos:line="51" pos:column="42"/></name> <operator pos:line="51" pos:column="43">&amp;&amp;<pos:position pos:line="51" pos:column="53"/></operator>
	    <name pos:line="52" pos:column="13">negative<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">==<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="25">entry_interesting<pos:position pos:line="52" pos:column="42"/></name></expr>)<pos:position pos:line="52" pos:column="43"/></condition><then pos:line="52" pos:column="43">
		<block type="pseudo"><return pos:line="53" pos:column="17">return <expr><name pos:line="53" pos:column="24">entry_interesting<pos:position pos:line="53" pos:column="41"/></name></expr>;<pos:position pos:line="53" pos:column="42"/></return></block></then></if>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">(<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">positive<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">==<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="26">entry_interesting<pos:position pos:line="55" pos:column="43"/></name> <operator pos:line="55" pos:column="44">&amp;&amp;<pos:position pos:line="55" pos:column="54"/></operator>
	     <name pos:line="56" pos:column="14">negative<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&gt;=<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="26">entry_interesting<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">)<pos:position pos:line="56" pos:column="44"/></operator> <operator pos:line="56" pos:column="45">||<pos:position pos:line="56" pos:column="47"/></operator> <comment type="block" pos:line="56" pos:column="48">/* #5, #6, #16 */</comment>
	    <operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">positive<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">==<pos:position pos:line="57" pos:column="25"/></operator> <name pos:line="57" pos:column="26">all_entries_interesting<pos:position pos:line="57" pos:column="49"/></name> <operator pos:line="57" pos:column="50">&amp;&amp;<pos:position pos:line="57" pos:column="60"/></operator>
	     <name pos:line="58" pos:column="14">negative<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">==<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="26">entry_interesting<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">)<pos:position pos:line="58" pos:column="44"/></operator></expr>)<pos:position pos:line="58" pos:column="45"/></condition><then pos:line="58" pos:column="45"> <comment type="block" pos:line="58" pos:column="46">/* #9 */</comment>
		<block type="pseudo"><return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">entry_not_interesting<pos:position pos:line="59" pos:column="45"/></name></expr>;<pos:position pos:line="59" pos:column="46"/></return></block></then></if>

	<return pos:line="61" pos:column="9">return <expr><name pos:line="61" pos:column="16">all_entries_not_interesting<pos:position pos:line="61" pos:column="43"/></name></expr>;<pos:position pos:line="61" pos:column="44"/></return> <comment type="block" pos:line="61" pos:column="45">/* #10, #20 */</comment>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

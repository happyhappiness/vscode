<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_824_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dowild<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">uchar<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">p<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">uchar<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">text<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">unsigned<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">flags<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uchar<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">p_ch<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">uchar<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">pattern<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">p<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">( <init pos:line="6" pos:column="15">;<pos:position pos:line="6" pos:column="16"/></init> <condition><expr><operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">p_ch<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">p<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator> <operator pos:line="6" pos:column="29">!=<pos:position pos:line="6" pos:column="31"/></operator> <literal type="char" pos:line="6" pos:column="32">'\0'<pos:position pos:line="6" pos:column="36"/></literal></expr>;<pos:position pos:line="6" pos:column="37"/></condition> <incr><expr><name pos:line="6" pos:column="38">text<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">++<pos:position pos:line="6" pos:column="44"/></operator></expr><operator pos:line="6" pos:column="44">,<pos:position pos:line="6" pos:column="45"/></operator> <expr><name pos:line="6" pos:column="46">p<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">++<pos:position pos:line="6" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="50"/></control> <block pos:line="6" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">matched<pos:position pos:line="7" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="30">match_slash<pos:position pos:line="7" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="43">negated<pos:position pos:line="7" pos:column="50"/></name></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">uchar<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">t_ch<pos:position pos:line="8" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="29">prev_ch<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">t_ch<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">text<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <literal type="char" pos:line="9" pos:column="39">'\0'<pos:position pos:line="9" pos:column="43"/></literal> <operator pos:line="9" pos:column="44">&amp;&amp;<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="47">p_ch<pos:position pos:line="9" pos:column="51"/></name> <operator pos:line="9" pos:column="52">!=<pos:position pos:line="9" pos:column="54"/></operator> <literal type="char" pos:line="9" pos:column="55">'*'<pos:position pos:line="9" pos:column="58"/></literal></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><name pos:line="10" pos:column="32">WM_ABORT_ALL<pos:position pos:line="10" pos:column="44"/></name></expr>;<pos:position pos:line="10" pos:column="45"/></return></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">flags<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&amp;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="30">WM_CASEFOLD<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="43">&amp;&amp;<pos:position pos:line="11" pos:column="53"/></operator> <call><name pos:line="11" pos:column="46">ISUPPER<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">(<argument><expr><name pos:line="11" pos:column="54">t_ch<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">t_ch<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">tolower<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">t_ch<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">flags<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="30">WM_CASEFOLD<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">)<pos:position pos:line="13" pos:column="42"/></operator> <operator pos:line="13" pos:column="43">&amp;&amp;<pos:position pos:line="13" pos:column="53"/></operator> <call><name pos:line="13" pos:column="46">ISUPPER<pos:position pos:line="13" pos:column="53"/></name><argument_list pos:line="13" pos:column="53">(<argument><expr><name pos:line="13" pos:column="54">p_ch<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="60"/></condition><then pos:line="13" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">p_ch<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <call><name pos:line="14" pos:column="32">tolower<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">p_ch<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt></block></then></if>
		<switch pos:line="15" pos:column="17">switch <condition pos:line="15" pos:column="24">(<expr><name pos:line="15" pos:column="25">p_ch<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition> <block pos:line="15" pos:column="31">{
		<case pos:line="16" pos:column="17">case <expr><literal type="char" pos:line="16" pos:column="22">'\\'<pos:position pos:line="16" pos:column="26"/></literal></expr>:<pos:position pos:line="16" pos:column="27"/></case>
			<comment type="block" pos:line="17" pos:column="25">/* Literal match with following character.  Note that the test
			 * in "default" handles the p[1] == '\0' failure case. */</comment>
			<expr_stmt><expr><name pos:line="19" pos:column="25">p_ch<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <operator pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">++<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">p<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
			<comment type="block" pos:line="20" pos:column="25">/* FALLTHROUGH */</comment>
		<default pos:line="21" pos:column="17">default:<pos:position pos:line="21" pos:column="25"/></default>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">t_ch<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">!=<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">p_ch<pos:position pos:line="22" pos:column="41"/></name></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
				<block type="pseudo"><return pos:line="23" pos:column="33">return <expr><name pos:line="23" pos:column="40">WM_NOMATCH<pos:position pos:line="23" pos:column="50"/></name></expr>;<pos:position pos:line="23" pos:column="51"/></return></block></then></if>
			<continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue>
		<case pos:line="25" pos:column="17">case <expr><literal type="char" pos:line="25" pos:column="22">'?'<pos:position pos:line="25" pos:column="25"/></literal></expr>:<pos:position pos:line="25" pos:column="26"/></case>
			<comment type="block" pos:line="26" pos:column="25">/* Match anything but '/'. */</comment>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><operator pos:line="27" pos:column="29">(<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">flags<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">&amp;<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="38">WM_PATHNAME<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">)<pos:position pos:line="27" pos:column="50"/></operator> <operator pos:line="27" pos:column="51">&amp;&amp;<pos:position pos:line="27" pos:column="61"/></operator> <name pos:line="27" pos:column="54">t_ch<pos:position pos:line="27" pos:column="58"/></name> <operator pos:line="27" pos:column="59">==<pos:position pos:line="27" pos:column="61"/></operator> <literal type="char" pos:line="27" pos:column="62">'/'<pos:position pos:line="27" pos:column="65"/></literal></expr>)<pos:position pos:line="27" pos:column="66"/></condition><then pos:line="27" pos:column="66">
				<block type="pseudo"><return pos:line="28" pos:column="33">return <expr><name pos:line="28" pos:column="40">WM_NOMATCH<pos:position pos:line="28" pos:column="50"/></name></expr>;<pos:position pos:line="28" pos:column="51"/></return></block></then></if>
			<continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue>
		<case pos:line="30" pos:column="17">case <expr><literal type="char" pos:line="30" pos:column="22">'*'<pos:position pos:line="30" pos:column="25"/></literal></expr>:<pos:position pos:line="30" pos:column="26"/></case>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">*<pos:position pos:line="31" pos:column="30"/></operator><operator pos:line="31" pos:column="30">++<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">p<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">==<pos:position pos:line="31" pos:column="36"/></operator> <literal type="char" pos:line="31" pos:column="37">'*'<pos:position pos:line="31" pos:column="40"/></literal></expr>)<pos:position pos:line="31" pos:column="41"/></condition><then pos:line="31" pos:column="41"> <block pos:line="31" pos:column="42">{
				<decl_stmt><decl><type><specifier pos:line="32" pos:column="33">const<pos:position pos:line="32" pos:column="38"/></specifier> <name pos:line="32" pos:column="39">uchar<pos:position pos:line="32" pos:column="44"/></name> <modifier pos:line="32" pos:column="45">*<pos:position pos:line="32" pos:column="46"/></modifier></type><name pos:line="32" pos:column="46">prev_p<pos:position pos:line="32" pos:column="52"/></name> <init pos:line="32" pos:column="53">= <expr><name pos:line="32" pos:column="55">p<pos:position pos:line="32" pos:column="56"/></name> <operator pos:line="32" pos:column="57">-<pos:position pos:line="32" pos:column="58"/></operator> <literal type="number" pos:line="32" pos:column="59">2<pos:position pos:line="32" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="61"/></decl_stmt>
				<while pos:line="33" pos:column="33">while <condition pos:line="33" pos:column="39">(<expr><operator pos:line="33" pos:column="40">*<pos:position pos:line="33" pos:column="41"/></operator><operator pos:line="33" pos:column="41">++<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">p<pos:position pos:line="33" pos:column="44"/></name> <operator pos:line="33" pos:column="45">==<pos:position pos:line="33" pos:column="47"/></operator> <literal type="char" pos:line="33" pos:column="48">'*'<pos:position pos:line="33" pos:column="51"/></literal></expr>)<pos:position pos:line="33" pos:column="52"/></condition> <block pos:line="33" pos:column="53">{}<pos:position pos:line="33" pos:column="55"/></block></while>
				<if pos:line="34" pos:column="33">if <condition pos:line="34" pos:column="36">(<expr><operator pos:line="34" pos:column="37">!<pos:position pos:line="34" pos:column="38"/></operator><operator pos:line="34" pos:column="38">(<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">flags<pos:position pos:line="34" pos:column="44"/></name> <operator pos:line="34" pos:column="45">&amp;<pos:position pos:line="34" pos:column="50"/></operator> <name pos:line="34" pos:column="47">WM_PATHNAME<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">)<pos:position pos:line="34" pos:column="59"/></operator></expr>)<pos:position pos:line="34" pos:column="60"/></condition><then pos:line="34" pos:column="60">
					<comment type="block" pos:line="35" pos:column="41">/* without WM_PATHNAME, '*' == '**' */</comment>
					<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="41">match_slash<pos:position pos:line="36" pos:column="52"/></name> <operator pos:line="36" pos:column="53">=<pos:position pos:line="36" pos:column="54"/></operator> <literal type="number" pos:line="36" pos:column="55">1<pos:position pos:line="36" pos:column="56"/></literal></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt></block></then>
				<elseif pos:line="37" pos:column="33">else <if pos:line="37" pos:column="38">if <condition pos:line="37" pos:column="41">(<expr><operator pos:line="37" pos:column="42">(<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">prev_p<pos:position pos:line="37" pos:column="49"/></name> <operator pos:line="37" pos:column="50">&lt;<pos:position pos:line="37" pos:column="54"/></operator> <name pos:line="37" pos:column="52">pattern<pos:position pos:line="37" pos:column="59"/></name> <operator pos:line="37" pos:column="60">||<pos:position pos:line="37" pos:column="62"/></operator> <operator pos:line="37" pos:column="63">*<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="64">prev_p<pos:position pos:line="37" pos:column="70"/></name> <operator pos:line="37" pos:column="71">==<pos:position pos:line="37" pos:column="73"/></operator> <literal type="char" pos:line="37" pos:column="74">'/'<pos:position pos:line="37" pos:column="77"/></literal><operator pos:line="37" pos:column="77">)<pos:position pos:line="37" pos:column="78"/></operator> <operator pos:line="37" pos:column="79">&amp;&amp;<pos:position pos:line="37" pos:column="89"/></operator>
				    <operator pos:line="38" pos:column="37">(<pos:position pos:line="38" pos:column="38"/></operator><operator pos:line="38" pos:column="38">*<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">p<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">==<pos:position pos:line="38" pos:column="43"/></operator> <literal type="char" pos:line="38" pos:column="44">'\0'<pos:position pos:line="38" pos:column="48"/></literal> <operator pos:line="38" pos:column="49">||<pos:position pos:line="38" pos:column="51"/></operator> <operator pos:line="38" pos:column="52">*<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">p<pos:position pos:line="38" pos:column="54"/></name> <operator pos:line="38" pos:column="55">==<pos:position pos:line="38" pos:column="57"/></operator> <literal type="char" pos:line="38" pos:column="58">'/'<pos:position pos:line="38" pos:column="61"/></literal> <operator pos:line="38" pos:column="62">||<pos:position pos:line="38" pos:column="64"/></operator>
				     <operator pos:line="39" pos:column="38">(<pos:position pos:line="39" pos:column="39"/></operator><name><name pos:line="39" pos:column="39">p<pos:position pos:line="39" pos:column="40"/></name><index pos:line="39" pos:column="40">[<expr><literal type="number" pos:line="39" pos:column="41">0<pos:position pos:line="39" pos:column="42"/></literal></expr>]<pos:position pos:line="39" pos:column="43"/></index></name> <operator pos:line="39" pos:column="44">==<pos:position pos:line="39" pos:column="46"/></operator> <literal type="char" pos:line="39" pos:column="47">'\\'<pos:position pos:line="39" pos:column="51"/></literal> <operator pos:line="39" pos:column="52">&amp;&amp;<pos:position pos:line="39" pos:column="62"/></operator> <name><name pos:line="39" pos:column="55">p<pos:position pos:line="39" pos:column="56"/></name><index pos:line="39" pos:column="56">[<expr><literal type="number" pos:line="39" pos:column="57">1<pos:position pos:line="39" pos:column="58"/></literal></expr>]<pos:position pos:line="39" pos:column="59"/></index></name> <operator pos:line="39" pos:column="60">==<pos:position pos:line="39" pos:column="62"/></operator> <literal type="char" pos:line="39" pos:column="63">'/'<pos:position pos:line="39" pos:column="66"/></literal><operator pos:line="39" pos:column="66">)<pos:position pos:line="39" pos:column="67"/></operator><operator pos:line="39" pos:column="67">)<pos:position pos:line="39" pos:column="68"/></operator></expr>)<pos:position pos:line="39" pos:column="69"/></condition><then pos:line="39" pos:column="69"> <block pos:line="39" pos:column="70">{
					<comment type="block" pos:line="40" pos:column="41">/*
					 * Assuming we already match 'foo/' and are at
					 * &lt;star star slash&gt;, just assume it matches
					 * nothing and go ahead match the rest of the
					 * pattern with the remaining string. This
					 * helps make foo/&lt;*&gt;&lt;*&gt;/bar (&lt;&gt; because
					 * otherwise it breaks C comment syntax) match
					 * both foo/bar and foo/a/bar.
					 */</comment>
					<if pos:line="49" pos:column="41">if <condition pos:line="49" pos:column="44">(<expr><name><name pos:line="49" pos:column="45">p<pos:position pos:line="49" pos:column="46"/></name><index pos:line="49" pos:column="46">[<expr><literal type="number" pos:line="49" pos:column="47">0<pos:position pos:line="49" pos:column="48"/></literal></expr>]<pos:position pos:line="49" pos:column="49"/></index></name> <operator pos:line="49" pos:column="50">==<pos:position pos:line="49" pos:column="52"/></operator> <literal type="char" pos:line="49" pos:column="53">'/'<pos:position pos:line="49" pos:column="56"/></literal> <operator pos:line="49" pos:column="57">&amp;&amp;<pos:position pos:line="49" pos:column="67"/></operator>
					    <call><name pos:line="50" pos:column="45">dowild<pos:position pos:line="50" pos:column="51"/></name><argument_list pos:line="50" pos:column="51">(<argument><expr><name pos:line="50" pos:column="52">p<pos:position pos:line="50" pos:column="53"/></name> <operator pos:line="50" pos:column="54">+<pos:position pos:line="50" pos:column="55"/></operator> <literal type="number" pos:line="50" pos:column="56">1<pos:position pos:line="50" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="59">text<pos:position pos:line="50" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="65">flags<pos:position pos:line="50" pos:column="70"/></name></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></call> <operator pos:line="50" pos:column="72">==<pos:position pos:line="50" pos:column="74"/></operator> <name pos:line="50" pos:column="75">WM_MATCH<pos:position pos:line="50" pos:column="83"/></name></expr>)<pos:position pos:line="50" pos:column="84"/></condition><then pos:line="50" pos:column="84">
						<block type="pseudo"><return pos:line="51" pos:column="49">return <expr><name pos:line="51" pos:column="56">WM_MATCH<pos:position pos:line="51" pos:column="64"/></name></expr>;<pos:position pos:line="51" pos:column="65"/></return></block></then></if>
					<expr_stmt><expr><name pos:line="52" pos:column="41">match_slash<pos:position pos:line="52" pos:column="52"/></name> <operator pos:line="52" pos:column="53">=<pos:position pos:line="52" pos:column="54"/></operator> <literal type="number" pos:line="52" pos:column="55">1<pos:position pos:line="52" pos:column="56"/></literal></expr>;<pos:position pos:line="52" pos:column="57"/></expr_stmt>
				}<pos:position pos:line="53" pos:column="34"/></block></then></if></elseif> <else pos:line="53" pos:column="35">else
					<block type="pseudo"><return pos:line="54" pos:column="41">return <expr><name pos:line="54" pos:column="48">WM_ABORT_MALFORMED<pos:position pos:line="54" pos:column="66"/></name></expr>;<pos:position pos:line="54" pos:column="67"/></return></block></else></if>
			}<pos:position pos:line="55" pos:column="26"/></block></then> <else pos:line="55" pos:column="27">else
				<comment type="block" pos:line="56" pos:column="33">/* without WM_PATHNAME, '*' == '**' */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="33">match_slash<pos:position pos:line="57" pos:column="44"/></name> <operator pos:line="57" pos:column="45">=<pos:position pos:line="57" pos:column="46"/></operator> <ternary><condition><expr><name pos:line="57" pos:column="47">flags<pos:position pos:line="57" pos:column="52"/></name> <operator pos:line="57" pos:column="53">&amp;<pos:position pos:line="57" pos:column="58"/></operator> <name pos:line="57" pos:column="55">WM_PATHNAME<pos:position pos:line="57" pos:column="66"/></name></expr> ?<pos:position pos:line="57" pos:column="68"/></condition><then pos:line="57" pos:column="68"> <expr><literal type="number" pos:line="57" pos:column="69">0<pos:position pos:line="57" pos:column="70"/></literal></expr> <pos:position pos:line="57" pos:column="71"/></then><else pos:line="57" pos:column="71">: <expr><literal type="number" pos:line="57" pos:column="73">1<pos:position pos:line="57" pos:column="74"/></literal></expr></else></ternary></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt></block></else></if>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><operator pos:line="58" pos:column="29">*<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">p<pos:position pos:line="58" pos:column="31"/></name> <operator pos:line="58" pos:column="32">==<pos:position pos:line="58" pos:column="34"/></operator> <literal type="char" pos:line="58" pos:column="35">'\0'<pos:position pos:line="58" pos:column="39"/></literal></expr>)<pos:position pos:line="58" pos:column="40"/></condition><then pos:line="58" pos:column="40"> <block pos:line="58" pos:column="41">{
				<comment type="block" pos:line="59" pos:column="33">/* Trailing "**" matches everything.  Trailing "*" matches
				 * only if there are no more slash characters. */</comment>
				<if pos:line="61" pos:column="33">if <condition pos:line="61" pos:column="36">(<expr><operator pos:line="61" pos:column="37">!<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="38">match_slash<pos:position pos:line="61" pos:column="49"/></name></expr>)<pos:position pos:line="61" pos:column="50"/></condition><then pos:line="61" pos:column="50"> <block pos:line="61" pos:column="51">{
					<if pos:line="62" pos:column="41">if <condition pos:line="62" pos:column="44">(<expr><call><name pos:line="62" pos:column="45">strchr<pos:position pos:line="62" pos:column="51"/></name><argument_list pos:line="62" pos:column="51">(<argument><expr><operator pos:line="62" pos:column="52">(<pos:position pos:line="62" pos:column="53"/></operator><name pos:line="62" pos:column="53">char<pos:position pos:line="62" pos:column="57"/></name><operator pos:line="62" pos:column="57">*<pos:position pos:line="62" pos:column="58"/></operator><operator pos:line="62" pos:column="58">)<pos:position pos:line="62" pos:column="59"/></operator><name pos:line="62" pos:column="59">text<pos:position pos:line="62" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="62" pos:column="65">'/'<pos:position pos:line="62" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call> <operator pos:line="62" pos:column="70">!=<pos:position pos:line="62" pos:column="72"/></operator> <name pos:line="62" pos:column="73">NULL<pos:position pos:line="62" pos:column="77"/></name></expr>)<pos:position pos:line="62" pos:column="78"/></condition><then pos:line="62" pos:column="78">
						<block type="pseudo"><return pos:line="63" pos:column="49">return <expr><name pos:line="63" pos:column="56">WM_NOMATCH<pos:position pos:line="63" pos:column="66"/></name></expr>;<pos:position pos:line="63" pos:column="67"/></return></block></then></if>
				}<pos:position pos:line="64" pos:column="34"/></block></then></if>
				<return pos:line="65" pos:column="33">return <expr><name pos:line="65" pos:column="40">WM_MATCH<pos:position pos:line="65" pos:column="48"/></name></expr>;<pos:position pos:line="65" pos:column="49"/></return>
			}<pos:position pos:line="66" pos:column="26"/></block></then> <elseif pos:line="66" pos:column="27">else <if pos:line="66" pos:column="32">if <condition pos:line="66" pos:column="35">(<expr><operator pos:line="66" pos:column="36">!<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="37">match_slash<pos:position pos:line="66" pos:column="48"/></name> <operator pos:line="66" pos:column="49">&amp;&amp;<pos:position pos:line="66" pos:column="59"/></operator> <operator pos:line="66" pos:column="52">*<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="53">p<pos:position pos:line="66" pos:column="54"/></name> <operator pos:line="66" pos:column="55">==<pos:position pos:line="66" pos:column="57"/></operator> <literal type="char" pos:line="66" pos:column="58">'/'<pos:position pos:line="66" pos:column="61"/></literal></expr>)<pos:position pos:line="66" pos:column="62"/></condition><then pos:line="66" pos:column="62"> <block pos:line="66" pos:column="63">{
				<comment type="block" pos:line="67" pos:column="33">/*
				 * _one_ asterisk followed by a slash
				 * with WM_PATHNAME matches the next
				 * directory
				 */</comment>
				<decl_stmt><decl><type><specifier pos:line="72" pos:column="33">const<pos:position pos:line="72" pos:column="38"/></specifier> <name pos:line="72" pos:column="39">char<pos:position pos:line="72" pos:column="43"/></name> <modifier pos:line="72" pos:column="44">*<pos:position pos:line="72" pos:column="45"/></modifier></type><name pos:line="72" pos:column="45">slash<pos:position pos:line="72" pos:column="50"/></name> <init pos:line="72" pos:column="51">= <expr><call><name pos:line="72" pos:column="53">strchr<pos:position pos:line="72" pos:column="59"/></name><argument_list pos:line="72" pos:column="59">(<argument><expr><operator pos:line="72" pos:column="60">(<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="61">char<pos:position pos:line="72" pos:column="65"/></name><operator pos:line="72" pos:column="65">*<pos:position pos:line="72" pos:column="66"/></operator><operator pos:line="72" pos:column="66">)<pos:position pos:line="72" pos:column="67"/></operator><name pos:line="72" pos:column="67">text<pos:position pos:line="72" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="72" pos:column="73">'/'<pos:position pos:line="72" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="78"/></decl_stmt>
				<if pos:line="73" pos:column="33">if <condition pos:line="73" pos:column="36">(<expr><operator pos:line="73" pos:column="37">!<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="38">slash<pos:position pos:line="73" pos:column="43"/></name></expr>)<pos:position pos:line="73" pos:column="44"/></condition><then pos:line="73" pos:column="44">
					<block type="pseudo"><return pos:line="74" pos:column="41">return <expr><name pos:line="74" pos:column="48">WM_NOMATCH<pos:position pos:line="74" pos:column="58"/></name></expr>;<pos:position pos:line="74" pos:column="59"/></return></block></then></if>
				<expr_stmt><expr><name pos:line="75" pos:column="33">text<pos:position pos:line="75" pos:column="37"/></name> <operator pos:line="75" pos:column="38">=<pos:position pos:line="75" pos:column="39"/></operator> <operator pos:line="75" pos:column="40">(<pos:position pos:line="75" pos:column="41"/></operator><specifier pos:line="75" pos:column="41">const<pos:position pos:line="75" pos:column="46"/></specifier> <name pos:line="75" pos:column="47">uchar<pos:position pos:line="75" pos:column="52"/></name><operator pos:line="75" pos:column="52">*<pos:position pos:line="75" pos:column="53"/></operator><operator pos:line="75" pos:column="53">)<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="54">slash<pos:position pos:line="75" pos:column="59"/></name></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt>
				<comment type="block" pos:line="76" pos:column="33">/* the slash is consumed by the top-level for loop */</comment>
				<break pos:line="77" pos:column="33">break;<pos:position pos:line="77" pos:column="39"/></break>
			}<pos:position pos:line="78" pos:column="26"/></block></then></if></elseif></if>
			<while pos:line="79" pos:column="25">while <condition pos:line="79" pos:column="31">(<expr><literal type="number" pos:line="79" pos:column="32">1<pos:position pos:line="79" pos:column="33"/></literal></expr>)<pos:position pos:line="79" pos:column="34"/></condition> <block pos:line="79" pos:column="35">{
				<if pos:line="80" pos:column="33">if <condition pos:line="80" pos:column="36">(<expr><name pos:line="80" pos:column="37">t_ch<pos:position pos:line="80" pos:column="41"/></name> <operator pos:line="80" pos:column="42">==<pos:position pos:line="80" pos:column="44"/></operator> <literal type="char" pos:line="80" pos:column="45">'\0'<pos:position pos:line="80" pos:column="49"/></literal></expr>)<pos:position pos:line="80" pos:column="50"/></condition><then pos:line="80" pos:column="50">
					<block type="pseudo"><break pos:line="81" pos:column="41">break;<pos:position pos:line="81" pos:column="47"/></break></block></then></if>
				<comment type="block" pos:line="82" pos:column="33">/*
				 * Try to advance faster when an asterisk is
				 * followed by a literal. We know in this case
				 * that the string before the literal
				 * must belong to "*".
				 * If match_slash is false, do not look past
				 * the first slash as it cannot belong to '*'.
				 */</comment>
				<if pos:line="90" pos:column="33">if <condition pos:line="90" pos:column="36">(<expr><operator pos:line="90" pos:column="37">!<pos:position pos:line="90" pos:column="38"/></operator><call><name pos:line="90" pos:column="38">is_glob_special<pos:position pos:line="90" pos:column="53"/></name><argument_list pos:line="90" pos:column="53">(<argument><expr><operator pos:line="90" pos:column="54">*<pos:position pos:line="90" pos:column="55"/></operator><name pos:line="90" pos:column="55">p<pos:position pos:line="90" pos:column="56"/></name></expr></argument>)<pos:position pos:line="90" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="58"/></condition><then pos:line="90" pos:column="58"> <block pos:line="90" pos:column="59">{
					<expr_stmt><expr><name pos:line="91" pos:column="41">p_ch<pos:position pos:line="91" pos:column="45"/></name> <operator pos:line="91" pos:column="46">=<pos:position pos:line="91" pos:column="47"/></operator> <operator pos:line="91" pos:column="48">*<pos:position pos:line="91" pos:column="49"/></operator><name pos:line="91" pos:column="49">p<pos:position pos:line="91" pos:column="50"/></name></expr>;<pos:position pos:line="91" pos:column="51"/></expr_stmt>
					<if pos:line="92" pos:column="41">if <condition pos:line="92" pos:column="44">(<expr><operator pos:line="92" pos:column="45">(<pos:position pos:line="92" pos:column="46"/></operator><name pos:line="92" pos:column="46">flags<pos:position pos:line="92" pos:column="51"/></name> <operator pos:line="92" pos:column="52">&amp;<pos:position pos:line="92" pos:column="57"/></operator> <name pos:line="92" pos:column="54">WM_CASEFOLD<pos:position pos:line="92" pos:column="65"/></name><operator pos:line="92" pos:column="65">)<pos:position pos:line="92" pos:column="66"/></operator> <operator pos:line="92" pos:column="67">&amp;&amp;<pos:position pos:line="92" pos:column="77"/></operator> <call><name pos:line="92" pos:column="70">ISUPPER<pos:position pos:line="92" pos:column="77"/></name><argument_list pos:line="92" pos:column="77">(<argument><expr><name pos:line="92" pos:column="78">p_ch<pos:position pos:line="92" pos:column="82"/></name></expr></argument>)<pos:position pos:line="92" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="84"/></condition><then pos:line="92" pos:column="84">
						<block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="49">p_ch<pos:position pos:line="93" pos:column="53"/></name> <operator pos:line="93" pos:column="54">=<pos:position pos:line="93" pos:column="55"/></operator> <call><name pos:line="93" pos:column="56">tolower<pos:position pos:line="93" pos:column="63"/></name><argument_list pos:line="93" pos:column="63">(<argument><expr><name pos:line="93" pos:column="64">p_ch<pos:position pos:line="93" pos:column="68"/></name></expr></argument>)<pos:position pos:line="93" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="70"/></expr_stmt></block></then></if>
					<while pos:line="94" pos:column="41">while <condition pos:line="94" pos:column="47">(<expr><operator pos:line="94" pos:column="48">(<pos:position pos:line="94" pos:column="49"/></operator><name pos:line="94" pos:column="49">t_ch<pos:position pos:line="94" pos:column="53"/></name> <operator pos:line="94" pos:column="54">=<pos:position pos:line="94" pos:column="55"/></operator> <operator pos:line="94" pos:column="56">*<pos:position pos:line="94" pos:column="57"/></operator><name pos:line="94" pos:column="57">text<pos:position pos:line="94" pos:column="61"/></name><operator pos:line="94" pos:column="61">)<pos:position pos:line="94" pos:column="62"/></operator> <operator pos:line="94" pos:column="63">!=<pos:position pos:line="94" pos:column="65"/></operator> <literal type="char" pos:line="94" pos:column="66">'\0'<pos:position pos:line="94" pos:column="70"/></literal> <operator pos:line="94" pos:column="71">&amp;&amp;<pos:position pos:line="94" pos:column="81"/></operator>
					       <operator pos:line="95" pos:column="48">(<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="49">match_slash<pos:position pos:line="95" pos:column="60"/></name> <operator pos:line="95" pos:column="61">||<pos:position pos:line="95" pos:column="63"/></operator> <name pos:line="95" pos:column="64">t_ch<pos:position pos:line="95" pos:column="68"/></name> <operator pos:line="95" pos:column="69">!=<pos:position pos:line="95" pos:column="71"/></operator> <literal type="char" pos:line="95" pos:column="72">'/'<pos:position pos:line="95" pos:column="75"/></literal><operator pos:line="95" pos:column="75">)<pos:position pos:line="95" pos:column="76"/></operator></expr>)<pos:position pos:line="95" pos:column="77"/></condition> <block pos:line="95" pos:column="78">{
						<if pos:line="96" pos:column="49">if <condition pos:line="96" pos:column="52">(<expr><operator pos:line="96" pos:column="53">(<pos:position pos:line="96" pos:column="54"/></operator><name pos:line="96" pos:column="54">flags<pos:position pos:line="96" pos:column="59"/></name> <operator pos:line="96" pos:column="60">&amp;<pos:position pos:line="96" pos:column="65"/></operator> <name pos:line="96" pos:column="62">WM_CASEFOLD<pos:position pos:line="96" pos:column="73"/></name><operator pos:line="96" pos:column="73">)<pos:position pos:line="96" pos:column="74"/></operator> <operator pos:line="96" pos:column="75">&amp;&amp;<pos:position pos:line="96" pos:column="85"/></operator> <call><name pos:line="96" pos:column="78">ISUPPER<pos:position pos:line="96" pos:column="85"/></name><argument_list pos:line="96" pos:column="85">(<argument><expr><name pos:line="96" pos:column="86">t_ch<pos:position pos:line="96" pos:column="90"/></name></expr></argument>)<pos:position pos:line="96" pos:column="91"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="92"/></condition><then pos:line="96" pos:column="92">
							<block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="57">t_ch<pos:position pos:line="97" pos:column="61"/></name> <operator pos:line="97" pos:column="62">=<pos:position pos:line="97" pos:column="63"/></operator> <call><name pos:line="97" pos:column="64">tolower<pos:position pos:line="97" pos:column="71"/></name><argument_list pos:line="97" pos:column="71">(<argument><expr><name pos:line="97" pos:column="72">t_ch<pos:position pos:line="97" pos:column="76"/></name></expr></argument>)<pos:position pos:line="97" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="78"/></expr_stmt></block></then></if>
						<if pos:line="98" pos:column="49">if <condition pos:line="98" pos:column="52">(<expr><name pos:line="98" pos:column="53">t_ch<pos:position pos:line="98" pos:column="57"/></name> <operator pos:line="98" pos:column="58">==<pos:position pos:line="98" pos:column="60"/></operator> <name pos:line="98" pos:column="61">p_ch<pos:position pos:line="98" pos:column="65"/></name></expr>)<pos:position pos:line="98" pos:column="66"/></condition><then pos:line="98" pos:column="66">
							<block type="pseudo"><break pos:line="99" pos:column="57">break;<pos:position pos:line="99" pos:column="63"/></break></block></then></if>
						<expr_stmt><expr><name pos:line="100" pos:column="49">text<pos:position pos:line="100" pos:column="53"/></name><operator pos:line="100" pos:column="53">++<pos:position pos:line="100" pos:column="55"/></operator></expr>;<pos:position pos:line="100" pos:column="56"/></expr_stmt>
					}<pos:position pos:line="101" pos:column="42"/></block></while>
					<if pos:line="102" pos:column="41">if <condition pos:line="102" pos:column="44">(<expr><name pos:line="102" pos:column="45">t_ch<pos:position pos:line="102" pos:column="49"/></name> <operator pos:line="102" pos:column="50">!=<pos:position pos:line="102" pos:column="52"/></operator> <name pos:line="102" pos:column="53">p_ch<pos:position pos:line="102" pos:column="57"/></name></expr>)<pos:position pos:line="102" pos:column="58"/></condition><then pos:line="102" pos:column="58">
						<block type="pseudo"><return pos:line="103" pos:column="49">return <expr><name pos:line="103" pos:column="56">WM_NOMATCH<pos:position pos:line="103" pos:column="66"/></name></expr>;<pos:position pos:line="103" pos:column="67"/></return></block></then></if>
				}<pos:position pos:line="104" pos:column="34"/></block></then></if>
				<if pos:line="105" pos:column="33">if <condition pos:line="105" pos:column="36">(<expr><operator pos:line="105" pos:column="37">(<pos:position pos:line="105" pos:column="38"/></operator><name pos:line="105" pos:column="38">matched<pos:position pos:line="105" pos:column="45"/></name> <operator pos:line="105" pos:column="46">=<pos:position pos:line="105" pos:column="47"/></operator> <call><name pos:line="105" pos:column="48">dowild<pos:position pos:line="105" pos:column="54"/></name><argument_list pos:line="105" pos:column="54">(<argument><expr><name pos:line="105" pos:column="55">p<pos:position pos:line="105" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="58">text<pos:position pos:line="105" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="64">flags<pos:position pos:line="105" pos:column="69"/></name></expr></argument>)<pos:position pos:line="105" pos:column="70"/></argument_list></call><operator pos:line="105" pos:column="70">)<pos:position pos:line="105" pos:column="71"/></operator> <operator pos:line="105" pos:column="72">!=<pos:position pos:line="105" pos:column="74"/></operator> <name pos:line="105" pos:column="75">WM_NOMATCH<pos:position pos:line="105" pos:column="85"/></name></expr>)<pos:position pos:line="105" pos:column="86"/></condition><then pos:line="105" pos:column="86"> <block pos:line="105" pos:column="87">{
					<if pos:line="106" pos:column="41">if <condition pos:line="106" pos:column="44">(<expr><operator pos:line="106" pos:column="45">!<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="46">match_slash<pos:position pos:line="106" pos:column="57"/></name> <operator pos:line="106" pos:column="58">||<pos:position pos:line="106" pos:column="60"/></operator> <name pos:line="106" pos:column="61">matched<pos:position pos:line="106" pos:column="68"/></name> <operator pos:line="106" pos:column="69">!=<pos:position pos:line="106" pos:column="71"/></operator> <name pos:line="106" pos:column="72">WM_ABORT_TO_STARSTAR<pos:position pos:line="106" pos:column="92"/></name></expr>)<pos:position pos:line="106" pos:column="93"/></condition><then pos:line="106" pos:column="93">
						<block type="pseudo"><return pos:line="107" pos:column="49">return <expr><name pos:line="107" pos:column="56">matched<pos:position pos:line="107" pos:column="63"/></name></expr>;<pos:position pos:line="107" pos:column="64"/></return></block></then></if>
				}<pos:position pos:line="108" pos:column="34"/></block></then> <elseif pos:line="108" pos:column="35">else <if pos:line="108" pos:column="40">if <condition pos:line="108" pos:column="43">(<expr><operator pos:line="108" pos:column="44">!<pos:position pos:line="108" pos:column="45"/></operator><name pos:line="108" pos:column="45">match_slash<pos:position pos:line="108" pos:column="56"/></name> <operator pos:line="108" pos:column="57">&amp;&amp;<pos:position pos:line="108" pos:column="67"/></operator> <name pos:line="108" pos:column="60">t_ch<pos:position pos:line="108" pos:column="64"/></name> <operator pos:line="108" pos:column="65">==<pos:position pos:line="108" pos:column="67"/></operator> <literal type="char" pos:line="108" pos:column="68">'/'<pos:position pos:line="108" pos:column="71"/></literal></expr>)<pos:position pos:line="108" pos:column="72"/></condition><then pos:line="108" pos:column="72">
					<block type="pseudo"><return pos:line="109" pos:column="41">return <expr><name pos:line="109" pos:column="48">WM_ABORT_TO_STARSTAR<pos:position pos:line="109" pos:column="68"/></name></expr>;<pos:position pos:line="109" pos:column="69"/></return></block></then></if></elseif></if>
				<expr_stmt><expr><name pos:line="110" pos:column="33">t_ch<pos:position pos:line="110" pos:column="37"/></name> <operator pos:line="110" pos:column="38">=<pos:position pos:line="110" pos:column="39"/></operator> <operator pos:line="110" pos:column="40">*<pos:position pos:line="110" pos:column="41"/></operator><operator pos:line="110" pos:column="41">++<pos:position pos:line="110" pos:column="43"/></operator><name pos:line="110" pos:column="43">text<pos:position pos:line="110" pos:column="47"/></name></expr>;<pos:position pos:line="110" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="111" pos:column="26"/></block></while>
			<return pos:line="112" pos:column="25">return <expr><name pos:line="112" pos:column="32">WM_ABORT_ALL<pos:position pos:line="112" pos:column="44"/></name></expr>;<pos:position pos:line="112" pos:column="45"/></return>
		<case pos:line="113" pos:column="17">case <expr><literal type="char" pos:line="113" pos:column="22">'['<pos:position pos:line="113" pos:column="25"/></literal></expr>:<pos:position pos:line="113" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="114" pos:column="25">p_ch<pos:position pos:line="114" pos:column="29"/></name> <operator pos:line="114" pos:column="30">=<pos:position pos:line="114" pos:column="31"/></operator> <operator pos:line="114" pos:column="32">*<pos:position pos:line="114" pos:column="33"/></operator><operator pos:line="114" pos:column="33">++<pos:position pos:line="114" pos:column="35"/></operator><name pos:line="114" pos:column="35">p<pos:position pos:line="114" pos:column="36"/></name></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
<cpp:ifdef pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">ifdef<pos:position pos:line="115" pos:column="7"/></cpp:directive> <name pos:line="115" pos:column="8">NEGATE_CLASS2<pos:position pos:line="115" pos:column="21"/></name></cpp:ifdef>
			<if pos:line="116" pos:column="25">if <condition pos:line="116" pos:column="28">(<expr><name pos:line="116" pos:column="29">p_ch<pos:position pos:line="116" pos:column="33"/></name> <operator pos:line="116" pos:column="34">==<pos:position pos:line="116" pos:column="36"/></operator> <name pos:line="116" pos:column="37">NEGATE_CLASS2<pos:position pos:line="116" pos:column="50"/></name></expr>)<pos:position pos:line="116" pos:column="51"/></condition><then pos:line="116" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="33">p_ch<pos:position pos:line="117" pos:column="37"/></name> <operator pos:line="117" pos:column="38">=<pos:position pos:line="117" pos:column="39"/></operator> <name pos:line="117" pos:column="40">NEGATE_CLASS<pos:position pos:line="117" pos:column="52"/></name></expr>;<pos:position pos:line="117" pos:column="53"/></expr_stmt></block></then></if>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
			<comment type="block" pos:line="119" pos:column="25">/* Assign literal 1/0 because of "matched" comparison. */</comment>
			<expr_stmt><expr><name pos:line="120" pos:column="25">negated<pos:position pos:line="120" pos:column="32"/></name> <operator pos:line="120" pos:column="33">=<pos:position pos:line="120" pos:column="34"/></operator> <ternary><condition><expr><name pos:line="120" pos:column="35">p_ch<pos:position pos:line="120" pos:column="39"/></name> <operator pos:line="120" pos:column="40">==<pos:position pos:line="120" pos:column="42"/></operator> <name pos:line="120" pos:column="43">NEGATE_CLASS<pos:position pos:line="120" pos:column="55"/></name></expr> ?<pos:position pos:line="120" pos:column="57"/></condition><then pos:line="120" pos:column="57"> <expr><literal type="number" pos:line="120" pos:column="58">1<pos:position pos:line="120" pos:column="59"/></literal></expr> <pos:position pos:line="120" pos:column="60"/></then><else pos:line="120" pos:column="60">: <expr><literal type="number" pos:line="120" pos:column="62">0<pos:position pos:line="120" pos:column="63"/></literal></expr></else></ternary></expr>;<pos:position pos:line="120" pos:column="64"/></expr_stmt>
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><name pos:line="121" pos:column="29">negated<pos:position pos:line="121" pos:column="36"/></name></expr>)<pos:position pos:line="121" pos:column="37"/></condition><then pos:line="121" pos:column="37"> <block pos:line="121" pos:column="38">{
				<comment type="block" pos:line="122" pos:column="33">/* Inverted character class. */</comment>
				<expr_stmt><expr><name pos:line="123" pos:column="33">p_ch<pos:position pos:line="123" pos:column="37"/></name> <operator pos:line="123" pos:column="38">=<pos:position pos:line="123" pos:column="39"/></operator> <operator pos:line="123" pos:column="40">*<pos:position pos:line="123" pos:column="41"/></operator><operator pos:line="123" pos:column="41">++<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="43">p<pos:position pos:line="123" pos:column="44"/></name></expr>;<pos:position pos:line="123" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="124" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="125" pos:column="25">prev_ch<pos:position pos:line="125" pos:column="32"/></name> <operator pos:line="125" pos:column="33">=<pos:position pos:line="125" pos:column="34"/></operator> <literal type="number" pos:line="125" pos:column="35">0<pos:position pos:line="125" pos:column="36"/></literal></expr>;<pos:position pos:line="125" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="126" pos:column="25">matched<pos:position pos:line="126" pos:column="32"/></name> <operator pos:line="126" pos:column="33">=<pos:position pos:line="126" pos:column="34"/></operator> <literal type="number" pos:line="126" pos:column="35">0<pos:position pos:line="126" pos:column="36"/></literal></expr>;<pos:position pos:line="126" pos:column="37"/></expr_stmt>
			<do pos:line="127" pos:column="25">do <block pos:line="127" pos:column="28">{
				<if pos:line="128" pos:column="33">if <condition pos:line="128" pos:column="36">(<expr><operator pos:line="128" pos:column="37">!<pos:position pos:line="128" pos:column="38"/></operator><name pos:line="128" pos:column="38">p_ch<pos:position pos:line="128" pos:column="42"/></name></expr>)<pos:position pos:line="128" pos:column="43"/></condition><then pos:line="128" pos:column="43">
					<block type="pseudo"><return pos:line="129" pos:column="41">return <expr><name pos:line="129" pos:column="48">WM_ABORT_ALL<pos:position pos:line="129" pos:column="60"/></name></expr>;<pos:position pos:line="129" pos:column="61"/></return></block></then></if>
				<if pos:line="130" pos:column="33">if <condition pos:line="130" pos:column="36">(<expr><name pos:line="130" pos:column="37">p_ch<pos:position pos:line="130" pos:column="41"/></name> <operator pos:line="130" pos:column="42">==<pos:position pos:line="130" pos:column="44"/></operator> <literal type="char" pos:line="130" pos:column="45">'\\'<pos:position pos:line="130" pos:column="49"/></literal></expr>)<pos:position pos:line="130" pos:column="50"/></condition><then pos:line="130" pos:column="50"> <block pos:line="130" pos:column="51">{
					<expr_stmt><expr><name pos:line="131" pos:column="41">p_ch<pos:position pos:line="131" pos:column="45"/></name> <operator pos:line="131" pos:column="46">=<pos:position pos:line="131" pos:column="47"/></operator> <operator pos:line="131" pos:column="48">*<pos:position pos:line="131" pos:column="49"/></operator><operator pos:line="131" pos:column="49">++<pos:position pos:line="131" pos:column="51"/></operator><name pos:line="131" pos:column="51">p<pos:position pos:line="131" pos:column="52"/></name></expr>;<pos:position pos:line="131" pos:column="53"/></expr_stmt>
					<if pos:line="132" pos:column="41">if <condition pos:line="132" pos:column="44">(<expr><operator pos:line="132" pos:column="45">!<pos:position pos:line="132" pos:column="46"/></operator><name pos:line="132" pos:column="46">p_ch<pos:position pos:line="132" pos:column="50"/></name></expr>)<pos:position pos:line="132" pos:column="51"/></condition><then pos:line="132" pos:column="51">
						<block type="pseudo"><return pos:line="133" pos:column="49">return <expr><name pos:line="133" pos:column="56">WM_ABORT_ALL<pos:position pos:line="133" pos:column="68"/></name></expr>;<pos:position pos:line="133" pos:column="69"/></return></block></then></if>
					<if pos:line="134" pos:column="41">if <condition pos:line="134" pos:column="44">(<expr><name pos:line="134" pos:column="45">t_ch<pos:position pos:line="134" pos:column="49"/></name> <operator pos:line="134" pos:column="50">==<pos:position pos:line="134" pos:column="52"/></operator> <name pos:line="134" pos:column="53">p_ch<pos:position pos:line="134" pos:column="57"/></name></expr>)<pos:position pos:line="134" pos:column="58"/></condition><then pos:line="134" pos:column="58">
						<block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="49">matched<pos:position pos:line="135" pos:column="56"/></name> <operator pos:line="135" pos:column="57">=<pos:position pos:line="135" pos:column="58"/></operator> <literal type="number" pos:line="135" pos:column="59">1<pos:position pos:line="135" pos:column="60"/></literal></expr>;<pos:position pos:line="135" pos:column="61"/></expr_stmt></block></then></if>
				}<pos:position pos:line="136" pos:column="34"/></block></then> <elseif pos:line="136" pos:column="35">else <if pos:line="136" pos:column="40">if <condition pos:line="136" pos:column="43">(<expr><name pos:line="136" pos:column="44">p_ch<pos:position pos:line="136" pos:column="48"/></name> <operator pos:line="136" pos:column="49">==<pos:position pos:line="136" pos:column="51"/></operator> <literal type="char" pos:line="136" pos:column="52">'-'<pos:position pos:line="136" pos:column="55"/></literal> <operator pos:line="136" pos:column="56">&amp;&amp;<pos:position pos:line="136" pos:column="66"/></operator> <name pos:line="136" pos:column="59">prev_ch<pos:position pos:line="136" pos:column="66"/></name> <operator pos:line="136" pos:column="67">&amp;&amp;<pos:position pos:line="136" pos:column="77"/></operator> <name><name pos:line="136" pos:column="70">p<pos:position pos:line="136" pos:column="71"/></name><index pos:line="136" pos:column="71">[<expr><literal type="number" pos:line="136" pos:column="72">1<pos:position pos:line="136" pos:column="73"/></literal></expr>]<pos:position pos:line="136" pos:column="74"/></index></name> <operator pos:line="136" pos:column="75">&amp;&amp;<pos:position pos:line="136" pos:column="85"/></operator> <name><name pos:line="136" pos:column="78">p<pos:position pos:line="136" pos:column="79"/></name><index pos:line="136" pos:column="79">[<expr><literal type="number" pos:line="136" pos:column="80">1<pos:position pos:line="136" pos:column="81"/></literal></expr>]<pos:position pos:line="136" pos:column="82"/></index></name> <operator pos:line="136" pos:column="83">!=<pos:position pos:line="136" pos:column="85"/></operator> <literal type="char" pos:line="136" pos:column="86">']'<pos:position pos:line="136" pos:column="89"/></literal></expr>)<pos:position pos:line="136" pos:column="90"/></condition><then pos:line="136" pos:column="90"> <block pos:line="136" pos:column="91">{
					<expr_stmt><expr><name pos:line="137" pos:column="41">p_ch<pos:position pos:line="137" pos:column="45"/></name> <operator pos:line="137" pos:column="46">=<pos:position pos:line="137" pos:column="47"/></operator> <operator pos:line="137" pos:column="48">*<pos:position pos:line="137" pos:column="49"/></operator><operator pos:line="137" pos:column="49">++<pos:position pos:line="137" pos:column="51"/></operator><name pos:line="137" pos:column="51">p<pos:position pos:line="137" pos:column="52"/></name></expr>;<pos:position pos:line="137" pos:column="53"/></expr_stmt>
					<if pos:line="138" pos:column="41">if <condition pos:line="138" pos:column="44">(<expr><name pos:line="138" pos:column="45">p_ch<pos:position pos:line="138" pos:column="49"/></name> <operator pos:line="138" pos:column="50">==<pos:position pos:line="138" pos:column="52"/></operator> <literal type="char" pos:line="138" pos:column="53">'\\'<pos:position pos:line="138" pos:column="57"/></literal></expr>)<pos:position pos:line="138" pos:column="58"/></condition><then pos:line="138" pos:column="58"> <block pos:line="138" pos:column="59">{
						<expr_stmt><expr><name pos:line="139" pos:column="49">p_ch<pos:position pos:line="139" pos:column="53"/></name> <operator pos:line="139" pos:column="54">=<pos:position pos:line="139" pos:column="55"/></operator> <operator pos:line="139" pos:column="56">*<pos:position pos:line="139" pos:column="57"/></operator><operator pos:line="139" pos:column="57">++<pos:position pos:line="139" pos:column="59"/></operator><name pos:line="139" pos:column="59">p<pos:position pos:line="139" pos:column="60"/></name></expr>;<pos:position pos:line="139" pos:column="61"/></expr_stmt>
						<if pos:line="140" pos:column="49">if <condition pos:line="140" pos:column="52">(<expr><operator pos:line="140" pos:column="53">!<pos:position pos:line="140" pos:column="54"/></operator><name pos:line="140" pos:column="54">p_ch<pos:position pos:line="140" pos:column="58"/></name></expr>)<pos:position pos:line="140" pos:column="59"/></condition><then pos:line="140" pos:column="59">
							<block type="pseudo"><return pos:line="141" pos:column="57">return <expr><name pos:line="141" pos:column="64">WM_ABORT_ALL<pos:position pos:line="141" pos:column="76"/></name></expr>;<pos:position pos:line="141" pos:column="77"/></return></block></then></if>
					}<pos:position pos:line="142" pos:column="42"/></block></then></if>
					<if pos:line="143" pos:column="41">if <condition pos:line="143" pos:column="44">(<expr><name pos:line="143" pos:column="45">t_ch<pos:position pos:line="143" pos:column="49"/></name> <operator pos:line="143" pos:column="50">&lt;=<pos:position pos:line="143" pos:column="55"/></operator> <name pos:line="143" pos:column="53">p_ch<pos:position pos:line="143" pos:column="57"/></name> <operator pos:line="143" pos:column="58">&amp;&amp;<pos:position pos:line="143" pos:column="68"/></operator> <name pos:line="143" pos:column="61">t_ch<pos:position pos:line="143" pos:column="65"/></name> <operator pos:line="143" pos:column="66">&gt;=<pos:position pos:line="143" pos:column="71"/></operator> <name pos:line="143" pos:column="69">prev_ch<pos:position pos:line="143" pos:column="76"/></name></expr>)<pos:position pos:line="143" pos:column="77"/></condition><then pos:line="143" pos:column="77">
						<block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="49">matched<pos:position pos:line="144" pos:column="56"/></name> <operator pos:line="144" pos:column="57">=<pos:position pos:line="144" pos:column="58"/></operator> <literal type="number" pos:line="144" pos:column="59">1<pos:position pos:line="144" pos:column="60"/></literal></expr>;<pos:position pos:line="144" pos:column="61"/></expr_stmt></block></then>
					<elseif pos:line="145" pos:column="41">else <if pos:line="145" pos:column="46">if <condition pos:line="145" pos:column="49">(<expr><operator pos:line="145" pos:column="50">(<pos:position pos:line="145" pos:column="51"/></operator><name pos:line="145" pos:column="51">flags<pos:position pos:line="145" pos:column="56"/></name> <operator pos:line="145" pos:column="57">&amp;<pos:position pos:line="145" pos:column="62"/></operator> <name pos:line="145" pos:column="59">WM_CASEFOLD<pos:position pos:line="145" pos:column="70"/></name><operator pos:line="145" pos:column="70">)<pos:position pos:line="145" pos:column="71"/></operator> <operator pos:line="145" pos:column="72">&amp;&amp;<pos:position pos:line="145" pos:column="82"/></operator> <call><name pos:line="145" pos:column="75">ISLOWER<pos:position pos:line="145" pos:column="82"/></name><argument_list pos:line="145" pos:column="82">(<argument><expr><name pos:line="145" pos:column="83">t_ch<pos:position pos:line="145" pos:column="87"/></name></expr></argument>)<pos:position pos:line="145" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="89"/></condition><then pos:line="145" pos:column="89"> <block pos:line="145" pos:column="90">{
						<decl_stmt><decl><type><name pos:line="146" pos:column="49">uchar<pos:position pos:line="146" pos:column="54"/></name></type> <name pos:line="146" pos:column="55">t_ch_upper<pos:position pos:line="146" pos:column="65"/></name> <init pos:line="146" pos:column="66">= <expr><call><name pos:line="146" pos:column="68">toupper<pos:position pos:line="146" pos:column="75"/></name><argument_list pos:line="146" pos:column="75">(<argument><expr><name pos:line="146" pos:column="76">t_ch<pos:position pos:line="146" pos:column="80"/></name></expr></argument>)<pos:position pos:line="146" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="146" pos:column="82"/></decl_stmt>
						<if pos:line="147" pos:column="49">if <condition pos:line="147" pos:column="52">(<expr><name pos:line="147" pos:column="53">t_ch_upper<pos:position pos:line="147" pos:column="63"/></name> <operator pos:line="147" pos:column="64">&lt;=<pos:position pos:line="147" pos:column="69"/></operator> <name pos:line="147" pos:column="67">p_ch<pos:position pos:line="147" pos:column="71"/></name> <operator pos:line="147" pos:column="72">&amp;&amp;<pos:position pos:line="147" pos:column="82"/></operator> <name pos:line="147" pos:column="75">t_ch_upper<pos:position pos:line="147" pos:column="85"/></name> <operator pos:line="147" pos:column="86">&gt;=<pos:position pos:line="147" pos:column="91"/></operator> <name pos:line="147" pos:column="89">prev_ch<pos:position pos:line="147" pos:column="96"/></name></expr>)<pos:position pos:line="147" pos:column="97"/></condition><then pos:line="147" pos:column="97">
							<block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="57">matched<pos:position pos:line="148" pos:column="64"/></name> <operator pos:line="148" pos:column="65">=<pos:position pos:line="148" pos:column="66"/></operator> <literal type="number" pos:line="148" pos:column="67">1<pos:position pos:line="148" pos:column="68"/></literal></expr>;<pos:position pos:line="148" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="149" pos:column="42"/></block></then></if></elseif></if>
					<expr_stmt><expr><name pos:line="150" pos:column="41">p_ch<pos:position pos:line="150" pos:column="45"/></name> <operator pos:line="150" pos:column="46">=<pos:position pos:line="150" pos:column="47"/></operator> <literal type="number" pos:line="150" pos:column="48">0<pos:position pos:line="150" pos:column="49"/></literal></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt> <comment type="block" pos:line="150" pos:column="51">/* This makes "prev_ch" get set to 0. */</comment>
				}<pos:position pos:line="151" pos:column="34"/></block></then></if></elseif> <elseif pos:line="151" pos:column="35">else <if pos:line="151" pos:column="40">if <condition pos:line="151" pos:column="43">(<expr><name pos:line="151" pos:column="44">p_ch<pos:position pos:line="151" pos:column="48"/></name> <operator pos:line="151" pos:column="49">==<pos:position pos:line="151" pos:column="51"/></operator> <literal type="char" pos:line="151" pos:column="52">'['<pos:position pos:line="151" pos:column="55"/></literal> <operator pos:line="151" pos:column="56">&amp;&amp;<pos:position pos:line="151" pos:column="66"/></operator> <name><name pos:line="151" pos:column="59">p<pos:position pos:line="151" pos:column="60"/></name><index pos:line="151" pos:column="60">[<expr><literal type="number" pos:line="151" pos:column="61">1<pos:position pos:line="151" pos:column="62"/></literal></expr>]<pos:position pos:line="151" pos:column="63"/></index></name> <operator pos:line="151" pos:column="64">==<pos:position pos:line="151" pos:column="66"/></operator> <literal type="char" pos:line="151" pos:column="67">':'<pos:position pos:line="151" pos:column="70"/></literal></expr>)<pos:position pos:line="151" pos:column="71"/></condition><then pos:line="151" pos:column="71"> <block pos:line="151" pos:column="72">{
					<decl_stmt><decl><type><specifier pos:line="152" pos:column="41">const<pos:position pos:line="152" pos:column="46"/></specifier> <name pos:line="152" pos:column="47">uchar<pos:position pos:line="152" pos:column="52"/></name> <modifier pos:line="152" pos:column="53">*<pos:position pos:line="152" pos:column="54"/></modifier></type><name pos:line="152" pos:column="54">s<pos:position pos:line="152" pos:column="55"/></name></decl>;<pos:position pos:line="152" pos:column="56"/></decl_stmt>
					<decl_stmt><decl><type><name pos:line="153" pos:column="41">int<pos:position pos:line="153" pos:column="44"/></name></type> <name pos:line="153" pos:column="45">i<pos:position pos:line="153" pos:column="46"/></name></decl>;<pos:position pos:line="153" pos:column="47"/></decl_stmt>
					<for pos:line="154" pos:column="41">for <control pos:line="154" pos:column="45">(<init><expr><name pos:line="154" pos:column="46">s<pos:position pos:line="154" pos:column="47"/></name> <operator pos:line="154" pos:column="48">=<pos:position pos:line="154" pos:column="49"/></operator> <name pos:line="154" pos:column="50">p<pos:position pos:line="154" pos:column="51"/></name> <operator pos:line="154" pos:column="52">+=<pos:position pos:line="154" pos:column="54"/></operator> <literal type="number" pos:line="154" pos:column="55">2<pos:position pos:line="154" pos:column="56"/></literal></expr>;<pos:position pos:line="154" pos:column="57"/></init> <condition><expr><operator pos:line="154" pos:column="58">(<pos:position pos:line="154" pos:column="59"/></operator><name pos:line="154" pos:column="59">p_ch<pos:position pos:line="154" pos:column="63"/></name> <operator pos:line="154" pos:column="64">=<pos:position pos:line="154" pos:column="65"/></operator> <operator pos:line="154" pos:column="66">*<pos:position pos:line="154" pos:column="67"/></operator><name pos:line="154" pos:column="67">p<pos:position pos:line="154" pos:column="68"/></name><operator pos:line="154" pos:column="68">)<pos:position pos:line="154" pos:column="69"/></operator> <operator pos:line="154" pos:column="70">&amp;&amp;<pos:position pos:line="154" pos:column="80"/></operator> <name pos:line="154" pos:column="73">p_ch<pos:position pos:line="154" pos:column="77"/></name> <operator pos:line="154" pos:column="78">!=<pos:position pos:line="154" pos:column="80"/></operator> <literal type="char" pos:line="154" pos:column="81">']'<pos:position pos:line="154" pos:column="84"/></literal></expr>;<pos:position pos:line="154" pos:column="85"/></condition> <incr><expr><name pos:line="154" pos:column="86">p<pos:position pos:line="154" pos:column="87"/></name><operator pos:line="154" pos:column="87">++<pos:position pos:line="154" pos:column="89"/></operator></expr></incr>)<pos:position pos:line="154" pos:column="90"/></control> <block pos:line="154" pos:column="91">{}<pos:position pos:line="154" pos:column="93"/></block></for> <comment type="block" pos:line="154" pos:column="94">/*SHARED ITERATOR*/</comment>
					<if pos:line="155" pos:column="41">if <condition pos:line="155" pos:column="44">(<expr><operator pos:line="155" pos:column="45">!<pos:position pos:line="155" pos:column="46"/></operator><name pos:line="155" pos:column="46">p_ch<pos:position pos:line="155" pos:column="50"/></name></expr>)<pos:position pos:line="155" pos:column="51"/></condition><then pos:line="155" pos:column="51">
						<block type="pseudo"><return pos:line="156" pos:column="49">return <expr><name pos:line="156" pos:column="56">WM_ABORT_ALL<pos:position pos:line="156" pos:column="68"/></name></expr>;<pos:position pos:line="156" pos:column="69"/></return></block></then></if>
					<expr_stmt><expr><name pos:line="157" pos:column="41">i<pos:position pos:line="157" pos:column="42"/></name> <operator pos:line="157" pos:column="43">=<pos:position pos:line="157" pos:column="44"/></operator> <name pos:line="157" pos:column="45">p<pos:position pos:line="157" pos:column="46"/></name> <operator pos:line="157" pos:column="47">-<pos:position pos:line="157" pos:column="48"/></operator> <name pos:line="157" pos:column="49">s<pos:position pos:line="157" pos:column="50"/></name> <operator pos:line="157" pos:column="51">-<pos:position pos:line="157" pos:column="52"/></operator> <literal type="number" pos:line="157" pos:column="53">1<pos:position pos:line="157" pos:column="54"/></literal></expr>;<pos:position pos:line="157" pos:column="55"/></expr_stmt>
					<if pos:line="158" pos:column="41">if <condition pos:line="158" pos:column="44">(<expr><name pos:line="158" pos:column="45">i<pos:position pos:line="158" pos:column="46"/></name> <operator pos:line="158" pos:column="47">&lt;<pos:position pos:line="158" pos:column="51"/></operator> <literal type="number" pos:line="158" pos:column="49">0<pos:position pos:line="158" pos:column="50"/></literal> <operator pos:line="158" pos:column="51">||<pos:position pos:line="158" pos:column="53"/></operator> <name><name pos:line="158" pos:column="54">p<pos:position pos:line="158" pos:column="55"/></name><index pos:line="158" pos:column="55">[<expr><operator pos:line="158" pos:column="56">-<pos:position pos:line="158" pos:column="57"/></operator><literal type="number" pos:line="158" pos:column="57">1<pos:position pos:line="158" pos:column="58"/></literal></expr>]<pos:position pos:line="158" pos:column="59"/></index></name> <operator pos:line="158" pos:column="60">!=<pos:position pos:line="158" pos:column="62"/></operator> <literal type="char" pos:line="158" pos:column="63">':'<pos:position pos:line="158" pos:column="66"/></literal></expr>)<pos:position pos:line="158" pos:column="67"/></condition><then pos:line="158" pos:column="67"> <block pos:line="158" pos:column="68">{
						<comment type="block" pos:line="159" pos:column="49">/* Didn't find ":]", so treat like a normal set. */</comment>
						<expr_stmt><expr><name pos:line="160" pos:column="49">p<pos:position pos:line="160" pos:column="50"/></name> <operator pos:line="160" pos:column="51">=<pos:position pos:line="160" pos:column="52"/></operator> <name pos:line="160" pos:column="53">s<pos:position pos:line="160" pos:column="54"/></name> <operator pos:line="160" pos:column="55">-<pos:position pos:line="160" pos:column="56"/></operator> <literal type="number" pos:line="160" pos:column="57">2<pos:position pos:line="160" pos:column="58"/></literal></expr>;<pos:position pos:line="160" pos:column="59"/></expr_stmt>
						<expr_stmt><expr><name pos:line="161" pos:column="49">p_ch<pos:position pos:line="161" pos:column="53"/></name> <operator pos:line="161" pos:column="54">=<pos:position pos:line="161" pos:column="55"/></operator> <literal type="char" pos:line="161" pos:column="56">'['<pos:position pos:line="161" pos:column="59"/></literal></expr>;<pos:position pos:line="161" pos:column="60"/></expr_stmt>
						<if pos:line="162" pos:column="49">if <condition pos:line="162" pos:column="52">(<expr><name pos:line="162" pos:column="53">t_ch<pos:position pos:line="162" pos:column="57"/></name> <operator pos:line="162" pos:column="58">==<pos:position pos:line="162" pos:column="60"/></operator> <name pos:line="162" pos:column="61">p_ch<pos:position pos:line="162" pos:column="65"/></name></expr>)<pos:position pos:line="162" pos:column="66"/></condition><then pos:line="162" pos:column="66">
							<block type="pseudo"><expr_stmt><expr><name pos:line="163" pos:column="57">matched<pos:position pos:line="163" pos:column="64"/></name> <operator pos:line="163" pos:column="65">=<pos:position pos:line="163" pos:column="66"/></operator> <literal type="number" pos:line="163" pos:column="67">1<pos:position pos:line="163" pos:column="68"/></literal></expr>;<pos:position pos:line="163" pos:column="69"/></expr_stmt></block></then></if>
						<continue pos:line="164" pos:column="49">continue;<pos:position pos:line="164" pos:column="58"/></continue>
					}<pos:position pos:line="165" pos:column="42"/></block></then></if>
					<if pos:line="166" pos:column="41">if <condition pos:line="166" pos:column="44">(<expr><call><name pos:line="166" pos:column="45">CC_EQ<pos:position pos:line="166" pos:column="50"/></name><argument_list pos:line="166" pos:column="50">(<argument><expr><name pos:line="166" pos:column="51">s<pos:position pos:line="166" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="166" pos:column="53">i<pos:position pos:line="166" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="56">"alnum"<pos:position pos:line="166" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="65"/></condition><then pos:line="166" pos:column="65"> <block pos:line="166" pos:column="66">{
						<if pos:line="167" pos:column="49">if <condition pos:line="167" pos:column="52">(<expr><call><name pos:line="167" pos:column="53">ISALNUM<pos:position pos:line="167" pos:column="60"/></name><argument_list pos:line="167" pos:column="60">(<argument><expr><name pos:line="167" pos:column="61">t_ch<pos:position pos:line="167" pos:column="65"/></name></expr></argument>)<pos:position pos:line="167" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="67"/></condition><then pos:line="167" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="168" pos:column="57">matched<pos:position pos:line="168" pos:column="64"/></name> <operator pos:line="168" pos:column="65">=<pos:position pos:line="168" pos:column="66"/></operator> <literal type="number" pos:line="168" pos:column="67">1<pos:position pos:line="168" pos:column="68"/></literal></expr>;<pos:position pos:line="168" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="169" pos:column="42"/></block></then> <elseif pos:line="169" pos:column="43">else <if pos:line="169" pos:column="48">if <condition pos:line="169" pos:column="51">(<expr><call><name pos:line="169" pos:column="52">CC_EQ<pos:position pos:line="169" pos:column="57"/></name><argument_list pos:line="169" pos:column="57">(<argument><expr><name pos:line="169" pos:column="58">s<pos:position pos:line="169" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="169" pos:column="60">i<pos:position pos:line="169" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="63">"alpha"<pos:position pos:line="169" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="72"/></condition><then pos:line="169" pos:column="72"> <block pos:line="169" pos:column="73">{
						<if pos:line="170" pos:column="49">if <condition pos:line="170" pos:column="52">(<expr><call><name pos:line="170" pos:column="53">ISALPHA<pos:position pos:line="170" pos:column="60"/></name><argument_list pos:line="170" pos:column="60">(<argument><expr><name pos:line="170" pos:column="61">t_ch<pos:position pos:line="170" pos:column="65"/></name></expr></argument>)<pos:position pos:line="170" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="67"/></condition><then pos:line="170" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="171" pos:column="57">matched<pos:position pos:line="171" pos:column="64"/></name> <operator pos:line="171" pos:column="65">=<pos:position pos:line="171" pos:column="66"/></operator> <literal type="number" pos:line="171" pos:column="67">1<pos:position pos:line="171" pos:column="68"/></literal></expr>;<pos:position pos:line="171" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="172" pos:column="42"/></block></then></if></elseif> <elseif pos:line="172" pos:column="43">else <if pos:line="172" pos:column="48">if <condition pos:line="172" pos:column="51">(<expr><call><name pos:line="172" pos:column="52">CC_EQ<pos:position pos:line="172" pos:column="57"/></name><argument_list pos:line="172" pos:column="57">(<argument><expr><name pos:line="172" pos:column="58">s<pos:position pos:line="172" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="172" pos:column="60">i<pos:position pos:line="172" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="63">"blank"<pos:position pos:line="172" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="172" pos:column="72"/></condition><then pos:line="172" pos:column="72"> <block pos:line="172" pos:column="73">{
						<if pos:line="173" pos:column="49">if <condition pos:line="173" pos:column="52">(<expr><call><name pos:line="173" pos:column="53">ISBLANK<pos:position pos:line="173" pos:column="60"/></name><argument_list pos:line="173" pos:column="60">(<argument><expr><name pos:line="173" pos:column="61">t_ch<pos:position pos:line="173" pos:column="65"/></name></expr></argument>)<pos:position pos:line="173" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="173" pos:column="67"/></condition><then pos:line="173" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="174" pos:column="57">matched<pos:position pos:line="174" pos:column="64"/></name> <operator pos:line="174" pos:column="65">=<pos:position pos:line="174" pos:column="66"/></operator> <literal type="number" pos:line="174" pos:column="67">1<pos:position pos:line="174" pos:column="68"/></literal></expr>;<pos:position pos:line="174" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="175" pos:column="42"/></block></then></if></elseif> <elseif pos:line="175" pos:column="43">else <if pos:line="175" pos:column="48">if <condition pos:line="175" pos:column="51">(<expr><call><name pos:line="175" pos:column="52">CC_EQ<pos:position pos:line="175" pos:column="57"/></name><argument_list pos:line="175" pos:column="57">(<argument><expr><name pos:line="175" pos:column="58">s<pos:position pos:line="175" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="175" pos:column="60">i<pos:position pos:line="175" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="63">"cntrl"<pos:position pos:line="175" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="72"/></condition><then pos:line="175" pos:column="72"> <block pos:line="175" pos:column="73">{
						<if pos:line="176" pos:column="49">if <condition pos:line="176" pos:column="52">(<expr><call><name pos:line="176" pos:column="53">ISCNTRL<pos:position pos:line="176" pos:column="60"/></name><argument_list pos:line="176" pos:column="60">(<argument><expr><name pos:line="176" pos:column="61">t_ch<pos:position pos:line="176" pos:column="65"/></name></expr></argument>)<pos:position pos:line="176" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="67"/></condition><then pos:line="176" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="177" pos:column="57">matched<pos:position pos:line="177" pos:column="64"/></name> <operator pos:line="177" pos:column="65">=<pos:position pos:line="177" pos:column="66"/></operator> <literal type="number" pos:line="177" pos:column="67">1<pos:position pos:line="177" pos:column="68"/></literal></expr>;<pos:position pos:line="177" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="178" pos:column="42"/></block></then></if></elseif> <elseif pos:line="178" pos:column="43">else <if pos:line="178" pos:column="48">if <condition pos:line="178" pos:column="51">(<expr><call><name pos:line="178" pos:column="52">CC_EQ<pos:position pos:line="178" pos:column="57"/></name><argument_list pos:line="178" pos:column="57">(<argument><expr><name pos:line="178" pos:column="58">s<pos:position pos:line="178" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="178" pos:column="60">i<pos:position pos:line="178" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="63">"digit"<pos:position pos:line="178" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="178" pos:column="72"/></condition><then pos:line="178" pos:column="72"> <block pos:line="178" pos:column="73">{
						<if pos:line="179" pos:column="49">if <condition pos:line="179" pos:column="52">(<expr><call><name pos:line="179" pos:column="53">ISDIGIT<pos:position pos:line="179" pos:column="60"/></name><argument_list pos:line="179" pos:column="60">(<argument><expr><name pos:line="179" pos:column="61">t_ch<pos:position pos:line="179" pos:column="65"/></name></expr></argument>)<pos:position pos:line="179" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="179" pos:column="67"/></condition><then pos:line="179" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="180" pos:column="57">matched<pos:position pos:line="180" pos:column="64"/></name> <operator pos:line="180" pos:column="65">=<pos:position pos:line="180" pos:column="66"/></operator> <literal type="number" pos:line="180" pos:column="67">1<pos:position pos:line="180" pos:column="68"/></literal></expr>;<pos:position pos:line="180" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="181" pos:column="42"/></block></then></if></elseif> <elseif pos:line="181" pos:column="43">else <if pos:line="181" pos:column="48">if <condition pos:line="181" pos:column="51">(<expr><call><name pos:line="181" pos:column="52">CC_EQ<pos:position pos:line="181" pos:column="57"/></name><argument_list pos:line="181" pos:column="57">(<argument><expr><name pos:line="181" pos:column="58">s<pos:position pos:line="181" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="181" pos:column="60">i<pos:position pos:line="181" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="63">"graph"<pos:position pos:line="181" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="72"/></condition><then pos:line="181" pos:column="72"> <block pos:line="181" pos:column="73">{
						<if pos:line="182" pos:column="49">if <condition pos:line="182" pos:column="52">(<expr><call><name pos:line="182" pos:column="53">ISGRAPH<pos:position pos:line="182" pos:column="60"/></name><argument_list pos:line="182" pos:column="60">(<argument><expr><name pos:line="182" pos:column="61">t_ch<pos:position pos:line="182" pos:column="65"/></name></expr></argument>)<pos:position pos:line="182" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="182" pos:column="67"/></condition><then pos:line="182" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="183" pos:column="57">matched<pos:position pos:line="183" pos:column="64"/></name> <operator pos:line="183" pos:column="65">=<pos:position pos:line="183" pos:column="66"/></operator> <literal type="number" pos:line="183" pos:column="67">1<pos:position pos:line="183" pos:column="68"/></literal></expr>;<pos:position pos:line="183" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="184" pos:column="42"/></block></then></if></elseif> <elseif pos:line="184" pos:column="43">else <if pos:line="184" pos:column="48">if <condition pos:line="184" pos:column="51">(<expr><call><name pos:line="184" pos:column="52">CC_EQ<pos:position pos:line="184" pos:column="57"/></name><argument_list pos:line="184" pos:column="57">(<argument><expr><name pos:line="184" pos:column="58">s<pos:position pos:line="184" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="184" pos:column="60">i<pos:position pos:line="184" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="63">"lower"<pos:position pos:line="184" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="72"/></condition><then pos:line="184" pos:column="72"> <block pos:line="184" pos:column="73">{
						<if pos:line="185" pos:column="49">if <condition pos:line="185" pos:column="52">(<expr><call><name pos:line="185" pos:column="53">ISLOWER<pos:position pos:line="185" pos:column="60"/></name><argument_list pos:line="185" pos:column="60">(<argument><expr><name pos:line="185" pos:column="61">t_ch<pos:position pos:line="185" pos:column="65"/></name></expr></argument>)<pos:position pos:line="185" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="185" pos:column="67"/></condition><then pos:line="185" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="186" pos:column="57">matched<pos:position pos:line="186" pos:column="64"/></name> <operator pos:line="186" pos:column="65">=<pos:position pos:line="186" pos:column="66"/></operator> <literal type="number" pos:line="186" pos:column="67">1<pos:position pos:line="186" pos:column="68"/></literal></expr>;<pos:position pos:line="186" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="187" pos:column="42"/></block></then></if></elseif> <elseif pos:line="187" pos:column="43">else <if pos:line="187" pos:column="48">if <condition pos:line="187" pos:column="51">(<expr><call><name pos:line="187" pos:column="52">CC_EQ<pos:position pos:line="187" pos:column="57"/></name><argument_list pos:line="187" pos:column="57">(<argument><expr><name pos:line="187" pos:column="58">s<pos:position pos:line="187" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="187" pos:column="60">i<pos:position pos:line="187" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="63">"print"<pos:position pos:line="187" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="72"/></condition><then pos:line="187" pos:column="72"> <block pos:line="187" pos:column="73">{
						<if pos:line="188" pos:column="49">if <condition pos:line="188" pos:column="52">(<expr><call><name pos:line="188" pos:column="53">ISPRINT<pos:position pos:line="188" pos:column="60"/></name><argument_list pos:line="188" pos:column="60">(<argument><expr><name pos:line="188" pos:column="61">t_ch<pos:position pos:line="188" pos:column="65"/></name></expr></argument>)<pos:position pos:line="188" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="188" pos:column="67"/></condition><then pos:line="188" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="189" pos:column="57">matched<pos:position pos:line="189" pos:column="64"/></name> <operator pos:line="189" pos:column="65">=<pos:position pos:line="189" pos:column="66"/></operator> <literal type="number" pos:line="189" pos:column="67">1<pos:position pos:line="189" pos:column="68"/></literal></expr>;<pos:position pos:line="189" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="190" pos:column="42"/></block></then></if></elseif> <elseif pos:line="190" pos:column="43">else <if pos:line="190" pos:column="48">if <condition pos:line="190" pos:column="51">(<expr><call><name pos:line="190" pos:column="52">CC_EQ<pos:position pos:line="190" pos:column="57"/></name><argument_list pos:line="190" pos:column="57">(<argument><expr><name pos:line="190" pos:column="58">s<pos:position pos:line="190" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="190" pos:column="60">i<pos:position pos:line="190" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="63">"punct"<pos:position pos:line="190" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="190" pos:column="72"/></condition><then pos:line="190" pos:column="72"> <block pos:line="190" pos:column="73">{
						<if pos:line="191" pos:column="49">if <condition pos:line="191" pos:column="52">(<expr><call><name pos:line="191" pos:column="53">ISPUNCT<pos:position pos:line="191" pos:column="60"/></name><argument_list pos:line="191" pos:column="60">(<argument><expr><name pos:line="191" pos:column="61">t_ch<pos:position pos:line="191" pos:column="65"/></name></expr></argument>)<pos:position pos:line="191" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="191" pos:column="67"/></condition><then pos:line="191" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="192" pos:column="57">matched<pos:position pos:line="192" pos:column="64"/></name> <operator pos:line="192" pos:column="65">=<pos:position pos:line="192" pos:column="66"/></operator> <literal type="number" pos:line="192" pos:column="67">1<pos:position pos:line="192" pos:column="68"/></literal></expr>;<pos:position pos:line="192" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="193" pos:column="42"/></block></then></if></elseif> <elseif pos:line="193" pos:column="43">else <if pos:line="193" pos:column="48">if <condition pos:line="193" pos:column="51">(<expr><call><name pos:line="193" pos:column="52">CC_EQ<pos:position pos:line="193" pos:column="57"/></name><argument_list pos:line="193" pos:column="57">(<argument><expr><name pos:line="193" pos:column="58">s<pos:position pos:line="193" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="193" pos:column="60">i<pos:position pos:line="193" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="63">"space"<pos:position pos:line="193" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="193" pos:column="72"/></condition><then pos:line="193" pos:column="72"> <block pos:line="193" pos:column="73">{
						<if pos:line="194" pos:column="49">if <condition pos:line="194" pos:column="52">(<expr><call><name pos:line="194" pos:column="53">ISSPACE<pos:position pos:line="194" pos:column="60"/></name><argument_list pos:line="194" pos:column="60">(<argument><expr><name pos:line="194" pos:column="61">t_ch<pos:position pos:line="194" pos:column="65"/></name></expr></argument>)<pos:position pos:line="194" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="194" pos:column="67"/></condition><then pos:line="194" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="195" pos:column="57">matched<pos:position pos:line="195" pos:column="64"/></name> <operator pos:line="195" pos:column="65">=<pos:position pos:line="195" pos:column="66"/></operator> <literal type="number" pos:line="195" pos:column="67">1<pos:position pos:line="195" pos:column="68"/></literal></expr>;<pos:position pos:line="195" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="196" pos:column="42"/></block></then></if></elseif> <elseif pos:line="196" pos:column="43">else <if pos:line="196" pos:column="48">if <condition pos:line="196" pos:column="51">(<expr><call><name pos:line="196" pos:column="52">CC_EQ<pos:position pos:line="196" pos:column="57"/></name><argument_list pos:line="196" pos:column="57">(<argument><expr><name pos:line="196" pos:column="58">s<pos:position pos:line="196" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="196" pos:column="60">i<pos:position pos:line="196" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="63">"upper"<pos:position pos:line="196" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="196" pos:column="72"/></condition><then pos:line="196" pos:column="72"> <block pos:line="196" pos:column="73">{
						<if pos:line="197" pos:column="49">if <condition pos:line="197" pos:column="52">(<expr><call><name pos:line="197" pos:column="53">ISUPPER<pos:position pos:line="197" pos:column="60"/></name><argument_list pos:line="197" pos:column="60">(<argument><expr><name pos:line="197" pos:column="61">t_ch<pos:position pos:line="197" pos:column="65"/></name></expr></argument>)<pos:position pos:line="197" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="67"/></condition><then pos:line="197" pos:column="67">
							<block type="pseudo"><expr_stmt><expr><name pos:line="198" pos:column="57">matched<pos:position pos:line="198" pos:column="64"/></name> <operator pos:line="198" pos:column="65">=<pos:position pos:line="198" pos:column="66"/></operator> <literal type="number" pos:line="198" pos:column="67">1<pos:position pos:line="198" pos:column="68"/></literal></expr>;<pos:position pos:line="198" pos:column="69"/></expr_stmt></block></then>
						<elseif pos:line="199" pos:column="49">else <if pos:line="199" pos:column="54">if <condition pos:line="199" pos:column="57">(<expr><operator pos:line="199" pos:column="58">(<pos:position pos:line="199" pos:column="59"/></operator><name pos:line="199" pos:column="59">flags<pos:position pos:line="199" pos:column="64"/></name> <operator pos:line="199" pos:column="65">&amp;<pos:position pos:line="199" pos:column="70"/></operator> <name pos:line="199" pos:column="67">WM_CASEFOLD<pos:position pos:line="199" pos:column="78"/></name><operator pos:line="199" pos:column="78">)<pos:position pos:line="199" pos:column="79"/></operator> <operator pos:line="199" pos:column="80">&amp;&amp;<pos:position pos:line="199" pos:column="90"/></operator> <call><name pos:line="199" pos:column="83">ISLOWER<pos:position pos:line="199" pos:column="90"/></name><argument_list pos:line="199" pos:column="90">(<argument><expr><name pos:line="199" pos:column="91">t_ch<pos:position pos:line="199" pos:column="95"/></name></expr></argument>)<pos:position pos:line="199" pos:column="96"/></argument_list></call></expr>)<pos:position pos:line="199" pos:column="97"/></condition><then pos:line="199" pos:column="97">
							<block type="pseudo"><expr_stmt><expr><name pos:line="200" pos:column="57">matched<pos:position pos:line="200" pos:column="64"/></name> <operator pos:line="200" pos:column="65">=<pos:position pos:line="200" pos:column="66"/></operator> <literal type="number" pos:line="200" pos:column="67">1<pos:position pos:line="200" pos:column="68"/></literal></expr>;<pos:position pos:line="200" pos:column="69"/></expr_stmt></block></then></if></elseif></if>
					}<pos:position pos:line="201" pos:column="42"/></block></then></if></elseif> <elseif pos:line="201" pos:column="43">else <if pos:line="201" pos:column="48">if <condition pos:line="201" pos:column="51">(<expr><call><name pos:line="201" pos:column="52">CC_EQ<pos:position pos:line="201" pos:column="57"/></name><argument_list pos:line="201" pos:column="57">(<argument><expr><name pos:line="201" pos:column="58">s<pos:position pos:line="201" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="201" pos:column="60">i<pos:position pos:line="201" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="63">"xdigit"<pos:position pos:line="201" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="73"/></condition><then pos:line="201" pos:column="73"> <block pos:line="201" pos:column="74">{
						<if pos:line="202" pos:column="49">if <condition pos:line="202" pos:column="52">(<expr><call><name pos:line="202" pos:column="53">ISXDIGIT<pos:position pos:line="202" pos:column="61"/></name><argument_list pos:line="202" pos:column="61">(<argument><expr><name pos:line="202" pos:column="62">t_ch<pos:position pos:line="202" pos:column="66"/></name></expr></argument>)<pos:position pos:line="202" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="202" pos:column="68"/></condition><then pos:line="202" pos:column="68">
							<block type="pseudo"><expr_stmt><expr><name pos:line="203" pos:column="57">matched<pos:position pos:line="203" pos:column="64"/></name> <operator pos:line="203" pos:column="65">=<pos:position pos:line="203" pos:column="66"/></operator> <literal type="number" pos:line="203" pos:column="67">1<pos:position pos:line="203" pos:column="68"/></literal></expr>;<pos:position pos:line="203" pos:column="69"/></expr_stmt></block></then></if>
					}<pos:position pos:line="204" pos:column="42"/></block></then></if></elseif> <else pos:line="204" pos:column="43">else <comment type="block" pos:line="204" pos:column="48">/* malformed [:class:] string */</comment>
						<block type="pseudo"><return pos:line="205" pos:column="49">return <expr><name pos:line="205" pos:column="56">WM_ABORT_ALL<pos:position pos:line="205" pos:column="68"/></name></expr>;<pos:position pos:line="205" pos:column="69"/></return></block></else></if>
					<expr_stmt><expr><name pos:line="206" pos:column="41">p_ch<pos:position pos:line="206" pos:column="45"/></name> <operator pos:line="206" pos:column="46">=<pos:position pos:line="206" pos:column="47"/></operator> <literal type="number" pos:line="206" pos:column="48">0<pos:position pos:line="206" pos:column="49"/></literal></expr>;<pos:position pos:line="206" pos:column="50"/></expr_stmt> <comment type="block" pos:line="206" pos:column="51">/* This makes "prev_ch" get set to 0. */</comment>
				}<pos:position pos:line="207" pos:column="34"/></block></then></if></elseif> <elseif pos:line="207" pos:column="35">else <if pos:line="207" pos:column="40">if <condition pos:line="207" pos:column="43">(<expr><name pos:line="207" pos:column="44">t_ch<pos:position pos:line="207" pos:column="48"/></name> <operator pos:line="207" pos:column="49">==<pos:position pos:line="207" pos:column="51"/></operator> <name pos:line="207" pos:column="52">p_ch<pos:position pos:line="207" pos:column="56"/></name></expr>)<pos:position pos:line="207" pos:column="57"/></condition><then pos:line="207" pos:column="57">
					<block type="pseudo"><expr_stmt><expr><name pos:line="208" pos:column="41">matched<pos:position pos:line="208" pos:column="48"/></name> <operator pos:line="208" pos:column="49">=<pos:position pos:line="208" pos:column="50"/></operator> <literal type="number" pos:line="208" pos:column="51">1<pos:position pos:line="208" pos:column="52"/></literal></expr>;<pos:position pos:line="208" pos:column="53"/></expr_stmt></block></then></if></elseif></if>
			}<pos:position pos:line="209" pos:column="26"/></block> while <condition pos:line="209" pos:column="33">(<expr><name pos:line="209" pos:column="34">prev_ch<pos:position pos:line="209" pos:column="41"/></name> <operator pos:line="209" pos:column="42">=<pos:position pos:line="209" pos:column="43"/></operator> <name pos:line="209" pos:column="44">p_ch<pos:position pos:line="209" pos:column="48"/></name></expr><operator pos:line="209" pos:column="48">,<pos:position pos:line="209" pos:column="49"/></operator> <expr><operator pos:line="209" pos:column="50">(<pos:position pos:line="209" pos:column="51"/></operator><name pos:line="209" pos:column="51">p_ch<pos:position pos:line="209" pos:column="55"/></name> <operator pos:line="209" pos:column="56">=<pos:position pos:line="209" pos:column="57"/></operator> <operator pos:line="209" pos:column="58">*<pos:position pos:line="209" pos:column="59"/></operator><operator pos:line="209" pos:column="59">++<pos:position pos:line="209" pos:column="61"/></operator><name pos:line="209" pos:column="61">p<pos:position pos:line="209" pos:column="62"/></name><operator pos:line="209" pos:column="62">)<pos:position pos:line="209" pos:column="63"/></operator> <operator pos:line="209" pos:column="64">!=<pos:position pos:line="209" pos:column="66"/></operator> <literal type="char" pos:line="209" pos:column="67">']'<pos:position pos:line="209" pos:column="70"/></literal></expr>)<pos:position pos:line="209" pos:column="71"/></condition>;<pos:position pos:line="209" pos:column="72"/></do>
			<if pos:line="210" pos:column="25">if <condition pos:line="210" pos:column="28">(<expr><name pos:line="210" pos:column="29">matched<pos:position pos:line="210" pos:column="36"/></name> <operator pos:line="210" pos:column="37">==<pos:position pos:line="210" pos:column="39"/></operator> <name pos:line="210" pos:column="40">negated<pos:position pos:line="210" pos:column="47"/></name> <operator pos:line="210" pos:column="48">||<pos:position pos:line="210" pos:column="50"/></operator>
			    <operator pos:line="211" pos:column="29">(<pos:position pos:line="211" pos:column="30"/></operator><operator pos:line="211" pos:column="30">(<pos:position pos:line="211" pos:column="31"/></operator><name pos:line="211" pos:column="31">flags<pos:position pos:line="211" pos:column="36"/></name> <operator pos:line="211" pos:column="37">&amp;<pos:position pos:line="211" pos:column="42"/></operator> <name pos:line="211" pos:column="39">WM_PATHNAME<pos:position pos:line="211" pos:column="50"/></name><operator pos:line="211" pos:column="50">)<pos:position pos:line="211" pos:column="51"/></operator> <operator pos:line="211" pos:column="52">&amp;&amp;<pos:position pos:line="211" pos:column="62"/></operator> <name pos:line="211" pos:column="55">t_ch<pos:position pos:line="211" pos:column="59"/></name> <operator pos:line="211" pos:column="60">==<pos:position pos:line="211" pos:column="62"/></operator> <literal type="char" pos:line="211" pos:column="63">'/'<pos:position pos:line="211" pos:column="66"/></literal><operator pos:line="211" pos:column="66">)<pos:position pos:line="211" pos:column="67"/></operator></expr>)<pos:position pos:line="211" pos:column="68"/></condition><then pos:line="211" pos:column="68">
				<block type="pseudo"><return pos:line="212" pos:column="33">return <expr><name pos:line="212" pos:column="40">WM_NOMATCH<pos:position pos:line="212" pos:column="50"/></name></expr>;<pos:position pos:line="212" pos:column="51"/></return></block></then></if>
			<continue pos:line="213" pos:column="25">continue;<pos:position pos:line="213" pos:column="34"/></continue>
		}<pos:position pos:line="214" pos:column="18"/></block></switch>
	}<pos:position pos:line="215" pos:column="10"/></block></for>

	<return pos:line="217" pos:column="9">return <expr><ternary><condition><expr><operator pos:line="217" pos:column="16">*<pos:position pos:line="217" pos:column="17"/></operator><name pos:line="217" pos:column="17">text<pos:position pos:line="217" pos:column="21"/></name></expr> ?<pos:position pos:line="217" pos:column="23"/></condition><then pos:line="217" pos:column="23"> <expr><name pos:line="217" pos:column="24">WM_NOMATCH<pos:position pos:line="217" pos:column="34"/></name></expr> <pos:position pos:line="217" pos:column="35"/></then><else pos:line="217" pos:column="35">: <expr><name pos:line="217" pos:column="37">WM_MATCH<pos:position pos:line="217" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="217" pos:column="46"/></return>
}<pos:position pos:line="218" pos:column="2"/></block></function></unit>

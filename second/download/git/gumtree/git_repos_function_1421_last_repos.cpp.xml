<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1421_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">build_fake_ancestor<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">apply_state<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">state<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="59">struct<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">patch<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">list<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">patch<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">patch<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">index_state<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">result<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><block pos:line="4" pos:column="37">{ <expr><name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr> }<pos:position pos:line="4" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name><name pos:line="5" pos:column="16">struct<pos:position pos:line="5" pos:column="22"/></name> <name pos:line="5" pos:column="23">lock_file<pos:position pos:line="5" pos:column="32"/></name></name></type> <name pos:line="5" pos:column="33">lock<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">res<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* Once we start supporting the reverse patch, it may be
	 * worth showing the new sha1 prefix, but until then...
	 */</comment>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">patch<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">list<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></init> <condition><expr><name pos:line="11" pos:column="28">patch<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></condition> <incr><expr><name pos:line="11" pos:column="35">patch<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">=<pos:position pos:line="11" pos:column="42"/></operator> <name><name pos:line="11" pos:column="43">patch<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">next<pos:position pos:line="11" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="55"/></control> <block pos:line="11" pos:column="56">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object_id<pos:position pos:line="12" pos:column="33"/></name></name></type> <name pos:line="12" pos:column="34">oid<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="13" pos:column="17">struct<pos:position pos:line="13" pos:column="23"/></name> <name pos:line="13" pos:column="24">cache_entry<pos:position pos:line="13" pos:column="35"/></name></name> <modifier pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></modifier></type><name pos:line="13" pos:column="37">ce<pos:position pos:line="13" pos:column="39"/></name></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="14" pos:column="17">const<pos:position pos:line="14" pos:column="22"/></specifier> <name pos:line="14" pos:column="23">char<pos:position pos:line="14" pos:column="27"/></name> <modifier pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></modifier></type><name pos:line="14" pos:column="29">name<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>

		<expr_stmt><expr><name pos:line="16" pos:column="17">name<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <ternary><condition><expr><name><name pos:line="16" pos:column="24">patch<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">old_name<pos:position pos:line="16" pos:column="39"/></name></name></expr> ?<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41"> <expr><name><name pos:line="16" pos:column="42">patch<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">old_name<pos:position pos:line="16" pos:column="57"/></name></name></expr> <pos:position pos:line="16" pos:column="58"/></then><else pos:line="16" pos:column="58">: <expr><name><name pos:line="16" pos:column="60">patch<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">-&gt;<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="67">new_name<pos:position pos:line="16" pos:column="75"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <name><name pos:line="17" pos:column="25">patch<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">is_new<pos:position pos:line="17" pos:column="38"/></name></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">S_ISGITLINK<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name><name pos:line="20" pos:column="33">patch<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">old_mode<pos:position pos:line="20" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50"> <block pos:line="20" pos:column="51">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><operator pos:line="21" pos:column="29">!<pos:position pos:line="21" pos:column="30"/></operator><call><name pos:line="21" pos:column="30">preimage_oid_in_gitlink_patch<pos:position pos:line="21" pos:column="59"/></name><argument_list pos:line="21" pos:column="59">(<argument><expr><name pos:line="21" pos:column="60">patch<pos:position pos:line="21" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="67">&amp;<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="68">oid<pos:position pos:line="21" pos:column="71"/></name></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="73"/></condition><then pos:line="21" pos:column="73">
				<block type="pseudo"><empty_stmt pos:line="22" pos:column="33">;<pos:position pos:line="22" pos:column="34"/></empty_stmt></block></then> <comment type="block" pos:line="22" pos:column="35">/* ok, the textual part looks sane */</comment>
			<else pos:line="23" pos:column="25">else
				<block type="pseudo"><return pos:line="24" pos:column="33">return <expr><call><name pos:line="24" pos:column="40">error<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><call><name pos:line="24" pos:column="46">_<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><literal type="string" pos:line="24" pos:column="48">"sha1 information is lacking or "<pos:position pos:line="24" pos:column="81"/></literal>
					       <literal type="string" pos:line="25" pos:column="48">"useless for submodule %s"<pos:position pos:line="25" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="77">name<pos:position pos:line="25" pos:column="81"/></name></expr></argument>)<pos:position pos:line="25" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="83"/></return></block></else></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then> <elseif pos:line="26" pos:column="19">else <if pos:line="26" pos:column="24">if <condition pos:line="26" pos:column="27">(<expr><operator pos:line="26" pos:column="28">!<pos:position pos:line="26" pos:column="29"/></operator><call><name pos:line="26" pos:column="29">get_sha1_blob<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name><name pos:line="26" pos:column="43">patch<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">old_sha1_prefix<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="67">oid<pos:position pos:line="26" pos:column="70"/></name><operator pos:line="26" pos:column="70">.<pos:position pos:line="26" pos:column="71"/></operator><name pos:line="26" pos:column="71">hash<pos:position pos:line="26" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="77"/></condition><then pos:line="26" pos:column="77"> <block pos:line="26" pos:column="78">{
			<empty_stmt pos:line="27" pos:column="25">;<pos:position pos:line="27" pos:column="26"/></empty_stmt> <comment type="block" pos:line="27" pos:column="27">/* ok */</comment>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if></elseif> <elseif pos:line="28" pos:column="19">else <if pos:line="28" pos:column="24">if <condition pos:line="28" pos:column="27">(<expr><operator pos:line="28" pos:column="28">!<pos:position pos:line="28" pos:column="29"/></operator><name><name pos:line="28" pos:column="29">patch<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">lines_added<pos:position pos:line="28" pos:column="47"/></name></name> <operator pos:line="28" pos:column="48">&amp;&amp;<pos:position pos:line="28" pos:column="58"/></operator> <operator pos:line="28" pos:column="51">!<pos:position pos:line="28" pos:column="52"/></operator><name><name pos:line="28" pos:column="52">patch<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">-&gt;<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="59">lines_deleted<pos:position pos:line="28" pos:column="72"/></name></name></expr>)<pos:position pos:line="28" pos:column="73"/></condition><then pos:line="28" pos:column="73"> <block pos:line="28" pos:column="74">{
			<comment type="block" pos:line="29" pos:column="25">/* mode-only change: update the current */</comment>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><call><name pos:line="30" pos:column="29">get_current_oid<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">state<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="52">patch<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">-&gt;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="59">old_name<pos:position pos:line="30" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="69">&amp;<pos:position pos:line="30" pos:column="74"/></operator><name pos:line="30" pos:column="70">oid<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="75"/></condition><then pos:line="30" pos:column="75">
				<block type="pseudo"><return pos:line="31" pos:column="33">return <expr><call><name pos:line="31" pos:column="40">error<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">(<argument><expr><call><name pos:line="31" pos:column="46">_<pos:position pos:line="31" pos:column="47"/></name><argument_list pos:line="31" pos:column="47">(<argument><expr><literal type="string" pos:line="31" pos:column="48">"mode change for %s, which is not "<pos:position pos:line="31" pos:column="83"/></literal>
					       <literal type="string" pos:line="32" pos:column="48">"in current HEAD"<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="68">name<pos:position pos:line="32" pos:column="72"/></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></return></block></then></if>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if></elseif> <else pos:line="33" pos:column="19">else
			<block type="pseudo"><return pos:line="34" pos:column="25">return <expr><call><name pos:line="34" pos:column="32">error<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><call><name pos:line="34" pos:column="38">_<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><literal type="string" pos:line="34" pos:column="40">"sha1 information is lacking or useless "<pos:position pos:line="34" pos:column="81"/></literal>
				       <literal type="string" pos:line="35" pos:column="40">"(%s)."<pos:position pos:line="35" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">name<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></return></block></else></if>

		<expr_stmt><expr><name pos:line="37" pos:column="17">ce<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">make_cache_entry<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name><name pos:line="37" pos:column="39">patch<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">old_mode<pos:position pos:line="37" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="56">oid<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">.<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="60">hash<pos:position pos:line="37" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="66">name<pos:position pos:line="37" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="72">0<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="75">0<pos:position pos:line="37" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="78"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">ce<pos:position pos:line="38" pos:column="24"/></name></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><call><name pos:line="39" pos:column="32">error<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><call><name pos:line="39" pos:column="38">_<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><literal type="string" pos:line="39" pos:column="40">"make_cache_entry failed for path '%s'"<pos:position pos:line="39" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="80"/></argument_list></call></expr></argument>,
				     <argument><expr><name pos:line="40" pos:column="38">name<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></return></block></then></if>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">add_index_entry<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="38">result<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">ce<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">ADD_CACHE_OK_TO_ADD<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="71"/></condition><then pos:line="41" pos:column="71"> <block pos:line="41" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">free<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">ce<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
			<return pos:line="43" pos:column="25">return <expr><call><name pos:line="43" pos:column="32">error<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><call><name pos:line="43" pos:column="38">_<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><literal type="string" pos:line="43" pos:column="40">"could not add %s to temporary index"<pos:position pos:line="43" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="78"/></argument_list></call></expr></argument>,
				     <argument><expr><name pos:line="44" pos:column="38">name<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></return>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>
	}<pos:position pos:line="46" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">hold_lock_file_for_update<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><operator pos:line="48" pos:column="35">&amp;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="36">lock<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="42">state<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">-&gt;<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="49">fake_ancestor<pos:position pos:line="48" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="64">LOCK_DIE_ON_ERROR<pos:position pos:line="48" pos:column="81"/></name></expr></argument>)<pos:position pos:line="48" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">res<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <call><name pos:line="49" pos:column="15">write_locked_index<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><operator pos:line="49" pos:column="34">&amp;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="35">result<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="43">&amp;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="44">lock<pos:position pos:line="49" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">COMMIT_LOCK<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">discard_index<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><operator pos:line="50" pos:column="23">&amp;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="24">result<pos:position pos:line="50" pos:column="30"/></name></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">res<pos:position pos:line="52" pos:column="16"/></name></expr>)<pos:position pos:line="52" pos:column="17"/></condition><then pos:line="52" pos:column="17">
		<block type="pseudo"><return pos:line="53" pos:column="17">return <expr><call><name pos:line="53" pos:column="24">error<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><call><name pos:line="53" pos:column="30">_<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><literal type="string" pos:line="53" pos:column="32">"could not write temporary index to %s"<pos:position pos:line="53" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call></expr></argument>,
			     <argument><expr><name><name pos:line="54" pos:column="30">state<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">-&gt;<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="37">fake_ancestor<pos:position pos:line="54" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></return></block></then></if>

	<return pos:line="56" pos:column="9">return <expr><literal type="number" pos:line="56" pos:column="16">0<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

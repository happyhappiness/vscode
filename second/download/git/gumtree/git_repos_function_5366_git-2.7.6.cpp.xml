<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5366_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">chmod_path<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">flip<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">path<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">pos<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">cache_entry<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">ce<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">mode<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">pos<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">cache_name_pos<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">path<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="36">strlen<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">path<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">pos<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&lt;<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
		<block type="pseudo"><goto pos:line="9" pos:column="17">goto <name pos:line="9" pos:column="22">fail<pos:position pos:line="9" pos:column="26"/></name>;<pos:position pos:line="9" pos:column="27"/></goto></block></then></if>
	<expr_stmt><expr><name pos:line="10" pos:column="9">ce<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">active_cache<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><name pos:line="10" pos:column="27">pos<pos:position pos:line="10" pos:column="30"/></name></expr>]<pos:position pos:line="10" pos:column="31"/></index></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">mode<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">ce<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">ce_mode<pos:position pos:line="11" pos:column="27"/></name></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">S_ISREG<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">mode<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
		<block type="pseudo"><goto pos:line="13" pos:column="17">goto <name pos:line="13" pos:column="22">fail<pos:position pos:line="13" pos:column="26"/></name>;<pos:position pos:line="13" pos:column="27"/></goto></block></then></if>
	<switch pos:line="14" pos:column="9">switch <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">flip<pos:position pos:line="14" pos:column="21"/></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition> <block pos:line="14" pos:column="23">{
	<case pos:line="15" pos:column="9">case <expr><literal type="char" pos:line="15" pos:column="14">'+'<pos:position pos:line="15" pos:column="17"/></literal></expr>:<pos:position pos:line="15" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">ce<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">ce_mode<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">|=<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="32">0111<pos:position pos:line="16" pos:column="36"/></literal></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt> <break pos:line="16" pos:column="38">break;<pos:position pos:line="16" pos:column="44"/></break>
	<case pos:line="17" pos:column="9">case <expr><literal type="char" pos:line="17" pos:column="14">'-'<pos:position pos:line="17" pos:column="17"/></literal></expr>:<pos:position pos:line="17" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">ce<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">ce_mode<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">&amp;=<pos:position pos:line="18" pos:column="35"/></operator> <operator pos:line="18" pos:column="32">~<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">0111<pos:position pos:line="18" pos:column="37"/></literal></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt> <break pos:line="18" pos:column="39">break;<pos:position pos:line="18" pos:column="45"/></break>
	<default pos:line="19" pos:column="9">default:<pos:position pos:line="19" pos:column="17"/></default>
		<goto pos:line="20" pos:column="17">goto <name pos:line="20" pos:column="22">fail<pos:position pos:line="20" pos:column="26"/></name>;<pos:position pos:line="20" pos:column="27"/></goto>
	}<pos:position pos:line="21" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">cache_tree_invalidate_path<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><operator pos:line="22" pos:column="36">&amp;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="37">the_index<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">path<pos:position pos:line="22" pos:column="52"/></name></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">ce<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">ce_flags<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">|=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">CE_UPDATE_IN_BASE<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">active_cache_changed<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">|=<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">CE_ENTRY_CHANGED<pos:position pos:line="24" pos:column="49"/></name></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">report<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="string" pos:line="25" pos:column="16">"chmod %cx '%s'"<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">flip<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">path<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
	<return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
 <label><name pos:line="27" pos:column="2">fail<pos:position pos:line="27" pos:column="6"/></name>:<pos:position pos:line="27" pos:column="7"/></label>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">die<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><literal type="string" pos:line="28" pos:column="13">"git update-index: cannot chmod %cx '%s'"<pos:position pos:line="28" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">flip<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">path<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

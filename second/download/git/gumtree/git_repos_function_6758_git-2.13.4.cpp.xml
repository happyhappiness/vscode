<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6758_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">FORCEINLINE<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">win32_acquire_lock<pos:position pos:line="1" pos:column="42"/></name> <parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">MLOCK_T<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">sl<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">spins<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><literal type="number" pos:line="2" pos:column="15">0<pos:position pos:line="2" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init pos:line="3" pos:column="8">;<pos:position pos:line="3" pos:column="9"/></init><condition pos:line="3" pos:column="9">;<pos:position pos:line="3" pos:column="10"/></condition><incr/>)<pos:position pos:line="3" pos:column="11"/></control> <block pos:line="3" pos:column="12">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">sl<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">l<pos:position pos:line="4" pos:column="14"/></name></name> <operator pos:line="4" pos:column="15">!=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
      <if pos:line="5" pos:column="7">if <condition pos:line="5" pos:column="10">(<expr><name><name pos:line="5" pos:column="11">sl<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">threadid<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">==<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">CURRENT_THREAD<pos:position pos:line="5" pos:column="41"/></name></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42"> <block pos:line="5" pos:column="43">{
	<expr_stmt><expr><operator pos:line="6" pos:column="9">++<pos:position pos:line="6" pos:column="11"/></operator><name><name pos:line="6" pos:column="11">sl<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name></name></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
	<return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
      }<pos:position pos:line="8" pos:column="8"/></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></then>
    <else pos:line="10" pos:column="5">else <block pos:line="10" pos:column="10">{
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><operator pos:line="11" pos:column="11">!<pos:position pos:line="11" pos:column="12"/></operator><call><name pos:line="11" pos:column="12">interlockedexchange<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><name><name pos:line="11" pos:column="33">sl<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">l<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block pos:line="11" pos:column="44">{
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">assert<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><operator pos:line="12" pos:column="16">!<pos:position pos:line="12" pos:column="17"/></operator><name><name pos:line="12" pos:column="17">sl<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">threadid<pos:position pos:line="12" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">sl<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">c<pos:position pos:line="13" pos:column="22"/></name></name><operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">CURRENT_THREAD<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">sl<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">threadid<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">CURRENT_THREAD<pos:position pos:line="14" pos:column="38"/></name></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">sl<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">c<pos:position pos:line="15" pos:column="14"/></name></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">1<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><operator pos:line="19" pos:column="10">++<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">spins<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">&amp;<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="20">SPINS_PER_YIELD<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator> <operator pos:line="19" pos:column="37">==<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="40">0<pos:position pos:line="19" pos:column="41"/></literal></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="7">SleepEx<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">FALSE<pos:position pos:line="20" pos:column="23"/></name></expr></argument>)<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt></block></then></if>
  }<pos:position pos:line="21" pos:column="4"/></block></for>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_804_git-2.1.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_pending_object_with_mode<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">rev_info<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">revs<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
					 <parameter><decl><type><name><name pos:line="2" pos:column="42">struct<pos:position pos:line="2" pos:column="48"/></name> <name pos:line="2" pos:column="49">object<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">obj<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
					 <parameter><decl><type><specifier pos:line="3" pos:column="42">const<pos:position pos:line="3" pos:column="47"/></specifier> <name pos:line="3" pos:column="48">char<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">name<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="60">unsigned<pos:position pos:line="3" pos:column="68"/></name></type> <name pos:line="3" pos:column="69">mode<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">obj<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">revs<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">no_walk<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">&amp;&amp;<pos:position pos:line="7" pos:column="37"/></operator> <operator pos:line="7" pos:column="30">(<pos:position pos:line="7" pos:column="31"/></operator><name><name pos:line="7" pos:column="31">obj<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">flags<pos:position pos:line="7" pos:column="41"/></name></name> <operator pos:line="7" pos:column="42">&amp;<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="44">UNINTERESTING<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator></expr>)<pos:position pos:line="7" pos:column="59"/></condition><then pos:line="7" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="17">revs<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">no_walk<pos:position pos:line="8" pos:column="30"/></name></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">revs<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">reflog_info<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">&amp;&amp;<pos:position pos:line="9" pos:column="41"/></operator> <name><name pos:line="9" pos:column="34">obj<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">type<pos:position pos:line="9" pos:column="43"/></name></name> <operator pos:line="9" pos:column="44">==<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="47">OBJ_COMMIT<pos:position pos:line="9" pos:column="57"/></name></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58"> <block pos:line="9" pos:column="59">{
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">strbuf<pos:position pos:line="10" pos:column="30"/></name></name></type> <name pos:line="10" pos:column="31">buf<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><name pos:line="10" pos:column="37">STRBUF_INIT<pos:position pos:line="10" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">len<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">interpret_branch_name<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">name<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="55">0<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="58">&amp;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="59">buf<pos:position pos:line="11" pos:column="62"/></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="64"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">st<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="25">len<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&amp;&amp;<pos:position pos:line="14" pos:column="39"/></operator> <name><name pos:line="14" pos:column="32">name<pos:position pos:line="14" pos:column="36"/></name><index pos:line="14" pos:column="36">[<expr><name pos:line="14" pos:column="37">len<pos:position pos:line="14" pos:column="40"/></name></expr>]<pos:position pos:line="14" pos:column="41"/></index></name> <operator pos:line="14" pos:column="42">&amp;&amp;<pos:position pos:line="14" pos:column="52"/></operator> <name><name pos:line="14" pos:column="45">buf<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">.<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">len<pos:position pos:line="14" pos:column="52"/></name></name></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">strbuf_addstr<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">buf<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">name<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">+<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">len<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">st<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">add_reflog_for_walk<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name><name pos:line="16" pos:column="42">revs<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">reflog_info<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>,
					 <argument><expr><operator pos:line="17" pos:column="42">(<pos:position pos:line="17" pos:column="43"/></operator>struct <name pos:line="17" pos:column="50">commit<pos:position pos:line="17" pos:column="56"/></name> <operator pos:line="17" pos:column="57">*<pos:position pos:line="17" pos:column="58"/></operator><operator pos:line="17" pos:column="58">)<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">obj<pos:position pos:line="17" pos:column="62"/></name></expr></argument>,
					 <argument><expr><ternary><condition><expr><name><name pos:line="18" pos:column="42">buf<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">.<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">buf<pos:position pos:line="18" pos:column="49"/></name><index pos:line="18" pos:column="49">[<expr><literal type="number" pos:line="18" pos:column="50">0<pos:position pos:line="18" pos:column="51"/></literal></expr>]<pos:position pos:line="18" pos:column="52"/></index></name></expr> ?<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <expr><name><name pos:line="18" pos:column="55">buf<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">.<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">buf<pos:position pos:line="18" pos:column="62"/></name></name></expr></then><else pos:line="18" pos:column="62">: <expr><name pos:line="18" pos:column="64">name<pos:position pos:line="18" pos:column="68"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">strbuf_release<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="33">buf<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">st<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
			<block type="pseudo"><return pos:line="21" pos:column="25">return;<pos:position pos:line="21" pos:column="32"/></return></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">add_object_array_with_mode<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">obj<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">name<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="47">&amp;<pos:position pos:line="23" pos:column="52"/></operator><name><name pos:line="23" pos:column="48">revs<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">pending<pos:position pos:line="23" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">mode<pos:position pos:line="23" pos:column="67"/></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

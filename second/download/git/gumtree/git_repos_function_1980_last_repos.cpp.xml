<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1980_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_mapping<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">string_list<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">map<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">new_name<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">new_email<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">old_name<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">old_email<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">mailmap_entry<pos:position pos:line="5" pos:column="29"/></name></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">me<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">string_list_item<pos:position pos:line="6" pos:column="32"/></name></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">item<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">old_email<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">old_email<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">new_email<pos:position pos:line="9" pos:column="38"/></name></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">new_email<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">NULL<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">item<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">string_list_insert<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">map<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">old_email<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">item<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">util<pos:position pos:line="14" pos:column="23"/></name></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24"> <block pos:line="14" pos:column="25">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">me<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator>struct <name pos:line="15" pos:column="30">mailmap_entry<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">*<pos:position pos:line="15" pos:column="45"/></operator><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator><name><name pos:line="15" pos:column="46">item<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">util<pos:position pos:line="15" pos:column="56"/></name></name></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">me<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">xcalloc<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="number" pos:line="17" pos:column="30">1<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="33">sizeof<argument_list pos:line="17" pos:column="39">(<argument><expr pos:line="17" pos:column="40">struct <name pos:line="17" pos:column="47">mailmap_entry<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">me<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">namemap<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">strdup_strings<pos:position pos:line="18" pos:column="43"/></name></name> <operator pos:line="18" pos:column="44">=<pos:position pos:line="18" pos:column="45"/></operator> <literal type="number" pos:line="18" pos:column="46">1<pos:position pos:line="18" pos:column="47"/></literal></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">me<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">namemap<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">cmp<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <name pos:line="19" pos:column="35">namemap_cmp<pos:position pos:line="19" pos:column="46"/></name></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">item<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">util<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">me<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></else></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">old_name<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">NULL<pos:position pos:line="23" pos:column="29"/></name></expr>)<pos:position pos:line="23" pos:column="30"/></condition><then pos:line="23" pos:column="30"> <block pos:line="23" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">debug_mm<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><literal type="string" pos:line="24" pos:column="26">"mailmap: adding (simple) entry for '%s'\n"<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="71">old_email<pos:position pos:line="24" pos:column="80"/></name></expr></argument>)<pos:position pos:line="24" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="82"/></expr_stmt>

		<comment type="block" pos:line="26" pos:column="17">/* Replace current name and new email for simple entry */</comment>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">new_name<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <block pos:line="27" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">free<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name><name pos:line="28" pos:column="30">me<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">name<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">me<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">name<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <call><name pos:line="29" pos:column="36">xstrdup<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">new_name<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">new_email<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31"> <block pos:line="31" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">free<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name><name pos:line="32" pos:column="30">me<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">email<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">me<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">email<pos:position pos:line="33" pos:column="34"/></name></name> <operator pos:line="33" pos:column="35">=<pos:position pos:line="33" pos:column="36"/></operator> <call><name pos:line="33" pos:column="37">xstrdup<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name pos:line="33" pos:column="45">new_email<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
		<decl_stmt><decl><type><name><name pos:line="36" pos:column="17">struct<pos:position pos:line="36" pos:column="23"/></name> <name pos:line="36" pos:column="24">mailmap_info<pos:position pos:line="36" pos:column="36"/></name></name> <modifier pos:line="36" pos:column="37">*<pos:position pos:line="36" pos:column="38"/></modifier></type><name pos:line="36" pos:column="38">mi<pos:position pos:line="36" pos:column="40"/></name> <init pos:line="36" pos:column="41">= <expr><call><name pos:line="36" pos:column="43">xcalloc<pos:position pos:line="36" pos:column="50"/></name><argument_list pos:line="36" pos:column="50">(<argument><expr><literal type="number" pos:line="36" pos:column="51">1<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="54">sizeof<argument_list pos:line="36" pos:column="60">(<argument><expr pos:line="36" pos:column="61">struct <name pos:line="36" pos:column="68">mailmap_info<pos:position pos:line="36" pos:column="80"/></name></expr></argument>)<pos:position pos:line="36" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="83"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">debug_mm<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><literal type="string" pos:line="37" pos:column="26">"mailmap: adding (complex) entry for '%s'\n"<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="72">old_email<pos:position pos:line="37" pos:column="81"/></name></expr></argument>)<pos:position pos:line="37" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">mi<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">name<pos:position pos:line="38" pos:column="25"/></name></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <call><name pos:line="38" pos:column="28">xstrdup_or_null<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">new_name<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">mi<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">email<pos:position pos:line="39" pos:column="26"/></name></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <call><name pos:line="39" pos:column="29">xstrdup_or_null<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">new_email<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">string_list_insert<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><operator pos:line="40" pos:column="36">&amp;<pos:position pos:line="40" pos:column="41"/></operator><name><name pos:line="40" pos:column="37">me<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">namemap<pos:position pos:line="40" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="50">old_name<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call><operator pos:line="40" pos:column="59">-&gt;<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="61">util<pos:position pos:line="40" pos:column="65"/></name> <operator pos:line="40" pos:column="66">=<pos:position pos:line="40" pos:column="67"/></operator> <name pos:line="40" pos:column="68">mi<pos:position pos:line="40" pos:column="70"/></name></expr>;<pos:position pos:line="40" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">debug_mm<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><literal type="string" pos:line="43" pos:column="18">"mailmap:  '%s' &lt;%s&gt; -&gt; '%s' &lt;%s&gt;\n"<pos:position pos:line="43" pos:column="69"/></literal></expr></argument>,
		 <argument><expr><call><name pos:line="44" pos:column="18">debug_str<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">old_name<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">old_email<pos:position pos:line="44" pos:column="48"/></name></expr></argument>,
		 <argument><expr><call><name pos:line="45" pos:column="18">debug_str<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">new_name<pos:position pos:line="45" pos:column="36"/></name></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="39">debug_str<pos:position pos:line="45" pos:column="48"/></name><argument_list pos:line="45" pos:column="48">(<argument><expr><name pos:line="45" pos:column="49">new_email<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="61"/></expr_stmt>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

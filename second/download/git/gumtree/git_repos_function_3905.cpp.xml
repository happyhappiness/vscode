<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3905.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_trace_line<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">trace_key<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">key<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">strbuf<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">buf<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">strbuf_complete_line<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><name pos:line="3" pos:column="30">buf<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">write_or_whine_pipe<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><call><name pos:line="5" pos:column="29">get_trace_fd<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">key<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="48">buf<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">-&gt;<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="53">buf<pos:position pos:line="5" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="58">buf<pos:position pos:line="5" pos:column="61"/></name><operator pos:line="5" pos:column="61">-&gt;<pos:position pos:line="5" pos:column="66"/></operator><name pos:line="5" pos:column="63">len<pos:position pos:line="5" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="68">err_msg<pos:position pos:line="5" pos:column="75"/></name></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_release<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">buf<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6004_git-2.3.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">expand_refs_wildcard<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">ls_remote_result<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">numrefs<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">refs<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">matchlen<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">replacelen<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">found_one<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">remote<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><operator pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">refs<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">++<pos:position pos:line="6" pos:column="37"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">numrefs<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">--<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">numrefs<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">fprintf<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">stderr<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="33">"Nothing specified for fetching with remote.%s.fetch\n"<pos:position pos:line="10" pos:column="88"/></literal></expr></argument>,
			<argument><expr><name pos:line="11" pos:column="25">remote<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">printf<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="string" pos:line="12" pos:column="24">"empty\n"<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></init> <condition><expr><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="25">numrefs<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></condition> <incr><expr><name pos:line="15" pos:column="34">i<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">++<pos:position pos:line="15" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="38"/></control> <block pos:line="15" pos:column="39">{
		<decl_stmt><decl><type><specifier pos:line="16" pos:column="17">const<pos:position pos:line="16" pos:column="22"/></specifier> <name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">ref<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><name><name pos:line="16" pos:column="35">refs<pos:position pos:line="16" pos:column="39"/></name><index pos:line="16" pos:column="39">[<expr><name pos:line="16" pos:column="40">i<pos:position pos:line="16" pos:column="41"/></name></expr>]<pos:position pos:line="16" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="17" pos:column="17">const<pos:position pos:line="17" pos:column="22"/></specifier> <name pos:line="17" pos:column="23">char<pos:position pos:line="17" pos:column="27"/></name> <modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier></type><name pos:line="17" pos:column="29">lref<pos:position pos:line="17" pos:column="33"/></name> <init pos:line="17" pos:column="34">= <expr><name pos:line="17" pos:column="36">ref<pos:position pos:line="17" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="18" pos:column="17">const<pos:position pos:line="18" pos:column="22"/></specifier> <name pos:line="18" pos:column="23">char<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">colon<pos:position pos:line="18" pos:column="34"/></name></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="19" pos:column="17">const<pos:position pos:line="19" pos:column="22"/></specifier> <name pos:line="19" pos:column="23">char<pos:position pos:line="19" pos:column="27"/></name> <modifier pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></modifier></type><name pos:line="19" pos:column="29">tail<pos:position pos:line="19" pos:column="33"/></name></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="20" pos:column="17">const<pos:position pos:line="20" pos:column="22"/></specifier> <name pos:line="20" pos:column="23">char<pos:position pos:line="20" pos:column="27"/></name> <modifier pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></modifier></type><name pos:line="20" pos:column="29">ls<pos:position pos:line="20" pos:column="31"/></name></decl>;<pos:position pos:line="20" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name pos:line="21" pos:column="23">char<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">next<pos:position pos:line="21" pos:column="33"/></name></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">lref<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <literal type="char" pos:line="23" pos:column="30">'+'<pos:position pos:line="23" pos:column="33"/></literal></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">lref<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">++<pos:position pos:line="24" pos:column="31"/></operator></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="25" pos:column="17">colon<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <call><name pos:line="25" pos:column="25">strchr<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">lref<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="38">':'<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">tail<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">lref<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">+<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">strlen<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">lref<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">colon<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">&amp;&amp;<pos:position pos:line="27" pos:column="39"/></operator>
		      <literal type="number" pos:line="28" pos:column="23">2<pos:position pos:line="28" pos:column="24"/></literal> <operator pos:line="28" pos:column="25">&lt;<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="27">colon<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">-<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">lref<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">&amp;&amp;<pos:position pos:line="28" pos:column="50"/></operator>
		      <name><name pos:line="29" pos:column="23">colon<pos:position pos:line="29" pos:column="28"/></name><index pos:line="29" pos:column="28">[<expr><operator pos:line="29" pos:column="29">-<pos:position pos:line="29" pos:column="30"/></operator><literal type="number" pos:line="29" pos:column="30">1<pos:position pos:line="29" pos:column="31"/></literal></expr>]<pos:position pos:line="29" pos:column="32"/></index></name> <operator pos:line="29" pos:column="33">==<pos:position pos:line="29" pos:column="35"/></operator> <literal type="char" pos:line="29" pos:column="36">'*'<pos:position pos:line="29" pos:column="39"/></literal> <operator pos:line="29" pos:column="40">&amp;&amp;<pos:position pos:line="29" pos:column="50"/></operator>
		      <name><name pos:line="30" pos:column="23">colon<pos:position pos:line="30" pos:column="28"/></name><index pos:line="30" pos:column="28">[<expr><operator pos:line="30" pos:column="29">-<pos:position pos:line="30" pos:column="30"/></operator><literal type="number" pos:line="30" pos:column="30">2<pos:position pos:line="30" pos:column="31"/></literal></expr>]<pos:position pos:line="30" pos:column="32"/></index></name> <operator pos:line="30" pos:column="33">==<pos:position pos:line="30" pos:column="35"/></operator> <literal type="char" pos:line="30" pos:column="36">'/'<pos:position pos:line="30" pos:column="39"/></literal> <operator pos:line="30" pos:column="40">&amp;&amp;<pos:position pos:line="30" pos:column="50"/></operator>
		      <literal type="number" pos:line="31" pos:column="23">2<pos:position pos:line="31" pos:column="24"/></literal> <operator pos:line="31" pos:column="25">&lt;<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="27">tail<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">-<pos:position pos:line="31" pos:column="33"/></operator> <operator pos:line="31" pos:column="34">(<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="35">colon<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">+<pos:position pos:line="31" pos:column="42"/></operator> <literal type="number" pos:line="31" pos:column="43">1<pos:position pos:line="31" pos:column="44"/></literal><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="46">&amp;&amp;<pos:position pos:line="31" pos:column="56"/></operator>
		      <name><name pos:line="32" pos:column="23">tail<pos:position pos:line="32" pos:column="27"/></name><index pos:line="32" pos:column="27">[<expr><operator pos:line="32" pos:column="28">-<pos:position pos:line="32" pos:column="29"/></operator><literal type="number" pos:line="32" pos:column="29">1<pos:position pos:line="32" pos:column="30"/></literal></expr>]<pos:position pos:line="32" pos:column="31"/></index></name> <operator pos:line="32" pos:column="32">==<pos:position pos:line="32" pos:column="34"/></operator> <literal type="char" pos:line="32" pos:column="35">'*'<pos:position pos:line="32" pos:column="38"/></literal> <operator pos:line="32" pos:column="39">&amp;&amp;<pos:position pos:line="32" pos:column="49"/></operator>
		      <name><name pos:line="33" pos:column="23">tail<pos:position pos:line="33" pos:column="27"/></name><index pos:line="33" pos:column="27">[<expr><operator pos:line="33" pos:column="28">-<pos:position pos:line="33" pos:column="29"/></operator><literal type="number" pos:line="33" pos:column="29">2<pos:position pos:line="33" pos:column="30"/></literal></expr>]<pos:position pos:line="33" pos:column="31"/></index></name> <operator pos:line="33" pos:column="32">==<pos:position pos:line="33" pos:column="34"/></operator> <literal type="char" pos:line="33" pos:column="35">'/'<pos:position pos:line="33" pos:column="38"/></literal><operator pos:line="33" pos:column="38">)<pos:position pos:line="33" pos:column="39"/></operator></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40"> <block pos:line="33" pos:column="41">{
			<comment type="block" pos:line="34" pos:column="25">/* not a glob */</comment>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><operator pos:line="35" pos:column="29">!<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">found_one<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">++<pos:position pos:line="35" pos:column="41"/></operator></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="33">printf<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><literal type="string" pos:line="36" pos:column="40">"explicit\n"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">printf<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><literal type="string" pos:line="37" pos:column="32">"%s\n"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">ref<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
			<continue pos:line="38" pos:column="25">continue;<pos:position pos:line="38" pos:column="34"/></continue>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="41" pos:column="17">/* glob */</comment>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">found_one<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">++<pos:position pos:line="42" pos:column="33"/></operator></expr>)<pos:position pos:line="42" pos:column="34"/></condition><then pos:line="42" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">printf<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><literal type="string" pos:line="43" pos:column="32">"glob\n"<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="45" pos:column="17">/* lref to colon-2 is remote hierarchy name;
		 * colon+1 to tail-2 is local.
		 */</comment>
		<expr_stmt><expr><name pos:line="48" pos:column="17">matchlen<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <operator pos:line="48" pos:column="28">(<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">colon<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">-<pos:position pos:line="48" pos:column="35"/></operator><literal type="number" pos:line="48" pos:column="35">1<pos:position pos:line="48" pos:column="36"/></literal><operator pos:line="48" pos:column="36">)<pos:position pos:line="48" pos:column="37"/></operator> <operator pos:line="48" pos:column="38">-<pos:position pos:line="48" pos:column="39"/></operator> <name pos:line="48" pos:column="40">lref<pos:position pos:line="48" pos:column="44"/></name></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="49" pos:column="17">replacelen<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">=<pos:position pos:line="49" pos:column="29"/></operator> <operator pos:line="49" pos:column="30">(<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="31">tail<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">-<pos:position pos:line="49" pos:column="36"/></operator><literal type="number" pos:line="49" pos:column="36">1<pos:position pos:line="49" pos:column="37"/></literal><operator pos:line="49" pos:column="37">)<pos:position pos:line="49" pos:column="38"/></operator> <operator pos:line="49" pos:column="39">-<pos:position pos:line="49" pos:column="40"/></operator> <operator pos:line="49" pos:column="41">(<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="42">colon<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">+<pos:position pos:line="49" pos:column="48"/></operator><literal type="number" pos:line="49" pos:column="48">1<pos:position pos:line="49" pos:column="49"/></literal><operator pos:line="49" pos:column="49">)<pos:position pos:line="49" pos:column="50"/></operator></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
		<for pos:line="50" pos:column="17">for <control pos:line="50" pos:column="21">(<init><expr><name pos:line="50" pos:column="22">ls<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="27">ls_remote_result<pos:position pos:line="50" pos:column="43"/></name></expr>;<pos:position pos:line="50" pos:column="44"/></init> <condition><expr><name pos:line="50" pos:column="45">ls<pos:position pos:line="50" pos:column="47"/></name></expr>;<pos:position pos:line="50" pos:column="48"/></condition> <incr><expr><name pos:line="50" pos:column="49">ls<pos:position pos:line="50" pos:column="51"/></name> <operator pos:line="50" pos:column="52">=<pos:position pos:line="50" pos:column="53"/></operator> <name pos:line="50" pos:column="54">next<pos:position pos:line="50" pos:column="58"/></name></expr></incr>)<pos:position pos:line="50" pos:column="59"/></control> <block pos:line="50" pos:column="60">{
			<decl_stmt><decl><type><specifier pos:line="51" pos:column="25">const<pos:position pos:line="51" pos:column="30"/></specifier> <name pos:line="51" pos:column="31">char<pos:position pos:line="51" pos:column="35"/></name> <modifier pos:line="51" pos:column="36">*<pos:position pos:line="51" pos:column="37"/></modifier></type><name pos:line="51" pos:column="37">eol<pos:position pos:line="51" pos:column="40"/></name></decl>;<pos:position pos:line="51" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">unsigned<pos:position pos:line="52" pos:column="33"/></name> <name pos:line="52" pos:column="34">char<pos:position pos:line="52" pos:column="38"/></name></type> <name><name pos:line="52" pos:column="39">sha1<pos:position pos:line="52" pos:column="43"/></name><index pos:line="52" pos:column="43">[<expr><literal type="number" pos:line="52" pos:column="44">20<pos:position pos:line="52" pos:column="46"/></literal></expr>]<pos:position pos:line="52" pos:column="47"/></index></name></decl>;<pos:position pos:line="52" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="53" pos:column="25">int<pos:position pos:line="53" pos:column="28"/></name></type> <name pos:line="53" pos:column="29">namelen<pos:position pos:line="53" pos:column="36"/></name></decl>;<pos:position pos:line="53" pos:column="37"/></decl_stmt>

			<while pos:line="55" pos:column="25">while <condition pos:line="55" pos:column="31">(<expr><operator pos:line="55" pos:column="32">*<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">ls<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">&amp;&amp;<pos:position pos:line="55" pos:column="46"/></operator> <call><name pos:line="55" pos:column="39">isspace<pos:position pos:line="55" pos:column="46"/></name><argument_list pos:line="55" pos:column="46">(<argument><expr><operator pos:line="55" pos:column="47">*<pos:position pos:line="55" pos:column="48"/></operator><name pos:line="55" pos:column="48">ls<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="52"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="33">ls<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">++<pos:position pos:line="56" pos:column="37"/></operator></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="57" pos:column="25">next<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <call><name pos:line="57" pos:column="32">strchr<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">ls<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="57" pos:column="43">'\n'<pos:position pos:line="57" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="58" pos:column="25">eol<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <ternary><condition><expr><operator pos:line="58" pos:column="31">!<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="32">next<pos:position pos:line="58" pos:column="36"/></name></expr> ?<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38"> <expr><operator pos:line="58" pos:column="39">(<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="40">ls<pos:position pos:line="58" pos:column="42"/></name> <operator pos:line="58" pos:column="43">+<pos:position pos:line="58" pos:column="44"/></operator> <call><name pos:line="58" pos:column="45">strlen<pos:position pos:line="58" pos:column="51"/></name><argument_list pos:line="58" pos:column="51">(<argument><expr><name pos:line="58" pos:column="52">ls<pos:position pos:line="58" pos:column="54"/></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call><operator pos:line="58" pos:column="55">)<pos:position pos:line="58" pos:column="56"/></operator></expr> <pos:position pos:line="58" pos:column="57"/></then><else pos:line="58" pos:column="57">: <expr><name pos:line="58" pos:column="59">next<pos:position pos:line="58" pos:column="63"/></name></expr></else></ternary></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt>
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><operator pos:line="59" pos:column="29">!<pos:position pos:line="59" pos:column="30"/></operator><call><name pos:line="59" pos:column="30">memcmp<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><literal type="string" pos:line="59" pos:column="37">"^{}"<pos:position pos:line="59" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">eol<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">-<pos:position pos:line="59" pos:column="48"/></operator><literal type="number" pos:line="59" pos:column="48">3<pos:position pos:line="59" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="51">3<pos:position pos:line="59" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="54"/></condition><then pos:line="59" pos:column="54">
				<block type="pseudo"><continue pos:line="60" pos:column="33">continue;<pos:position pos:line="60" pos:column="42"/></continue></block></then></if>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><name pos:line="61" pos:column="29">eol<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">-<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">ls<pos:position pos:line="61" pos:column="37"/></name> <operator pos:line="61" pos:column="38">&lt;<pos:position pos:line="61" pos:column="42"/></operator> <literal type="number" pos:line="61" pos:column="40">40<pos:position pos:line="61" pos:column="42"/></literal></expr>)<pos:position pos:line="61" pos:column="43"/></condition><then pos:line="61" pos:column="43">
				<block type="pseudo"><continue pos:line="62" pos:column="33">continue;<pos:position pos:line="62" pos:column="42"/></continue></block></then></if>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><call><name pos:line="63" pos:column="29">get_sha1_hex<pos:position pos:line="63" pos:column="41"/></name><argument_list pos:line="63" pos:column="41">(<argument><expr><name pos:line="63" pos:column="42">ls<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="46">sha1<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="52"/></condition><then pos:line="63" pos:column="52">
				<block type="pseudo"><continue pos:line="64" pos:column="33">continue;<pos:position pos:line="64" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="65" pos:column="25">ls<pos:position pos:line="65" pos:column="27"/></name> <operator pos:line="65" pos:column="28">+=<pos:position pos:line="65" pos:column="30"/></operator> <literal type="number" pos:line="65" pos:column="31">40<pos:position pos:line="65" pos:column="33"/></literal></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
			<while pos:line="66" pos:column="25">while <condition pos:line="66" pos:column="31">(<expr><name pos:line="66" pos:column="32">ls<pos:position pos:line="66" pos:column="34"/></name> <operator pos:line="66" pos:column="35">&lt;<pos:position pos:line="66" pos:column="39"/></operator> <name pos:line="66" pos:column="37">eol<pos:position pos:line="66" pos:column="40"/></name> <operator pos:line="66" pos:column="41">&amp;&amp;<pos:position pos:line="66" pos:column="51"/></operator> <call><name pos:line="66" pos:column="44">isspace<pos:position pos:line="66" pos:column="51"/></name><argument_list pos:line="66" pos:column="51">(<argument><expr><operator pos:line="66" pos:column="52">*<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="53">ls<pos:position pos:line="66" pos:column="55"/></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="57"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="33">ls<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">++<pos:position pos:line="67" pos:column="37"/></operator></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt></block></while>
			<comment type="block" pos:line="68" pos:column="25">/* ls to next (or eol) is the name.
			 * is it identical to lref to colon-2?
			 */</comment>
			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><operator pos:line="71" pos:column="29">(<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="30">eol<pos:position pos:line="71" pos:column="33"/></name> <operator pos:line="71" pos:column="34">-<pos:position pos:line="71" pos:column="35"/></operator> <name pos:line="71" pos:column="36">ls<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">)<pos:position pos:line="71" pos:column="39"/></operator> <operator pos:line="71" pos:column="40">&lt;=<pos:position pos:line="71" pos:column="45"/></operator> <name pos:line="71" pos:column="43">matchlen<pos:position pos:line="71" pos:column="51"/></name> <operator pos:line="71" pos:column="52">||<pos:position pos:line="71" pos:column="54"/></operator>
			    <call><name pos:line="72" pos:column="29">strncmp<pos:position pos:line="72" pos:column="36"/></name><argument_list pos:line="72" pos:column="36">(<argument><expr><name pos:line="72" pos:column="37">ls<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="41">lref<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">matchlen<pos:position pos:line="72" pos:column="55"/></name></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="57"/></condition><then pos:line="72" pos:column="57">
				<block type="pseudo"><continue pos:line="73" pos:column="33">continue;<pos:position pos:line="73" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="75" pos:column="25">/* Yes, it is a match */</comment>
			<expr_stmt><expr><name pos:line="76" pos:column="25">namelen<pos:position pos:line="76" pos:column="32"/></name> <operator pos:line="76" pos:column="33">=<pos:position pos:line="76" pos:column="34"/></operator> <name pos:line="76" pos:column="35">eol<pos:position pos:line="76" pos:column="38"/></name> <operator pos:line="76" pos:column="39">-<pos:position pos:line="76" pos:column="40"/></operator> <name pos:line="76" pos:column="41">ls<pos:position pos:line="76" pos:column="43"/></name></expr>;<pos:position pos:line="76" pos:column="44"/></expr_stmt>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><name pos:line="77" pos:column="29">lref<pos:position pos:line="77" pos:column="33"/></name> <operator pos:line="77" pos:column="34">!=<pos:position pos:line="77" pos:column="36"/></operator> <name pos:line="77" pos:column="37">ref<pos:position pos:line="77" pos:column="40"/></name></expr>)<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="33">putchar<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><literal type="char" pos:line="78" pos:column="41">'+'<pos:position pos:line="78" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="46"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">printf<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><literal type="string" pos:line="79" pos:column="32">"%.*s:%.*s%.*s\n"<pos:position pos:line="79" pos:column="49"/></literal></expr></argument>,
			       <argument><expr><name pos:line="80" pos:column="32">namelen<pos:position pos:line="80" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="41">ls<pos:position pos:line="80" pos:column="43"/></name></expr></argument>,
			       <argument><expr><name pos:line="81" pos:column="32">replacelen<pos:position pos:line="81" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="44">colon<pos:position pos:line="81" pos:column="49"/></name> <operator pos:line="81" pos:column="50">+<pos:position pos:line="81" pos:column="51"/></operator> <literal type="number" pos:line="81" pos:column="52">1<pos:position pos:line="81" pos:column="53"/></literal></expr></argument>,
			       <argument><expr><name pos:line="82" pos:column="32">namelen<pos:position pos:line="82" pos:column="39"/></name> <operator pos:line="82" pos:column="40">-<pos:position pos:line="82" pos:column="41"/></operator> <name pos:line="82" pos:column="42">matchlen<pos:position pos:line="82" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="52">ls<pos:position pos:line="82" pos:column="54"/></name> <operator pos:line="82" pos:column="55">+<pos:position pos:line="82" pos:column="56"/></operator> <name pos:line="82" pos:column="57">matchlen<pos:position pos:line="82" pos:column="65"/></name></expr></argument>)<pos:position pos:line="82" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="83" pos:column="18"/></block></for>
	}<pos:position pos:line="84" pos:column="10"/></block></for>
	<return pos:line="85" pos:column="9">return <expr><literal type="number" pos:line="85" pos:column="16">0<pos:position pos:line="85" pos:column="17"/></literal></expr>;<pos:position pos:line="85" pos:column="18"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

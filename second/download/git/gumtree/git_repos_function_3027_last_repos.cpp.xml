<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3027_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_recent_packed<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">object_id<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">oid<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			     <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">packed_git<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">p<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">uint32_t<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">pos<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="3" pos:column="30">void<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">object<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">obj<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><call><name pos:line="5" pos:column="30">lookup_object<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name><name pos:line="5" pos:column="44">oid<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">hash<pos:position pos:line="5" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">obj<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&amp;&amp;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="20">obj<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">flags<pos:position pos:line="7" pos:column="30"/></name></name> <operator pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="33">SEEN<pos:position pos:line="7" pos:column="37"/></name></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">add_recent_object<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">oid<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="32">p<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">mtime<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">data<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
	<return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2542_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tree_entry_pathcmp<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">tree_desc<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">t1<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">tree_desc<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">t2<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">name_entry<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">e1<pos:position pos:line="3" pos:column="30"/></name></decl>, <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="33">e2<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cmp<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* empty descriptors sort after valid tree entries */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">t1<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">size<pos:position pos:line="7" pos:column="22"/></name></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><ternary><condition><expr><name><name pos:line="8" pos:column="24">t2<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">size<pos:position pos:line="8" pos:column="32"/></name></name></expr> ?<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <expr><literal type="number" pos:line="8" pos:column="35">1<pos:position pos:line="8" pos:column="36"/></literal></expr> <pos:position pos:line="8" pos:column="37"/></then><else pos:line="8" pos:column="37">: <expr><literal type="number" pos:line="8" pos:column="39">0<pos:position pos:line="8" pos:column="40"/></literal></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="41"/></return></block></then>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><name><name pos:line="9" pos:column="19">t2<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">size<pos:position pos:line="9" pos:column="27"/></name></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">e1<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <operator pos:line="12" pos:column="14">&amp;<pos:position pos:line="12" pos:column="19"/></operator><name><name pos:line="12" pos:column="15">t1<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">entry<pos:position pos:line="12" pos:column="24"/></name></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">e2<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <operator pos:line="13" pos:column="14">&amp;<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="15">t2<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">entry<pos:position pos:line="13" pos:column="24"/></name></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">cmp<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">base_name_compare<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name><name pos:line="14" pos:column="33">e1<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">path<pos:position pos:line="14" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="43">tree_entry_len<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><name pos:line="14" pos:column="58">e1<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="63">e1<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">-&gt;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="67">mode<pos:position pos:line="14" pos:column="71"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="15" pos:column="33">e2<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">path<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="43">tree_entry_len<pos:position pos:line="15" pos:column="57"/></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">e2<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="63">e2<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">-&gt;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="67">mode<pos:position pos:line="15" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">cmp<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

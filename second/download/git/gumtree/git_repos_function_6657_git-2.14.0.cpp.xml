<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6657_git-2.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">_obstack_begin<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">obstack<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">h<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">int<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">size<pos:position pos:line="3" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">alignment<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
		<parameter><function_decl><type><name pos:line="4" pos:column="17">void<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type>(<modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><name pos:line="4" pos:column="25">chunkfun<pos:position pos:line="4" pos:column="33"/></name>) <parameter_list pos:line="4" pos:column="35">(<parameter><decl><type><name pos:line="4" pos:column="36">long<pos:position pos:line="4" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="4" pos:column="41"/></parameter_list></function_decl></parameter>,
		<parameter><function_decl><type><name pos:line="5" pos:column="17">void<pos:position pos:line="5" pos:column="21"/></name></type> (<modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier><name pos:line="5" pos:column="24">freefun<pos:position pos:line="5" pos:column="31"/></name>) <parameter_list pos:line="5" pos:column="33">(<parameter><decl><type><name pos:line="5" pos:column="34">void<pos:position pos:line="5" pos:column="38"/></name> <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier></type></decl></parameter>)<pos:position pos:line="5" pos:column="41"/></parameter_list></function_decl></parameter>)<pos:position pos:line="5" pos:column="42"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">register<pos:position pos:line="7" pos:column="11"/></specifier> <name><name pos:line="7" pos:column="12">struct<pos:position pos:line="7" pos:column="18"/></name> <name pos:line="7" pos:column="19">_obstack_chunk<pos:position pos:line="7" pos:column="33"/></name></name> <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier></type><name pos:line="7" pos:column="35">chunk<pos:position pos:line="7" pos:column="40"/></name></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt> <comment type="block" pos:line="7" pos:column="42">/* points to new chunk */</comment>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">alignment<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="20">0<pos:position pos:line="9" pos:column="21"/></literal></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">alignment<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">DEFAULT_ALIGNMENT<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">size<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <comment type="block" pos:line="12" pos:column="5">/* Default size is what GNU malloc can fit in a 4096-byte block.  */</comment>
    <block pos:line="13" pos:column="5">{
      <comment type="block" pos:line="14" pos:column="7">/* 12 is sizeof (mhead) and 4 is EXTRA from GNU malloc.
	 Use the values for range checking, because if range checking is off,
	 the extra bytes won't be missed terribly, but if range checking is on
	 and we used a larger request, a whole extra 4096 bytes would be
	 allocated.

	 These number are irrelevant to the new GNU malloc.  I suspect it is
	 less sensitive to the size of the request.  */</comment>
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">int<pos:position pos:line="22" pos:column="10"/></name></type> <name pos:line="22" pos:column="11">extra<pos:position pos:line="22" pos:column="16"/></name> <init pos:line="22" pos:column="17">= <expr><operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator><operator pos:line="22" pos:column="20">(<pos:position pos:line="22" pos:column="21"/></operator><operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><literal type="number" pos:line="22" pos:column="23">12<pos:position pos:line="22" pos:column="25"/></literal> <operator pos:line="22" pos:column="26">+<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">DEFAULT_ROUNDING<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">-<pos:position pos:line="22" pos:column="46"/></operator> <literal type="number" pos:line="22" pos:column="47">1<pos:position pos:line="22" pos:column="48"/></literal><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="50">&amp;<pos:position pos:line="22" pos:column="55"/></operator> <operator pos:line="22" pos:column="52">~<pos:position pos:line="22" pos:column="53"/></operator><operator pos:line="22" pos:column="53">(<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">DEFAULT_ROUNDING<pos:position pos:line="22" pos:column="70"/></name> <operator pos:line="22" pos:column="71">-<pos:position pos:line="22" pos:column="72"/></operator> <literal type="number" pos:line="22" pos:column="73">1<pos:position pos:line="22" pos:column="74"/></literal><operator pos:line="22" pos:column="74">)<pos:position pos:line="22" pos:column="75"/></operator><operator pos:line="22" pos:column="75">)<pos:position pos:line="22" pos:column="76"/></operator>
		    <operator pos:line="23" pos:column="21">+<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">4<pos:position pos:line="23" pos:column="24"/></literal> <operator pos:line="23" pos:column="25">+<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">DEFAULT_ROUNDING<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">-<pos:position pos:line="23" pos:column="45"/></operator> <literal type="number" pos:line="23" pos:column="46">1<pos:position pos:line="23" pos:column="47"/></literal><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator>
		   <operator pos:line="24" pos:column="20">&amp;<pos:position pos:line="24" pos:column="25"/></operator> <operator pos:line="24" pos:column="22">~<pos:position pos:line="24" pos:column="23"/></operator><operator pos:line="24" pos:column="23">(<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">DEFAULT_ROUNDING<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">-<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="43">1<pos:position pos:line="24" pos:column="44"/></literal><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator><operator pos:line="24" pos:column="45">)<pos:position pos:line="24" pos:column="46"/></operator></expr></init></decl>;<pos:position pos:line="24" pos:column="47"/></decl_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">size<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">4096<pos:position pos:line="25" pos:column="18"/></literal> <operator pos:line="25" pos:column="19">-<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">extra<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">h<pos:position pos:line="28" pos:column="4"/></name><operator pos:line="28" pos:column="4">-&gt;<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="6">chunkfun<pos:position pos:line="28" pos:column="14"/></name></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <operator pos:line="28" pos:column="17">(<pos:position pos:line="28" pos:column="18"/></operator>struct <name pos:line="28" pos:column="25">_obstack_chunk<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">*<pos:position pos:line="28" pos:column="41"/></operator> <call pos:line="28" pos:column="42">(<modifier pos:line="28" pos:column="43">*<pos:position pos:line="28" pos:column="44"/></modifier>)<argument_list pos:line="28" pos:column="45">(<argument><expr><name pos:line="28" pos:column="46">void<pos:position pos:line="28" pos:column="50"/></name> <operator pos:line="28" pos:column="51">*<pos:position pos:line="28" pos:column="52"/></operator></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">long<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator> <name pos:line="28" pos:column="61">chunkfun<pos:position pos:line="28" pos:column="69"/></name></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">h<pos:position pos:line="29" pos:column="4"/></name><operator pos:line="29" pos:column="4">-&gt;<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="6">freefun<pos:position pos:line="29" pos:column="13"/></name></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><call><call><name pos:line="29" pos:column="17">void<pos:position pos:line="29" pos:column="21"/></name> <argument_list pos:line="29" pos:column="22">(<argument><expr><operator pos:line="29" pos:column="23">*<pos:position pos:line="29" pos:column="24"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call> <argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">void<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">*<pos:position pos:line="29" pos:column="33"/></operator></expr></argument>, <argument><expr pos:line="29" pos:column="35">struct <name pos:line="29" pos:column="42">_obstack_chunk<pos:position pos:line="29" pos:column="56"/></name> <operator pos:line="29" pos:column="57">*<pos:position pos:line="29" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call><operator pos:line="29" pos:column="59">)<pos:position pos:line="29" pos:column="60"/></operator> <name pos:line="29" pos:column="61">freefun<pos:position pos:line="29" pos:column="68"/></name></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">h<pos:position pos:line="30" pos:column="4"/></name><operator pos:line="30" pos:column="4">-&gt;<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="6">chunk_size<pos:position pos:line="30" pos:column="16"/></name></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">size<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="31" pos:column="3">h<pos:position pos:line="31" pos:column="4"/></name><operator pos:line="31" pos:column="4">-&gt;<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="6">alignment_mask<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">alignment<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">-<pos:position pos:line="31" pos:column="34"/></operator> <literal type="number" pos:line="31" pos:column="35">1<pos:position pos:line="31" pos:column="36"/></literal></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">h<pos:position pos:line="32" pos:column="4"/></name><operator pos:line="32" pos:column="4">-&gt;<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="6">use_extra_arg<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="22">0<pos:position pos:line="32" pos:column="23"/></literal></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><name pos:line="34" pos:column="3">chunk<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <name><name pos:line="34" pos:column="11">h<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">chunk<pos:position pos:line="34" pos:column="19"/></name></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">CALL_CHUNKFUN<pos:position pos:line="34" pos:column="35"/></name> <argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">h<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="40">h<pos:position pos:line="34" pos:column="41"/></name> <operator pos:line="34" pos:column="42">-&gt;<pos:position pos:line="34" pos:column="47"/></operator> <name pos:line="34" pos:column="45">chunk_size<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">!<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">chunk<pos:position pos:line="35" pos:column="13"/></name></expr>)<pos:position pos:line="35" pos:column="14"/></condition><then pos:line="35" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call pos:line="36" pos:column="5">(<modifier pos:line="36" pos:column="6">*<pos:position pos:line="36" pos:column="7"/></modifier><name pos:line="36" pos:column="7">obstack_alloc_failed_handler<pos:position pos:line="36" pos:column="35"/></name>) <argument_list pos:line="36" pos:column="37">()<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">h<pos:position pos:line="37" pos:column="4"/></name><operator pos:line="37" pos:column="4">-&gt;<pos:position pos:line="37" pos:column="9"/></operator><name pos:line="37" pos:column="6">next_free<pos:position pos:line="37" pos:column="15"/></name></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name><name pos:line="37" pos:column="18">h<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">object_base<pos:position pos:line="37" pos:column="32"/></name></name> <operator pos:line="37" pos:column="33">=<pos:position pos:line="37" pos:column="34"/></operator> <call><name pos:line="37" pos:column="35">__PTR_ALIGN<pos:position pos:line="37" pos:column="46"/></name> <argument_list pos:line="37" pos:column="47">(<argument><expr><operator pos:line="37" pos:column="48">(<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="49">char<pos:position pos:line="37" pos:column="53"/></name> <operator pos:line="37" pos:column="54">*<pos:position pos:line="37" pos:column="55"/></operator><operator pos:line="37" pos:column="55">)<pos:position pos:line="37" pos:column="56"/></operator> <name pos:line="37" pos:column="57">chunk<pos:position pos:line="37" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="64">chunk<pos:position pos:line="37" pos:column="69"/></name><operator pos:line="37" pos:column="69">-&gt;<pos:position pos:line="37" pos:column="74"/></operator><name pos:line="37" pos:column="71">contents<pos:position pos:line="37" pos:column="79"/></name></name></expr></argument>,
					       <argument><expr><name pos:line="38" pos:column="48">alignment<pos:position pos:line="38" pos:column="57"/></name> <operator pos:line="38" pos:column="58">-<pos:position pos:line="38" pos:column="59"/></operator> <literal type="number" pos:line="38" pos:column="60">1<pos:position pos:line="38" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">h<pos:position pos:line="39" pos:column="4"/></name><operator pos:line="39" pos:column="4">-&gt;<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="6">chunk_limit<pos:position pos:line="39" pos:column="17"/></name></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <name><name pos:line="39" pos:column="20">chunk<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">limit<pos:position pos:line="39" pos:column="32"/></name></name>
    <operator pos:line="40" pos:column="5">=<pos:position pos:line="40" pos:column="6"/></operator> <operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name pos:line="40" pos:column="8">char<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><operator pos:line="40" pos:column="14">)<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">chunk<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">+<pos:position pos:line="40" pos:column="23"/></operator> <name><name pos:line="40" pos:column="24">h<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">chunk_size<pos:position pos:line="40" pos:column="37"/></name></name></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="41" pos:column="3">chunk<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">prev<pos:position pos:line="41" pos:column="14"/></name></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">NULL<pos:position pos:line="41" pos:column="21"/></name></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
  <comment type="block" pos:line="42" pos:column="3">/* The initial chunk now contains no empty object.  */</comment>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">h<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">-&gt;<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="6">maybe_empty_object<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <literal type="number" pos:line="43" pos:column="27">0<pos:position pos:line="43" pos:column="28"/></literal></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">h<pos:position pos:line="44" pos:column="4"/></name><operator pos:line="44" pos:column="4">-&gt;<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="6">alloc_failed<pos:position pos:line="44" pos:column="18"/></name></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="21">0<pos:position pos:line="44" pos:column="22"/></literal></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
  <return pos:line="45" pos:column="3">return <expr><literal type="number" pos:line="45" pos:column="10">1<pos:position pos:line="45" pos:column="11"/></literal></expr>;<pos:position pos:line="45" pos:column="12"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

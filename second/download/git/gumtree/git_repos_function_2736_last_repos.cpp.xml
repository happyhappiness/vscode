<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2736_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">strbuf_stripspace<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">strbuf<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">sb<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">skip_comments<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">empties<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">i<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">j<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">len<pos:position pos:line="4" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">newlen<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">eol<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* We may have to add a newline. */</comment>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">strbuf_grow<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">sb<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">j<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></init> <condition><expr><name pos:line="10" pos:column="25">i<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&lt;<pos:position pos:line="10" pos:column="31"/></operator> <name><name pos:line="10" pos:column="29">sb<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">len<pos:position pos:line="10" pos:column="36"/></name></name></expr>;<pos:position pos:line="10" pos:column="37"/></condition> <incr><expr><name pos:line="10" pos:column="38">i<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">+=<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="43">len<pos:position pos:line="10" pos:column="46"/></name></expr><operator pos:line="10" pos:column="46">,<pos:position pos:line="10" pos:column="47"/></operator> <expr><name pos:line="10" pos:column="48">j<pos:position pos:line="10" pos:column="49"/></name> <operator pos:line="10" pos:column="50">+=<pos:position pos:line="10" pos:column="52"/></operator> <name pos:line="10" pos:column="53">newlen<pos:position pos:line="10" pos:column="59"/></name></expr></incr>)<pos:position pos:line="10" pos:column="60"/></control> <block pos:line="10" pos:column="61">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">eol<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">memchr<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">sb<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">buf<pos:position pos:line="11" pos:column="37"/></name></name> <operator pos:line="11" pos:column="38">+<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">i<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="43">'\n'<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="49">sb<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">len<pos:position pos:line="11" pos:column="56"/></name></name> <operator pos:line="11" pos:column="57">-<pos:position pos:line="11" pos:column="58"/></operator> <name pos:line="11" pos:column="59">i<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">len<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="12" pos:column="23">eol<pos:position pos:line="12" pos:column="26"/></name></expr> ?<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <expr><name pos:line="12" pos:column="29">eol<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">-<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="35">(<pos:position pos:line="12" pos:column="36"/></operator><name><name pos:line="12" pos:column="36">sb<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">buf<pos:position pos:line="12" pos:column="43"/></name></name> <operator pos:line="12" pos:column="44">+<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">i<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator> <operator pos:line="12" pos:column="49">+<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="51">1<pos:position pos:line="12" pos:column="52"/></literal></expr> <pos:position pos:line="12" pos:column="53"/></then><else pos:line="12" pos:column="53">: <expr><name><name pos:line="12" pos:column="55">sb<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">len<pos:position pos:line="12" pos:column="62"/></name></name> <operator pos:line="12" pos:column="63">-<pos:position pos:line="12" pos:column="64"/></operator> <name pos:line="12" pos:column="65">i<pos:position pos:line="12" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">skip_comments<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&amp;&amp;<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="38">len<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">&amp;&amp;<pos:position pos:line="14" pos:column="52"/></operator> <name><name pos:line="14" pos:column="45">sb<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">buf<pos:position pos:line="14" pos:column="52"/></name><index pos:line="14" pos:column="52">[<expr><name pos:line="14" pos:column="53">i<pos:position pos:line="14" pos:column="54"/></name></expr>]<pos:position pos:line="14" pos:column="55"/></index></name> <operator pos:line="14" pos:column="56">==<pos:position pos:line="14" pos:column="58"/></operator> <name pos:line="14" pos:column="59">comment_line_char<pos:position pos:line="14" pos:column="76"/></name></expr>)<pos:position pos:line="14" pos:column="77"/></condition><then pos:line="14" pos:column="77"> <block pos:line="14" pos:column="78">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">newlen<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="34">0<pos:position pos:line="15" pos:column="35"/></literal></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
			<continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">newlen<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">cleanup<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">sb<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">buf<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">+<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">i<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">len<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>

		<comment type="block" pos:line="20" pos:column="17">/* Not just an empty line? */</comment>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">newlen<pos:position pos:line="21" pos:column="27"/></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">empties<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">&gt;<pos:position pos:line="22" pos:column="41"/></operator> <literal type="number" pos:line="22" pos:column="39">0<pos:position pos:line="22" pos:column="40"/></literal> <operator pos:line="22" pos:column="41">&amp;&amp;<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="44">j<pos:position pos:line="22" pos:column="45"/></name> <operator pos:line="22" pos:column="46">&gt;<pos:position pos:line="22" pos:column="50"/></operator> <literal type="number" pos:line="22" pos:column="48">0<pos:position pos:line="22" pos:column="49"/></literal></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="33">sb<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">buf<pos:position pos:line="23" pos:column="40"/></name><index pos:line="23" pos:column="40">[<expr><name pos:line="23" pos:column="41">j<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">++<pos:position pos:line="23" pos:column="44"/></operator></expr>]<pos:position pos:line="23" pos:column="45"/></index></name> <operator pos:line="23" pos:column="46">=<pos:position pos:line="23" pos:column="47"/></operator> <literal type="char" pos:line="23" pos:column="48">'\n'<pos:position pos:line="23" pos:column="52"/></literal></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="24" pos:column="25">empties<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">memmove<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name><name pos:line="25" pos:column="33">sb<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">buf<pos:position pos:line="25" pos:column="40"/></name></name> <operator pos:line="25" pos:column="41">+<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">j<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="46">sb<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">buf<pos:position pos:line="25" pos:column="53"/></name></name> <operator pos:line="25" pos:column="54">+<pos:position pos:line="25" pos:column="55"/></operator> <name pos:line="25" pos:column="56">i<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">newlen<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">sb<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">buf<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name pos:line="26" pos:column="33">newlen<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">+<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">j<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">++<pos:position pos:line="26" pos:column="45"/></operator></expr>]<pos:position pos:line="26" pos:column="46"/></index></name> <operator pos:line="26" pos:column="47">=<pos:position pos:line="26" pos:column="48"/></operator> <literal type="char" pos:line="26" pos:column="49">'\n'<pos:position pos:line="26" pos:column="53"/></literal></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then> <else pos:line="27" pos:column="19">else <block pos:line="27" pos:column="24">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">empties<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">++<pos:position pos:line="28" pos:column="34"/></operator></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></else></if>
	}<pos:position pos:line="30" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_setlen<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">sb<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">j<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2745_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_short_opt<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">parse_opt_ctx_t<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name><name pos:line="1" pos:column="61">struct<pos:position pos:line="1" pos:column="67"/></name> <name pos:line="1" pos:column="68">option<pos:position pos:line="1" pos:column="74"/></name></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">options<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">option<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">all_opts<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">options<pos:position pos:line="3" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">struct<pos:position pos:line="4" pos:column="21"/></name> <name pos:line="4" pos:column="22">option<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">numopt<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init pos:line="6" pos:column="14">;<pos:position pos:line="6" pos:column="15"/></init> <condition><expr><name><name pos:line="6" pos:column="16">options<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">type<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">!=<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">OPTION_END<pos:position pos:line="6" pos:column="43"/></name></expr>;<pos:position pos:line="6" pos:column="44"/></condition> <incr><expr><name pos:line="6" pos:column="45">options<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">++<pos:position pos:line="6" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="55"/></control> <block pos:line="6" pos:column="56">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">options<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">short_name<pos:position pos:line="7" pos:column="40"/></name></name> <operator pos:line="7" pos:column="41">==<pos:position pos:line="7" pos:column="43"/></operator> <operator pos:line="7" pos:column="44">*<pos:position pos:line="7" pos:column="45"/></operator><name><name pos:line="7" pos:column="45">p<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">opt<pos:position pos:line="7" pos:column="51"/></name></name></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52"> <block pos:line="7" pos:column="53">{
			<expr_stmt><expr><name><name pos:line="8" pos:column="25">p<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">opt<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <ternary><condition><expr><name><name pos:line="8" pos:column="34">p<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">opt<pos:position pos:line="8" pos:column="40"/></name><index pos:line="8" pos:column="40">[<expr><literal type="number" pos:line="8" pos:column="41">1<pos:position pos:line="8" pos:column="42"/></literal></expr>]<pos:position pos:line="8" pos:column="43"/></index></name></expr> ?<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <expr><name><name pos:line="8" pos:column="46">p<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">opt<pos:position pos:line="8" pos:column="52"/></name></name> <operator pos:line="8" pos:column="53">+<pos:position pos:line="8" pos:column="54"/></operator> <literal type="number" pos:line="8" pos:column="55">1<pos:position pos:line="8" pos:column="56"/></literal></expr> <pos:position pos:line="8" pos:column="57"/></then><else pos:line="8" pos:column="57">: <expr><name pos:line="8" pos:column="59">NULL<pos:position pos:line="8" pos:column="63"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
			<return pos:line="9" pos:column="25">return <expr><call><name pos:line="9" pos:column="32">get_value<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">p<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">options<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="54">all_opts<pos:position pos:line="9" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="64">OPT_SHORT<pos:position pos:line="9" pos:column="73"/></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="75"/></return>
		}<pos:position pos:line="10" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="12" pos:column="17">/*
		 * Handle the numerical option later, explicit one-digit
		 * options take precedence over it.
		 */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">options<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">type<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">==<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">OPTION_NUMBER<pos:position pos:line="16" pos:column="51"/></name></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">numopt<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">options<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">numopt<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">&amp;&amp;<pos:position pos:line="19" pos:column="30"/></operator> <call><name pos:line="19" pos:column="23">isdigit<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><operator pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></operator><name><name pos:line="19" pos:column="32">p<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">opt<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <block pos:line="19" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">size_t<pos:position pos:line="20" pos:column="23"/></name></type> <name pos:line="20" pos:column="24">len<pos:position pos:line="20" pos:column="27"/></name> <init pos:line="20" pos:column="28">= <expr><literal type="number" pos:line="20" pos:column="30">1<pos:position pos:line="20" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">char<pos:position pos:line="21" pos:column="21"/></name> <modifier pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></modifier></type><name pos:line="21" pos:column="23">arg<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">int<pos:position pos:line="22" pos:column="20"/></name></type> <name pos:line="22" pos:column="21">rc<pos:position pos:line="22" pos:column="23"/></name></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>

		<while pos:line="24" pos:column="17">while <condition pos:line="24" pos:column="23">(<expr><call><name pos:line="24" pos:column="24">isdigit<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">p<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">opt<pos:position pos:line="24" pos:column="38"/></name><index pos:line="24" pos:column="38">[<expr><name pos:line="24" pos:column="39">len<pos:position pos:line="24" pos:column="42"/></name></expr>]<pos:position pos:line="24" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="45"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">len<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">++<pos:position pos:line="25" pos:column="30"/></operator></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="26" pos:column="17">arg<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">xmemdupz<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name><name pos:line="26" pos:column="32">p<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">opt<pos:position pos:line="26" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">len<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">opt<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <ternary><condition><expr><name><name pos:line="27" pos:column="26">p<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">opt<pos:position pos:line="27" pos:column="32"/></name><index pos:line="27" pos:column="32">[<expr><name pos:line="27" pos:column="33">len<pos:position pos:line="27" pos:column="36"/></name></expr>]<pos:position pos:line="27" pos:column="37"/></index></name></expr> ?<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39"> <expr><name><name pos:line="27" pos:column="40">p<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">opt<pos:position pos:line="27" pos:column="46"/></name></name> <operator pos:line="27" pos:column="47">+<pos:position pos:line="27" pos:column="48"/></operator> <name pos:line="27" pos:column="49">len<pos:position pos:line="27" pos:column="52"/></name></expr> <pos:position pos:line="27" pos:column="53"/></then><else pos:line="27" pos:column="53">: <expr><name pos:line="27" pos:column="55">NULL<pos:position pos:line="27" pos:column="59"/></name></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">rc<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <ternary><condition><expr><operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator><name><name pos:line="28" pos:column="24">numopt<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">callback<pos:position pos:line="28" pos:column="40"/></name></name><operator pos:line="28" pos:column="40">)<pos:position pos:line="28" pos:column="41"/></operator><operator pos:line="28" pos:column="41">(<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">numopt<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">,<pos:position pos:line="28" pos:column="49"/></operator> <name pos:line="28" pos:column="50">arg<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">,<pos:position pos:line="28" pos:column="54"/></operator> <literal type="number" pos:line="28" pos:column="55">0<pos:position pos:line="28" pos:column="56"/></literal><operator pos:line="28" pos:column="56">)<pos:position pos:line="28" pos:column="57"/></operator></expr> ?<pos:position pos:line="28" pos:column="59"/></condition><then pos:line="28" pos:column="59"> <expr><operator pos:line="28" pos:column="60">(<pos:position pos:line="28" pos:column="61"/></operator><operator pos:line="28" pos:column="61">-<pos:position pos:line="28" pos:column="62"/></operator><literal type="number" pos:line="28" pos:column="62">1<pos:position pos:line="28" pos:column="63"/></literal><operator pos:line="28" pos:column="63">)<pos:position pos:line="28" pos:column="64"/></operator></expr> <pos:position pos:line="28" pos:column="65"/></then><else pos:line="28" pos:column="65">: <expr><literal type="number" pos:line="28" pos:column="67">0<pos:position pos:line="28" pos:column="68"/></literal></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">free<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">arg<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">rc<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">-<pos:position pos:line="32" pos:column="17"/></operator><literal type="number" pos:line="32" pos:column="17">2<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3339_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">prio_queue_put<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">prio_queue<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">queue<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">void<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">thing<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ix<pos:position pos:line="3" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">parent<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Append at the end */</comment>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">ALLOC_GROW<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name><name pos:line="6" pos:column="20">queue<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">array<pos:position pos:line="6" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="34">queue<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">nr<pos:position pos:line="6" pos:column="43"/></name></name> <operator pos:line="6" pos:column="44">+<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="46">1<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="49">queue<pos:position pos:line="6" pos:column="54"/></name><operator pos:line="6" pos:column="54">-&gt;<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="56">alloc<pos:position pos:line="6" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">queue<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">array<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><name><name pos:line="7" pos:column="22">queue<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">nr<pos:position pos:line="7" pos:column="31"/></name></name></expr>]<pos:position pos:line="7" pos:column="32"/></index></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">ctr<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">=<pos:position pos:line="7" pos:column="38"/></operator> <name><name pos:line="7" pos:column="39">queue<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">insertion_ctr<pos:position pos:line="7" pos:column="59"/></name></name><operator pos:line="7" pos:column="59">++<pos:position pos:line="7" pos:column="61"/></operator></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">queue<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">array<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name><name pos:line="8" pos:column="22">queue<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">nr<pos:position pos:line="8" pos:column="31"/></name></name></expr>]<pos:position pos:line="8" pos:column="32"/></index></name><operator pos:line="8" pos:column="32">.<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">data<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">=<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">thing<pos:position pos:line="8" pos:column="45"/></name></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">queue<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">nr<pos:position pos:line="9" pos:column="18"/></name></name><operator pos:line="9" pos:column="18">++<pos:position pos:line="9" pos:column="20"/></operator></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">queue<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">compare<pos:position pos:line="10" pos:column="28"/></name></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
		<block type="pseudo"><return pos:line="11" pos:column="17">return;<pos:position pos:line="11" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="11" pos:column="25">/* LIFO */</comment>

	<comment type="block" pos:line="13" pos:column="9">/* Bubble up the new one */</comment>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">ix<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name><name pos:line="14" pos:column="19">queue<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">nr<pos:position pos:line="14" pos:column="28"/></name></name> <operator pos:line="14" pos:column="29">-<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">1<pos:position pos:line="14" pos:column="32"/></literal></expr>;<pos:position pos:line="14" pos:column="33"/></init> <condition><expr><name pos:line="14" pos:column="34">ix<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></condition> <incr><expr><name pos:line="14" pos:column="38">ix<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">=<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">parent<pos:position pos:line="14" pos:column="49"/></name></expr></incr>)<pos:position pos:line="14" pos:column="50"/></control> <block pos:line="14" pos:column="51">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">parent<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">ix<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">-<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="32">1<pos:position pos:line="15" pos:column="33"/></literal><operator pos:line="15" pos:column="33">)<pos:position pos:line="15" pos:column="34"/></operator> <operator pos:line="15" pos:column="35">/<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="37">2<pos:position pos:line="15" pos:column="38"/></literal></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">compare<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">queue<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">parent<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">ix<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call> <operator pos:line="16" pos:column="48">&lt;=<pos:position pos:line="16" pos:column="53"/></operator> <literal type="number" pos:line="16" pos:column="51">0<pos:position pos:line="16" pos:column="52"/></literal></expr>)<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53">
			<block type="pseudo"><break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">swap<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">queue<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">parent<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">ix<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

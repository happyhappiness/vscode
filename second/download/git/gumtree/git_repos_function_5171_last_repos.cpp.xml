<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5171_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_stage<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">stage<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">cache_entry<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">ce<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">pos<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><name pos:line="3" pos:column="16">pos<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">&lt;<pos:position pos:line="3" pos:column="24"/></operator> <name pos:line="3" pos:column="22">active_nr<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">&amp;&amp;<pos:position pos:line="3" pos:column="42"/></operator>
	       <operator pos:line="4" pos:column="16">!<pos:position pos:line="4" pos:column="17"/></operator><call><name pos:line="4" pos:column="17">strcmp<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name><name pos:line="4" pos:column="24">active_cache<pos:position pos:line="4" pos:column="36"/></name><index pos:line="4" pos:column="36">[<expr><name pos:line="4" pos:column="37">pos<pos:position pos:line="4" pos:column="40"/></name></expr>]<pos:position pos:line="4" pos:column="41"/></index></name><operator pos:line="4" pos:column="41">-&gt;<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="43">name<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="49">ce<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">name<pos:position pos:line="4" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="59"/></condition> <block pos:line="4" pos:column="60">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">ce_stage<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name><name pos:line="5" pos:column="30">active_cache<pos:position pos:line="5" pos:column="42"/></name><index pos:line="5" pos:column="42">[<expr><name pos:line="5" pos:column="43">pos<pos:position pos:line="5" pos:column="46"/></name></expr>]<pos:position pos:line="5" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call> <operator pos:line="5" pos:column="49">==<pos:position pos:line="5" pos:column="51"/></operator> <name pos:line="5" pos:column="52">stage<pos:position pos:line="5" pos:column="57"/></name></expr>)<pos:position pos:line="5" pos:column="58"/></condition><then pos:line="5" pos:column="58">
			<block type="pseudo"><return pos:line="6" pos:column="25">return <expr><literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="7" pos:column="17">pos<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">++<pos:position pos:line="7" pos:column="22"/></operator></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></while>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">stage<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">==<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="22">2<pos:position pos:line="9" pos:column="23"/></literal></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><call><name pos:line="10" pos:column="24">error<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><call><name pos:line="10" pos:column="30">_<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><literal type="string" pos:line="10" pos:column="32">"path '%s' does not have our version"<pos:position pos:line="10" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="72">ce<pos:position pos:line="10" pos:column="74"/></name><operator pos:line="10" pos:column="74">-&gt;<pos:position pos:line="10" pos:column="79"/></operator><name pos:line="10" pos:column="76">name<pos:position pos:line="10" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="82"/></return></block></then>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><call><name pos:line="12" pos:column="24">error<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><call><name pos:line="12" pos:column="30">_<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><literal type="string" pos:line="12" pos:column="32">"path '%s' does not have their version"<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="74">ce<pos:position pos:line="12" pos:column="76"/></name><operator pos:line="12" pos:column="76">-&gt;<pos:position pos:line="12" pos:column="81"/></operator><name pos:line="12" pos:column="78">name<pos:position pos:line="12" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></return></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

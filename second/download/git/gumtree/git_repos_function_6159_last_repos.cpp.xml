<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6159_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_push_ref_states_noquery<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">ref_states<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">states<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">remote<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">remote<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name><name pos:line="4" pos:column="33">states<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">remote<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">string_list_item<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">item<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">push_info<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">info<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">remote<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">mirror<pos:position pos:line="8" pos:column="27"/></name></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">states<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">push<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">strdup_strings<pos:position pos:line="11" pos:column="36"/></name></name> <operator pos:line="11" pos:column="37">=<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="39">1<pos:position pos:line="11" pos:column="40"/></literal></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">remote<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">push_refspec_nr<pos:position pos:line="12" pos:column="37"/></name></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <block pos:line="12" pos:column="39">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">item<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">string_list_append<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><operator pos:line="13" pos:column="43">&amp;<pos:position pos:line="13" pos:column="48"/></operator><name><name pos:line="13" pos:column="44">states<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">push<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="58">_<pos:position pos:line="13" pos:column="59"/></name><argument_list pos:line="13" pos:column="59">(<argument><expr><literal type="string" pos:line="13" pos:column="60">"(matching)"<pos:position pos:line="13" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">info<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">item<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">util<pos:position pos:line="14" pos:column="34"/></name></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <call><name pos:line="14" pos:column="37">xcalloc<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><literal type="number" pos:line="14" pos:column="45">1<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="48">sizeof<argument_list pos:line="14" pos:column="54">(<argument><expr pos:line="14" pos:column="55">struct <name pos:line="14" pos:column="62">push_info<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">info<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">status<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">PUSH_STATUS_NOTQUERIED<pos:position pos:line="15" pos:column="54"/></name></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">info<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">dest<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <call><name pos:line="16" pos:column="30">xstrdup<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name><name pos:line="16" pos:column="38">item<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">string<pos:position pos:line="16" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">remote<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">push_refspec_nr<pos:position pos:line="18" pos:column="48"/></name></name></expr>;<pos:position pos:line="18" pos:column="49"/></condition> <incr><expr><name pos:line="18" pos:column="50">i<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">++<pos:position pos:line="18" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="54"/></control> <block pos:line="18" pos:column="55">{
		<decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">refspec<pos:position pos:line="19" pos:column="31"/></name></name> <modifier pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></modifier></type><name pos:line="19" pos:column="33">spec<pos:position pos:line="19" pos:column="37"/></name> <init pos:line="19" pos:column="38">= <expr><name><name pos:line="19" pos:column="40">remote<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">push<pos:position pos:line="19" pos:column="52"/></name></name> <operator pos:line="19" pos:column="53">+<pos:position pos:line="19" pos:column="54"/></operator> <name pos:line="19" pos:column="55">i<pos:position pos:line="19" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="57"/></decl_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">spec<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">matching<pos:position pos:line="20" pos:column="35"/></name></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">item<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <call><name pos:line="21" pos:column="32">string_list_append<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><operator pos:line="21" pos:column="51">&amp;<pos:position pos:line="21" pos:column="56"/></operator><name><name pos:line="21" pos:column="52">states<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">push<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="66">_<pos:position pos:line="21" pos:column="67"/></name><argument_list pos:line="21" pos:column="67">(<argument><expr><literal type="string" pos:line="21" pos:column="68">"(matching)"<pos:position pos:line="21" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt></block></then>
		<elseif pos:line="22" pos:column="17">else <if pos:line="22" pos:column="22">if <condition pos:line="22" pos:column="25">(<expr><call><name pos:line="22" pos:column="26">strlen<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name><name pos:line="22" pos:column="33">spec<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">src<pos:position pos:line="22" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="25">item<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">string_list_append<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><operator pos:line="23" pos:column="51">&amp;<pos:position pos:line="23" pos:column="56"/></operator><name><name pos:line="23" pos:column="52">states<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">-&gt;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="60">push<pos:position pos:line="23" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="66">spec<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">-&gt;<pos:position pos:line="23" pos:column="75"/></operator><name pos:line="23" pos:column="72">src<pos:position pos:line="23" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt></block></then></if></elseif>
		<else pos:line="24" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">item<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <call><name pos:line="25" pos:column="32">string_list_append<pos:position pos:line="25" pos:column="50"/></name><argument_list pos:line="25" pos:column="50">(<argument><expr><operator pos:line="25" pos:column="51">&amp;<pos:position pos:line="25" pos:column="56"/></operator><name><name pos:line="25" pos:column="52">states<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">-&gt;<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="60">push<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="66">_<pos:position pos:line="25" pos:column="67"/></name><argument_list pos:line="25" pos:column="67">(<argument><expr><literal type="string" pos:line="25" pos:column="68">"(delete)"<pos:position pos:line="25" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt></block></else></if>

		<expr_stmt><expr><name pos:line="27" pos:column="17">info<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name><name pos:line="27" pos:column="24">item<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">util<pos:position pos:line="27" pos:column="34"/></name></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <call><name pos:line="27" pos:column="37">xcalloc<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><literal type="number" pos:line="27" pos:column="45">1<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="48">sizeof<argument_list pos:line="27" pos:column="54">(<argument><expr pos:line="27" pos:column="55">struct <name pos:line="27" pos:column="62">push_info<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">info<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">forced<pos:position pos:line="28" pos:column="29"/></name></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <name><name pos:line="28" pos:column="32">spec<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">force<pos:position pos:line="28" pos:column="43"/></name></name></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">info<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">status<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">PUSH_STATUS_NOTQUERIED<pos:position pos:line="29" pos:column="54"/></name></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">info<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">dest<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <call><name pos:line="30" pos:column="30">xstrdup<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><ternary><condition><expr><name><name pos:line="30" pos:column="38">spec<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">dst<pos:position pos:line="30" pos:column="47"/></name></name></expr> ?<pos:position pos:line="30" pos:column="49"/></condition><then pos:line="30" pos:column="49"> <expr><name><name pos:line="30" pos:column="50">spec<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">-&gt;<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="56">dst<pos:position pos:line="30" pos:column="59"/></name></name></expr> <pos:position pos:line="30" pos:column="60"/></then><else pos:line="30" pos:column="60">: <expr><name><name pos:line="30" pos:column="62">item<pos:position pos:line="30" pos:column="66"/></name><operator pos:line="30" pos:column="66">-&gt;<pos:position pos:line="30" pos:column="71"/></operator><name pos:line="30" pos:column="68">string<pos:position pos:line="30" pos:column="74"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for>
	<return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

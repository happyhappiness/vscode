<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5638_git-2.11.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">minimize<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">pack_list<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">min<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">pack_list<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">pl<pos:position pos:line="3" pos:column="29"/></name></decl>, <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="32">unique<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">NULL<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>,
		<modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="18">non_unique<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="38">min_perm<pos:position pos:line="4" pos:column="46"/></name> <init pos:line="4" pos:column="47">= <expr><name pos:line="4" pos:column="49">NULL<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">pll<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">perm<pos:position pos:line="5" pos:column="25"/></name></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="28">perm_all<pos:position pos:line="5" pos:column="36"/></name></decl>, <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="39">perm_ok<pos:position pos:line="5" pos:column="46"/></name> <init pos:line="5" pos:column="47">= <expr><name pos:line="5" pos:column="49">NULL<pos:position pos:line="5" pos:column="53"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="55">*<pos:position pos:line="5" pos:column="56"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="56">new_perm<pos:position pos:line="5" pos:column="64"/></name></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">llist<pos:position pos:line="6" pos:column="21"/></name></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">missing<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">off_t<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">min_perm_size<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><literal type="number" pos:line="7" pos:column="31">0<pos:position pos:line="7" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="34">perm_size<pos:position pos:line="7" pos:column="43"/></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">n<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">pl<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">local_packs<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">pl<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition> <block pos:line="11" pos:column="20">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">pl<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">unique_objects<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">size<pos:position pos:line="12" pos:column="45"/></name></name></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="25">pack_list_insert<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><operator pos:line="13" pos:column="42">&amp;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="43">unique<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">pl<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="14" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="25">pack_list_insert<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="43">non_unique<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="55">pl<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">pl<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="22">pl<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">next<pos:position pos:line="16" pos:column="30"/></name></name></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></while>
	<comment type="block" pos:line="18" pos:column="9">/* find out which objects are missing from the set of unique packs */</comment>
	<expr_stmt><expr><name pos:line="19" pos:column="9">missing<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">llist_copy<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">all_objects<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">pl<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">unique<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">pl<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition> <block pos:line="21" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">llist_sorted_difference_inplace<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">missing<pos:position pos:line="22" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="58">pl<pos:position pos:line="22" pos:column="60"/></name><operator pos:line="22" pos:column="60">-&gt;<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="62">all_objects<pos:position pos:line="22" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">pl<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name><name pos:line="23" pos:column="22">pl<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">next<pos:position pos:line="23" pos:column="30"/></name></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>

	<comment type="block" pos:line="26" pos:column="9">/* return if there are no objects missing from the unique set */</comment>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">missing<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">size<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">==<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr>)<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32"> <block pos:line="27" pos:column="33">{
		<expr_stmt><expr><operator pos:line="28" pos:column="17">*<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">min<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">unique<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
		<return pos:line="29" pos:column="17">return;<pos:position pos:line="29" pos:column="24"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="32" pos:column="9">/* find the permutations which contain all missing objects */</comment>
	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">n<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">1<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">n<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;=<pos:position pos:line="33" pos:column="28"/></operator> <call><name pos:line="33" pos:column="26">pack_list_size<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">non_unique<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call> <operator pos:line="33" pos:column="53">&amp;&amp;<pos:position pos:line="33" pos:column="63"/></operator> <operator pos:line="33" pos:column="56">!<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">perm_ok<pos:position pos:line="33" pos:column="64"/></name></expr>;<pos:position pos:line="33" pos:column="65"/></condition> <incr><expr><name pos:line="33" pos:column="66">n<pos:position pos:line="33" pos:column="67"/></name><operator pos:line="33" pos:column="67">++<pos:position pos:line="33" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="70"/></control> <block pos:line="33" pos:column="71">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">perm_all<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">perm<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">=<pos:position pos:line="34" pos:column="34"/></operator> <call><name pos:line="34" pos:column="35">get_permutations<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">non_unique<pos:position pos:line="34" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">n<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
		<while pos:line="35" pos:column="17">while <condition pos:line="35" pos:column="23">(<expr><name pos:line="35" pos:column="24">perm<pos:position pos:line="35" pos:column="28"/></name></expr>)<pos:position pos:line="35" pos:column="29"/></condition> <block pos:line="35" pos:column="30">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><call><name pos:line="36" pos:column="29">is_superset<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name><name pos:line="36" pos:column="41">perm<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">pl<pos:position pos:line="36" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">missing<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="60"/></condition><then pos:line="36" pos:column="60"> <block pos:line="36" pos:column="61">{
				<expr_stmt><expr><name pos:line="37" pos:column="33">new_perm<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">=<pos:position pos:line="37" pos:column="43"/></operator> <call><name pos:line="37" pos:column="44">xmalloc<pos:position pos:line="37" pos:column="51"/></name><argument_list pos:line="37" pos:column="51">(<argument><expr><sizeof pos:line="37" pos:column="52">sizeof<argument_list pos:line="37" pos:column="58">(<argument><expr pos:line="37" pos:column="59">struct <name pos:line="37" pos:column="66">pll<pos:position pos:line="37" pos:column="69"/></name></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">memcpy<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name pos:line="38" pos:column="40">new_perm<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">perm<pos:position pos:line="38" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="56">sizeof<argument_list pos:line="38" pos:column="62">(<argument><expr pos:line="38" pos:column="63">struct <name pos:line="38" pos:column="70">pll<pos:position pos:line="38" pos:column="73"/></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="39" pos:column="33">new_perm<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">next<pos:position pos:line="39" pos:column="47"/></name></name> <operator pos:line="39" pos:column="48">=<pos:position pos:line="39" pos:column="49"/></operator> <name pos:line="39" pos:column="50">perm_ok<pos:position pos:line="39" pos:column="57"/></name></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="40" pos:column="33">perm_ok<pos:position pos:line="40" pos:column="40"/></name> <operator pos:line="40" pos:column="41">=<pos:position pos:line="40" pos:column="42"/></operator> <name pos:line="40" pos:column="43">new_perm<pos:position pos:line="40" pos:column="51"/></name></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="41" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="42" pos:column="25">perm<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <name><name pos:line="42" pos:column="32">perm<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">next<pos:position pos:line="42" pos:column="42"/></name></name></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></while>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">perm_ok<pos:position pos:line="44" pos:column="28"/></name></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29">
			<block type="pseudo"><break pos:line="45" pos:column="25">break;<pos:position pos:line="45" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">pll_free<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">perm_all<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></for>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">perm_ok<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">==<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">NULL<pos:position pos:line="48" pos:column="28"/></name></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">die<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><literal type="string" pos:line="49" pos:column="21">"Internal error: No complete sets found!"<pos:position pos:line="49" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="51" pos:column="9">/* find the permutation with the smallest size */</comment>
	<expr_stmt><expr><name pos:line="52" pos:column="9">perm<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <name pos:line="52" pos:column="16">perm_ok<pos:position pos:line="52" pos:column="23"/></name></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
	<while pos:line="53" pos:column="9">while <condition pos:line="53" pos:column="15">(<expr><name pos:line="53" pos:column="16">perm<pos:position pos:line="53" pos:column="20"/></name></expr>)<pos:position pos:line="53" pos:column="21"/></condition> <block pos:line="53" pos:column="22">{
		<expr_stmt><expr><name pos:line="54" pos:column="17">perm_size<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">=<pos:position pos:line="54" pos:column="28"/></operator> <call><name pos:line="54" pos:column="29">pack_set_bytecount<pos:position pos:line="54" pos:column="47"/></name><argument_list pos:line="54" pos:column="47">(<argument><expr><name><name pos:line="54" pos:column="48">perm<pos:position pos:line="54" pos:column="52"/></name><operator pos:line="54" pos:column="52">-&gt;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="54">pl<pos:position pos:line="54" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><operator pos:line="55" pos:column="21">!<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">min_perm_size<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">||<pos:position pos:line="55" pos:column="38"/></operator> <name pos:line="55" pos:column="39">min_perm_size<pos:position pos:line="55" pos:column="52"/></name> <operator pos:line="55" pos:column="53">&gt;<pos:position pos:line="55" pos:column="57"/></operator> <name pos:line="55" pos:column="55">perm_size<pos:position pos:line="55" pos:column="64"/></name></expr>)<pos:position pos:line="55" pos:column="65"/></condition><then pos:line="55" pos:column="65"> <block pos:line="55" pos:column="66">{
			<expr_stmt><expr><name pos:line="56" pos:column="25">min_perm_size<pos:position pos:line="56" pos:column="38"/></name> <operator pos:line="56" pos:column="39">=<pos:position pos:line="56" pos:column="40"/></operator> <name pos:line="56" pos:column="41">perm_size<pos:position pos:line="56" pos:column="50"/></name></expr>;<pos:position pos:line="56" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">min_perm<pos:position pos:line="57" pos:column="33"/></name> <operator pos:line="57" pos:column="34">=<pos:position pos:line="57" pos:column="35"/></operator> <name><name pos:line="57" pos:column="36">perm<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">pl<pos:position pos:line="57" pos:column="44"/></name></name></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="59" pos:column="17">perm<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <name><name pos:line="59" pos:column="24">perm<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">next<pos:position pos:line="59" pos:column="34"/></name></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="61" pos:column="9">*<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">min<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">min_perm<pos:position pos:line="61" pos:column="24"/></name></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
	<comment type="block" pos:line="62" pos:column="9">/* add the unique packs to the list */</comment>
	<expr_stmt><expr><name pos:line="63" pos:column="9">pl<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <name pos:line="63" pos:column="14">unique<pos:position pos:line="63" pos:column="20"/></name></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
	<while pos:line="64" pos:column="9">while <condition pos:line="64" pos:column="15">(<expr><name pos:line="64" pos:column="16">pl<pos:position pos:line="64" pos:column="18"/></name></expr>)<pos:position pos:line="64" pos:column="19"/></condition> <block pos:line="64" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">pack_list_insert<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">min<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">pl<pos:position pos:line="65" pos:column="41"/></name></expr></argument>)<pos:position pos:line="65" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="66" pos:column="17">pl<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <name><name pos:line="66" pos:column="22">pl<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">next<pos:position pos:line="66" pos:column="30"/></name></name></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></while>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

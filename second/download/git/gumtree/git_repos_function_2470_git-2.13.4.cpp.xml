<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2470_git-2.13.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">flush_inbody_header_accum<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">mailinfo<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">mi<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">mi<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">inbody_header_accum<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">.<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">len<pos:position pos:line="3" pos:column="41"/></name></name></expr>)<pos:position pos:line="3" pos:column="42"/></condition><then pos:line="3" pos:column="42">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">check_header<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">mi<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="31">&amp;<pos:position pos:line="5" pos:column="36"/></operator><name><name pos:line="5" pos:column="32">mi<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">inbody_header_accum<pos:position pos:line="5" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="57">mi<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">-&gt;<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="61">s_hdr_data<pos:position pos:line="5" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="73">0<pos:position pos:line="5" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="76"/></condition><then pos:line="5" pos:column="76">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">die<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="string" pos:line="6" pos:column="21">"BUG: inbody_header_accum, if not empty, must always contain a valid in-body header"<pos:position pos:line="6" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="107"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">strbuf_reset<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name><name pos:line="7" pos:column="23">mi<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">inbody_header_accum<pos:position pos:line="7" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

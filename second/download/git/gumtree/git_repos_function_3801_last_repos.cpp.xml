<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3801_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_flattened_path<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">strbuf<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">out<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">s<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name><name pos:line="3" pos:column="20">out<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">len<pos:position pos:line="3" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">strbuf_addstr<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">out<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">s<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init pos:line="5" pos:column="14">;<pos:position pos:line="5" pos:column="15"/></init> <condition><expr><name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&lt;<pos:position pos:line="5" pos:column="22"/></operator> <name><name pos:line="5" pos:column="20">out<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">len<pos:position pos:line="5" pos:column="28"/></name></name></expr>;<pos:position pos:line="5" pos:column="29"/></condition> <incr><expr><name pos:line="5" pos:column="30">i<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">++<pos:position pos:line="5" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="34"/></control>
		<block type="pseudo"><if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name><name pos:line="6" pos:column="21">out<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">buf<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><name pos:line="6" pos:column="30">i<pos:position pos:line="6" pos:column="31"/></name></expr>]<pos:position pos:line="6" pos:column="32"/></index></name> <operator pos:line="6" pos:column="33">==<pos:position pos:line="6" pos:column="35"/></operator> <literal type="char" pos:line="6" pos:column="36">'/'<pos:position pos:line="6" pos:column="39"/></literal></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="25">out<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">buf<pos:position pos:line="7" pos:column="33"/></name><index pos:line="7" pos:column="33">[<expr><name pos:line="7" pos:column="34">i<pos:position pos:line="7" pos:column="35"/></name></expr>]<pos:position pos:line="7" pos:column="36"/></index></name> <operator pos:line="7" pos:column="37">=<pos:position pos:line="7" pos:column="38"/></operator> <literal type="char" pos:line="7" pos:column="39">'_'<pos:position pos:line="7" pos:column="42"/></literal></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt></block></then></if></block></for>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

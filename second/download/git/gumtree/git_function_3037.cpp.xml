<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_3037.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">make_backslash_path<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">path<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name><index pos:line="3" pos:column="24">[<expr><name pos:line="3" pos:column="25">PATH_MAX<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">+<pos:position pos:line="3" pos:column="35"/></operator> <literal type="number" pos:line="3" pos:column="36">1<pos:position pos:line="3" pos:column="37"/></literal></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">strlcpy<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">buf<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="26">path<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="32">PATH_MAX<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call> <operator pos:line="6" pos:column="42">&gt;=<pos:position pos:line="6" pos:column="47"/></operator> <name pos:line="6" pos:column="45">PATH_MAX<pos:position pos:line="6" pos:column="53"/></name></expr>)<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">die<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="string" pos:line="7" pos:column="21">"Too long path: %.*s"<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="44">60<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">path<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt></block></then></if>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">c<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">buf<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></init> <condition><expr><operator pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">c<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></condition> <incr><expr><name pos:line="9" pos:column="27">c<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">++<pos:position pos:line="9" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="31"/></control> <block pos:line="9" pos:column="32">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">c<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <literal type="char" pos:line="10" pos:column="27">'/'<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">c<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="char" pos:line="11" pos:column="30">'\\'<pos:position pos:line="11" pos:column="34"/></literal></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></for>
	<return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">buf<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

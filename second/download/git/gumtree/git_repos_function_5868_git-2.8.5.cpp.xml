<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5868_git-2.8.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">handle_node<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">uint32_t<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">type<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name><name pos:line="3" pos:column="31">node_ctx<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">.<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">type<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">int<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">have_props<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">node_ctx<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">.<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">prop_length<pos:position pos:line="4" pos:column="52"/></name></name> <operator pos:line="4" pos:column="53">!=<pos:position pos:line="4" pos:column="55"/></operator> <operator pos:line="4" pos:column="56">-<pos:position pos:line="4" pos:column="57"/></operator><literal type="number" pos:line="4" pos:column="57">1<pos:position pos:line="4" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">int<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">have_text<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name><name pos:line="5" pos:column="31">node_ctx<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">text_length<pos:position pos:line="5" pos:column="51"/></name></name> <operator pos:line="5" pos:column="52">!=<pos:position pos:line="5" pos:column="54"/></operator> <operator pos:line="5" pos:column="55">-<pos:position pos:line="5" pos:column="56"/></operator><literal type="number" pos:line="5" pos:column="56">1<pos:position pos:line="5" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
	<comment type="block" pos:line="6" pos:column="9">/*
	 * Old text for this node:
	 *  NULL	- directory or bug
	 *  empty_blob	- empty
	 *  "&lt;dataref&gt;"	- data retrievable from fast-import
	 */</comment>
	<decl_stmt><decl><specifier pos:line="12" pos:column="9">static<pos:position pos:line="12" pos:column="15"/></specifier> <type><specifier pos:line="12" pos:column="16">const<pos:position pos:line="12" pos:column="21"/></specifier> <name pos:line="12" pos:column="22">char<pos:position pos:line="12" pos:column="26"/></name> <modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier><specifier pos:line="12" pos:column="28">const<pos:position pos:line="12" pos:column="33"/></specifier></type> <name pos:line="12" pos:column="34">empty_blob<pos:position pos:line="12" pos:column="44"/></name> <init pos:line="12" pos:column="45">= <expr><literal type="string" pos:line="12" pos:column="47">"::empty::"<pos:position pos:line="12" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">old_data<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">uint32_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">old_mode<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><name pos:line="14" pos:column="29">REPO_MODE_BLB<pos:position pos:line="14" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">node_ctx<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">action<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">NODEACT_DELETE<pos:position pos:line="16" pos:column="46"/></name></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47"> <block pos:line="16" pos:column="48">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">have_text<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">||<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">have_props<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">||<pos:position pos:line="17" pos:column="47"/></operator> <name><name pos:line="17" pos:column="48">node_ctx<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">srcRev<pos:position pos:line="17" pos:column="63"/></name></name></expr>)<pos:position pos:line="17" pos:column="64"/></condition><then pos:line="17" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">die<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><literal type="string" pos:line="18" pos:column="29">"invalid dump: deletion node has "<pos:position pos:line="18" pos:column="63"/></literal>
				<literal type="string" pos:line="19" pos:column="33">"copyfrom info, text, or properties"<pos:position pos:line="19" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">repo_delete<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">node_ctx<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">.<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">dst<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">.<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">buf<pos:position pos:line="20" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
		<return pos:line="21" pos:column="17">return;<pos:position pos:line="21" pos:column="24"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">node_ctx<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">action<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">==<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">NODEACT_REPLACE<pos:position pos:line="23" pos:column="47"/></name></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48"> <block pos:line="23" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">repo_delete<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name><name pos:line="24" pos:column="29">node_ctx<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">.<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">dst<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">buf<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">node_ctx<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">action<pos:position pos:line="25" pos:column="32"/></name></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="35">NODEACT_ADD<pos:position pos:line="25" pos:column="46"/></name></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">node_ctx<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">srcRev<pos:position pos:line="27" pos:column="28"/></name></name></expr>)<pos:position pos:line="27" pos:column="29"/></condition><then pos:line="27" pos:column="29"> <block pos:line="27" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">repo_copy<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name><name pos:line="28" pos:column="27">node_ctx<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">.<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">srcRev<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="44">node_ctx<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">.<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">src<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">.<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">buf<pos:position pos:line="28" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="62">node_ctx<pos:position pos:line="28" pos:column="70"/></name><operator pos:line="28" pos:column="70">.<pos:position pos:line="28" pos:column="71"/></operator><name pos:line="28" pos:column="71">dst<pos:position pos:line="28" pos:column="74"/></name><operator pos:line="28" pos:column="74">.<pos:position pos:line="28" pos:column="75"/></operator><name pos:line="28" pos:column="75">buf<pos:position pos:line="28" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">node_ctx<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">action<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">==<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="40">NODEACT_ADD<pos:position pos:line="29" pos:column="51"/></name></expr>)<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="25">node_ctx<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">.<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">action<pos:position pos:line="30" pos:column="40"/></name></name> <operator pos:line="30" pos:column="41">=<pos:position pos:line="30" pos:column="42"/></operator> <name pos:line="30" pos:column="43">NODEACT_CHANGE<pos:position pos:line="30" pos:column="57"/></name></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">have_text<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&amp;&amp;<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="26">type<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">==<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="34">REPO_MODE_DIR<pos:position pos:line="32" pos:column="47"/></name></expr>)<pos:position pos:line="32" pos:column="48"/></condition><then pos:line="32" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">die<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"invalid dump: directories cannot have text attached"<pos:position pos:line="33" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="35" pos:column="9">/*
	 * Find old content (old_data) and decide on the new mode.
	 */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">node_ctx<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">action<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">==<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">NODEACT_CHANGE<pos:position pos:line="38" pos:column="46"/></name> <operator pos:line="38" pos:column="47">&amp;&amp;<pos:position pos:line="38" pos:column="57"/></operator> <operator pos:line="38" pos:column="50">!<pos:position pos:line="38" pos:column="51"/></operator><operator pos:line="38" pos:column="51">*<pos:position pos:line="38" pos:column="52"/></operator><name><name pos:line="38" pos:column="52">node_ctx<pos:position pos:line="38" pos:column="60"/></name><operator pos:line="38" pos:column="60">.<pos:position pos:line="38" pos:column="61"/></operator><name pos:line="38" pos:column="61">dst<pos:position pos:line="38" pos:column="64"/></name><operator pos:line="38" pos:column="64">.<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="65">buf<pos:position pos:line="38" pos:column="68"/></name></name></expr>)<pos:position pos:line="38" pos:column="69"/></condition><then pos:line="38" pos:column="69"> <block pos:line="38" pos:column="70">{
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">type<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">!=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">REPO_MODE_DIR<pos:position pos:line="39" pos:column="42"/></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">die<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><literal type="string" pos:line="40" pos:column="29">"invalid dump: root of tree is not a regular file"<pos:position pos:line="40" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="81"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="41" pos:column="17">old_data<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">NULL<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <elseif pos:line="42" pos:column="11">else <if pos:line="42" pos:column="16">if <condition pos:line="42" pos:column="19">(<expr><name><name pos:line="42" pos:column="20">node_ctx<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">action<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">==<pos:position pos:line="42" pos:column="38"/></operator> <name pos:line="42" pos:column="39">NODEACT_CHANGE<pos:position pos:line="42" pos:column="53"/></name></expr>)<pos:position pos:line="42" pos:column="54"/></condition><then pos:line="42" pos:column="54"> <block pos:line="42" pos:column="55">{
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">uint32_t<pos:position pos:line="43" pos:column="25"/></name></type> <name pos:line="43" pos:column="26">mode<pos:position pos:line="43" pos:column="30"/></name></decl>;<pos:position pos:line="43" pos:column="31"/></decl_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">old_data<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <call><name pos:line="44" pos:column="28">repo_read_path<pos:position pos:line="44" pos:column="42"/></name><argument_list pos:line="44" pos:column="42">(<argument><expr><name><name pos:line="44" pos:column="43">node_ctx<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">.<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="52">dst<pos:position pos:line="44" pos:column="55"/></name><operator pos:line="44" pos:column="55">.<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="56">buf<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="61">&amp;<pos:position pos:line="44" pos:column="66"/></operator><name pos:line="44" pos:column="62">mode<pos:position pos:line="44" pos:column="66"/></name></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">mode<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">==<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">REPO_MODE_DIR<pos:position pos:line="45" pos:column="42"/></name> <operator pos:line="45" pos:column="43">&amp;&amp;<pos:position pos:line="45" pos:column="53"/></operator> <name pos:line="45" pos:column="46">type<pos:position pos:line="45" pos:column="50"/></name> <operator pos:line="45" pos:column="51">!=<pos:position pos:line="45" pos:column="53"/></operator> <name pos:line="45" pos:column="54">REPO_MODE_DIR<pos:position pos:line="45" pos:column="67"/></name></expr>)<pos:position pos:line="45" pos:column="68"/></condition><then pos:line="45" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">die<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><literal type="string" pos:line="46" pos:column="29">"invalid dump: cannot modify a directory into a file"<pos:position pos:line="46" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="84"/></expr_stmt></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">mode<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">!=<pos:position pos:line="47" pos:column="28"/></operator> <name pos:line="47" pos:column="29">REPO_MODE_DIR<pos:position pos:line="47" pos:column="42"/></name> <operator pos:line="47" pos:column="43">&amp;&amp;<pos:position pos:line="47" pos:column="53"/></operator> <name pos:line="47" pos:column="46">type<pos:position pos:line="47" pos:column="50"/></name> <operator pos:line="47" pos:column="51">==<pos:position pos:line="47" pos:column="53"/></operator> <name pos:line="47" pos:column="54">REPO_MODE_DIR<pos:position pos:line="47" pos:column="67"/></name></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">die<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><literal type="string" pos:line="48" pos:column="29">"invalid dump: cannot modify a file into a directory"<pos:position pos:line="48" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="84"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">node_ctx<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">.<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="26">type<pos:position pos:line="49" pos:column="30"/></name></name> <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <name pos:line="49" pos:column="33">mode<pos:position pos:line="49" pos:column="37"/></name></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="50" pos:column="17">old_mode<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">=<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">mode<pos:position pos:line="50" pos:column="32"/></name></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif> <elseif pos:line="51" pos:column="11">else <if pos:line="51" pos:column="16">if <condition pos:line="51" pos:column="19">(<expr><name><name pos:line="51" pos:column="20">node_ctx<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">.<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="29">action<pos:position pos:line="51" pos:column="35"/></name></name> <operator pos:line="51" pos:column="36">==<pos:position pos:line="51" pos:column="38"/></operator> <name pos:line="51" pos:column="39">NODEACT_ADD<pos:position pos:line="51" pos:column="50"/></name></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51"> <block pos:line="51" pos:column="52">{
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">type<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">==<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="29">REPO_MODE_DIR<pos:position pos:line="52" pos:column="42"/></name></expr>)<pos:position pos:line="52" pos:column="43"/></condition><then pos:line="52" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="25">old_data<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">=<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">NULL<pos:position pos:line="53" pos:column="40"/></name></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt></block></then>
		<elseif pos:line="54" pos:column="17">else <if pos:line="54" pos:column="22">if <condition pos:line="54" pos:column="25">(<expr><name pos:line="54" pos:column="26">have_text<pos:position pos:line="54" pos:column="35"/></name></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="25">old_data<pos:position pos:line="55" pos:column="33"/></name> <operator pos:line="55" pos:column="34">=<pos:position pos:line="55" pos:column="35"/></operator> <name pos:line="55" pos:column="36">empty_blob<pos:position pos:line="55" pos:column="46"/></name></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt></block></then></if></elseif>
		<else pos:line="56" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">die<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><literal type="string" pos:line="57" pos:column="29">"invalid dump: adds node without text"<pos:position pos:line="57" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="69"/></expr_stmt></block></else></if>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if></elseif> <else pos:line="58" pos:column="11">else <block pos:line="58" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">die<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><literal type="string" pos:line="59" pos:column="21">"invalid dump: Node-path block lacks Node-action"<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="62" pos:column="9">/*
	 * Adjust mode to reflect properties.
	 */</comment>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">have_props<pos:position pos:line="65" pos:column="23"/></name></expr>)<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24"> <block pos:line="65" pos:column="25">{
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><operator pos:line="66" pos:column="21">!<pos:position pos:line="66" pos:column="22"/></operator><name><name pos:line="66" pos:column="22">node_ctx<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">.<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="31">prop_delta<pos:position pos:line="66" pos:column="41"/></name></name></expr>)<pos:position pos:line="66" pos:column="42"/></condition><then pos:line="66" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="25">node_ctx<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">.<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">type<pos:position pos:line="67" pos:column="38"/></name></name> <operator pos:line="67" pos:column="39">=<pos:position pos:line="67" pos:column="40"/></operator> <name pos:line="67" pos:column="41">type<pos:position pos:line="67" pos:column="45"/></name></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt></block></then></if>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name><name pos:line="68" pos:column="21">node_ctx<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">.<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">prop_length<pos:position pos:line="68" pos:column="41"/></name></name></expr>)<pos:position pos:line="68" pos:column="42"/></condition><then pos:line="68" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">read_props<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">()<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="38"/></expr_stmt></block></then></if>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="72" pos:column="9">/*
	 * Save the result.
	 */</comment>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">type<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">==<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">REPO_MODE_DIR<pos:position pos:line="75" pos:column="34"/></name></expr>)<pos:position pos:line="75" pos:column="35"/></condition><then pos:line="75" pos:column="35">	<comment type="block" pos:line="75" pos:column="41">/* directories are not tracked. */</comment>
		<block type="pseudo"><return pos:line="76" pos:column="17">return;<pos:position pos:line="76" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">assert<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><name pos:line="77" pos:column="16">old_data<pos:position pos:line="77" pos:column="24"/></name></expr></argument>)<pos:position pos:line="77" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="26"/></expr_stmt>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">old_data<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">==<pos:position pos:line="78" pos:column="24"/></operator> <name pos:line="78" pos:column="25">empty_blob<pos:position pos:line="78" pos:column="35"/></name></expr>)<pos:position pos:line="78" pos:column="36"/></condition><then pos:line="78" pos:column="36">
		<comment type="block" pos:line="79" pos:column="17">/* For the fast_export_* functions, NULL means empty. */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="17">old_data<pos:position pos:line="80" pos:column="25"/></name> <operator pos:line="80" pos:column="26">=<pos:position pos:line="80" pos:column="27"/></operator> <name pos:line="80" pos:column="28">NULL<pos:position pos:line="80" pos:column="32"/></name></expr>;<pos:position pos:line="80" pos:column="33"/></expr_stmt></block></then></if>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">have_text<pos:position pos:line="81" pos:column="23"/></name></expr>)<pos:position pos:line="81" pos:column="24"/></condition><then pos:line="81" pos:column="24"> <block pos:line="81" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">fast_export_modify<pos:position pos:line="82" pos:column="35"/></name><argument_list pos:line="82" pos:column="35">(<argument><expr><name><name pos:line="82" pos:column="36">node_ctx<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">.<pos:position pos:line="82" pos:column="45"/></operator><name pos:line="82" pos:column="45">dst<pos:position pos:line="82" pos:column="48"/></name><operator pos:line="82" pos:column="48">.<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="49">buf<pos:position pos:line="82" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="54">node_ctx<pos:position pos:line="82" pos:column="62"/></name><operator pos:line="82" pos:column="62">.<pos:position pos:line="82" pos:column="63"/></operator><name pos:line="82" pos:column="63">type<pos:position pos:line="82" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="69">old_data<pos:position pos:line="82" pos:column="77"/></name></expr></argument>)<pos:position pos:line="82" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="79"/></expr_stmt>
		<return pos:line="83" pos:column="17">return;<pos:position pos:line="83" pos:column="24"/></return>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><operator pos:line="85" pos:column="13">!<pos:position pos:line="85" pos:column="14"/></operator><name><name pos:line="85" pos:column="14">node_ctx<pos:position pos:line="85" pos:column="22"/></name><operator pos:line="85" pos:column="22">.<pos:position pos:line="85" pos:column="23"/></operator><name pos:line="85" pos:column="23">text_delta<pos:position pos:line="85" pos:column="33"/></name></name></expr>)<pos:position pos:line="85" pos:column="34"/></condition><then pos:line="85" pos:column="34"> <block pos:line="85" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">fast_export_modify<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name><name pos:line="86" pos:column="36">node_ctx<pos:position pos:line="86" pos:column="44"/></name><operator pos:line="86" pos:column="44">.<pos:position pos:line="86" pos:column="45"/></operator><name pos:line="86" pos:column="45">dst<pos:position pos:line="86" pos:column="48"/></name><operator pos:line="86" pos:column="48">.<pos:position pos:line="86" pos:column="49"/></operator><name pos:line="86" pos:column="49">buf<pos:position pos:line="86" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="54">node_ctx<pos:position pos:line="86" pos:column="62"/></name><operator pos:line="86" pos:column="62">.<pos:position pos:line="86" pos:column="63"/></operator><name pos:line="86" pos:column="63">type<pos:position pos:line="86" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="69">"inline"<pos:position pos:line="86" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">fast_export_data<pos:position pos:line="87" pos:column="33"/></name><argument_list pos:line="87" pos:column="33">(<argument><expr><name><name pos:line="87" pos:column="34">node_ctx<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">.<pos:position pos:line="87" pos:column="43"/></operator><name pos:line="87" pos:column="43">type<pos:position pos:line="87" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="49">node_ctx<pos:position pos:line="87" pos:column="57"/></name><operator pos:line="87" pos:column="57">.<pos:position pos:line="87" pos:column="58"/></operator><name pos:line="87" pos:column="58">text_length<pos:position pos:line="87" pos:column="69"/></name></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="71">&amp;<pos:position pos:line="87" pos:column="76"/></operator><name pos:line="87" pos:column="72">input<pos:position pos:line="87" pos:column="77"/></name></expr></argument>)<pos:position pos:line="87" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="79"/></expr_stmt>
		<return pos:line="88" pos:column="17">return;<pos:position pos:line="88" pos:column="24"/></return>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">fast_export_modify<pos:position pos:line="90" pos:column="27"/></name><argument_list pos:line="90" pos:column="27">(<argument><expr><name><name pos:line="90" pos:column="28">node_ctx<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">.<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="37">dst<pos:position pos:line="90" pos:column="40"/></name><operator pos:line="90" pos:column="40">.<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="41">buf<pos:position pos:line="90" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="46">node_ctx<pos:position pos:line="90" pos:column="54"/></name><operator pos:line="90" pos:column="54">.<pos:position pos:line="90" pos:column="55"/></operator><name pos:line="90" pos:column="55">type<pos:position pos:line="90" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="61">"inline"<pos:position pos:line="90" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">fast_export_blob_delta<pos:position pos:line="91" pos:column="31"/></name><argument_list pos:line="91" pos:column="31">(<argument><expr><name><name pos:line="91" pos:column="32">node_ctx<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">.<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="41">type<pos:position pos:line="91" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="47">old_mode<pos:position pos:line="91" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="57">old_data<pos:position pos:line="91" pos:column="65"/></name></expr></argument>,
				<argument><expr><name><name pos:line="92" pos:column="33">node_ctx<pos:position pos:line="92" pos:column="41"/></name><operator pos:line="92" pos:column="41">.<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="42">text_length<pos:position pos:line="92" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="55">&amp;<pos:position pos:line="92" pos:column="60"/></operator><name pos:line="92" pos:column="56">input<pos:position pos:line="92" pos:column="61"/></name></expr></argument>)<pos:position pos:line="92" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="63"/></expr_stmt>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1181_git-2.3.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">strip_path_suffix<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">path<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">suffix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">path_len<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><call><name pos:line="3" pos:column="24">strlen<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><name pos:line="3" pos:column="31">path<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="38">suffix_len<pos:position pos:line="3" pos:column="48"/></name> <init pos:line="3" pos:column="49">= <expr><call><name pos:line="3" pos:column="51">strlen<pos:position pos:line="3" pos:column="57"/></name><argument_list pos:line="3" pos:column="57">(<argument><expr><name pos:line="3" pos:column="58">suffix<pos:position pos:line="3" pos:column="64"/></name></expr></argument>)<pos:position pos:line="3" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">suffix_len<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition> <block pos:line="5" pos:column="28">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">path_len<pos:position pos:line="6" pos:column="30"/></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><name pos:line="7" pos:column="32">NULL<pos:position pos:line="7" pos:column="36"/></name></expr>;<pos:position pos:line="7" pos:column="37"/></return></block></then></if>

		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">is_dir_sep<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name><name pos:line="9" pos:column="32">path<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><name pos:line="9" pos:column="37">path_len<pos:position pos:line="9" pos:column="45"/></name> <operator pos:line="9" pos:column="46">-<pos:position pos:line="9" pos:column="47"/></operator> <literal type="number" pos:line="9" pos:column="48">1<pos:position pos:line="9" pos:column="49"/></literal></expr>]<pos:position pos:line="9" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52"> <block pos:line="9" pos:column="53">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><operator pos:line="10" pos:column="29">!<pos:position pos:line="10" pos:column="30"/></operator><call><name pos:line="10" pos:column="30">is_dir_sep<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><name><name pos:line="10" pos:column="41">suffix<pos:position pos:line="10" pos:column="47"/></name><index pos:line="10" pos:column="47">[<expr><name pos:line="10" pos:column="48">suffix_len<pos:position pos:line="10" pos:column="58"/></name> <operator pos:line="10" pos:column="59">-<pos:position pos:line="10" pos:column="60"/></operator> <literal type="number" pos:line="10" pos:column="61">1<pos:position pos:line="10" pos:column="62"/></literal></expr>]<pos:position pos:line="10" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65">
				<block type="pseudo"><return pos:line="11" pos:column="33">return <expr><name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name></expr>;<pos:position pos:line="11" pos:column="45"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="12" pos:column="25">path_len<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">=<pos:position pos:line="12" pos:column="35"/></operator> <call><name pos:line="12" pos:column="36">chomp_trailing_dir_sep<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">(<argument><expr><name pos:line="12" pos:column="59">path<pos:position pos:line="12" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">path_len<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name pos:line="13" pos:column="25">suffix_len<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">=<pos:position pos:line="13" pos:column="37"/></operator> <call><name pos:line="13" pos:column="38">chomp_trailing_dir_sep<pos:position pos:line="13" pos:column="60"/></name><argument_list pos:line="13" pos:column="60">(<argument><expr><name pos:line="13" pos:column="61">suffix<pos:position pos:line="13" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="69">suffix_len<pos:position pos:line="13" pos:column="79"/></name></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><name><name pos:line="15" pos:column="26">path<pos:position pos:line="15" pos:column="30"/></name><index pos:line="15" pos:column="30">[<expr><operator pos:line="15" pos:column="31">--<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">path_len<pos:position pos:line="15" pos:column="41"/></name></expr>]<pos:position pos:line="15" pos:column="42"/></index></name> <operator pos:line="15" pos:column="43">!=<pos:position pos:line="15" pos:column="45"/></operator> <name><name pos:line="15" pos:column="46">suffix<pos:position pos:line="15" pos:column="52"/></name><index pos:line="15" pos:column="52">[<expr><operator pos:line="15" pos:column="53">--<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="55">suffix_len<pos:position pos:line="15" pos:column="65"/></name></expr>]<pos:position pos:line="15" pos:column="66"/></index></name></expr>)<pos:position pos:line="15" pos:column="67"/></condition><then pos:line="15" pos:column="67">
			<block type="pseudo"><return pos:line="16" pos:column="25">return <expr><name pos:line="16" pos:column="32">NULL<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="17" pos:column="10"/></block></while>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">path_len<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">&amp;&amp;<pos:position pos:line="19" pos:column="32"/></operator> <operator pos:line="19" pos:column="25">!<pos:position pos:line="19" pos:column="26"/></operator><call><name pos:line="19" pos:column="26">is_dir_sep<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name><name pos:line="19" pos:column="37">path<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><name pos:line="19" pos:column="42">path_len<pos:position pos:line="19" pos:column="50"/></name> <operator pos:line="19" pos:column="51">-<pos:position pos:line="19" pos:column="52"/></operator> <literal type="number" pos:line="19" pos:column="53">1<pos:position pos:line="19" pos:column="54"/></literal></expr>]<pos:position pos:line="19" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="57"/></condition><then pos:line="19" pos:column="57">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">xstrndup<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">path<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="31">chomp_trailing_dir_sep<pos:position pos:line="21" pos:column="53"/></name><argument_list pos:line="21" pos:column="53">(<argument><expr><name pos:line="21" pos:column="54">path<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="60">path_len<pos:position pos:line="21" pos:column="68"/></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

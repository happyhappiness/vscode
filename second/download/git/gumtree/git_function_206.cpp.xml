<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_206.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fn_out_consume<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">priv<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">line<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">unsigned<pos:position pos:line="1" pos:column="60"/></name> <name pos:line="1" pos:column="61">long<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">emit_callback<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">ecbdata<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">priv<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">meta<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">diff_get_color<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><name><name pos:line="4" pos:column="43">ecbdata<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">color_diff<pos:position pos:line="4" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="64">DIFF_METAINFO<pos:position pos:line="4" pos:column="77"/></name></expr></argument>)<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">context<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">diff_get_color<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name><name pos:line="5" pos:column="46">ecbdata<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">-&gt;<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="55">color_diff<pos:position pos:line="5" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="67">DIFF_CONTEXT<pos:position pos:line="5" pos:column="79"/></name></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="81"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">reset<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">diff_get_color<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name><name pos:line="6" pos:column="44">ecbdata<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">color_diff<pos:position pos:line="6" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="65">DIFF_RESET<pos:position pos:line="6" pos:column="75"/></name></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="77"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">diff_options<pos:position pos:line="7" pos:column="28"/></name></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">o<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name><name pos:line="7" pos:column="34">ecbdata<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">opt<pos:position pos:line="7" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">line_prefix<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><call><name pos:line="8" pos:column="35">diff_line_prefix<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">o<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="55"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">ecbdata<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">header<pos:position pos:line="10" pos:column="28"/></name></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">fprintf<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name><name pos:line="11" pos:column="25">ecbdata<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">opt<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">file<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="45">"%s"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="51">ecbdata<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">-&gt;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="60">header<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">-&gt;<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="68">buf<pos:position pos:line="11" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">strbuf_reset<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">ecbdata<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">header<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">ecbdata<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">header<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">NULL<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">ecbdata<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">found_changesp<pos:position pos:line="15" pos:column="34"/></name></name><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="36">=<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="38">1<pos:position pos:line="15" pos:column="39"/></literal></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">ecbdata<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">label_path<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr>]<pos:position pos:line="17" pos:column="35"/></index></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
		<decl_stmt><decl><type><specifier pos:line="18" pos:column="17">const<pos:position pos:line="18" pos:column="22"/></specifier> <name pos:line="18" pos:column="23">char<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">name_a_tab<pos:position pos:line="18" pos:column="39"/></name></decl>, <modifier pos:line="18" pos:column="41">*<pos:position pos:line="18" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="42">name_b_tab<pos:position pos:line="18" pos:column="52"/></name></decl>;<pos:position pos:line="18" pos:column="53"/></decl_stmt>

		<expr_stmt><expr><name pos:line="20" pos:column="17">name_a_tab<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <ternary><condition><expr><call><name pos:line="20" pos:column="30">strchr<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">ecbdata<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">label_path<pos:position pos:line="20" pos:column="56"/></name><index pos:line="20" pos:column="56">[<expr><literal type="number" pos:line="20" pos:column="57">0<pos:position pos:line="20" pos:column="58"/></literal></expr>]<pos:position pos:line="20" pos:column="59"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="61">' '<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr> ?<pos:position pos:line="20" pos:column="67"/></condition><then pos:line="20" pos:column="67"> <expr><literal type="string" pos:line="20" pos:column="68">"\t"<pos:position pos:line="20" pos:column="72"/></literal></expr> <pos:position pos:line="20" pos:column="73"/></then><else pos:line="20" pos:column="73">: <expr><literal type="string" pos:line="20" pos:column="75">""<pos:position pos:line="20" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">name_b_tab<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <ternary><condition><expr><call><name pos:line="21" pos:column="30">strchr<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name><name pos:line="21" pos:column="37">ecbdata<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">label_path<pos:position pos:line="21" pos:column="56"/></name><index pos:line="21" pos:column="56">[<expr><literal type="number" pos:line="21" pos:column="57">1<pos:position pos:line="21" pos:column="58"/></literal></expr>]<pos:position pos:line="21" pos:column="59"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="61">' '<pos:position pos:line="21" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr> ?<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67"> <expr><literal type="string" pos:line="21" pos:column="68">"\t"<pos:position pos:line="21" pos:column="72"/></literal></expr> <pos:position pos:line="21" pos:column="73"/></then><else pos:line="21" pos:column="73">: <expr><literal type="string" pos:line="21" pos:column="75">""<pos:position pos:line="21" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="23" pos:column="17">fprintf<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name><name pos:line="23" pos:column="25">ecbdata<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">opt<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">file<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="45">"%s%s--- %s%s%s\n"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>,
			<argument><expr><name pos:line="24" pos:column="25">line_prefix<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">meta<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="44">ecbdata<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">label_path<pos:position pos:line="24" pos:column="63"/></name><index pos:line="24" pos:column="63">[<expr><literal type="number" pos:line="24" pos:column="64">0<pos:position pos:line="24" pos:column="65"/></literal></expr>]<pos:position pos:line="24" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="68">reset<pos:position pos:line="24" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="75">name_a_tab<pos:position pos:line="24" pos:column="85"/></name></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="87"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">fprintf<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name><name pos:line="25" pos:column="25">ecbdata<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">opt<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">file<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="45">"%s%s+++ %s%s%s\n"<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>,
			<argument><expr><name pos:line="26" pos:column="25">line_prefix<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">meta<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="44">ecbdata<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">label_path<pos:position pos:line="26" pos:column="63"/></name><index pos:line="26" pos:column="63">[<expr><literal type="number" pos:line="26" pos:column="64">1<pos:position pos:line="26" pos:column="65"/></literal></expr>]<pos:position pos:line="26" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="68">reset<pos:position pos:line="26" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="75">name_b_tab<pos:position pos:line="26" pos:column="85"/></name></expr></argument>)<pos:position pos:line="26" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="87"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">ecbdata<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">label_path<pos:position pos:line="27" pos:column="36"/></name><index pos:line="27" pos:column="36">[<expr><literal type="number" pos:line="27" pos:column="37">0<pos:position pos:line="27" pos:column="38"/></literal></expr>]<pos:position pos:line="27" pos:column="39"/></index></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <name><name pos:line="27" pos:column="42">ecbdata<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">label_path<pos:position pos:line="27" pos:column="61"/></name><index pos:line="27" pos:column="61">[<expr><literal type="number" pos:line="27" pos:column="62">1<pos:position pos:line="27" pos:column="63"/></literal></expr>]<pos:position pos:line="27" pos:column="64"/></index></name> <operator pos:line="27" pos:column="65">=<pos:position pos:line="27" pos:column="66"/></operator> <name pos:line="27" pos:column="67">NULL<pos:position pos:line="27" pos:column="71"/></name></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">diff_suppress_blank_empty<pos:position pos:line="30" pos:column="38"/></name>
	    <operator pos:line="31" pos:column="13">&amp;&amp;<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="16">len<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">2<pos:position pos:line="31" pos:column="24"/></literal> <operator pos:line="31" pos:column="25">&amp;&amp;<pos:position pos:line="31" pos:column="35"/></operator> <name><name pos:line="31" pos:column="28">line<pos:position pos:line="31" pos:column="32"/></name><index pos:line="31" pos:column="32">[<expr><literal type="number" pos:line="31" pos:column="33">0<pos:position pos:line="31" pos:column="34"/></literal></expr>]<pos:position pos:line="31" pos:column="35"/></index></name> <operator pos:line="31" pos:column="36">==<pos:position pos:line="31" pos:column="38"/></operator> <literal type="char" pos:line="31" pos:column="39">' '<pos:position pos:line="31" pos:column="42"/></literal> <operator pos:line="31" pos:column="43">&amp;&amp;<pos:position pos:line="31" pos:column="53"/></operator> <name><name pos:line="31" pos:column="46">line<pos:position pos:line="31" pos:column="50"/></name><index pos:line="31" pos:column="50">[<expr><literal type="number" pos:line="31" pos:column="51">1<pos:position pos:line="31" pos:column="52"/></literal></expr>]<pos:position pos:line="31" pos:column="53"/></index></name> <operator pos:line="31" pos:column="54">==<pos:position pos:line="31" pos:column="56"/></operator> <literal type="char" pos:line="31" pos:column="57">'\n'<pos:position pos:line="31" pos:column="61"/></literal></expr>)<pos:position pos:line="31" pos:column="62"/></condition><then pos:line="31" pos:column="62"> <block pos:line="31" pos:column="63">{
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">line<pos:position pos:line="32" pos:column="21"/></name><index pos:line="32" pos:column="21">[<expr><literal type="number" pos:line="32" pos:column="22">0<pos:position pos:line="32" pos:column="23"/></literal></expr>]<pos:position pos:line="32" pos:column="24"/></index></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <literal type="char" pos:line="32" pos:column="27">'\n'<pos:position pos:line="32" pos:column="31"/></literal></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">len<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">1<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">line<pos:position pos:line="36" pos:column="17"/></name><index pos:line="36" pos:column="17">[<expr><literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>]<pos:position pos:line="36" pos:column="20"/></index></name> <operator pos:line="36" pos:column="21">==<pos:position pos:line="36" pos:column="23"/></operator> <literal type="char" pos:line="36" pos:column="24">'@'<pos:position pos:line="36" pos:column="27"/></literal></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28"> <block pos:line="36" pos:column="29">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name><name pos:line="37" pos:column="21">ecbdata<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">diff_words<pos:position pos:line="37" pos:column="40"/></name></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">diff_words_flush<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">ecbdata<pos:position pos:line="38" pos:column="49"/></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="39" pos:column="17">len<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name pos:line="39" pos:column="23">sane_truncate_line<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">ecbdata<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">line<pos:position pos:line="39" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">len<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">find_lno<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">line<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">ecbdata<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">emit_hunk_header<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">ecbdata<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">line<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">len<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name><name pos:line="42" pos:column="21">line<pos:position pos:line="42" pos:column="25"/></name><index pos:line="42" pos:column="25">[<expr><name pos:line="42" pos:column="26">len<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-<pos:position pos:line="42" pos:column="30"/></operator><literal type="number" pos:line="42" pos:column="30">1<pos:position pos:line="42" pos:column="31"/></literal></expr>]<pos:position pos:line="42" pos:column="32"/></index></name> <operator pos:line="42" pos:column="33">!=<pos:position pos:line="42" pos:column="35"/></operator> <literal type="char" pos:line="42" pos:column="36">'\n'<pos:position pos:line="42" pos:column="40"/></literal></expr>)<pos:position pos:line="42" pos:column="41"/></condition><then pos:line="42" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="25">putc<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><literal type="char" pos:line="43" pos:column="30">'\n'<pos:position pos:line="43" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="36">ecbdata<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">opt<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">-&gt;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="50">file<pos:position pos:line="43" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt></block></then></if>
		<return pos:line="44" pos:column="17">return;<pos:position pos:line="44" pos:column="24"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">len<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">&lt;<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="19">1<pos:position pos:line="47" pos:column="20"/></literal></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <block pos:line="47" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">emit_line<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name><name pos:line="48" pos:column="27">ecbdata<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">-&gt;<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="36">opt<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="41">reset<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">reset<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">line<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">len<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name><name pos:line="49" pos:column="21">ecbdata<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">diff_words<pos:position pos:line="49" pos:column="40"/></name></name>
		    <operator pos:line="50" pos:column="21">&amp;&amp;<pos:position pos:line="50" pos:column="31"/></operator> <name><name pos:line="50" pos:column="24">ecbdata<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">diff_words<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">type<pos:position pos:line="50" pos:column="49"/></name></name> <operator pos:line="50" pos:column="50">==<pos:position pos:line="50" pos:column="52"/></operator> <name pos:line="50" pos:column="53">DIFF_WORDS_PORCELAIN<pos:position pos:line="50" pos:column="73"/></name></expr>)<pos:position pos:line="50" pos:column="74"/></condition><then pos:line="50" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">fputs<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><literal type="string" pos:line="51" pos:column="31">"~\n"<pos:position pos:line="51" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="38">ecbdata<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">-&gt;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="47">opt<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">-&gt;<pos:position pos:line="51" pos:column="55"/></operator><name pos:line="51" pos:column="52">file<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt></block></then></if>
		<return pos:line="52" pos:column="17">return;<pos:position pos:line="52" pos:column="24"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">ecbdata<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">-&gt;<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="22">diff_words<pos:position pos:line="55" pos:column="32"/></name></name></expr>)<pos:position pos:line="55" pos:column="33"/></condition><then pos:line="55" pos:column="33"> <block pos:line="55" pos:column="34">{
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name><name pos:line="56" pos:column="21">line<pos:position pos:line="56" pos:column="25"/></name><index pos:line="56" pos:column="25">[<expr><literal type="number" pos:line="56" pos:column="26">0<pos:position pos:line="56" pos:column="27"/></literal></expr>]<pos:position pos:line="56" pos:column="28"/></index></name> <operator pos:line="56" pos:column="29">==<pos:position pos:line="56" pos:column="31"/></operator> <literal type="char" pos:line="56" pos:column="32">'-'<pos:position pos:line="56" pos:column="35"/></literal></expr>)<pos:position pos:line="56" pos:column="36"/></condition><then pos:line="56" pos:column="36"> <block pos:line="56" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">diff_words_append<pos:position pos:line="57" pos:column="42"/></name><argument_list pos:line="57" pos:column="42">(<argument><expr><name pos:line="57" pos:column="43">line<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="49">len<pos:position pos:line="57" pos:column="52"/></name></expr></argument>,
					  <argument><expr><operator pos:line="58" pos:column="43">&amp;<pos:position pos:line="58" pos:column="48"/></operator><name><name pos:line="58" pos:column="44">ecbdata<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">-&gt;<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="53">diff_words<pos:position pos:line="58" pos:column="63"/></name><operator pos:line="58" pos:column="63">-&gt;<pos:position pos:line="58" pos:column="68"/></operator><name pos:line="58" pos:column="65">minus<pos:position pos:line="58" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
			<return pos:line="59" pos:column="25">return;<pos:position pos:line="59" pos:column="32"/></return>
		}<pos:position pos:line="60" pos:column="18"/></block></then> <elseif pos:line="60" pos:column="19">else <if pos:line="60" pos:column="24">if <condition pos:line="60" pos:column="27">(<expr><name><name pos:line="60" pos:column="28">line<pos:position pos:line="60" pos:column="32"/></name><index pos:line="60" pos:column="32">[<expr><literal type="number" pos:line="60" pos:column="33">0<pos:position pos:line="60" pos:column="34"/></literal></expr>]<pos:position pos:line="60" pos:column="35"/></index></name> <operator pos:line="60" pos:column="36">==<pos:position pos:line="60" pos:column="38"/></operator> <literal type="char" pos:line="60" pos:column="39">'+'<pos:position pos:line="60" pos:column="42"/></literal></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43"> <block pos:line="60" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">diff_words_append<pos:position pos:line="61" pos:column="42"/></name><argument_list pos:line="61" pos:column="42">(<argument><expr><name pos:line="61" pos:column="43">line<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">len<pos:position pos:line="61" pos:column="52"/></name></expr></argument>,
					  <argument><expr><operator pos:line="62" pos:column="43">&amp;<pos:position pos:line="62" pos:column="48"/></operator><name><name pos:line="62" pos:column="44">ecbdata<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">-&gt;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="53">diff_words<pos:position pos:line="62" pos:column="63"/></name><operator pos:line="62" pos:column="63">-&gt;<pos:position pos:line="62" pos:column="68"/></operator><name pos:line="62" pos:column="65">plus<pos:position pos:line="62" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="71"/></expr_stmt>
			<return pos:line="63" pos:column="25">return;<pos:position pos:line="63" pos:column="32"/></return>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if></elseif> <elseif pos:line="64" pos:column="19">else <if pos:line="64" pos:column="24">if <condition pos:line="64" pos:column="27">(<expr><call><name pos:line="64" pos:column="28">starts_with<pos:position pos:line="64" pos:column="39"/></name><argument_list pos:line="64" pos:column="39">(<argument><expr><name pos:line="64" pos:column="40">line<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="46">"\\ "<pos:position pos:line="64" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="53"/></condition><then pos:line="64" pos:column="53"> <block pos:line="64" pos:column="54">{
			<comment type="block" pos:line="65" pos:column="25">/*
			 * Eat the "no newline at eof" marker as if we
			 * saw a "+" or "-" line with nothing on it,
			 * and return without diff_words_flush() to
			 * defer processing. If this is the end of
			 * preimage, more "+" lines may come after it.
			 */</comment>
			<return pos:line="72" pos:column="25">return;<pos:position pos:line="72" pos:column="32"/></return>
		}<pos:position pos:line="73" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">diff_words_flush<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">ecbdata<pos:position pos:line="74" pos:column="41"/></name></expr></argument>)<pos:position pos:line="74" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name><name pos:line="75" pos:column="21">ecbdata<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">diff_words<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">-&gt;<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="42">type<pos:position pos:line="75" pos:column="46"/></name></name> <operator pos:line="75" pos:column="47">==<pos:position pos:line="75" pos:column="49"/></operator> <name pos:line="75" pos:column="50">DIFF_WORDS_PORCELAIN<pos:position pos:line="75" pos:column="70"/></name></expr>)<pos:position pos:line="75" pos:column="71"/></condition><then pos:line="75" pos:column="71"> <block pos:line="75" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">emit_line<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name><name pos:line="76" pos:column="35">ecbdata<pos:position pos:line="76" pos:column="42"/></name><operator pos:line="76" pos:column="42">-&gt;<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="44">opt<pos:position pos:line="76" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="49">context<pos:position pos:line="76" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="58">reset<pos:position pos:line="76" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="65">line<pos:position pos:line="76" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="71">len<pos:position pos:line="76" pos:column="74"/></name></expr></argument>)<pos:position pos:line="76" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">fputs<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><literal type="string" pos:line="77" pos:column="31">"~\n"<pos:position pos:line="77" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="38">ecbdata<pos:position pos:line="77" pos:column="45"/></name><operator pos:line="77" pos:column="45">-&gt;<pos:position pos:line="77" pos:column="50"/></operator><name pos:line="77" pos:column="47">opt<pos:position pos:line="77" pos:column="50"/></name><operator pos:line="77" pos:column="50">-&gt;<pos:position pos:line="77" pos:column="55"/></operator><name pos:line="77" pos:column="52">file<pos:position pos:line="77" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="78" pos:column="18"/></block></then> <else pos:line="78" pos:column="19">else <block pos:line="78" pos:column="24">{
			<comment type="block" pos:line="79" pos:column="25">/*
			 * Skip the prefix character, if any.  With
			 * diff_suppress_blank_empty, there may be
			 * none.
			 */</comment>
			<if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><name><name pos:line="84" pos:column="29">line<pos:position pos:line="84" pos:column="33"/></name><index pos:line="84" pos:column="33">[<expr><literal type="number" pos:line="84" pos:column="34">0<pos:position pos:line="84" pos:column="35"/></literal></expr>]<pos:position pos:line="84" pos:column="36"/></index></name> <operator pos:line="84" pos:column="37">!=<pos:position pos:line="84" pos:column="39"/></operator> <literal type="char" pos:line="84" pos:column="40">'\n'<pos:position pos:line="84" pos:column="44"/></literal></expr>)<pos:position pos:line="84" pos:column="45"/></condition><then pos:line="84" pos:column="45"> <block pos:line="84" pos:column="46">{
			      <expr_stmt><expr><name pos:line="85" pos:column="31">line<pos:position pos:line="85" pos:column="35"/></name><operator pos:line="85" pos:column="35">++<pos:position pos:line="85" pos:column="37"/></operator></expr>;<pos:position pos:line="85" pos:column="38"/></expr_stmt>
			      <expr_stmt><expr><name pos:line="86" pos:column="31">len<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">--<pos:position pos:line="86" pos:column="36"/></operator></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
			}<pos:position pos:line="87" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">emit_line<pos:position pos:line="88" pos:column="34"/></name><argument_list pos:line="88" pos:column="34">(<argument><expr><name><name pos:line="88" pos:column="35">ecbdata<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">-&gt;<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="44">opt<pos:position pos:line="88" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="49">context<pos:position pos:line="88" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="58">reset<pos:position pos:line="88" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="65">line<pos:position pos:line="88" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="71">len<pos:position pos:line="88" pos:column="74"/></name></expr></argument>)<pos:position pos:line="88" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="89" pos:column="18"/></block></else></if>
		<return pos:line="90" pos:column="17">return;<pos:position pos:line="90" pos:column="24"/></return>
	}<pos:position pos:line="91" pos:column="10"/></block></then></if>

	<switch pos:line="93" pos:column="9">switch <condition pos:line="93" pos:column="16">(<expr><name><name pos:line="93" pos:column="17">line<pos:position pos:line="93" pos:column="21"/></name><index pos:line="93" pos:column="21">[<expr><literal type="number" pos:line="93" pos:column="22">0<pos:position pos:line="93" pos:column="23"/></literal></expr>]<pos:position pos:line="93" pos:column="24"/></index></name></expr>)<pos:position pos:line="93" pos:column="25"/></condition> <block pos:line="93" pos:column="26">{
	<case pos:line="94" pos:column="9">case <expr><literal type="char" pos:line="94" pos:column="14">'+'<pos:position pos:line="94" pos:column="17"/></literal></expr>:<pos:position pos:line="94" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="95" pos:column="17">ecbdata<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">-&gt;<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="26">lno_in_postimage<pos:position pos:line="95" pos:column="42"/></name></name><operator pos:line="95" pos:column="42">++<pos:position pos:line="95" pos:column="44"/></operator></expr>;<pos:position pos:line="95" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="96" pos:column="17">emit_add_line<pos:position pos:line="96" pos:column="30"/></name><argument_list pos:line="96" pos:column="30">(<argument><expr><name pos:line="96" pos:column="31">reset<pos:position pos:line="96" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="38">ecbdata<pos:position pos:line="96" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="47">line<pos:position pos:line="96" pos:column="51"/></name> <operator pos:line="96" pos:column="52">+<pos:position pos:line="96" pos:column="53"/></operator> <literal type="number" pos:line="96" pos:column="54">1<pos:position pos:line="96" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="57">len<pos:position pos:line="96" pos:column="60"/></name> <operator pos:line="96" pos:column="61">-<pos:position pos:line="96" pos:column="62"/></operator> <literal type="number" pos:line="96" pos:column="63">1<pos:position pos:line="96" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="66"/></expr_stmt>
		<break pos:line="97" pos:column="17">break;<pos:position pos:line="97" pos:column="23"/></break>
	<case pos:line="98" pos:column="9">case <expr><literal type="char" pos:line="98" pos:column="14">'-'<pos:position pos:line="98" pos:column="17"/></literal></expr>:<pos:position pos:line="98" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="99" pos:column="17">ecbdata<pos:position pos:line="99" pos:column="24"/></name><operator pos:line="99" pos:column="24">-&gt;<pos:position pos:line="99" pos:column="29"/></operator><name pos:line="99" pos:column="26">lno_in_preimage<pos:position pos:line="99" pos:column="41"/></name></name><operator pos:line="99" pos:column="41">++<pos:position pos:line="99" pos:column="43"/></operator></expr>;<pos:position pos:line="99" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="100" pos:column="17">emit_del_line<pos:position pos:line="100" pos:column="30"/></name><argument_list pos:line="100" pos:column="30">(<argument><expr><name pos:line="100" pos:column="31">reset<pos:position pos:line="100" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="38">ecbdata<pos:position pos:line="100" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="47">line<pos:position pos:line="100" pos:column="51"/></name> <operator pos:line="100" pos:column="52">+<pos:position pos:line="100" pos:column="53"/></operator> <literal type="number" pos:line="100" pos:column="54">1<pos:position pos:line="100" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="57">len<pos:position pos:line="100" pos:column="60"/></name> <operator pos:line="100" pos:column="61">-<pos:position pos:line="100" pos:column="62"/></operator> <literal type="number" pos:line="100" pos:column="63">1<pos:position pos:line="100" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="66"/></expr_stmt>
		<break pos:line="101" pos:column="17">break;<pos:position pos:line="101" pos:column="23"/></break>
	<case pos:line="102" pos:column="9">case <expr><literal type="char" pos:line="102" pos:column="14">' '<pos:position pos:line="102" pos:column="17"/></literal></expr>:<pos:position pos:line="102" pos:column="18"/></case>
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">ecbdata<pos:position pos:line="103" pos:column="24"/></name><operator pos:line="103" pos:column="24">-&gt;<pos:position pos:line="103" pos:column="29"/></operator><name pos:line="103" pos:column="26">lno_in_postimage<pos:position pos:line="103" pos:column="42"/></name></name><operator pos:line="103" pos:column="42">++<pos:position pos:line="103" pos:column="44"/></operator></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="104" pos:column="17">ecbdata<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">-&gt;<pos:position pos:line="104" pos:column="29"/></operator><name pos:line="104" pos:column="26">lno_in_preimage<pos:position pos:line="104" pos:column="41"/></name></name><operator pos:line="104" pos:column="41">++<pos:position pos:line="104" pos:column="43"/></operator></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">emit_context_line<pos:position pos:line="105" pos:column="34"/></name><argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">reset<pos:position pos:line="105" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="42">ecbdata<pos:position pos:line="105" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="51">line<pos:position pos:line="105" pos:column="55"/></name> <operator pos:line="105" pos:column="56">+<pos:position pos:line="105" pos:column="57"/></operator> <literal type="number" pos:line="105" pos:column="58">1<pos:position pos:line="105" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="61">len<pos:position pos:line="105" pos:column="64"/></name> <operator pos:line="105" pos:column="65">-<pos:position pos:line="105" pos:column="66"/></operator> <literal type="number" pos:line="105" pos:column="67">1<pos:position pos:line="105" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="70"/></expr_stmt>
		<break pos:line="106" pos:column="17">break;<pos:position pos:line="106" pos:column="23"/></break>
	<default pos:line="107" pos:column="9">default:<pos:position pos:line="107" pos:column="17"/></default>
		<comment type="block" pos:line="108" pos:column="17">/* incomplete line at the end */</comment>
		<expr_stmt><expr><name><name pos:line="109" pos:column="17">ecbdata<pos:position pos:line="109" pos:column="24"/></name><operator pos:line="109" pos:column="24">-&gt;<pos:position pos:line="109" pos:column="29"/></operator><name pos:line="109" pos:column="26">lno_in_preimage<pos:position pos:line="109" pos:column="41"/></name></name><operator pos:line="109" pos:column="41">++<pos:position pos:line="109" pos:column="43"/></operator></expr>;<pos:position pos:line="109" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="110" pos:column="17">emit_line<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">(<argument><expr><name><name pos:line="110" pos:column="27">ecbdata<pos:position pos:line="110" pos:column="34"/></name><operator pos:line="110" pos:column="34">-&gt;<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="36">opt<pos:position pos:line="110" pos:column="39"/></name></name></expr></argument>,
			  <argument><expr><call><name pos:line="111" pos:column="27">diff_get_color<pos:position pos:line="111" pos:column="41"/></name><argument_list pos:line="111" pos:column="41">(<argument><expr><name><name pos:line="111" pos:column="42">ecbdata<pos:position pos:line="111" pos:column="49"/></name><operator pos:line="111" pos:column="49">-&gt;<pos:position pos:line="111" pos:column="54"/></operator><name pos:line="111" pos:column="51">color_diff<pos:position pos:line="111" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="63">DIFF_CONTEXT<pos:position pos:line="111" pos:column="75"/></name></expr></argument>)<pos:position pos:line="111" pos:column="76"/></argument_list></call></expr></argument>,
			  <argument><expr><name pos:line="112" pos:column="27">reset<pos:position pos:line="112" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="34">line<pos:position pos:line="112" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="40">len<pos:position pos:line="112" pos:column="43"/></name></expr></argument>)<pos:position pos:line="112" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="45"/></expr_stmt>
		<break pos:line="113" pos:column="17">break;<pos:position pos:line="113" pos:column="23"/></break>
	}<pos:position pos:line="114" pos:column="10"/></block></switch>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

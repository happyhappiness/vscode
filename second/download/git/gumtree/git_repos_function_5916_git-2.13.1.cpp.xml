<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5916_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">show_bisect_vars<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">rev_list_info<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">info<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">reaches<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">int<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">all<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">cnt<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">flags<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name><name pos:line="3" pos:column="26">info<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">flags<pos:position pos:line="3" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">hex<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name pos:line="4" pos:column="18">GIT_MAX_HEXSZ<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">+<pos:position pos:line="4" pos:column="33"/></operator> <literal type="number" pos:line="4" pos:column="34">1<pos:position pos:line="4" pos:column="35"/></literal></expr>]<pos:position pos:line="4" pos:column="36"/></index></name> <init pos:line="4" pos:column="37">= <expr><literal type="string" pos:line="4" pos:column="39">""<pos:position pos:line="4" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">commit_list<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">tried<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">rev_info<pos:position pos:line="6" pos:column="24"/></name></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">revs<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><name><name pos:line="6" pos:column="33">info<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">revs<pos:position pos:line="6" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">revs<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">commits<pos:position pos:line="8" pos:column="27"/></name></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">revs<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">commits<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <call><name pos:line="11" pos:column="25">filter_skipped<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name><name pos:line="11" pos:column="40">revs<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">commits<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="55">&amp;<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="56">tried<pos:position pos:line="11" pos:column="61"/></name></expr></argument>,
				       <argument><expr><name pos:line="12" pos:column="40">flags<pos:position pos:line="12" pos:column="45"/></name> <operator pos:line="12" pos:column="46">&amp;<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="48">BISECT_SHOW_ALL<pos:position pos:line="12" pos:column="63"/></name></expr></argument>,
				       <argument><expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">NULL<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/*
	 * revs-&gt;commits can reach "reaches" commits among
	 * "all" commits.  If it is good, then there are
	 * (all-reaches) commits left to be bisected.
	 * On the other hand, if it is bad, then the set
	 * to bisect is "reaches".
	 * A bisect set of size N has (N-1) commits further
	 * to test, as we already know one bad one.
	 */</comment>
	<expr_stmt><expr><name pos:line="24" pos:column="9">cnt<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">all<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">-<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">reaches<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">cnt<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&lt;<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="19">reaches<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">cnt<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">reaches<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">revs<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">commits<pos:position pos:line="28" pos:column="26"/></name></name></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">oid_to_hex_r<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">hex<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="35">&amp;<pos:position pos:line="29" pos:column="40"/></operator><name><name pos:line="29" pos:column="36">revs<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">commits<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">item<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">object<pos:position pos:line="29" pos:column="63"/></name><operator pos:line="29" pos:column="63">.<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="64">oid<pos:position pos:line="29" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt></block></then></if>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">flags<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&amp;<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="21">BISECT_SHOW_ALL<pos:position pos:line="31" pos:column="36"/></name></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37"> <block pos:line="31" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">traverse_commit_list<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">revs<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="44">show_commit<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="57">show_object<pos:position pos:line="32" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="70">info<pos:position pos:line="32" pos:column="74"/></name></expr></argument>)<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">printf<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><literal type="string" pos:line="33" pos:column="24">"------\n"<pos:position pos:line="33" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">print_var_str<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="string" pos:line="36" pos:column="23">"bisect_rev"<pos:position pos:line="36" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">hex<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">print_var_int<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"bisect_nr"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">cnt<pos:position pos:line="37" pos:column="39"/></name> <operator pos:line="37" pos:column="40">-<pos:position pos:line="37" pos:column="41"/></operator> <literal type="number" pos:line="37" pos:column="42">1<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">print_var_int<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><literal type="string" pos:line="38" pos:column="23">"bisect_good"<pos:position pos:line="38" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">all<pos:position pos:line="38" pos:column="41"/></name> <operator pos:line="38" pos:column="42">-<pos:position pos:line="38" pos:column="43"/></operator> <name pos:line="38" pos:column="44">reaches<pos:position pos:line="38" pos:column="51"/></name> <operator pos:line="38" pos:column="52">-<pos:position pos:line="38" pos:column="53"/></operator> <literal type="number" pos:line="38" pos:column="54">1<pos:position pos:line="38" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">print_var_int<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><literal type="string" pos:line="39" pos:column="23">"bisect_bad"<pos:position pos:line="39" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">reaches<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">-<pos:position pos:line="39" pos:column="46"/></operator> <literal type="number" pos:line="39" pos:column="47">1<pos:position pos:line="39" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">print_var_int<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><literal type="string" pos:line="40" pos:column="23">"bisect_all"<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">all<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">print_var_int<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><literal type="string" pos:line="41" pos:column="23">"bisect_steps"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="39">estimate_bisect_steps<pos:position pos:line="41" pos:column="60"/></name><argument_list pos:line="41" pos:column="60">(<argument><expr><name pos:line="41" pos:column="61">all<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>

	<return pos:line="43" pos:column="9">return <expr><literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

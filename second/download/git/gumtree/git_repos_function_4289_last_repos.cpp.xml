<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4289_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_describe_name<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">name<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">len<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">unsigned<pos:position pos:line="1" pos:column="65"/></name> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">sha1<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">cp<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">flags<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">GET_SHA1_QUIETLY<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">|<pos:position pos:line="4" pos:column="44"/></operator> <name pos:line="4" pos:column="45">GET_SHA1_COMMIT<pos:position pos:line="4" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">cp<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">name<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">+<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">len<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">-<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="32">1<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></init> <condition><expr><name pos:line="6" pos:column="35">name<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">+<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="42">2<pos:position pos:line="6" pos:column="43"/></literal> <operator pos:line="6" pos:column="44">&lt;=<pos:position pos:line="6" pos:column="49"/></operator> <name pos:line="6" pos:column="47">cp<pos:position pos:line="6" pos:column="49"/></name></expr>;<pos:position pos:line="6" pos:column="50"/></condition> <incr><expr><name pos:line="6" pos:column="51">cp<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">--<pos:position pos:line="6" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="56"/></control> <block pos:line="6" pos:column="57">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">ch<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">cp<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">isxdigit<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">ch<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35"> <block pos:line="8" pos:column="36">{
			<comment type="block" pos:line="9" pos:column="25">/* We must be looking at g in "SOMETHING-g"
			 * for it to be describe output.
			 */</comment>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">ch<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">==<pos:position pos:line="12" pos:column="34"/></operator> <literal type="char" pos:line="12" pos:column="35">'g'<pos:position pos:line="12" pos:column="38"/></literal> <operator pos:line="12" pos:column="39">&amp;&amp;<pos:position pos:line="12" pos:column="49"/></operator> <name><name pos:line="12" pos:column="42">cp<pos:position pos:line="12" pos:column="44"/></name><index pos:line="12" pos:column="44">[<expr><operator pos:line="12" pos:column="45">-<pos:position pos:line="12" pos:column="46"/></operator><literal type="number" pos:line="12" pos:column="46">1<pos:position pos:line="12" pos:column="47"/></literal></expr>]<pos:position pos:line="12" pos:column="48"/></index></name> <operator pos:line="12" pos:column="49">==<pos:position pos:line="12" pos:column="51"/></operator> <literal type="char" pos:line="12" pos:column="52">'-'<pos:position pos:line="12" pos:column="55"/></literal></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
				<expr_stmt><expr><name pos:line="13" pos:column="33">cp<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">++<pos:position pos:line="13" pos:column="37"/></operator></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
				<expr_stmt><expr><name pos:line="14" pos:column="33">len<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">-=<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">cp<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">-<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">name<pos:position pos:line="14" pos:column="49"/></name></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
				<return pos:line="15" pos:column="33">return <expr><call><name pos:line="15" pos:column="40">get_short_sha1<pos:position pos:line="15" pos:column="54"/></name><argument_list pos:line="15" pos:column="54">(<argument><expr><name pos:line="15" pos:column="55">cp<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">len<pos:position pos:line="15" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="64">sha1<pos:position pos:line="15" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="70">flags<pos:position pos:line="15" pos:column="75"/></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></return>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

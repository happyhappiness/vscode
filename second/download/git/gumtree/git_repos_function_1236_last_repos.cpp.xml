<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1236_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ref_excluded<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">string_list<pos:position pos:line="1" pos:column="36"/></name></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ref_excludes<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">path<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">string_list_item<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">item<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">ref_excludes<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>
	<macro><name pos:line="7" pos:column="9">for_each_string_list_item<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument pos:line="7" pos:column="35">item<pos:position pos:line="7" pos:column="39"/></argument>, <argument pos:line="7" pos:column="41">ref_excludes<pos:position pos:line="7" pos:column="53"/></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></macro> <block pos:line="7" pos:column="55">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><call><name pos:line="8" pos:column="22">wildmatch<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name><name pos:line="8" pos:column="32">item<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">string<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="46">path<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="52">0<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><literal type="number" pos:line="9" pos:column="32">1<pos:position pos:line="9" pos:column="33"/></literal></expr>;<pos:position pos:line="9" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block>
	<return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

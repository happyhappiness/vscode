<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3809_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">merge_3way<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">merge_options<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">o<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">mmbuffer_t<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">result_buf<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="3" pos:column="23">const<pos:position pos:line="3" pos:column="28"/></specifier> <name><name pos:line="3" pos:column="29">struct<pos:position pos:line="3" pos:column="35"/></name> <name pos:line="3" pos:column="36">diff_filespec<pos:position pos:line="3" pos:column="49"/></name></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">one<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="4" pos:column="23">const<pos:position pos:line="4" pos:column="28"/></specifier> <name><name pos:line="4" pos:column="29">struct<pos:position pos:line="4" pos:column="35"/></name> <name pos:line="4" pos:column="36">diff_filespec<pos:position pos:line="4" pos:column="49"/></name></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">a<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="5" pos:column="23">const<pos:position pos:line="5" pos:column="28"/></specifier> <name><name pos:line="5" pos:column="29">struct<pos:position pos:line="5" pos:column="35"/></name> <name pos:line="5" pos:column="36">diff_filespec<pos:position pos:line="5" pos:column="49"/></name></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type><name pos:line="5" pos:column="51">b<pos:position pos:line="5" pos:column="52"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="6" pos:column="23">const<pos:position pos:line="6" pos:column="28"/></specifier> <name pos:line="6" pos:column="29">char<pos:position pos:line="6" pos:column="33"/></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">branch1<pos:position pos:line="6" pos:column="42"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="7" pos:column="23">const<pos:position pos:line="7" pos:column="28"/></specifier> <name pos:line="7" pos:column="29">char<pos:position pos:line="7" pos:column="33"/></name> <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier></type><name pos:line="7" pos:column="35">branch2<pos:position pos:line="7" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="43"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">mmfile_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">orig<pos:position pos:line="9" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="24">src1<pos:position pos:line="9" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="30">src2<pos:position pos:line="9" pos:column="34"/></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">ll_merge_options<pos:position pos:line="10" pos:column="32"/></name></name></type> <name pos:line="10" pos:column="33">ll_opts<pos:position pos:line="10" pos:column="40"/></name> <init pos:line="10" pos:column="41">= <expr><block pos:line="10" pos:column="43">{<expr><literal type="number" pos:line="10" pos:column="44">0<pos:position pos:line="10" pos:column="45"/></literal></expr>}<pos:position pos:line="10" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">base_name<pos:position pos:line="11" pos:column="24"/></name></decl>, <modifier pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="27">name1<pos:position pos:line="11" pos:column="32"/></name></decl>, <modifier pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="35">name2<pos:position pos:line="11" pos:column="40"/></name></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">merge_status<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="14" pos:column="9">ll_opts<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">.<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">renormalize<pos:position pos:line="14" pos:column="28"/></name></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <name><name pos:line="14" pos:column="31">o<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">renormalize<pos:position pos:line="14" pos:column="45"/></name></name></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">ll_opts<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">xdl_opts<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name><name pos:line="15" pos:column="28">o<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">xdl_opts<pos:position pos:line="15" pos:column="39"/></name></name></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">o<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">call_depth<pos:position pos:line="17" pos:column="26"/></name></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">ll_opts<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">virtual_ancestor<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">1<pos:position pos:line="18" pos:column="45"/></literal></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">ll_opts<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">.<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">variant<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
		<switch pos:line="21" pos:column="17">switch <condition pos:line="21" pos:column="24">(<expr><name><name pos:line="21" pos:column="25">o<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">recursive_variant<pos:position pos:line="21" pos:column="45"/></name></name></expr>)<pos:position pos:line="21" pos:column="46"/></condition> <block pos:line="21" pos:column="47">{
		<case pos:line="22" pos:column="17">case <expr><name pos:line="22" pos:column="22">MERGE_RECURSIVE_OURS<pos:position pos:line="22" pos:column="42"/></name></expr>:<pos:position pos:line="22" pos:column="43"/></case>
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">ll_opts<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">.<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">variant<pos:position pos:line="23" pos:column="40"/></name></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">XDL_MERGE_FAVOR_OURS<pos:position pos:line="23" pos:column="63"/></name></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
			<break pos:line="24" pos:column="25">break;<pos:position pos:line="24" pos:column="31"/></break>
		<case pos:line="25" pos:column="17">case <expr><name pos:line="25" pos:column="22">MERGE_RECURSIVE_THEIRS<pos:position pos:line="25" pos:column="44"/></name></expr>:<pos:position pos:line="25" pos:column="45"/></case>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">ll_opts<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">variant<pos:position pos:line="26" pos:column="40"/></name></name> <operator pos:line="26" pos:column="41">=<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">XDL_MERGE_FAVOR_THEIRS<pos:position pos:line="26" pos:column="65"/></name></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
			<break pos:line="27" pos:column="25">break;<pos:position pos:line="27" pos:column="31"/></break>
		<default pos:line="28" pos:column="17">default:<pos:position pos:line="28" pos:column="25"/></default>
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">ll_opts<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">variant<pos:position pos:line="29" pos:column="40"/></name></name> <operator pos:line="29" pos:column="41">=<pos:position pos:line="29" pos:column="42"/></operator> <literal type="number" pos:line="29" pos:column="43">0<pos:position pos:line="29" pos:column="44"/></literal></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
			<break pos:line="30" pos:column="25">break;<pos:position pos:line="30" pos:column="31"/></break>
		}<pos:position pos:line="31" pos:column="18"/></block></switch>
	}<pos:position pos:line="32" pos:column="10"/></block></else></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">strcmp<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name><name pos:line="34" pos:column="20">a<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">path<pos:position pos:line="34" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="29">b<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">path<pos:position pos:line="34" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call> <operator pos:line="34" pos:column="38">||<pos:position pos:line="34" pos:column="40"/></operator>
	    <operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><name><name pos:line="35" pos:column="14">o<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">ancestor<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">!=<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="29">NULL<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">&amp;&amp;<pos:position pos:line="35" pos:column="44"/></operator> <call><name pos:line="35" pos:column="37">strcmp<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><name><name pos:line="35" pos:column="44">a<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">-&gt;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="47">path<pos:position pos:line="35" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="53">one<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">-&gt;<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="58">path<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call> <operator pos:line="35" pos:column="64">!=<pos:position pos:line="35" pos:column="66"/></operator> <literal type="number" pos:line="35" pos:column="67">0<pos:position pos:line="35" pos:column="68"/></literal><operator pos:line="35" pos:column="68">)<pos:position pos:line="35" pos:column="69"/></operator></expr>)<pos:position pos:line="35" pos:column="70"/></condition><then pos:line="35" pos:column="70"> <block pos:line="35" pos:column="71">{
		<expr_stmt><expr><name pos:line="36" pos:column="17">base_name<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <ternary><condition><expr><name><name pos:line="36" pos:column="29">o<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">ancestor<pos:position pos:line="36" pos:column="40"/></name></name> <operator pos:line="36" pos:column="41">==<pos:position pos:line="36" pos:column="43"/></operator> <name pos:line="36" pos:column="44">NULL<pos:position pos:line="36" pos:column="48"/></name></expr> ?<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50"> <expr><name pos:line="36" pos:column="51">NULL<pos:position pos:line="36" pos:column="55"/></name></expr> <pos:position pos:line="36" pos:column="56"/></then><else pos:line="36" pos:column="56">:
			<expr><call><name pos:line="37" pos:column="25">mkpathdup<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><literal type="string" pos:line="37" pos:column="35">"%s:%s"<pos:position pos:line="37" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="44">o<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">ancestor<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="57">one<pos:position pos:line="37" pos:column="60"/></name><operator pos:line="37" pos:column="60">-&gt;<pos:position pos:line="37" pos:column="65"/></operator><name pos:line="37" pos:column="62">path<pos:position pos:line="37" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">name1<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <call><name pos:line="38" pos:column="25">mkpathdup<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><literal type="string" pos:line="38" pos:column="35">"%s:%s"<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">branch1<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="53">a<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">path<pos:position pos:line="38" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">name2<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <call><name pos:line="39" pos:column="25">mkpathdup<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><literal type="string" pos:line="39" pos:column="35">"%s:%s"<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">branch2<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="53">b<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-&gt;<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="56">path<pos:position pos:line="39" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then> <else pos:line="40" pos:column="11">else <block pos:line="40" pos:column="16">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">base_name<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <ternary><condition><expr><name><name pos:line="41" pos:column="29">o<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">ancestor<pos:position pos:line="41" pos:column="40"/></name></name> <operator pos:line="41" pos:column="41">==<pos:position pos:line="41" pos:column="43"/></operator> <name pos:line="41" pos:column="44">NULL<pos:position pos:line="41" pos:column="48"/></name></expr> ?<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50"> <expr><name pos:line="41" pos:column="51">NULL<pos:position pos:line="41" pos:column="55"/></name></expr> <pos:position pos:line="41" pos:column="56"/></then><else pos:line="41" pos:column="56">:
			<expr><call><name pos:line="42" pos:column="25">mkpathdup<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><literal type="string" pos:line="42" pos:column="35">"%s"<pos:position pos:line="42" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="41">o<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">ancestor<pos:position pos:line="42" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">name1<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <call><name pos:line="43" pos:column="25">mkpathdup<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><literal type="string" pos:line="43" pos:column="35">"%s"<pos:position pos:line="43" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">branch1<pos:position pos:line="43" pos:column="48"/></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">name2<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <call><name pos:line="44" pos:column="25">mkpathdup<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><literal type="string" pos:line="44" pos:column="35">"%s"<pos:position pos:line="44" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="41">branch2<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">read_mmblob<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><operator pos:line="47" pos:column="21">&amp;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="22">orig<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name><name pos:line="47" pos:column="29">one<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">oid<pos:position pos:line="47" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">read_mmblob<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><operator pos:line="48" pos:column="21">&amp;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="22">src1<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="28">&amp;<pos:position pos:line="48" pos:column="33"/></operator><name><name pos:line="48" pos:column="29">a<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">-&gt;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="32">oid<pos:position pos:line="48" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">read_mmblob<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><operator pos:line="49" pos:column="21">&amp;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="22">src2<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="28">&amp;<pos:position pos:line="49" pos:column="33"/></operator><name><name pos:line="49" pos:column="29">b<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">oid<pos:position pos:line="49" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="51" pos:column="9">merge_status<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <call><name pos:line="51" pos:column="24">ll_merge<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">result_buf<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="45">a<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">-&gt;<pos:position pos:line="51" pos:column="51"/></operator><name pos:line="51" pos:column="48">path<pos:position pos:line="51" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="54">&amp;<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="55">orig<pos:position pos:line="51" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="61">base_name<pos:position pos:line="51" pos:column="70"/></name></expr></argument>,
				<argument><expr><operator pos:line="52" pos:column="33">&amp;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="34">src1<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="40">name1<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="47">&amp;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="48">src2<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">name2<pos:position pos:line="52" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="61">&amp;<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="62">ll_opts<pos:position pos:line="52" pos:column="69"/></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="54" pos:column="9">free<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">base_name<pos:position pos:line="54" pos:column="23"/></name></expr></argument>)<pos:position pos:line="54" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">free<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">name1<pos:position pos:line="55" pos:column="19"/></name></expr></argument>)<pos:position pos:line="55" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">free<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><name pos:line="56" pos:column="14">name2<pos:position pos:line="56" pos:column="19"/></name></expr></argument>)<pos:position pos:line="56" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">free<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><name><name pos:line="57" pos:column="14">orig<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">ptr<pos:position pos:line="57" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">free<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><name><name pos:line="58" pos:column="14">src1<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">.<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">ptr<pos:position pos:line="58" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">free<pos:position pos:line="59" pos:column="13"/></name><argument_list pos:line="59" pos:column="13">(<argument><expr><name><name pos:line="59" pos:column="14">src2<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">.<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">ptr<pos:position pos:line="59" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
	<return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">merge_status<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

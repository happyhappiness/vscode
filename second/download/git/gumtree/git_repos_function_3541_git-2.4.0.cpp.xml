<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3541_git-2.4.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">memihash<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">buf<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">len<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">hash<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">FNV32_BASE<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">ucbuf<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><operator pos:line="4" pos:column="32">(<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">unsigned<pos:position pos:line="4" pos:column="41"/></name> <name pos:line="4" pos:column="42">char<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></operator><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="50">buf<pos:position pos:line="4" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">--<pos:position pos:line="5" pos:column="21"/></operator></expr>)<pos:position pos:line="5" pos:column="22"/></condition> <block pos:line="5" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">unsigned<pos:position pos:line="6" pos:column="25"/></name> <name pos:line="6" pos:column="26">int<pos:position pos:line="6" pos:column="29"/></name></type> <name pos:line="6" pos:column="30">c<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">ucbuf<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">++<pos:position pos:line="6" pos:column="42"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">c<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&gt;=<pos:position pos:line="7" pos:column="28"/></operator> <literal type="char" pos:line="7" pos:column="26">'a'<pos:position pos:line="7" pos:column="29"/></literal> <operator pos:line="7" pos:column="30">&amp;&amp;<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="33">c<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">&lt;=<pos:position pos:line="7" pos:column="40"/></operator> <literal type="char" pos:line="7" pos:column="38">'z'<pos:position pos:line="7" pos:column="41"/></literal></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="25">c<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">-=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="char" pos:line="8" pos:column="30">'a'<pos:position pos:line="8" pos:column="33"/></literal> <operator pos:line="8" pos:column="34">-<pos:position pos:line="8" pos:column="35"/></operator> <literal type="char" pos:line="8" pos:column="36">'A'<pos:position pos:line="8" pos:column="39"/></literal></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="9" pos:column="17">hash<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">hash<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">FNV32_PRIME<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator> <operator pos:line="9" pos:column="45">^<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="47">c<pos:position pos:line="9" pos:column="48"/></name></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></while>
	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">hash<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

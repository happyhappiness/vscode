<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1490_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_curl_result<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">slot_results<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">results<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * If we see a failing http code with CURLE_OK, we have turned off
	 * FAILONERROR (to keep the server's custom error response), and should
	 * translate the code into failure here.
	 *
	 * Likewise, if we see a redirect (30x code), that means we turned off
	 * redirect-following, and we should treat the result as an error.
	 */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">results<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">curl_result<pos:position pos:line="11" pos:column="33"/></name></name> <operator pos:line="11" pos:column="34">==<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="37">CURLE_OK<pos:position pos:line="11" pos:column="45"/></name> <operator pos:line="11" pos:column="46">&amp;&amp;<pos:position pos:line="11" pos:column="56"/></operator>
	    <name><name pos:line="12" pos:column="13">results<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">http_code<pos:position pos:line="12" pos:column="31"/></name></name> <operator pos:line="12" pos:column="32">&gt;=<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="35">300<pos:position pos:line="12" pos:column="38"/></literal></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <block pos:line="12" pos:column="40">{
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">results<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">curl_result<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">=<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">CURLE_HTTP_RETURNED_ERROR<pos:position pos:line="13" pos:column="65"/></name></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
		<comment type="block" pos:line="14" pos:column="17">/*
		 * Normally curl will already have put the "reason phrase"
		 * from the server into curl_errorstr; unfortunately without
		 * FAILONERROR it is lost, so we can give only the numeric
		 * status code.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">xsnprintf<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">curl_errorstr<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="42">sizeof<argument_list pos:line="20" pos:column="48">(<argument><expr><name pos:line="20" pos:column="49">curl_errorstr<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></sizeof></expr></argument>,
			  <argument><expr><literal type="string" pos:line="21" pos:column="27">"The requested URL returned error: %ld"<pos:position pos:line="21" pos:column="66"/></literal></expr></argument>,
			  <argument><expr><name><name pos:line="22" pos:column="27">results<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">http_code<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">results<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">curl_result<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">CURLE_OK<pos:position pos:line="25" pos:column="45"/></name></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46"> <block pos:line="25" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">credential_approve<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="37">http_auth<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name><name pos:line="27" pos:column="21">proxy_auth<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">password<pos:position pos:line="27" pos:column="40"/></name></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">credential_approve<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">(<argument><expr><operator pos:line="28" pos:column="44">&amp;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="45">proxy_auth<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt></block></then></if>
		<return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">HTTP_OK<pos:position pos:line="29" pos:column="31"/></name></expr>;<pos:position pos:line="29" pos:column="32"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then> <elseif pos:line="30" pos:column="11">else <if pos:line="30" pos:column="16">if <condition pos:line="30" pos:column="19">(<expr><call><name pos:line="30" pos:column="20">missing_target<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">results<pos:position pos:line="30" pos:column="42"/></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="44"/></condition><then pos:line="30" pos:column="44">
		<block type="pseudo"><return pos:line="31" pos:column="17">return <expr><name pos:line="31" pos:column="24">HTTP_MISSING_TARGET<pos:position pos:line="31" pos:column="43"/></name></expr>;<pos:position pos:line="31" pos:column="44"/></return></block></then></if></elseif>
	<elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><name><name pos:line="32" pos:column="18">results<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">http_code<pos:position pos:line="32" pos:column="36"/></name></name> <operator pos:line="32" pos:column="37">==<pos:position pos:line="32" pos:column="39"/></operator> <literal type="number" pos:line="32" pos:column="40">401<pos:position pos:line="32" pos:column="43"/></literal></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">http_auth<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">username<pos:position pos:line="33" pos:column="39"/></name></name> <operator pos:line="33" pos:column="40">&amp;&amp;<pos:position pos:line="33" pos:column="50"/></operator> <name><name pos:line="33" pos:column="43">http_auth<pos:position pos:line="33" pos:column="52"/></name><operator pos:line="33" pos:column="52">.<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="53">password<pos:position pos:line="33" pos:column="61"/></name></name></expr>)<pos:position pos:line="33" pos:column="62"/></condition><then pos:line="33" pos:column="62"> <block pos:line="33" pos:column="63">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">credential_reject<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><operator pos:line="34" pos:column="43">&amp;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="44">http_auth<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>
			<return pos:line="35" pos:column="25">return <expr><name pos:line="35" pos:column="32">HTTP_NOAUTH<pos:position pos:line="35" pos:column="43"/></name></expr>;<pos:position pos:line="35" pos:column="44"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then> <else pos:line="36" pos:column="19">else <block pos:line="36" pos:column="24">{
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">LIBCURL_CAN_HANDLE_AUTH_ANY<pos:position pos:line="37" pos:column="35"/></name></cpp:ifdef>
			<expr_stmt><expr><name pos:line="38" pos:column="25">http_auth_methods<pos:position pos:line="38" pos:column="42"/></name> <operator pos:line="38" pos:column="43">&amp;=<pos:position pos:line="38" pos:column="49"/></operator> <operator pos:line="38" pos:column="46">~<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">CURLAUTH_GSSNEGOTIATE<pos:position pos:line="38" pos:column="68"/></name></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name><name pos:line="39" pos:column="29">results<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">auth_avail<pos:position pos:line="39" pos:column="48"/></name></name></expr>)<pos:position pos:line="39" pos:column="49"/></condition><then pos:line="39" pos:column="49"> <block pos:line="39" pos:column="50">{
				<expr_stmt><expr><name pos:line="40" pos:column="33">http_auth_methods<pos:position pos:line="40" pos:column="50"/></name> <operator pos:line="40" pos:column="51">&amp;=<pos:position pos:line="40" pos:column="57"/></operator> <name><name pos:line="40" pos:column="54">results<pos:position pos:line="40" pos:column="61"/></name><operator pos:line="40" pos:column="61">-&gt;<pos:position pos:line="40" pos:column="66"/></operator><name pos:line="40" pos:column="63">auth_avail<pos:position pos:line="40" pos:column="73"/></name></name></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name pos:line="41" pos:column="33">http_auth_methods_restricted<pos:position pos:line="41" pos:column="61"/></name> <operator pos:line="41" pos:column="62">=<pos:position pos:line="41" pos:column="63"/></operator> <literal type="number" pos:line="41" pos:column="64">1<pos:position pos:line="41" pos:column="65"/></literal></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
			<return pos:line="44" pos:column="25">return <expr><name pos:line="44" pos:column="32">HTTP_REAUTH<pos:position pos:line="44" pos:column="43"/></name></expr>;<pos:position pos:line="44" pos:column="44"/></return>
		}<pos:position pos:line="45" pos:column="18"/></block></else></if>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif> <else pos:line="46" pos:column="11">else <block pos:line="46" pos:column="16">{
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">results<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">http_connectcode<pos:position pos:line="47" pos:column="46"/></name></name> <operator pos:line="47" pos:column="47">==<pos:position pos:line="47" pos:column="49"/></operator> <literal type="number" pos:line="47" pos:column="50">407<pos:position pos:line="47" pos:column="53"/></literal></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">credential_reject<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><operator pos:line="48" pos:column="43">&amp;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="44">proxy_auth<pos:position pos:line="48" pos:column="54"/></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt></block></then></if>
<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><name pos:line="49" pos:column="5">LIBCURL_VERSION_NUM<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">&gt;=<pos:position pos:line="49" pos:column="30"/></operator> <literal type="number" pos:line="49" pos:column="28">0x070c00<pos:position pos:line="49" pos:column="36"/></literal></expr></cpp:if>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><name><name pos:line="50" pos:column="22">curl_errorstr<pos:position pos:line="50" pos:column="35"/></name><index pos:line="50" pos:column="35">[<expr><literal type="number" pos:line="50" pos:column="36">0<pos:position pos:line="50" pos:column="37"/></literal></expr>]<pos:position pos:line="50" pos:column="38"/></index></name></expr>)<pos:position pos:line="50" pos:column="39"/></condition><then pos:line="50" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">strlcpy<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">curl_errorstr<pos:position pos:line="51" pos:column="46"/></name></expr></argument>,
				<argument><expr><call><name pos:line="52" pos:column="33">curl_easy_strerror<pos:position pos:line="52" pos:column="51"/></name><argument_list pos:line="52" pos:column="51">(<argument><expr><name><name pos:line="52" pos:column="52">results<pos:position pos:line="52" pos:column="59"/></name><operator pos:line="52" pos:column="59">-&gt;<pos:position pos:line="52" pos:column="64"/></operator><name pos:line="52" pos:column="61">curl_result<pos:position pos:line="52" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="73"/></argument_list></call></expr></argument>,
				<argument><expr><sizeof pos:line="53" pos:column="33">sizeof<argument_list pos:line="53" pos:column="39">(<argument><expr><name pos:line="53" pos:column="40">curl_errorstr<pos:position pos:line="53" pos:column="53"/></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
		<return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">HTTP_ERROR<pos:position pos:line="55" pos:column="34"/></name></expr>;<pos:position pos:line="55" pos:column="35"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></else></if>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1060.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_change_delete<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">merge_options<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">o<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">path<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">old_path<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name><name pos:line="3" pos:column="40">struct<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">object_id<pos:position pos:line="3" pos:column="56"/></name></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">o_oid<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="65">int<pos:position pos:line="3" pos:column="68"/></name></type> <name pos:line="3" pos:column="69">o_mode<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="4" pos:column="34">const<pos:position pos:line="4" pos:column="39"/></specifier> <name><name pos:line="4" pos:column="40">struct<pos:position pos:line="4" pos:column="46"/></name> <name pos:line="4" pos:column="47">object_id<pos:position pos:line="4" pos:column="56"/></name></name> <modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier></type><name pos:line="4" pos:column="58">changed_oid<pos:position pos:line="4" pos:column="69"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="5" pos:column="34">int<pos:position pos:line="5" pos:column="37"/></name></type> <name pos:line="5" pos:column="38">changed_mode<pos:position pos:line="5" pos:column="50"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="6" pos:column="34">const<pos:position pos:line="6" pos:column="39"/></specifier> <name pos:line="6" pos:column="40">char<pos:position pos:line="6" pos:column="44"/></name> <modifier pos:line="6" pos:column="45">*<pos:position pos:line="6" pos:column="46"/></modifier></type><name pos:line="6" pos:column="46">change_branch<pos:position pos:line="6" pos:column="59"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="7" pos:column="34">const<pos:position pos:line="7" pos:column="39"/></specifier> <name pos:line="7" pos:column="40">char<pos:position pos:line="7" pos:column="44"/></name> <modifier pos:line="7" pos:column="45">*<pos:position pos:line="7" pos:column="46"/></modifier></type><name pos:line="7" pos:column="46">delete_branch<pos:position pos:line="7" pos:column="59"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="8" pos:column="34">const<pos:position pos:line="8" pos:column="39"/></specifier> <name pos:line="8" pos:column="40">char<pos:position pos:line="8" pos:column="44"/></name> <modifier pos:line="8" pos:column="45">*<pos:position pos:line="8" pos:column="46"/></modifier></type><name pos:line="8" pos:column="46">change<pos:position pos:line="8" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="8" pos:column="54">const<pos:position pos:line="8" pos:column="59"/></specifier> <name pos:line="8" pos:column="60">char<pos:position pos:line="8" pos:column="64"/></name> <modifier pos:line="8" pos:column="65">*<pos:position pos:line="8" pos:column="66"/></modifier></type><name pos:line="8" pos:column="66">change_past<pos:position pos:line="8" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="78"/></parameter_list>
<block pos:line="9" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">alt_path<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name pos:line="10" pos:column="26">NULL<pos:position pos:line="10" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">update_path<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><name pos:line="11" pos:column="35">path<pos:position pos:line="11" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">ret<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">dir_in_way<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">path<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="30">!<pos:position pos:line="14" pos:column="31"/></operator><name><name pos:line="14" pos:column="31">o<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">call_depth<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="46">0<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49"> <block pos:line="14" pos:column="50">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">update_path<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="31">alt_path<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">=<pos:position pos:line="15" pos:column="41"/></operator> <call><name pos:line="15" pos:column="42">unique_path<pos:position pos:line="15" pos:column="53"/></name><argument_list pos:line="15" pos:column="53">(<argument><expr><name pos:line="15" pos:column="54">o<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">path<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">change_branch<pos:position pos:line="15" pos:column="76"/></name></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">o<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">call_depth<pos:position pos:line="18" pos:column="26"/></name></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
		<comment type="block" pos:line="19" pos:column="17">/*
		 * We cannot arbitrarily accept either a_sha or b_sha as
		 * correct; since there is no true "middle point" between
		 * them, simply reuse the base version for virtual merge base.
		 */</comment>
		<expr_stmt><expr><name pos:line="24" pos:column="17">ret<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <call><name pos:line="24" pos:column="23">remove_file_from_cache<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">path<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">ret<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">ret<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <call><name pos:line="26" pos:column="31">update_file<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name pos:line="26" pos:column="43">o<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="46">0<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">o_oid<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">o_mode<pos:position pos:line="26" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="64">update_path<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">alt_path<pos:position pos:line="28" pos:column="30"/></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31"> <block pos:line="28" pos:column="32">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">old_path<pos:position pos:line="29" pos:column="38"/></name></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39"> <block pos:line="29" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">output<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">o<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="43">1<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="46">_<pos:position pos:line="30" pos:column="47"/></name><argument_list pos:line="30" pos:column="47">(<argument><expr><literal type="string" pos:line="30" pos:column="48">"CONFLICT (%s/delete): %s deleted in %s "<pos:position pos:line="30" pos:column="89"/></literal>
				       <literal type="string" pos:line="31" pos:column="40">"and %s in %s. Version %s of %s left in tree."<pos:position pos:line="31" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="87"/></argument_list></call></expr></argument>,
				       <argument><expr><name pos:line="32" pos:column="40">change<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">path<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">delete_branch<pos:position pos:line="32" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="69">change_past<pos:position pos:line="32" pos:column="80"/></name></expr></argument>,
				       <argument><expr><name pos:line="33" pos:column="40">change_branch<pos:position pos:line="33" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">change_branch<pos:position pos:line="33" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="70">path<pos:position pos:line="33" pos:column="74"/></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="34" pos:column="26"/></block></then> <else pos:line="34" pos:column="27">else <block pos:line="34" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="35" pos:column="33">output<pos:position pos:line="35" pos:column="39"/></name><argument_list pos:line="35" pos:column="39">(<argument><expr><name pos:line="35" pos:column="40">o<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="43">1<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="46">_<pos:position pos:line="35" pos:column="47"/></name><argument_list pos:line="35" pos:column="47">(<argument><expr><literal type="string" pos:line="35" pos:column="48">"CONFLICT (%s/delete): %s deleted in %s "<pos:position pos:line="35" pos:column="89"/></literal>
				       <literal type="string" pos:line="36" pos:column="40">"and %s to %s in %s. Version %s of %s left in tree."<pos:position pos:line="36" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="93"/></argument_list></call></expr></argument>,
				       <argument><expr><name pos:line="37" pos:column="40">change<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">old_path<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="58">delete_branch<pos:position pos:line="37" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="73">change_past<pos:position pos:line="37" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="86">path<pos:position pos:line="37" pos:column="90"/></name></expr></argument>,
				       <argument><expr><name pos:line="38" pos:column="40">change_branch<pos:position pos:line="38" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">change_branch<pos:position pos:line="38" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="70">path<pos:position pos:line="38" pos:column="74"/></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="39" pos:column="26"/></block></else></if>
		}<pos:position pos:line="40" pos:column="18"/></block></then> <else pos:line="40" pos:column="19">else <block pos:line="40" pos:column="24">{
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><operator pos:line="41" pos:column="29">!<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">old_path<pos:position pos:line="41" pos:column="38"/></name></expr>)<pos:position pos:line="41" pos:column="39"/></condition><then pos:line="41" pos:column="39"> <block pos:line="41" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="42" pos:column="33">output<pos:position pos:line="42" pos:column="39"/></name><argument_list pos:line="42" pos:column="39">(<argument><expr><name pos:line="42" pos:column="40">o<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="43">1<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="46">_<pos:position pos:line="42" pos:column="47"/></name><argument_list pos:line="42" pos:column="47">(<argument><expr><literal type="string" pos:line="42" pos:column="48">"CONFLICT (%s/delete): %s deleted in %s "<pos:position pos:line="42" pos:column="89"/></literal>
				       <literal type="string" pos:line="43" pos:column="40">"and %s in %s. Version %s of %s left in tree at %s."<pos:position pos:line="43" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="93"/></argument_list></call></expr></argument>,
				       <argument><expr><name pos:line="44" pos:column="40">change<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">path<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">delete_branch<pos:position pos:line="44" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="69">change_past<pos:position pos:line="44" pos:column="80"/></name></expr></argument>,
				       <argument><expr><name pos:line="45" pos:column="40">change_branch<pos:position pos:line="45" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="55">change_branch<pos:position pos:line="45" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="70">path<pos:position pos:line="45" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="76">alt_path<pos:position pos:line="45" pos:column="84"/></name></expr></argument>)<pos:position pos:line="45" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="86"/></expr_stmt>
			}<pos:position pos:line="46" pos:column="26"/></block></then> <else pos:line="46" pos:column="27">else <block pos:line="46" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="47" pos:column="33">output<pos:position pos:line="47" pos:column="39"/></name><argument_list pos:line="47" pos:column="39">(<argument><expr><name pos:line="47" pos:column="40">o<pos:position pos:line="47" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="43">1<pos:position pos:line="47" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="46">_<pos:position pos:line="47" pos:column="47"/></name><argument_list pos:line="47" pos:column="47">(<argument><expr><literal type="string" pos:line="47" pos:column="48">"CONFLICT (%s/delete): %s deleted in %s "<pos:position pos:line="47" pos:column="89"/></literal>
				       <literal type="string" pos:line="48" pos:column="40">"and %s to %s in %s. Version %s of %s left in tree at %s."<pos:position pos:line="48" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="99"/></argument_list></call></expr></argument>,
				       <argument><expr><name pos:line="49" pos:column="40">change<pos:position pos:line="49" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">old_path<pos:position pos:line="49" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="58">delete_branch<pos:position pos:line="49" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="73">change_past<pos:position pos:line="49" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="86">path<pos:position pos:line="49" pos:column="90"/></name></expr></argument>,
				       <argument><expr><name pos:line="50" pos:column="40">change_branch<pos:position pos:line="50" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="55">change_branch<pos:position pos:line="50" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="70">path<pos:position pos:line="50" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="76">alt_path<pos:position pos:line="50" pos:column="84"/></name></expr></argument>)<pos:position pos:line="50" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="86"/></expr_stmt>
			}<pos:position pos:line="51" pos:column="26"/></block></else></if>
		}<pos:position pos:line="52" pos:column="18"/></block></else></if>
		<comment type="block" pos:line="53" pos:column="17">/*
		 * No need to call update_file() on path when change_branch ==
		 * o-&gt;branch1 &amp;&amp; !alt_path, since that would needlessly touch
		 * path.  We could call update_file_flags() with update_cache=0
		 * and update_wd=0, but that's a no-op.
		 */</comment>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">change_branch<pos:position pos:line="59" pos:column="34"/></name> <operator pos:line="59" pos:column="35">!=<pos:position pos:line="59" pos:column="37"/></operator> <name><name pos:line="59" pos:column="38">o<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">-&gt;<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="41">branch1<pos:position pos:line="59" pos:column="48"/></name></name> <operator pos:line="59" pos:column="49">||<pos:position pos:line="59" pos:column="51"/></operator> <name pos:line="59" pos:column="52">alt_path<pos:position pos:line="59" pos:column="60"/></name></expr>)<pos:position pos:line="59" pos:column="61"/></condition><then pos:line="59" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="25">ret<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <call><name pos:line="60" pos:column="31">update_file<pos:position pos:line="60" pos:column="42"/></name><argument_list pos:line="60" pos:column="42">(<argument><expr><name pos:line="60" pos:column="43">o<pos:position pos:line="60" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="46">0<pos:position pos:line="60" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="49">changed_oid<pos:position pos:line="60" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="62">changed_mode<pos:position pos:line="60" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="76">update_path<pos:position pos:line="60" pos:column="87"/></name></expr></argument>)<pos:position pos:line="60" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="89"/></expr_stmt></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">free<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name pos:line="62" pos:column="14">alt_path<pos:position pos:line="62" pos:column="22"/></name></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>

	<return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">ret<pos:position pos:line="64" pos:column="19"/></name></expr>;<pos:position pos:line="64" pos:column="20"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6722_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">quote_arg<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">arg<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* count chars to quote */</comment>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">n<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">force_quotes<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">q<pos:position pos:line="6" pos:column="16"/></name></decl>, <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="19">d<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">p<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">arg<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">p<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="18">force_quotes<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt></block></then></if>
	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition> <block pos:line="9" pos:column="20">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">isspace<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">*<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">p<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call> <operator pos:line="10" pos:column="33">||<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">p<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">==<pos:position pos:line="10" pos:column="41"/></operator> <literal type="char" pos:line="10" pos:column="42">'*'<pos:position pos:line="10" pos:column="45"/></literal> <operator pos:line="10" pos:column="46">||<pos:position pos:line="10" pos:column="48"/></operator> <operator pos:line="10" pos:column="49">*<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">p<pos:position pos:line="10" pos:column="51"/></name> <operator pos:line="10" pos:column="52">==<pos:position pos:line="10" pos:column="54"/></operator> <literal type="char" pos:line="10" pos:column="55">'?'<pos:position pos:line="10" pos:column="58"/></literal> <operator pos:line="10" pos:column="59">||<pos:position pos:line="10" pos:column="61"/></operator> <operator pos:line="10" pos:column="62">*<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">p<pos:position pos:line="10" pos:column="64"/></name> <operator pos:line="10" pos:column="65">==<pos:position pos:line="10" pos:column="67"/></operator> <literal type="char" pos:line="10" pos:column="68">'{'<pos:position pos:line="10" pos:column="71"/></literal> <operator pos:line="10" pos:column="72">||<pos:position pos:line="10" pos:column="74"/></operator> <operator pos:line="10" pos:column="75">*<pos:position pos:line="10" pos:column="76"/></operator><name pos:line="10" pos:column="76">p<pos:position pos:line="10" pos:column="77"/></name> <operator pos:line="10" pos:column="78">==<pos:position pos:line="10" pos:column="80"/></operator> <literal type="char" pos:line="10" pos:column="81">'\''<pos:position pos:line="10" pos:column="85"/></literal></expr>)<pos:position pos:line="10" pos:column="86"/></condition><then pos:line="10" pos:column="86">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">force_quotes<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">=<pos:position pos:line="11" pos:column="39"/></operator> <literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt></block></then>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><operator pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="27">p<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">==<pos:position pos:line="12" pos:column="31"/></operator> <literal type="char" pos:line="12" pos:column="32">'"'<pos:position pos:line="12" pos:column="35"/></literal></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">n<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">++<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="14" pos:column="17">else <if pos:line="14" pos:column="22">if <condition pos:line="14" pos:column="25">(<expr><operator pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">p<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">==<pos:position pos:line="14" pos:column="31"/></operator> <literal type="char" pos:line="14" pos:column="32">'\\'<pos:position pos:line="14" pos:column="36"/></literal></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37"> <block pos:line="14" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="15" pos:column="25">int<pos:position pos:line="15" pos:column="28"/></name></type> <name pos:line="15" pos:column="29">count<pos:position pos:line="15" pos:column="34"/></name> <init pos:line="15" pos:column="35">= <expr><literal type="number" pos:line="15" pos:column="37">0<pos:position pos:line="15" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="39"/></decl_stmt>
			<while pos:line="16" pos:column="25">while <condition pos:line="16" pos:column="31">(<expr><operator pos:line="16" pos:column="32">*<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">p<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">==<pos:position pos:line="16" pos:column="37"/></operator> <literal type="char" pos:line="16" pos:column="38">'\\'<pos:position pos:line="16" pos:column="42"/></literal></expr>)<pos:position pos:line="16" pos:column="43"/></condition> <block pos:line="16" pos:column="44">{
				<expr_stmt><expr><name pos:line="17" pos:column="33">count<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">++<pos:position pos:line="17" pos:column="40"/></operator></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
				<expr_stmt><expr><name pos:line="18" pos:column="33">p<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">++<pos:position pos:line="18" pos:column="36"/></operator></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
				<expr_stmt><expr><name pos:line="19" pos:column="33">len<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">++<pos:position pos:line="19" pos:column="38"/></operator></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="20" pos:column="26"/></block></while>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><operator pos:line="21" pos:column="29">*<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">p<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="char" pos:line="21" pos:column="35">'"'<pos:position pos:line="21" pos:column="38"/></literal></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="33">n<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">+=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">count<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">*<pos:position pos:line="22" pos:column="44"/></operator><literal type="number" pos:line="22" pos:column="44">2<pos:position pos:line="22" pos:column="45"/></literal> <operator pos:line="22" pos:column="46">+<pos:position pos:line="22" pos:column="47"/></operator> <literal type="number" pos:line="22" pos:column="48">1<pos:position pos:line="22" pos:column="49"/></literal></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt></block></then></if>
			<continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="25" pos:column="17">len<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">++<pos:position pos:line="25" pos:column="22"/></operator></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">p<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">++<pos:position pos:line="26" pos:column="20"/></operator></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></while>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">force_quotes<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">&amp;&amp;<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="30">n<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <literal type="number" pos:line="28" pos:column="35">0<pos:position pos:line="28" pos:column="36"/></literal></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37">
		<block type="pseudo"><return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">arg<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></return></block></then></if>

	<comment type="block" pos:line="31" pos:column="9">/* insert \ where necessary */</comment>
	<expr_stmt><expr><name pos:line="32" pos:column="9">d<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <name pos:line="32" pos:column="13">q<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">xmalloc<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><call><name pos:line="32" pos:column="25">st_add3<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">len<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">n<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="41">3<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">d<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">++<pos:position pos:line="33" pos:column="13"/></operator> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <literal type="char" pos:line="33" pos:column="16">'"'<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>
	<while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><operator pos:line="34" pos:column="16">*<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">arg<pos:position pos:line="34" pos:column="20"/></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition> <block pos:line="34" pos:column="22">{
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">*<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">arg<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">==<pos:position pos:line="35" pos:column="28"/></operator> <literal type="char" pos:line="35" pos:column="29">'"'<pos:position pos:line="35" pos:column="32"/></literal></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">d<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">++<pos:position pos:line="36" pos:column="29"/></operator> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <literal type="char" pos:line="36" pos:column="32">'\\'<pos:position pos:line="36" pos:column="36"/></literal></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt></block></then>
		<elseif pos:line="37" pos:column="17">else <if pos:line="37" pos:column="22">if <condition pos:line="37" pos:column="25">(<expr><operator pos:line="37" pos:column="26">*<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">arg<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">==<pos:position pos:line="37" pos:column="33"/></operator> <literal type="char" pos:line="37" pos:column="34">'\\'<pos:position pos:line="37" pos:column="38"/></literal></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39"> <block pos:line="37" pos:column="40">{
			<decl_stmt><decl><type><name pos:line="38" pos:column="25">int<pos:position pos:line="38" pos:column="28"/></name></type> <name pos:line="38" pos:column="29">count<pos:position pos:line="38" pos:column="34"/></name> <init pos:line="38" pos:column="35">= <expr><literal type="number" pos:line="38" pos:column="37">0<pos:position pos:line="38" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="39"/></decl_stmt>
			<while pos:line="39" pos:column="25">while <condition pos:line="39" pos:column="31">(<expr><operator pos:line="39" pos:column="32">*<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">arg<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">==<pos:position pos:line="39" pos:column="39"/></operator> <literal type="char" pos:line="39" pos:column="40">'\\'<pos:position pos:line="39" pos:column="44"/></literal></expr>)<pos:position pos:line="39" pos:column="45"/></condition> <block pos:line="39" pos:column="46">{
				<expr_stmt><expr><name pos:line="40" pos:column="33">count<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">++<pos:position pos:line="40" pos:column="40"/></operator></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="41" pos:column="33">*<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">d<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">++<pos:position pos:line="41" pos:column="37"/></operator> <operator pos:line="41" pos:column="38">=<pos:position pos:line="41" pos:column="39"/></operator> <operator pos:line="41" pos:column="40">*<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="41">arg<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">++<pos:position pos:line="41" pos:column="46"/></operator></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="42" pos:column="26"/></block></while>
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><operator pos:line="43" pos:column="29">*<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">arg<pos:position pos:line="43" pos:column="33"/></name> <operator pos:line="43" pos:column="34">==<pos:position pos:line="43" pos:column="36"/></operator> <literal type="char" pos:line="43" pos:column="37">'"'<pos:position pos:line="43" pos:column="40"/></literal></expr>)<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41"> <block pos:line="43" pos:column="42">{
				<while pos:line="44" pos:column="33">while <condition pos:line="44" pos:column="39">(<expr><name pos:line="44" pos:column="40">count<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">--<pos:position pos:line="44" pos:column="47"/></operator> <operator pos:line="44" pos:column="48">&gt;<pos:position pos:line="44" pos:column="52"/></operator> <literal type="number" pos:line="44" pos:column="50">0<pos:position pos:line="44" pos:column="51"/></literal></expr>)<pos:position pos:line="44" pos:column="52"/></condition>
					<block type="pseudo"><expr_stmt><expr><operator pos:line="45" pos:column="41">*<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="42">d<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">++<pos:position pos:line="45" pos:column="45"/></operator> <operator pos:line="45" pos:column="46">=<pos:position pos:line="45" pos:column="47"/></operator> <literal type="char" pos:line="45" pos:column="48">'\\'<pos:position pos:line="45" pos:column="52"/></literal></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt></block></while>
				<expr_stmt><expr><operator pos:line="46" pos:column="33">*<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="34">d<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">++<pos:position pos:line="46" pos:column="37"/></operator> <operator pos:line="46" pos:column="38">=<pos:position pos:line="46" pos:column="39"/></operator> <literal type="char" pos:line="46" pos:column="40">'\\'<pos:position pos:line="46" pos:column="44"/></literal></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="47" pos:column="26"/></block></then></if>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><operator pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">d<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">++<pos:position pos:line="49" pos:column="21"/></operator> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <operator pos:line="49" pos:column="24">*<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="25">arg<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">++<pos:position pos:line="49" pos:column="30"/></operator></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">d<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">++<pos:position pos:line="51" pos:column="13"/></operator> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <literal type="char" pos:line="51" pos:column="16">'"'<pos:position pos:line="51" pos:column="19"/></literal></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">d<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">++<pos:position pos:line="52" pos:column="13"/></operator> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <literal type="number" pos:line="52" pos:column="16">0<pos:position pos:line="52" pos:column="17"/></literal></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
	<return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">q<pos:position pos:line="53" pos:column="17"/></name></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

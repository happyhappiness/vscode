<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1943.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">ref_lock<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">verify_lock<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">ref_lock<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">lock<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
	<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">unsigned<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">old_sha1<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">mustexist<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">read_ref_full<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name><name pos:line="4" pos:column="27">lock<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">ref_name<pos:position pos:line="4" pos:column="41"/></name></name></expr></argument>,
			  <argument><expr><ternary><condition><expr><name pos:line="5" pos:column="27">mustexist<pos:position pos:line="5" pos:column="36"/></name></expr> ?<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38"> <expr><name pos:line="5" pos:column="39">RESOLVE_REF_READING<pos:position pos:line="5" pos:column="58"/></name></expr> <pos:position pos:line="5" pos:column="59"/></then><else pos:line="5" pos:column="59">: <expr><literal type="number" pos:line="5" pos:column="61">0<pos:position pos:line="5" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
			  <argument><expr><name><name pos:line="6" pos:column="27">lock<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">old_sha1<pos:position pos:line="6" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">NULL<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="49"/></condition><then pos:line="6" pos:column="49"> <block pos:line="6" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">save_errno<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">errno<pos:position pos:line="7" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">error<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"Can't verify ref %s"<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="46">lock<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">ref_name<pos:position pos:line="8" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">unlock_ref<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">lock<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">errno<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">save_errno<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">hashcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name><name pos:line="13" pos:column="21">lock<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">old_sha1<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">old_sha1<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47"> <block pos:line="13" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">error<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"Ref %s is at %s but expected %s"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="58">lock<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">-&gt;<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="64">ref_name<pos:position pos:line="14" pos:column="72"/></name></name></expr></argument>,
			<argument><expr><call><name pos:line="15" pos:column="25">sha1_to_hex<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name><name pos:line="15" pos:column="37">lock<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">old_sha1<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="54">sha1_to_hex<pos:position pos:line="15" pos:column="65"/></name><argument_list pos:line="15" pos:column="65">(<argument><expr><name pos:line="15" pos:column="66">old_sha1<pos:position pos:line="15" pos:column="74"/></name></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">unlock_ref<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">lock<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">errno<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">EBUSY<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">lock<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3731_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">push_cas<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">add_cas_entry<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">push_cas_option<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">cas<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">refname<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="3" pos:column="39">size_t<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">refnamelen<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">push_cas<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">entry<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">ALLOC_GROW<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name><name pos:line="6" pos:column="20">cas<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">entry<pos:position pos:line="6" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="32">cas<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">nr<pos:position pos:line="6" pos:column="39"/></name></name> <operator pos:line="6" pos:column="40">+<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="42">1<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="45">cas<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">-&gt;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="50">alloc<pos:position pos:line="6" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">entry<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">&amp;<pos:position pos:line="7" pos:column="22"/></operator><name><name pos:line="7" pos:column="18">cas<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">entry<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><name><name pos:line="7" pos:column="29">cas<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">nr<pos:position pos:line="7" pos:column="36"/></name></name><operator pos:line="7" pos:column="36">++<pos:position pos:line="7" pos:column="38"/></operator></expr>]<pos:position pos:line="7" pos:column="39"/></index></name></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">memset<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">entry<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="26">sizeof<argument_list pos:line="8" pos:column="32">(<argument><expr><operator pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">entry<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">entry<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">refname<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">xmemdupz<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">refname<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">refnamelen<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">entry<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

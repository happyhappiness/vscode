<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2241_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_ok_to_remove<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">name<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">len<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">dtype<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name><name pos:line="2" pos:column="37">struct<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">cache_entry<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">ce<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="61">struct<pos:position pos:line="2" pos:column="67"/></name> <name pos:line="2" pos:column="68">stat<pos:position pos:line="2" pos:column="72"/></name></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">st<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="3" pos:column="31">enum<pos:position pos:line="3" pos:column="35"/></name> <name pos:line="3" pos:column="36">unpack_trees_error_types<pos:position pos:line="3" pos:column="60"/></name></name></type> <name pos:line="3" pos:column="61">error_type<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="4" pos:column="31">struct<pos:position pos:line="4" pos:column="37"/></name> <name pos:line="4" pos:column="38">unpack_trees_options<pos:position pos:line="4" pos:column="58"/></name></name> <modifier pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></modifier></type><name pos:line="4" pos:column="60">o<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="62"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name><name pos:line="6" pos:column="15">struct<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">cache_entry<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">result<pos:position pos:line="6" pos:column="41"/></name></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/*
	 * It may be that the 'lstat()' succeeded even though
	 * target 'ce' was absent, because there is an old
	 * entry that is different only in case..
	 *
	 * Ignore that lstat() if it matches.
	 */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">ignore_case<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <call><name pos:line="15" pos:column="28">icase_exists<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">o<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">name<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">len<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="55">st<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="59"/></condition><then pos:line="15" pos:column="59">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">o<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">dir<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">&amp;&amp;<pos:position pos:line="18" pos:column="30"/></operator>
	    <call><name pos:line="19" pos:column="13">is_excluded<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name><name pos:line="19" pos:column="25">o<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">dir<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">name<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="39">&amp;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="40">dtype<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47">
		<comment type="block" pos:line="20" pos:column="17">/*
		 * ce-&gt;name is explicitly excluded, so it is Ok to
		 * overwrite it.
		 */</comment>
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">S_ISDIR<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">st<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">st_mode<pos:position pos:line="25" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
		<comment type="block" pos:line="26" pos:column="17">/*
		 * We are checking out path "foo" and
		 * found "foo/." in the working tree.
		 * This is tricky -- if we have modified
		 * files that are in "foo/" we would lose
		 * them.
		 */</comment>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">verify_clean_subdirectory<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name pos:line="33" pos:column="47">ce<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">error_type<pos:position pos:line="33" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">o<pos:position pos:line="33" pos:column="64"/></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call> <operator pos:line="33" pos:column="66">&lt;<pos:position pos:line="33" pos:column="70"/></operator> <literal type="number" pos:line="33" pos:column="68">0<pos:position pos:line="33" pos:column="69"/></literal></expr>)<pos:position pos:line="33" pos:column="70"/></condition><then pos:line="33" pos:column="70">
			<block type="pseudo"><return pos:line="34" pos:column="25">return <expr><operator pos:line="34" pos:column="32">-<pos:position pos:line="34" pos:column="33"/></operator><literal type="number" pos:line="34" pos:column="33">1<pos:position pos:line="34" pos:column="34"/></literal></expr>;<pos:position pos:line="34" pos:column="35"/></return></block></then></if>
		<return pos:line="35" pos:column="17">return <expr><literal type="number" pos:line="35" pos:column="24">0<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/*
	 * The previous round may already have decided to
	 * delete this path, which is in a subdirectory that
	 * is being replaced with a blob.
	 */</comment>
	<expr_stmt><expr><name pos:line="43" pos:column="9">result<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">index_file_exists<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><operator pos:line="43" pos:column="36">&amp;<pos:position pos:line="43" pos:column="41"/></operator><name><name pos:line="43" pos:column="37">o<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">result<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">name<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">len<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="59">0<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">result<pos:position pos:line="44" pos:column="19"/></name></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block pos:line="44" pos:column="21">{
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">result<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">ce_flags<pos:position pos:line="45" pos:column="37"/></name></name> <operator pos:line="45" pos:column="38">&amp;<pos:position pos:line="45" pos:column="43"/></operator> <name pos:line="45" pos:column="40">CE_REMOVE<pos:position pos:line="45" pos:column="49"/></name></expr>)<pos:position pos:line="45" pos:column="50"/></condition><then pos:line="45" pos:column="50">
			<block type="pseudo"><return pos:line="46" pos:column="25">return <expr><literal type="number" pos:line="46" pos:column="32">0<pos:position pos:line="46" pos:column="33"/></literal></expr>;<pos:position pos:line="46" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<return pos:line="49" pos:column="9">return <expr><ternary><condition><expr><name><name pos:line="49" pos:column="16">o<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">gently<pos:position pos:line="49" pos:column="25"/></name></name></expr> ?<pos:position pos:line="49" pos:column="27"/></condition><then pos:line="49" pos:column="27"> <expr><operator pos:line="49" pos:column="28">-<pos:position pos:line="49" pos:column="29"/></operator><literal type="number" pos:line="49" pos:column="29">1<pos:position pos:line="49" pos:column="30"/></literal></expr> <pos:position pos:line="49" pos:column="31"/></then><else pos:line="49" pos:column="31">:
		<expr><call><name pos:line="50" pos:column="17">add_rejected_path<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">o<pos:position pos:line="50" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">error_type<pos:position pos:line="50" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="50">name<pos:position pos:line="50" pos:column="54"/></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="50" pos:column="56"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

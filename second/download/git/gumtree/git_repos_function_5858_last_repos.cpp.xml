<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5858_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_branch_desc<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">strbuf<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">out<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">name<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">desc<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">STRBUF_INIT<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">read_branch_desc<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><operator pos:line="5" pos:column="31">&amp;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="32">desc<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">name<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44"> <block pos:line="5" pos:column="45">{
		<decl_stmt><decl><type><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier> <name pos:line="6" pos:column="23">char<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">bp<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name><name pos:line="6" pos:column="34">desc<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">buf<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
		<while pos:line="7" pos:column="17">while <condition pos:line="7" pos:column="23">(<expr><operator pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">bp<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition> <block pos:line="7" pos:column="29">{
			<decl_stmt><decl><type><specifier pos:line="8" pos:column="25">const<pos:position pos:line="8" pos:column="30"/></specifier> <name pos:line="8" pos:column="31">char<pos:position pos:line="8" pos:column="35"/></name> <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier></type><name pos:line="8" pos:column="37">ep<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><call><name pos:line="8" pos:column="42">strchrnul<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">bp<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="56">'\n'<pos:position pos:line="8" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">ep<pos:position pos:line="9" pos:column="32"/></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
				<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="33">ep<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">++<pos:position pos:line="10" pos:column="37"/></operator></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">strbuf_addf<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">out<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="42">"  : %.*s"<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>, <argument><expr><call pos:line="11" pos:column="54">(<name pos:line="11" pos:column="55">int<pos:position pos:line="11" pos:column="58"/></name>)<argument_list pos:line="11" pos:column="59">(<argument><expr><name pos:line="11" pos:column="60">ep<pos:position pos:line="11" pos:column="62"/></name> <operator pos:line="11" pos:column="63">-<pos:position pos:line="11" pos:column="64"/></operator> <name pos:line="11" pos:column="65">bp<pos:position pos:line="11" pos:column="67"/></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="70">bp<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">bp<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">ep<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">strbuf_complete_line<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">out<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strbuf_release<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="25">desc<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

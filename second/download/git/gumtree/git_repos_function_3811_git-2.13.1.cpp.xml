<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3811_git-2.13.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fill_active_slot<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">unused<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">transfer_request<pos:position pos:line="3" pos:column="32"/></name></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">request<pos:position pos:line="3" pos:column="41"/></name></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">aborted<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">||<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">!<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">is_running_queue<pos:position pos:line="5" pos:column="41"/></name></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">request<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">request_queue_head<pos:position pos:line="8" pos:column="42"/></name></expr>;<pos:position pos:line="8" pos:column="43"/></init> <condition><expr><name pos:line="8" pos:column="44">request<pos:position pos:line="8" pos:column="51"/></name></expr>;<pos:position pos:line="8" pos:column="52"/></condition> <incr><expr><name pos:line="8" pos:column="53">request<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">=<pos:position pos:line="8" pos:column="62"/></operator> <name><name pos:line="8" pos:column="63">request<pos:position pos:line="8" pos:column="70"/></name><operator pos:line="8" pos:column="70">-&gt;<pos:position pos:line="8" pos:column="75"/></operator><name pos:line="8" pos:column="72">next<pos:position pos:line="8" pos:column="76"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="77"/></control> <block pos:line="8" pos:column="78">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">request<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">state<pos:position pos:line="9" pos:column="35"/></name></name> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">NEED_FETCH<pos:position pos:line="9" pos:column="49"/></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">start_fetch_loose<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">request<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
			<return pos:line="11" pos:column="25">return <expr><literal type="number" pos:line="11" pos:column="32">1<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></return>
		}<pos:position pos:line="12" pos:column="18"/></block></then> <elseif pos:line="12" pos:column="19">else <if pos:line="12" pos:column="24">if <condition pos:line="12" pos:column="27">(<expr><name pos:line="12" pos:column="28">pushing<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">&amp;&amp;<pos:position pos:line="12" pos:column="46"/></operator> <name><name pos:line="12" pos:column="39">request<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="48">state<pos:position pos:line="12" pos:column="53"/></name></name> <operator pos:line="12" pos:column="54">==<pos:position pos:line="12" pos:column="56"/></operator> <name pos:line="12" pos:column="57">NEED_PUSH<pos:position pos:line="12" pos:column="66"/></name></expr>)<pos:position pos:line="12" pos:column="67"/></condition><then pos:line="12" pos:column="67"> <block pos:line="12" pos:column="68">{
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name><name pos:line="13" pos:column="29">remote_dir_exists<pos:position pos:line="13" pos:column="46"/></name><index pos:line="13" pos:column="46">[<expr><name><name pos:line="13" pos:column="47">request<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">obj<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">-&gt;<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="61">oid<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">.<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="65">hash<pos:position pos:line="13" pos:column="69"/></name><index pos:line="13" pos:column="69">[<expr><literal type="number" pos:line="13" pos:column="70">0<pos:position pos:line="13" pos:column="71"/></literal></expr>]<pos:position pos:line="13" pos:column="72"/></index></name></expr>]<pos:position pos:line="13" pos:column="73"/></index></name> <operator pos:line="13" pos:column="74">==<pos:position pos:line="13" pos:column="76"/></operator> <literal type="number" pos:line="13" pos:column="77">1<pos:position pos:line="13" pos:column="78"/></literal></expr>)<pos:position pos:line="13" pos:column="79"/></condition><then pos:line="13" pos:column="79"> <block pos:line="13" pos:column="80">{
				<expr_stmt><expr><call><name pos:line="14" pos:column="33">start_put<pos:position pos:line="14" pos:column="42"/></name><argument_list pos:line="14" pos:column="42">(<argument><expr><name pos:line="14" pos:column="43">request<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="15" pos:column="26"/></block></then> <else pos:line="15" pos:column="27">else <block pos:line="15" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="16" pos:column="33">start_mkcol<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">request<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="17" pos:column="26"/></block></else></if>
			<return pos:line="18" pos:column="25">return <expr><literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="20" pos:column="10"/></block></for>
	<return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2294_git-2.3.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">discovery<pos:position pos:line="1" pos:column="24"/></name></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">discover_refs<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">service<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">for_push<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">strbuf<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">exp<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">STRBUF_INIT<pos:position pos:line="3" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">type<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">STRBUF_INIT<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">charset<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><name pos:line="5" pos:column="33">STRBUF_INIT<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">buffer<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">STRBUF_INIT<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">refs_url<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">STRBUF_INIT<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">effective_url<pos:position pos:line="8" pos:column="36"/></name> <init pos:line="8" pos:column="37">= <expr><name pos:line="8" pos:column="39">STRBUF_INIT<pos:position pos:line="8" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">discovery<pos:position pos:line="9" pos:column="25"/></name></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">last<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><name pos:line="9" pos:column="34">last_discovery<pos:position pos:line="9" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">http_ret<pos:position pos:line="10" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="23">maybe_smart<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><literal type="number" pos:line="10" pos:column="37">0<pos:position pos:line="10" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">http_get_options<pos:position pos:line="11" pos:column="32"/></name></name></type> <name pos:line="11" pos:column="33">options<pos:position pos:line="11" pos:column="40"/></name></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">last<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&amp;&amp;<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><call><name pos:line="13" pos:column="22">strcmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">service<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="38">last<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">service<pos:position pos:line="13" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">last<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">free_discovery<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">last<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strbuf_addf<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="22">refs_url<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="32">"%sinfo/refs"<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="47">url<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">.<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">buf<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">starts_with<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">url<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">buf<pos:position pos:line="18" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"http://"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call> <operator pos:line="18" pos:column="46">||<pos:position pos:line="18" pos:column="48"/></operator> <call><name pos:line="18" pos:column="49">starts_with<pos:position pos:line="18" pos:column="60"/></name><argument_list pos:line="18" pos:column="60">(<argument><expr><name><name pos:line="18" pos:column="61">url<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">.<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="65">buf<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="70">"https://"<pos:position pos:line="18" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="81"/></argument_list></call><operator pos:line="18" pos:column="81">)<pos:position pos:line="18" pos:column="82"/></operator> <operator pos:line="18" pos:column="83">&amp;&amp;<pos:position pos:line="18" pos:column="93"/></operator>
	     <call><name pos:line="19" pos:column="14">git_env_bool<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><literal type="string" pos:line="19" pos:column="27">"GIT_SMART_HTTP"<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="45">1<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">maybe_smart<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">1<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><call><name pos:line="21" pos:column="22">strchr<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name><name pos:line="21" pos:column="29">url<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">buf<pos:position pos:line="21" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="38">'?'<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">strbuf_addch<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><operator pos:line="22" pos:column="38">&amp;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="39">refs_url<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="49">'?'<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt></block></then>
		<else pos:line="23" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">strbuf_addch<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><operator pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="39">refs_url<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="49">'&amp;'<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strbuf_addf<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">&amp;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="30">refs_url<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="40">"service=%s"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">service<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">memset<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><operator pos:line="28" pos:column="16">&amp;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="17">options<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="26">0<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="29">sizeof<argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">options<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">options<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">content_type<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <operator pos:line="29" pos:column="32">&amp;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="33">type<pos:position pos:line="29" pos:column="37"/></name></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">options<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">.<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">charset<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <operator pos:line="30" pos:column="27">&amp;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="28">charset<pos:position pos:line="30" pos:column="35"/></name></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="31" pos:column="9">options<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">.<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">effective_url<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <operator pos:line="31" pos:column="33">&amp;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="34">effective_url<pos:position pos:line="31" pos:column="47"/></name></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">options<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">.<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">base_url<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <operator pos:line="32" pos:column="28">&amp;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="29">url<pos:position pos:line="32" pos:column="32"/></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">options<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">no_cache<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">1<pos:position pos:line="33" pos:column="29"/></literal></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">options<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">.<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">keep_error<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="30">1<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="36" pos:column="9">http_ret<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">http_get_strbuf<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name><name pos:line="36" pos:column="36">refs_url<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">.<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">buf<pos:position pos:line="36" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="50">&amp;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="51">buffer<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="59">&amp;<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="60">options<pos:position pos:line="36" pos:column="67"/></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
	<switch pos:line="37" pos:column="9">switch <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">http_ret<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition> <block pos:line="37" pos:column="27">{
	<case pos:line="38" pos:column="9">case <expr><name pos:line="38" pos:column="14">HTTP_OK<pos:position pos:line="38" pos:column="21"/></name></expr>:<pos:position pos:line="38" pos:column="22"/></case>
		<break pos:line="39" pos:column="17">break;<pos:position pos:line="39" pos:column="23"/></break>
	<case pos:line="40" pos:column="9">case <expr><name pos:line="40" pos:column="14">HTTP_MISSING_TARGET<pos:position pos:line="40" pos:column="33"/></name></expr>:<pos:position pos:line="40" pos:column="34"/></case>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">show_http_message<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><operator pos:line="41" pos:column="35">&amp;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="36">type<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="42">&amp;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="43">charset<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="52">&amp;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="53">buffer<pos:position pos:line="41" pos:column="59"/></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">die<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><literal type="string" pos:line="42" pos:column="21">"repository '%s' not found"<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="50">url<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">.<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="54">buf<pos:position pos:line="42" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
	<case pos:line="43" pos:column="9">case <expr><name pos:line="43" pos:column="14">HTTP_NOAUTH<pos:position pos:line="43" pos:column="25"/></name></expr>:<pos:position pos:line="43" pos:column="26"/></case>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">show_http_message<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><operator pos:line="44" pos:column="35">&amp;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="36">type<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="42">&amp;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="43">charset<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="52">&amp;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="53">buffer<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">die<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><literal type="string" pos:line="45" pos:column="21">"Authentication failed for '%s'"<pos:position pos:line="45" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="55">url<pos:position pos:line="45" pos:column="58"/></name><operator pos:line="45" pos:column="58">.<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="59">buf<pos:position pos:line="45" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="64"/></expr_stmt>
	<default pos:line="46" pos:column="9">default:<pos:position pos:line="46" pos:column="17"/></default>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">show_http_message<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><operator pos:line="47" pos:column="35">&amp;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="36">type<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="42">&amp;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="43">charset<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="52">&amp;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="53">buffer<pos:position pos:line="47" pos:column="59"/></name></expr></argument>)<pos:position pos:line="47" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">die<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><literal type="string" pos:line="48" pos:column="21">"unable to access '%s': %s"<pos:position pos:line="48" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="50">url<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">.<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="54">buf<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">curl_errorstr<pos:position pos:line="48" pos:column="72"/></name></expr></argument>)<pos:position pos:line="48" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></switch>

	<expr_stmt><expr><name pos:line="51" pos:column="9">last<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <call><name pos:line="51" pos:column="15">xcalloc<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><literal type="number" pos:line="51" pos:column="23">1<pos:position pos:line="51" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="26">sizeof<argument_list pos:line="51" pos:column="32">(<argument><expr><operator pos:line="51" pos:column="33">*<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="34">last_discovery<pos:position pos:line="51" pos:column="48"/></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">last<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">service<pos:position pos:line="52" pos:column="22"/></name></name> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="25">service<pos:position pos:line="52" pos:column="32"/></name></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">last<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">buf_alloc<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <call><name pos:line="53" pos:column="27">strbuf_detach<pos:position pos:line="53" pos:column="40"/></name><argument_list pos:line="53" pos:column="40">(<argument><expr><operator pos:line="53" pos:column="41">&amp;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="42">buffer<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="50">&amp;<pos:position pos:line="53" pos:column="55"/></operator><name><name pos:line="53" pos:column="51">last<pos:position pos:line="53" pos:column="55"/></name><operator pos:line="53" pos:column="55">-&gt;<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="57">len<pos:position pos:line="53" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">last<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">buf<pos:position pos:line="54" pos:column="18"/></name></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name><name pos:line="54" pos:column="21">last<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">-&gt;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="27">buf_alloc<pos:position pos:line="54" pos:column="36"/></name></name></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">strbuf_addf<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><operator pos:line="56" pos:column="21">&amp;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="22">exp<pos:position pos:line="56" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="27">"application/x-%s-advertisement"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">service<pos:position pos:line="56" pos:column="68"/></name></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">maybe_smart<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">&amp;&amp;<pos:position pos:line="57" pos:column="35"/></operator>
	    <operator pos:line="58" pos:column="13">(<pos:position pos:line="58" pos:column="14"/></operator><literal type="number" pos:line="58" pos:column="14">5<pos:position pos:line="58" pos:column="15"/></literal> <operator pos:line="58" pos:column="16">&lt;=<pos:position pos:line="58" pos:column="21"/></operator> <name><name pos:line="58" pos:column="19">last<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">len<pos:position pos:line="58" pos:column="28"/></name></name> <operator pos:line="58" pos:column="29">&amp;&amp;<pos:position pos:line="58" pos:column="39"/></operator> <name><name pos:line="58" pos:column="32">last<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">-&gt;<pos:position pos:line="58" pos:column="41"/></operator><name pos:line="58" pos:column="38">buf<pos:position pos:line="58" pos:column="41"/></name><index pos:line="58" pos:column="41">[<expr><literal type="number" pos:line="58" pos:column="42">4<pos:position pos:line="58" pos:column="43"/></literal></expr>]<pos:position pos:line="58" pos:column="44"/></index></name> <operator pos:line="58" pos:column="45">==<pos:position pos:line="58" pos:column="47"/></operator> <literal type="char" pos:line="58" pos:column="48">'#'<pos:position pos:line="58" pos:column="51"/></literal><operator pos:line="58" pos:column="51">)<pos:position pos:line="58" pos:column="52"/></operator> <operator pos:line="58" pos:column="53">&amp;&amp;<pos:position pos:line="58" pos:column="63"/></operator>
	    <operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><call><name pos:line="59" pos:column="14">strbuf_cmp<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><operator pos:line="59" pos:column="25">&amp;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="26">exp<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="31">&amp;<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="32">type<pos:position pos:line="59" pos:column="36"/></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="38"/></condition><then pos:line="59" pos:column="38"> <block pos:line="59" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="60" pos:column="17">char<pos:position pos:line="60" pos:column="21"/></name> <modifier pos:line="60" pos:column="22">*<pos:position pos:line="60" pos:column="23"/></modifier></type><name pos:line="60" pos:column="23">line<pos:position pos:line="60" pos:column="27"/></name></decl>;<pos:position pos:line="60" pos:column="28"/></decl_stmt>

		<comment type="block" pos:line="62" pos:column="17">/*
		 * smart HTTP response; validate that the service
		 * pkt-line matches our request.
		 */</comment>
		<expr_stmt><expr><name pos:line="66" pos:column="17">line<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <call><name pos:line="66" pos:column="24">packet_read_line_buf<pos:position pos:line="66" pos:column="44"/></name><argument_list pos:line="66" pos:column="44">(<argument><expr><operator pos:line="66" pos:column="45">&amp;<pos:position pos:line="66" pos:column="50"/></operator><name><name pos:line="66" pos:column="46">last<pos:position pos:line="66" pos:column="50"/></name><operator pos:line="66" pos:column="50">-&gt;<pos:position pos:line="66" pos:column="55"/></operator><name pos:line="66" pos:column="52">buf<pos:position pos:line="66" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="57">&amp;<pos:position pos:line="66" pos:column="62"/></operator><name><name pos:line="66" pos:column="58">last<pos:position pos:line="66" pos:column="62"/></name><operator pos:line="66" pos:column="62">-&gt;<pos:position pos:line="66" pos:column="67"/></operator><name pos:line="66" pos:column="64">len<pos:position pos:line="66" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="69">NULL<pos:position pos:line="66" pos:column="73"/></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="68" pos:column="17">strbuf_reset<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><operator pos:line="68" pos:column="30">&amp;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="31">exp<pos:position pos:line="68" pos:column="34"/></name></expr></argument>)<pos:position pos:line="68" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">strbuf_addf<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><operator pos:line="69" pos:column="29">&amp;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="30">exp<pos:position pos:line="69" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="35">"# service=%s"<pos:position pos:line="69" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="51">service<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="60"/></expr_stmt>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><call><name pos:line="70" pos:column="21">strcmp<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">line<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="34">exp<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">.<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">buf<pos:position pos:line="70" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="43"/></condition><then pos:line="70" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="25">die<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><literal type="string" pos:line="71" pos:column="29">"invalid server response; got '%s'"<pos:position pos:line="71" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="66">line<pos:position pos:line="71" pos:column="70"/></name></expr></argument>)<pos:position pos:line="71" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="72"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">strbuf_release<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><operator pos:line="72" pos:column="32">&amp;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="33">exp<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>

		<comment type="block" pos:line="74" pos:column="17">/* The header can include additional metadata lines, up
		 * until a packet flush marker.  Ignore these now, but
		 * in the future we might start to scan them.
		 */</comment>
		<while pos:line="78" pos:column="17">while <condition pos:line="78" pos:column="23">(<expr><call><name pos:line="78" pos:column="24">packet_read_line_buf<pos:position pos:line="78" pos:column="44"/></name><argument_list pos:line="78" pos:column="44">(<argument><expr><operator pos:line="78" pos:column="45">&amp;<pos:position pos:line="78" pos:column="50"/></operator><name><name pos:line="78" pos:column="46">last<pos:position pos:line="78" pos:column="50"/></name><operator pos:line="78" pos:column="50">-&gt;<pos:position pos:line="78" pos:column="55"/></operator><name pos:line="78" pos:column="52">buf<pos:position pos:line="78" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="57">&amp;<pos:position pos:line="78" pos:column="62"/></operator><name><name pos:line="78" pos:column="58">last<pos:position pos:line="78" pos:column="62"/></name><operator pos:line="78" pos:column="62">-&gt;<pos:position pos:line="78" pos:column="67"/></operator><name pos:line="78" pos:column="64">len<pos:position pos:line="78" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="69">NULL<pos:position pos:line="78" pos:column="73"/></name></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="75"/></condition>
			<block type="pseudo"><empty_stmt pos:line="79" pos:column="25">;<pos:position pos:line="79" pos:column="26"/></empty_stmt></block></while>

		<expr_stmt><expr><name><name pos:line="81" pos:column="17">last<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">proto_git<pos:position pos:line="81" pos:column="32"/></name></name> <operator pos:line="81" pos:column="33">=<pos:position pos:line="81" pos:column="34"/></operator> <literal type="number" pos:line="81" pos:column="35">1<pos:position pos:line="81" pos:column="36"/></literal></expr>;<pos:position pos:line="81" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if>

	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name><name pos:line="84" pos:column="13">last<pos:position pos:line="84" pos:column="17"/></name><operator pos:line="84" pos:column="17">-&gt;<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="19">proto_git<pos:position pos:line="84" pos:column="28"/></name></name></expr>)<pos:position pos:line="84" pos:column="29"/></condition><then pos:line="84" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="85" pos:column="17">last<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">refs<pos:position pos:line="85" pos:column="27"/></name></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <call><name pos:line="85" pos:column="30">parse_git_refs<pos:position pos:line="85" pos:column="44"/></name><argument_list pos:line="85" pos:column="44">(<argument><expr><name pos:line="85" pos:column="45">last<pos:position pos:line="85" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="51">for_push<pos:position pos:line="85" pos:column="59"/></name></expr></argument>)<pos:position pos:line="85" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="61"/></expr_stmt></block></then>
	<else pos:line="86" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="87" pos:column="17">last<pos:position pos:line="87" pos:column="21"/></name><operator pos:line="87" pos:column="21">-&gt;<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="23">refs<pos:position pos:line="87" pos:column="27"/></name></name> <operator pos:line="87" pos:column="28">=<pos:position pos:line="87" pos:column="29"/></operator> <call><name pos:line="87" pos:column="30">parse_info_refs<pos:position pos:line="87" pos:column="45"/></name><argument_list pos:line="87" pos:column="45">(<argument><expr><name pos:line="87" pos:column="46">last<pos:position pos:line="87" pos:column="50"/></name></expr></argument>)<pos:position pos:line="87" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="89" pos:column="9">strbuf_release<pos:position pos:line="89" pos:column="23"/></name><argument_list pos:line="89" pos:column="23">(<argument><expr><operator pos:line="89" pos:column="24">&amp;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="25">refs_url<pos:position pos:line="89" pos:column="33"/></name></expr></argument>)<pos:position pos:line="89" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">strbuf_release<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><operator pos:line="90" pos:column="24">&amp;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="25">exp<pos:position pos:line="90" pos:column="28"/></name></expr></argument>)<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">strbuf_release<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><operator pos:line="91" pos:column="24">&amp;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="25">type<pos:position pos:line="91" pos:column="29"/></name></expr></argument>)<pos:position pos:line="91" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">strbuf_release<pos:position pos:line="92" pos:column="23"/></name><argument_list pos:line="92" pos:column="23">(<argument><expr><operator pos:line="92" pos:column="24">&amp;<pos:position pos:line="92" pos:column="29"/></operator><name pos:line="92" pos:column="25">charset<pos:position pos:line="92" pos:column="32"/></name></expr></argument>)<pos:position pos:line="92" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">strbuf_release<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><operator pos:line="93" pos:column="24">&amp;<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="25">effective_url<pos:position pos:line="93" pos:column="38"/></name></expr></argument>)<pos:position pos:line="93" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">strbuf_release<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">(<argument><expr><operator pos:line="94" pos:column="24">&amp;<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="25">buffer<pos:position pos:line="94" pos:column="31"/></name></expr></argument>)<pos:position pos:line="94" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="95" pos:column="9">last_discovery<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">last<pos:position pos:line="95" pos:column="30"/></name></expr>;<pos:position pos:line="95" pos:column="31"/></expr_stmt>
	<return pos:line="96" pos:column="9">return <expr><name pos:line="96" pos:column="16">last<pos:position pos:line="96" pos:column="20"/></name></expr>;<pos:position pos:line="96" pos:column="21"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1751_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_crash_report<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">err<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">loc<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">git_pathdup<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><literal type="string" pos:line="3" pos:column="33">"fast_import_crash_%"<pos:position pos:line="3" pos:column="54"/></literal><name pos:line="3" pos:column="54">PRIuMAX<pos:position pos:line="3" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="63">(<pos:position pos:line="3" pos:column="64"/></operator><name pos:line="3" pos:column="64">uintmax_t<pos:position pos:line="3" pos:column="73"/></name><operator pos:line="3" pos:column="73">)<pos:position pos:line="3" pos:column="74"/></operator> <call><name pos:line="3" pos:column="75">getpid<pos:position pos:line="3" pos:column="81"/></name><argument_list pos:line="3" pos:column="81">()<pos:position pos:line="3" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="85"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">FILE<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">rpt<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">fopen<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">loc<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="32">"w"<pos:position pos:line="4" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">branch<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">b<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">lu<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">recent_command<pos:position pos:line="7" pos:column="30"/></name></name> <modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier></type><name pos:line="7" pos:column="32">rc<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">rpt<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">error_errno<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><literal type="string" pos:line="10" pos:column="29">"can't write crash report %s"<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="60">loc<pos:position pos:line="10" pos:column="63"/></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">free<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">loc<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
		<return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">fprintf<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">stderr<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"fast-import: dumping crash report to %s\n"<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="70">loc<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">rpt<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="22">"fast-import crash report:\n"<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">fprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">rpt<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="22">"    fast-import process: %"<pos:position pos:line="18" pos:column="50"/></literal><name pos:line="18" pos:column="50">PRIuMAX<pos:position pos:line="18" pos:column="57"/></name><literal type="string" pos:line="18" pos:column="57">"\n"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="63">(<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="64">uintmax_t<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">)<pos:position pos:line="18" pos:column="74"/></operator> <call><name pos:line="18" pos:column="75">getpid<pos:position pos:line="18" pos:column="81"/></name><argument_list pos:line="18" pos:column="81">()<pos:position pos:line="18" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="85"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">fprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">rpt<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="22">"    parent process     : %"<pos:position pos:line="19" pos:column="50"/></literal><name pos:line="19" pos:column="50">PRIuMAX<pos:position pos:line="19" pos:column="57"/></name><literal type="string" pos:line="19" pos:column="57">"\n"<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="63">(<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="64">uintmax_t<pos:position pos:line="19" pos:column="73"/></name><operator pos:line="19" pos:column="73">)<pos:position pos:line="19" pos:column="74"/></operator> <call><name pos:line="19" pos:column="75">getppid<pos:position pos:line="19" pos:column="82"/></name><argument_list pos:line="19" pos:column="82">()<pos:position pos:line="19" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="86"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">fprintf<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">rpt<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="22">"    at %s\n"<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="37">show_date<pos:position pos:line="20" pos:column="46"/></name><argument_list pos:line="20" pos:column="46">(<argument><expr><call><name pos:line="20" pos:column="47">time<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name pos:line="20" pos:column="52">NULL<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="59">0<pos:position pos:line="20" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="62">DATE_MODE<pos:position pos:line="20" pos:column="71"/></name><argument_list pos:line="20" pos:column="71">(<argument><expr><name pos:line="20" pos:column="72">ISO8601<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">fputc<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="char" pos:line="21" pos:column="15">'\n'<pos:position pos:line="21" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="21">rpt<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">fputs<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><literal type="string" pos:line="23" pos:column="15">"fatal: "<pos:position pos:line="23" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">rpt<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">fputs<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">err<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">rpt<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">fputc<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><literal type="char" pos:line="25" pos:column="15">'\n'<pos:position pos:line="25" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="21">rpt<pos:position pos:line="25" pos:column="24"/></name></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="27" pos:column="9">fputc<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><literal type="char" pos:line="27" pos:column="15">'\n'<pos:position pos:line="27" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="21">rpt<pos:position pos:line="27" pos:column="24"/></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">fputs<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><literal type="string" pos:line="28" pos:column="15">"Most Recent Commands Before Crash\n"<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">rpt<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">fputs<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><literal type="string" pos:line="29" pos:column="15">"---------------------------------\n"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">rpt<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">rc<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name><name pos:line="30" pos:column="19">cmd_hist<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">next<pos:position pos:line="30" pos:column="32"/></name></name></expr>;<pos:position pos:line="30" pos:column="33"/></init> <condition><expr><name pos:line="30" pos:column="34">rc<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">!=<pos:position pos:line="30" pos:column="39"/></operator> <operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="41">cmd_hist<pos:position pos:line="30" pos:column="49"/></name></expr>;<pos:position pos:line="30" pos:column="50"/></condition> <incr><expr><name pos:line="30" pos:column="51">rc<pos:position pos:line="30" pos:column="53"/></name> <operator pos:line="30" pos:column="54">=<pos:position pos:line="30" pos:column="55"/></operator> <name><name pos:line="30" pos:column="56">rc<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">-&gt;<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="60">next<pos:position pos:line="30" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="65"/></control> <block pos:line="30" pos:column="66">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name><name pos:line="31" pos:column="21">rc<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">next<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">==<pos:position pos:line="31" pos:column="32"/></operator> <operator pos:line="31" pos:column="33">&amp;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="34">cmd_hist<pos:position pos:line="31" pos:column="42"/></name></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">fputs<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><literal type="string" pos:line="32" pos:column="31">"* "<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">rpt<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt></block></then>
		<else pos:line="33" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">fputs<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><literal type="string" pos:line="34" pos:column="31">"  "<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="37">rpt<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">fputs<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name><name pos:line="35" pos:column="23">rc<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">buf<pos:position pos:line="35" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">rpt<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">fputc<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="char" pos:line="36" pos:column="23">'\n'<pos:position pos:line="36" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="29">rpt<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">fputc<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><literal type="char" pos:line="39" pos:column="15">'\n'<pos:position pos:line="39" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="21">rpt<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">fputs<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"Active Branch LRU\n"<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">rpt<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">fputs<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><literal type="string" pos:line="41" pos:column="15">"-----------------\n"<pos:position pos:line="41" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">rpt<pos:position pos:line="41" pos:column="41"/></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">fprintf<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">rpt<pos:position pos:line="42" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="22">"    active_branches = %lu cur, %lu max\n"<pos:position pos:line="42" pos:column="64"/></literal></expr></argument>,
		<argument><expr><name pos:line="43" pos:column="17">cur_active_branches<pos:position pos:line="43" pos:column="36"/></name></expr></argument>,
		<argument><expr><name pos:line="44" pos:column="17">max_active_branches<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">fputc<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><literal type="char" pos:line="45" pos:column="15">'\n'<pos:position pos:line="45" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="21">rpt<pos:position pos:line="45" pos:column="24"/></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">fputs<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><literal type="string" pos:line="46" pos:column="15">"  pos  clock name\n"<pos:position pos:line="46" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">rpt<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">fputs<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><literal type="string" pos:line="47" pos:column="15">"  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"<pos:position pos:line="47" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="68">rpt<pos:position pos:line="47" pos:column="71"/></name></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="73"/></expr_stmt>
	<for pos:line="48" pos:column="9">for <control pos:line="48" pos:column="13">(<init><expr><name pos:line="48" pos:column="14">b<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">active_branches<pos:position pos:line="48" pos:column="33"/></name></expr><operator pos:line="48" pos:column="33">,<pos:position pos:line="48" pos:column="34"/></operator> <expr><name pos:line="48" pos:column="35">lu<pos:position pos:line="48" pos:column="37"/></name> <operator pos:line="48" pos:column="38">=<pos:position pos:line="48" pos:column="39"/></operator> <literal type="number" pos:line="48" pos:column="40">0<pos:position pos:line="48" pos:column="41"/></literal></expr>;<pos:position pos:line="48" pos:column="42"/></init> <condition><expr><name pos:line="48" pos:column="43">b<pos:position pos:line="48" pos:column="44"/></name></expr>;<pos:position pos:line="48" pos:column="45"/></condition> <incr><expr><name pos:line="48" pos:column="46">b<pos:position pos:line="48" pos:column="47"/></name> <operator pos:line="48" pos:column="48">=<pos:position pos:line="48" pos:column="49"/></operator> <name><name pos:line="48" pos:column="50">b<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">-&gt;<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="53">active_next_branch<pos:position pos:line="48" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="48" pos:column="72"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">fprintf<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">rpt<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="30">"  %2lu) %6"<pos:position pos:line="49" pos:column="42"/></literal> <name pos:line="49" pos:column="43">PRIuMAX<pos:position pos:line="49" pos:column="50"/></name><literal type="string" pos:line="49" pos:column="50">" %s\n"<pos:position pos:line="49" pos:column="57"/></literal></expr></argument>,
			<argument><expr><operator pos:line="50" pos:column="25">++<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">lu<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="31">b<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">last_commit<pos:position pos:line="50" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="47">b<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="50">name<pos:position pos:line="50" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">fputc<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><literal type="char" pos:line="52" pos:column="15">'\n'<pos:position pos:line="52" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="21">rpt<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">fputs<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><literal type="string" pos:line="53" pos:column="15">"Inactive Branches\n"<pos:position pos:line="53" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">rpt<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">fputs<pos:position pos:line="54" pos:column="14"/></name><argument_list pos:line="54" pos:column="14">(<argument><expr><literal type="string" pos:line="54" pos:column="15">"-----------------\n"<pos:position pos:line="54" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">rpt<pos:position pos:line="54" pos:column="41"/></name></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>
	<for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">lu<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <literal type="number" pos:line="55" pos:column="19">0<pos:position pos:line="55" pos:column="20"/></literal></expr>;<pos:position pos:line="55" pos:column="21"/></init> <condition><expr><name pos:line="55" pos:column="22">lu<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">&lt;<pos:position pos:line="55" pos:column="29"/></operator> <name pos:line="55" pos:column="27">branch_table_sz<pos:position pos:line="55" pos:column="42"/></name></expr>;<pos:position pos:line="55" pos:column="43"/></condition> <incr><expr><name pos:line="55" pos:column="44">lu<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">++<pos:position pos:line="55" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="49"/></control> <block pos:line="55" pos:column="50">{
		<for pos:line="56" pos:column="17">for <control pos:line="56" pos:column="21">(<init><expr><name pos:line="56" pos:column="22">b<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">=<pos:position pos:line="56" pos:column="25"/></operator> <name><name pos:line="56" pos:column="26">branch_table<pos:position pos:line="56" pos:column="38"/></name><index pos:line="56" pos:column="38">[<expr><name pos:line="56" pos:column="39">lu<pos:position pos:line="56" pos:column="41"/></name></expr>]<pos:position pos:line="56" pos:column="42"/></index></name></expr>;<pos:position pos:line="56" pos:column="43"/></init> <condition><expr><name pos:line="56" pos:column="44">b<pos:position pos:line="56" pos:column="45"/></name></expr>;<pos:position pos:line="56" pos:column="46"/></condition> <incr><expr><name pos:line="56" pos:column="47">b<pos:position pos:line="56" pos:column="48"/></name> <operator pos:line="56" pos:column="49">=<pos:position pos:line="56" pos:column="50"/></operator> <name><name pos:line="56" pos:column="51">b<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">-&gt;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="54">table_next_branch<pos:position pos:line="56" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="56" pos:column="72"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">write_branch_report<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">rpt<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="50">b<pos:position pos:line="57" pos:column="51"/></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="53"/></expr_stmt></block></for>
	}<pos:position pos:line="58" pos:column="10"/></block></for>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">first_tag<pos:position pos:line="60" pos:column="22"/></name></expr>)<pos:position pos:line="60" pos:column="23"/></condition><then pos:line="60" pos:column="23"> <block pos:line="60" pos:column="24">{
		<decl_stmt><decl><type><name><name pos:line="61" pos:column="17">struct<pos:position pos:line="61" pos:column="23"/></name> <name pos:line="61" pos:column="24">tag<pos:position pos:line="61" pos:column="27"/></name></name> <modifier pos:line="61" pos:column="28">*<pos:position pos:line="61" pos:column="29"/></modifier></type><name pos:line="61" pos:column="29">tg<pos:position pos:line="61" pos:column="31"/></name></decl>;<pos:position pos:line="61" pos:column="32"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">fputc<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><literal type="char" pos:line="62" pos:column="23">'\n'<pos:position pos:line="62" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="29">rpt<pos:position pos:line="62" pos:column="32"/></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">fputs<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><literal type="string" pos:line="63" pos:column="23">"Annotated Tags\n"<pos:position pos:line="63" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="43">rpt<pos:position pos:line="63" pos:column="46"/></name></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="64" pos:column="17">fputs<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><literal type="string" pos:line="64" pos:column="23">"--------------\n"<pos:position pos:line="64" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="43">rpt<pos:position pos:line="64" pos:column="46"/></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
		<for pos:line="65" pos:column="17">for <control pos:line="65" pos:column="21">(<init><expr><name pos:line="65" pos:column="22">tg<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">=<pos:position pos:line="65" pos:column="26"/></operator> <name pos:line="65" pos:column="27">first_tag<pos:position pos:line="65" pos:column="36"/></name></expr>;<pos:position pos:line="65" pos:column="37"/></init> <condition><expr><name pos:line="65" pos:column="38">tg<pos:position pos:line="65" pos:column="40"/></name></expr>;<pos:position pos:line="65" pos:column="41"/></condition> <incr><expr><name pos:line="65" pos:column="42">tg<pos:position pos:line="65" pos:column="44"/></name> <operator pos:line="65" pos:column="45">=<pos:position pos:line="65" pos:column="46"/></operator> <name><name pos:line="65" pos:column="47">tg<pos:position pos:line="65" pos:column="49"/></name><operator pos:line="65" pos:column="49">-&gt;<pos:position pos:line="65" pos:column="54"/></operator><name pos:line="65" pos:column="51">next_tag<pos:position pos:line="65" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="65" pos:column="60"/></control> <block pos:line="65" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">fputs<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><call><name pos:line="66" pos:column="31">oid_to_hex<pos:position pos:line="66" pos:column="41"/></name><argument_list pos:line="66" pos:column="41">(<argument><expr><operator pos:line="66" pos:column="42">&amp;<pos:position pos:line="66" pos:column="47"/></operator><name><name pos:line="66" pos:column="43">tg<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">-&gt;<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="47">oid<pos:position pos:line="66" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="53">rpt<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">fputc<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><literal type="char" pos:line="67" pos:column="31">' '<pos:position pos:line="67" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="36">rpt<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">fputs<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name><name pos:line="68" pos:column="31">tg<pos:position pos:line="68" pos:column="33"/></name><operator pos:line="68" pos:column="33">-&gt;<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="35">name<pos:position pos:line="68" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="41">rpt<pos:position pos:line="68" pos:column="44"/></name></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">fputc<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><literal type="char" pos:line="69" pos:column="31">'\n'<pos:position pos:line="69" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="37">rpt<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="70" pos:column="18"/></block></for>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="73" pos:column="9">fputc<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><literal type="char" pos:line="73" pos:column="15">'\n'<pos:position pos:line="73" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="21">rpt<pos:position pos:line="73" pos:column="24"/></name></expr></argument>)<pos:position pos:line="73" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">fputs<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><literal type="string" pos:line="74" pos:column="15">"Marks\n"<pos:position pos:line="74" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="26">rpt<pos:position pos:line="74" pos:column="29"/></name></expr></argument>)<pos:position pos:line="74" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">fputs<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><literal type="string" pos:line="75" pos:column="15">"-----\n"<pos:position pos:line="75" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="26">rpt<pos:position pos:line="75" pos:column="29"/></name></expr></argument>)<pos:position pos:line="75" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">export_marks_file<pos:position pos:line="76" pos:column="30"/></name></expr>)<pos:position pos:line="76" pos:column="31"/></condition><then pos:line="76" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="17">fprintf<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">rpt<pos:position pos:line="77" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="30">"  exported to %s\n"<pos:position pos:line="77" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="52">export_marks_file<pos:position pos:line="77" pos:column="69"/></name></expr></argument>)<pos:position pos:line="77" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt></block></then>
	<else pos:line="78" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">dump_marks_helper<pos:position pos:line="79" pos:column="34"/></name><argument_list pos:line="79" pos:column="34">(<argument><expr><name pos:line="79" pos:column="35">rpt<pos:position pos:line="79" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="40">0<pos:position pos:line="79" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="43">marks<pos:position pos:line="79" pos:column="48"/></name></expr></argument>)<pos:position pos:line="79" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="50"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="81" pos:column="9">fputc<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><literal type="char" pos:line="81" pos:column="15">'\n'<pos:position pos:line="81" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="21">rpt<pos:position pos:line="81" pos:column="24"/></name></expr></argument>)<pos:position pos:line="81" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">fputs<pos:position pos:line="82" pos:column="14"/></name><argument_list pos:line="82" pos:column="14">(<argument><expr><literal type="string" pos:line="82" pos:column="15">"-------------------\n"<pos:position pos:line="82" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="40">rpt<pos:position pos:line="82" pos:column="43"/></name></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">fputs<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">(<argument><expr><literal type="string" pos:line="83" pos:column="15">"END OF CRASH REPORT\n"<pos:position pos:line="83" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="40">rpt<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">fclose<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><name pos:line="84" pos:column="16">rpt<pos:position pos:line="84" pos:column="19"/></name></expr></argument>)<pos:position pos:line="84" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">free<pos:position pos:line="85" pos:column="13"/></name><argument_list pos:line="85" pos:column="13">(<argument><expr><name pos:line="85" pos:column="14">loc<pos:position pos:line="85" pos:column="17"/></name></expr></argument>)<pos:position pos:line="85" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="19"/></expr_stmt>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

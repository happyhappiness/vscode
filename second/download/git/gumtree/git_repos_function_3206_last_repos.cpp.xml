<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3206_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_updates<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">unpack_trees_options<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">o<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">cnt<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">errs<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">progress<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">progress<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">NULL<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">index_state<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">index<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><operator pos:line="6" pos:column="37">&amp;<pos:position pos:line="6" pos:column="42"/></operator><name><name pos:line="6" pos:column="38">o<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">result<pos:position pos:line="6" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">checkout<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">state<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name pos:line="7" pos:column="33">CHECKOUT_INIT<pos:position pos:line="7" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="10" pos:column="9">state<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">force<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">1<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">state<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">quiet<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">state<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">refresh_cache<pos:position pos:line="12" pos:column="28"/></name></name> <operator pos:line="12" pos:column="29">=<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="31">1<pos:position pos:line="12" pos:column="32"/></literal></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">state<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">istate<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">index<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">progress<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">get_progress<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">o<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">o<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">update<pos:position pos:line="17" pos:column="22"/></name></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">git_attr_set_direction<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">GIT_ATTR_CHECKOUT<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">index<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt></block></then></if>
	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="25">index<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">cache_nr<pos:position pos:line="19" pos:column="40"/></name></name></expr>;<pos:position pos:line="19" pos:column="41"/></condition> <incr><expr><name pos:line="19" pos:column="42">i<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">++<pos:position pos:line="19" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="46"/></control> <block pos:line="19" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="20" pos:column="17">const<pos:position pos:line="20" pos:column="22"/></specifier> <name><name pos:line="20" pos:column="23">struct<pos:position pos:line="20" pos:column="29"/></name> <name pos:line="20" pos:column="30">cache_entry<pos:position pos:line="20" pos:column="41"/></name></name> <modifier pos:line="20" pos:column="42">*<pos:position pos:line="20" pos:column="43"/></modifier></type><name pos:line="20" pos:column="43">ce<pos:position pos:line="20" pos:column="45"/></name> <init pos:line="20" pos:column="46">= <expr><name><name pos:line="20" pos:column="48">index<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">-&gt;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="55">cache<pos:position pos:line="20" pos:column="60"/></name><index pos:line="20" pos:column="60">[<expr><name pos:line="20" pos:column="61">i<pos:position pos:line="20" pos:column="62"/></name></expr>]<pos:position pos:line="20" pos:column="63"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="64"/></decl_stmt>

		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">ce<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">ce_flags<pos:position pos:line="22" pos:column="33"/></name></name> <operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="36">CE_WT_REMOVE<pos:position pos:line="22" pos:column="48"/></name></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49"> <block pos:line="22" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">display_progress<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><expr><name pos:line="23" pos:column="42">progress<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="52">++<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">cnt<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name><name pos:line="24" pos:column="29">o<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">update<pos:position pos:line="24" pos:column="38"/></name></name> <operator pos:line="24" pos:column="39">&amp;&amp;<pos:position pos:line="24" pos:column="49"/></operator> <operator pos:line="24" pos:column="42">!<pos:position pos:line="24" pos:column="43"/></operator><name><name pos:line="24" pos:column="43">o<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">dry_run<pos:position pos:line="24" pos:column="53"/></name></name></expr>)<pos:position pos:line="24" pos:column="54"/></condition><then pos:line="24" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="33">unlink_entry<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">ce<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">remove_marked_cache_entries<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">index<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">remove_scheduled_dirs<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">()<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">should_update_submodules<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">()<pos:position pos:line="31" pos:column="39"/></argument_list></call> <operator pos:line="31" pos:column="40">&amp;&amp;<pos:position pos:line="31" pos:column="50"/></operator> <name><name pos:line="31" pos:column="43">o<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">update<pos:position pos:line="31" pos:column="52"/></name></name> <operator pos:line="31" pos:column="53">&amp;&amp;<pos:position pos:line="31" pos:column="63"/></operator> <operator pos:line="31" pos:column="56">!<pos:position pos:line="31" pos:column="57"/></operator><name><name pos:line="31" pos:column="57">o<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">-&gt;<pos:position pos:line="31" pos:column="63"/></operator><name pos:line="31" pos:column="60">dry_run<pos:position pos:line="31" pos:column="67"/></name></name></expr>)<pos:position pos:line="31" pos:column="68"/></condition><then pos:line="31" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">reload_gitmodules_file<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">index<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="47">&amp;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="48">state<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">enable_delayed_checkout<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="34">state<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	<for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">i<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></init> <condition><expr><name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="25">index<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">cache_nr<pos:position pos:line="35" pos:column="40"/></name></name></expr>;<pos:position pos:line="35" pos:column="41"/></condition> <incr><expr><name pos:line="35" pos:column="42">i<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">++<pos:position pos:line="35" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="46"/></control> <block pos:line="35" pos:column="47">{
		<decl_stmt><decl><type><name><name pos:line="36" pos:column="17">struct<pos:position pos:line="36" pos:column="23"/></name> <name pos:line="36" pos:column="24">cache_entry<pos:position pos:line="36" pos:column="35"/></name></name> <modifier pos:line="36" pos:column="36">*<pos:position pos:line="36" pos:column="37"/></modifier></type><name pos:line="36" pos:column="37">ce<pos:position pos:line="36" pos:column="39"/></name> <init pos:line="36" pos:column="40">= <expr><name><name pos:line="36" pos:column="42">index<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">cache<pos:position pos:line="36" pos:column="54"/></name><index pos:line="36" pos:column="54">[<expr><name pos:line="36" pos:column="55">i<pos:position pos:line="36" pos:column="56"/></name></expr>]<pos:position pos:line="36" pos:column="57"/></index></name></expr></init></decl>;<pos:position pos:line="36" pos:column="58"/></decl_stmt>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name><name pos:line="38" pos:column="21">ce<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">ce_flags<pos:position pos:line="38" pos:column="33"/></name></name> <operator pos:line="38" pos:column="34">&amp;<pos:position pos:line="38" pos:column="39"/></operator> <name pos:line="38" pos:column="36">CE_UPDATE<pos:position pos:line="38" pos:column="45"/></name></expr>)<pos:position pos:line="38" pos:column="46"/></condition><then pos:line="38" pos:column="46"> <block pos:line="38" pos:column="47">{
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name><name pos:line="39" pos:column="29">ce<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">ce_flags<pos:position pos:line="39" pos:column="41"/></name></name> <operator pos:line="39" pos:column="42">&amp;<pos:position pos:line="39" pos:column="47"/></operator> <name pos:line="39" pos:column="44">CE_WT_REMOVE<pos:position pos:line="39" pos:column="56"/></name></expr>)<pos:position pos:line="39" pos:column="57"/></condition><then pos:line="39" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="33">die<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><literal type="string" pos:line="40" pos:column="37">"BUG: both update and delete flags are set on %s"<pos:position pos:line="40" pos:column="86"/></literal></expr></argument>,
				    <argument><expr><name><name pos:line="41" pos:column="37">ce<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">name<pos:position pos:line="41" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="47"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">display_progress<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">progress<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="52">++<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="54">cnt<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="43" pos:column="25">ce<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">ce_flags<pos:position pos:line="43" pos:column="37"/></name></name> <operator pos:line="43" pos:column="38">&amp;=<pos:position pos:line="43" pos:column="44"/></operator> <operator pos:line="43" pos:column="41">~<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="42">CE_UPDATE<pos:position pos:line="43" pos:column="51"/></name></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name><name pos:line="44" pos:column="29">o<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">update<pos:position pos:line="44" pos:column="38"/></name></name> <operator pos:line="44" pos:column="39">&amp;&amp;<pos:position pos:line="44" pos:column="49"/></operator> <operator pos:line="44" pos:column="42">!<pos:position pos:line="44" pos:column="43"/></operator><name><name pos:line="44" pos:column="43">o<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">-&gt;<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="46">dry_run<pos:position pos:line="44" pos:column="53"/></name></name></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54"> <block pos:line="44" pos:column="55">{
				<expr_stmt><expr><name pos:line="45" pos:column="33">errs<pos:position pos:line="45" pos:column="37"/></name> <operator pos:line="45" pos:column="38">|=<pos:position pos:line="45" pos:column="40"/></operator> <call><name pos:line="45" pos:column="41">checkout_entry<pos:position pos:line="45" pos:column="55"/></name><argument_list pos:line="45" pos:column="55">(<argument><expr><name pos:line="45" pos:column="56">ce<pos:position pos:line="45" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="60">&amp;<pos:position pos:line="45" pos:column="65"/></operator><name pos:line="45" pos:column="61">state<pos:position pos:line="45" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="68">NULL<pos:position pos:line="45" pos:column="72"/></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt>
			}<pos:position pos:line="46" pos:column="26"/></block></then></if>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="49" pos:column="9">errs<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">|=<pos:position pos:line="49" pos:column="16"/></operator> <call><name pos:line="49" pos:column="17">finish_delayed_checkout<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><operator pos:line="49" pos:column="41">&amp;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="42">state<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">stop_progress<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><operator pos:line="50" pos:column="23">&amp;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="24">progress<pos:position pos:line="50" pos:column="32"/></name></expr></argument>)<pos:position pos:line="50" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">o<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">update<pos:position pos:line="51" pos:column="22"/></name></name></expr>)<pos:position pos:line="51" pos:column="23"/></condition><then pos:line="51" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">git_attr_set_direction<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><name pos:line="52" pos:column="40">GIT_ATTR_CHECKIN<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">NULL<pos:position pos:line="52" pos:column="62"/></name></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt></block></then></if>
	<return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">errs<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">!=<pos:position pos:line="53" pos:column="23"/></operator> <literal type="number" pos:line="53" pos:column="24">0<pos:position pos:line="53" pos:column="25"/></literal></expr>;<pos:position pos:line="53" pos:column="26"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

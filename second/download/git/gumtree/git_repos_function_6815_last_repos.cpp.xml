<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6815_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">tcsanitycheck<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">threadcacheblk<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ptr<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <name pos:line="1" pos:column="49">THROWSPEC<pos:position pos:line="1" pos:column="58"/></name>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">assert<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><operator pos:line="3" pos:column="16">(<pos:position pos:line="3" pos:column="17"/></operator><name><name pos:line="3" pos:column="17">ptr<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name> <operator pos:line="3" pos:column="24">&amp;&amp;<pos:position pos:line="3" pos:column="34"/></operator> <name><name pos:line="3" pos:column="27">ptr<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[<expr><literal type="number" pos:line="3" pos:column="31">1<pos:position pos:line="3" pos:column="32"/></literal></expr>]<pos:position pos:line="3" pos:column="33"/></index></name><operator pos:line="3" pos:column="33">)<pos:position pos:line="3" pos:column="34"/></operator> <operator pos:line="3" pos:column="35">||<pos:position pos:line="3" pos:column="37"/></operator> <operator pos:line="3" pos:column="38">(<pos:position pos:line="3" pos:column="39"/></operator><operator pos:line="3" pos:column="39">!<pos:position pos:line="3" pos:column="40"/></operator><name><name pos:line="3" pos:column="40">ptr<pos:position pos:line="3" pos:column="43"/></name><index pos:line="3" pos:column="43">[<expr><literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr>]<pos:position pos:line="3" pos:column="46"/></index></name> <operator pos:line="3" pos:column="47">&amp;&amp;<pos:position pos:line="3" pos:column="57"/></operator> <operator pos:line="3" pos:column="50">!<pos:position pos:line="3" pos:column="51"/></operator><name><name pos:line="3" pos:column="51">ptr<pos:position pos:line="3" pos:column="54"/></name><index pos:line="3" pos:column="54">[<expr><literal type="number" pos:line="3" pos:column="55">1<pos:position pos:line="3" pos:column="56"/></literal></expr>]<pos:position pos:line="3" pos:column="57"/></index></name><operator pos:line="3" pos:column="57">)<pos:position pos:line="3" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="60"/></expr_stmt>
	<if pos:line="4" pos:column="9">if<condition pos:line="4" pos:column="11">(<expr><name><name pos:line="4" pos:column="12">ptr<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr>]<pos:position pos:line="4" pos:column="18"/></index></name> <operator pos:line="4" pos:column="19">&amp;&amp;<pos:position pos:line="4" pos:column="29"/></operator> <name><name pos:line="4" pos:column="22">ptr<pos:position pos:line="4" pos:column="25"/></name><index pos:line="4" pos:column="25">[<expr><literal type="number" pos:line="4" pos:column="26">1<pos:position pos:line="4" pos:column="27"/></literal></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29">
	<block pos:line="5" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">assert<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><call><name pos:line="6" pos:column="24">nedblksize<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name><name pos:line="6" pos:column="35">ptr<pos:position pos:line="6" pos:column="38"/></name><index pos:line="6" pos:column="38">[<expr><literal type="number" pos:line="6" pos:column="39">0<pos:position pos:line="6" pos:column="40"/></literal></expr>]<pos:position pos:line="6" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call><operator pos:line="6" pos:column="42">&gt;=<pos:position pos:line="6" pos:column="47"/></operator><sizeof pos:line="6" pos:column="44">sizeof<argument_list pos:line="6" pos:column="50">(<argument><expr><name pos:line="6" pos:column="51">threadcacheblk<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">assert<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><call><name pos:line="7" pos:column="24">nedblksize<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name><name pos:line="7" pos:column="35">ptr<pos:position pos:line="7" pos:column="38"/></name><index pos:line="7" pos:column="38">[<expr><literal type="number" pos:line="7" pos:column="39">1<pos:position pos:line="7" pos:column="40"/></literal></expr>]<pos:position pos:line="7" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call><operator pos:line="7" pos:column="42">&gt;=<pos:position pos:line="7" pos:column="47"/></operator><sizeof pos:line="7" pos:column="44">sizeof<argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">threadcacheblk<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">assert<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">unsigned<pos:position pos:line="8" pos:column="34"/></name> <name pos:line="8" pos:column="35">int<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">*<pos:position pos:line="8" pos:column="40"/></operator><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator> <literal type="string" pos:line="8" pos:column="42">"NEDN"<pos:position pos:line="8" pos:column="48"/></literal><operator pos:line="8" pos:column="48">==<pos:position pos:line="8" pos:column="50"/></operator><name><name pos:line="8" pos:column="50">ptr<pos:position pos:line="8" pos:column="53"/></name><index pos:line="8" pos:column="53">[<expr><literal type="number" pos:line="8" pos:column="54">0<pos:position pos:line="8" pos:column="55"/></literal></expr>]<pos:position pos:line="8" pos:column="56"/></index></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">magic<pos:position pos:line="8" pos:column="63"/></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">assert<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">unsigned<pos:position pos:line="9" pos:column="34"/></name> <name pos:line="9" pos:column="35">int<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator> <literal type="string" pos:line="9" pos:column="42">"NEDN"<pos:position pos:line="9" pos:column="48"/></literal><operator pos:line="9" pos:column="48">==<pos:position pos:line="9" pos:column="50"/></operator><name><name pos:line="9" pos:column="50">ptr<pos:position pos:line="9" pos:column="53"/></name><index pos:line="9" pos:column="53">[<expr><literal type="number" pos:line="9" pos:column="54">1<pos:position pos:line="9" pos:column="55"/></literal></expr>]<pos:position pos:line="9" pos:column="56"/></index></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">magic<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">assert<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">!<pos:position pos:line="10" pos:column="25"/></operator><name><name pos:line="10" pos:column="25">ptr<pos:position pos:line="10" pos:column="28"/></name><index pos:line="10" pos:column="28">[<expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr>]<pos:position pos:line="10" pos:column="31"/></index></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">prev<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">assert<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><operator pos:line="11" pos:column="24">!<pos:position pos:line="11" pos:column="25"/></operator><name><name pos:line="11" pos:column="25">ptr<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><literal type="number" pos:line="11" pos:column="29">1<pos:position pos:line="11" pos:column="30"/></literal></expr>]<pos:position pos:line="11" pos:column="31"/></index></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">next<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
		<if pos:line="12" pos:column="17">if<condition pos:line="12" pos:column="19">(<expr><name><name pos:line="12" pos:column="20">ptr<pos:position pos:line="12" pos:column="23"/></name><index pos:line="12" pos:column="23">[<expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>]<pos:position pos:line="12" pos:column="26"/></index></name><operator pos:line="12" pos:column="26">==<pos:position pos:line="12" pos:column="28"/></operator><name><name pos:line="12" pos:column="28">ptr<pos:position pos:line="12" pos:column="31"/></name><index pos:line="12" pos:column="31">[<expr><literal type="number" pos:line="12" pos:column="32">1<pos:position pos:line="12" pos:column="33"/></literal></expr>]<pos:position pos:line="12" pos:column="34"/></index></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
		<block pos:line="13" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">assert<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">!<pos:position pos:line="14" pos:column="33"/></operator><name><name pos:line="14" pos:column="33">ptr<pos:position pos:line="14" pos:column="36"/></name><index pos:line="14" pos:column="36">[<expr><literal type="number" pos:line="14" pos:column="37">0<pos:position pos:line="14" pos:column="38"/></literal></expr>]<pos:position pos:line="14" pos:column="39"/></index></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">next<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">assert<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><operator pos:line="15" pos:column="32">!<pos:position pos:line="15" pos:column="33"/></operator><name><name pos:line="15" pos:column="33">ptr<pos:position pos:line="15" pos:column="36"/></name><index pos:line="15" pos:column="36">[<expr><literal type="number" pos:line="15" pos:column="37">1<pos:position pos:line="15" pos:column="38"/></literal></expr>]<pos:position pos:line="15" pos:column="39"/></index></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">prev<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_321.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">summary_patch_list<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">patch<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">patch<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">patch<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">p<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">patch<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></init> <condition><expr><name pos:line="5" pos:column="25">p<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></condition> <incr><expr><name pos:line="5" pos:column="28">p<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">=<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="32">p<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">next<pos:position pos:line="5" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="40"/></control> <block pos:line="5" pos:column="41">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name><name pos:line="6" pos:column="21">p<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">is_new<pos:position pos:line="6" pos:column="30"/></name></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="25">show_file_mode_name<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><literal type="string" pos:line="7" pos:column="45">"create"<pos:position pos:line="7" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="55">p<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">new_mode<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="68">p<pos:position pos:line="7" pos:column="69"/></name><operator pos:line="7" pos:column="69">-&gt;<pos:position pos:line="7" pos:column="74"/></operator><name pos:line="7" pos:column="71">new_name<pos:position pos:line="7" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="81"/></expr_stmt></block></then>
		<elseif pos:line="8" pos:column="17">else <if pos:line="8" pos:column="22">if <condition pos:line="8" pos:column="25">(<expr><name><name pos:line="8" pos:column="26">p<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">is_delete<pos:position pos:line="8" pos:column="38"/></name></name></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">show_file_mode_name<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><literal type="string" pos:line="9" pos:column="45">"delete"<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="55">p<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">old_mode<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="68">p<pos:position pos:line="9" pos:column="69"/></name><operator pos:line="9" pos:column="69">-&gt;<pos:position pos:line="9" pos:column="74"/></operator><name pos:line="9" pos:column="71">old_name<pos:position pos:line="9" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="81"/></expr_stmt></block></then></if></elseif>
		<else pos:line="10" pos:column="17">else <block pos:line="10" pos:column="22">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name><name pos:line="11" pos:column="29">p<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">is_rename<pos:position pos:line="11" pos:column="41"/></name></name> <operator pos:line="11" pos:column="42">||<pos:position pos:line="11" pos:column="44"/></operator> <name><name pos:line="11" pos:column="45">p<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">is_copy<pos:position pos:line="11" pos:column="55"/></name></name></expr>)<pos:position pos:line="11" pos:column="56"/></condition><then pos:line="11" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="33">show_rename_copy<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">p<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt></block></then>
			<else pos:line="13" pos:column="25">else <block pos:line="13" pos:column="30">{
				<if pos:line="14" pos:column="33">if <condition pos:line="14" pos:column="36">(<expr><name><name pos:line="14" pos:column="37">p<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">score<pos:position pos:line="14" pos:column="45"/></name></name></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46"> <block pos:line="14" pos:column="47">{
					<expr_stmt><expr><call><name pos:line="15" pos:column="41">printf<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><literal type="string" pos:line="15" pos:column="48">" rewrite %s (%d%%)\n"<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>,
					       <argument><expr><name><name pos:line="16" pos:column="48">p<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">new_name<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="61">p<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="64">score<pos:position pos:line="16" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="17" pos:column="41">show_mode_change<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">(<argument><expr><name pos:line="17" pos:column="58">p<pos:position pos:line="17" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="61">0<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
				}<pos:position pos:line="18" pos:column="34"/></block></then>
				<else pos:line="19" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="41">show_mode_change<pos:position pos:line="20" pos:column="57"/></name><argument_list pos:line="20" pos:column="57">(<argument><expr><name pos:line="20" pos:column="58">p<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="61">1<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt></block></else></if>
			}<pos:position pos:line="21" pos:column="26"/></block></else></if>
		}<pos:position pos:line="22" pos:column="18"/></block></else></if>
	}<pos:position pos:line="23" pos:column="10"/></block></for>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

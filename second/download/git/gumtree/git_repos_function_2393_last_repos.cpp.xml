<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2393_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">setup_bare_git_dir<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">strbuf<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">cwd<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">offset<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">nongit_ok<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">root_len<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">check_repository_format_gently<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><literal type="string" pos:line="6" pos:column="44">"."<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">nongit_ok<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="60"/></condition><then pos:line="6" pos:column="60">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">setenv<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">GIT_IMPLICIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="52">"0"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="57">1<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* --work-tree is set without --git-dir; use discovered one */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">getenv<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">GIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call> <operator pos:line="12" pos:column="47">||<pos:position pos:line="12" pos:column="49"/></operator> <name pos:line="12" pos:column="50">git_work_tree_cfg<pos:position pos:line="12" pos:column="67"/></name></expr>)<pos:position pos:line="12" pos:column="68"/></condition><then pos:line="12" pos:column="68"> <block pos:line="12" pos:column="69">{
		<decl_stmt><decl><specifier pos:line="13" pos:column="17">static<pos:position pos:line="13" pos:column="23"/></specifier> <type><specifier pos:line="13" pos:column="24">const<pos:position pos:line="13" pos:column="29"/></specifier> <name pos:line="13" pos:column="30">char<pos:position pos:line="13" pos:column="34"/></name> <modifier pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></modifier></type><name pos:line="13" pos:column="36">gitdir<pos:position pos:line="13" pos:column="42"/></name></decl>;<pos:position pos:line="13" pos:column="43"/></decl_stmt>

		<expr_stmt><expr><name pos:line="15" pos:column="17">gitdir<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <ternary><condition><expr><name pos:line="15" pos:column="26">offset<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <name><name pos:line="15" pos:column="36">cwd<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">len<pos:position pos:line="15" pos:column="44"/></name></name></expr> ?<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46"> <expr><literal type="string" pos:line="15" pos:column="47">"."<pos:position pos:line="15" pos:column="50"/></literal></expr> <pos:position pos:line="15" pos:column="51"/></then><else pos:line="15" pos:column="51">: <expr><call><name pos:line="15" pos:column="53">xmemdupz<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name><name pos:line="15" pos:column="62">cwd<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">-&gt;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="67">buf<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="72">offset<pos:position pos:line="15" pos:column="78"/></name></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="80"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">chdir<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name><name pos:line="16" pos:column="27">cwd<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">buf<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">die_errno<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><literal type="string" pos:line="17" pos:column="35">"Could not come back to cwd"<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt></block></then></if>
		<return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">setup_explicit_git_dir<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">gitdir<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">cwd<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">nongit_ok<pos:position pos:line="18" pos:column="69"/></name></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">inside_git_dir<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">inside_work_tree<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">offset<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">!=<pos:position pos:line="23" pos:column="22"/></operator> <name><name pos:line="23" pos:column="23">cwd<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">len<pos:position pos:line="23" pos:column="31"/></name></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32"> <block pos:line="23" pos:column="33">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">chdir<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name><name pos:line="24" pos:column="27">cwd<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">buf<pos:position pos:line="24" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die_errno<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><literal type="string" pos:line="25" pos:column="35">"Cannot come back to cwd"<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="26" pos:column="17">root_len<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <call><name pos:line="26" pos:column="28">offset_1st_component<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><name><name pos:line="26" pos:column="49">cwd<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">-&gt;<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="54">buf<pos:position pos:line="26" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_setlen<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">cwd<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="27" pos:column="36">offset<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">&gt;<pos:position pos:line="27" pos:column="47"/></operator> <name pos:line="27" pos:column="45">root_len<pos:position pos:line="27" pos:column="53"/></name></expr> ?<pos:position pos:line="27" pos:column="55"/></condition><then pos:line="27" pos:column="55"> <expr><name pos:line="27" pos:column="56">offset<pos:position pos:line="27" pos:column="62"/></name></expr> <pos:position pos:line="27" pos:column="63"/></then><else pos:line="27" pos:column="63">: <expr><name pos:line="27" pos:column="65">root_len<pos:position pos:line="27" pos:column="73"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">set_git_dir<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name><name pos:line="28" pos:column="29">cwd<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">buf<pos:position pos:line="28" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then>
	<else pos:line="30" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">set_git_dir<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"."<pos:position pos:line="31" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt></block></else></if>
	<return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">NULL<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

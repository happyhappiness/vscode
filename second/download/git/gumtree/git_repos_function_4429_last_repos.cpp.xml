<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4429_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">pushremote_for_branch<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">branch<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">branch<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier><specifier pos:line="1" pos:column="63">explicit<pos:position pos:line="1" pos:column="71"/></specifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">branch<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">&amp;&amp;<pos:position pos:line="3" pos:column="30"/></operator> <name><name pos:line="3" pos:column="23">branch<pos:position pos:line="3" pos:column="29"/></name><operator pos:line="3" pos:column="29">-&gt;<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="31">pushremote_name<pos:position pos:line="3" pos:column="46"/></name></name></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47"> <block pos:line="3" pos:column="48">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><specifier pos:line="4" pos:column="21">explicit<pos:position pos:line="4" pos:column="29"/></specifier></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><specifier pos:line="5" pos:column="26">explicit<pos:position pos:line="5" pos:column="34"/></specifier> <operator pos:line="5" pos:column="35">=<pos:position pos:line="5" pos:column="36"/></operator> <literal type="number" pos:line="5" pos:column="37">1<pos:position pos:line="5" pos:column="38"/></literal></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt></block></then></if>
		<return pos:line="6" pos:column="17">return <expr><name><name pos:line="6" pos:column="24">branch<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">pushremote_name<pos:position pos:line="6" pos:column="47"/></name></name></expr>;<pos:position pos:line="6" pos:column="48"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">pushremote_name<pos:position pos:line="8" pos:column="28"/></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><specifier pos:line="9" pos:column="21">explicit<pos:position pos:line="9" pos:column="29"/></specifier></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><specifier pos:line="10" pos:column="26">explicit<pos:position pos:line="10" pos:column="34"/></specifier> <operator pos:line="10" pos:column="35">=<pos:position pos:line="10" pos:column="36"/></operator> <literal type="number" pos:line="10" pos:column="37">1<pos:position pos:line="10" pos:column="38"/></literal></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt></block></then></if>
		<return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">pushremote_name<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">remote_for_branch<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">branch<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><specifier pos:line="13" pos:column="42">explicit<pos:position pos:line="13" pos:column="50"/></specifier></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

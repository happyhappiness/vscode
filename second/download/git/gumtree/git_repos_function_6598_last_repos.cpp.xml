<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6598_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">git_mmap<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">void<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">start<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">size_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">length<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">prot<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">flags<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">fd<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="73">off_t<pos:position pos:line="1" pos:column="78"/></name></type> <name pos:line="1" pos:column="79">offset<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">HANDLE<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">osfhandle<pos:position pos:line="3" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">hmap<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">void<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">temp<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">LARGE_INTEGER<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">len<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uint64_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">o<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">offset<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">uint32_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">l<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">o<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&amp;<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="26">0xFFFFFFFF<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uint32_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">h<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">o<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">&gt;&gt;<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="28">32<pos:position pos:line="8" pos:column="30"/></literal><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator> <operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="34">0xFFFFFFFF<pos:position pos:line="8" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">osfhandle<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">HANDLE<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">)<pos:position pos:line="10" pos:column="29"/></operator><call><name pos:line="10" pos:column="29">_get_osfhandle<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">fd<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">GetFileSizeEx<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">osfhandle<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="40">len<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">die<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><literal type="string" pos:line="12" pos:column="21">"mmap: could not determine filesize"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">length<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">+<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">offset<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator> <operator pos:line="14" pos:column="31">&gt;<pos:position pos:line="14" pos:column="35"/></operator> <name><name pos:line="14" pos:column="33">len<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">QuadPart<pos:position pos:line="14" pos:column="45"/></name></name></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">length<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">xsize_t<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name><name pos:line="15" pos:column="34">len<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">QuadPart<pos:position pos:line="15" pos:column="46"/></name></name> <operator pos:line="15" pos:column="47">-<pos:position pos:line="15" pos:column="48"/></operator> <name pos:line="15" pos:column="49">offset<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">flags<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="23">MAP_PRIVATE<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">die<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><literal type="string" pos:line="18" pos:column="21">"Invalid usage of mmap when built with USE_WIN32_MMAP"<pos:position pos:line="18" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="77"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">hmap<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">CreateFileMapping<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">osfhandle<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">NULL<pos:position pos:line="20" pos:column="49"/></name></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="21" pos:column="17">prot<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">PROT_READ<pos:position pos:line="21" pos:column="34"/></name></expr> ?<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <expr><name pos:line="21" pos:column="37">PAGE_READONLY<pos:position pos:line="21" pos:column="50"/></name></expr> <pos:position pos:line="21" pos:column="51"/></then><else pos:line="21" pos:column="51">: <expr><name pos:line="21" pos:column="53">PAGE_WRITECOPY<pos:position pos:line="21" pos:column="67"/></name></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="69">0<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="72">0<pos:position pos:line="21" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="75">NULL<pos:position pos:line="21" pos:column="79"/></name></expr></argument>)<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">hmap<pos:position pos:line="23" pos:column="18"/></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19"> <block pos:line="23" pos:column="20">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">errno<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">EINVAL<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
		<return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">MAP_FAILED<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">temp<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">MapViewOfFileEx<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">hmap<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="38">prot<pos:position pos:line="28" pos:column="42"/></name> <operator pos:line="28" pos:column="43">==<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="46">PROT_READ<pos:position pos:line="28" pos:column="55"/></name></expr> ?<pos:position pos:line="28" pos:column="57"/></condition><then pos:line="28" pos:column="57">
			<expr><name pos:line="29" pos:column="25">FILE_MAP_READ<pos:position pos:line="29" pos:column="38"/></name></expr> <pos:position pos:line="29" pos:column="39"/></then><else pos:line="29" pos:column="39">: <expr><name pos:line="29" pos:column="41">FILE_MAP_COPY<pos:position pos:line="29" pos:column="54"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">h<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">l<pos:position pos:line="29" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="62">length<pos:position pos:line="29" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="70">start<pos:position pos:line="29" pos:column="75"/></name></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="77"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">CloseHandle<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">hmap<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="32"/></condition><then pos:line="31" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">warning<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><literal type="string" pos:line="32" pos:column="25">"unable to close file mapping handle"<pos:position pos:line="32" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">temp<pos:position pos:line="34" pos:column="17"/></name></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18">
		<block type="pseudo"><return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">temp<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="37" pos:column="9">errno<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <ternary><condition><expr><call><name pos:line="37" pos:column="17">GetLastError<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">()<pos:position pos:line="37" pos:column="31"/></argument_list></call> <operator pos:line="37" pos:column="32">==<pos:position pos:line="37" pos:column="34"/></operator> <name pos:line="37" pos:column="35">ERROR_COMMITMENT_LIMIT<pos:position pos:line="37" pos:column="57"/></name></expr> ?<pos:position pos:line="37" pos:column="59"/></condition><then pos:line="37" pos:column="59"> <expr><name pos:line="37" pos:column="60">EFBIG<pos:position pos:line="37" pos:column="65"/></name></expr> <pos:position pos:line="37" pos:column="66"/></then><else pos:line="37" pos:column="66">: <expr><name pos:line="37" pos:column="68">EINVAL<pos:position pos:line="37" pos:column="74"/></name></expr></else></ternary></expr>;<pos:position pos:line="37" pos:column="75"/></expr_stmt>
	<return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">MAP_FAILED<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

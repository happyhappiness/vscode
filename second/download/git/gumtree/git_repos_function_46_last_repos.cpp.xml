<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_46_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">userdiff_driver<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">userdiff_get_textconv<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">userdiff_driver<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">driver<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">driver<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">-&gt;<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="22">textconv<pos:position pos:line="3" pos:column="30"/></name></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr>;<pos:position pos:line="4" pos:column="29"/></return></block></then></if>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">driver<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">textconv_want_cache<pos:position pos:line="6" pos:column="40"/></name></name> <operator pos:line="6" pos:column="41">&amp;&amp;<pos:position pos:line="6" pos:column="51"/></operator> <operator pos:line="6" pos:column="44">!<pos:position pos:line="6" pos:column="45"/></operator><name><name pos:line="6" pos:column="45">driver<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">textconv_cache<pos:position pos:line="6" pos:column="67"/></name></name></expr>)<pos:position pos:line="6" pos:column="68"/></condition><then pos:line="6" pos:column="68"> <block pos:line="6" pos:column="69">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">notes_cache<pos:position pos:line="7" pos:column="35"/></name></name> <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier></type><name pos:line="7" pos:column="37">c<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><call><name pos:line="7" pos:column="41">xmalloc<pos:position pos:line="7" pos:column="48"/></name><argument_list pos:line="7" pos:column="48">(<argument><expr><sizeof pos:line="7" pos:column="49">sizeof<argument_list pos:line="7" pos:column="55">(<argument><expr><operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">c<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">strbuf<pos:position pos:line="8" pos:column="30"/></name></name></type> <name pos:line="8" pos:column="31">name<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><name pos:line="8" pos:column="38">STRBUF_INIT<pos:position pos:line="8" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="10" pos:column="17">strbuf_addf<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="30">name<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="36">"textconv/%s"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="51">driver<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">name<pos:position pos:line="10" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">notes_cache_init<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">c<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="37">name<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">buf<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="47">driver<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">textconv<pos:position pos:line="11" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">driver<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">textconv_cache<pos:position pos:line="12" pos:column="39"/></name></name> <operator pos:line="12" pos:column="40">=<pos:position pos:line="12" pos:column="41"/></operator> <name pos:line="12" pos:column="42">c<pos:position pos:line="12" pos:column="43"/></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">driver<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

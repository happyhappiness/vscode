<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3707_git-2.5.6.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">fmt_ident<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">name<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">email<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">date_str<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">flag<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name><name pos:line="4" pos:column="16">struct<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">strbuf<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">ident<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">STRBUF_INIT<pos:position pos:line="4" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">strict<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">flag<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&amp;<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="30">IDENT_STRICT<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">want_date<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">!<pos:position pos:line="6" pos:column="26"/></operator><operator pos:line="6" pos:column="26">(<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">flag<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">&amp;<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="34">IDENT_NO_DATE<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">)<pos:position pos:line="6" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">want_name<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><operator pos:line="7" pos:column="25">!<pos:position pos:line="7" pos:column="26"/></operator><operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">flag<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">&amp;<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="34">IDENT_NO_NAME<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">)<pos:position pos:line="7" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">want_name<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&amp;&amp;<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="26">!<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">name<pos:position pos:line="9" pos:column="31"/></name></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">name<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">ident_default_name<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">()<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">email<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">email<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <call><name pos:line="12" pos:column="25">ident_default_email<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">()<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">want_name<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&amp;&amp;<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="26">!<pos:position pos:line="14" pos:column="27"/></operator><operator pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">name<pos:position pos:line="14" pos:column="32"/></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">passwd<pos:position pos:line="15" pos:column="30"/></name></name> <modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier></type><name pos:line="15" pos:column="32">pw<pos:position pos:line="15" pos:column="34"/></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">strict<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><name pos:line="18" pos:column="29">name<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <name><name pos:line="18" pos:column="37">git_default_name<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">.<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="54">buf<pos:position pos:line="18" pos:column="57"/></name></name></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="33">fputs<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">env_hint<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">stderr<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">die<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="string" pos:line="20" pos:column="29">"empty ident name (for &lt;%s&gt;) not allowed"<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="72">email<pos:position pos:line="20" pos:column="77"/></name></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="22" pos:column="17">pw<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">xgetpwuid_self<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">()<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">name<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="24">pw<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">pw_name<pos:position pos:line="23" pos:column="35"/></name></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">strict<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&amp;&amp;<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="23">email<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">==<pos:position pos:line="26" pos:column="31"/></operator> <name><name pos:line="26" pos:column="32">git_default_email<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">.<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">buf<pos:position pos:line="26" pos:column="53"/></name></name> <operator pos:line="26" pos:column="54">&amp;&amp;<pos:position pos:line="26" pos:column="64"/></operator>
	    <call><name pos:line="27" pos:column="13">strstr<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">email<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="27">"(none)"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37"> <block pos:line="27" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">fputs<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">env_hint<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">stderr<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">die<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><literal type="string" pos:line="29" pos:column="21">"unable to auto-detect email address (got '%s')"<pos:position pos:line="29" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="71">email<pos:position pos:line="29" pos:column="76"/></name></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="78"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">strbuf_reset<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><operator pos:line="32" pos:column="22">&amp;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="23">ident<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">want_name<pos:position pos:line="33" pos:column="22"/></name></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23"> <block pos:line="33" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_addstr_without_crud<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><operator pos:line="34" pos:column="44">&amp;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="45">ident<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">name<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">strbuf_addstr<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="32">ident<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">" &lt;"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">strbuf_addstr_without_crud<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><operator pos:line="37" pos:column="36">&amp;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="37">ident<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">email<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">want_name<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">strbuf_addch<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><operator pos:line="39" pos:column="38">&amp;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="39">ident<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="39" pos:column="46">'&gt;'<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">want_date<pos:position pos:line="40" pos:column="22"/></name></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23"> <block pos:line="40" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">strbuf_addch<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><operator pos:line="41" pos:column="30">&amp;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="31">ident<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="38">' '<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">date_str<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">&amp;&amp;<pos:position pos:line="42" pos:column="40"/></operator> <name><name pos:line="42" pos:column="33">date_str<pos:position pos:line="42" pos:column="41"/></name><index pos:line="42" pos:column="41">[<expr><literal type="number" pos:line="42" pos:column="42">0<pos:position pos:line="42" pos:column="43"/></literal></expr>]<pos:position pos:line="42" pos:column="44"/></index></name></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <block pos:line="42" pos:column="46">{
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><call><name pos:line="43" pos:column="29">parse_date<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><name pos:line="43" pos:column="40">date_str<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="50">&amp;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="51">ident<pos:position pos:line="43" pos:column="56"/></name></expr></argument>)<pos:position pos:line="43" pos:column="57"/></argument_list></call> <operator pos:line="43" pos:column="58">&lt;<pos:position pos:line="43" pos:column="62"/></operator> <literal type="number" pos:line="43" pos:column="60">0<pos:position pos:line="43" pos:column="61"/></literal></expr>)<pos:position pos:line="43" pos:column="62"/></condition><then pos:line="43" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="33">die<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><literal type="string" pos:line="44" pos:column="37">"invalid date format: %s"<pos:position pos:line="44" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="64">date_str<pos:position pos:line="44" pos:column="72"/></name></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="74"/></expr_stmt></block></then></if>
		}<pos:position pos:line="45" pos:column="18"/></block></then>
		<else pos:line="46" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">strbuf_addstr<pos:position pos:line="47" pos:column="38"/></name><argument_list pos:line="47" pos:column="38">(<argument><expr><operator pos:line="47" pos:column="39">&amp;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="40">ident<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="47">ident_default_date<pos:position pos:line="47" pos:column="65"/></name><argument_list pos:line="47" pos:column="65">()<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt></block></else></if>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<return pos:line="50" pos:column="9">return <expr><name><name pos:line="50" pos:column="16">ident<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">.<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">buf<pos:position pos:line="50" pos:column="25"/></name></name></expr>;<pos:position pos:line="50" pos:column="26"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

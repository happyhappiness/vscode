<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6421_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">try_remove_empty_parents<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">files_ref_store<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">refs<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">refname<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="3" pos:column="38">unsigned<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">int<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">flags<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">STRBUF_INIT<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">sb<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">STRBUF_INIT<pos:position pos:line="6" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">q<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">strbuf_addstr<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><operator pos:line="10" pos:column="23">&amp;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">refname<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name><name pos:line="11" pos:column="13">buf<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">buf<pos:position pos:line="11" pos:column="20"/></name></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="25">2<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></condition> <incr><expr><name pos:line="12" pos:column="28">i<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">++<pos:position pos:line="12" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="32"/></control> <block pos:line="12" pos:column="33">{ <comment type="block" pos:line="12" pos:column="35">/* refs/{heads,tags,...}/ */</comment>
		<while pos:line="13" pos:column="17">while <condition pos:line="13" pos:column="23">(<expr><operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">p<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&amp;&amp;<pos:position pos:line="13" pos:column="37"/></operator> <operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">p<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">!=<pos:position pos:line="13" pos:column="35"/></operator> <literal type="char" pos:line="13" pos:column="36">'/'<pos:position pos:line="13" pos:column="39"/></literal></expr>)<pos:position pos:line="13" pos:column="40"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">++<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt></block></while>
		<comment type="block" pos:line="15" pos:column="17">/* tolerate duplicate slashes; see check_refname_format() */</comment>
		<while pos:line="16" pos:column="17">while <condition pos:line="16" pos:column="23">(<expr><operator pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">p<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">==<pos:position pos:line="16" pos:column="29"/></operator> <literal type="char" pos:line="16" pos:column="30">'/'<pos:position pos:line="16" pos:column="33"/></literal></expr>)<pos:position pos:line="16" pos:column="34"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">p<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">++<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt></block></while>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="19" pos:column="9">q<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <name><name pos:line="19" pos:column="13">buf<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">buf<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">+<pos:position pos:line="19" pos:column="22"/></operator> <name><name pos:line="19" pos:column="23">buf<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">len<pos:position pos:line="19" pos:column="30"/></name></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">flags<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">&amp;<pos:position pos:line="20" pos:column="27"/></operator> <operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">REMOVE_EMPTY_PARENTS_REF<pos:position pos:line="20" pos:column="49"/></name> <operator pos:line="20" pos:column="50">|<pos:position pos:line="20" pos:column="51"/></operator> <name pos:line="20" pos:column="52">REMOVE_EMPTY_PARENTS_REFLOG<pos:position pos:line="20" pos:column="79"/></name><operator pos:line="20" pos:column="79">)<pos:position pos:line="20" pos:column="80"/></operator></expr>)<pos:position pos:line="20" pos:column="81"/></condition> <block pos:line="20" pos:column="82">{
		<while pos:line="21" pos:column="17">while <condition pos:line="21" pos:column="23">(<expr><name pos:line="21" pos:column="24">q<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">&gt;<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="28">p<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">&amp;&amp;<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">q<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">!=<pos:position pos:line="21" pos:column="38"/></operator> <literal type="char" pos:line="21" pos:column="39">'/'<pos:position pos:line="21" pos:column="42"/></literal></expr>)<pos:position pos:line="21" pos:column="43"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">q<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">--<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt></block></while>
		<while pos:line="23" pos:column="17">while <condition pos:line="23" pos:column="23">(<expr><name pos:line="23" pos:column="24">q<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">&gt;<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="28">p<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">&amp;&amp;<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="33">*<pos:position pos:line="23" pos:column="34"/></operator><operator pos:line="23" pos:column="34">(<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">q<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-<pos:position pos:line="23" pos:column="37"/></operator><literal type="number" pos:line="23" pos:column="37">1<pos:position pos:line="23" pos:column="38"/></literal><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="40">==<pos:position pos:line="23" pos:column="42"/></operator> <literal type="char" pos:line="23" pos:column="43">'/'<pos:position pos:line="23" pos:column="46"/></literal></expr>)<pos:position pos:line="23" pos:column="47"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">q<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">--<pos:position pos:line="24" pos:column="28"/></operator></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt></block></while>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">q<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">==<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">p<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
			<block type="pseudo"><break pos:line="26" pos:column="25">break;<pos:position pos:line="26" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strbuf_setlen<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><operator pos:line="27" pos:column="31">&amp;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="32">buf<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">q<pos:position pos:line="27" pos:column="38"/></name> <operator pos:line="27" pos:column="39">-<pos:position pos:line="27" pos:column="40"/></operator> <name><name pos:line="27" pos:column="41">buf<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">.<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="45">buf<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="29" pos:column="17">strbuf_reset<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><operator pos:line="29" pos:column="30">&amp;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="31">sb<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">files_ref_path<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">refs<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">sb<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="43">buf<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">buf<pos:position pos:line="30" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">flags<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">&amp;<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="30">REMOVE_EMPTY_PARENTS_REF<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">)<pos:position pos:line="31" pos:column="55"/></operator> <operator pos:line="31" pos:column="56">&amp;&amp;<pos:position pos:line="31" pos:column="66"/></operator> <call><name pos:line="31" pos:column="59">rmdir<pos:position pos:line="31" pos:column="64"/></name><argument_list pos:line="31" pos:column="64">(<argument><expr><name><name pos:line="31" pos:column="65">sb<pos:position pos:line="31" pos:column="67"/></name><operator pos:line="31" pos:column="67">.<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="68">buf<pos:position pos:line="31" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="73"/></condition><then pos:line="31" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">flags<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">&amp;=<pos:position pos:line="32" pos:column="37"/></operator> <operator pos:line="32" pos:column="34">~<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">REMOVE_EMPTY_PARENTS_REF<pos:position pos:line="32" pos:column="59"/></name></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strbuf_reset<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><operator pos:line="34" pos:column="30">&amp;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="31">sb<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">files_reflog_path<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">refs<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="41">&amp;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="42">sb<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="46">buf<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">.<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="50">buf<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">(<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">flags<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&amp;<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="30">REMOVE_EMPTY_PARENTS_REFLOG<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator> <operator pos:line="36" pos:column="59">&amp;&amp;<pos:position pos:line="36" pos:column="69"/></operator> <call><name pos:line="36" pos:column="62">rmdir<pos:position pos:line="36" pos:column="67"/></name><argument_list pos:line="36" pos:column="67">(<argument><expr><name><name pos:line="36" pos:column="68">sb<pos:position pos:line="36" pos:column="70"/></name><operator pos:line="36" pos:column="70">.<pos:position pos:line="36" pos:column="71"/></operator><name pos:line="36" pos:column="71">buf<pos:position pos:line="36" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="76"/></condition><then pos:line="36" pos:column="76">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">flags<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">&amp;=<pos:position pos:line="37" pos:column="37"/></operator> <operator pos:line="37" pos:column="34">~<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">REMOVE_EMPTY_PARENTS_REFLOG<pos:position pos:line="37" pos:column="62"/></name></expr>;<pos:position pos:line="37" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">strbuf_release<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><operator pos:line="39" pos:column="24">&amp;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="25">buf<pos:position pos:line="39" pos:column="28"/></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">strbuf_release<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><operator pos:line="40" pos:column="24">&amp;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="25">sb<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5108_git-2.8.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_format_patch<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">argc<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">prefix<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">commit<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">commit<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier><modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">list<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">rev_info<pos:position pos:line="5" pos:column="24"/></name></name></type> <name pos:line="5" pos:column="25">rev<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">setup_revision_opt<pos:position pos:line="6" pos:column="34"/></name></name></type> <name pos:line="6" pos:column="35">s_r_opt<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">nr<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="21">total<pos:position pos:line="7" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="28">i<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">use_stdout<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">start_number<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><operator pos:line="9" pos:column="28">-<pos:position pos:line="9" pos:column="29"/></operator><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">just_numbers<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">ignore_if_in_upstream<pos:position pos:line="11" pos:column="34"/></name> <init pos:line="11" pos:column="35">= <expr><literal type="number" pos:line="11" pos:column="37">0<pos:position pos:line="11" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">cover_letter<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><operator pos:line="12" pos:column="28">-<pos:position pos:line="12" pos:column="29"/></operator><literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">boundary_count<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">no_binary_diff<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">zero_commit<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">commit<pos:position pos:line="16" pos:column="22"/></name></name> <modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier></type><name pos:line="16" pos:column="24">origin<pos:position pos:line="16" pos:column="30"/></name> <init pos:line="16" pos:column="31">= <expr><name pos:line="16" pos:column="33">NULL<pos:position pos:line="16" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">in_reply_to<pos:position pos:line="17" pos:column="32"/></name> <init pos:line="17" pos:column="33">= <expr><name pos:line="17" pos:column="35">NULL<pos:position pos:line="17" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="18" pos:column="9">struct<pos:position pos:line="18" pos:column="15"/></name> <name pos:line="18" pos:column="16">patch_ids<pos:position pos:line="18" pos:column="25"/></name></name></type> <name pos:line="18" pos:column="26">ids<pos:position pos:line="18" pos:column="29"/></name></decl>;<pos:position pos:line="18" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="19" pos:column="9">struct<pos:position pos:line="19" pos:column="15"/></name> <name pos:line="19" pos:column="16">strbuf<pos:position pos:line="19" pos:column="22"/></name></name></type> <name pos:line="19" pos:column="23">buf<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><name pos:line="19" pos:column="29">STRBUF_INIT<pos:position pos:line="19" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">use_patch_format<pos:position pos:line="20" pos:column="29"/></name> <init pos:line="20" pos:column="30">= <expr><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">quiet<pos:position pos:line="21" pos:column="18"/></name> <init pos:line="21" pos:column="19">= <expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">reroll_count<pos:position pos:line="22" pos:column="25"/></name> <init pos:line="22" pos:column="26">= <expr><operator pos:line="22" pos:column="28">-<pos:position pos:line="22" pos:column="29"/></operator><literal type="number" pos:line="22" pos:column="29">1<pos:position pos:line="22" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">char<pos:position pos:line="23" pos:column="13"/></name> <modifier pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></modifier></type><name pos:line="23" pos:column="15">branch_name<pos:position pos:line="23" pos:column="26"/></name> <init pos:line="23" pos:column="27">= <expr><name pos:line="23" pos:column="29">NULL<pos:position pos:line="23" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">from<pos:position pos:line="24" pos:column="19"/></name> <init pos:line="24" pos:column="20">= <expr><name pos:line="24" pos:column="22">NULL<pos:position pos:line="24" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="25" pos:column="9">const<pos:position pos:line="25" pos:column="14"/></specifier> <name><name pos:line="25" pos:column="15">struct<pos:position pos:line="25" pos:column="21"/></name> <name pos:line="25" pos:column="22">option<pos:position pos:line="25" pos:column="28"/></name></name></type> <name><name pos:line="25" pos:column="29">builtin_format_patch_options<pos:position pos:line="25" pos:column="57"/></name><index pos:line="25" pos:column="57">[]<pos:position pos:line="25" pos:column="59"/></index></name> <init pos:line="25" pos:column="60">= <expr><block pos:line="25" pos:column="62">{
		<expr><block pos:line="26" pos:column="17">{ <expr><name pos:line="26" pos:column="19">OPTION_CALLBACK<pos:position pos:line="26" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="26" pos:column="36">'n'<pos:position pos:line="26" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="26" pos:column="41">"numbered"<pos:position pos:line="26" pos:column="51"/></literal></expr>, <expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">numbered<pos:position pos:line="26" pos:column="62"/></name></expr>, <expr><name pos:line="26" pos:column="64">NULL<pos:position pos:line="26" pos:column="68"/></name></expr>,
			    <expr><call><name pos:line="27" pos:column="29">N_<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"use [PATCH n/m] even with a single patch"<pos:position pos:line="27" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>,
			    <expr><name pos:line="28" pos:column="29">PARSE_OPT_NOARG<pos:position pos:line="28" pos:column="44"/></name></expr>, <expr><name pos:line="28" pos:column="46">numbered_callback<pos:position pos:line="28" pos:column="63"/></name></expr> }<pos:position pos:line="28" pos:column="65"/></block></expr>,
		<expr><block pos:line="29" pos:column="17">{ <expr><name pos:line="29" pos:column="19">OPTION_CALLBACK<pos:position pos:line="29" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="29" pos:column="36">'N'<pos:position pos:line="29" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="29" pos:column="41">"no-numbered"<pos:position pos:line="29" pos:column="54"/></literal></expr>, <expr><operator pos:line="29" pos:column="56">&amp;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="57">numbered<pos:position pos:line="29" pos:column="65"/></name></expr>, <expr><name pos:line="29" pos:column="67">NULL<pos:position pos:line="29" pos:column="71"/></name></expr>,
			    <expr><call><name pos:line="30" pos:column="29">N_<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">"use [PATCH] even with multiple patches"<pos:position pos:line="30" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>,
			    <expr><name pos:line="31" pos:column="29">PARSE_OPT_NOARG<pos:position pos:line="31" pos:column="44"/></name></expr>, <expr><name pos:line="31" pos:column="46">no_numbered_callback<pos:position pos:line="31" pos:column="66"/></name></expr> }<pos:position pos:line="31" pos:column="68"/></block></expr>,
		<expr><call><name pos:line="32" pos:column="17">OPT_BOOL<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="char" pos:line="32" pos:column="26">'s'<pos:position pos:line="32" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="31">"signoff"<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="42">&amp;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="43">do_signoff<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="55">N_<pos:position pos:line="32" pos:column="57"/></name><argument_list pos:line="32" pos:column="57">(<argument><expr><literal type="string" pos:line="32" pos:column="58">"add Signed-off-by:"<pos:position pos:line="32" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr>,
		<expr><call><name pos:line="33" pos:column="17">OPT_BOOL<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="29">"stdout"<pos:position pos:line="33" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">use_stdout<pos:position pos:line="33" pos:column="50"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="34" pos:column="29">N_<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><literal type="string" pos:line="34" pos:column="32">"print patches to standard out"<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>,
		<expr><call><name pos:line="35" pos:column="17">OPT_BOOL<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="29">"cover-letter"<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="45">&amp;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="46">cover_letter<pos:position pos:line="35" pos:column="58"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="36" pos:column="29">N_<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><literal type="string" pos:line="36" pos:column="32">"generate a cover letter"<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>,
		<expr><call><name pos:line="37" pos:column="17">OPT_BOOL<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="29">"numbered-files"<pos:position pos:line="37" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">just_numbers<pos:position pos:line="37" pos:column="60"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="38" pos:column="29">N_<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><literal type="string" pos:line="38" pos:column="32">"use simple number sequence for output file names"<pos:position pos:line="38" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="84"/></argument_list></call></expr>,
		<expr><call><name pos:line="39" pos:column="17">OPT_STRING<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="31">"suffix"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="41">&amp;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="42">fmt_patch_suffix<pos:position pos:line="39" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="60">N_<pos:position pos:line="39" pos:column="62"/></name><argument_list pos:line="39" pos:column="62">(<argument><expr><literal type="string" pos:line="39" pos:column="63">"sfx"<pos:position pos:line="39" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="40" pos:column="29">N_<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><literal type="string" pos:line="40" pos:column="32">"use &lt;sfx&gt; instead of '.patch'"<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>,
		<expr><call><name pos:line="41" pos:column="17">OPT_INTEGER<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><literal type="number" pos:line="41" pos:column="29">0<pos:position pos:line="41" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="32">"start-number"<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="48">&amp;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="49">start_number<pos:position pos:line="41" pos:column="61"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="42" pos:column="29">N_<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><literal type="string" pos:line="42" pos:column="32">"start numbering patches at &lt;n&gt; instead of 1"<pos:position pos:line="42" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="79"/></argument_list></call></expr>,
		<expr><call><name pos:line="43" pos:column="17">OPT_INTEGER<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><literal type="char" pos:line="43" pos:column="29">'v'<pos:position pos:line="43" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"reroll-count"<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="50">&amp;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="51">reroll_count<pos:position pos:line="43" pos:column="63"/></name></expr></argument>,
			    <argument><expr><call><name pos:line="44" pos:column="29">N_<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><literal type="string" pos:line="44" pos:column="32">"mark the series as Nth re-roll"<pos:position pos:line="44" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr>,
		<expr><block pos:line="45" pos:column="17">{ <expr><name pos:line="45" pos:column="19">OPTION_CALLBACK<pos:position pos:line="45" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="45" pos:column="36">0<pos:position pos:line="45" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="45" pos:column="39">"subject-prefix"<pos:position pos:line="45" pos:column="55"/></literal></expr>, <expr><operator pos:line="45" pos:column="57">&amp;<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="58">rev<pos:position pos:line="45" pos:column="61"/></name></expr>, <expr><call><name pos:line="45" pos:column="63">N_<pos:position pos:line="45" pos:column="65"/></name><argument_list pos:line="45" pos:column="65">(<argument><expr><literal type="string" pos:line="45" pos:column="66">"prefix"<pos:position pos:line="45" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr>,
			    <expr><call><name pos:line="46" pos:column="29">N_<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><literal type="string" pos:line="46" pos:column="32">"Use [&lt;prefix&gt;] instead of [PATCH]"<pos:position pos:line="46" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr>,
			    <expr><name pos:line="47" pos:column="29">PARSE_OPT_NONEG<pos:position pos:line="47" pos:column="44"/></name></expr>, <expr><name pos:line="47" pos:column="46">subject_prefix_callback<pos:position pos:line="47" pos:column="69"/></name></expr> }<pos:position pos:line="47" pos:column="71"/></block></expr>,
		<expr><block pos:line="48" pos:column="17">{ <expr><name pos:line="48" pos:column="19">OPTION_CALLBACK<pos:position pos:line="48" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="48" pos:column="36">'o'<pos:position pos:line="48" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="48" pos:column="41">"output-directory"<pos:position pos:line="48" pos:column="59"/></literal></expr>, <expr><operator pos:line="48" pos:column="61">&amp;<pos:position pos:line="48" pos:column="66"/></operator><name pos:line="48" pos:column="62">output_directory<pos:position pos:line="48" pos:column="78"/></name></expr>,
			    <expr><call><name pos:line="49" pos:column="29">N_<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><literal type="string" pos:line="49" pos:column="32">"dir"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>, <expr><call><name pos:line="49" pos:column="40">N_<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><literal type="string" pos:line="49" pos:column="43">"store resulting files in &lt;dir&gt;"<pos:position pos:line="49" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="76"/></argument_list></call></expr>,
			    <expr><name pos:line="50" pos:column="29">PARSE_OPT_NONEG<pos:position pos:line="50" pos:column="44"/></name></expr>, <expr><name pos:line="50" pos:column="46">output_directory_callback<pos:position pos:line="50" pos:column="71"/></name></expr> }<pos:position pos:line="50" pos:column="73"/></block></expr>,
		<expr><block pos:line="51" pos:column="17">{ <expr><name pos:line="51" pos:column="19">OPTION_CALLBACK<pos:position pos:line="51" pos:column="34"/></name></expr>, <expr><literal type="char" pos:line="51" pos:column="36">'k'<pos:position pos:line="51" pos:column="39"/></literal></expr>, <expr><literal type="string" pos:line="51" pos:column="41">"keep-subject"<pos:position pos:line="51" pos:column="55"/></literal></expr>, <expr><operator pos:line="51" pos:column="57">&amp;<pos:position pos:line="51" pos:column="62"/></operator><name pos:line="51" pos:column="58">rev<pos:position pos:line="51" pos:column="61"/></name></expr>, <expr><name pos:line="51" pos:column="63">NULL<pos:position pos:line="51" pos:column="67"/></name></expr>,
			    <expr><call><name pos:line="52" pos:column="29">N_<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><literal type="string" pos:line="52" pos:column="32">"don't strip/add [PATCH]"<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>,
			    <expr><name pos:line="53" pos:column="29">PARSE_OPT_NOARG<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">|<pos:position pos:line="53" pos:column="46"/></operator> <name pos:line="53" pos:column="47">PARSE_OPT_NONEG<pos:position pos:line="53" pos:column="62"/></name></expr>, <expr><name pos:line="53" pos:column="64">keep_callback<pos:position pos:line="53" pos:column="77"/></name></expr> }<pos:position pos:line="53" pos:column="79"/></block></expr>,
		<expr><call><name pos:line="54" pos:column="17">OPT_BOOL<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><literal type="number" pos:line="54" pos:column="26">0<pos:position pos:line="54" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="29">"no-binary"<pos:position pos:line="54" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="42">&amp;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="43">no_binary_diff<pos:position pos:line="54" pos:column="57"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="55" pos:column="26">N_<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><literal type="string" pos:line="55" pos:column="29">"don't output binary diffs"<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call></expr>,
		<expr><call><name pos:line="56" pos:column="17">OPT_BOOL<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><literal type="number" pos:line="56" pos:column="26">0<pos:position pos:line="56" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="29">"zero-commit"<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="44">&amp;<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="45">zero_commit<pos:position pos:line="56" pos:column="56"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="57" pos:column="26">N_<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><literal type="string" pos:line="57" pos:column="29">"output all-zero hash in From header"<pos:position pos:line="57" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></call></expr>,
		<expr><call><name pos:line="58" pos:column="17">OPT_BOOL<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><literal type="number" pos:line="58" pos:column="26">0<pos:position pos:line="58" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"ignore-if-in-upstream"<pos:position pos:line="58" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="54">&amp;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="55">ignore_if_in_upstream<pos:position pos:line="58" pos:column="76"/></name></expr></argument>,
			 <argument><expr><call><name pos:line="59" pos:column="26">N_<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><literal type="string" pos:line="59" pos:column="29">"don't include a patch matching a commit upstream"<pos:position pos:line="59" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="81"/></argument_list></call></expr>,
		<expr><block pos:line="60" pos:column="17">{ <expr><name pos:line="60" pos:column="19">OPTION_SET_INT<pos:position pos:line="60" pos:column="33"/></name></expr>, <expr><literal type="char" pos:line="60" pos:column="35">'p'<pos:position pos:line="60" pos:column="38"/></literal></expr>, <expr><literal type="string" pos:line="60" pos:column="40">"no-stat"<pos:position pos:line="60" pos:column="49"/></literal></expr>, <expr><operator pos:line="60" pos:column="51">&amp;<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="52">use_patch_format<pos:position pos:line="60" pos:column="68"/></name></expr>, <expr><name pos:line="60" pos:column="70">NULL<pos:position pos:line="60" pos:column="74"/></name></expr>,
		  <expr><call><name pos:line="61" pos:column="19">N_<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><literal type="string" pos:line="61" pos:column="22">"show patch format instead of default (patch + stat)"<pos:position pos:line="61" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>,
		  <expr><name pos:line="62" pos:column="19">PARSE_OPT_NONEG<pos:position pos:line="62" pos:column="34"/></name> <operator pos:line="62" pos:column="35">|<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="37">PARSE_OPT_NOARG<pos:position pos:line="62" pos:column="52"/></name></expr>, <expr><name pos:line="62" pos:column="54">NULL<pos:position pos:line="62" pos:column="58"/></name></expr>, <expr><literal type="number" pos:line="62" pos:column="60">1<pos:position pos:line="62" pos:column="61"/></literal></expr>}<pos:position pos:line="62" pos:column="62"/></block></expr>,
		<expr><call><name pos:line="63" pos:column="17">OPT_GROUP<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><call><name pos:line="63" pos:column="27">N_<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">(<argument><expr><literal type="string" pos:line="63" pos:column="30">"Messaging"<pos:position pos:line="63" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr>,
		<expr><block pos:line="64" pos:column="17">{ <expr><name pos:line="64" pos:column="19">OPTION_CALLBACK<pos:position pos:line="64" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="64" pos:column="36">0<pos:position pos:line="64" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="64" pos:column="39">"add-header"<pos:position pos:line="64" pos:column="51"/></literal></expr>, <expr><name pos:line="64" pos:column="53">NULL<pos:position pos:line="64" pos:column="57"/></name></expr>, <expr><call><name pos:line="64" pos:column="59">N_<pos:position pos:line="64" pos:column="61"/></name><argument_list pos:line="64" pos:column="61">(<argument><expr><literal type="string" pos:line="64" pos:column="62">"header"<pos:position pos:line="64" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="71"/></argument_list></call></expr>,
			    <expr><call><name pos:line="65" pos:column="29">N_<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><literal type="string" pos:line="65" pos:column="32">"add email header"<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call></expr>, <expr><literal type="number" pos:line="65" pos:column="53">0<pos:position pos:line="65" pos:column="54"/></literal></expr>, <expr><name pos:line="65" pos:column="56">header_callback<pos:position pos:line="65" pos:column="71"/></name></expr> }<pos:position pos:line="65" pos:column="73"/></block></expr>,
		<expr><block pos:line="66" pos:column="17">{ <expr><name pos:line="66" pos:column="19">OPTION_CALLBACK<pos:position pos:line="66" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="66" pos:column="36">0<pos:position pos:line="66" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="66" pos:column="39">"to"<pos:position pos:line="66" pos:column="43"/></literal></expr>, <expr><name pos:line="66" pos:column="45">NULL<pos:position pos:line="66" pos:column="49"/></name></expr>, <expr><call><name pos:line="66" pos:column="51">N_<pos:position pos:line="66" pos:column="53"/></name><argument_list pos:line="66" pos:column="53">(<argument><expr><literal type="string" pos:line="66" pos:column="54">"email"<pos:position pos:line="66" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call></expr>, <expr><call><name pos:line="66" pos:column="64">N_<pos:position pos:line="66" pos:column="66"/></name><argument_list pos:line="66" pos:column="66">(<argument><expr><literal type="string" pos:line="66" pos:column="67">"add To: header"<pos:position pos:line="66" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="84"/></argument_list></call></expr>,
			    <expr><literal type="number" pos:line="67" pos:column="29">0<pos:position pos:line="67" pos:column="30"/></literal></expr>, <expr><name pos:line="67" pos:column="32">to_callback<pos:position pos:line="67" pos:column="43"/></name></expr> }<pos:position pos:line="67" pos:column="45"/></block></expr>,
		<expr><block pos:line="68" pos:column="17">{ <expr><name pos:line="68" pos:column="19">OPTION_CALLBACK<pos:position pos:line="68" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="68" pos:column="36">0<pos:position pos:line="68" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="68" pos:column="39">"cc"<pos:position pos:line="68" pos:column="43"/></literal></expr>, <expr><name pos:line="68" pos:column="45">NULL<pos:position pos:line="68" pos:column="49"/></name></expr>, <expr><call><name pos:line="68" pos:column="51">N_<pos:position pos:line="68" pos:column="53"/></name><argument_list pos:line="68" pos:column="53">(<argument><expr><literal type="string" pos:line="68" pos:column="54">"email"<pos:position pos:line="68" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr>, <expr><call><name pos:line="68" pos:column="64">N_<pos:position pos:line="68" pos:column="66"/></name><argument_list pos:line="68" pos:column="66">(<argument><expr><literal type="string" pos:line="68" pos:column="67">"add Cc: header"<pos:position pos:line="68" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="84"/></argument_list></call></expr>,
			    <expr><literal type="number" pos:line="69" pos:column="29">0<pos:position pos:line="69" pos:column="30"/></literal></expr>, <expr><name pos:line="69" pos:column="32">cc_callback<pos:position pos:line="69" pos:column="43"/></name></expr> }<pos:position pos:line="69" pos:column="45"/></block></expr>,
		<expr><block pos:line="70" pos:column="17">{ <expr><name pos:line="70" pos:column="19">OPTION_CALLBACK<pos:position pos:line="70" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="70" pos:column="36">0<pos:position pos:line="70" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="70" pos:column="39">"from"<pos:position pos:line="70" pos:column="45"/></literal></expr>, <expr><operator pos:line="70" pos:column="47">&amp;<pos:position pos:line="70" pos:column="52"/></operator><name pos:line="70" pos:column="48">from<pos:position pos:line="70" pos:column="52"/></name></expr>, <expr><call><name pos:line="70" pos:column="54">N_<pos:position pos:line="70" pos:column="56"/></name><argument_list pos:line="70" pos:column="56">(<argument><expr><literal type="string" pos:line="70" pos:column="57">"ident"<pos:position pos:line="70" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="65"/></argument_list></call></expr>,
			    <expr><call><name pos:line="71" pos:column="29">N_<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><literal type="string" pos:line="71" pos:column="32">"set From address to &lt;ident&gt; (or committer ident if absent)"<pos:position pos:line="71" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="93"/></argument_list></call></expr>,
			    <expr><name pos:line="72" pos:column="29">PARSE_OPT_OPTARG<pos:position pos:line="72" pos:column="45"/></name></expr>, <expr><name pos:line="72" pos:column="47">from_callback<pos:position pos:line="72" pos:column="60"/></name></expr> }<pos:position pos:line="72" pos:column="62"/></block></expr>,
		<expr><call><name pos:line="73" pos:column="17">OPT_STRING<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><literal type="number" pos:line="73" pos:column="28">0<pos:position pos:line="73" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="31">"in-reply-to"<pos:position pos:line="73" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="46">&amp;<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="47">in_reply_to<pos:position pos:line="73" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="60">N_<pos:position pos:line="73" pos:column="62"/></name><argument_list pos:line="73" pos:column="62">(<argument><expr><literal type="string" pos:line="73" pos:column="63">"message-id"<pos:position pos:line="73" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="74" pos:column="29">N_<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><literal type="string" pos:line="74" pos:column="32">"make first mail a reply to &lt;message-id&gt;"<pos:position pos:line="74" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call></expr>,
		<expr><block pos:line="75" pos:column="17">{ <expr><name pos:line="75" pos:column="19">OPTION_CALLBACK<pos:position pos:line="75" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="75" pos:column="36">0<pos:position pos:line="75" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="75" pos:column="39">"attach"<pos:position pos:line="75" pos:column="47"/></literal></expr>, <expr><operator pos:line="75" pos:column="49">&amp;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="50">rev<pos:position pos:line="75" pos:column="53"/></name></expr>, <expr><call><name pos:line="75" pos:column="55">N_<pos:position pos:line="75" pos:column="57"/></name><argument_list pos:line="75" pos:column="57">(<argument><expr><literal type="string" pos:line="75" pos:column="58">"boundary"<pos:position pos:line="75" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="69"/></argument_list></call></expr>,
			    <expr><call><name pos:line="76" pos:column="29">N_<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><literal type="string" pos:line="76" pos:column="32">"attach the patch"<pos:position pos:line="76" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="51"/></argument_list></call></expr>, <expr><name pos:line="76" pos:column="53">PARSE_OPT_OPTARG<pos:position pos:line="76" pos:column="69"/></name></expr>,
			    <expr><name pos:line="77" pos:column="29">attach_callback<pos:position pos:line="77" pos:column="44"/></name></expr> }<pos:position pos:line="77" pos:column="46"/></block></expr>,
		<expr><block pos:line="78" pos:column="17">{ <expr><name pos:line="78" pos:column="19">OPTION_CALLBACK<pos:position pos:line="78" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="78" pos:column="36">0<pos:position pos:line="78" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="78" pos:column="39">"inline"<pos:position pos:line="78" pos:column="47"/></literal></expr>, <expr><operator pos:line="78" pos:column="49">&amp;<pos:position pos:line="78" pos:column="54"/></operator><name pos:line="78" pos:column="50">rev<pos:position pos:line="78" pos:column="53"/></name></expr>, <expr><call><name pos:line="78" pos:column="55">N_<pos:position pos:line="78" pos:column="57"/></name><argument_list pos:line="78" pos:column="57">(<argument><expr><literal type="string" pos:line="78" pos:column="58">"boundary"<pos:position pos:line="78" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="69"/></argument_list></call></expr>,
			    <expr><call><name pos:line="79" pos:column="29">N_<pos:position pos:line="79" pos:column="31"/></name><argument_list pos:line="79" pos:column="31">(<argument><expr><literal type="string" pos:line="79" pos:column="32">"inline the patch"<pos:position pos:line="79" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call></expr>,
			    <expr><name pos:line="80" pos:column="29">PARSE_OPT_OPTARG<pos:position pos:line="80" pos:column="45"/></name> <operator pos:line="80" pos:column="46">|<pos:position pos:line="80" pos:column="47"/></operator> <name pos:line="80" pos:column="48">PARSE_OPT_NONEG<pos:position pos:line="80" pos:column="63"/></name></expr>,
			    <expr><name pos:line="81" pos:column="29">inline_callback<pos:position pos:line="81" pos:column="44"/></name></expr> }<pos:position pos:line="81" pos:column="46"/></block></expr>,
		<expr><block pos:line="82" pos:column="17">{ <expr><name pos:line="82" pos:column="19">OPTION_CALLBACK<pos:position pos:line="82" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="82" pos:column="36">0<pos:position pos:line="82" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="82" pos:column="39">"thread"<pos:position pos:line="82" pos:column="47"/></literal></expr>, <expr><operator pos:line="82" pos:column="49">&amp;<pos:position pos:line="82" pos:column="54"/></operator><name pos:line="82" pos:column="50">thread<pos:position pos:line="82" pos:column="56"/></name></expr>, <expr><call><name pos:line="82" pos:column="58">N_<pos:position pos:line="82" pos:column="60"/></name><argument_list pos:line="82" pos:column="60">(<argument><expr><literal type="string" pos:line="82" pos:column="61">"style"<pos:position pos:line="82" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr>,
			    <expr><call><name pos:line="83" pos:column="29">N_<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><literal type="string" pos:line="83" pos:column="32">"enable message threading, styles: shallow, deep"<pos:position pos:line="83" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="82"/></argument_list></call></expr>,
			    <expr><name pos:line="84" pos:column="29">PARSE_OPT_OPTARG<pos:position pos:line="84" pos:column="45"/></name></expr>, <expr><name pos:line="84" pos:column="47">thread_callback<pos:position pos:line="84" pos:column="62"/></name></expr> }<pos:position pos:line="84" pos:column="64"/></block></expr>,
		<expr><call><name pos:line="85" pos:column="17">OPT_STRING<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><literal type="number" pos:line="85" pos:column="28">0<pos:position pos:line="85" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="31">"signature"<pos:position pos:line="85" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="85" pos:column="44">&amp;<pos:position pos:line="85" pos:column="49"/></operator><name pos:line="85" pos:column="45">signature<pos:position pos:line="85" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="56">N_<pos:position pos:line="85" pos:column="58"/></name><argument_list pos:line="85" pos:column="58">(<argument><expr><literal type="string" pos:line="85" pos:column="59">"signature"<pos:position pos:line="85" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="71"/></argument_list></call></expr></argument>,
			    <argument><expr><call><name pos:line="86" pos:column="29">N_<pos:position pos:line="86" pos:column="31"/></name><argument_list pos:line="86" pos:column="31">(<argument><expr><literal type="string" pos:line="86" pos:column="32">"add a signature"<pos:position pos:line="86" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></call></expr>,
		<expr><call><name pos:line="87" pos:column="17">OPT_FILENAME<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><literal type="number" pos:line="87" pos:column="30">0<pos:position pos:line="87" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="33">"signature-file"<pos:position pos:line="87" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="87" pos:column="51">&amp;<pos:position pos:line="87" pos:column="56"/></operator><name pos:line="87" pos:column="52">signature_file<pos:position pos:line="87" pos:column="66"/></name></expr></argument>,
				<argument><expr><call><name pos:line="88" pos:column="33">N_<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><literal type="string" pos:line="88" pos:column="36">"add a signature from a file"<pos:position pos:line="88" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="67"/></argument_list></call></expr>,
		<expr><call><name pos:line="89" pos:column="17">OPT__QUIET<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><operator pos:line="89" pos:column="28">&amp;<pos:position pos:line="89" pos:column="33"/></operator><name pos:line="89" pos:column="29">quiet<pos:position pos:line="89" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="36">N_<pos:position pos:line="89" pos:column="38"/></name><argument_list pos:line="89" pos:column="38">(<argument><expr><literal type="string" pos:line="89" pos:column="39">"don't print the patch filenames"<pos:position pos:line="89" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="74"/></argument_list></call></expr>,
		<macro><name pos:line="90" pos:column="17">OPT_END<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">()<pos:position pos:line="90" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="91" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="91" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="93" pos:column="9">extra_hdr<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">.<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="19">strdup_strings<pos:position pos:line="93" pos:column="33"/></name></name> <operator pos:line="93" pos:column="34">=<pos:position pos:line="93" pos:column="35"/></operator> <literal type="number" pos:line="93" pos:column="36">1<pos:position pos:line="93" pos:column="37"/></literal></expr>;<pos:position pos:line="93" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="94" pos:column="9">extra_to<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">.<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">strdup_strings<pos:position pos:line="94" pos:column="32"/></name></name> <operator pos:line="94" pos:column="33">=<pos:position pos:line="94" pos:column="34"/></operator> <literal type="number" pos:line="94" pos:column="35">1<pos:position pos:line="94" pos:column="36"/></literal></expr>;<pos:position pos:line="94" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="95" pos:column="9">extra_cc<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">.<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="18">strdup_strings<pos:position pos:line="95" pos:column="32"/></name></name> <operator pos:line="95" pos:column="33">=<pos:position pos:line="95" pos:column="34"/></operator> <literal type="number" pos:line="95" pos:column="35">1<pos:position pos:line="95" pos:column="36"/></literal></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">init_grep_defaults<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">()<pos:position pos:line="96" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">git_config<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><name pos:line="97" pos:column="20">git_format_config<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="39">NULL<pos:position pos:line="97" pos:column="43"/></name></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">init_revisions<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><operator pos:line="98" pos:column="24">&amp;<pos:position pos:line="98" pos:column="29"/></operator><name pos:line="98" pos:column="25">rev<pos:position pos:line="98" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="30">prefix<pos:position pos:line="98" pos:column="36"/></name></expr></argument>)<pos:position pos:line="98" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="99" pos:column="9">rev<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">.<pos:position pos:line="99" pos:column="13"/></operator><name pos:line="99" pos:column="13">commit_format<pos:position pos:line="99" pos:column="26"/></name></name> <operator pos:line="99" pos:column="27">=<pos:position pos:line="99" pos:column="28"/></operator> <name pos:line="99" pos:column="29">CMIT_FMT_EMAIL<pos:position pos:line="99" pos:column="43"/></name></expr>;<pos:position pos:line="99" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="100" pos:column="9">rev<pos:position pos:line="100" pos:column="12"/></name><operator pos:line="100" pos:column="12">.<pos:position pos:line="100" pos:column="13"/></operator><name pos:line="100" pos:column="13">verbose_header<pos:position pos:line="100" pos:column="27"/></name></name> <operator pos:line="100" pos:column="28">=<pos:position pos:line="100" pos:column="29"/></operator> <literal type="number" pos:line="100" pos:column="30">1<pos:position pos:line="100" pos:column="31"/></literal></expr>;<pos:position pos:line="100" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="101" pos:column="9">rev<pos:position pos:line="101" pos:column="12"/></name><operator pos:line="101" pos:column="12">.<pos:position pos:line="101" pos:column="13"/></operator><name pos:line="101" pos:column="13">diff<pos:position pos:line="101" pos:column="17"/></name></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <literal type="number" pos:line="101" pos:column="20">1<pos:position pos:line="101" pos:column="21"/></literal></expr>;<pos:position pos:line="101" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="102" pos:column="9">rev<pos:position pos:line="102" pos:column="12"/></name><operator pos:line="102" pos:column="12">.<pos:position pos:line="102" pos:column="13"/></operator><name pos:line="102" pos:column="13">max_parents<pos:position pos:line="102" pos:column="24"/></name></name> <operator pos:line="102" pos:column="25">=<pos:position pos:line="102" pos:column="26"/></operator> <literal type="number" pos:line="102" pos:column="27">1<pos:position pos:line="102" pos:column="28"/></literal></expr>;<pos:position pos:line="102" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="103" pos:column="9">DIFF_OPT_SET<pos:position pos:line="103" pos:column="21"/></name><argument_list pos:line="103" pos:column="21">(<argument><expr><operator pos:line="103" pos:column="22">&amp;<pos:position pos:line="103" pos:column="27"/></operator><name><name pos:line="103" pos:column="23">rev<pos:position pos:line="103" pos:column="26"/></name><operator pos:line="103" pos:column="26">.<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="27">diffopt<pos:position pos:line="103" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="36">RECURSIVE<pos:position pos:line="103" pos:column="45"/></name></expr></argument>)<pos:position pos:line="103" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="104" pos:column="9">rev<pos:position pos:line="104" pos:column="12"/></name><operator pos:line="104" pos:column="12">.<pos:position pos:line="104" pos:column="13"/></operator><name pos:line="104" pos:column="13">subject_prefix<pos:position pos:line="104" pos:column="27"/></name></name> <operator pos:line="104" pos:column="28">=<pos:position pos:line="104" pos:column="29"/></operator> <name pos:line="104" pos:column="30">fmt_patch_subject_prefix<pos:position pos:line="104" pos:column="54"/></name></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="105" pos:column="9">memset<pos:position pos:line="105" pos:column="15"/></name><argument_list pos:line="105" pos:column="15">(<argument><expr><operator pos:line="105" pos:column="16">&amp;<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="17">s_r_opt<pos:position pos:line="105" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="26">0<pos:position pos:line="105" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="105" pos:column="29">sizeof<argument_list pos:line="105" pos:column="35">(<argument><expr><name pos:line="105" pos:column="36">s_r_opt<pos:position pos:line="105" pos:column="43"/></name></expr></argument>)<pos:position pos:line="105" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="106" pos:column="9">s_r_opt<pos:position pos:line="106" pos:column="16"/></name><operator pos:line="106" pos:column="16">.<pos:position pos:line="106" pos:column="17"/></operator><name pos:line="106" pos:column="17">def<pos:position pos:line="106" pos:column="20"/></name></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <literal type="string" pos:line="106" pos:column="23">"HEAD"<pos:position pos:line="106" pos:column="29"/></literal></expr>;<pos:position pos:line="106" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="107" pos:column="9">s_r_opt<pos:position pos:line="107" pos:column="16"/></name><operator pos:line="107" pos:column="16">.<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="17">revarg_opt<pos:position pos:line="107" pos:column="27"/></name></name> <operator pos:line="107" pos:column="28">=<pos:position pos:line="107" pos:column="29"/></operator> <name pos:line="107" pos:column="30">REVARG_COMMITTISH<pos:position pos:line="107" pos:column="47"/></name></expr>;<pos:position pos:line="107" pos:column="48"/></expr_stmt>

	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">default_attach<pos:position pos:line="109" pos:column="27"/></name></expr>)<pos:position pos:line="109" pos:column="28"/></condition><then pos:line="109" pos:column="28"> <block pos:line="109" pos:column="29">{
		<expr_stmt><expr><name><name pos:line="110" pos:column="17">rev<pos:position pos:line="110" pos:column="20"/></name><operator pos:line="110" pos:column="20">.<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="21">mime_boundary<pos:position pos:line="110" pos:column="34"/></name></name> <operator pos:line="110" pos:column="35">=<pos:position pos:line="110" pos:column="36"/></operator> <name pos:line="110" pos:column="37">default_attach<pos:position pos:line="110" pos:column="51"/></name></expr>;<pos:position pos:line="110" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="111" pos:column="17">rev<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">.<pos:position pos:line="111" pos:column="21"/></operator><name pos:line="111" pos:column="21">no_inline<pos:position pos:line="111" pos:column="30"/></name></name> <operator pos:line="111" pos:column="31">=<pos:position pos:line="111" pos:column="32"/></operator> <literal type="number" pos:line="111" pos:column="33">1<pos:position pos:line="111" pos:column="34"/></literal></expr>;<pos:position pos:line="111" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="114" pos:column="9">/*
	 * Parse the arguments before setup_revisions(), or something
	 * like "git format-patch -o a123 HEAD^.." may fail; a123 is
	 * possibly a valid SHA1.
	 */</comment>
	<expr_stmt><expr><name pos:line="119" pos:column="9">argc<pos:position pos:line="119" pos:column="13"/></name> <operator pos:line="119" pos:column="14">=<pos:position pos:line="119" pos:column="15"/></operator> <call><name pos:line="119" pos:column="16">parse_options<pos:position pos:line="119" pos:column="29"/></name><argument_list pos:line="119" pos:column="29">(<argument><expr><name pos:line="119" pos:column="30">argc<pos:position pos:line="119" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="36">argv<pos:position pos:line="119" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="42">prefix<pos:position pos:line="119" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="50">builtin_format_patch_options<pos:position pos:line="119" pos:column="78"/></name></expr></argument>,
			     <argument><expr><name pos:line="120" pos:column="30">builtin_format_patch_usage<pos:position pos:line="120" pos:column="56"/></name></expr></argument>,
			     <argument><expr><name pos:line="121" pos:column="30">PARSE_OPT_KEEP_ARGV0<pos:position pos:line="121" pos:column="50"/></name> <operator pos:line="121" pos:column="51">|<pos:position pos:line="121" pos:column="52"/></operator> <name pos:line="121" pos:column="53">PARSE_OPT_KEEP_UNKNOWN<pos:position pos:line="121" pos:column="75"/></name> <operator pos:line="121" pos:column="76">|<pos:position pos:line="121" pos:column="77"/></operator>
			     <name pos:line="122" pos:column="30">PARSE_OPT_KEEP_DASHDASH<pos:position pos:line="122" pos:column="53"/></name></expr></argument>)<pos:position pos:line="122" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="55"/></expr_stmt>

	<if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><literal type="number" pos:line="124" pos:column="13">0<pos:position pos:line="124" pos:column="14"/></literal> <operator pos:line="124" pos:column="15">&lt;<pos:position pos:line="124" pos:column="19"/></operator> <name pos:line="124" pos:column="17">reroll_count<pos:position pos:line="124" pos:column="29"/></name></expr>)<pos:position pos:line="124" pos:column="30"/></condition><then pos:line="124" pos:column="30"> <block pos:line="124" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="125" pos:column="17">struct<pos:position pos:line="125" pos:column="23"/></name> <name pos:line="125" pos:column="24">strbuf<pos:position pos:line="125" pos:column="30"/></name></name></type> <name pos:line="125" pos:column="31">sprefix<pos:position pos:line="125" pos:column="38"/></name> <init pos:line="125" pos:column="39">= <expr><name pos:line="125" pos:column="41">STRBUF_INIT<pos:position pos:line="125" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="125" pos:column="53"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="126" pos:column="17">strbuf_addf<pos:position pos:line="126" pos:column="28"/></name><argument_list pos:line="126" pos:column="28">(<argument><expr><operator pos:line="126" pos:column="29">&amp;<pos:position pos:line="126" pos:column="34"/></operator><name pos:line="126" pos:column="30">sprefix<pos:position pos:line="126" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="39">"%s v%d"<pos:position pos:line="126" pos:column="47"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="127" pos:column="29">rev<pos:position pos:line="127" pos:column="32"/></name><operator pos:line="127" pos:column="32">.<pos:position pos:line="127" pos:column="33"/></operator><name pos:line="127" pos:column="33">subject_prefix<pos:position pos:line="127" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="49">reroll_count<pos:position pos:line="127" pos:column="61"/></name></expr></argument>)<pos:position pos:line="127" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="128" pos:column="17">rev<pos:position pos:line="128" pos:column="20"/></name><operator pos:line="128" pos:column="20">.<pos:position pos:line="128" pos:column="21"/></operator><name pos:line="128" pos:column="21">reroll_count<pos:position pos:line="128" pos:column="33"/></name></name> <operator pos:line="128" pos:column="34">=<pos:position pos:line="128" pos:column="35"/></operator> <name pos:line="128" pos:column="36">reroll_count<pos:position pos:line="128" pos:column="48"/></name></expr>;<pos:position pos:line="128" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="129" pos:column="17">rev<pos:position pos:line="129" pos:column="20"/></name><operator pos:line="129" pos:column="20">.<pos:position pos:line="129" pos:column="21"/></operator><name pos:line="129" pos:column="21">subject_prefix<pos:position pos:line="129" pos:column="35"/></name></name> <operator pos:line="129" pos:column="36">=<pos:position pos:line="129" pos:column="37"/></operator> <call><name pos:line="129" pos:column="38">strbuf_detach<pos:position pos:line="129" pos:column="51"/></name><argument_list pos:line="129" pos:column="51">(<argument><expr><operator pos:line="129" pos:column="52">&amp;<pos:position pos:line="129" pos:column="57"/></operator><name pos:line="129" pos:column="53">sprefix<pos:position pos:line="129" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="62">NULL<pos:position pos:line="129" pos:column="66"/></name></expr></argument>)<pos:position pos:line="129" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="130" pos:column="10"/></block></then></if>

	<for pos:line="132" pos:column="9">for <control pos:line="132" pos:column="13">(<init><expr><name pos:line="132" pos:column="14">i<pos:position pos:line="132" pos:column="15"/></name> <operator pos:line="132" pos:column="16">=<pos:position pos:line="132" pos:column="17"/></operator> <literal type="number" pos:line="132" pos:column="18">0<pos:position pos:line="132" pos:column="19"/></literal></expr>;<pos:position pos:line="132" pos:column="20"/></init> <condition><expr><name pos:line="132" pos:column="21">i<pos:position pos:line="132" pos:column="22"/></name> <operator pos:line="132" pos:column="23">&lt;<pos:position pos:line="132" pos:column="27"/></operator> <name><name pos:line="132" pos:column="25">extra_hdr<pos:position pos:line="132" pos:column="34"/></name><operator pos:line="132" pos:column="34">.<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="35">nr<pos:position pos:line="132" pos:column="37"/></name></name></expr>;<pos:position pos:line="132" pos:column="38"/></condition> <incr><expr><name pos:line="132" pos:column="39">i<pos:position pos:line="132" pos:column="40"/></name><operator pos:line="132" pos:column="40">++<pos:position pos:line="132" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="132" pos:column="43"/></control> <block pos:line="132" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="133" pos:column="17">strbuf_addstr<pos:position pos:line="133" pos:column="30"/></name><argument_list pos:line="133" pos:column="30">(<argument><expr><operator pos:line="133" pos:column="31">&amp;<pos:position pos:line="133" pos:column="36"/></operator><name pos:line="133" pos:column="32">buf<pos:position pos:line="133" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="37">extra_hdr<pos:position pos:line="133" pos:column="46"/></name><operator pos:line="133" pos:column="46">.<pos:position pos:line="133" pos:column="47"/></operator><name pos:line="133" pos:column="47">items<pos:position pos:line="133" pos:column="52"/></name><index pos:line="133" pos:column="52">[<expr><name pos:line="133" pos:column="53">i<pos:position pos:line="133" pos:column="54"/></name></expr>]<pos:position pos:line="133" pos:column="55"/></index></name><operator pos:line="133" pos:column="55">.<pos:position pos:line="133" pos:column="56"/></operator><name pos:line="133" pos:column="56">string<pos:position pos:line="133" pos:column="62"/></name></expr></argument>)<pos:position pos:line="133" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="134" pos:column="17">strbuf_addch<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><operator pos:line="134" pos:column="30">&amp;<pos:position pos:line="134" pos:column="35"/></operator><name pos:line="134" pos:column="31">buf<pos:position pos:line="134" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="134" pos:column="36">'\n'<pos:position pos:line="134" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></for>

	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name><name pos:line="137" pos:column="13">extra_to<pos:position pos:line="137" pos:column="21"/></name><operator pos:line="137" pos:column="21">.<pos:position pos:line="137" pos:column="22"/></operator><name pos:line="137" pos:column="22">nr<pos:position pos:line="137" pos:column="24"/></name></name></expr>)<pos:position pos:line="137" pos:column="25"/></condition><then pos:line="137" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="17">strbuf_addstr<pos:position pos:line="138" pos:column="30"/></name><argument_list pos:line="138" pos:column="30">(<argument><expr><operator pos:line="138" pos:column="31">&amp;<pos:position pos:line="138" pos:column="36"/></operator><name pos:line="138" pos:column="32">buf<pos:position pos:line="138" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="37">"To: "<pos:position pos:line="138" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="45"/></expr_stmt></block></then></if>
	<for pos:line="139" pos:column="9">for <control pos:line="139" pos:column="13">(<init><expr><name pos:line="139" pos:column="14">i<pos:position pos:line="139" pos:column="15"/></name> <operator pos:line="139" pos:column="16">=<pos:position pos:line="139" pos:column="17"/></operator> <literal type="number" pos:line="139" pos:column="18">0<pos:position pos:line="139" pos:column="19"/></literal></expr>;<pos:position pos:line="139" pos:column="20"/></init> <condition><expr><name pos:line="139" pos:column="21">i<pos:position pos:line="139" pos:column="22"/></name> <operator pos:line="139" pos:column="23">&lt;<pos:position pos:line="139" pos:column="27"/></operator> <name><name pos:line="139" pos:column="25">extra_to<pos:position pos:line="139" pos:column="33"/></name><operator pos:line="139" pos:column="33">.<pos:position pos:line="139" pos:column="34"/></operator><name pos:line="139" pos:column="34">nr<pos:position pos:line="139" pos:column="36"/></name></name></expr>;<pos:position pos:line="139" pos:column="37"/></condition> <incr><expr><name pos:line="139" pos:column="38">i<pos:position pos:line="139" pos:column="39"/></name><operator pos:line="139" pos:column="39">++<pos:position pos:line="139" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="139" pos:column="42"/></control> <block pos:line="139" pos:column="43">{
		<if pos:line="140" pos:column="17">if <condition pos:line="140" pos:column="20">(<expr><name pos:line="140" pos:column="21">i<pos:position pos:line="140" pos:column="22"/></name></expr>)<pos:position pos:line="140" pos:column="23"/></condition><then pos:line="140" pos:column="23">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="25">strbuf_addstr<pos:position pos:line="141" pos:column="38"/></name><argument_list pos:line="141" pos:column="38">(<argument><expr><operator pos:line="141" pos:column="39">&amp;<pos:position pos:line="141" pos:column="44"/></operator><name pos:line="141" pos:column="40">buf<pos:position pos:line="141" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="45">"    "<pos:position pos:line="141" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="53"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="142" pos:column="17">strbuf_addstr<pos:position pos:line="142" pos:column="30"/></name><argument_list pos:line="142" pos:column="30">(<argument><expr><operator pos:line="142" pos:column="31">&amp;<pos:position pos:line="142" pos:column="36"/></operator><name pos:line="142" pos:column="32">buf<pos:position pos:line="142" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="37">extra_to<pos:position pos:line="142" pos:column="45"/></name><operator pos:line="142" pos:column="45">.<pos:position pos:line="142" pos:column="46"/></operator><name pos:line="142" pos:column="46">items<pos:position pos:line="142" pos:column="51"/></name><index pos:line="142" pos:column="51">[<expr><name pos:line="142" pos:column="52">i<pos:position pos:line="142" pos:column="53"/></name></expr>]<pos:position pos:line="142" pos:column="54"/></index></name><operator pos:line="142" pos:column="54">.<pos:position pos:line="142" pos:column="55"/></operator><name pos:line="142" pos:column="55">string<pos:position pos:line="142" pos:column="61"/></name></expr></argument>)<pos:position pos:line="142" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="63"/></expr_stmt>
		<if pos:line="143" pos:column="17">if <condition pos:line="143" pos:column="20">(<expr><name pos:line="143" pos:column="21">i<pos:position pos:line="143" pos:column="22"/></name> <operator pos:line="143" pos:column="23">+<pos:position pos:line="143" pos:column="24"/></operator> <literal type="number" pos:line="143" pos:column="25">1<pos:position pos:line="143" pos:column="26"/></literal> <operator pos:line="143" pos:column="27">&lt;<pos:position pos:line="143" pos:column="31"/></operator> <name><name pos:line="143" pos:column="29">extra_to<pos:position pos:line="143" pos:column="37"/></name><operator pos:line="143" pos:column="37">.<pos:position pos:line="143" pos:column="38"/></operator><name pos:line="143" pos:column="38">nr<pos:position pos:line="143" pos:column="40"/></name></name></expr>)<pos:position pos:line="143" pos:column="41"/></condition><then pos:line="143" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="25">strbuf_addch<pos:position pos:line="144" pos:column="37"/></name><argument_list pos:line="144" pos:column="37">(<argument><expr><operator pos:line="144" pos:column="38">&amp;<pos:position pos:line="144" pos:column="43"/></operator><name pos:line="144" pos:column="39">buf<pos:position pos:line="144" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="144" pos:column="44">','<pos:position pos:line="144" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="145" pos:column="17">strbuf_addch<pos:position pos:line="145" pos:column="29"/></name><argument_list pos:line="145" pos:column="29">(<argument><expr><operator pos:line="145" pos:column="30">&amp;<pos:position pos:line="145" pos:column="35"/></operator><name pos:line="145" pos:column="31">buf<pos:position pos:line="145" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="145" pos:column="36">'\n'<pos:position pos:line="145" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="146" pos:column="10"/></block></for>

	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name><name pos:line="148" pos:column="13">extra_cc<pos:position pos:line="148" pos:column="21"/></name><operator pos:line="148" pos:column="21">.<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="22">nr<pos:position pos:line="148" pos:column="24"/></name></name></expr>)<pos:position pos:line="148" pos:column="25"/></condition><then pos:line="148" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="17">strbuf_addstr<pos:position pos:line="149" pos:column="30"/></name><argument_list pos:line="149" pos:column="30">(<argument><expr><operator pos:line="149" pos:column="31">&amp;<pos:position pos:line="149" pos:column="36"/></operator><name pos:line="149" pos:column="32">buf<pos:position pos:line="149" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="37">"Cc: "<pos:position pos:line="149" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="45"/></expr_stmt></block></then></if>
	<for pos:line="150" pos:column="9">for <control pos:line="150" pos:column="13">(<init><expr><name pos:line="150" pos:column="14">i<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">=<pos:position pos:line="150" pos:column="17"/></operator> <literal type="number" pos:line="150" pos:column="18">0<pos:position pos:line="150" pos:column="19"/></literal></expr>;<pos:position pos:line="150" pos:column="20"/></init> <condition><expr><name pos:line="150" pos:column="21">i<pos:position pos:line="150" pos:column="22"/></name> <operator pos:line="150" pos:column="23">&lt;<pos:position pos:line="150" pos:column="27"/></operator> <name><name pos:line="150" pos:column="25">extra_cc<pos:position pos:line="150" pos:column="33"/></name><operator pos:line="150" pos:column="33">.<pos:position pos:line="150" pos:column="34"/></operator><name pos:line="150" pos:column="34">nr<pos:position pos:line="150" pos:column="36"/></name></name></expr>;<pos:position pos:line="150" pos:column="37"/></condition> <incr><expr><name pos:line="150" pos:column="38">i<pos:position pos:line="150" pos:column="39"/></name><operator pos:line="150" pos:column="39">++<pos:position pos:line="150" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="150" pos:column="42"/></control> <block pos:line="150" pos:column="43">{
		<if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><name pos:line="151" pos:column="21">i<pos:position pos:line="151" pos:column="22"/></name></expr>)<pos:position pos:line="151" pos:column="23"/></condition><then pos:line="151" pos:column="23">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="25">strbuf_addstr<pos:position pos:line="152" pos:column="38"/></name><argument_list pos:line="152" pos:column="38">(<argument><expr><operator pos:line="152" pos:column="39">&amp;<pos:position pos:line="152" pos:column="44"/></operator><name pos:line="152" pos:column="40">buf<pos:position pos:line="152" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="45">"    "<pos:position pos:line="152" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="53"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="153" pos:column="17">strbuf_addstr<pos:position pos:line="153" pos:column="30"/></name><argument_list pos:line="153" pos:column="30">(<argument><expr><operator pos:line="153" pos:column="31">&amp;<pos:position pos:line="153" pos:column="36"/></operator><name pos:line="153" pos:column="32">buf<pos:position pos:line="153" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="37">extra_cc<pos:position pos:line="153" pos:column="45"/></name><operator pos:line="153" pos:column="45">.<pos:position pos:line="153" pos:column="46"/></operator><name pos:line="153" pos:column="46">items<pos:position pos:line="153" pos:column="51"/></name><index pos:line="153" pos:column="51">[<expr><name pos:line="153" pos:column="52">i<pos:position pos:line="153" pos:column="53"/></name></expr>]<pos:position pos:line="153" pos:column="54"/></index></name><operator pos:line="153" pos:column="54">.<pos:position pos:line="153" pos:column="55"/></operator><name pos:line="153" pos:column="55">string<pos:position pos:line="153" pos:column="61"/></name></expr></argument>)<pos:position pos:line="153" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="63"/></expr_stmt>
		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><name pos:line="154" pos:column="21">i<pos:position pos:line="154" pos:column="22"/></name> <operator pos:line="154" pos:column="23">+<pos:position pos:line="154" pos:column="24"/></operator> <literal type="number" pos:line="154" pos:column="25">1<pos:position pos:line="154" pos:column="26"/></literal> <operator pos:line="154" pos:column="27">&lt;<pos:position pos:line="154" pos:column="31"/></operator> <name><name pos:line="154" pos:column="29">extra_cc<pos:position pos:line="154" pos:column="37"/></name><operator pos:line="154" pos:column="37">.<pos:position pos:line="154" pos:column="38"/></operator><name pos:line="154" pos:column="38">nr<pos:position pos:line="154" pos:column="40"/></name></name></expr>)<pos:position pos:line="154" pos:column="41"/></condition><then pos:line="154" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="25">strbuf_addch<pos:position pos:line="155" pos:column="37"/></name><argument_list pos:line="155" pos:column="37">(<argument><expr><operator pos:line="155" pos:column="38">&amp;<pos:position pos:line="155" pos:column="43"/></operator><name pos:line="155" pos:column="39">buf<pos:position pos:line="155" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="155" pos:column="44">','<pos:position pos:line="155" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="156" pos:column="17">strbuf_addch<pos:position pos:line="156" pos:column="29"/></name><argument_list pos:line="156" pos:column="29">(<argument><expr><operator pos:line="156" pos:column="30">&amp;<pos:position pos:line="156" pos:column="35"/></operator><name pos:line="156" pos:column="31">buf<pos:position pos:line="156" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="156" pos:column="36">'\n'<pos:position pos:line="156" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="157" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="159" pos:column="9">rev<pos:position pos:line="159" pos:column="12"/></name><operator pos:line="159" pos:column="12">.<pos:position pos:line="159" pos:column="13"/></operator><name pos:line="159" pos:column="13">extra_headers<pos:position pos:line="159" pos:column="26"/></name></name> <operator pos:line="159" pos:column="27">=<pos:position pos:line="159" pos:column="28"/></operator> <call><name pos:line="159" pos:column="29">strbuf_detach<pos:position pos:line="159" pos:column="42"/></name><argument_list pos:line="159" pos:column="42">(<argument><expr><operator pos:line="159" pos:column="43">&amp;<pos:position pos:line="159" pos:column="48"/></operator><name pos:line="159" pos:column="44">buf<pos:position pos:line="159" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="49">NULL<pos:position pos:line="159" pos:column="53"/></name></expr></argument>)<pos:position pos:line="159" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="55"/></expr_stmt>

	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">from<pos:position pos:line="161" pos:column="17"/></name></expr>)<pos:position pos:line="161" pos:column="18"/></condition><then pos:line="161" pos:column="18"> <block pos:line="161" pos:column="19">{
		<if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><call><name pos:line="162" pos:column="21">split_ident_line<pos:position pos:line="162" pos:column="37"/></name><argument_list pos:line="162" pos:column="37">(<argument><expr><operator pos:line="162" pos:column="38">&amp;<pos:position pos:line="162" pos:column="43"/></operator><name><name pos:line="162" pos:column="39">rev<pos:position pos:line="162" pos:column="42"/></name><operator pos:line="162" pos:column="42">.<pos:position pos:line="162" pos:column="43"/></operator><name pos:line="162" pos:column="43">from_ident<pos:position pos:line="162" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="55">from<pos:position pos:line="162" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="162" pos:column="61">strlen<pos:position pos:line="162" pos:column="67"/></name><argument_list pos:line="162" pos:column="67">(<argument><expr><name pos:line="162" pos:column="68">from<pos:position pos:line="162" pos:column="72"/></name></expr></argument>)<pos:position pos:line="162" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="162" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="75"/></condition><then pos:line="162" pos:column="75">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="25">die<pos:position pos:line="163" pos:column="28"/></name><argument_list pos:line="163" pos:column="28">(<argument><expr><call><name pos:line="163" pos:column="29">_<pos:position pos:line="163" pos:column="30"/></name><argument_list pos:line="163" pos:column="30">(<argument><expr><literal type="string" pos:line="163" pos:column="31">"invalid ident line: %s"<pos:position pos:line="163" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="163" pos:column="58">from<pos:position pos:line="163" pos:column="62"/></name></expr></argument>)<pos:position pos:line="163" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="64"/></expr_stmt></block></then></if>
	}<pos:position pos:line="164" pos:column="10"/></block></then></if>

	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name pos:line="166" pos:column="13">start_number<pos:position pos:line="166" pos:column="25"/></name> <operator pos:line="166" pos:column="26">&lt;<pos:position pos:line="166" pos:column="30"/></operator> <literal type="number" pos:line="166" pos:column="28">0<pos:position pos:line="166" pos:column="29"/></literal></expr>)<pos:position pos:line="166" pos:column="30"/></condition><then pos:line="166" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="167" pos:column="17">start_number<pos:position pos:line="167" pos:column="29"/></name> <operator pos:line="167" pos:column="30">=<pos:position pos:line="167" pos:column="31"/></operator> <literal type="number" pos:line="167" pos:column="32">1<pos:position pos:line="167" pos:column="33"/></literal></expr>;<pos:position pos:line="167" pos:column="34"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="169" pos:column="9">/*
	 * If numbered is set solely due to format.numbered in config,
	 * and it would conflict with --keep-subject (-k) from the
	 * command line, reset "numbered".
	 */</comment>
	<if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><name pos:line="174" pos:column="13">numbered<pos:position pos:line="174" pos:column="21"/></name> <operator pos:line="174" pos:column="22">&amp;&amp;<pos:position pos:line="174" pos:column="32"/></operator> <name pos:line="174" pos:column="25">keep_subject<pos:position pos:line="174" pos:column="37"/></name> <operator pos:line="174" pos:column="38">&amp;&amp;<pos:position pos:line="174" pos:column="48"/></operator> <operator pos:line="174" pos:column="41">!<pos:position pos:line="174" pos:column="42"/></operator><name pos:line="174" pos:column="42">numbered_cmdline_opt<pos:position pos:line="174" pos:column="62"/></name></expr>)<pos:position pos:line="174" pos:column="63"/></condition><then pos:line="174" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><name pos:line="175" pos:column="17">numbered<pos:position pos:line="175" pos:column="25"/></name> <operator pos:line="175" pos:column="26">=<pos:position pos:line="175" pos:column="27"/></operator> <literal type="number" pos:line="175" pos:column="28">0<pos:position pos:line="175" pos:column="29"/></literal></expr>;<pos:position pos:line="175" pos:column="30"/></expr_stmt></block></then></if>

	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name pos:line="177" pos:column="13">numbered<pos:position pos:line="177" pos:column="21"/></name> <operator pos:line="177" pos:column="22">&amp;&amp;<pos:position pos:line="177" pos:column="32"/></operator> <name pos:line="177" pos:column="25">keep_subject<pos:position pos:line="177" pos:column="37"/></name></expr>)<pos:position pos:line="177" pos:column="38"/></condition><then pos:line="177" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="178" pos:column="17">die<pos:position pos:line="178" pos:column="20"/></name> <argument_list pos:line="178" pos:column="21">(<argument><expr><call><name pos:line="178" pos:column="22">_<pos:position pos:line="178" pos:column="23"/></name><argument_list pos:line="178" pos:column="23">(<argument><expr><literal type="string" pos:line="178" pos:column="24">"-n and -k are mutually exclusive."<pos:position pos:line="178" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="178" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">keep_subject<pos:position pos:line="179" pos:column="25"/></name> <operator pos:line="179" pos:column="26">&amp;&amp;<pos:position pos:line="179" pos:column="36"/></operator> <name pos:line="179" pos:column="29">subject_prefix<pos:position pos:line="179" pos:column="43"/></name></expr>)<pos:position pos:line="179" pos:column="44"/></condition><then pos:line="179" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="17">die<pos:position pos:line="180" pos:column="20"/></name> <argument_list pos:line="180" pos:column="21">(<argument><expr><call><name pos:line="180" pos:column="22">_<pos:position pos:line="180" pos:column="23"/></name><argument_list pos:line="180" pos:column="23">(<argument><expr><literal type="string" pos:line="180" pos:column="24">"--subject-prefix and -k are mutually exclusive."<pos:position pos:line="180" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="180" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="76"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="181" pos:column="9">rev<pos:position pos:line="181" pos:column="12"/></name><operator pos:line="181" pos:column="12">.<pos:position pos:line="181" pos:column="13"/></operator><name pos:line="181" pos:column="13">preserve_subject<pos:position pos:line="181" pos:column="29"/></name></name> <operator pos:line="181" pos:column="30">=<pos:position pos:line="181" pos:column="31"/></operator> <name pos:line="181" pos:column="32">keep_subject<pos:position pos:line="181" pos:column="44"/></name></expr>;<pos:position pos:line="181" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name pos:line="183" pos:column="9">argc<pos:position pos:line="183" pos:column="13"/></name> <operator pos:line="183" pos:column="14">=<pos:position pos:line="183" pos:column="15"/></operator> <call><name pos:line="183" pos:column="16">setup_revisions<pos:position pos:line="183" pos:column="31"/></name><argument_list pos:line="183" pos:column="31">(<argument><expr><name pos:line="183" pos:column="32">argc<pos:position pos:line="183" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="38">argv<pos:position pos:line="183" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="44">&amp;<pos:position pos:line="183" pos:column="49"/></operator><name pos:line="183" pos:column="45">rev<pos:position pos:line="183" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="50">&amp;<pos:position pos:line="183" pos:column="55"/></operator><name pos:line="183" pos:column="51">s_r_opt<pos:position pos:line="183" pos:column="58"/></name></expr></argument>)<pos:position pos:line="183" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="60"/></expr_stmt>
	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name pos:line="184" pos:column="13">argc<pos:position pos:line="184" pos:column="17"/></name> <operator pos:line="184" pos:column="18">&gt;<pos:position pos:line="184" pos:column="22"/></operator> <literal type="number" pos:line="184" pos:column="20">1<pos:position pos:line="184" pos:column="21"/></literal></expr>)<pos:position pos:line="184" pos:column="22"/></condition><then pos:line="184" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="17">die<pos:position pos:line="185" pos:column="20"/></name> <argument_list pos:line="185" pos:column="21">(<argument><expr><call><name pos:line="185" pos:column="22">_<pos:position pos:line="185" pos:column="23"/></name><argument_list pos:line="185" pos:column="23">(<argument><expr><literal type="string" pos:line="185" pos:column="24">"unrecognized argument: %s"<pos:position pos:line="185" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="54">argv<pos:position pos:line="185" pos:column="58"/></name><index pos:line="185" pos:column="58">[<expr><literal type="number" pos:line="185" pos:column="59">1<pos:position pos:line="185" pos:column="60"/></literal></expr>]<pos:position pos:line="185" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="185" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="63"/></expr_stmt></block></then></if>

	<if pos:line="187" pos:column="9">if <condition pos:line="187" pos:column="12">(<expr><name><name pos:line="187" pos:column="13">rev<pos:position pos:line="187" pos:column="16"/></name><operator pos:line="187" pos:column="16">.<pos:position pos:line="187" pos:column="17"/></operator><name pos:line="187" pos:column="17">diffopt<pos:position pos:line="187" pos:column="24"/></name><operator pos:line="187" pos:column="24">.<pos:position pos:line="187" pos:column="25"/></operator><name pos:line="187" pos:column="25">output_format<pos:position pos:line="187" pos:column="38"/></name></name> <operator pos:line="187" pos:column="39">&amp;<pos:position pos:line="187" pos:column="44"/></operator> <name pos:line="187" pos:column="41">DIFF_FORMAT_NAME<pos:position pos:line="187" pos:column="57"/></name></expr>)<pos:position pos:line="187" pos:column="58"/></condition><then pos:line="187" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="17">die<pos:position pos:line="188" pos:column="20"/></name><argument_list pos:line="188" pos:column="20">(<argument><expr><call><name pos:line="188" pos:column="21">_<pos:position pos:line="188" pos:column="22"/></name><argument_list pos:line="188" pos:column="22">(<argument><expr><literal type="string" pos:line="188" pos:column="23">"--name-only does not make sense"<pos:position pos:line="188" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="188" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="59"/></expr_stmt></block></then></if>
	<if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name><name pos:line="189" pos:column="13">rev<pos:position pos:line="189" pos:column="16"/></name><operator pos:line="189" pos:column="16">.<pos:position pos:line="189" pos:column="17"/></operator><name pos:line="189" pos:column="17">diffopt<pos:position pos:line="189" pos:column="24"/></name><operator pos:line="189" pos:column="24">.<pos:position pos:line="189" pos:column="25"/></operator><name pos:line="189" pos:column="25">output_format<pos:position pos:line="189" pos:column="38"/></name></name> <operator pos:line="189" pos:column="39">&amp;<pos:position pos:line="189" pos:column="44"/></operator> <name pos:line="189" pos:column="41">DIFF_FORMAT_NAME_STATUS<pos:position pos:line="189" pos:column="64"/></name></expr>)<pos:position pos:line="189" pos:column="65"/></condition><then pos:line="189" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="190" pos:column="17">die<pos:position pos:line="190" pos:column="20"/></name><argument_list pos:line="190" pos:column="20">(<argument><expr><call><name pos:line="190" pos:column="21">_<pos:position pos:line="190" pos:column="22"/></name><argument_list pos:line="190" pos:column="22">(<argument><expr><literal type="string" pos:line="190" pos:column="23">"--name-status does not make sense"<pos:position pos:line="190" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="190" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="61"/></expr_stmt></block></then></if>
	<if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><name><name pos:line="191" pos:column="13">rev<pos:position pos:line="191" pos:column="16"/></name><operator pos:line="191" pos:column="16">.<pos:position pos:line="191" pos:column="17"/></operator><name pos:line="191" pos:column="17">diffopt<pos:position pos:line="191" pos:column="24"/></name><operator pos:line="191" pos:column="24">.<pos:position pos:line="191" pos:column="25"/></operator><name pos:line="191" pos:column="25">output_format<pos:position pos:line="191" pos:column="38"/></name></name> <operator pos:line="191" pos:column="39">&amp;<pos:position pos:line="191" pos:column="44"/></operator> <name pos:line="191" pos:column="41">DIFF_FORMAT_CHECKDIFF<pos:position pos:line="191" pos:column="62"/></name></expr>)<pos:position pos:line="191" pos:column="63"/></condition><then pos:line="191" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="192" pos:column="17">die<pos:position pos:line="192" pos:column="20"/></name><argument_list pos:line="192" pos:column="20">(<argument><expr><call><name pos:line="192" pos:column="21">_<pos:position pos:line="192" pos:column="22"/></name><argument_list pos:line="192" pos:column="22">(<argument><expr><literal type="string" pos:line="192" pos:column="23">"--check does not make sense"<pos:position pos:line="192" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="192" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="194" pos:column="9">if <condition pos:line="194" pos:column="12">(<expr><operator pos:line="194" pos:column="13">!<pos:position pos:line="194" pos:column="14"/></operator><name pos:line="194" pos:column="14">use_patch_format<pos:position pos:line="194" pos:column="30"/></name> <operator pos:line="194" pos:column="31">&amp;&amp;<pos:position pos:line="194" pos:column="41"/></operator>
		<operator pos:line="195" pos:column="17">(<pos:position pos:line="195" pos:column="18"/></operator><operator pos:line="195" pos:column="18">!<pos:position pos:line="195" pos:column="19"/></operator><name><name pos:line="195" pos:column="19">rev<pos:position pos:line="195" pos:column="22"/></name><operator pos:line="195" pos:column="22">.<pos:position pos:line="195" pos:column="23"/></operator><name pos:line="195" pos:column="23">diffopt<pos:position pos:line="195" pos:column="30"/></name><operator pos:line="195" pos:column="30">.<pos:position pos:line="195" pos:column="31"/></operator><name pos:line="195" pos:column="31">output_format<pos:position pos:line="195" pos:column="44"/></name></name> <operator pos:line="195" pos:column="45">||<pos:position pos:line="195" pos:column="47"/></operator>
		 <name><name pos:line="196" pos:column="18">rev<pos:position pos:line="196" pos:column="21"/></name><operator pos:line="196" pos:column="21">.<pos:position pos:line="196" pos:column="22"/></operator><name pos:line="196" pos:column="22">diffopt<pos:position pos:line="196" pos:column="29"/></name><operator pos:line="196" pos:column="29">.<pos:position pos:line="196" pos:column="30"/></operator><name pos:line="196" pos:column="30">output_format<pos:position pos:line="196" pos:column="43"/></name></name> <operator pos:line="196" pos:column="44">==<pos:position pos:line="196" pos:column="46"/></operator> <name pos:line="196" pos:column="47">DIFF_FORMAT_PATCH<pos:position pos:line="196" pos:column="64"/></name><operator pos:line="196" pos:column="64">)<pos:position pos:line="196" pos:column="65"/></operator></expr>)<pos:position pos:line="196" pos:column="66"/></condition><then pos:line="196" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="197" pos:column="17">rev<pos:position pos:line="197" pos:column="20"/></name><operator pos:line="197" pos:column="20">.<pos:position pos:line="197" pos:column="21"/></operator><name pos:line="197" pos:column="21">diffopt<pos:position pos:line="197" pos:column="28"/></name><operator pos:line="197" pos:column="28">.<pos:position pos:line="197" pos:column="29"/></operator><name pos:line="197" pos:column="29">output_format<pos:position pos:line="197" pos:column="42"/></name></name> <operator pos:line="197" pos:column="43">=<pos:position pos:line="197" pos:column="44"/></operator> <name pos:line="197" pos:column="45">DIFF_FORMAT_DIFFSTAT<pos:position pos:line="197" pos:column="65"/></name> <operator pos:line="197" pos:column="66">|<pos:position pos:line="197" pos:column="67"/></operator> <name pos:line="197" pos:column="68">DIFF_FORMAT_SUMMARY<pos:position pos:line="197" pos:column="87"/></name></expr>;<pos:position pos:line="197" pos:column="88"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="199" pos:column="9">/* Always generate a patch */</comment>
	<expr_stmt><expr><name><name pos:line="200" pos:column="9">rev<pos:position pos:line="200" pos:column="12"/></name><operator pos:line="200" pos:column="12">.<pos:position pos:line="200" pos:column="13"/></operator><name pos:line="200" pos:column="13">diffopt<pos:position pos:line="200" pos:column="20"/></name><operator pos:line="200" pos:column="20">.<pos:position pos:line="200" pos:column="21"/></operator><name pos:line="200" pos:column="21">output_format<pos:position pos:line="200" pos:column="34"/></name></name> <operator pos:line="200" pos:column="35">|=<pos:position pos:line="200" pos:column="37"/></operator> <name pos:line="200" pos:column="38">DIFF_FORMAT_PATCH<pos:position pos:line="200" pos:column="55"/></name></expr>;<pos:position pos:line="200" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="202" pos:column="9">rev<pos:position pos:line="202" pos:column="12"/></name><operator pos:line="202" pos:column="12">.<pos:position pos:line="202" pos:column="13"/></operator><name pos:line="202" pos:column="13">zero_commit<pos:position pos:line="202" pos:column="24"/></name></name> <operator pos:line="202" pos:column="25">=<pos:position pos:line="202" pos:column="26"/></operator> <name pos:line="202" pos:column="27">zero_commit<pos:position pos:line="202" pos:column="38"/></name></expr>;<pos:position pos:line="202" pos:column="39"/></expr_stmt>

	<if pos:line="204" pos:column="9">if <condition pos:line="204" pos:column="12">(<expr><operator pos:line="204" pos:column="13">!<pos:position pos:line="204" pos:column="14"/></operator><call><name pos:line="204" pos:column="14">DIFF_OPT_TST<pos:position pos:line="204" pos:column="26"/></name><argument_list pos:line="204" pos:column="26">(<argument><expr><operator pos:line="204" pos:column="27">&amp;<pos:position pos:line="204" pos:column="32"/></operator><name><name pos:line="204" pos:column="28">rev<pos:position pos:line="204" pos:column="31"/></name><operator pos:line="204" pos:column="31">.<pos:position pos:line="204" pos:column="32"/></operator><name pos:line="204" pos:column="32">diffopt<pos:position pos:line="204" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="41">TEXT<pos:position pos:line="204" pos:column="45"/></name></expr></argument>)<pos:position pos:line="204" pos:column="46"/></argument_list></call> <operator pos:line="204" pos:column="47">&amp;&amp;<pos:position pos:line="204" pos:column="57"/></operator> <operator pos:line="204" pos:column="50">!<pos:position pos:line="204" pos:column="51"/></operator><name pos:line="204" pos:column="51">no_binary_diff<pos:position pos:line="204" pos:column="65"/></name></expr>)<pos:position pos:line="204" pos:column="66"/></condition><then pos:line="204" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="205" pos:column="17">DIFF_OPT_SET<pos:position pos:line="205" pos:column="29"/></name><argument_list pos:line="205" pos:column="29">(<argument><expr><operator pos:line="205" pos:column="30">&amp;<pos:position pos:line="205" pos:column="35"/></operator><name><name pos:line="205" pos:column="31">rev<pos:position pos:line="205" pos:column="34"/></name><operator pos:line="205" pos:column="34">.<pos:position pos:line="205" pos:column="35"/></operator><name pos:line="205" pos:column="35">diffopt<pos:position pos:line="205" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="44">BINARY<pos:position pos:line="205" pos:column="50"/></name></expr></argument>)<pos:position pos:line="205" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="207" pos:column="9">if <condition pos:line="207" pos:column="12">(<expr><name><name pos:line="207" pos:column="13">rev<pos:position pos:line="207" pos:column="16"/></name><operator pos:line="207" pos:column="16">.<pos:position pos:line="207" pos:column="17"/></operator><name pos:line="207" pos:column="17">show_notes<pos:position pos:line="207" pos:column="27"/></name></name></expr>)<pos:position pos:line="207" pos:column="28"/></condition><then pos:line="207" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="208" pos:column="17">init_display_notes<pos:position pos:line="208" pos:column="35"/></name><argument_list pos:line="208" pos:column="35">(<argument><expr><operator pos:line="208" pos:column="36">&amp;<pos:position pos:line="208" pos:column="41"/></operator><name><name pos:line="208" pos:column="37">rev<pos:position pos:line="208" pos:column="40"/></name><operator pos:line="208" pos:column="40">.<pos:position pos:line="208" pos:column="41"/></operator><name pos:line="208" pos:column="41">notes_opt<pos:position pos:line="208" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><operator pos:line="210" pos:column="13">!<pos:position pos:line="210" pos:column="14"/></operator><name pos:line="210" pos:column="14">output_directory<pos:position pos:line="210" pos:column="30"/></name> <operator pos:line="210" pos:column="31">&amp;&amp;<pos:position pos:line="210" pos:column="41"/></operator> <operator pos:line="210" pos:column="34">!<pos:position pos:line="210" pos:column="35"/></operator><name pos:line="210" pos:column="35">use_stdout<pos:position pos:line="210" pos:column="45"/></name></expr>)<pos:position pos:line="210" pos:column="46"/></condition><then pos:line="210" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="211" pos:column="17">output_directory<pos:position pos:line="211" pos:column="33"/></name> <operator pos:line="211" pos:column="34">=<pos:position pos:line="211" pos:column="35"/></operator> <name pos:line="211" pos:column="36">config_output_directory<pos:position pos:line="211" pos:column="59"/></name></expr>;<pos:position pos:line="211" pos:column="60"/></expr_stmt></block></then></if>

	<if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><operator pos:line="213" pos:column="13">!<pos:position pos:line="213" pos:column="14"/></operator><name pos:line="213" pos:column="14">use_stdout<pos:position pos:line="213" pos:column="24"/></name></expr>)<pos:position pos:line="213" pos:column="25"/></condition><then pos:line="213" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="214" pos:column="17">output_directory<pos:position pos:line="214" pos:column="33"/></name> <operator pos:line="214" pos:column="34">=<pos:position pos:line="214" pos:column="35"/></operator> <call><name pos:line="214" pos:column="36">set_outdir<pos:position pos:line="214" pos:column="46"/></name><argument_list pos:line="214" pos:column="46">(<argument><expr><name pos:line="214" pos:column="47">prefix<pos:position pos:line="214" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="55">output_directory<pos:position pos:line="214" pos:column="71"/></name></expr></argument>)<pos:position pos:line="214" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="73"/></expr_stmt></block></then>
	<else pos:line="215" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="216" pos:column="17">setup_pager<pos:position pos:line="216" pos:column="28"/></name><argument_list pos:line="216" pos:column="28">()<pos:position pos:line="216" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="31"/></expr_stmt></block></else></if>

	<if pos:line="218" pos:column="9">if <condition pos:line="218" pos:column="12">(<expr><name pos:line="218" pos:column="13">output_directory<pos:position pos:line="218" pos:column="29"/></name></expr>)<pos:position pos:line="218" pos:column="30"/></condition><then pos:line="218" pos:column="30"> <block pos:line="218" pos:column="31">{
		<if pos:line="219" pos:column="17">if <condition pos:line="219" pos:column="20">(<expr><name pos:line="219" pos:column="21">use_stdout<pos:position pos:line="219" pos:column="31"/></name></expr>)<pos:position pos:line="219" pos:column="32"/></condition><then pos:line="219" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="220" pos:column="25">die<pos:position pos:line="220" pos:column="28"/></name><argument_list pos:line="220" pos:column="28">(<argument><expr><call><name pos:line="220" pos:column="29">_<pos:position pos:line="220" pos:column="30"/></name><argument_list pos:line="220" pos:column="30">(<argument><expr><literal type="string" pos:line="220" pos:column="31">"standard output, or directory, which one?"<pos:position pos:line="220" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="220" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="77"/></expr_stmt></block></then></if>
		<if pos:line="221" pos:column="17">if <condition pos:line="221" pos:column="20">(<expr><call><name pos:line="221" pos:column="21">mkdir<pos:position pos:line="221" pos:column="26"/></name><argument_list pos:line="221" pos:column="26">(<argument><expr><name pos:line="221" pos:column="27">output_directory<pos:position pos:line="221" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="221" pos:column="45">0777<pos:position pos:line="221" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="50"/></argument_list></call> <operator pos:line="221" pos:column="51">&lt;<pos:position pos:line="221" pos:column="55"/></operator> <literal type="number" pos:line="221" pos:column="53">0<pos:position pos:line="221" pos:column="54"/></literal> <operator pos:line="221" pos:column="55">&amp;&amp;<pos:position pos:line="221" pos:column="65"/></operator> <name pos:line="221" pos:column="58">errno<pos:position pos:line="221" pos:column="63"/></name> <operator pos:line="221" pos:column="64">!=<pos:position pos:line="221" pos:column="66"/></operator> <name pos:line="221" pos:column="67">EEXIST<pos:position pos:line="221" pos:column="73"/></name></expr>)<pos:position pos:line="221" pos:column="74"/></condition><then pos:line="221" pos:column="74">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="25">die_errno<pos:position pos:line="222" pos:column="34"/></name><argument_list pos:line="222" pos:column="34">(<argument><expr><call><name pos:line="222" pos:column="35">_<pos:position pos:line="222" pos:column="36"/></name><argument_list pos:line="222" pos:column="36">(<argument><expr><literal type="string" pos:line="222" pos:column="37">"Could not create directory '%s'"<pos:position pos:line="222" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="71"/></argument_list></call></expr></argument>,
				  <argument><expr><name pos:line="223" pos:column="35">output_directory<pos:position pos:line="223" pos:column="51"/></name></expr></argument>)<pos:position pos:line="223" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="224" pos:column="10"/></block></then></if>

	<if pos:line="226" pos:column="9">if <condition pos:line="226" pos:column="12">(<expr><name><name pos:line="226" pos:column="13">rev<pos:position pos:line="226" pos:column="16"/></name><operator pos:line="226" pos:column="16">.<pos:position pos:line="226" pos:column="17"/></operator><name pos:line="226" pos:column="17">pending<pos:position pos:line="226" pos:column="24"/></name><operator pos:line="226" pos:column="24">.<pos:position pos:line="226" pos:column="25"/></operator><name pos:line="226" pos:column="25">nr<pos:position pos:line="226" pos:column="27"/></name></name> <operator pos:line="226" pos:column="28">==<pos:position pos:line="226" pos:column="30"/></operator> <literal type="number" pos:line="226" pos:column="31">1<pos:position pos:line="226" pos:column="32"/></literal></expr>)<pos:position pos:line="226" pos:column="33"/></condition><then pos:line="226" pos:column="33"> <block pos:line="226" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="227" pos:column="17">int<pos:position pos:line="227" pos:column="20"/></name></type> <name pos:line="227" pos:column="21">check_head<pos:position pos:line="227" pos:column="31"/></name> <init pos:line="227" pos:column="32">= <expr><literal type="number" pos:line="227" pos:column="34">0<pos:position pos:line="227" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="227" pos:column="36"/></decl_stmt>

		<if pos:line="229" pos:column="17">if <condition pos:line="229" pos:column="20">(<expr><name><name pos:line="229" pos:column="21">rev<pos:position pos:line="229" pos:column="24"/></name><operator pos:line="229" pos:column="24">.<pos:position pos:line="229" pos:column="25"/></operator><name pos:line="229" pos:column="25">max_count<pos:position pos:line="229" pos:column="34"/></name></name> <operator pos:line="229" pos:column="35">&lt;<pos:position pos:line="229" pos:column="39"/></operator> <literal type="number" pos:line="229" pos:column="37">0<pos:position pos:line="229" pos:column="38"/></literal> <operator pos:line="229" pos:column="39">&amp;&amp;<pos:position pos:line="229" pos:column="49"/></operator> <operator pos:line="229" pos:column="42">!<pos:position pos:line="229" pos:column="43"/></operator><name><name pos:line="229" pos:column="43">rev<pos:position pos:line="229" pos:column="46"/></name><operator pos:line="229" pos:column="46">.<pos:position pos:line="229" pos:column="47"/></operator><name pos:line="229" pos:column="47">show_root_diff<pos:position pos:line="229" pos:column="61"/></name></name></expr>)<pos:position pos:line="229" pos:column="62"/></condition><then pos:line="229" pos:column="62"> <block pos:line="229" pos:column="63">{
			<comment type="block" pos:line="230" pos:column="25">/*
			 * This is traditional behaviour of "git format-patch
			 * origin" that prepares what the origin side still
			 * does not have.
			 */</comment>
			<expr_stmt><expr><name><name pos:line="235" pos:column="25">rev<pos:position pos:line="235" pos:column="28"/></name><operator pos:line="235" pos:column="28">.<pos:position pos:line="235" pos:column="29"/></operator><name pos:line="235" pos:column="29">pending<pos:position pos:line="235" pos:column="36"/></name><operator pos:line="235" pos:column="36">.<pos:position pos:line="235" pos:column="37"/></operator><name pos:line="235" pos:column="37">objects<pos:position pos:line="235" pos:column="44"/></name><index pos:line="235" pos:column="44">[<expr><literal type="number" pos:line="235" pos:column="45">0<pos:position pos:line="235" pos:column="46"/></literal></expr>]<pos:position pos:line="235" pos:column="47"/></index></name><operator pos:line="235" pos:column="47">.<pos:position pos:line="235" pos:column="48"/></operator><name><name pos:line="235" pos:column="48">item<pos:position pos:line="235" pos:column="52"/></name><operator pos:line="235" pos:column="52">-&gt;<pos:position pos:line="235" pos:column="57"/></operator><name pos:line="235" pos:column="54">flags<pos:position pos:line="235" pos:column="59"/></name></name> <operator pos:line="235" pos:column="60">|=<pos:position pos:line="235" pos:column="62"/></operator> <name pos:line="235" pos:column="63">UNINTERESTING<pos:position pos:line="235" pos:column="76"/></name></expr>;<pos:position pos:line="235" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="236" pos:column="25">add_head_to_pending<pos:position pos:line="236" pos:column="44"/></name><argument_list pos:line="236" pos:column="44">(<argument><expr><operator pos:line="236" pos:column="45">&amp;<pos:position pos:line="236" pos:column="50"/></operator><name pos:line="236" pos:column="46">rev<pos:position pos:line="236" pos:column="49"/></name></expr></argument>)<pos:position pos:line="236" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="237" pos:column="25">check_head<pos:position pos:line="237" pos:column="35"/></name> <operator pos:line="237" pos:column="36">=<pos:position pos:line="237" pos:column="37"/></operator> <literal type="number" pos:line="237" pos:column="38">1<pos:position pos:line="237" pos:column="39"/></literal></expr>;<pos:position pos:line="237" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="238" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="239" pos:column="17">/*
		 * Otherwise, it is "format-patch -22 HEAD", and/or
		 * "format-patch --root HEAD".  The user wants
		 * get_revision() to do the usual traversal.
		 */</comment>

		<if pos:line="245" pos:column="17">if <condition pos:line="245" pos:column="20">(<expr><operator pos:line="245" pos:column="21">!<pos:position pos:line="245" pos:column="22"/></operator><call><name pos:line="245" pos:column="22">strcmp<pos:position pos:line="245" pos:column="28"/></name><argument_list pos:line="245" pos:column="28">(<argument><expr><name><name pos:line="245" pos:column="29">rev<pos:position pos:line="245" pos:column="32"/></name><operator pos:line="245" pos:column="32">.<pos:position pos:line="245" pos:column="33"/></operator><name pos:line="245" pos:column="33">pending<pos:position pos:line="245" pos:column="40"/></name><operator pos:line="245" pos:column="40">.<pos:position pos:line="245" pos:column="41"/></operator><name pos:line="245" pos:column="41">objects<pos:position pos:line="245" pos:column="48"/></name><index pos:line="245" pos:column="48">[<expr><literal type="number" pos:line="245" pos:column="49">0<pos:position pos:line="245" pos:column="50"/></literal></expr>]<pos:position pos:line="245" pos:column="51"/></index></name><operator pos:line="245" pos:column="51">.<pos:position pos:line="245" pos:column="52"/></operator><name pos:line="245" pos:column="52">name<pos:position pos:line="245" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="245" pos:column="58">"HEAD"<pos:position pos:line="245" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="245" pos:column="66"/></condition><then pos:line="245" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="246" pos:column="25">check_head<pos:position pos:line="246" pos:column="35"/></name> <operator pos:line="246" pos:column="36">=<pos:position pos:line="246" pos:column="37"/></operator> <literal type="number" pos:line="246" pos:column="38">1<pos:position pos:line="246" pos:column="39"/></literal></expr>;<pos:position pos:line="246" pos:column="40"/></expr_stmt></block></then></if>

		<if pos:line="248" pos:column="17">if <condition pos:line="248" pos:column="20">(<expr><name pos:line="248" pos:column="21">check_head<pos:position pos:line="248" pos:column="31"/></name></expr>)<pos:position pos:line="248" pos:column="32"/></condition><then pos:line="248" pos:column="32"> <block pos:line="248" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="249" pos:column="25">unsigned<pos:position pos:line="249" pos:column="33"/></name> <name pos:line="249" pos:column="34">char<pos:position pos:line="249" pos:column="38"/></name></type> <name><name pos:line="249" pos:column="39">sha1<pos:position pos:line="249" pos:column="43"/></name><index pos:line="249" pos:column="43">[<expr><literal type="number" pos:line="249" pos:column="44">20<pos:position pos:line="249" pos:column="46"/></literal></expr>]<pos:position pos:line="249" pos:column="47"/></index></name></decl>;<pos:position pos:line="249" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="250" pos:column="25">const<pos:position pos:line="250" pos:column="30"/></specifier> <name pos:line="250" pos:column="31">char<pos:position pos:line="250" pos:column="35"/></name> <modifier pos:line="250" pos:column="36">*<pos:position pos:line="250" pos:column="37"/></modifier></type><name pos:line="250" pos:column="37">ref<pos:position pos:line="250" pos:column="40"/></name></decl>, <modifier pos:line="250" pos:column="42">*<pos:position pos:line="250" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="250" pos:column="43">v<pos:position pos:line="250" pos:column="44"/></name></decl>;<pos:position pos:line="250" pos:column="45"/></decl_stmt>
			<expr_stmt><expr><name pos:line="251" pos:column="25">ref<pos:position pos:line="251" pos:column="28"/></name> <operator pos:line="251" pos:column="29">=<pos:position pos:line="251" pos:column="30"/></operator> <call><name pos:line="251" pos:column="31">resolve_ref_unsafe<pos:position pos:line="251" pos:column="49"/></name><argument_list pos:line="251" pos:column="49">(<argument><expr><literal type="string" pos:line="251" pos:column="50">"HEAD"<pos:position pos:line="251" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="251" pos:column="58">RESOLVE_REF_READING<pos:position pos:line="251" pos:column="77"/></name></expr></argument>,
						 <argument><expr><name pos:line="252" pos:column="50">sha1<pos:position pos:line="252" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="56">NULL<pos:position pos:line="252" pos:column="60"/></name></expr></argument>)<pos:position pos:line="252" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="62"/></expr_stmt>
			<if pos:line="253" pos:column="25">if <condition pos:line="253" pos:column="28">(<expr><name pos:line="253" pos:column="29">ref<pos:position pos:line="253" pos:column="32"/></name> <operator pos:line="253" pos:column="33">&amp;&amp;<pos:position pos:line="253" pos:column="43"/></operator> <call><name pos:line="253" pos:column="36">skip_prefix<pos:position pos:line="253" pos:column="47"/></name><argument_list pos:line="253" pos:column="47">(<argument><expr><name pos:line="253" pos:column="48">ref<pos:position pos:line="253" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="53">"refs/heads/"<pos:position pos:line="253" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="253" pos:column="68">&amp;<pos:position pos:line="253" pos:column="73"/></operator><name pos:line="253" pos:column="69">v<pos:position pos:line="253" pos:column="70"/></name></expr></argument>)<pos:position pos:line="253" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="253" pos:column="72"/></condition><then pos:line="253" pos:column="72">
				<block type="pseudo"><expr_stmt><expr><name pos:line="254" pos:column="33">branch_name<pos:position pos:line="254" pos:column="44"/></name> <operator pos:line="254" pos:column="45">=<pos:position pos:line="254" pos:column="46"/></operator> <call><name pos:line="254" pos:column="47">xstrdup<pos:position pos:line="254" pos:column="54"/></name><argument_list pos:line="254" pos:column="54">(<argument><expr><name pos:line="254" pos:column="55">v<pos:position pos:line="254" pos:column="56"/></name></expr></argument>)<pos:position pos:line="254" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="58"/></expr_stmt></block></then>
			<else pos:line="255" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="256" pos:column="33">branch_name<pos:position pos:line="256" pos:column="44"/></name> <operator pos:line="256" pos:column="45">=<pos:position pos:line="256" pos:column="46"/></operator> <call><name pos:line="256" pos:column="47">xstrdup<pos:position pos:line="256" pos:column="54"/></name><argument_list pos:line="256" pos:column="54">(<argument><expr><literal type="string" pos:line="256" pos:column="55">""<pos:position pos:line="256" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="59"/></expr_stmt></block></else></if> <comment type="block" pos:line="256" pos:column="60">/* no branch */</comment>
		}<pos:position pos:line="257" pos:column="18"/></block></then></if>
	}<pos:position pos:line="258" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="260" pos:column="9">/*
	 * We cannot move this anywhere earlier because we do want to
	 * know if --root was given explicitly from the command line.
	 */</comment>
	<expr_stmt><expr><name><name pos:line="264" pos:column="9">rev<pos:position pos:line="264" pos:column="12"/></name><operator pos:line="264" pos:column="12">.<pos:position pos:line="264" pos:column="13"/></operator><name pos:line="264" pos:column="13">show_root_diff<pos:position pos:line="264" pos:column="27"/></name></name> <operator pos:line="264" pos:column="28">=<pos:position pos:line="264" pos:column="29"/></operator> <literal type="number" pos:line="264" pos:column="30">1<pos:position pos:line="264" pos:column="31"/></literal></expr>;<pos:position pos:line="264" pos:column="32"/></expr_stmt>

	<if pos:line="266" pos:column="9">if <condition pos:line="266" pos:column="12">(<expr><name pos:line="266" pos:column="13">ignore_if_in_upstream<pos:position pos:line="266" pos:column="34"/></name></expr>)<pos:position pos:line="266" pos:column="35"/></condition><then pos:line="266" pos:column="35"> <block pos:line="266" pos:column="36">{
		<comment type="block" pos:line="267" pos:column="17">/* Don't say anything if head and upstream are the same. */</comment>
		<if pos:line="268" pos:column="17">if <condition pos:line="268" pos:column="20">(<expr><name><name pos:line="268" pos:column="21">rev<pos:position pos:line="268" pos:column="24"/></name><operator pos:line="268" pos:column="24">.<pos:position pos:line="268" pos:column="25"/></operator><name pos:line="268" pos:column="25">pending<pos:position pos:line="268" pos:column="32"/></name><operator pos:line="268" pos:column="32">.<pos:position pos:line="268" pos:column="33"/></operator><name pos:line="268" pos:column="33">nr<pos:position pos:line="268" pos:column="35"/></name></name> <operator pos:line="268" pos:column="36">==<pos:position pos:line="268" pos:column="38"/></operator> <literal type="number" pos:line="268" pos:column="39">2<pos:position pos:line="268" pos:column="40"/></literal></expr>)<pos:position pos:line="268" pos:column="41"/></condition><then pos:line="268" pos:column="41"> <block pos:line="268" pos:column="42">{
			<decl_stmt><decl><type><name><name pos:line="269" pos:column="25">struct<pos:position pos:line="269" pos:column="31"/></name> <name pos:line="269" pos:column="32">object_array_entry<pos:position pos:line="269" pos:column="50"/></name></name> <modifier pos:line="269" pos:column="51">*<pos:position pos:line="269" pos:column="52"/></modifier></type><name pos:line="269" pos:column="52">o<pos:position pos:line="269" pos:column="53"/></name> <init pos:line="269" pos:column="54">= <expr><name><name pos:line="269" pos:column="56">rev<pos:position pos:line="269" pos:column="59"/></name><operator pos:line="269" pos:column="59">.<pos:position pos:line="269" pos:column="60"/></operator><name pos:line="269" pos:column="60">pending<pos:position pos:line="269" pos:column="67"/></name><operator pos:line="269" pos:column="67">.<pos:position pos:line="269" pos:column="68"/></operator><name pos:line="269" pos:column="68">objects<pos:position pos:line="269" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="269" pos:column="76"/></decl_stmt>
			<if pos:line="270" pos:column="25">if <condition pos:line="270" pos:column="28">(<expr><call><name pos:line="270" pos:column="29">oidcmp<pos:position pos:line="270" pos:column="35"/></name><argument_list pos:line="270" pos:column="35">(<argument><expr><operator pos:line="270" pos:column="36">&amp;<pos:position pos:line="270" pos:column="41"/></operator><name><name pos:line="270" pos:column="37">o<pos:position pos:line="270" pos:column="38"/></name><index pos:line="270" pos:column="38">[<expr><literal type="number" pos:line="270" pos:column="39">0<pos:position pos:line="270" pos:column="40"/></literal></expr>]<pos:position pos:line="270" pos:column="41"/></index></name><operator pos:line="270" pos:column="41">.<pos:position pos:line="270" pos:column="42"/></operator><name><name pos:line="270" pos:column="42">item<pos:position pos:line="270" pos:column="46"/></name><operator pos:line="270" pos:column="46">-&gt;<pos:position pos:line="270" pos:column="51"/></operator><name pos:line="270" pos:column="48">oid<pos:position pos:line="270" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="270" pos:column="53">&amp;<pos:position pos:line="270" pos:column="58"/></operator><name><name pos:line="270" pos:column="54">o<pos:position pos:line="270" pos:column="55"/></name><index pos:line="270" pos:column="55">[<expr><literal type="number" pos:line="270" pos:column="56">1<pos:position pos:line="270" pos:column="57"/></literal></expr>]<pos:position pos:line="270" pos:column="58"/></index></name><operator pos:line="270" pos:column="58">.<pos:position pos:line="270" pos:column="59"/></operator><name><name pos:line="270" pos:column="59">item<pos:position pos:line="270" pos:column="63"/></name><operator pos:line="270" pos:column="63">-&gt;<pos:position pos:line="270" pos:column="68"/></operator><name pos:line="270" pos:column="65">oid<pos:position pos:line="270" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="270" pos:column="69"/></argument_list></call> <operator pos:line="270" pos:column="70">==<pos:position pos:line="270" pos:column="72"/></operator> <literal type="number" pos:line="270" pos:column="73">0<pos:position pos:line="270" pos:column="74"/></literal></expr>)<pos:position pos:line="270" pos:column="75"/></condition><then pos:line="270" pos:column="75">
				<block type="pseudo"><return pos:line="271" pos:column="33">return <expr><literal type="number" pos:line="271" pos:column="40">0<pos:position pos:line="271" pos:column="41"/></literal></expr>;<pos:position pos:line="271" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="272" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="273" pos:column="17">get_patch_ids<pos:position pos:line="273" pos:column="30"/></name><argument_list pos:line="273" pos:column="30">(<argument><expr><operator pos:line="273" pos:column="31">&amp;<pos:position pos:line="273" pos:column="36"/></operator><name pos:line="273" pos:column="32">rev<pos:position pos:line="273" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="273" pos:column="37">&amp;<pos:position pos:line="273" pos:column="42"/></operator><name pos:line="273" pos:column="38">ids<pos:position pos:line="273" pos:column="41"/></name></expr></argument>)<pos:position pos:line="273" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="274" pos:column="10"/></block></then></if>

	<if pos:line="276" pos:column="9">if <condition pos:line="276" pos:column="12">(<expr><operator pos:line="276" pos:column="13">!<pos:position pos:line="276" pos:column="14"/></operator><name pos:line="276" pos:column="14">use_stdout<pos:position pos:line="276" pos:column="24"/></name></expr>)<pos:position pos:line="276" pos:column="25"/></condition><then pos:line="276" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="277" pos:column="17">realstdout<pos:position pos:line="277" pos:column="27"/></name> <operator pos:line="277" pos:column="28">=<pos:position pos:line="277" pos:column="29"/></operator> <call><name pos:line="277" pos:column="30">xfdopen<pos:position pos:line="277" pos:column="37"/></name><argument_list pos:line="277" pos:column="37">(<argument><expr><call><name pos:line="277" pos:column="38">xdup<pos:position pos:line="277" pos:column="42"/></name><argument_list pos:line="277" pos:column="42">(<argument><expr><literal type="number" pos:line="277" pos:column="43">1<pos:position pos:line="277" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="47">"w"<pos:position pos:line="277" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="279" pos:column="9">if <condition pos:line="279" pos:column="12">(<expr><call><name pos:line="279" pos:column="13">prepare_revision_walk<pos:position pos:line="279" pos:column="34"/></name><argument_list pos:line="279" pos:column="34">(<argument><expr><operator pos:line="279" pos:column="35">&amp;<pos:position pos:line="279" pos:column="40"/></operator><name pos:line="279" pos:column="36">rev<pos:position pos:line="279" pos:column="39"/></name></expr></argument>)<pos:position pos:line="279" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="279" pos:column="41"/></condition><then pos:line="279" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="280" pos:column="17">die<pos:position pos:line="280" pos:column="20"/></name><argument_list pos:line="280" pos:column="20">(<argument><expr><call><name pos:line="280" pos:column="21">_<pos:position pos:line="280" pos:column="22"/></name><argument_list pos:line="280" pos:column="22">(<argument><expr><literal type="string" pos:line="280" pos:column="23">"revision walk setup failed"<pos:position pos:line="280" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="280" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="280" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="54"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="281" pos:column="9">rev<pos:position pos:line="281" pos:column="12"/></name><operator pos:line="281" pos:column="12">.<pos:position pos:line="281" pos:column="13"/></operator><name pos:line="281" pos:column="13">boundary<pos:position pos:line="281" pos:column="21"/></name></name> <operator pos:line="281" pos:column="22">=<pos:position pos:line="281" pos:column="23"/></operator> <literal type="number" pos:line="281" pos:column="24">1<pos:position pos:line="281" pos:column="25"/></literal></expr>;<pos:position pos:line="281" pos:column="26"/></expr_stmt>
	<while pos:line="282" pos:column="9">while <condition pos:line="282" pos:column="15">(<expr><operator pos:line="282" pos:column="16">(<pos:position pos:line="282" pos:column="17"/></operator><name pos:line="282" pos:column="17">commit<pos:position pos:line="282" pos:column="23"/></name> <operator pos:line="282" pos:column="24">=<pos:position pos:line="282" pos:column="25"/></operator> <call><name pos:line="282" pos:column="26">get_revision<pos:position pos:line="282" pos:column="38"/></name><argument_list pos:line="282" pos:column="38">(<argument><expr><operator pos:line="282" pos:column="39">&amp;<pos:position pos:line="282" pos:column="44"/></operator><name pos:line="282" pos:column="40">rev<pos:position pos:line="282" pos:column="43"/></name></expr></argument>)<pos:position pos:line="282" pos:column="44"/></argument_list></call><operator pos:line="282" pos:column="44">)<pos:position pos:line="282" pos:column="45"/></operator> <operator pos:line="282" pos:column="46">!=<pos:position pos:line="282" pos:column="48"/></operator> <name pos:line="282" pos:column="49">NULL<pos:position pos:line="282" pos:column="53"/></name></expr>)<pos:position pos:line="282" pos:column="54"/></condition> <block pos:line="282" pos:column="55">{
		<if pos:line="283" pos:column="17">if <condition pos:line="283" pos:column="20">(<expr><name><name pos:line="283" pos:column="21">commit<pos:position pos:line="283" pos:column="27"/></name><operator pos:line="283" pos:column="27">-&gt;<pos:position pos:line="283" pos:column="32"/></operator><name pos:line="283" pos:column="29">object<pos:position pos:line="283" pos:column="35"/></name><operator pos:line="283" pos:column="35">.<pos:position pos:line="283" pos:column="36"/></operator><name pos:line="283" pos:column="36">flags<pos:position pos:line="283" pos:column="41"/></name></name> <operator pos:line="283" pos:column="42">&amp;<pos:position pos:line="283" pos:column="47"/></operator> <name pos:line="283" pos:column="44">BOUNDARY<pos:position pos:line="283" pos:column="52"/></name></expr>)<pos:position pos:line="283" pos:column="53"/></condition><then pos:line="283" pos:column="53"> <block pos:line="283" pos:column="54">{
			<expr_stmt><expr><name pos:line="284" pos:column="25">boundary_count<pos:position pos:line="284" pos:column="39"/></name><operator pos:line="284" pos:column="39">++<pos:position pos:line="284" pos:column="41"/></operator></expr>;<pos:position pos:line="284" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="285" pos:column="25">origin<pos:position pos:line="285" pos:column="31"/></name> <operator pos:line="285" pos:column="32">=<pos:position pos:line="285" pos:column="33"/></operator> <ternary><condition><expr><operator pos:line="285" pos:column="34">(<pos:position pos:line="285" pos:column="35"/></operator><name pos:line="285" pos:column="35">boundary_count<pos:position pos:line="285" pos:column="49"/></name> <operator pos:line="285" pos:column="50">==<pos:position pos:line="285" pos:column="52"/></operator> <literal type="number" pos:line="285" pos:column="53">1<pos:position pos:line="285" pos:column="54"/></literal><operator pos:line="285" pos:column="54">)<pos:position pos:line="285" pos:column="55"/></operator></expr> ?<pos:position pos:line="285" pos:column="57"/></condition><then pos:line="285" pos:column="57"> <expr><name pos:line="285" pos:column="58">commit<pos:position pos:line="285" pos:column="64"/></name></expr> <pos:position pos:line="285" pos:column="65"/></then><else pos:line="285" pos:column="65">: <expr><name pos:line="285" pos:column="67">NULL<pos:position pos:line="285" pos:column="71"/></name></expr></else></ternary></expr>;<pos:position pos:line="285" pos:column="72"/></expr_stmt>
			<continue pos:line="286" pos:column="25">continue;<pos:position pos:line="286" pos:column="34"/></continue>
		}<pos:position pos:line="287" pos:column="18"/></block></then></if>

		<if pos:line="289" pos:column="17">if <condition pos:line="289" pos:column="20">(<expr><name pos:line="289" pos:column="21">ignore_if_in_upstream<pos:position pos:line="289" pos:column="42"/></name> <operator pos:line="289" pos:column="43">&amp;&amp;<pos:position pos:line="289" pos:column="53"/></operator> <call><name pos:line="289" pos:column="46">has_commit_patch_id<pos:position pos:line="289" pos:column="65"/></name><argument_list pos:line="289" pos:column="65">(<argument><expr><name pos:line="289" pos:column="66">commit<pos:position pos:line="289" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="289" pos:column="74">&amp;<pos:position pos:line="289" pos:column="79"/></operator><name pos:line="289" pos:column="75">ids<pos:position pos:line="289" pos:column="78"/></name></expr></argument>)<pos:position pos:line="289" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="289" pos:column="80"/></condition><then pos:line="289" pos:column="80">
			<block type="pseudo"><continue pos:line="290" pos:column="25">continue;<pos:position pos:line="290" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="292" pos:column="17">nr<pos:position pos:line="292" pos:column="19"/></name><operator pos:line="292" pos:column="19">++<pos:position pos:line="292" pos:column="21"/></operator></expr>;<pos:position pos:line="292" pos:column="22"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="293" pos:column="17">REALLOC_ARRAY<pos:position pos:line="293" pos:column="30"/></name><argument_list pos:line="293" pos:column="30">(<argument><expr><name pos:line="293" pos:column="31">list<pos:position pos:line="293" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="37">nr<pos:position pos:line="293" pos:column="39"/></name></expr></argument>)<pos:position pos:line="293" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="294" pos:column="17">list<pos:position pos:line="294" pos:column="21"/></name><index pos:line="294" pos:column="21">[<expr><name pos:line="294" pos:column="22">nr<pos:position pos:line="294" pos:column="24"/></name> <operator pos:line="294" pos:column="25">-<pos:position pos:line="294" pos:column="26"/></operator> <literal type="number" pos:line="294" pos:column="27">1<pos:position pos:line="294" pos:column="28"/></literal></expr>]<pos:position pos:line="294" pos:column="29"/></index></name> <operator pos:line="294" pos:column="30">=<pos:position pos:line="294" pos:column="31"/></operator> <name pos:line="294" pos:column="32">commit<pos:position pos:line="294" pos:column="38"/></name></expr>;<pos:position pos:line="294" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="295" pos:column="10"/></block></while>
	<if pos:line="296" pos:column="9">if <condition pos:line="296" pos:column="12">(<expr><name pos:line="296" pos:column="13">nr<pos:position pos:line="296" pos:column="15"/></name> <operator pos:line="296" pos:column="16">==<pos:position pos:line="296" pos:column="18"/></operator> <literal type="number" pos:line="296" pos:column="19">0<pos:position pos:line="296" pos:column="20"/></literal></expr>)<pos:position pos:line="296" pos:column="21"/></condition><then pos:line="296" pos:column="21">
		<comment type="block" pos:line="297" pos:column="17">/* nothing to do */</comment>
		<block type="pseudo"><return pos:line="298" pos:column="17">return <expr><literal type="number" pos:line="298" pos:column="24">0<pos:position pos:line="298" pos:column="25"/></literal></expr>;<pos:position pos:line="298" pos:column="26"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="299" pos:column="9">total<pos:position pos:line="299" pos:column="14"/></name> <operator pos:line="299" pos:column="15">=<pos:position pos:line="299" pos:column="16"/></operator> <name pos:line="299" pos:column="17">nr<pos:position pos:line="299" pos:column="19"/></name></expr>;<pos:position pos:line="299" pos:column="20"/></expr_stmt>
	<if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><operator pos:line="300" pos:column="13">!<pos:position pos:line="300" pos:column="14"/></operator><name pos:line="300" pos:column="14">keep_subject<pos:position pos:line="300" pos:column="26"/></name> <operator pos:line="300" pos:column="27">&amp;&amp;<pos:position pos:line="300" pos:column="37"/></operator> <name pos:line="300" pos:column="30">auto_number<pos:position pos:line="300" pos:column="41"/></name> <operator pos:line="300" pos:column="42">&amp;&amp;<pos:position pos:line="300" pos:column="52"/></operator> <name pos:line="300" pos:column="45">total<pos:position pos:line="300" pos:column="50"/></name> <operator pos:line="300" pos:column="51">&gt;<pos:position pos:line="300" pos:column="55"/></operator> <literal type="number" pos:line="300" pos:column="53">1<pos:position pos:line="300" pos:column="54"/></literal></expr>)<pos:position pos:line="300" pos:column="55"/></condition><then pos:line="300" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="301" pos:column="17">numbered<pos:position pos:line="301" pos:column="25"/></name> <operator pos:line="301" pos:column="26">=<pos:position pos:line="301" pos:column="27"/></operator> <literal type="number" pos:line="301" pos:column="28">1<pos:position pos:line="301" pos:column="29"/></literal></expr>;<pos:position pos:line="301" pos:column="30"/></expr_stmt></block></then></if>
	<if pos:line="302" pos:column="9">if <condition pos:line="302" pos:column="12">(<expr><name pos:line="302" pos:column="13">numbered<pos:position pos:line="302" pos:column="21"/></name></expr>)<pos:position pos:line="302" pos:column="22"/></condition><then pos:line="302" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="303" pos:column="17">rev<pos:position pos:line="303" pos:column="20"/></name><operator pos:line="303" pos:column="20">.<pos:position pos:line="303" pos:column="21"/></operator><name pos:line="303" pos:column="21">total<pos:position pos:line="303" pos:column="26"/></name></name> <operator pos:line="303" pos:column="27">=<pos:position pos:line="303" pos:column="28"/></operator> <name pos:line="303" pos:column="29">total<pos:position pos:line="303" pos:column="34"/></name> <operator pos:line="303" pos:column="35">+<pos:position pos:line="303" pos:column="36"/></operator> <name pos:line="303" pos:column="37">start_number<pos:position pos:line="303" pos:column="49"/></name> <operator pos:line="303" pos:column="50">-<pos:position pos:line="303" pos:column="51"/></operator> <literal type="number" pos:line="303" pos:column="52">1<pos:position pos:line="303" pos:column="53"/></literal></expr>;<pos:position pos:line="303" pos:column="54"/></expr_stmt></block></then></if>
	<if pos:line="304" pos:column="9">if <condition pos:line="304" pos:column="12">(<expr><name pos:line="304" pos:column="13">cover_letter<pos:position pos:line="304" pos:column="25"/></name> <operator pos:line="304" pos:column="26">==<pos:position pos:line="304" pos:column="28"/></operator> <operator pos:line="304" pos:column="29">-<pos:position pos:line="304" pos:column="30"/></operator><literal type="number" pos:line="304" pos:column="30">1<pos:position pos:line="304" pos:column="31"/></literal></expr>)<pos:position pos:line="304" pos:column="32"/></condition><then pos:line="304" pos:column="32"> <block pos:line="304" pos:column="33">{
		<if pos:line="305" pos:column="17">if <condition pos:line="305" pos:column="20">(<expr><name pos:line="305" pos:column="21">config_cover_letter<pos:position pos:line="305" pos:column="40"/></name> <operator pos:line="305" pos:column="41">==<pos:position pos:line="305" pos:column="43"/></operator> <name pos:line="305" pos:column="44">COVER_AUTO<pos:position pos:line="305" pos:column="54"/></name></expr>)<pos:position pos:line="305" pos:column="55"/></condition><then pos:line="305" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="306" pos:column="25">cover_letter<pos:position pos:line="306" pos:column="37"/></name> <operator pos:line="306" pos:column="38">=<pos:position pos:line="306" pos:column="39"/></operator> <operator pos:line="306" pos:column="40">(<pos:position pos:line="306" pos:column="41"/></operator><name pos:line="306" pos:column="41">total<pos:position pos:line="306" pos:column="46"/></name> <operator pos:line="306" pos:column="47">&gt;<pos:position pos:line="306" pos:column="51"/></operator> <literal type="number" pos:line="306" pos:column="49">1<pos:position pos:line="306" pos:column="50"/></literal><operator pos:line="306" pos:column="50">)<pos:position pos:line="306" pos:column="51"/></operator></expr>;<pos:position pos:line="306" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="307" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="308" pos:column="25">cover_letter<pos:position pos:line="308" pos:column="37"/></name> <operator pos:line="308" pos:column="38">=<pos:position pos:line="308" pos:column="39"/></operator> <operator pos:line="308" pos:column="40">(<pos:position pos:line="308" pos:column="41"/></operator><name pos:line="308" pos:column="41">config_cover_letter<pos:position pos:line="308" pos:column="60"/></name> <operator pos:line="308" pos:column="61">==<pos:position pos:line="308" pos:column="63"/></operator> <name pos:line="308" pos:column="64">COVER_ON<pos:position pos:line="308" pos:column="72"/></name><operator pos:line="308" pos:column="72">)<pos:position pos:line="308" pos:column="73"/></operator></expr>;<pos:position pos:line="308" pos:column="74"/></expr_stmt></block></else></if>
	}<pos:position pos:line="309" pos:column="10"/></block></then></if>

	<if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><operator pos:line="311" pos:column="13">!<pos:position pos:line="311" pos:column="14"/></operator><name pos:line="311" pos:column="14">signature<pos:position pos:line="311" pos:column="23"/></name></expr>)<pos:position pos:line="311" pos:column="24"/></condition><then pos:line="311" pos:column="24"> <block pos:line="311" pos:column="25">{
		<empty_stmt pos:line="312" pos:column="17">;<pos:position pos:line="312" pos:column="18"/></empty_stmt> <comment type="block" pos:line="312" pos:column="19">/* --no-signature inhibits all signatures */</comment>
	}<pos:position pos:line="313" pos:column="10"/></block></then> <elseif pos:line="313" pos:column="11">else <if pos:line="313" pos:column="16">if <condition pos:line="313" pos:column="19">(<expr><name pos:line="313" pos:column="20">signature<pos:position pos:line="313" pos:column="29"/></name> <operator pos:line="313" pos:column="30">&amp;&amp;<pos:position pos:line="313" pos:column="40"/></operator> <name pos:line="313" pos:column="33">signature<pos:position pos:line="313" pos:column="42"/></name> <operator pos:line="313" pos:column="43">!=<pos:position pos:line="313" pos:column="45"/></operator> <name pos:line="313" pos:column="46">git_version_string<pos:position pos:line="313" pos:column="64"/></name></expr>)<pos:position pos:line="313" pos:column="65"/></condition><then pos:line="313" pos:column="65"> <block pos:line="313" pos:column="66">{
		<empty_stmt pos:line="314" pos:column="17">;<pos:position pos:line="314" pos:column="18"/></empty_stmt> <comment type="block" pos:line="314" pos:column="19">/* non-default signature already set */</comment>
	}<pos:position pos:line="315" pos:column="10"/></block></then></if></elseif> <elseif pos:line="315" pos:column="11">else <if pos:line="315" pos:column="16">if <condition pos:line="315" pos:column="19">(<expr><name pos:line="315" pos:column="20">signature_file<pos:position pos:line="315" pos:column="34"/></name></expr>)<pos:position pos:line="315" pos:column="35"/></condition><then pos:line="315" pos:column="35"> <block pos:line="315" pos:column="36">{
		<decl_stmt><decl><type><name><name pos:line="316" pos:column="17">struct<pos:position pos:line="316" pos:column="23"/></name> <name pos:line="316" pos:column="24">strbuf<pos:position pos:line="316" pos:column="30"/></name></name></type> <name pos:line="316" pos:column="31">buf<pos:position pos:line="316" pos:column="34"/></name> <init pos:line="316" pos:column="35">= <expr><name pos:line="316" pos:column="37">STRBUF_INIT<pos:position pos:line="316" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="316" pos:column="49"/></decl_stmt>

		<if pos:line="318" pos:column="17">if <condition pos:line="318" pos:column="20">(<expr><call><name pos:line="318" pos:column="21">strbuf_read_file<pos:position pos:line="318" pos:column="37"/></name><argument_list pos:line="318" pos:column="37">(<argument><expr><operator pos:line="318" pos:column="38">&amp;<pos:position pos:line="318" pos:column="43"/></operator><name pos:line="318" pos:column="39">buf<pos:position pos:line="318" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="318" pos:column="44">signature_file<pos:position pos:line="318" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="318" pos:column="60">128<pos:position pos:line="318" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="318" pos:column="64"/></argument_list></call> <operator pos:line="318" pos:column="65">&lt;<pos:position pos:line="318" pos:column="69"/></operator> <literal type="number" pos:line="318" pos:column="67">0<pos:position pos:line="318" pos:column="68"/></literal></expr>)<pos:position pos:line="318" pos:column="69"/></condition><then pos:line="318" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="319" pos:column="25">die_errno<pos:position pos:line="319" pos:column="34"/></name><argument_list pos:line="319" pos:column="34">(<argument><expr><call><name pos:line="319" pos:column="35">_<pos:position pos:line="319" pos:column="36"/></name><argument_list pos:line="319" pos:column="36">(<argument><expr><literal type="string" pos:line="319" pos:column="37">"unable to read signature file '%s'"<pos:position pos:line="319" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="319" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="319" pos:column="76">signature_file<pos:position pos:line="319" pos:column="90"/></name></expr></argument>)<pos:position pos:line="319" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="92"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="320" pos:column="17">signature<pos:position pos:line="320" pos:column="26"/></name> <operator pos:line="320" pos:column="27">=<pos:position pos:line="320" pos:column="28"/></operator> <call><name pos:line="320" pos:column="29">strbuf_detach<pos:position pos:line="320" pos:column="42"/></name><argument_list pos:line="320" pos:column="42">(<argument><expr><operator pos:line="320" pos:column="43">&amp;<pos:position pos:line="320" pos:column="48"/></operator><name pos:line="320" pos:column="44">buf<pos:position pos:line="320" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="49">NULL<pos:position pos:line="320" pos:column="53"/></name></expr></argument>)<pos:position pos:line="320" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="321" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="323" pos:column="9">if <condition pos:line="323" pos:column="12">(<expr><name pos:line="323" pos:column="13">in_reply_to<pos:position pos:line="323" pos:column="24"/></name> <operator pos:line="323" pos:column="25">||<pos:position pos:line="323" pos:column="27"/></operator> <name pos:line="323" pos:column="28">thread<pos:position pos:line="323" pos:column="34"/></name> <operator pos:line="323" pos:column="35">||<pos:position pos:line="323" pos:column="37"/></operator> <name pos:line="323" pos:column="38">cover_letter<pos:position pos:line="323" pos:column="50"/></name></expr>)<pos:position pos:line="323" pos:column="51"/></condition><then pos:line="323" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="324" pos:column="17">rev<pos:position pos:line="324" pos:column="20"/></name><operator pos:line="324" pos:column="20">.<pos:position pos:line="324" pos:column="21"/></operator><name pos:line="324" pos:column="21">ref_message_ids<pos:position pos:line="324" pos:column="36"/></name></name> <operator pos:line="324" pos:column="37">=<pos:position pos:line="324" pos:column="38"/></operator> <call><name pos:line="324" pos:column="39">xcalloc<pos:position pos:line="324" pos:column="46"/></name><argument_list pos:line="324" pos:column="46">(<argument><expr><literal type="number" pos:line="324" pos:column="47">1<pos:position pos:line="324" pos:column="48"/></literal></expr></argument>, <argument><expr><sizeof pos:line="324" pos:column="50">sizeof<argument_list pos:line="324" pos:column="56">(<argument><expr pos:line="324" pos:column="57">struct <name pos:line="324" pos:column="64">string_list<pos:position pos:line="324" pos:column="75"/></name></expr></argument>)<pos:position pos:line="324" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="324" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="78"/></expr_stmt></block></then></if>
	<if pos:line="325" pos:column="9">if <condition pos:line="325" pos:column="12">(<expr><name pos:line="325" pos:column="13">in_reply_to<pos:position pos:line="325" pos:column="24"/></name></expr>)<pos:position pos:line="325" pos:column="25"/></condition><then pos:line="325" pos:column="25"> <block pos:line="325" pos:column="26">{
		<decl_stmt><decl><type><specifier pos:line="326" pos:column="17">const<pos:position pos:line="326" pos:column="22"/></specifier> <name pos:line="326" pos:column="23">char<pos:position pos:line="326" pos:column="27"/></name> <modifier pos:line="326" pos:column="28">*<pos:position pos:line="326" pos:column="29"/></modifier></type><name pos:line="326" pos:column="29">msgid<pos:position pos:line="326" pos:column="34"/></name> <init pos:line="326" pos:column="35">= <expr><call><name pos:line="326" pos:column="37">clean_message_id<pos:position pos:line="326" pos:column="53"/></name><argument_list pos:line="326" pos:column="53">(<argument><expr><name pos:line="326" pos:column="54">in_reply_to<pos:position pos:line="326" pos:column="65"/></name></expr></argument>)<pos:position pos:line="326" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="326" pos:column="67"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="327" pos:column="17">string_list_append<pos:position pos:line="327" pos:column="35"/></name><argument_list pos:line="327" pos:column="35">(<argument><expr><name><name pos:line="327" pos:column="36">rev<pos:position pos:line="327" pos:column="39"/></name><operator pos:line="327" pos:column="39">.<pos:position pos:line="327" pos:column="40"/></operator><name pos:line="327" pos:column="40">ref_message_ids<pos:position pos:line="327" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="57">msgid<pos:position pos:line="327" pos:column="62"/></name></expr></argument>)<pos:position pos:line="327" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="328" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="329" pos:column="9">rev<pos:position pos:line="329" pos:column="12"/></name><operator pos:line="329" pos:column="12">.<pos:position pos:line="329" pos:column="13"/></operator><name pos:line="329" pos:column="13">numbered_files<pos:position pos:line="329" pos:column="27"/></name></name> <operator pos:line="329" pos:column="28">=<pos:position pos:line="329" pos:column="29"/></operator> <name pos:line="329" pos:column="30">just_numbers<pos:position pos:line="329" pos:column="42"/></name></expr>;<pos:position pos:line="329" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="330" pos:column="9">rev<pos:position pos:line="330" pos:column="12"/></name><operator pos:line="330" pos:column="12">.<pos:position pos:line="330" pos:column="13"/></operator><name pos:line="330" pos:column="13">patch_suffix<pos:position pos:line="330" pos:column="25"/></name></name> <operator pos:line="330" pos:column="26">=<pos:position pos:line="330" pos:column="27"/></operator> <name pos:line="330" pos:column="28">fmt_patch_suffix<pos:position pos:line="330" pos:column="44"/></name></expr>;<pos:position pos:line="330" pos:column="45"/></expr_stmt>
	<if pos:line="331" pos:column="9">if <condition pos:line="331" pos:column="12">(<expr><name pos:line="331" pos:column="13">cover_letter<pos:position pos:line="331" pos:column="25"/></name></expr>)<pos:position pos:line="331" pos:column="26"/></condition><then pos:line="331" pos:column="26"> <block pos:line="331" pos:column="27">{
		<if pos:line="332" pos:column="17">if <condition pos:line="332" pos:column="20">(<expr><name pos:line="332" pos:column="21">thread<pos:position pos:line="332" pos:column="27"/></name></expr>)<pos:position pos:line="332" pos:column="28"/></condition><then pos:line="332" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="333" pos:column="25">gen_message_id<pos:position pos:line="333" pos:column="39"/></name><argument_list pos:line="333" pos:column="39">(<argument><expr><operator pos:line="333" pos:column="40">&amp;<pos:position pos:line="333" pos:column="45"/></operator><name pos:line="333" pos:column="41">rev<pos:position pos:line="333" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="46">"cover"<pos:position pos:line="333" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="55"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="334" pos:column="17">make_cover_letter<pos:position pos:line="334" pos:column="34"/></name><argument_list pos:line="334" pos:column="34">(<argument><expr><operator pos:line="334" pos:column="35">&amp;<pos:position pos:line="334" pos:column="40"/></operator><name pos:line="334" pos:column="36">rev<pos:position pos:line="334" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="41">use_stdout<pos:position pos:line="334" pos:column="51"/></name></expr></argument>,
				  <argument><expr><name pos:line="335" pos:column="35">origin<pos:position pos:line="335" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="43">nr<pos:position pos:line="335" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="47">list<pos:position pos:line="335" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="53">branch_name<pos:position pos:line="335" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="66">quiet<pos:position pos:line="335" pos:column="71"/></name></expr></argument>)<pos:position pos:line="335" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name pos:line="336" pos:column="17">total<pos:position pos:line="336" pos:column="22"/></name><operator pos:line="336" pos:column="22">++<pos:position pos:line="336" pos:column="24"/></operator></expr>;<pos:position pos:line="336" pos:column="25"/></expr_stmt>
		<expr_stmt><expr><name pos:line="337" pos:column="17">start_number<pos:position pos:line="337" pos:column="29"/></name><operator pos:line="337" pos:column="29">--<pos:position pos:line="337" pos:column="31"/></operator></expr>;<pos:position pos:line="337" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="338" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="339" pos:column="9">rev<pos:position pos:line="339" pos:column="12"/></name><operator pos:line="339" pos:column="12">.<pos:position pos:line="339" pos:column="13"/></operator><name pos:line="339" pos:column="13">add_signoff<pos:position pos:line="339" pos:column="24"/></name></name> <operator pos:line="339" pos:column="25">=<pos:position pos:line="339" pos:column="26"/></operator> <name pos:line="339" pos:column="27">do_signoff<pos:position pos:line="339" pos:column="37"/></name></expr>;<pos:position pos:line="339" pos:column="38"/></expr_stmt>
	<while pos:line="340" pos:column="9">while <condition pos:line="340" pos:column="15">(<expr><literal type="number" pos:line="340" pos:column="16">0<pos:position pos:line="340" pos:column="17"/></literal> <operator pos:line="340" pos:column="18">&lt;=<pos:position pos:line="340" pos:column="23"/></operator> <operator pos:line="340" pos:column="21">--<pos:position pos:line="340" pos:column="23"/></operator><name pos:line="340" pos:column="23">nr<pos:position pos:line="340" pos:column="25"/></name></expr>)<pos:position pos:line="340" pos:column="26"/></condition> <block pos:line="340" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="341" pos:column="17">int<pos:position pos:line="341" pos:column="20"/></name></type> <name pos:line="341" pos:column="21">shown<pos:position pos:line="341" pos:column="26"/></name></decl>;<pos:position pos:line="341" pos:column="27"/></decl_stmt>
		<expr_stmt><expr><name pos:line="342" pos:column="17">commit<pos:position pos:line="342" pos:column="23"/></name> <operator pos:line="342" pos:column="24">=<pos:position pos:line="342" pos:column="25"/></operator> <name><name pos:line="342" pos:column="26">list<pos:position pos:line="342" pos:column="30"/></name><index pos:line="342" pos:column="30">[<expr><name pos:line="342" pos:column="31">nr<pos:position pos:line="342" pos:column="33"/></name></expr>]<pos:position pos:line="342" pos:column="34"/></index></name></expr>;<pos:position pos:line="342" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="343" pos:column="17">rev<pos:position pos:line="343" pos:column="20"/></name><operator pos:line="343" pos:column="20">.<pos:position pos:line="343" pos:column="21"/></operator><name pos:line="343" pos:column="21">nr<pos:position pos:line="343" pos:column="23"/></name></name> <operator pos:line="343" pos:column="24">=<pos:position pos:line="343" pos:column="25"/></operator> <name pos:line="343" pos:column="26">total<pos:position pos:line="343" pos:column="31"/></name> <operator pos:line="343" pos:column="32">-<pos:position pos:line="343" pos:column="33"/></operator> <name pos:line="343" pos:column="34">nr<pos:position pos:line="343" pos:column="36"/></name> <operator pos:line="343" pos:column="37">+<pos:position pos:line="343" pos:column="38"/></operator> <operator pos:line="343" pos:column="39">(<pos:position pos:line="343" pos:column="40"/></operator><name pos:line="343" pos:column="40">start_number<pos:position pos:line="343" pos:column="52"/></name> <operator pos:line="343" pos:column="53">-<pos:position pos:line="343" pos:column="54"/></operator> <literal type="number" pos:line="343" pos:column="55">1<pos:position pos:line="343" pos:column="56"/></literal><operator pos:line="343" pos:column="56">)<pos:position pos:line="343" pos:column="57"/></operator></expr>;<pos:position pos:line="343" pos:column="58"/></expr_stmt>
		<comment type="block" pos:line="344" pos:column="17">/* Make the second and subsequent mails replies to the first */</comment>
		<if pos:line="345" pos:column="17">if <condition pos:line="345" pos:column="20">(<expr><name pos:line="345" pos:column="21">thread<pos:position pos:line="345" pos:column="27"/></name></expr>)<pos:position pos:line="345" pos:column="28"/></condition><then pos:line="345" pos:column="28"> <block pos:line="345" pos:column="29">{
			<comment type="block" pos:line="346" pos:column="25">/* Have we already had a message ID? */</comment>
			<if pos:line="347" pos:column="25">if <condition pos:line="347" pos:column="28">(<expr><name><name pos:line="347" pos:column="29">rev<pos:position pos:line="347" pos:column="32"/></name><operator pos:line="347" pos:column="32">.<pos:position pos:line="347" pos:column="33"/></operator><name pos:line="347" pos:column="33">message_id<pos:position pos:line="347" pos:column="43"/></name></name></expr>)<pos:position pos:line="347" pos:column="44"/></condition><then pos:line="347" pos:column="44"> <block pos:line="347" pos:column="45">{
				<comment type="block" pos:line="348" pos:column="33">/*
				 * For deep threading: make every mail
				 * a reply to the previous one, no
				 * matter what other options are set.
				 *
				 * For shallow threading:
				 *
				 * Without --cover-letter and
				 * --in-reply-to, make every mail a
				 * reply to the one before.
				 *
				 * With --in-reply-to but no
				 * --cover-letter, make every mail a
				 * reply to the &lt;reply-to&gt;.
				 *
				 * With --cover-letter, make every
				 * mail but the cover letter a reply
				 * to the cover letter.  The cover
				 * letter is a reply to the
				 * --in-reply-to, if specified.
				 */</comment>
				<if pos:line="369" pos:column="33">if <condition pos:line="369" pos:column="36">(<expr><name pos:line="369" pos:column="37">thread<pos:position pos:line="369" pos:column="43"/></name> <operator pos:line="369" pos:column="44">==<pos:position pos:line="369" pos:column="46"/></operator> <name pos:line="369" pos:column="47">THREAD_SHALLOW<pos:position pos:line="369" pos:column="61"/></name>
				    <operator pos:line="370" pos:column="37">&amp;&amp;<pos:position pos:line="370" pos:column="47"/></operator> <name><name pos:line="370" pos:column="40">rev<pos:position pos:line="370" pos:column="43"/></name><operator pos:line="370" pos:column="43">.<pos:position pos:line="370" pos:column="44"/></operator><name pos:line="370" pos:column="44">ref_message_ids<pos:position pos:line="370" pos:column="59"/></name><operator pos:line="370" pos:column="59">-&gt;<pos:position pos:line="370" pos:column="64"/></operator><name pos:line="370" pos:column="61">nr<pos:position pos:line="370" pos:column="63"/></name></name> <operator pos:line="370" pos:column="64">&gt;<pos:position pos:line="370" pos:column="68"/></operator> <literal type="number" pos:line="370" pos:column="66">0<pos:position pos:line="370" pos:column="67"/></literal>
				    <operator pos:line="371" pos:column="37">&amp;&amp;<pos:position pos:line="371" pos:column="47"/></operator> <operator pos:line="371" pos:column="40">(<pos:position pos:line="371" pos:column="41"/></operator><operator pos:line="371" pos:column="41">!<pos:position pos:line="371" pos:column="42"/></operator><name pos:line="371" pos:column="42">cover_letter<pos:position pos:line="371" pos:column="54"/></name> <operator pos:line="371" pos:column="55">||<pos:position pos:line="371" pos:column="57"/></operator> <name><name pos:line="371" pos:column="58">rev<pos:position pos:line="371" pos:column="61"/></name><operator pos:line="371" pos:column="61">.<pos:position pos:line="371" pos:column="62"/></operator><name pos:line="371" pos:column="62">nr<pos:position pos:line="371" pos:column="64"/></name></name> <operator pos:line="371" pos:column="65">&gt;<pos:position pos:line="371" pos:column="69"/></operator> <literal type="number" pos:line="371" pos:column="67">1<pos:position pos:line="371" pos:column="68"/></literal><operator pos:line="371" pos:column="68">)<pos:position pos:line="371" pos:column="69"/></operator></expr>)<pos:position pos:line="371" pos:column="70"/></condition><then pos:line="371" pos:column="70">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="372" pos:column="41">free<pos:position pos:line="372" pos:column="45"/></name><argument_list pos:line="372" pos:column="45">(<argument><expr><name><name pos:line="372" pos:column="46">rev<pos:position pos:line="372" pos:column="49"/></name><operator pos:line="372" pos:column="49">.<pos:position pos:line="372" pos:column="50"/></operator><name pos:line="372" pos:column="50">message_id<pos:position pos:line="372" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="372" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="62"/></expr_stmt></block></then>
				<else pos:line="373" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="374" pos:column="41">string_list_append<pos:position pos:line="374" pos:column="59"/></name><argument_list pos:line="374" pos:column="59">(<argument><expr><name><name pos:line="374" pos:column="60">rev<pos:position pos:line="374" pos:column="63"/></name><operator pos:line="374" pos:column="63">.<pos:position pos:line="374" pos:column="64"/></operator><name pos:line="374" pos:column="64">ref_message_ids<pos:position pos:line="374" pos:column="79"/></name></name></expr></argument>,
							   <argument><expr><name><name pos:line="375" pos:column="60">rev<pos:position pos:line="375" pos:column="63"/></name><operator pos:line="375" pos:column="63">.<pos:position pos:line="375" pos:column="64"/></operator><name pos:line="375" pos:column="64">message_id<pos:position pos:line="375" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="375" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="76"/></expr_stmt></block></else></if>
			}<pos:position pos:line="376" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="377" pos:column="25">gen_message_id<pos:position pos:line="377" pos:column="39"/></name><argument_list pos:line="377" pos:column="39">(<argument><expr><operator pos:line="377" pos:column="40">&amp;<pos:position pos:line="377" pos:column="45"/></operator><name pos:line="377" pos:column="41">rev<pos:position pos:line="377" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="377" pos:column="46">oid_to_hex<pos:position pos:line="377" pos:column="56"/></name><argument_list pos:line="377" pos:column="56">(<argument><expr><operator pos:line="377" pos:column="57">&amp;<pos:position pos:line="377" pos:column="62"/></operator><name><name pos:line="377" pos:column="58">commit<pos:position pos:line="377" pos:column="64"/></name><operator pos:line="377" pos:column="64">-&gt;<pos:position pos:line="377" pos:column="69"/></operator><name pos:line="377" pos:column="66">object<pos:position pos:line="377" pos:column="72"/></name><operator pos:line="377" pos:column="72">.<pos:position pos:line="377" pos:column="73"/></operator><name pos:line="377" pos:column="73">oid<pos:position pos:line="377" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="377" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="377" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="378" pos:column="18"/></block></then></if>

		<if pos:line="380" pos:column="17">if <condition pos:line="380" pos:column="20">(<expr><operator pos:line="380" pos:column="21">!<pos:position pos:line="380" pos:column="22"/></operator><name pos:line="380" pos:column="22">use_stdout<pos:position pos:line="380" pos:column="32"/></name> <operator pos:line="380" pos:column="33">&amp;&amp;<pos:position pos:line="380" pos:column="43"/></operator>
		    <call><name pos:line="381" pos:column="21">reopen_stdout<pos:position pos:line="381" pos:column="34"/></name><argument_list pos:line="381" pos:column="34">(<argument><expr><ternary><condition><expr><name><name pos:line="381" pos:column="35">rev<pos:position pos:line="381" pos:column="38"/></name><operator pos:line="381" pos:column="38">.<pos:position pos:line="381" pos:column="39"/></operator><name pos:line="381" pos:column="39">numbered_files<pos:position pos:line="381" pos:column="53"/></name></name></expr> ?<pos:position pos:line="381" pos:column="55"/></condition><then pos:line="381" pos:column="55"> <expr><name pos:line="381" pos:column="56">NULL<pos:position pos:line="381" pos:column="60"/></name></expr> <pos:position pos:line="381" pos:column="61"/></then><else pos:line="381" pos:column="61">: <expr><name pos:line="381" pos:column="63">commit<pos:position pos:line="381" pos:column="69"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="381" pos:column="71">NULL<pos:position pos:line="381" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="381" pos:column="77">&amp;<pos:position pos:line="381" pos:column="82"/></operator><name pos:line="381" pos:column="78">rev<pos:position pos:line="381" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="83">quiet<pos:position pos:line="381" pos:column="88"/></name></expr></argument>)<pos:position pos:line="381" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="381" pos:column="90"/></condition><then pos:line="381" pos:column="90">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="382" pos:column="25">die<pos:position pos:line="382" pos:column="28"/></name><argument_list pos:line="382" pos:column="28">(<argument><expr><call><name pos:line="382" pos:column="29">_<pos:position pos:line="382" pos:column="30"/></name><argument_list pos:line="382" pos:column="30">(<argument><expr><literal type="string" pos:line="382" pos:column="31">"Failed to create output files"<pos:position pos:line="382" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="382" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="382" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="65"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="383" pos:column="17">shown<pos:position pos:line="383" pos:column="22"/></name> <operator pos:line="383" pos:column="23">=<pos:position pos:line="383" pos:column="24"/></operator> <call><name pos:line="383" pos:column="25">log_tree_commit<pos:position pos:line="383" pos:column="40"/></name><argument_list pos:line="383" pos:column="40">(<argument><expr><operator pos:line="383" pos:column="41">&amp;<pos:position pos:line="383" pos:column="46"/></operator><name pos:line="383" pos:column="42">rev<pos:position pos:line="383" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="47">commit<pos:position pos:line="383" pos:column="53"/></name></expr></argument>)<pos:position pos:line="383" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="384" pos:column="17">free_commit_buffer<pos:position pos:line="384" pos:column="35"/></name><argument_list pos:line="384" pos:column="35">(<argument><expr><name pos:line="384" pos:column="36">commit<pos:position pos:line="384" pos:column="42"/></name></expr></argument>)<pos:position pos:line="384" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="44"/></expr_stmt>

		<comment type="block" pos:line="386" pos:column="17">/* We put one extra blank line between formatted
		 * patches and this flag is used by log-tree code
		 * to see if it needs to emit a LF before showing
		 * the log; when using one file per patch, we do
		 * not want the extra blank line.
		 */</comment>
		<if pos:line="392" pos:column="17">if <condition pos:line="392" pos:column="20">(<expr><operator pos:line="392" pos:column="21">!<pos:position pos:line="392" pos:column="22"/></operator><name pos:line="392" pos:column="22">use_stdout<pos:position pos:line="392" pos:column="32"/></name></expr>)<pos:position pos:line="392" pos:column="33"/></condition><then pos:line="392" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="393" pos:column="25">rev<pos:position pos:line="393" pos:column="28"/></name><operator pos:line="393" pos:column="28">.<pos:position pos:line="393" pos:column="29"/></operator><name pos:line="393" pos:column="29">shown_one<pos:position pos:line="393" pos:column="38"/></name></name> <operator pos:line="393" pos:column="39">=<pos:position pos:line="393" pos:column="40"/></operator> <literal type="number" pos:line="393" pos:column="41">0<pos:position pos:line="393" pos:column="42"/></literal></expr>;<pos:position pos:line="393" pos:column="43"/></expr_stmt></block></then></if>
		<if pos:line="394" pos:column="17">if <condition pos:line="394" pos:column="20">(<expr><name pos:line="394" pos:column="21">shown<pos:position pos:line="394" pos:column="26"/></name></expr>)<pos:position pos:line="394" pos:column="27"/></condition><then pos:line="394" pos:column="27"> <block pos:line="394" pos:column="28">{
			<if pos:line="395" pos:column="25">if <condition pos:line="395" pos:column="28">(<expr><name><name pos:line="395" pos:column="29">rev<pos:position pos:line="395" pos:column="32"/></name><operator pos:line="395" pos:column="32">.<pos:position pos:line="395" pos:column="33"/></operator><name pos:line="395" pos:column="33">mime_boundary<pos:position pos:line="395" pos:column="46"/></name></name></expr>)<pos:position pos:line="395" pos:column="47"/></condition><then pos:line="395" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="396" pos:column="33">printf<pos:position pos:line="396" pos:column="39"/></name><argument_list pos:line="396" pos:column="39">(<argument><expr><literal type="string" pos:line="396" pos:column="40">"\n--%s%s--\n\n\n"<pos:position pos:line="396" pos:column="58"/></literal></expr></argument>,
				       <argument><expr><name pos:line="397" pos:column="40">mime_boundary_leader<pos:position pos:line="397" pos:column="60"/></name></expr></argument>,
				       <argument><expr><name><name pos:line="398" pos:column="40">rev<pos:position pos:line="398" pos:column="43"/></name><operator pos:line="398" pos:column="43">.<pos:position pos:line="398" pos:column="44"/></operator><name pos:line="398" pos:column="44">mime_boundary<pos:position pos:line="398" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="398" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="59"/></expr_stmt></block></then>
			<else pos:line="399" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="400" pos:column="33">print_signature<pos:position pos:line="400" pos:column="48"/></name><argument_list pos:line="400" pos:column="48">()<pos:position pos:line="400" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="51"/></expr_stmt></block></else></if>
		}<pos:position pos:line="401" pos:column="18"/></block></then></if>
		<if pos:line="402" pos:column="17">if <condition pos:line="402" pos:column="20">(<expr><operator pos:line="402" pos:column="21">!<pos:position pos:line="402" pos:column="22"/></operator><name pos:line="402" pos:column="22">use_stdout<pos:position pos:line="402" pos:column="32"/></name></expr>)<pos:position pos:line="402" pos:column="33"/></condition><then pos:line="402" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="403" pos:column="25">fclose<pos:position pos:line="403" pos:column="31"/></name><argument_list pos:line="403" pos:column="31">(<argument><expr><name pos:line="403" pos:column="32">stdout<pos:position pos:line="403" pos:column="38"/></name></expr></argument>)<pos:position pos:line="403" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="404" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="405" pos:column="9">free<pos:position pos:line="405" pos:column="13"/></name><argument_list pos:line="405" pos:column="13">(<argument><expr><name pos:line="405" pos:column="14">list<pos:position pos:line="405" pos:column="18"/></name></expr></argument>)<pos:position pos:line="405" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="406" pos:column="9">free<pos:position pos:line="406" pos:column="13"/></name><argument_list pos:line="406" pos:column="13">(<argument><expr><name pos:line="406" pos:column="14">branch_name<pos:position pos:line="406" pos:column="25"/></name></expr></argument>)<pos:position pos:line="406" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="407" pos:column="9">string_list_clear<pos:position pos:line="407" pos:column="26"/></name><argument_list pos:line="407" pos:column="26">(<argument><expr><operator pos:line="407" pos:column="27">&amp;<pos:position pos:line="407" pos:column="32"/></operator><name pos:line="407" pos:column="28">extra_to<pos:position pos:line="407" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="407" pos:column="38">0<pos:position pos:line="407" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="407" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="408" pos:column="9">string_list_clear<pos:position pos:line="408" pos:column="26"/></name><argument_list pos:line="408" pos:column="26">(<argument><expr><operator pos:line="408" pos:column="27">&amp;<pos:position pos:line="408" pos:column="32"/></operator><name pos:line="408" pos:column="28">extra_cc<pos:position pos:line="408" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="408" pos:column="38">0<pos:position pos:line="408" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="408" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="409" pos:column="9">string_list_clear<pos:position pos:line="409" pos:column="26"/></name><argument_list pos:line="409" pos:column="26">(<argument><expr><operator pos:line="409" pos:column="27">&amp;<pos:position pos:line="409" pos:column="32"/></operator><name pos:line="409" pos:column="28">extra_hdr<pos:position pos:line="409" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="409" pos:column="39">0<pos:position pos:line="409" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="409" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="42"/></expr_stmt>
	<if pos:line="410" pos:column="9">if <condition pos:line="410" pos:column="12">(<expr><name pos:line="410" pos:column="13">ignore_if_in_upstream<pos:position pos:line="410" pos:column="34"/></name></expr>)<pos:position pos:line="410" pos:column="35"/></condition><then pos:line="410" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="411" pos:column="17">free_patch_ids<pos:position pos:line="411" pos:column="31"/></name><argument_list pos:line="411" pos:column="31">(<argument><expr><operator pos:line="411" pos:column="32">&amp;<pos:position pos:line="411" pos:column="37"/></operator><name pos:line="411" pos:column="33">ids<pos:position pos:line="411" pos:column="36"/></name></expr></argument>)<pos:position pos:line="411" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="38"/></expr_stmt></block></then></if>
	<return pos:line="412" pos:column="9">return <expr><literal type="number" pos:line="412" pos:column="16">0<pos:position pos:line="412" pos:column="17"/></literal></expr>;<pos:position pos:line="412" pos:column="18"/></return>
}<pos:position pos:line="413" pos:column="2"/></block></function></unit>

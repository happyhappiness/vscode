<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3033_git-2.8.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">bisect_next_all<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">prefix<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">no_checkout<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">revs<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">commit_list<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">tried<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">reaches<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">all<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="35">nr<pos:position pos:line="5" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="39">steps<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">unsigned<pos:position pos:line="6" pos:column="23"/></name> <name pos:line="6" pos:column="24">char<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">bisect_rev<pos:position pos:line="6" pos:column="40"/></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">read_bisect_terms<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="28">term_bad<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="38">&amp;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="39">term_good<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">read_bisect_refs<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">()<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">die<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"reading bisect refs failed"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">check_good_are_ancestors_of_bad<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">prefix<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">no_checkout<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">bisect_rev_setup<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="27">revs<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">prefix<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="41">"%s"<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="47">"^%s"<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="54">1<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">revs<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">limited<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">bisect_common<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><operator pos:line="17" pos:column="23">&amp;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="24">revs<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="19" pos:column="9">revs<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">commits<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name pos:line="19" pos:column="24">find_bisection<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name><name pos:line="19" pos:column="39">revs<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">.<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">commits<pos:position pos:line="19" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="53">&amp;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="54">reaches<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="63">&amp;<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="64">all<pos:position pos:line="19" pos:column="67"/></name></expr></argument>,
				       <argument><expr><operator pos:line="20" pos:column="40">!<pos:position pos:line="20" pos:column="41"/></operator><operator pos:line="20" pos:column="41">!<pos:position pos:line="20" pos:column="42"/></operator><name><name pos:line="20" pos:column="42">skipped_revs<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">.<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="55">nr<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">revs<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">.<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">commits<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">managed_skipped<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name><name pos:line="21" pos:column="40">revs<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">.<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="45">commits<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="54">&amp;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="55">tried<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">revs<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">commits<pos:position pos:line="23" pos:column="26"/></name></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
		<comment type="block" pos:line="24" pos:column="17">/*
		 * We should exit here only if the "bad"
		 * commit is also a "skip" commit.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">exit_if_skipped_commits<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">tried<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">NULL<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="30" pos:column="17">printf<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"%s was both %s and %s\n"<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>,
		       <argument><expr><call><name pos:line="31" pos:column="24">oid_to_hex<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">current_bad_oid<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr></argument>,
		       <argument><expr><name pos:line="32" pos:column="24">term_good<pos:position pos:line="32" pos:column="33"/></name></expr></argument>,
		       <argument><expr><name pos:line="33" pos:column="24">term_bad<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">exit<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><literal type="number" pos:line="34" pos:column="22">1<pos:position pos:line="34" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">all<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18"> <block pos:line="37" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">fprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">stderr<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"No testable commit found.\n"<pos:position pos:line="38" pos:column="62"/></literal>
			<literal type="string" pos:line="39" pos:column="25">"Maybe you started with bad path parameters?\n"<pos:position pos:line="39" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">exit<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><literal type="number" pos:line="40" pos:column="22">4<pos:position pos:line="40" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="43" pos:column="9">bisect_rev<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name><name pos:line="43" pos:column="22">revs<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">.<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="27">commits<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">item<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">object<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">.<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="49">oid<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">.<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="53">hash<pos:position pos:line="43" pos:column="57"/></name></name></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><call><name pos:line="45" pos:column="14">hashcmp<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">bisect_rev<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="34">current_bad_oid<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">-&gt;<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="51">hash<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="57"/></condition><then pos:line="45" pos:column="57"> <block pos:line="45" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">exit_if_skipped_commits<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">tried<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">current_bad_oid<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">printf<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><literal type="string" pos:line="47" pos:column="24">"%s is the first %s commit\n"<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="55">sha1_to_hex<pos:position pos:line="47" pos:column="66"/></name><argument_list pos:line="47" pos:column="66">(<argument><expr><name pos:line="47" pos:column="67">bisect_rev<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="48" pos:column="25">term_bad<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">show_diff_tree<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">prefix<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="40">revs<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">.<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="45">commits<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">-&gt;<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="54">item<pos:position pos:line="49" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
		<comment type="block" pos:line="50" pos:column="17">/* This means the bisection process succeeded. */</comment>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">exit<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><literal type="number" pos:line="51" pos:column="22">10<pos:position pos:line="51" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="54" pos:column="9">nr<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <name pos:line="54" pos:column="14">all<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">-<pos:position pos:line="54" pos:column="19"/></operator> <name pos:line="54" pos:column="20">reaches<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">-<pos:position pos:line="54" pos:column="29"/></operator> <literal type="number" pos:line="54" pos:column="30">1<pos:position pos:line="54" pos:column="31"/></literal></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="55" pos:column="9">steps<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">=<pos:position pos:line="55" pos:column="16"/></operator> <call><name pos:line="55" pos:column="17">estimate_bisect_steps<pos:position pos:line="55" pos:column="38"/></name><argument_list pos:line="55" pos:column="38">(<argument><expr><name pos:line="55" pos:column="39">all<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">printf<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><literal type="string" pos:line="56" pos:column="16">"Bisecting: %d revision%s left to test after this "<pos:position pos:line="56" pos:column="67"/></literal>
	       <literal type="string" pos:line="57" pos:column="16">"(roughly %d step%s)\n"<pos:position pos:line="57" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">nr<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="45">(<pos:position pos:line="57" pos:column="46"/></operator><ternary><condition><expr><name pos:line="57" pos:column="46">nr<pos:position pos:line="57" pos:column="48"/></name> <operator pos:line="57" pos:column="49">==<pos:position pos:line="57" pos:column="51"/></operator> <literal type="number" pos:line="57" pos:column="52">1<pos:position pos:line="57" pos:column="53"/></literal></expr> ?<pos:position pos:line="57" pos:column="55"/></condition><then pos:line="57" pos:column="55"> <expr><literal type="string" pos:line="57" pos:column="56">""<pos:position pos:line="57" pos:column="58"/></literal></expr> <pos:position pos:line="57" pos:column="59"/></then><else pos:line="57" pos:column="59">: <expr><literal type="string" pos:line="57" pos:column="61">"s"<pos:position pos:line="57" pos:column="64"/></literal></expr></else></ternary><operator pos:line="57" pos:column="64">)<pos:position pos:line="57" pos:column="65"/></operator></expr></argument>,
	       <argument><expr><name pos:line="58" pos:column="16">steps<pos:position pos:line="58" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="23">(<pos:position pos:line="58" pos:column="24"/></operator><ternary><condition><expr><name pos:line="58" pos:column="24">steps<pos:position pos:line="58" pos:column="29"/></name> <operator pos:line="58" pos:column="30">==<pos:position pos:line="58" pos:column="32"/></operator> <literal type="number" pos:line="58" pos:column="33">1<pos:position pos:line="58" pos:column="34"/></literal></expr> ?<pos:position pos:line="58" pos:column="36"/></condition><then pos:line="58" pos:column="36"> <expr><literal type="string" pos:line="58" pos:column="37">""<pos:position pos:line="58" pos:column="39"/></literal></expr> <pos:position pos:line="58" pos:column="40"/></then><else pos:line="58" pos:column="40">: <expr><literal type="string" pos:line="58" pos:column="42">"s"<pos:position pos:line="58" pos:column="45"/></literal></expr></else></ternary><operator pos:line="58" pos:column="45">)<pos:position pos:line="58" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>

	<return pos:line="60" pos:column="9">return <expr><call><name pos:line="60" pos:column="16">bisect_checkout<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><name pos:line="60" pos:column="32">bisect_rev<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="44">no_checkout<pos:position pos:line="60" pos:column="55"/></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

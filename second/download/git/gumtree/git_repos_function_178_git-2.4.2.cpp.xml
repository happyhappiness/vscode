<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_178_git-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_combined_header<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">combine_diff_path<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">elem<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">num_parent<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="3" pos:column="34">int<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">dense<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>,
				 <parameter><decl><type><name><name pos:line="4" pos:column="34">struct<pos:position pos:line="4" pos:column="40"/></name> <name pos:line="4" pos:column="41">rev_info<pos:position pos:line="4" pos:column="49"/></name></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">rev<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
				 <parameter><decl><type><specifier pos:line="5" pos:column="34">const<pos:position pos:line="5" pos:column="39"/></specifier> <name pos:line="5" pos:column="40">char<pos:position pos:line="5" pos:column="44"/></name> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">line_prefix<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="6" pos:column="34">int<pos:position pos:line="6" pos:column="37"/></name></type> <name pos:line="6" pos:column="38">mode_differs<pos:position pos:line="6" pos:column="50"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="7" pos:column="34">int<pos:position pos:line="7" pos:column="37"/></name></type> <name pos:line="7" pos:column="38">show_file_header<pos:position pos:line="7" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="55"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">diff_options<pos:position pos:line="9" pos:column="28"/></name></name> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier></type><name pos:line="9" pos:column="30">opt<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><operator pos:line="9" pos:column="36">&amp;<pos:position pos:line="9" pos:column="41"/></operator><name><name pos:line="9" pos:column="37">rev<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">diffopt<pos:position pos:line="9" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">abbrev<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><ternary><condition><expr><call><name pos:line="10" pos:column="22">DIFF_OPT_TST<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">opt<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">FULL_INDEX<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr> ?<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53"> <expr><literal type="number" pos:line="10" pos:column="54">40<pos:position pos:line="10" pos:column="56"/></literal></expr> <pos:position pos:line="10" pos:column="57"/></then><else pos:line="10" pos:column="57">: <expr><name pos:line="10" pos:column="59">DEFAULT_ABBREV<pos:position pos:line="10" pos:column="73"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="10" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">a_prefix<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><ternary><condition><expr><name><name pos:line="11" pos:column="32">opt<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">a_prefix<pos:position pos:line="11" pos:column="45"/></name></name></expr> ?<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47"> <expr><name><name pos:line="11" pos:column="48">opt<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">a_prefix<pos:position pos:line="11" pos:column="61"/></name></name></expr> <pos:position pos:line="11" pos:column="62"/></then><else pos:line="11" pos:column="62">: <expr><literal type="string" pos:line="11" pos:column="64">"a/"<pos:position pos:line="11" pos:column="68"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">b_prefix<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><ternary><condition><expr><name><name pos:line="12" pos:column="32">opt<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">b_prefix<pos:position pos:line="12" pos:column="45"/></name></name></expr> ?<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47"> <expr><name><name pos:line="12" pos:column="48">opt<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">-&gt;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="53">b_prefix<pos:position pos:line="12" pos:column="61"/></name></name></expr> <pos:position pos:line="12" pos:column="62"/></then><else pos:line="12" pos:column="62">: <expr><literal type="string" pos:line="12" pos:column="64">"b/"<pos:position pos:line="12" pos:column="68"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="12" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">c_meta<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><call><name pos:line="13" pos:column="30">diff_get_color_opt<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">opt<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">DIFF_METAINFO<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">c_reset<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><call><name pos:line="14" pos:column="31">diff_get_color_opt<pos:position pos:line="14" pos:column="49"/></name><argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">opt<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">DIFF_RESET<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">abb<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">added<pos:position pos:line="16" pos:column="18"/></name> <init pos:line="16" pos:column="19">= <expr><literal type="number" pos:line="16" pos:column="21">0<pos:position pos:line="16" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">deleted<pos:position pos:line="17" pos:column="20"/></name> <init pos:line="17" pos:column="21">= <expr><literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">i<pos:position pos:line="18" pos:column="14"/></name></decl>;<pos:position pos:line="18" pos:column="15"/></decl_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">rev<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">loginfo<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">&amp;&amp;<pos:position pos:line="20" pos:column="36"/></operator> <operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><name><name pos:line="20" pos:column="30">rev<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">no_commit_id<pos:position pos:line="20" pos:column="47"/></name></name></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">show_log<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">rev<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">dump_quoted_path<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><ternary><condition><expr><name pos:line="23" pos:column="26">dense<pos:position pos:line="23" pos:column="31"/></name></expr> ?<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33"> <expr><literal type="string" pos:line="23" pos:column="34">"diff --cc "<pos:position pos:line="23" pos:column="46"/></literal></expr> <pos:position pos:line="23" pos:column="47"/></then><else pos:line="23" pos:column="47">: <expr><literal type="string" pos:line="23" pos:column="49">"diff --combined "<pos:position pos:line="23" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
			 <argument><expr><literal type="string" pos:line="24" pos:column="26">""<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="30">elem<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">path<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">line_prefix<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">c_meta<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="63">c_reset<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">printf<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="string" pos:line="25" pos:column="16">"%s%sindex "<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">line_prefix<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">c_meta<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="25">num_parent<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></condition> <incr><expr><name pos:line="26" pos:column="37">i<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">++<pos:position pos:line="26" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="41"/></control> <block pos:line="26" pos:column="42">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">abb<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">find_unique_abbrev<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name><name pos:line="27" pos:column="42">elem<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">parent<pos:position pos:line="27" pos:column="54"/></name><index pos:line="27" pos:column="54">[<expr><name pos:line="27" pos:column="55">i<pos:position pos:line="27" pos:column="56"/></name></expr>]<pos:position pos:line="27" pos:column="57"/></index></name><operator pos:line="27" pos:column="57">.<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">sha1<pos:position pos:line="27" pos:column="62"/></name></expr></argument>,
					 <argument><expr><name pos:line="28" pos:column="42">abbrev<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">printf<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="string" pos:line="29" pos:column="24">"%s%s"<pos:position pos:line="29" pos:column="30"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="29" pos:column="32">i<pos:position pos:line="29" pos:column="33"/></name></expr> ?<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <expr><literal type="string" pos:line="29" pos:column="36">","<pos:position pos:line="29" pos:column="39"/></literal></expr> <pos:position pos:line="29" pos:column="40"/></then><else pos:line="29" pos:column="40">: <expr><literal type="string" pos:line="29" pos:column="42">""<pos:position pos:line="29" pos:column="44"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">abb<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="31" pos:column="9">abb<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">find_unique_abbrev<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name><name pos:line="31" pos:column="34">elem<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">sha1<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">abbrev<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">printf<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="string" pos:line="32" pos:column="16">"..%s%s\n"<pos:position pos:line="32" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="28">abb<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">c_reset<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">mode_differs<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26"> <block pos:line="34" pos:column="27">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">deleted<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">!<pos:position pos:line="35" pos:column="28"/></operator><name><name pos:line="35" pos:column="28">elem<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">mode<pos:position pos:line="35" pos:column="38"/></name></name></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>

		<comment type="block" pos:line="37" pos:column="17">/* We say it was added if nobody had it */</comment>
		<expr_stmt><expr><name pos:line="38" pos:column="17">added<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <operator pos:line="38" pos:column="25">!<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">deleted<pos:position pos:line="38" pos:column="33"/></name></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>
		<for pos:line="39" pos:column="17">for <control pos:line="39" pos:column="21">(<init><expr><name pos:line="39" pos:column="22">i<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></init> <condition><expr><name pos:line="39" pos:column="29">added<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">&amp;&amp;<pos:position pos:line="39" pos:column="45"/></operator> <name pos:line="39" pos:column="38">i<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">&lt;<pos:position pos:line="39" pos:column="44"/></operator> <name pos:line="39" pos:column="42">num_parent<pos:position pos:line="39" pos:column="52"/></name></expr>;<pos:position pos:line="39" pos:column="53"/></condition> <incr><expr><name pos:line="39" pos:column="54">i<pos:position pos:line="39" pos:column="55"/></name><operator pos:line="39" pos:column="55">++<pos:position pos:line="39" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="58"/></control>
			<block type="pseudo"><if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name><name pos:line="40" pos:column="29">elem<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">parent<pos:position pos:line="40" pos:column="41"/></name><index pos:line="40" pos:column="41">[<expr><name pos:line="40" pos:column="42">i<pos:position pos:line="40" pos:column="43"/></name></expr>]<pos:position pos:line="40" pos:column="44"/></index></name><operator pos:line="40" pos:column="44">.<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="45">status<pos:position pos:line="40" pos:column="51"/></name> <operator pos:line="40" pos:column="52">!=<pos:position pos:line="40" pos:column="54"/></operator>
			    <name pos:line="41" pos:column="29">DIFF_STATUS_ADDED<pos:position pos:line="41" pos:column="46"/></name></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47">
				<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="33">added<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">=<pos:position pos:line="42" pos:column="40"/></operator> <literal type="number" pos:line="42" pos:column="41">0<pos:position pos:line="42" pos:column="42"/></literal></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt></block></then></if></block></for>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">added<pos:position pos:line="43" pos:column="26"/></name></expr>)<pos:position pos:line="43" pos:column="27"/></condition><then pos:line="43" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">printf<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><literal type="string" pos:line="44" pos:column="32">"%s%snew file mode %06o"<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>,
			       <argument><expr><name pos:line="45" pos:column="32">line_prefix<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">c_meta<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="53">elem<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">-&gt;<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="59">mode<pos:position pos:line="45" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt></block></then>
		<else pos:line="46" pos:column="17">else <block pos:line="46" pos:column="22">{
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><name pos:line="47" pos:column="29">deleted<pos:position pos:line="47" pos:column="36"/></name></expr>)<pos:position pos:line="47" pos:column="37"/></condition><then pos:line="47" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="33">printf<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><literal type="string" pos:line="48" pos:column="40">"%s%sdeleted file "<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>,
				       <argument><expr><name pos:line="49" pos:column="40">line_prefix<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">c_meta<pos:position pos:line="49" pos:column="59"/></name></expr></argument>)<pos:position pos:line="49" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">printf<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><literal type="string" pos:line="50" pos:column="32">"mode "<pos:position pos:line="50" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
			<for pos:line="51" pos:column="25">for <control pos:line="51" pos:column="29">(<init><expr><name pos:line="51" pos:column="30">i<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">=<pos:position pos:line="51" pos:column="33"/></operator> <literal type="number" pos:line="51" pos:column="34">0<pos:position pos:line="51" pos:column="35"/></literal></expr>;<pos:position pos:line="51" pos:column="36"/></init> <condition><expr><name pos:line="51" pos:column="37">i<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">&lt;<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="41">num_parent<pos:position pos:line="51" pos:column="51"/></name></expr>;<pos:position pos:line="51" pos:column="52"/></condition> <incr><expr><name pos:line="51" pos:column="53">i<pos:position pos:line="51" pos:column="54"/></name><operator pos:line="51" pos:column="54">++<pos:position pos:line="51" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="57"/></control> <block pos:line="51" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="52" pos:column="33">printf<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><literal type="string" pos:line="52" pos:column="40">"%s%06o"<pos:position pos:line="52" pos:column="48"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="52" pos:column="50">i<pos:position pos:line="52" pos:column="51"/></name></expr> ?<pos:position pos:line="52" pos:column="53"/></condition><then pos:line="52" pos:column="53"> <expr><literal type="string" pos:line="52" pos:column="54">","<pos:position pos:line="52" pos:column="57"/></literal></expr> <pos:position pos:line="52" pos:column="58"/></then><else pos:line="52" pos:column="58">: <expr><literal type="string" pos:line="52" pos:column="60">""<pos:position pos:line="52" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
				       <argument><expr><name><name pos:line="53" pos:column="40">elem<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">-&gt;<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="46">parent<pos:position pos:line="53" pos:column="52"/></name><index pos:line="53" pos:column="52">[<expr><name pos:line="53" pos:column="53">i<pos:position pos:line="53" pos:column="54"/></name></expr>]<pos:position pos:line="53" pos:column="55"/></index></name><operator pos:line="53" pos:column="55">.<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="56">mode<pos:position pos:line="53" pos:column="60"/></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="54" pos:column="26"/></block></for>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name><name pos:line="55" pos:column="29">elem<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">mode<pos:position pos:line="55" pos:column="39"/></name></name></expr>)<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">printf<pos:position pos:line="56" pos:column="39"/></name><argument_list pos:line="56" pos:column="39">(<argument><expr><literal type="string" pos:line="56" pos:column="40">"..%06o"<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="50">elem<pos:position pos:line="56" pos:column="54"/></name><operator pos:line="56" pos:column="54">-&gt;<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="56">mode<pos:position pos:line="56" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt></block></then></if>
		}<pos:position pos:line="57" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">printf<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><literal type="string" pos:line="58" pos:column="24">"%s\n"<pos:position pos:line="58" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">c_reset<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">show_file_header<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition><then pos:line="61" pos:column="31">
		<block type="pseudo"><return pos:line="62" pos:column="17">return;<pos:position pos:line="62" pos:column="24"/></return></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">added<pos:position pos:line="64" pos:column="18"/></name></expr>)<pos:position pos:line="64" pos:column="19"/></condition><then pos:line="64" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">dump_quoted_path<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><literal type="string" pos:line="65" pos:column="34">"--- "<pos:position pos:line="65" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="42">""<pos:position pos:line="65" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="46">"/dev/null"<pos:position pos:line="65" pos:column="57"/></literal></expr></argument>,
				 <argument><expr><name pos:line="66" pos:column="34">line_prefix<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">c_meta<pos:position pos:line="66" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="55">c_reset<pos:position pos:line="66" pos:column="62"/></name></expr></argument>)<pos:position pos:line="66" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="64"/></expr_stmt></block></then>
	<else pos:line="67" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="17">dump_quoted_path<pos:position pos:line="68" pos:column="33"/></name><argument_list pos:line="68" pos:column="33">(<argument><expr><literal type="string" pos:line="68" pos:column="34">"--- "<pos:position pos:line="68" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="42">a_prefix<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="52">elem<pos:position pos:line="68" pos:column="56"/></name><operator pos:line="68" pos:column="56">-&gt;<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="58">path<pos:position pos:line="68" pos:column="62"/></name></name></expr></argument>,
				 <argument><expr><name pos:line="69" pos:column="34">line_prefix<pos:position pos:line="69" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="47">c_meta<pos:position pos:line="69" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="55">c_reset<pos:position pos:line="69" pos:column="62"/></name></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="64"/></expr_stmt></block></else></if>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">deleted<pos:position pos:line="70" pos:column="20"/></name></expr>)<pos:position pos:line="70" pos:column="21"/></condition><then pos:line="70" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="17">dump_quoted_path<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><literal type="string" pos:line="71" pos:column="34">"+++ "<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">""<pos:position pos:line="71" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="46">"/dev/null"<pos:position pos:line="71" pos:column="57"/></literal></expr></argument>,
				 <argument><expr><name pos:line="72" pos:column="34">line_prefix<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">c_meta<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="55">c_reset<pos:position pos:line="72" pos:column="62"/></name></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="64"/></expr_stmt></block></then>
	<else pos:line="73" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="17">dump_quoted_path<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><literal type="string" pos:line="74" pos:column="34">"+++ "<pos:position pos:line="74" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="42">b_prefix<pos:position pos:line="74" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="52">elem<pos:position pos:line="74" pos:column="56"/></name><operator pos:line="74" pos:column="56">-&gt;<pos:position pos:line="74" pos:column="61"/></operator><name pos:line="74" pos:column="58">path<pos:position pos:line="74" pos:column="62"/></name></name></expr></argument>,
				 <argument><expr><name pos:line="75" pos:column="34">line_prefix<pos:position pos:line="75" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="47">c_meta<pos:position pos:line="75" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="55">c_reset<pos:position pos:line="75" pos:column="62"/></name></expr></argument>)<pos:position pos:line="75" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="64"/></expr_stmt></block></else></if>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4671_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_pathspec_matches_against_index<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">pathspec<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">pathspec<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
					<parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name><name pos:line="2" pos:column="47">struct<pos:position pos:line="2" pos:column="53"/></name> <name pos:line="2" pos:column="54">index_state<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">istate<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
					<parameter><decl><type><name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">seen<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">num_unmatched<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="32">i<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/*
	 * Since we are walking the index as if we were walking the directory,
	 * we have to mark the matched pathspec as seen; otherwise we will
	 * mistakenly think that the user gave a pathspec that did not match
	 * anything.
	 */</comment>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="25">pathspec<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">nr<pos:position pos:line="13" pos:column="37"/></name></name></expr>;<pos:position pos:line="13" pos:column="38"/></condition> <incr><expr><name pos:line="13" pos:column="39">i<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">++<pos:position pos:line="13" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="43"/></control>
		<block type="pseudo"><if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name><name pos:line="14" pos:column="22">seen<pos:position pos:line="14" pos:column="26"/></name><index pos:line="14" pos:column="26">[<expr><name pos:line="14" pos:column="27">i<pos:position pos:line="14" pos:column="28"/></name></expr>]<pos:position pos:line="14" pos:column="29"/></index></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">num_unmatched<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">++<pos:position pos:line="15" pos:column="40"/></operator></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt></block></then></if></block></for>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">num_unmatched<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
		<block type="pseudo"><return pos:line="17" pos:column="17">return;<pos:position pos:line="17" pos:column="24"/></return></block></then></if>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">istate<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">cache_nr<pos:position pos:line="18" pos:column="41"/></name></name></expr>;<pos:position pos:line="18" pos:column="42"/></condition> <incr><expr><name pos:line="18" pos:column="43">i<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">++<pos:position pos:line="18" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="47"/></control> <block pos:line="18" pos:column="48">{
		<decl_stmt><decl><type><specifier pos:line="19" pos:column="17">const<pos:position pos:line="19" pos:column="22"/></specifier> <name><name pos:line="19" pos:column="23">struct<pos:position pos:line="19" pos:column="29"/></name> <name pos:line="19" pos:column="30">cache_entry<pos:position pos:line="19" pos:column="41"/></name></name> <modifier pos:line="19" pos:column="42">*<pos:position pos:line="19" pos:column="43"/></modifier></type><name pos:line="19" pos:column="43">ce<pos:position pos:line="19" pos:column="45"/></name> <init pos:line="19" pos:column="46">= <expr><name><name pos:line="19" pos:column="48">istate<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">cache<pos:position pos:line="19" pos:column="61"/></name><index pos:line="19" pos:column="61">[<expr><name pos:line="19" pos:column="62">i<pos:position pos:line="19" pos:column="63"/></name></expr>]<pos:position pos:line="19" pos:column="64"/></index></name></expr></init></decl>;<pos:position pos:line="19" pos:column="65"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">ce_path_match<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">ce<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">pathspec<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">seen<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></for>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2142.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">fsck_set_msg_type<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">fsck_options<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">options<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">msg_id<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">msg_type<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">id<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name pos:line="4" pos:column="18">parse_msg_id<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">(<argument><expr><name pos:line="4" pos:column="31">msg_id<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="40">type<pos:position pos:line="4" pos:column="44"/></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">id<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&lt;<pos:position pos:line="6" pos:column="20"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">die<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="string" pos:line="7" pos:column="21">"Unhandled message id: %s"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="49">msg_id<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="8" pos:column="9">type<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">parse_msg_type<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">msg_type<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">type<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">!=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">FSCK_ERROR<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&amp;&amp;<pos:position pos:line="10" pos:column="42"/></operator> <name><name pos:line="10" pos:column="35">msg_id_info<pos:position pos:line="10" pos:column="46"/></name><index pos:line="10" pos:column="46">[<expr><name pos:line="10" pos:column="47">id<pos:position pos:line="10" pos:column="49"/></name></expr>]<pos:position pos:line="10" pos:column="50"/></index></name><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">msg_type<pos:position pos:line="10" pos:column="59"/></name> <operator pos:line="10" pos:column="60">==<pos:position pos:line="10" pos:column="62"/></operator> <name pos:line="10" pos:column="63">FSCK_FATAL<pos:position pos:line="10" pos:column="73"/></name></expr>)<pos:position pos:line="10" pos:column="74"/></condition><then pos:line="10" pos:column="74">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">die<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><literal type="string" pos:line="11" pos:column="21">"Cannot demote %s to %s"<pos:position pos:line="11" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">msg_id<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">msg_type<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">options<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">msg_type<pos:position pos:line="13" pos:column="31"/></name></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block pos:line="13" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">int<pos:position pos:line="15" pos:column="20"/></name> <modifier pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></modifier></type><name pos:line="15" pos:column="22">msg_type<pos:position pos:line="15" pos:column="30"/></name> <init pos:line="15" pos:column="31">= <expr><call><name pos:line="15" pos:column="33">xmalloc<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><sizeof pos:line="15" pos:column="41">sizeof<argument_list pos:line="15" pos:column="47">(<argument><expr><name pos:line="15" pos:column="48">int<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></sizeof> <operator pos:line="15" pos:column="53">*<pos:position pos:line="15" pos:column="54"/></operator> <name pos:line="15" pos:column="55">FSCK_MSG_MAX<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="69"/></decl_stmt>
		<for pos:line="16" pos:column="17">for <control pos:line="16" pos:column="21">(<init><expr><name pos:line="16" pos:column="22">i<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></init> <condition><expr><name pos:line="16" pos:column="29">i<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">&lt;<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="33">FSCK_MSG_MAX<pos:position pos:line="16" pos:column="45"/></name></expr>;<pos:position pos:line="16" pos:column="46"/></condition> <incr><expr><name pos:line="16" pos:column="47">i<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">++<pos:position pos:line="16" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="51"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="25">msg_type<pos:position pos:line="17" pos:column="33"/></name><index pos:line="17" pos:column="33">[<expr><name pos:line="17" pos:column="34">i<pos:position pos:line="17" pos:column="35"/></name></expr>]<pos:position pos:line="17" pos:column="36"/></index></name> <operator pos:line="17" pos:column="37">=<pos:position pos:line="17" pos:column="38"/></operator> <call><name pos:line="17" pos:column="39">fsck_msg_type<pos:position pos:line="17" pos:column="52"/></name><argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">i<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">options<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt></block></for>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">options<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">msg_type<pos:position pos:line="18" pos:column="34"/></name></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">msg_type<pos:position pos:line="18" pos:column="45"/></name></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="21" pos:column="9">options<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">msg_type<pos:position pos:line="21" pos:column="26"/></name><index pos:line="21" pos:column="26">[<expr><name pos:line="21" pos:column="27">id<pos:position pos:line="21" pos:column="29"/></name></expr>]<pos:position pos:line="21" pos:column="30"/></index></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">type<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

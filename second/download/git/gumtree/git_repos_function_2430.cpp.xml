<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2430.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_all<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">trailer_item<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">first<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">trim_empty<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">trailer_item<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">item<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><expr><name pos:line="4" pos:column="14">item<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">=<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">first<pos:position pos:line="4" pos:column="26"/></name></expr>;<pos:position pos:line="4" pos:column="27"/></init> <condition><expr><name pos:line="4" pos:column="28">item<pos:position pos:line="4" pos:column="32"/></name></expr>;<pos:position pos:line="4" pos:column="33"/></condition> <incr><expr><name pos:line="4" pos:column="34">item<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">=<pos:position pos:line="4" pos:column="40"/></operator> <name><name pos:line="4" pos:column="41">item<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">next<pos:position pos:line="4" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="52"/></control> <block pos:line="4" pos:column="53">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><operator pos:line="5" pos:column="21">!<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">trim_empty<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">||<pos:position pos:line="5" pos:column="35"/></operator> <call><name pos:line="5" pos:column="36">strlen<pos:position pos:line="5" pos:column="42"/></name><argument_list pos:line="5" pos:column="42">(<argument><expr><name><name pos:line="5" pos:column="43">item<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">value<pos:position pos:line="5" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call> <operator pos:line="5" pos:column="56">&gt;<pos:position pos:line="5" pos:column="60"/></operator> <literal type="number" pos:line="5" pos:column="58">0<pos:position pos:line="5" pos:column="59"/></literal></expr>)<pos:position pos:line="5" pos:column="60"/></condition><then pos:line="5" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="25">print_tok_val<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name><name pos:line="6" pos:column="39">item<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">token<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="52">item<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">-&gt;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="58">value<pos:position pos:line="6" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="65"/></expr_stmt></block></then></if>
	}<pos:position pos:line="7" pos:column="10"/></block></for>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2632_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">set_option<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">name<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name pos:line="3" pos:column="14">strcmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="27">"verbosity"<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="40"/></condition><then pos:line="3" pos:column="40"> <block pos:line="3" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">end<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">int<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">v<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name pos:line="5" pos:column="25">strtol<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><name pos:line="5" pos:column="32">value<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="40">end<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="45">10<pos:position pos:line="5" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name pos:line="6" pos:column="21">value<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">==<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">end<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">||<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">end<pos:position pos:line="6" pos:column="41"/></name></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42">
			<block type="pseudo"><return pos:line="7" pos:column="25">return <expr><operator pos:line="7" pos:column="32">-<pos:position pos:line="7" pos:column="33"/></operator><literal type="number" pos:line="7" pos:column="33">1<pos:position pos:line="7" pos:column="34"/></literal></expr>;<pos:position pos:line="7" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">options<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">.<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">verbosity<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">v<pos:position pos:line="8" pos:column="38"/></name></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
		<return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><operator pos:line="11" pos:column="18">!<pos:position pos:line="11" pos:column="19"/></operator><call><name pos:line="11" pos:column="19">strcmp<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">name<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"progress"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <block pos:line="11" pos:column="45">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">strcmp<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">value<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="36">"true"<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="25">options<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">progress<pos:position pos:line="13" pos:column="41"/></name></name> <operator pos:line="13" pos:column="42">=<pos:position pos:line="13" pos:column="43"/></operator> <literal type="number" pos:line="13" pos:column="44">1<pos:position pos:line="13" pos:column="45"/></literal></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></then>
		<elseif pos:line="14" pos:column="17">else <if pos:line="14" pos:column="22">if <condition pos:line="14" pos:column="25">(<expr><operator pos:line="14" pos:column="26">!<pos:position pos:line="14" pos:column="27"/></operator><call><name pos:line="14" pos:column="27">strcmp<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">value<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="41">"false"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="50"/></condition><then pos:line="14" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="25">options<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">.<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">progress<pos:position pos:line="15" pos:column="41"/></name></name> <operator pos:line="15" pos:column="42">=<pos:position pos:line="15" pos:column="43"/></operator> <literal type="number" pos:line="15" pos:column="44">0<pos:position pos:line="15" pos:column="45"/></literal></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt></block></then></if></elseif>
		<else pos:line="16" pos:column="17">else
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">-<pos:position pos:line="17" pos:column="33"/></operator><literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></return></block></else></if>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><operator pos:line="20" pos:column="18">!<pos:position pos:line="20" pos:column="19"/></operator><call><name pos:line="20" pos:column="19">strcmp<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">name<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"depth"<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">char<pos:position pos:line="21" pos:column="21"/></name> <modifier pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></modifier></type><name pos:line="21" pos:column="23">end<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">unsigned<pos:position pos:line="22" pos:column="25"/></name> <name pos:line="22" pos:column="26">long<pos:position pos:line="22" pos:column="30"/></name></type> <name pos:line="22" pos:column="31">v<pos:position pos:line="22" pos:column="32"/></name> <init pos:line="22" pos:column="33">= <expr><call><name pos:line="22" pos:column="35">strtoul<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">value<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="50">&amp;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="51">end<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="56">10<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="60"/></decl_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">value<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">end<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">||<pos:position pos:line="23" pos:column="36"/></operator> <operator pos:line="23" pos:column="37">*<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">end<pos:position pos:line="23" pos:column="41"/></name></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42">
			<block type="pseudo"><return pos:line="24" pos:column="25">return <expr><operator pos:line="24" pos:column="32">-<pos:position pos:line="24" pos:column="33"/></operator><literal type="number" pos:line="24" pos:column="33">1<pos:position pos:line="24" pos:column="34"/></literal></expr>;<pos:position pos:line="24" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">options<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">depth<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">v<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>;<pos:position pos:line="26" pos:column="26"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="28" pos:column="9">else <if pos:line="28" pos:column="14">if <condition pos:line="28" pos:column="17">(<expr><operator pos:line="28" pos:column="18">!<pos:position pos:line="28" pos:column="19"/></operator><call><name pos:line="28" pos:column="19">strcmp<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">name<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="32">"followtags"<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="46"/></condition><then pos:line="28" pos:column="46"> <block pos:line="28" pos:column="47">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">strcmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">value<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="36">"true"<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="25">options<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">.<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">followtags<pos:position pos:line="30" pos:column="43"/></name></name> <operator pos:line="30" pos:column="44">=<pos:position pos:line="30" pos:column="45"/></operator> <literal type="number" pos:line="30" pos:column="46">1<pos:position pos:line="30" pos:column="47"/></literal></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt></block></then>
		<elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><operator pos:line="31" pos:column="26">!<pos:position pos:line="31" pos:column="27"/></operator><call><name pos:line="31" pos:column="27">strcmp<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">value<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="41">"false"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="25">options<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">followtags<pos:position pos:line="32" pos:column="43"/></name></name> <operator pos:line="32" pos:column="44">=<pos:position pos:line="32" pos:column="45"/></operator> <literal type="number" pos:line="32" pos:column="46">0<pos:position pos:line="32" pos:column="47"/></literal></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt></block></then></if></elseif>
		<else pos:line="33" pos:column="17">else
			<block type="pseudo"><return pos:line="34" pos:column="25">return <expr><operator pos:line="34" pos:column="32">-<pos:position pos:line="34" pos:column="33"/></operator><literal type="number" pos:line="34" pos:column="33">1<pos:position pos:line="34" pos:column="34"/></literal></expr>;<pos:position pos:line="34" pos:column="35"/></return></block></else></if>
		<return pos:line="35" pos:column="17">return <expr><literal type="number" pos:line="35" pos:column="24">0<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">strcmp<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">name<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="32">"dry-run"<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="43"/></condition><then pos:line="37" pos:column="43"> <block pos:line="37" pos:column="44">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><call><name pos:line="38" pos:column="22">strcmp<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">value<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="36">"true"<pos:position pos:line="38" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="25">options<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">.<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">dry_run<pos:position pos:line="39" pos:column="40"/></name></name> <operator pos:line="39" pos:column="41">=<pos:position pos:line="39" pos:column="42"/></operator> <literal type="number" pos:line="39" pos:column="43">1<pos:position pos:line="39" pos:column="44"/></literal></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt></block></then>
		<elseif pos:line="40" pos:column="17">else <if pos:line="40" pos:column="22">if <condition pos:line="40" pos:column="25">(<expr><operator pos:line="40" pos:column="26">!<pos:position pos:line="40" pos:column="27"/></operator><call><name pos:line="40" pos:column="27">strcmp<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">value<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="41">"false"<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="50"/></condition><then pos:line="40" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="25">options<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">.<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">dry_run<pos:position pos:line="41" pos:column="40"/></name></name> <operator pos:line="41" pos:column="41">=<pos:position pos:line="41" pos:column="42"/></operator> <literal type="number" pos:line="41" pos:column="43">0<pos:position pos:line="41" pos:column="44"/></literal></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<else pos:line="42" pos:column="17">else
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><operator pos:line="43" pos:column="32">-<pos:position pos:line="43" pos:column="33"/></operator><literal type="number" pos:line="43" pos:column="33">1<pos:position pos:line="43" pos:column="34"/></literal></expr>;<pos:position pos:line="43" pos:column="35"/></return></block></else></if>
		<return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="46" pos:column="9">else <if pos:line="46" pos:column="14">if <condition pos:line="46" pos:column="17">(<expr><operator pos:line="46" pos:column="18">!<pos:position pos:line="46" pos:column="19"/></operator><call><name pos:line="46" pos:column="19">strcmp<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">name<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="32">"check-connectivity"<pos:position pos:line="46" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54"> <block pos:line="46" pos:column="55">{
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">!<pos:position pos:line="47" pos:column="22"/></operator><call><name pos:line="47" pos:column="22">strcmp<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">value<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="36">"true"<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="44"/></condition><then pos:line="47" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="25">options<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">.<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">check_self_contained_and_connected<pos:position pos:line="48" pos:column="67"/></name></name> <operator pos:line="48" pos:column="68">=<pos:position pos:line="48" pos:column="69"/></operator> <literal type="number" pos:line="48" pos:column="70">1<pos:position pos:line="48" pos:column="71"/></literal></expr>;<pos:position pos:line="48" pos:column="72"/></expr_stmt></block></then>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><operator pos:line="49" pos:column="26">!<pos:position pos:line="49" pos:column="27"/></operator><call><name pos:line="49" pos:column="27">strcmp<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">value<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="41">"false"<pos:position pos:line="49" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="50"/></condition><then pos:line="49" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="25">options<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">.<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="33">check_self_contained_and_connected<pos:position pos:line="50" pos:column="67"/></name></name> <operator pos:line="50" pos:column="68">=<pos:position pos:line="50" pos:column="69"/></operator> <literal type="number" pos:line="50" pos:column="70">0<pos:position pos:line="50" pos:column="71"/></literal></expr>;<pos:position pos:line="50" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<else pos:line="51" pos:column="17">else
			<block type="pseudo"><return pos:line="52" pos:column="25">return <expr><operator pos:line="52" pos:column="32">-<pos:position pos:line="52" pos:column="33"/></operator><literal type="number" pos:line="52" pos:column="33">1<pos:position pos:line="52" pos:column="34"/></literal></expr>;<pos:position pos:line="52" pos:column="35"/></return></block></else></if>
		<return pos:line="53" pos:column="17">return <expr><literal type="number" pos:line="53" pos:column="24">0<pos:position pos:line="53" pos:column="25"/></literal></expr>;<pos:position pos:line="53" pos:column="26"/></return>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="55" pos:column="9">else <if pos:line="55" pos:column="14">if <condition pos:line="55" pos:column="17">(<expr><operator pos:line="55" pos:column="18">!<pos:position pos:line="55" pos:column="19"/></operator><call><name pos:line="55" pos:column="19">strcmp<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">name<pos:position pos:line="55" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="32">"cas"<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39"> <block pos:line="55" pos:column="40">{
		<decl_stmt><decl><type><name><name pos:line="56" pos:column="17">struct<pos:position pos:line="56" pos:column="23"/></name> <name pos:line="56" pos:column="24">strbuf<pos:position pos:line="56" pos:column="30"/></name></name></type> <name pos:line="56" pos:column="31">val<pos:position pos:line="56" pos:column="34"/></name> <init pos:line="56" pos:column="35">= <expr><name pos:line="56" pos:column="37">STRBUF_INIT<pos:position pos:line="56" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="56" pos:column="49"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">strbuf_addf<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><operator pos:line="57" pos:column="29">&amp;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="30">val<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="35">"--"<pos:position pos:line="57" pos:column="39"/></literal> <name pos:line="57" pos:column="40">CAS_OPT_NAME<pos:position pos:line="57" pos:column="52"/></name> <literal type="string" pos:line="57" pos:column="53">"=%s"<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="60">value<pos:position pos:line="57" pos:column="65"/></name></expr></argument>)<pos:position pos:line="57" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">string_list_append<pos:position pos:line="58" pos:column="35"/></name><argument_list pos:line="58" pos:column="35">(<argument><expr><operator pos:line="58" pos:column="36">&amp;<pos:position pos:line="58" pos:column="41"/></operator><name pos:line="58" pos:column="37">cas_options<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="50">val<pos:position pos:line="58" pos:column="53"/></name><operator pos:line="58" pos:column="53">.<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="54">buf<pos:position pos:line="58" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">strbuf_release<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><operator pos:line="59" pos:column="32">&amp;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="33">val<pos:position pos:line="59" pos:column="36"/></name></expr></argument>)<pos:position pos:line="59" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="38"/></expr_stmt>
		<return pos:line="60" pos:column="17">return <expr><literal type="number" pos:line="60" pos:column="24">0<pos:position pos:line="60" pos:column="25"/></literal></expr>;<pos:position pos:line="60" pos:column="26"/></return>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if></elseif> <elseif pos:line="61" pos:column="11">else <if pos:line="61" pos:column="16">if <condition pos:line="61" pos:column="19">(<expr><operator pos:line="61" pos:column="20">!<pos:position pos:line="61" pos:column="21"/></operator><call><name pos:line="61" pos:column="21">strcmp<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">name<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="34">"cloning"<pos:position pos:line="61" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="45"/></condition><then pos:line="61" pos:column="45"> <block pos:line="61" pos:column="46">{
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">!<pos:position pos:line="62" pos:column="22"/></operator><call><name pos:line="62" pos:column="22">strcmp<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">value<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="36">"true"<pos:position pos:line="62" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="44"/></condition><then pos:line="62" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="25">options<pos:position pos:line="63" pos:column="32"/></name><operator pos:line="63" pos:column="32">.<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="33">cloning<pos:position pos:line="63" pos:column="40"/></name></name> <operator pos:line="63" pos:column="41">=<pos:position pos:line="63" pos:column="42"/></operator> <literal type="number" pos:line="63" pos:column="43">1<pos:position pos:line="63" pos:column="44"/></literal></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt></block></then>
		<elseif pos:line="64" pos:column="17">else <if pos:line="64" pos:column="22">if <condition pos:line="64" pos:column="25">(<expr><operator pos:line="64" pos:column="26">!<pos:position pos:line="64" pos:column="27"/></operator><call><name pos:line="64" pos:column="27">strcmp<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">value<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="41">"false"<pos:position pos:line="64" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="50"/></condition><then pos:line="64" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="25">options<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">cloning<pos:position pos:line="65" pos:column="40"/></name></name> <operator pos:line="65" pos:column="41">=<pos:position pos:line="65" pos:column="42"/></operator> <literal type="number" pos:line="65" pos:column="43">0<pos:position pos:line="65" pos:column="44"/></literal></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<else pos:line="66" pos:column="17">else
			<block type="pseudo"><return pos:line="67" pos:column="25">return <expr><operator pos:line="67" pos:column="32">-<pos:position pos:line="67" pos:column="33"/></operator><literal type="number" pos:line="67" pos:column="33">1<pos:position pos:line="67" pos:column="34"/></literal></expr>;<pos:position pos:line="67" pos:column="35"/></return></block></else></if>
		<return pos:line="68" pos:column="17">return <expr><literal type="number" pos:line="68" pos:column="24">0<pos:position pos:line="68" pos:column="25"/></literal></expr>;<pos:position pos:line="68" pos:column="26"/></return>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if></elseif> <elseif pos:line="69" pos:column="11">else <if pos:line="69" pos:column="16">if <condition pos:line="69" pos:column="19">(<expr><operator pos:line="69" pos:column="20">!<pos:position pos:line="69" pos:column="21"/></operator><call><name pos:line="69" pos:column="21">strcmp<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name pos:line="69" pos:column="28">name<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="34">"update-shallow"<pos:position pos:line="69" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="52"/></condition><then pos:line="69" pos:column="52"> <block pos:line="69" pos:column="53">{
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><call><name pos:line="70" pos:column="22">strcmp<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">value<pos:position pos:line="70" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="36">"true"<pos:position pos:line="70" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="44"/></condition><then pos:line="70" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="25">options<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">.<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="33">update_shallow<pos:position pos:line="71" pos:column="47"/></name></name> <operator pos:line="71" pos:column="48">=<pos:position pos:line="71" pos:column="49"/></operator> <literal type="number" pos:line="71" pos:column="50">1<pos:position pos:line="71" pos:column="51"/></literal></expr>;<pos:position pos:line="71" pos:column="52"/></expr_stmt></block></then>
		<elseif pos:line="72" pos:column="17">else <if pos:line="72" pos:column="22">if <condition pos:line="72" pos:column="25">(<expr><operator pos:line="72" pos:column="26">!<pos:position pos:line="72" pos:column="27"/></operator><call><name pos:line="72" pos:column="27">strcmp<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">(<argument><expr><name pos:line="72" pos:column="34">value<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="41">"false"<pos:position pos:line="72" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="50"/></condition><then pos:line="72" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="25">options<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">.<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">update_shallow<pos:position pos:line="73" pos:column="47"/></name></name> <operator pos:line="73" pos:column="48">=<pos:position pos:line="73" pos:column="49"/></operator> <literal type="number" pos:line="73" pos:column="50">0<pos:position pos:line="73" pos:column="51"/></literal></expr>;<pos:position pos:line="73" pos:column="52"/></expr_stmt></block></then></if></elseif>
		<else pos:line="74" pos:column="17">else
			<block type="pseudo"><return pos:line="75" pos:column="25">return <expr><operator pos:line="75" pos:column="32">-<pos:position pos:line="75" pos:column="33"/></operator><literal type="number" pos:line="75" pos:column="33">1<pos:position pos:line="75" pos:column="34"/></literal></expr>;<pos:position pos:line="75" pos:column="35"/></return></block></else></if>
		<return pos:line="76" pos:column="17">return <expr><literal type="number" pos:line="76" pos:column="24">0<pos:position pos:line="76" pos:column="25"/></literal></expr>;<pos:position pos:line="76" pos:column="26"/></return>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if></elseif> <elseif pos:line="77" pos:column="11">else <if pos:line="77" pos:column="16">if <condition pos:line="77" pos:column="19">(<expr><operator pos:line="77" pos:column="20">!<pos:position pos:line="77" pos:column="21"/></operator><call><name pos:line="77" pos:column="21">strcmp<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">name<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="34">"pushcert"<pos:position pos:line="77" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="46"/></condition><then pos:line="77" pos:column="46"> <block pos:line="77" pos:column="47">{
		<if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><operator pos:line="78" pos:column="21">!<pos:position pos:line="78" pos:column="22"/></operator><call><name pos:line="78" pos:column="22">strcmp<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">value<pos:position pos:line="78" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="36">"true"<pos:position pos:line="78" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="44"/></condition><then pos:line="78" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="25">options<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">.<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="33">push_cert<pos:position pos:line="79" pos:column="42"/></name></name> <operator pos:line="79" pos:column="43">=<pos:position pos:line="79" pos:column="44"/></operator> <name pos:line="79" pos:column="45">SEND_PACK_PUSH_CERT_ALWAYS<pos:position pos:line="79" pos:column="71"/></name></expr>;<pos:position pos:line="79" pos:column="72"/></expr_stmt></block></then>
		<elseif pos:line="80" pos:column="17">else <if pos:line="80" pos:column="22">if <condition pos:line="80" pos:column="25">(<expr><operator pos:line="80" pos:column="26">!<pos:position pos:line="80" pos:column="27"/></operator><call><name pos:line="80" pos:column="27">strcmp<pos:position pos:line="80" pos:column="33"/></name><argument_list pos:line="80" pos:column="33">(<argument><expr><name pos:line="80" pos:column="34">value<pos:position pos:line="80" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="41">"false"<pos:position pos:line="80" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="50"/></condition><then pos:line="80" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="25">options<pos:position pos:line="81" pos:column="32"/></name><operator pos:line="81" pos:column="32">.<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="33">push_cert<pos:position pos:line="81" pos:column="42"/></name></name> <operator pos:line="81" pos:column="43">=<pos:position pos:line="81" pos:column="44"/></operator> <name pos:line="81" pos:column="45">SEND_PACK_PUSH_CERT_NEVER<pos:position pos:line="81" pos:column="70"/></name></expr>;<pos:position pos:line="81" pos:column="71"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="82" pos:column="17">else <if pos:line="82" pos:column="22">if <condition pos:line="82" pos:column="25">(<expr><operator pos:line="82" pos:column="26">!<pos:position pos:line="82" pos:column="27"/></operator><call><name pos:line="82" pos:column="27">strcmp<pos:position pos:line="82" pos:column="33"/></name><argument_list pos:line="82" pos:column="33">(<argument><expr><name pos:line="82" pos:column="34">value<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="41">"if-asked"<pos:position pos:line="82" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="53"/></condition><then pos:line="82" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="83" pos:column="25">options<pos:position pos:line="83" pos:column="32"/></name><operator pos:line="83" pos:column="32">.<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="33">push_cert<pos:position pos:line="83" pos:column="42"/></name></name> <operator pos:line="83" pos:column="43">=<pos:position pos:line="83" pos:column="44"/></operator> <name pos:line="83" pos:column="45">SEND_PACK_PUSH_CERT_IF_ASKED<pos:position pos:line="83" pos:column="73"/></name></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt></block></then></if></elseif>
		<else pos:line="84" pos:column="17">else
			<block type="pseudo"><return pos:line="85" pos:column="25">return <expr><operator pos:line="85" pos:column="32">-<pos:position pos:line="85" pos:column="33"/></operator><literal type="number" pos:line="85" pos:column="33">1<pos:position pos:line="85" pos:column="34"/></literal></expr>;<pos:position pos:line="85" pos:column="35"/></return></block></else></if>
		<return pos:line="86" pos:column="17">return <expr><literal type="number" pos:line="86" pos:column="24">0<pos:position pos:line="86" pos:column="25"/></literal></expr>;<pos:position pos:line="86" pos:column="26"/></return>

<cpp:if pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">if<pos:position pos:line="88" pos:column="4"/></cpp:directive> <expr><name pos:line="88" pos:column="5">LIBCURL_VERSION_NUM<pos:position pos:line="88" pos:column="24"/></name> <operator pos:line="88" pos:column="25">&gt;=<pos:position pos:line="88" pos:column="30"/></operator> <literal type="number" pos:line="88" pos:column="28">0x070a08<pos:position pos:line="88" pos:column="36"/></literal></expr></cpp:if>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if></elseif> <elseif pos:line="89" pos:column="11">else <if pos:line="89" pos:column="16">if <condition pos:line="89" pos:column="19">(<expr><operator pos:line="89" pos:column="20">!<pos:position pos:line="89" pos:column="21"/></operator><call><name pos:line="89" pos:column="21">strcmp<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><name pos:line="89" pos:column="28">name<pos:position pos:line="89" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="34">"family"<pos:position pos:line="89" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="44"/></condition><then pos:line="89" pos:column="44"> <block pos:line="89" pos:column="45">{
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><operator pos:line="90" pos:column="21">!<pos:position pos:line="90" pos:column="22"/></operator><call><name pos:line="90" pos:column="22">strcmp<pos:position pos:line="90" pos:column="28"/></name><argument_list pos:line="90" pos:column="28">(<argument><expr><name pos:line="90" pos:column="29">value<pos:position pos:line="90" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="36">"ipv4"<pos:position pos:line="90" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="44"/></condition><then pos:line="90" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="25">git_curl_ipresolve<pos:position pos:line="91" pos:column="43"/></name> <operator pos:line="91" pos:column="44">=<pos:position pos:line="91" pos:column="45"/></operator> <name pos:line="91" pos:column="46">CURL_IPRESOLVE_V4<pos:position pos:line="91" pos:column="63"/></name></expr>;<pos:position pos:line="91" pos:column="64"/></expr_stmt></block></then>
		<elseif pos:line="92" pos:column="17">else <if pos:line="92" pos:column="22">if <condition pos:line="92" pos:column="25">(<expr><operator pos:line="92" pos:column="26">!<pos:position pos:line="92" pos:column="27"/></operator><call><name pos:line="92" pos:column="27">strcmp<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">(<argument><expr><name pos:line="92" pos:column="34">value<pos:position pos:line="92" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="41">"ipv6"<pos:position pos:line="92" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="49"/></condition><then pos:line="92" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="25">git_curl_ipresolve<pos:position pos:line="93" pos:column="43"/></name> <operator pos:line="93" pos:column="44">=<pos:position pos:line="93" pos:column="45"/></operator> <name pos:line="93" pos:column="46">CURL_IPRESOLVE_V6<pos:position pos:line="93" pos:column="63"/></name></expr>;<pos:position pos:line="93" pos:column="64"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="94" pos:column="17">else <if pos:line="94" pos:column="22">if <condition pos:line="94" pos:column="25">(<expr><operator pos:line="94" pos:column="26">!<pos:position pos:line="94" pos:column="27"/></operator><call><name pos:line="94" pos:column="27">strcmp<pos:position pos:line="94" pos:column="33"/></name><argument_list pos:line="94" pos:column="33">(<argument><expr><name pos:line="94" pos:column="34">value<pos:position pos:line="94" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="41">"all"<pos:position pos:line="94" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="48"/></condition><then pos:line="94" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="25">git_curl_ipresolve<pos:position pos:line="95" pos:column="43"/></name> <operator pos:line="95" pos:column="44">=<pos:position pos:line="95" pos:column="45"/></operator> <name pos:line="95" pos:column="46">CURL_IPRESOLVE_WHATEVER<pos:position pos:line="95" pos:column="69"/></name></expr>;<pos:position pos:line="95" pos:column="70"/></expr_stmt></block></then></if></elseif>
		<else pos:line="96" pos:column="17">else
			<block type="pseudo"><return pos:line="97" pos:column="25">return <expr><operator pos:line="97" pos:column="32">-<pos:position pos:line="97" pos:column="33"/></operator><literal type="number" pos:line="97" pos:column="33">1<pos:position pos:line="97" pos:column="34"/></literal></expr>;<pos:position pos:line="97" pos:column="35"/></return></block></else></if>
		<return pos:line="98" pos:column="17">return <expr><literal type="number" pos:line="98" pos:column="24">0<pos:position pos:line="98" pos:column="25"/></literal></expr>;<pos:position pos:line="98" pos:column="26"/></return>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif<pos:position pos:line="99" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="99" pos:column="8">/* LIBCURL_VERSION_NUM &gt;= 0x070a08 */</comment>
	}<pos:position pos:line="100" pos:column="10"/></block></then></if></elseif> <else pos:line="100" pos:column="11">else <block pos:line="100" pos:column="16">{
		<return pos:line="101" pos:column="17">return <expr><literal type="number" pos:line="101" pos:column="24">1<pos:position pos:line="101" pos:column="25"/></literal></expr> <comment type="block" pos:line="101" pos:column="26">/* unsupported */</comment>;<pos:position pos:line="101" pos:column="44"/></return>
	}<pos:position pos:line="102" pos:column="10"/></block></else></if>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

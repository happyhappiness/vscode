<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6000_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_object_details<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">object_entry<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier><modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">sorted_by_offset<pos:position pos:line="4" pos:column="47"/></name></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">sorted_by_offset<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <call><name pos:line="6" pos:column="28">xcalloc<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name><name pos:line="6" pos:column="36">to_pack<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">.<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">nr_objects<pos:position pos:line="6" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="56">sizeof<argument_list pos:line="6" pos:column="62">(<argument><expr pos:line="6" pos:column="63">struct <name pos:line="6" pos:column="70">object_entry<pos:position pos:line="6" pos:column="82"/></name> <operator pos:line="6" pos:column="83">*<pos:position pos:line="6" pos:column="84"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="87"/></expr_stmt>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">to_pack<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">nr_objects<pos:position pos:line="7" pos:column="43"/></name></name></expr>;<pos:position pos:line="7" pos:column="44"/></condition> <incr><expr><name pos:line="7" pos:column="45">i<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">++<pos:position pos:line="7" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="49"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="17">sorted_by_offset<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">i<pos:position pos:line="8" pos:column="35"/></name></expr>]<pos:position pos:line="8" pos:column="36"/></index></name> <operator pos:line="8" pos:column="37">=<pos:position pos:line="8" pos:column="38"/></operator> <name><name pos:line="8" pos:column="39">to_pack<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">objects<pos:position pos:line="8" pos:column="54"/></name></name> <operator pos:line="8" pos:column="55">+<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="57">i<pos:position pos:line="8" pos:column="58"/></name></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">QSORT<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">sorted_by_offset<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="33">to_pack<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">.<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">nr_objects<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">pack_offset_sort<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">to_pack<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">nr_objects<pos:position pos:line="11" pos:column="43"/></name></name></expr>;<pos:position pos:line="11" pos:column="44"/></condition> <incr><expr><name pos:line="11" pos:column="45">i<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">++<pos:position pos:line="11" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="49"/></control> <block pos:line="11" pos:column="50">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">object_entry<pos:position pos:line="12" pos:column="36"/></name></name> <modifier pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></modifier></type><name pos:line="12" pos:column="38">entry<pos:position pos:line="12" pos:column="43"/></name> <init pos:line="12" pos:column="44">= <expr><name><name pos:line="12" pos:column="46">sorted_by_offset<pos:position pos:line="12" pos:column="62"/></name><index pos:line="12" pos:column="62">[<expr><name pos:line="12" pos:column="63">i<pos:position pos:line="12" pos:column="64"/></name></expr>]<pos:position pos:line="12" pos:column="65"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="66"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">check_object<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">entry<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">big_file_threshold<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">&lt;<pos:position pos:line="14" pos:column="44"/></operator> <name><name pos:line="14" pos:column="42">entry<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">size<pos:position pos:line="14" pos:column="53"/></name></name></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="25">entry<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">no_try_delta<pos:position pos:line="15" pos:column="44"/></name></name> <operator pos:line="15" pos:column="45">=<pos:position pos:line="15" pos:column="46"/></operator> <literal type="number" pos:line="15" pos:column="47">1<pos:position pos:line="15" pos:column="48"/></literal></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></for>

	<comment type="block" pos:line="18" pos:column="9">/*
	 * This must happen in a second pass, since we rely on the delta
	 * information for the whole list being completed.
	 */</comment>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="25">to_pack<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">nr_objects<pos:position pos:line="22" pos:column="43"/></name></name></expr>;<pos:position pos:line="22" pos:column="44"/></condition> <incr><expr><name pos:line="22" pos:column="45">i<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">++<pos:position pos:line="22" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="49"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">break_delta_chains<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><operator pos:line="23" pos:column="36">&amp;<pos:position pos:line="23" pos:column="41"/></operator><name><name pos:line="23" pos:column="37">to_pack<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">objects<pos:position pos:line="23" pos:column="52"/></name><index pos:line="23" pos:column="52">[<expr><name pos:line="23" pos:column="53">i<pos:position pos:line="23" pos:column="54"/></name></expr>]<pos:position pos:line="23" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><name pos:line="25" pos:column="14">sorted_by_offset<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

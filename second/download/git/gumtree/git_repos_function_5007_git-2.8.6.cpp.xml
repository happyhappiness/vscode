<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5007_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_pack_info<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">stat_only<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">baseobjects<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name pos:line="3" pos:column="30">nr_objects<pos:position pos:line="3" pos:column="40"/></name> <operator pos:line="3" pos:column="41">-<pos:position pos:line="3" pos:column="42"/></operator> <name pos:line="3" pos:column="43">nr_ref_deltas<pos:position pos:line="3" pos:column="56"/></name> <operator pos:line="3" pos:column="57">-<pos:position pos:line="3" pos:column="58"/></operator> <name pos:line="3" pos:column="59">nr_ofs_deltas<pos:position pos:line="3" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">long<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">chain_histogram<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name pos:line="4" pos:column="42">NULL<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">deepest_delta<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">chain_histogram<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">=<pos:position pos:line="7" pos:column="34"/></operator> <call><name pos:line="7" pos:column="35">xcalloc<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">deepest_delta<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr pos:line="7" pos:column="58">sizeof<operator pos:line="7" pos:column="64">(<pos:position pos:line="7" pos:column="65"/></operator><name pos:line="7" pos:column="65">unsigned<pos:position pos:line="7" pos:column="73"/></name> <name pos:line="7" pos:column="74">long<pos:position pos:line="7" pos:column="78"/></name><operator pos:line="7" pos:column="78">)<pos:position pos:line="7" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="81"/></expr_stmt></block></then></if>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">nr_objects<pos:position pos:line="9" pos:column="35"/></name></expr>;<pos:position pos:line="9" pos:column="36"/></condition> <incr><expr><name pos:line="9" pos:column="37">i<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">++<pos:position pos:line="9" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="41"/></control> <block pos:line="9" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="10" pos:column="17">struct<pos:position pos:line="10" pos:column="23"/></name> <name pos:line="10" pos:column="24">object_entry<pos:position pos:line="10" pos:column="36"/></name></name> <modifier pos:line="10" pos:column="37">*<pos:position pos:line="10" pos:column="38"/></modifier></type><name pos:line="10" pos:column="38">obj<pos:position pos:line="10" pos:column="41"/></name> <init pos:line="10" pos:column="42">= <expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name><name pos:line="10" pos:column="45">objects<pos:position pos:line="10" pos:column="52"/></name><index pos:line="10" pos:column="52">[<expr><name pos:line="10" pos:column="53">i<pos:position pos:line="10" pos:column="54"/></name></expr>]<pos:position pos:line="10" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>

		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">is_delta_type<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name><name pos:line="12" pos:column="35">obj<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">type<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="25">chain_histogram<pos:position pos:line="13" pos:column="40"/></name><index pos:line="13" pos:column="40">[<expr><name><name pos:line="13" pos:column="41">obj_stat<pos:position pos:line="13" pos:column="49"/></name><index pos:line="13" pos:column="49">[<expr><name pos:line="13" pos:column="50">i<pos:position pos:line="13" pos:column="51"/></name></expr>]<pos:position pos:line="13" pos:column="52"/></index></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">delta_depth<pos:position pos:line="13" pos:column="64"/></name> <operator pos:line="13" pos:column="65">-<pos:position pos:line="13" pos:column="66"/></operator> <literal type="number" pos:line="13" pos:column="67">1<pos:position pos:line="13" pos:column="68"/></literal></expr>]<pos:position pos:line="13" pos:column="69"/></index></name><operator pos:line="13" pos:column="69">++<pos:position pos:line="13" pos:column="71"/></operator></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">stat_only<pos:position pos:line="14" pos:column="30"/></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">printf<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"%s %-6s %lu %lu %"<pos:position pos:line="16" pos:column="43"/></literal><name pos:line="16" pos:column="43">PRIuMAX<pos:position pos:line="16" pos:column="50"/></name></expr></argument>,
		       <argument><expr><call><name pos:line="17" pos:column="24">sha1_to_hex<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name><name pos:line="17" pos:column="36">obj<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">idx<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">.<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">sha1<pos:position pos:line="17" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr></argument>,
		       <argument><expr><name><typename pos:line="18" pos:column="24">typename<pos:position pos:line="18" pos:column="32"/></typename></name><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name><name pos:line="18" pos:column="33">obj<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">real_type<pos:position pos:line="18" pos:column="47"/></name></name><operator pos:line="18" pos:column="47">)<pos:position pos:line="18" pos:column="48"/></operator></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="50">obj<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">size<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>,
		       <argument><expr><call pos:line="19" pos:column="24">(<name pos:line="19" pos:column="25">unsigned<pos:position pos:line="19" pos:column="33"/></name> <name pos:line="19" pos:column="34">long<pos:position pos:line="19" pos:column="38"/></name>)<argument_list pos:line="19" pos:column="39">(<argument><expr><name><name pos:line="19" pos:column="40">obj<pos:position pos:line="19" pos:column="43"/></name><index pos:line="19" pos:column="43">[<expr><literal type="number" pos:line="19" pos:column="44">1<pos:position pos:line="19" pos:column="45"/></literal></expr>]<pos:position pos:line="19" pos:column="46"/></index></name><operator pos:line="19" pos:column="46">.<pos:position pos:line="19" pos:column="47"/></operator><name><name pos:line="19" pos:column="47">idx<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">offset<pos:position pos:line="19" pos:column="57"/></name></name> <operator pos:line="19" pos:column="58">-<pos:position pos:line="19" pos:column="59"/></operator> <name><name pos:line="19" pos:column="60">obj<pos:position pos:line="19" pos:column="63"/></name><operator pos:line="19" pos:column="63">-&gt;<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="65">idx<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">.<pos:position pos:line="19" pos:column="69"/></operator><name pos:line="19" pos:column="69">offset<pos:position pos:line="19" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr></argument>,
		       <argument><expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">uintmax_t<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator><name><name pos:line="20" pos:column="35">obj<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">idx<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">offset<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">is_delta_type<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name><name pos:line="21" pos:column="35">obj<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">type<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46"> <block pos:line="21" pos:column="47">{
			<decl_stmt><decl><type><name><name pos:line="22" pos:column="25">struct<pos:position pos:line="22" pos:column="31"/></name> <name pos:line="22" pos:column="32">object_entry<pos:position pos:line="22" pos:column="44"/></name></name> <modifier pos:line="22" pos:column="45">*<pos:position pos:line="22" pos:column="46"/></modifier></type><name pos:line="22" pos:column="46">bobj<pos:position pos:line="22" pos:column="50"/></name> <init pos:line="22" pos:column="51">= <expr><operator pos:line="22" pos:column="53">&amp;<pos:position pos:line="22" pos:column="58"/></operator><name><name pos:line="22" pos:column="54">objects<pos:position pos:line="22" pos:column="61"/></name><index pos:line="22" pos:column="61">[<expr><name><name pos:line="22" pos:column="62">obj_stat<pos:position pos:line="22" pos:column="70"/></name><index pos:line="22" pos:column="70">[<expr><name pos:line="22" pos:column="71">i<pos:position pos:line="22" pos:column="72"/></name></expr>]<pos:position pos:line="22" pos:column="73"/></index></name><operator pos:line="22" pos:column="73">.<pos:position pos:line="22" pos:column="74"/></operator><name pos:line="22" pos:column="74">base_object_no<pos:position pos:line="22" pos:column="88"/></name></expr>]<pos:position pos:line="22" pos:column="89"/></index></name></expr></init></decl>;<pos:position pos:line="22" pos:column="90"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">printf<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><literal type="string" pos:line="23" pos:column="32">" %u %s"<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="42">obj_stat<pos:position pos:line="23" pos:column="50"/></name><index pos:line="23" pos:column="50">[<expr><name pos:line="23" pos:column="51">i<pos:position pos:line="23" pos:column="52"/></name></expr>]<pos:position pos:line="23" pos:column="53"/></index></name><operator pos:line="23" pos:column="53">.<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">delta_depth<pos:position pos:line="23" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="67">sha1_to_hex<pos:position pos:line="23" pos:column="78"/></name><argument_list pos:line="23" pos:column="78">(<argument><expr><name><name pos:line="23" pos:column="79">bobj<pos:position pos:line="23" pos:column="83"/></name><operator pos:line="23" pos:column="83">-&gt;<pos:position pos:line="23" pos:column="88"/></operator><name pos:line="23" pos:column="85">idx<pos:position pos:line="23" pos:column="88"/></name><operator pos:line="23" pos:column="88">.<pos:position pos:line="23" pos:column="89"/></operator><name pos:line="23" pos:column="89">sha1<pos:position pos:line="23" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="96"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">putchar<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="char" pos:line="25" pos:column="25">'\n'<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></for>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">baseobjects<pos:position pos:line="28" pos:column="24"/></name></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">printf_ln<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><call><name pos:line="29" pos:column="27">Q_<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><literal type="string" pos:line="29" pos:column="30">"non delta: %d object"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="30" pos:column="30">"non delta: %d objects"<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>,
			     <argument><expr><name pos:line="31" pos:column="30">baseobjects<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr></argument>,
			  <argument><expr><name pos:line="32" pos:column="27">baseobjects<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt></block></then></if>
	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="25">deepest_delta<pos:position pos:line="33" pos:column="38"/></name></expr>;<pos:position pos:line="33" pos:column="39"/></condition> <incr><expr><name pos:line="33" pos:column="40">i<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">++<pos:position pos:line="33" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="44"/></control> <block pos:line="33" pos:column="45">{
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">!<pos:position pos:line="34" pos:column="22"/></operator><name><name pos:line="34" pos:column="22">chain_histogram<pos:position pos:line="34" pos:column="37"/></name><index pos:line="34" pos:column="37">[<expr><name pos:line="34" pos:column="38">i<pos:position pos:line="34" pos:column="39"/></name></expr>]<pos:position pos:line="34" pos:column="40"/></index></name></expr>)<pos:position pos:line="34" pos:column="41"/></condition><then pos:line="34" pos:column="41">
			<block type="pseudo"><continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">printf_ln<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><call><name pos:line="36" pos:column="27">Q_<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><literal type="string" pos:line="36" pos:column="30">"chain length = %d: %lu object"<pos:position pos:line="36" pos:column="61"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="37" pos:column="30">"chain length = %d: %lu objects"<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="38" pos:column="30">chain_histogram<pos:position pos:line="38" pos:column="45"/></name><index pos:line="38" pos:column="45">[<expr><name pos:line="38" pos:column="46">i<pos:position pos:line="38" pos:column="47"/></name></expr>]<pos:position pos:line="38" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr></argument>,
			  <argument><expr><name pos:line="39" pos:column="27">i<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">+<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">1<pos:position pos:line="39" pos:column="32"/></literal></expr></argument>,
			  <argument><expr><name><name pos:line="40" pos:column="27">chain_histogram<pos:position pos:line="40" pos:column="42"/></name><index pos:line="40" pos:column="42">[<expr><name pos:line="40" pos:column="43">i<pos:position pos:line="40" pos:column="44"/></name></expr>]<pos:position pos:line="40" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

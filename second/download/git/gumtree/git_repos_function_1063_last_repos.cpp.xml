<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1063_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">enqueue<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name><name pos:line="2" pos:column="10">struct<pos:position pos:line="2" pos:column="16"/></name> <name pos:line="2" pos:column="17">tree<pos:position pos:line="2" pos:column="21"/></name></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">tree<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">trie<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier><modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">last<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">tree<pos:position pos:line="4" pos:column="12"/></name></expr>)<pos:position pos:line="4" pos:column="13"/></condition><then pos:line="4" pos:column="13">
    <block type="pseudo"><return pos:line="5" pos:column="5">return;<pos:position pos:line="5" pos:column="12"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">enqueue<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name><name pos:line="6" pos:column="11">tree<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">llink<pos:position pos:line="6" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">last<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">enqueue<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name><name pos:line="7" pos:column="11">tree<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">rlink<pos:position pos:line="7" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">last<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><operator pos:line="8" pos:column="4">*<pos:position pos:line="8" pos:column="5"/></operator><name pos:line="8" pos:column="5">last<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">)<pos:position pos:line="8" pos:column="10"/></operator> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">last<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">next<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="29">tree<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">trie<pos:position pos:line="8" pos:column="39"/></name></name></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_7101_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">DIR<pos:position pos:line="1" pos:column="4"/></name> <modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type><name pos:line="1" pos:column="6">opendir<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">name<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">wchar_t<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">pattern<pos:position pos:line="3" pos:column="24"/></name><index pos:line="3" pos:column="24">[<expr><name pos:line="3" pos:column="25">MAX_PATH<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">+<pos:position pos:line="3" pos:column="35"/></operator> <literal type="number" pos:line="3" pos:column="36">2<pos:position pos:line="3" pos:column="37"/></literal></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt> <comment type="block" pos:line="3" pos:column="40">/* + 2 for '/' '*' */</comment>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">WIN32_FIND_DATAW<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">fdata<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">HANDLE<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">h<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">DIR<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">dir<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* convert name to UTF-16 and check length &lt; MAX_PATH */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">len<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">xutftowcs_path<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">pattern<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">name<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call><operator pos:line="10" pos:column="49">)<pos:position pos:line="10" pos:column="50"/></operator> <operator pos:line="10" pos:column="51">&lt;<pos:position pos:line="10" pos:column="55"/></operator> <literal type="number" pos:line="10" pos:column="53">0<pos:position pos:line="10" pos:column="54"/></literal></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* append optional '/' and wildcard '*' */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">len<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="20">!<pos:position pos:line="14" pos:column="21"/></operator><call><name pos:line="14" pos:column="21">is_dir_sep<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">pattern<pos:position pos:line="14" pos:column="39"/></name><index pos:line="14" pos:column="39">[<expr><name pos:line="14" pos:column="40">len<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">-<pos:position pos:line="14" pos:column="45"/></operator> <literal type="number" pos:line="14" pos:column="46">1<pos:position pos:line="14" pos:column="47"/></literal></expr>]<pos:position pos:line="14" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="50"/></condition><then pos:line="14" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="17">pattern<pos:position pos:line="15" pos:column="24"/></name><index pos:line="15" pos:column="24">[<expr><name pos:line="15" pos:column="25">len<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">++<pos:position pos:line="15" pos:column="30"/></operator></expr>]<pos:position pos:line="15" pos:column="31"/></index></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <literal type="char" pos:line="15" pos:column="34">'/'<pos:position pos:line="15" pos:column="37"/></literal></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">pattern<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><name pos:line="16" pos:column="17">len<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">++<pos:position pos:line="16" pos:column="22"/></operator></expr>]<pos:position pos:line="16" pos:column="23"/></index></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="char" pos:line="16" pos:column="26">'*'<pos:position pos:line="16" pos:column="29"/></literal></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">pattern<pos:position pos:line="17" pos:column="16"/></name><index pos:line="17" pos:column="16">[<expr><name pos:line="17" pos:column="17">len<pos:position pos:line="17" pos:column="20"/></name></expr>]<pos:position pos:line="17" pos:column="21"/></index></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/* open find handle */</comment>
	<expr_stmt><expr><name pos:line="20" pos:column="9">h<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">FindFirstFileW<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">pattern<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="37">&amp;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="38">fdata<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">h<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">INVALID_HANDLE_VALUE<pos:position pos:line="21" pos:column="38"/></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">DWORD<pos:position pos:line="22" pos:column="22"/></name></type> <name pos:line="22" pos:column="23">err<pos:position pos:line="22" pos:column="26"/></name> <init pos:line="22" pos:column="27">= <expr><call><name pos:line="22" pos:column="29">GetLastError<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">()<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="44"/></decl_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">errno<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">err<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">==<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">ERROR_DIRECTORY<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator></expr> ?<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51"> <expr><name pos:line="23" pos:column="52">ENOTDIR<pos:position pos:line="23" pos:column="59"/></name></expr> <pos:position pos:line="23" pos:column="60"/></then><else pos:line="23" pos:column="60">: <expr><call><name pos:line="23" pos:column="62">err_win_to_posix<pos:position pos:line="23" pos:column="78"/></name><argument_list pos:line="23" pos:column="78">(<argument><expr><name pos:line="23" pos:column="79">err<pos:position pos:line="23" pos:column="82"/></name></expr></argument>)<pos:position pos:line="23" pos:column="83"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="84"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="27" pos:column="9">/* initialize DIR structure and copy first dir entry */</comment>
	<expr_stmt><expr><name pos:line="28" pos:column="9">dir<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">xmalloc<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><sizeof pos:line="28" pos:column="23">sizeof<argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">DIR<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">dir<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">dd_handle<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">h<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">dir<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">dd_stat<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="24">0<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">finddata2dirent<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><operator pos:line="31" pos:column="25">&amp;<pos:position pos:line="31" pos:column="30"/></operator><name><name pos:line="31" pos:column="26">dir<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">dd_dir<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="39">&amp;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="40">fdata<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
	<return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">dir<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

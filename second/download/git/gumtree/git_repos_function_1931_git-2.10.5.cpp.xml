<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1931_git-2.10.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">read_pack_header<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">fd<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">pack_header<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">header<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">read_in_full<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">fd<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="30">header<pos:position pos:line="3" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="38">sizeof<argument_list pos:line="3" pos:column="44">(<argument><expr><operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">header<pos:position pos:line="3" pos:column="52"/></name></expr></argument>)<pos:position pos:line="3" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></call> <operator pos:line="3" pos:column="55">&lt;<pos:position pos:line="3" pos:column="59"/></operator> <sizeof pos:line="3" pos:column="57">sizeof<argument_list pos:line="3" pos:column="63">(<argument><expr><operator pos:line="3" pos:column="64">*<pos:position pos:line="3" pos:column="65"/></operator><name pos:line="3" pos:column="65">header<pos:position pos:line="3" pos:column="71"/></name></expr></argument>)<pos:position pos:line="3" pos:column="72"/></argument_list></sizeof></expr>)<pos:position pos:line="3" pos:column="73"/></condition><then pos:line="3" pos:column="73">
		<comment type="block" pos:line="4" pos:column="17">/* "eof before pack header was fully read" */</comment>
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><name pos:line="5" pos:column="24">PH_ERROR_EOF<pos:position pos:line="5" pos:column="36"/></name></expr>;<pos:position pos:line="5" pos:column="37"/></return></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">header<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">hdr_signature<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">!=<pos:position pos:line="7" pos:column="37"/></operator> <call><name pos:line="7" pos:column="38">htonl<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">PACK_SIGNATURE<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60">
		<comment type="block" pos:line="8" pos:column="17">/* "protocol error (pack signature mismatch detected)" */</comment>
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><name pos:line="9" pos:column="24">PH_ERROR_PACK_SIGNATURE<pos:position pos:line="9" pos:column="47"/></name></expr>;<pos:position pos:line="9" pos:column="48"/></return></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">pack_version_ok<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">header<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">hdr_version<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51">
		<comment type="block" pos:line="11" pos:column="17">/* "protocol error (pack version unsupported)" */</comment>
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">PH_ERROR_PROTOCOL<pos:position pos:line="12" pos:column="41"/></name></expr>;<pos:position pos:line="12" pos:column="42"/></return></block></then></if>
	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1914_git-2.12.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">compute_xor_offsets<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">int<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">MAX_XOR_OFFSET_SEARCH<pos:position pos:line="3" pos:column="47"/></name> <init pos:line="3" pos:column="48">= <expr><literal type="number" pos:line="3" pos:column="50">10<pos:position pos:line="3" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">next<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">next<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;<pos:position pos:line="7" pos:column="25"/></operator> <name><name pos:line="7" pos:column="23">writer<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">selected_nr<pos:position pos:line="7" pos:column="41"/></name></name></expr>)<pos:position pos:line="7" pos:column="42"/></condition> <block pos:line="7" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">bitmapped_commit<pos:position pos:line="8" pos:column="40"/></name></name> <modifier pos:line="8" pos:column="41">*<pos:position pos:line="8" pos:column="42"/></modifier></type><name pos:line="8" pos:column="42">stored<pos:position pos:line="8" pos:column="48"/></name> <init pos:line="8" pos:column="49">= <expr><operator pos:line="8" pos:column="51">&amp;<pos:position pos:line="8" pos:column="56"/></operator><name><name pos:line="8" pos:column="52">writer<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">.<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">selected<pos:position pos:line="8" pos:column="67"/></name><index pos:line="8" pos:column="67">[<expr><name pos:line="8" pos:column="68">next<pos:position pos:line="8" pos:column="72"/></name></expr>]<pos:position pos:line="8" pos:column="73"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="74"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">best_offset<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">ewah_bitmap<pos:position pos:line="11" pos:column="35"/></name></name> <modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier></type><name pos:line="11" pos:column="37">best_bitmap<pos:position pos:line="11" pos:column="48"/></name> <init pos:line="11" pos:column="49">= <expr><name><name pos:line="11" pos:column="51">stored<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">-&gt;<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="59">bitmap<pos:position pos:line="11" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="66"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">ewah_bitmap<pos:position pos:line="12" pos:column="35"/></name></name> <modifier pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></modifier></type><name pos:line="12" pos:column="37">test_xor<pos:position pos:line="12" pos:column="45"/></name></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>

		<for pos:line="14" pos:column="17">for <control pos:line="14" pos:column="21">(<init><expr><name pos:line="14" pos:column="22">i<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></init> <condition><expr><name pos:line="14" pos:column="29">i<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&lt;=<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="34">MAX_XOR_OFFSET_SEARCH<pos:position pos:line="14" pos:column="55"/></name></expr>;<pos:position pos:line="14" pos:column="56"/></condition> <incr><expr><operator pos:line="14" pos:column="57">++<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="59">i<pos:position pos:line="14" pos:column="60"/></name></expr></incr>)<pos:position pos:line="14" pos:column="61"/></control> <block pos:line="14" pos:column="62">{
			<decl_stmt><decl><type><name pos:line="15" pos:column="25">int<pos:position pos:line="15" pos:column="28"/></name></type> <name pos:line="15" pos:column="29">curr<pos:position pos:line="15" pos:column="33"/></name> <init pos:line="15" pos:column="34">= <expr><name pos:line="15" pos:column="36">next<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">-<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">i<pos:position pos:line="15" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>

			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">curr<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">&lt;<pos:position pos:line="17" pos:column="38"/></operator> <literal type="number" pos:line="17" pos:column="36">0<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
				<block type="pseudo"><break pos:line="18" pos:column="33">break;<pos:position pos:line="18" pos:column="39"/></break></block></then></if>

			<expr_stmt><expr><name pos:line="20" pos:column="25">test_xor<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <call><name pos:line="20" pos:column="36">ewah_pool_new<pos:position pos:line="20" pos:column="49"/></name><argument_list pos:line="20" pos:column="49">()<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">ewah_xor<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name><name pos:line="21" pos:column="34">writer<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">selected<pos:position pos:line="21" pos:column="49"/></name><index pos:line="21" pos:column="49">[<expr><name pos:line="21" pos:column="50">curr<pos:position pos:line="21" pos:column="54"/></name></expr>]<pos:position pos:line="21" pos:column="55"/></index></name><operator pos:line="21" pos:column="55">.<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="56">bitmap<pos:position pos:line="21" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="64">stored<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">-&gt;<pos:position pos:line="21" pos:column="75"/></operator><name pos:line="21" pos:column="72">bitmap<pos:position pos:line="21" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="80">test_xor<pos:position pos:line="21" pos:column="88"/></name></expr></argument>)<pos:position pos:line="21" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="90"/></expr_stmt>

			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name><name pos:line="23" pos:column="29">test_xor<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">buffer_size<pos:position pos:line="23" pos:column="50"/></name></name> <operator pos:line="23" pos:column="51">&lt;<pos:position pos:line="23" pos:column="55"/></operator> <name><name pos:line="23" pos:column="53">best_bitmap<pos:position pos:line="23" pos:column="64"/></name><operator pos:line="23" pos:column="64">-&gt;<pos:position pos:line="23" pos:column="69"/></operator><name pos:line="23" pos:column="66">buffer_size<pos:position pos:line="23" pos:column="77"/></name></name></expr>)<pos:position pos:line="23" pos:column="78"/></condition><then pos:line="23" pos:column="78"> <block pos:line="23" pos:column="79">{
				<if pos:line="24" pos:column="33">if <condition pos:line="24" pos:column="36">(<expr><name pos:line="24" pos:column="37">best_bitmap<pos:position pos:line="24" pos:column="48"/></name> <operator pos:line="24" pos:column="49">!=<pos:position pos:line="24" pos:column="51"/></operator> <name><name pos:line="24" pos:column="52">stored<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">bitmap<pos:position pos:line="24" pos:column="66"/></name></name></expr>)<pos:position pos:line="24" pos:column="67"/></condition><then pos:line="24" pos:column="67">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="41">ewah_pool_free<pos:position pos:line="25" pos:column="55"/></name><argument_list pos:line="25" pos:column="55">(<argument><expr><name pos:line="25" pos:column="56">best_bitmap<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt></block></then></if>

				<expr_stmt><expr><name pos:line="27" pos:column="33">best_bitmap<pos:position pos:line="27" pos:column="44"/></name> <operator pos:line="27" pos:column="45">=<pos:position pos:line="27" pos:column="46"/></operator> <name pos:line="27" pos:column="47">test_xor<pos:position pos:line="27" pos:column="55"/></name></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="28" pos:column="33">best_offset<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">=<pos:position pos:line="28" pos:column="46"/></operator> <name pos:line="28" pos:column="47">i<pos:position pos:line="28" pos:column="48"/></name></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="29" pos:column="26"/></block></then> <else pos:line="29" pos:column="27">else <block pos:line="29" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">ewah_pool_free<pos:position pos:line="30" pos:column="47"/></name><argument_list pos:line="30" pos:column="47">(<argument><expr><name pos:line="30" pos:column="48">test_xor<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="31" pos:column="26"/></block></else></if>
		}<pos:position pos:line="32" pos:column="18"/></block></for>

		<expr_stmt><expr><name><name pos:line="34" pos:column="17">stored<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">xor_offset<pos:position pos:line="34" pos:column="35"/></name></name> <operator pos:line="34" pos:column="36">=<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">best_offset<pos:position pos:line="34" pos:column="49"/></name></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">stored<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">write_as<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">=<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">best_bitmap<pos:position pos:line="35" pos:column="47"/></name></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><name pos:line="37" pos:column="17">next<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">++<pos:position pos:line="37" pos:column="23"/></operator></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></while>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

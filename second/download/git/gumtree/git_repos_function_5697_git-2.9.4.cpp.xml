<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5697_git-2.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ll_find_deltas<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">object_entry<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">list<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">unsigned<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">list_size<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">window<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">depth<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">unsigned<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">processed<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">thread_params<pos:position pos:line="4" pos:column="29"/></name></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">p<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">ret<pos:position pos:line="5" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">active_threads<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><literal type="number" pos:line="5" pos:column="38">0<pos:position pos:line="5" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">init_threaded_search<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">()<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">delta_search_threads<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">&lt;=<pos:position pos:line="9" pos:column="39"/></operator> <literal type="number" pos:line="9" pos:column="37">1<pos:position pos:line="9" pos:column="38"/></literal></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <block pos:line="9" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">find_deltas<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">list<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="36">list_size<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">window<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">depth<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">processed<pos:position pos:line="10" pos:column="71"/></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">cleanup_threaded_search<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">()<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
		<return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">progress<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">&gt;<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="24">pack_to_stdout<pos:position pos:line="14" pos:column="38"/></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">fprintf<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">stderr<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"Delta compression using up to %d threads.\n"<pos:position pos:line="15" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name pos:line="16" pos:column="33">delta_search_threads<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">xcalloc<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">delta_search_threads<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="43">sizeof<argument_list pos:line="17" pos:column="49">(<argument><expr><operator pos:line="17" pos:column="50">*<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">p<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>

	<comment type="block" pos:line="19" pos:column="9">/* Partition the work amongst work threads. */</comment>
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">delta_search_threads<pos:position pos:line="20" pos:column="45"/></name></expr>;<pos:position pos:line="20" pos:column="46"/></condition> <incr><expr><name pos:line="20" pos:column="47">i<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">++<pos:position pos:line="20" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="51"/></control> <block pos:line="20" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">unsigned<pos:position pos:line="21" pos:column="25"/></name></type> <name pos:line="21" pos:column="26">sub_size<pos:position pos:line="21" pos:column="34"/></name> <init pos:line="21" pos:column="35">= <expr><name pos:line="21" pos:column="37">list_size<pos:position pos:line="21" pos:column="46"/></name> <operator pos:line="21" pos:column="47">/<pos:position pos:line="21" pos:column="48"/></operator> <operator pos:line="21" pos:column="49">(<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">delta_search_threads<pos:position pos:line="21" pos:column="70"/></name> <operator pos:line="21" pos:column="71">-<pos:position pos:line="21" pos:column="72"/></operator> <name pos:line="21" pos:column="73">i<pos:position pos:line="21" pos:column="74"/></name><operator pos:line="21" pos:column="74">)<pos:position pos:line="21" pos:column="75"/></operator></expr></init></decl>;<pos:position pos:line="21" pos:column="76"/></decl_stmt>

		<comment type="block" pos:line="23" pos:column="17">/* don't use too small segments or no deltas will be found */</comment>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">sub_size<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">&lt;<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="32">2<pos:position pos:line="24" pos:column="33"/></literal><operator pos:line="24" pos:column="33">*<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">window<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">&amp;&amp;<pos:position pos:line="24" pos:column="51"/></operator> <name pos:line="24" pos:column="44">i<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">+<pos:position pos:line="24" pos:column="46"/></operator><literal type="number" pos:line="24" pos:column="46">1<pos:position pos:line="24" pos:column="47"/></literal> <operator pos:line="24" pos:column="48">&lt;<pos:position pos:line="24" pos:column="52"/></operator> <name pos:line="24" pos:column="50">delta_search_threads<pos:position pos:line="24" pos:column="70"/></name></expr>)<pos:position pos:line="24" pos:column="71"/></condition><then pos:line="24" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">sub_size<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="36">0<pos:position pos:line="25" pos:column="37"/></literal></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name><index pos:line="27" pos:column="18">[<expr><name pos:line="27" pos:column="19">i<pos:position pos:line="27" pos:column="20"/></name></expr>]<pos:position pos:line="27" pos:column="21"/></index></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">window<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">window<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">p<pos:position pos:line="28" pos:column="18"/></name><index pos:line="28" pos:column="18">[<expr><name pos:line="28" pos:column="19">i<pos:position pos:line="28" pos:column="20"/></name></expr>]<pos:position pos:line="28" pos:column="21"/></index></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">depth<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">depth<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">p<pos:position pos:line="29" pos:column="18"/></name><index pos:line="29" pos:column="18">[<expr><name pos:line="29" pos:column="19">i<pos:position pos:line="29" pos:column="20"/></name></expr>]<pos:position pos:line="29" pos:column="21"/></index></name><operator pos:line="29" pos:column="21">.<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">processed<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">processed<pos:position pos:line="29" pos:column="43"/></name></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">p<pos:position pos:line="30" pos:column="18"/></name><index pos:line="30" pos:column="18">[<expr><name pos:line="30" pos:column="19">i<pos:position pos:line="30" pos:column="20"/></name></expr>]<pos:position pos:line="30" pos:column="21"/></index></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">working<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <literal type="number" pos:line="30" pos:column="32">1<pos:position pos:line="30" pos:column="33"/></literal></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">p<pos:position pos:line="31" pos:column="18"/></name><index pos:line="31" pos:column="18">[<expr><name pos:line="31" pos:column="19">i<pos:position pos:line="31" pos:column="20"/></name></expr>]<pos:position pos:line="31" pos:column="21"/></index></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">data_ready<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <literal type="number" pos:line="31" pos:column="35">0<pos:position pos:line="31" pos:column="36"/></literal></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>

		<comment type="block" pos:line="33" pos:column="17">/* try to split chunks on "path" boundaries */</comment>
		<while pos:line="34" pos:column="17">while <condition pos:line="34" pos:column="23">(<expr><name pos:line="34" pos:column="24">sub_size<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">&amp;&amp;<pos:position pos:line="34" pos:column="43"/></operator> <name pos:line="34" pos:column="36">sub_size<pos:position pos:line="34" pos:column="44"/></name> <operator pos:line="34" pos:column="45">&lt;<pos:position pos:line="34" pos:column="49"/></operator> <name pos:line="34" pos:column="47">list_size<pos:position pos:line="34" pos:column="56"/></name> <operator pos:line="34" pos:column="57">&amp;&amp;<pos:position pos:line="34" pos:column="67"/></operator>
		       <name><name pos:line="35" pos:column="24">list<pos:position pos:line="35" pos:column="28"/></name><index pos:line="35" pos:column="28">[<expr><name pos:line="35" pos:column="29">sub_size<pos:position pos:line="35" pos:column="37"/></name></expr>]<pos:position pos:line="35" pos:column="38"/></index></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">hash<pos:position pos:line="35" pos:column="44"/></name> <operator pos:line="35" pos:column="45">&amp;&amp;<pos:position pos:line="35" pos:column="55"/></operator>
		       <name><name pos:line="36" pos:column="24">list<pos:position pos:line="36" pos:column="28"/></name><index pos:line="36" pos:column="28">[<expr><name pos:line="36" pos:column="29">sub_size<pos:position pos:line="36" pos:column="37"/></name></expr>]<pos:position pos:line="36" pos:column="38"/></index></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">hash<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">==<pos:position pos:line="36" pos:column="47"/></operator> <name><name pos:line="36" pos:column="48">list<pos:position pos:line="36" pos:column="52"/></name><index pos:line="36" pos:column="52">[<expr><name pos:line="36" pos:column="53">sub_size<pos:position pos:line="36" pos:column="61"/></name><operator pos:line="36" pos:column="61">-<pos:position pos:line="36" pos:column="62"/></operator><literal type="number" pos:line="36" pos:column="62">1<pos:position pos:line="36" pos:column="63"/></literal></expr>]<pos:position pos:line="36" pos:column="64"/></index></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">hash<pos:position pos:line="36" pos:column="70"/></name></expr>)<pos:position pos:line="36" pos:column="71"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">sub_size<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">++<pos:position pos:line="37" pos:column="35"/></operator></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt></block></while>

		<expr_stmt><expr><name><name pos:line="39" pos:column="17">p<pos:position pos:line="39" pos:column="18"/></name><index pos:line="39" pos:column="18">[<expr><name pos:line="39" pos:column="19">i<pos:position pos:line="39" pos:column="20"/></name></expr>]<pos:position pos:line="39" pos:column="21"/></index></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">list<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">list<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">p<pos:position pos:line="40" pos:column="18"/></name><index pos:line="40" pos:column="18">[<expr><name pos:line="40" pos:column="19">i<pos:position pos:line="40" pos:column="20"/></name></expr>]<pos:position pos:line="40" pos:column="21"/></index></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">list_size<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">sub_size<pos:position pos:line="40" pos:column="42"/></name></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">p<pos:position pos:line="41" pos:column="18"/></name><index pos:line="41" pos:column="18">[<expr><name pos:line="41" pos:column="19">i<pos:position pos:line="41" pos:column="20"/></name></expr>]<pos:position pos:line="41" pos:column="21"/></index></name><operator pos:line="41" pos:column="21">.<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">remaining<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">sub_size<pos:position pos:line="41" pos:column="42"/></name></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>

		<expr_stmt><expr><name pos:line="43" pos:column="17">list<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">+=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">sub_size<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">list_size<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">-=<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">sub_size<pos:position pos:line="44" pos:column="38"/></name></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></for>

	<comment type="block" pos:line="47" pos:column="9">/* Start work threads. */</comment>
	<for pos:line="48" pos:column="9">for <control pos:line="48" pos:column="13">(<init><expr><name pos:line="48" pos:column="14">i<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal></expr>;<pos:position pos:line="48" pos:column="20"/></init> <condition><expr><name pos:line="48" pos:column="21">i<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">&lt;<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="25">delta_search_threads<pos:position pos:line="48" pos:column="45"/></name></expr>;<pos:position pos:line="48" pos:column="46"/></condition> <incr><expr><name pos:line="48" pos:column="47">i<pos:position pos:line="48" pos:column="48"/></name><operator pos:line="48" pos:column="48">++<pos:position pos:line="48" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="51"/></control> <block pos:line="48" pos:column="52">{
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><name><name pos:line="49" pos:column="22">p<pos:position pos:line="49" pos:column="23"/></name><index pos:line="49" pos:column="23">[<expr><name pos:line="49" pos:column="24">i<pos:position pos:line="49" pos:column="25"/></name></expr>]<pos:position pos:line="49" pos:column="26"/></index></name><operator pos:line="49" pos:column="26">.<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">list_size<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37">
			<block type="pseudo"><continue pos:line="50" pos:column="25">continue;<pos:position pos:line="50" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">pthread_mutex_init<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><operator pos:line="51" pos:column="36">&amp;<pos:position pos:line="51" pos:column="41"/></operator><name><name pos:line="51" pos:column="37">p<pos:position pos:line="51" pos:column="38"/></name><index pos:line="51" pos:column="38">[<expr><name pos:line="51" pos:column="39">i<pos:position pos:line="51" pos:column="40"/></name></expr>]<pos:position pos:line="51" pos:column="41"/></index></name><operator pos:line="51" pos:column="41">.<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="42">mutex<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="49">NULL<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">pthread_cond_init<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><operator pos:line="52" pos:column="35">&amp;<pos:position pos:line="52" pos:column="40"/></operator><name><name pos:line="52" pos:column="36">p<pos:position pos:line="52" pos:column="37"/></name><index pos:line="52" pos:column="37">[<expr><name pos:line="52" pos:column="38">i<pos:position pos:line="52" pos:column="39"/></name></expr>]<pos:position pos:line="52" pos:column="40"/></index></name><operator pos:line="52" pos:column="40">.<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="41">cond<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">NULL<pos:position pos:line="52" pos:column="51"/></name></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="53" pos:column="17">ret<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">pthread_create<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name><name pos:line="53" pos:column="39">p<pos:position pos:line="53" pos:column="40"/></name><index pos:line="53" pos:column="40">[<expr><name pos:line="53" pos:column="41">i<pos:position pos:line="53" pos:column="42"/></name></expr>]<pos:position pos:line="53" pos:column="43"/></index></name><operator pos:line="53" pos:column="43">.<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="44">thread<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">NULL<pos:position pos:line="53" pos:column="56"/></name></expr></argument>,
				     <argument><expr><name pos:line="54" pos:column="38">threaded_find_deltas<pos:position pos:line="54" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="60">&amp;<pos:position pos:line="54" pos:column="65"/></operator><name><name pos:line="54" pos:column="61">p<pos:position pos:line="54" pos:column="62"/></name><index pos:line="54" pos:column="62">[<expr><name pos:line="54" pos:column="63">i<pos:position pos:line="54" pos:column="64"/></name></expr>]<pos:position pos:line="54" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="67"/></expr_stmt>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">ret<pos:position pos:line="55" pos:column="24"/></name></expr>)<pos:position pos:line="55" pos:column="25"/></condition><then pos:line="55" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="25">die<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><literal type="string" pos:line="56" pos:column="29">"unable to create thread: %s"<pos:position pos:line="56" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="60">strerror<pos:position pos:line="56" pos:column="68"/></name><argument_list pos:line="56" pos:column="68">(<argument><expr><name pos:line="56" pos:column="69">ret<pos:position pos:line="56" pos:column="72"/></name></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="57" pos:column="17">active_threads<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">++<pos:position pos:line="57" pos:column="33"/></operator></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></for>

	<comment type="block" pos:line="60" pos:column="9">/*
	 * Now let's wait for work completion.  Each time a thread is done
	 * with its work, we steal half of the remaining work from the
	 * thread with the largest number of unprocessed objects and give
	 * it to that newly idle thread.  This ensure good load balancing
	 * until the remaining object list segments are simply too short
	 * to be worth splitting anymore.
	 */</comment>
	<while pos:line="68" pos:column="9">while <condition pos:line="68" pos:column="15">(<expr><name pos:line="68" pos:column="16">active_threads<pos:position pos:line="68" pos:column="30"/></name></expr>)<pos:position pos:line="68" pos:column="31"/></condition> <block pos:line="68" pos:column="32">{
		<decl_stmt><decl><type><name><name pos:line="69" pos:column="17">struct<pos:position pos:line="69" pos:column="23"/></name> <name pos:line="69" pos:column="24">thread_params<pos:position pos:line="69" pos:column="37"/></name></name> <modifier pos:line="69" pos:column="38">*<pos:position pos:line="69" pos:column="39"/></modifier></type><name pos:line="69" pos:column="39">target<pos:position pos:line="69" pos:column="45"/></name> <init pos:line="69" pos:column="46">= <expr><name pos:line="69" pos:column="48">NULL<pos:position pos:line="69" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="70" pos:column="17">struct<pos:position pos:line="70" pos:column="23"/></name> <name pos:line="70" pos:column="24">thread_params<pos:position pos:line="70" pos:column="37"/></name></name> <modifier pos:line="70" pos:column="38">*<pos:position pos:line="70" pos:column="39"/></modifier></type><name pos:line="70" pos:column="39">victim<pos:position pos:line="70" pos:column="45"/></name> <init pos:line="70" pos:column="46">= <expr><name pos:line="70" pos:column="48">NULL<pos:position pos:line="70" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="70" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="71" pos:column="17">unsigned<pos:position pos:line="71" pos:column="25"/></name></type> <name pos:line="71" pos:column="26">sub_size<pos:position pos:line="71" pos:column="34"/></name> <init pos:line="71" pos:column="35">= <expr><literal type="number" pos:line="71" pos:column="37">0<pos:position pos:line="71" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="71" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="73" pos:column="17">progress_lock<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">()<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
		<for pos:line="74" pos:column="17">for <control pos:line="74" pos:column="21">(<init pos:line="74" pos:column="22">;<pos:position pos:line="74" pos:column="23"/></init><condition pos:line="74" pos:column="23">;<pos:position pos:line="74" pos:column="24"/></condition><incr/>)<pos:position pos:line="74" pos:column="25"/></control> <block pos:line="74" pos:column="26">{
			<for pos:line="75" pos:column="25">for <control pos:line="75" pos:column="29">(<init><expr><name pos:line="75" pos:column="30">i<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <literal type="number" pos:line="75" pos:column="34">0<pos:position pos:line="75" pos:column="35"/></literal></expr>;<pos:position pos:line="75" pos:column="36"/></init> <condition><expr><operator pos:line="75" pos:column="37">!<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">target<pos:position pos:line="75" pos:column="44"/></name> <operator pos:line="75" pos:column="45">&amp;&amp;<pos:position pos:line="75" pos:column="55"/></operator> <name pos:line="75" pos:column="48">i<pos:position pos:line="75" pos:column="49"/></name> <operator pos:line="75" pos:column="50">&lt;<pos:position pos:line="75" pos:column="54"/></operator> <name pos:line="75" pos:column="52">delta_search_threads<pos:position pos:line="75" pos:column="72"/></name></expr>;<pos:position pos:line="75" pos:column="73"/></condition> <incr><expr><name pos:line="75" pos:column="74">i<pos:position pos:line="75" pos:column="75"/></name><operator pos:line="75" pos:column="75">++<pos:position pos:line="75" pos:column="77"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="78"/></control>
				<block type="pseudo"><if pos:line="76" pos:column="33">if <condition pos:line="76" pos:column="36">(<expr><operator pos:line="76" pos:column="37">!<pos:position pos:line="76" pos:column="38"/></operator><name><name pos:line="76" pos:column="38">p<pos:position pos:line="76" pos:column="39"/></name><index pos:line="76" pos:column="39">[<expr><name pos:line="76" pos:column="40">i<pos:position pos:line="76" pos:column="41"/></name></expr>]<pos:position pos:line="76" pos:column="42"/></index></name><operator pos:line="76" pos:column="42">.<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="43">working<pos:position pos:line="76" pos:column="50"/></name></expr>)<pos:position pos:line="76" pos:column="51"/></condition><then pos:line="76" pos:column="51">
					<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="41">target<pos:position pos:line="77" pos:column="47"/></name> <operator pos:line="77" pos:column="48">=<pos:position pos:line="77" pos:column="49"/></operator> <operator pos:line="77" pos:column="50">&amp;<pos:position pos:line="77" pos:column="55"/></operator><name><name pos:line="77" pos:column="51">p<pos:position pos:line="77" pos:column="52"/></name><index pos:line="77" pos:column="52">[<expr><name pos:line="77" pos:column="53">i<pos:position pos:line="77" pos:column="54"/></name></expr>]<pos:position pos:line="77" pos:column="55"/></index></name></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt></block></then></if></block></for>
			<if pos:line="78" pos:column="25">if <condition pos:line="78" pos:column="28">(<expr><name pos:line="78" pos:column="29">target<pos:position pos:line="78" pos:column="35"/></name></expr>)<pos:position pos:line="78" pos:column="36"/></condition><then pos:line="78" pos:column="36">
				<block type="pseudo"><break pos:line="79" pos:column="33">break;<pos:position pos:line="79" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="80" pos:column="25">pthread_cond_wait<pos:position pos:line="80" pos:column="42"/></name><argument_list pos:line="80" pos:column="42">(<argument><expr><operator pos:line="80" pos:column="43">&amp;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="44">progress_cond<pos:position pos:line="80" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="59">&amp;<pos:position pos:line="80" pos:column="64"/></operator><name pos:line="80" pos:column="60">progress_mutex<pos:position pos:line="80" pos:column="74"/></name></expr></argument>)<pos:position pos:line="80" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="81" pos:column="18"/></block></for>

		<for pos:line="83" pos:column="17">for <control pos:line="83" pos:column="21">(<init><expr><name pos:line="83" pos:column="22">i<pos:position pos:line="83" pos:column="23"/></name> <operator pos:line="83" pos:column="24">=<pos:position pos:line="83" pos:column="25"/></operator> <literal type="number" pos:line="83" pos:column="26">0<pos:position pos:line="83" pos:column="27"/></literal></expr>;<pos:position pos:line="83" pos:column="28"/></init> <condition><expr><name pos:line="83" pos:column="29">i<pos:position pos:line="83" pos:column="30"/></name> <operator pos:line="83" pos:column="31">&lt;<pos:position pos:line="83" pos:column="35"/></operator> <name pos:line="83" pos:column="33">delta_search_threads<pos:position pos:line="83" pos:column="53"/></name></expr>;<pos:position pos:line="83" pos:column="54"/></condition> <incr><expr><name pos:line="83" pos:column="55">i<pos:position pos:line="83" pos:column="56"/></name><operator pos:line="83" pos:column="56">++<pos:position pos:line="83" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="83" pos:column="59"/></control>
			<block type="pseudo"><if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><name><name pos:line="84" pos:column="29">p<pos:position pos:line="84" pos:column="30"/></name><index pos:line="84" pos:column="30">[<expr><name pos:line="84" pos:column="31">i<pos:position pos:line="84" pos:column="32"/></name></expr>]<pos:position pos:line="84" pos:column="33"/></index></name><operator pos:line="84" pos:column="33">.<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">remaining<pos:position pos:line="84" pos:column="43"/></name> <operator pos:line="84" pos:column="44">&gt;<pos:position pos:line="84" pos:column="48"/></operator> <literal type="number" pos:line="84" pos:column="46">2<pos:position pos:line="84" pos:column="47"/></literal><operator pos:line="84" pos:column="47">*<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="48">window<pos:position pos:line="84" pos:column="54"/></name> <operator pos:line="84" pos:column="55">&amp;&amp;<pos:position pos:line="84" pos:column="65"/></operator>
			    <operator pos:line="85" pos:column="29">(<pos:position pos:line="85" pos:column="30"/></operator><operator pos:line="85" pos:column="30">!<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="31">victim<pos:position pos:line="85" pos:column="37"/></name> <operator pos:line="85" pos:column="38">||<pos:position pos:line="85" pos:column="40"/></operator> <name><name pos:line="85" pos:column="41">victim<pos:position pos:line="85" pos:column="47"/></name><operator pos:line="85" pos:column="47">-&gt;<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="49">remaining<pos:position pos:line="85" pos:column="58"/></name></name> <operator pos:line="85" pos:column="59">&lt;<pos:position pos:line="85" pos:column="63"/></operator> <name><name pos:line="85" pos:column="61">p<pos:position pos:line="85" pos:column="62"/></name><index pos:line="85" pos:column="62">[<expr><name pos:line="85" pos:column="63">i<pos:position pos:line="85" pos:column="64"/></name></expr>]<pos:position pos:line="85" pos:column="65"/></index></name><operator pos:line="85" pos:column="65">.<pos:position pos:line="85" pos:column="66"/></operator><name pos:line="85" pos:column="66">remaining<pos:position pos:line="85" pos:column="75"/></name><operator pos:line="85" pos:column="75">)<pos:position pos:line="85" pos:column="76"/></operator></expr>)<pos:position pos:line="85" pos:column="77"/></condition><then pos:line="85" pos:column="77">
				<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="33">victim<pos:position pos:line="86" pos:column="39"/></name> <operator pos:line="86" pos:column="40">=<pos:position pos:line="86" pos:column="41"/></operator> <operator pos:line="86" pos:column="42">&amp;<pos:position pos:line="86" pos:column="47"/></operator><name><name pos:line="86" pos:column="43">p<pos:position pos:line="86" pos:column="44"/></name><index pos:line="86" pos:column="44">[<expr><name pos:line="86" pos:column="45">i<pos:position pos:line="86" pos:column="46"/></name></expr>]<pos:position pos:line="86" pos:column="47"/></index></name></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt></block></then></if></block></for>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">victim<pos:position pos:line="87" pos:column="27"/></name></expr>)<pos:position pos:line="87" pos:column="28"/></condition><then pos:line="87" pos:column="28"> <block pos:line="87" pos:column="29">{
			<expr_stmt><expr><name pos:line="88" pos:column="25">sub_size<pos:position pos:line="88" pos:column="33"/></name> <operator pos:line="88" pos:column="34">=<pos:position pos:line="88" pos:column="35"/></operator> <name><name pos:line="88" pos:column="36">victim<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">-&gt;<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="44">remaining<pos:position pos:line="88" pos:column="53"/></name></name> <operator pos:line="88" pos:column="54">/<pos:position pos:line="88" pos:column="55"/></operator> <literal type="number" pos:line="88" pos:column="56">2<pos:position pos:line="88" pos:column="57"/></literal></expr>;<pos:position pos:line="88" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="89" pos:column="25">list<pos:position pos:line="89" pos:column="29"/></name> <operator pos:line="89" pos:column="30">=<pos:position pos:line="89" pos:column="31"/></operator> <name><name pos:line="89" pos:column="32">victim<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">-&gt;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="40">list<pos:position pos:line="89" pos:column="44"/></name></name> <operator pos:line="89" pos:column="45">+<pos:position pos:line="89" pos:column="46"/></operator> <name><name pos:line="89" pos:column="47">victim<pos:position pos:line="89" pos:column="53"/></name><operator pos:line="89" pos:column="53">-&gt;<pos:position pos:line="89" pos:column="58"/></operator><name pos:line="89" pos:column="55">list_size<pos:position pos:line="89" pos:column="64"/></name></name> <operator pos:line="89" pos:column="65">-<pos:position pos:line="89" pos:column="66"/></operator> <name pos:line="89" pos:column="67">sub_size<pos:position pos:line="89" pos:column="75"/></name></expr>;<pos:position pos:line="89" pos:column="76"/></expr_stmt>
			<while pos:line="90" pos:column="25">while <condition pos:line="90" pos:column="31">(<expr><name pos:line="90" pos:column="32">sub_size<pos:position pos:line="90" pos:column="40"/></name> <operator pos:line="90" pos:column="41">&amp;&amp;<pos:position pos:line="90" pos:column="51"/></operator> <name><name pos:line="90" pos:column="44">list<pos:position pos:line="90" pos:column="48"/></name><index pos:line="90" pos:column="48">[<expr><literal type="number" pos:line="90" pos:column="49">0<pos:position pos:line="90" pos:column="50"/></literal></expr>]<pos:position pos:line="90" pos:column="51"/></index></name><operator pos:line="90" pos:column="51">-&gt;<pos:position pos:line="90" pos:column="56"/></operator><name pos:line="90" pos:column="53">hash<pos:position pos:line="90" pos:column="57"/></name> <operator pos:line="90" pos:column="58">&amp;&amp;<pos:position pos:line="90" pos:column="68"/></operator>
			       <name><name pos:line="91" pos:column="32">list<pos:position pos:line="91" pos:column="36"/></name><index pos:line="91" pos:column="36">[<expr><literal type="number" pos:line="91" pos:column="37">0<pos:position pos:line="91" pos:column="38"/></literal></expr>]<pos:position pos:line="91" pos:column="39"/></index></name><operator pos:line="91" pos:column="39">-&gt;<pos:position pos:line="91" pos:column="44"/></operator><name pos:line="91" pos:column="41">hash<pos:position pos:line="91" pos:column="45"/></name> <operator pos:line="91" pos:column="46">==<pos:position pos:line="91" pos:column="48"/></operator> <name><name pos:line="91" pos:column="49">list<pos:position pos:line="91" pos:column="53"/></name><index pos:line="91" pos:column="53">[<expr><operator pos:line="91" pos:column="54">-<pos:position pos:line="91" pos:column="55"/></operator><literal type="number" pos:line="91" pos:column="55">1<pos:position pos:line="91" pos:column="56"/></literal></expr>]<pos:position pos:line="91" pos:column="57"/></index></name><operator pos:line="91" pos:column="57">-&gt;<pos:position pos:line="91" pos:column="62"/></operator><name pos:line="91" pos:column="59">hash<pos:position pos:line="91" pos:column="63"/></name></expr>)<pos:position pos:line="91" pos:column="64"/></condition> <block pos:line="91" pos:column="65">{
				<expr_stmt><expr><name pos:line="92" pos:column="33">list<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">++<pos:position pos:line="92" pos:column="39"/></operator></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
				<expr_stmt><expr><name pos:line="93" pos:column="33">sub_size<pos:position pos:line="93" pos:column="41"/></name><operator pos:line="93" pos:column="41">--<pos:position pos:line="93" pos:column="43"/></operator></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="94" pos:column="26"/></block></while>
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><operator pos:line="95" pos:column="29">!<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="30">sub_size<pos:position pos:line="95" pos:column="38"/></name></expr>)<pos:position pos:line="95" pos:column="39"/></condition><then pos:line="95" pos:column="39"> <block pos:line="95" pos:column="40">{
				<comment type="block" pos:line="96" pos:column="33">/*
				 * It is possible for some "paths" to have
				 * so many objects that no hash boundary
				 * might be found.  Let's just steal the
				 * exact half in that case.
				 */</comment>
				<expr_stmt><expr><name pos:line="102" pos:column="33">sub_size<pos:position pos:line="102" pos:column="41"/></name> <operator pos:line="102" pos:column="42">=<pos:position pos:line="102" pos:column="43"/></operator> <name><name pos:line="102" pos:column="44">victim<pos:position pos:line="102" pos:column="50"/></name><operator pos:line="102" pos:column="50">-&gt;<pos:position pos:line="102" pos:column="55"/></operator><name pos:line="102" pos:column="52">remaining<pos:position pos:line="102" pos:column="61"/></name></name> <operator pos:line="102" pos:column="62">/<pos:position pos:line="102" pos:column="63"/></operator> <literal type="number" pos:line="102" pos:column="64">2<pos:position pos:line="102" pos:column="65"/></literal></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name pos:line="103" pos:column="33">list<pos:position pos:line="103" pos:column="37"/></name> <operator pos:line="103" pos:column="38">-=<pos:position pos:line="103" pos:column="40"/></operator> <name pos:line="103" pos:column="41">sub_size<pos:position pos:line="103" pos:column="49"/></name></expr>;<pos:position pos:line="103" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="104" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="105" pos:column="25">target<pos:position pos:line="105" pos:column="31"/></name><operator pos:line="105" pos:column="31">-&gt;<pos:position pos:line="105" pos:column="36"/></operator><name pos:line="105" pos:column="33">list<pos:position pos:line="105" pos:column="37"/></name></name> <operator pos:line="105" pos:column="38">=<pos:position pos:line="105" pos:column="39"/></operator> <name pos:line="105" pos:column="40">list<pos:position pos:line="105" pos:column="44"/></name></expr>;<pos:position pos:line="105" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="106" pos:column="25">victim<pos:position pos:line="106" pos:column="31"/></name><operator pos:line="106" pos:column="31">-&gt;<pos:position pos:line="106" pos:column="36"/></operator><name pos:line="106" pos:column="33">list_size<pos:position pos:line="106" pos:column="42"/></name></name> <operator pos:line="106" pos:column="43">-=<pos:position pos:line="106" pos:column="45"/></operator> <name pos:line="106" pos:column="46">sub_size<pos:position pos:line="106" pos:column="54"/></name></expr>;<pos:position pos:line="106" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="107" pos:column="25">victim<pos:position pos:line="107" pos:column="31"/></name><operator pos:line="107" pos:column="31">-&gt;<pos:position pos:line="107" pos:column="36"/></operator><name pos:line="107" pos:column="33">remaining<pos:position pos:line="107" pos:column="42"/></name></name> <operator pos:line="107" pos:column="43">-=<pos:position pos:line="107" pos:column="45"/></operator> <name pos:line="107" pos:column="46">sub_size<pos:position pos:line="107" pos:column="54"/></name></expr>;<pos:position pos:line="107" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="109" pos:column="17">target<pos:position pos:line="109" pos:column="23"/></name><operator pos:line="109" pos:column="23">-&gt;<pos:position pos:line="109" pos:column="28"/></operator><name pos:line="109" pos:column="25">list_size<pos:position pos:line="109" pos:column="34"/></name></name> <operator pos:line="109" pos:column="35">=<pos:position pos:line="109" pos:column="36"/></operator> <name pos:line="109" pos:column="37">sub_size<pos:position pos:line="109" pos:column="45"/></name></expr>;<pos:position pos:line="109" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="110" pos:column="17">target<pos:position pos:line="110" pos:column="23"/></name><operator pos:line="110" pos:column="23">-&gt;<pos:position pos:line="110" pos:column="28"/></operator><name pos:line="110" pos:column="25">remaining<pos:position pos:line="110" pos:column="34"/></name></name> <operator pos:line="110" pos:column="35">=<pos:position pos:line="110" pos:column="36"/></operator> <name pos:line="110" pos:column="37">sub_size<pos:position pos:line="110" pos:column="45"/></name></expr>;<pos:position pos:line="110" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="111" pos:column="17">target<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">-&gt;<pos:position pos:line="111" pos:column="28"/></operator><name pos:line="111" pos:column="25">working<pos:position pos:line="111" pos:column="32"/></name></name> <operator pos:line="111" pos:column="33">=<pos:position pos:line="111" pos:column="34"/></operator> <literal type="number" pos:line="111" pos:column="35">1<pos:position pos:line="111" pos:column="36"/></literal></expr>;<pos:position pos:line="111" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="112" pos:column="17">progress_unlock<pos:position pos:line="112" pos:column="32"/></name><argument_list pos:line="112" pos:column="32">()<pos:position pos:line="112" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="35"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="114" pos:column="17">pthread_mutex_lock<pos:position pos:line="114" pos:column="35"/></name><argument_list pos:line="114" pos:column="35">(<argument><expr><operator pos:line="114" pos:column="36">&amp;<pos:position pos:line="114" pos:column="41"/></operator><name><name pos:line="114" pos:column="37">target<pos:position pos:line="114" pos:column="43"/></name><operator pos:line="114" pos:column="43">-&gt;<pos:position pos:line="114" pos:column="48"/></operator><name pos:line="114" pos:column="45">mutex<pos:position pos:line="114" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="115" pos:column="17">target<pos:position pos:line="115" pos:column="23"/></name><operator pos:line="115" pos:column="23">-&gt;<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="25">data_ready<pos:position pos:line="115" pos:column="35"/></name></name> <operator pos:line="115" pos:column="36">=<pos:position pos:line="115" pos:column="37"/></operator> <literal type="number" pos:line="115" pos:column="38">1<pos:position pos:line="115" pos:column="39"/></literal></expr>;<pos:position pos:line="115" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="116" pos:column="17">pthread_cond_signal<pos:position pos:line="116" pos:column="36"/></name><argument_list pos:line="116" pos:column="36">(<argument><expr><operator pos:line="116" pos:column="37">&amp;<pos:position pos:line="116" pos:column="42"/></operator><name><name pos:line="116" pos:column="38">target<pos:position pos:line="116" pos:column="44"/></name><operator pos:line="116" pos:column="44">-&gt;<pos:position pos:line="116" pos:column="49"/></operator><name pos:line="116" pos:column="46">cond<pos:position pos:line="116" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="117" pos:column="17">pthread_mutex_unlock<pos:position pos:line="117" pos:column="37"/></name><argument_list pos:line="117" pos:column="37">(<argument><expr><operator pos:line="117" pos:column="38">&amp;<pos:position pos:line="117" pos:column="43"/></operator><name><name pos:line="117" pos:column="39">target<pos:position pos:line="117" pos:column="45"/></name><operator pos:line="117" pos:column="45">-&gt;<pos:position pos:line="117" pos:column="50"/></operator><name pos:line="117" pos:column="47">mutex<pos:position pos:line="117" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="54"/></expr_stmt>

		<if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><operator pos:line="119" pos:column="21">!<pos:position pos:line="119" pos:column="22"/></operator><name pos:line="119" pos:column="22">sub_size<pos:position pos:line="119" pos:column="30"/></name></expr>)<pos:position pos:line="119" pos:column="31"/></condition><then pos:line="119" pos:column="31"> <block pos:line="119" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">pthread_join<pos:position pos:line="120" pos:column="37"/></name><argument_list pos:line="120" pos:column="37">(<argument><expr><name><name pos:line="120" pos:column="38">target<pos:position pos:line="120" pos:column="44"/></name><operator pos:line="120" pos:column="44">-&gt;<pos:position pos:line="120" pos:column="49"/></operator><name pos:line="120" pos:column="46">thread<pos:position pos:line="120" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="54">NULL<pos:position pos:line="120" pos:column="58"/></name></expr></argument>)<pos:position pos:line="120" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="121" pos:column="25">pthread_cond_destroy<pos:position pos:line="121" pos:column="45"/></name><argument_list pos:line="121" pos:column="45">(<argument><expr><operator pos:line="121" pos:column="46">&amp;<pos:position pos:line="121" pos:column="51"/></operator><name><name pos:line="121" pos:column="47">target<pos:position pos:line="121" pos:column="53"/></name><operator pos:line="121" pos:column="53">-&gt;<pos:position pos:line="121" pos:column="58"/></operator><name pos:line="121" pos:column="55">cond<pos:position pos:line="121" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="122" pos:column="25">pthread_mutex_destroy<pos:position pos:line="122" pos:column="46"/></name><argument_list pos:line="122" pos:column="46">(<argument><expr><operator pos:line="122" pos:column="47">&amp;<pos:position pos:line="122" pos:column="52"/></operator><name><name pos:line="122" pos:column="48">target<pos:position pos:line="122" pos:column="54"/></name><operator pos:line="122" pos:column="54">-&gt;<pos:position pos:line="122" pos:column="59"/></operator><name pos:line="122" pos:column="56">mutex<pos:position pos:line="122" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name pos:line="123" pos:column="25">active_threads<pos:position pos:line="123" pos:column="39"/></name><operator pos:line="123" pos:column="39">--<pos:position pos:line="123" pos:column="41"/></operator></expr>;<pos:position pos:line="123" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="124" pos:column="18"/></block></then></if>
	}<pos:position pos:line="125" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">cleanup_threaded_search<pos:position pos:line="126" pos:column="32"/></name><argument_list pos:line="126" pos:column="32">()<pos:position pos:line="126" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="127" pos:column="9">free<pos:position pos:line="127" pos:column="13"/></name><argument_list pos:line="127" pos:column="13">(<argument><expr><name pos:line="127" pos:column="14">p<pos:position pos:line="127" pos:column="15"/></name></expr></argument>)<pos:position pos:line="127" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="17"/></expr_stmt>
}<pos:position pos:line="128" pos:column="2"/></block></function></unit>

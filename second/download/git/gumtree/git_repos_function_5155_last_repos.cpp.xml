<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5155_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_tempfile_record<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">name<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">prefix<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">CHECKOUT_ALL<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">==<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="29">checkout_stage<pos:position pos:line="5" pos:column="43"/></name></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44"> <block pos:line="5" pos:column="45">{
		<for pos:line="6" pos:column="17">for <control pos:line="6" pos:column="21">(<init><expr><name pos:line="6" pos:column="22">i<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <literal type="number" pos:line="6" pos:column="26">1<pos:position pos:line="6" pos:column="27"/></literal></expr>;<pos:position pos:line="6" pos:column="28"/></init> <condition><expr><name pos:line="6" pos:column="29">i<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">&lt;<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="33">4<pos:position pos:line="6" pos:column="34"/></literal></expr>;<pos:position pos:line="6" pos:column="35"/></condition> <incr><expr><name pos:line="6" pos:column="36">i<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">++<pos:position pos:line="6" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="40"/></control> <block pos:line="6" pos:column="41">{
			<if pos:line="7" pos:column="25">if <condition pos:line="7" pos:column="28">(<expr><name pos:line="7" pos:column="29">i<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">&gt;<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="33">1<pos:position pos:line="7" pos:column="34"/></literal></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="33">putchar<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><literal type="char" pos:line="8" pos:column="41">' '<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt></block></then></if>
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><name><name pos:line="9" pos:column="29">topath<pos:position pos:line="9" pos:column="35"/></name><index pos:line="9" pos:column="35">[<expr><name pos:line="9" pos:column="36">i<pos:position pos:line="9" pos:column="37"/></name></expr>]<pos:position pos:line="9" pos:column="38"/></index><index pos:line="9" pos:column="38">[<expr><literal type="number" pos:line="9" pos:column="39">0<pos:position pos:line="9" pos:column="40"/></literal></expr>]<pos:position pos:line="9" pos:column="41"/></index></name></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="33">fputs<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name><name pos:line="10" pos:column="39">topath<pos:position pos:line="10" pos:column="45"/></name><index pos:line="10" pos:column="45">[<expr><name pos:line="10" pos:column="46">i<pos:position pos:line="10" pos:column="47"/></name></expr>]<pos:position pos:line="10" pos:column="48"/></index></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">stdout<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt></block></then>
			<else pos:line="11" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="33">putchar<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><literal type="char" pos:line="12" pos:column="41">'.'<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt></block></else></if>
		}<pos:position pos:line="13" pos:column="18"/></block></for>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <else pos:line="14" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">fputs<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name><name pos:line="15" pos:column="23">topath<pos:position pos:line="15" pos:column="29"/></name><index pos:line="15" pos:column="29">[<expr><name pos:line="15" pos:column="30">checkout_stage<pos:position pos:line="15" pos:column="44"/></name></expr>]<pos:position pos:line="15" pos:column="45"/></index></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">stdout<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">putchar<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="char" pos:line="17" pos:column="17">'\t'<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">write_name_quoted_relative<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">name<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">prefix<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">stdout<pos:position pos:line="18" pos:column="56"/></name></expr></argument>,
				   <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="36">nul_term_line<pos:position pos:line="19" pos:column="49"/></name></expr> ?<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <expr><literal type="char" pos:line="19" pos:column="52">'\0'<pos:position pos:line="19" pos:column="56"/></literal></expr> <pos:position pos:line="19" pos:column="57"/></then><else pos:line="19" pos:column="57">: <expr><literal type="char" pos:line="19" pos:column="59">'\n'<pos:position pos:line="19" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="25">4<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></condition> <incr><expr><name pos:line="21" pos:column="28">i<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">++<pos:position pos:line="21" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="32"/></control> <block pos:line="21" pos:column="33">{
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">topath<pos:position pos:line="22" pos:column="23"/></name><index pos:line="22" pos:column="23">[<expr><name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name></expr>]<pos:position pos:line="22" pos:column="26"/></index><index pos:line="22" pos:column="26">[<expr><literal type="number" pos:line="22" pos:column="27">0<pos:position pos:line="22" pos:column="28"/></literal></expr>]<pos:position pos:line="22" pos:column="29"/></index></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

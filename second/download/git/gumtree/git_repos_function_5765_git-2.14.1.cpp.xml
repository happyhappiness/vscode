<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5765_git-2.14.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_diff_index<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">argc<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">argv<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">prefix<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">rev_info<pos:position pos:line="3" pos:column="24"/></name></name></type> <name pos:line="3" pos:column="25">rev<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cached<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">result<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">argc<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="21">2<pos:position pos:line="8" pos:column="22"/></literal> <operator pos:line="8" pos:column="23">&amp;&amp;<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="26">!<pos:position pos:line="8" pos:column="27"/></operator><call><name pos:line="8" pos:column="27">strcmp<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name><name pos:line="8" pos:column="34">argv<pos:position pos:line="8" pos:column="38"/></name><index pos:line="8" pos:column="38">[<expr><literal type="number" pos:line="8" pos:column="39">1<pos:position pos:line="8" pos:column="40"/></literal></expr>]<pos:position pos:line="8" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="43">"-h"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">usage<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">diff_cache_usage<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">git_config<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">git_diff_basic_config<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">NULL<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt> <comment type="block" pos:line="11" pos:column="50">/* no "diff" UI options */</comment>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">init_revisions<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="25">rev<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">prefix<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">gitmodules_config<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">()<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">rev<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">.<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">abbrev<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">precompose_argv<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">argc<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">argv<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">argc<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">setup_revisions<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">argc<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">argv<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="45">rev<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">NULL<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">1<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">argc<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></condition> <incr><expr><name pos:line="18" pos:column="31">i<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">++<pos:position pos:line="18" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="35"/></control> <block pos:line="18" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="19" pos:column="17">const<pos:position pos:line="19" pos:column="22"/></specifier> <name pos:line="19" pos:column="23">char<pos:position pos:line="19" pos:column="27"/></name> <modifier pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></modifier></type><name pos:line="19" pos:column="29">arg<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><name><name pos:line="19" pos:column="35">argv<pos:position pos:line="19" pos:column="39"/></name><index pos:line="19" pos:column="39">[<expr><name pos:line="19" pos:column="40">i<pos:position pos:line="19" pos:column="41"/></name></expr>]<pos:position pos:line="19" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="19" pos:column="43"/></decl_stmt>

		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><call><name pos:line="21" pos:column="22">strcmp<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">arg<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="34">"--cached"<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="46"/></condition><then pos:line="21" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">cached<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator> <literal type="number" pos:line="22" pos:column="34">1<pos:position pos:line="22" pos:column="35"/></literal></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt></block></then>
		<else pos:line="23" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">usage<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">diff_cache_usage<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt></block></else></if>
	}<pos:position pos:line="25" pos:column="10"/></block></for>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name><name pos:line="26" pos:column="14">rev<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">diffopt<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">.<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">output_format<pos:position pos:line="26" pos:column="39"/></name></name></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="17">rev<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">diffopt<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">.<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">output_format<pos:position pos:line="27" pos:column="42"/></name></name> <operator pos:line="27" pos:column="43">=<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="45">DIFF_FORMAT_RAW<pos:position pos:line="27" pos:column="60"/></name></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/*
	 * Make sure there is one revision (i.e. pending object),
	 * and there is no revision filtering parameters.
	 */</comment>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">rev<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">pending<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">nr<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">!=<pos:position pos:line="33" pos:column="30"/></operator> <literal type="number" pos:line="33" pos:column="31">1<pos:position pos:line="33" pos:column="32"/></literal> <operator pos:line="33" pos:column="33">||<pos:position pos:line="33" pos:column="35"/></operator>
	    <name><name pos:line="34" pos:column="13">rev<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">.<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">max_count<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">!=<pos:position pos:line="34" pos:column="29"/></operator> <operator pos:line="34" pos:column="30">-<pos:position pos:line="34" pos:column="31"/></operator><literal type="number" pos:line="34" pos:column="31">1<pos:position pos:line="34" pos:column="32"/></literal> <operator pos:line="34" pos:column="33">||<pos:position pos:line="34" pos:column="35"/></operator> <name><name pos:line="34" pos:column="36">rev<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">.<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="40">min_age<pos:position pos:line="34" pos:column="47"/></name></name> <operator pos:line="34" pos:column="48">!=<pos:position pos:line="34" pos:column="50"/></operator> <operator pos:line="34" pos:column="51">-<pos:position pos:line="34" pos:column="52"/></operator><literal type="number" pos:line="34" pos:column="52">1<pos:position pos:line="34" pos:column="53"/></literal> <operator pos:line="34" pos:column="54">||<pos:position pos:line="34" pos:column="56"/></operator> <name><name pos:line="34" pos:column="57">rev<pos:position pos:line="34" pos:column="60"/></name><operator pos:line="34" pos:column="60">.<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="61">max_age<pos:position pos:line="34" pos:column="68"/></name></name> <operator pos:line="34" pos:column="69">!=<pos:position pos:line="34" pos:column="71"/></operator> <operator pos:line="34" pos:column="72">-<pos:position pos:line="34" pos:column="73"/></operator><literal type="number" pos:line="34" pos:column="73">1<pos:position pos:line="34" pos:column="74"/></literal></expr>)<pos:position pos:line="34" pos:column="75"/></condition><then pos:line="34" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">usage<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">diff_cache_usage<pos:position pos:line="35" pos:column="39"/></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">cached<pos:position pos:line="36" pos:column="20"/></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21"> <block pos:line="36" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">setup_work_tree<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">()<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">read_cache_preload<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><operator pos:line="38" pos:column="40">&amp;<pos:position pos:line="38" pos:column="45"/></operator><name><name pos:line="38" pos:column="41">rev<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">.<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">diffopt<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">.<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">pathspec<pos:position pos:line="38" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call> <operator pos:line="38" pos:column="63">&lt;<pos:position pos:line="38" pos:column="67"/></operator> <literal type="number" pos:line="38" pos:column="65">0<pos:position pos:line="38" pos:column="66"/></literal></expr>)<pos:position pos:line="38" pos:column="67"/></condition><then pos:line="38" pos:column="67"> <block pos:line="38" pos:column="68">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">perror<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><literal type="string" pos:line="39" pos:column="32">"read_cache_preload"<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
			<return pos:line="40" pos:column="25">return <expr><operator pos:line="40" pos:column="32">-<pos:position pos:line="40" pos:column="33"/></operator><literal type="number" pos:line="40" pos:column="33">1<pos:position pos:line="40" pos:column="34"/></literal></expr>;<pos:position pos:line="40" pos:column="35"/></return>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <elseif pos:line="42" pos:column="11">else <if pos:line="42" pos:column="16">if <condition pos:line="42" pos:column="19">(<expr><call><name pos:line="42" pos:column="20">read_cache<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">()<pos:position pos:line="42" pos:column="32"/></argument_list></call> <operator pos:line="42" pos:column="33">&lt;<pos:position pos:line="42" pos:column="37"/></operator> <literal type="number" pos:line="42" pos:column="35">0<pos:position pos:line="42" pos:column="36"/></literal></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37"> <block pos:line="42" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">perror<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><literal type="string" pos:line="43" pos:column="24">"read_cache"<pos:position pos:line="43" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">-<pos:position pos:line="44" pos:column="25"/></operator><literal type="number" pos:line="44" pos:column="25">1<pos:position pos:line="44" pos:column="26"/></literal></expr>;<pos:position pos:line="44" pos:column="27"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><name pos:line="46" pos:column="9">result<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">run_diff_index<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><operator pos:line="46" pos:column="33">&amp;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="34">rev<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">cached<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>
	<return pos:line="47" pos:column="9">return <expr><call><name pos:line="47" pos:column="16">diff_result_code<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><operator pos:line="47" pos:column="33">&amp;<pos:position pos:line="47" pos:column="38"/></operator><name><name pos:line="47" pos:column="34">rev<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">.<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">diffopt<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">result<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

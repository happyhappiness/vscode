<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_2197.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">option_parse_push_signed<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">option<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">opt<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">arg<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">unset<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">unset<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
		<expr_stmt><expr><operator pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></operator><operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">int<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><operator pos:line="5" pos:column="24">)<pos:position pos:line="5" pos:column="25"/></operator><operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><name><name pos:line="5" pos:column="26">opt<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">value<pos:position pos:line="5" pos:column="36"/></name></name><operator pos:line="5" pos:column="36">)<pos:position pos:line="5" pos:column="37"/></operator> <operator pos:line="5" pos:column="38">=<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">SEND_PACK_PUSH_CERT_NEVER<pos:position pos:line="5" pos:column="65"/></name></expr>;<pos:position pos:line="5" pos:column="66"/></expr_stmt>
		<return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<switch pos:line="8" pos:column="9">switch <condition pos:line="8" pos:column="16">(<expr><call><name pos:line="8" pos:column="17">git_parse_maybe_bool<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">arg<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="43"/></condition> <block pos:line="8" pos:column="44">{
	<case pos:line="9" pos:column="9">case <expr><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal></expr>:<pos:position pos:line="9" pos:column="16"/></case>
		<expr_stmt><expr><operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">int<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">(<pos:position pos:line="10" pos:column="26"/></operator><name><name pos:line="10" pos:column="26">opt<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">value<pos:position pos:line="10" pos:column="36"/></name></name><operator pos:line="10" pos:column="36">)<pos:position pos:line="10" pos:column="37"/></operator> <operator pos:line="10" pos:column="38">=<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="40">SEND_PACK_PUSH_CERT_ALWAYS<pos:position pos:line="10" pos:column="66"/></name></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return>
	<case pos:line="12" pos:column="9">case <expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>:<pos:position pos:line="12" pos:column="16"/></case>
		<expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">int<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></operator><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="26">opt<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">value<pos:position pos:line="13" pos:column="36"/></name></name><operator pos:line="13" pos:column="36">)<pos:position pos:line="13" pos:column="37"/></operator> <operator pos:line="13" pos:column="38">=<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">SEND_PACK_PUSH_CERT_NEVER<pos:position pos:line="13" pos:column="65"/></name></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></switch>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">strcasecmp<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><literal type="string" pos:line="16" pos:column="25">"if-asked"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">arg<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42"> <block pos:line="16" pos:column="43">{
		<expr_stmt><expr><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">int<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></operator><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">(<pos:position pos:line="17" pos:column="26"/></operator><name><name pos:line="17" pos:column="26">opt<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">value<pos:position pos:line="17" pos:column="36"/></name></name><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="38">=<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">SEND_PACK_PUSH_CERT_IF_ASKED<pos:position pos:line="17" pos:column="68"/></name></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">die<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"bad %s argument: %s"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="36">opt<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">long_name<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">arg<pos:position pos:line="20" pos:column="55"/></name></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

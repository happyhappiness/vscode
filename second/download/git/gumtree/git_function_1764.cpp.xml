<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_1764.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">expire_reflog<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ref<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">sha1<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">int<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">unused<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="82">void<pos:position pos:line="1" pos:column="86"/></name> <modifier pos:line="1" pos:column="87">*<pos:position pos:line="1" pos:column="88"/></modifier></type><name pos:line="1" pos:column="88">cb_data<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">cmd_reflog_expire_cb<pos:position pos:line="3" pos:column="36"/></name></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">cmd<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><name pos:line="3" pos:column="44">cb_data<pos:position pos:line="3" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">expire_reflog_cb<pos:position pos:line="4" pos:column="32"/></name></name></type> <name pos:line="4" pos:column="33">cb<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ref_lock<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">lock<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">log_file<pos:position pos:line="6" pos:column="23"/></name></decl>, <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="26">newlog_path<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">= <expr><name pos:line="6" pos:column="40">NULL<pos:position pos:line="6" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">commit<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">tip_commit<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">commit_list<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">tips<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">status<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><operator pos:line="11" pos:column="16">&amp;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="17">cb<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="24">sizeof<argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">cb<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="13" pos:column="9">/*
	 * we take the lock for the ref itself to prevent it from
	 * getting updated.
	 */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">lock<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name pos:line="17" pos:column="16">lock_any_ref_for_update<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">ref<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">sha1<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="51">0<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">NULL<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">lock<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><call><name pos:line="19" pos:column="24">error<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="string" pos:line="19" pos:column="30">"cannot lock ref '%s'"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">ref<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="20" pos:column="9">log_file<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">git_pathdup<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="string" pos:line="20" pos:column="32">"logs/%s"<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">ref<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">reflog_exists<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">ref<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33">
		<block type="pseudo"><goto pos:line="22" pos:column="17">goto <name pos:line="22" pos:column="22">finish<pos:position pos:line="22" pos:column="28"/></name>;<pos:position pos:line="22" pos:column="29"/></goto></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">cmd<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">dry_run<pos:position pos:line="23" pos:column="26"/></name></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">newlog_path<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">git_pathdup<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><literal type="string" pos:line="24" pos:column="43">"logs/%s.lock"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="59">ref<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">cb<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">newlog<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="29">fopen<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">newlog_path<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="48">"w"<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="28" pos:column="9">cb<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">cmd<pos:position pos:line="28" pos:column="15"/></name></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">cmd<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="14">cmd<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">expire_unreachable<pos:position pos:line="30" pos:column="37"/></name></name> <operator pos:line="30" pos:column="38">||<pos:position pos:line="30" pos:column="40"/></operator> <operator pos:line="30" pos:column="41">!<pos:position pos:line="30" pos:column="42"/></operator><call><name pos:line="30" pos:column="42">strcmp<pos:position pos:line="30" pos:column="48"/></name><argument_list pos:line="30" pos:column="48">(<argument><expr><name pos:line="30" pos:column="49">ref<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="54">"HEAD"<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="62"/></condition><then pos:line="30" pos:column="62"> <block pos:line="30" pos:column="63">{
		<expr_stmt><expr><name pos:line="31" pos:column="17">tip_commit<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">NULL<pos:position pos:line="31" pos:column="34"/></name></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">cb<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">unreachable_expire_kind<pos:position pos:line="32" pos:column="43"/></name></name> <operator pos:line="32" pos:column="44">=<pos:position pos:line="32" pos:column="45"/></operator> <name pos:line="32" pos:column="46">UE_HEAD<pos:position pos:line="32" pos:column="53"/></name></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">tip_commit<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <call><name pos:line="34" pos:column="30">lookup_commit_reference_gently<pos:position pos:line="34" pos:column="60"/></name><argument_list pos:line="34" pos:column="60">(<argument><expr><name pos:line="34" pos:column="61">sha1<pos:position pos:line="34" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="67">1<pos:position pos:line="34" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">tip_commit<pos:position pos:line="35" pos:column="32"/></name></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="25">cb<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">.<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">unreachable_expire_kind<pos:position pos:line="36" pos:column="51"/></name></name> <operator pos:line="36" pos:column="52">=<pos:position pos:line="36" pos:column="53"/></operator> <name pos:line="36" pos:column="54">UE_ALWAYS<pos:position pos:line="36" pos:column="63"/></name></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt></block></then>
		<else pos:line="37" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="25">cb<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">.<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">unreachable_expire_kind<pos:position pos:line="38" pos:column="51"/></name></name> <operator pos:line="38" pos:column="52">=<pos:position pos:line="38" pos:column="53"/></operator> <name pos:line="38" pos:column="54">UE_NORMAL<pos:position pos:line="38" pos:column="63"/></name></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt></block></else></if>
	}<pos:position pos:line="39" pos:column="10"/></block></else></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">cmd<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">expire_unreachable<pos:position pos:line="41" pos:column="36"/></name></name> <operator pos:line="41" pos:column="37">&lt;=<pos:position pos:line="41" pos:column="42"/></operator> <name><name pos:line="41" pos:column="40">cmd<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="45">expire_total<pos:position pos:line="41" pos:column="57"/></name></name></expr>)<pos:position pos:line="41" pos:column="58"/></condition><then pos:line="41" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="17">cb<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">unreachable_expire_kind<pos:position pos:line="42" pos:column="43"/></name></name> <operator pos:line="42" pos:column="44">=<pos:position pos:line="42" pos:column="45"/></operator> <name pos:line="42" pos:column="46">UE_ALWAYS<pos:position pos:line="42" pos:column="55"/></name></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="44" pos:column="9">cb<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">mark_list<pos:position pos:line="44" pos:column="21"/></name></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">NULL<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="45" pos:column="9">tips<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name pos:line="45" pos:column="16">NULL<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">cb<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">unreachable_expire_kind<pos:position pos:line="46" pos:column="39"/></name></name> <operator pos:line="46" pos:column="40">!=<pos:position pos:line="46" pos:column="42"/></operator> <name pos:line="46" pos:column="43">UE_ALWAYS<pos:position pos:line="46" pos:column="52"/></name></expr>)<pos:position pos:line="46" pos:column="53"/></condition><then pos:line="46" pos:column="53"> <block pos:line="46" pos:column="54">{
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">cb<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">unreachable_expire_kind<pos:position pos:line="47" pos:column="47"/></name></name> <operator pos:line="47" pos:column="48">==<pos:position pos:line="47" pos:column="50"/></operator> <name pos:line="47" pos:column="51">UE_HEAD<pos:position pos:line="47" pos:column="58"/></name></expr>)<pos:position pos:line="47" pos:column="59"/></condition><then pos:line="47" pos:column="59"> <block pos:line="47" pos:column="60">{
			<decl_stmt><decl><type><name><name pos:line="48" pos:column="25">struct<pos:position pos:line="48" pos:column="31"/></name> <name pos:line="48" pos:column="32">commit_list<pos:position pos:line="48" pos:column="43"/></name></name> <modifier pos:line="48" pos:column="44">*<pos:position pos:line="48" pos:column="45"/></modifier></type><name pos:line="48" pos:column="45">elem<pos:position pos:line="48" pos:column="49"/></name></decl>;<pos:position pos:line="48" pos:column="50"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">for_each_ref<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">push_tip_to_list<pos:position pos:line="49" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="56">&amp;<pos:position pos:line="49" pos:column="61"/></operator><name pos:line="49" pos:column="57">tips<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="63"/></expr_stmt>
			<for pos:line="50" pos:column="25">for <control pos:line="50" pos:column="29">(<init><expr><name pos:line="50" pos:column="30">elem<pos:position pos:line="50" pos:column="34"/></name> <operator pos:line="50" pos:column="35">=<pos:position pos:line="50" pos:column="36"/></operator> <name pos:line="50" pos:column="37">tips<pos:position pos:line="50" pos:column="41"/></name></expr>;<pos:position pos:line="50" pos:column="42"/></init> <condition><expr><name pos:line="50" pos:column="43">elem<pos:position pos:line="50" pos:column="47"/></name></expr>;<pos:position pos:line="50" pos:column="48"/></condition> <incr><expr><name pos:line="50" pos:column="49">elem<pos:position pos:line="50" pos:column="53"/></name> <operator pos:line="50" pos:column="54">=<pos:position pos:line="50" pos:column="55"/></operator> <name><name pos:line="50" pos:column="56">elem<pos:position pos:line="50" pos:column="60"/></name><operator pos:line="50" pos:column="60">-&gt;<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="62">next<pos:position pos:line="50" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="50" pos:column="67"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="33">commit_list_insert<pos:position pos:line="51" pos:column="51"/></name><argument_list pos:line="51" pos:column="51">(<argument><expr><name><name pos:line="51" pos:column="52">elem<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">item<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="64">&amp;<pos:position pos:line="51" pos:column="69"/></operator><name><name pos:line="51" pos:column="65">cb<pos:position pos:line="51" pos:column="67"/></name><operator pos:line="51" pos:column="67">.<pos:position pos:line="51" pos:column="68"/></operator><name pos:line="51" pos:column="68">mark_list<pos:position pos:line="51" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="79"/></expr_stmt></block></for>
		}<pos:position pos:line="52" pos:column="18"/></block></then> <else pos:line="52" pos:column="19">else <block pos:line="52" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">commit_list_insert<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><name pos:line="53" pos:column="44">tip_commit<pos:position pos:line="53" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="56">&amp;<pos:position pos:line="53" pos:column="61"/></operator><name><name pos:line="53" pos:column="57">cb<pos:position pos:line="53" pos:column="59"/></name><operator pos:line="53" pos:column="59">.<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="60">mark_list<pos:position pos:line="53" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="55" pos:column="17">cb<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">.<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="20">mark_limit<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">=<pos:position pos:line="55" pos:column="32"/></operator> <name><name pos:line="55" pos:column="33">cmd<pos:position pos:line="55" pos:column="36"/></name><operator pos:line="55" pos:column="36">-&gt;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="38">expire_total<pos:position pos:line="55" pos:column="50"/></name></name></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">mark_reachable<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><operator pos:line="56" pos:column="32">&amp;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="33">cb<pos:position pos:line="56" pos:column="35"/></name></expr></argument>)<pos:position pos:line="56" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="59" pos:column="9">for_each_reflog_ent<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">ref<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">expire_reflog_ent<pos:position pos:line="59" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="53">&amp;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="54">cb<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">cb<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">unreachable_expire_kind<pos:position pos:line="61" pos:column="39"/></name></name> <operator pos:line="61" pos:column="40">!=<pos:position pos:line="61" pos:column="42"/></operator> <name pos:line="61" pos:column="43">UE_ALWAYS<pos:position pos:line="61" pos:column="52"/></name></expr>)<pos:position pos:line="61" pos:column="53"/></condition><then pos:line="61" pos:column="53"> <block pos:line="61" pos:column="54">{
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name><name pos:line="62" pos:column="21">cb<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">.<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="24">unreachable_expire_kind<pos:position pos:line="62" pos:column="47"/></name></name> <operator pos:line="62" pos:column="48">==<pos:position pos:line="62" pos:column="50"/></operator> <name pos:line="62" pos:column="51">UE_HEAD<pos:position pos:line="62" pos:column="58"/></name></expr>)<pos:position pos:line="62" pos:column="59"/></condition><then pos:line="62" pos:column="59"> <block pos:line="62" pos:column="60">{
			<decl_stmt><decl><type><name><name pos:line="63" pos:column="25">struct<pos:position pos:line="63" pos:column="31"/></name> <name pos:line="63" pos:column="32">commit_list<pos:position pos:line="63" pos:column="43"/></name></name> <modifier pos:line="63" pos:column="44">*<pos:position pos:line="63" pos:column="45"/></modifier></type><name pos:line="63" pos:column="45">elem<pos:position pos:line="63" pos:column="49"/></name></decl>;<pos:position pos:line="63" pos:column="50"/></decl_stmt>
			<for pos:line="64" pos:column="25">for <control pos:line="64" pos:column="29">(<init><expr><name pos:line="64" pos:column="30">elem<pos:position pos:line="64" pos:column="34"/></name> <operator pos:line="64" pos:column="35">=<pos:position pos:line="64" pos:column="36"/></operator> <name pos:line="64" pos:column="37">tips<pos:position pos:line="64" pos:column="41"/></name></expr>;<pos:position pos:line="64" pos:column="42"/></init> <condition><expr><name pos:line="64" pos:column="43">elem<pos:position pos:line="64" pos:column="47"/></name></expr>;<pos:position pos:line="64" pos:column="48"/></condition> <incr><expr><name pos:line="64" pos:column="49">elem<pos:position pos:line="64" pos:column="53"/></name> <operator pos:line="64" pos:column="54">=<pos:position pos:line="64" pos:column="55"/></operator> <name><name pos:line="64" pos:column="56">elem<pos:position pos:line="64" pos:column="60"/></name><operator pos:line="64" pos:column="60">-&gt;<pos:position pos:line="64" pos:column="65"/></operator><name pos:line="64" pos:column="62">next<pos:position pos:line="64" pos:column="66"/></name></name></expr></incr>)<pos:position pos:line="64" pos:column="67"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="33">clear_commit_marks<pos:position pos:line="65" pos:column="51"/></name><argument_list pos:line="65" pos:column="51">(<argument><expr><name><name pos:line="65" pos:column="52">elem<pos:position pos:line="65" pos:column="56"/></name><operator pos:line="65" pos:column="56">-&gt;<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="58">item<pos:position pos:line="65" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">REACHABLE<pos:position pos:line="65" pos:column="73"/></name></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="75"/></expr_stmt></block></for>
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">free_commit_list<pos:position pos:line="66" pos:column="41"/></name><argument_list pos:line="66" pos:column="41">(<argument><expr><name pos:line="66" pos:column="42">tips<pos:position pos:line="66" pos:column="46"/></name></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="67" pos:column="18"/></block></then> <else pos:line="67" pos:column="19">else <block pos:line="67" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">clear_commit_marks<pos:position pos:line="68" pos:column="43"/></name><argument_list pos:line="68" pos:column="43">(<argument><expr><name pos:line="68" pos:column="44">tip_commit<pos:position pos:line="68" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="56">REACHABLE<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="69" pos:column="18"/></block></else></if>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
 <label><name pos:line="71" pos:column="2">finish<pos:position pos:line="71" pos:column="8"/></name>:<pos:position pos:line="71" pos:column="9"/></label>
	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name><name pos:line="72" pos:column="13">cb<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">.<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">newlog<pos:position pos:line="72" pos:column="22"/></name></name></expr>)<pos:position pos:line="72" pos:column="23"/></condition><then pos:line="72" pos:column="23"> <block pos:line="72" pos:column="24">{
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><call><name pos:line="73" pos:column="21">fclose<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name><name pos:line="73" pos:column="28">cb<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">.<pos:position pos:line="73" pos:column="31"/></operator><name pos:line="73" pos:column="31">newlog<pos:position pos:line="73" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="39"/></condition><then pos:line="73" pos:column="39"> <block pos:line="73" pos:column="40">{
			<expr_stmt><expr><name pos:line="74" pos:column="25">status<pos:position pos:line="74" pos:column="31"/></name> <operator pos:line="74" pos:column="32">|=<pos:position pos:line="74" pos:column="34"/></operator> <call><name pos:line="74" pos:column="35">error<pos:position pos:line="74" pos:column="40"/></name><argument_list pos:line="74" pos:column="40">(<argument><expr><literal type="string" pos:line="74" pos:column="41">"%s: %s"<pos:position pos:line="74" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="51">strerror<pos:position pos:line="74" pos:column="59"/></name><argument_list pos:line="74" pos:column="59">(<argument><expr><name pos:line="74" pos:column="60">errno<pos:position pos:line="74" pos:column="65"/></name></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="75" pos:column="41">newlog_path<pos:position pos:line="75" pos:column="52"/></name></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">unlink<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">newlog_path<pos:position pos:line="76" pos:column="43"/></name></expr></argument>)<pos:position pos:line="76" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="77" pos:column="18"/></block></then> <elseif pos:line="77" pos:column="19">else <if pos:line="77" pos:column="24">if <condition pos:line="77" pos:column="27">(<expr><name><name pos:line="77" pos:column="28">cmd<pos:position pos:line="77" pos:column="31"/></name><operator pos:line="77" pos:column="31">-&gt;<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="33">updateref<pos:position pos:line="77" pos:column="42"/></name></name> <operator pos:line="77" pos:column="43">&amp;&amp;<pos:position pos:line="77" pos:column="53"/></operator>
			<operator pos:line="78" pos:column="25">(<pos:position pos:line="78" pos:column="26"/></operator><call><name pos:line="78" pos:column="26">write_in_full<pos:position pos:line="78" pos:column="39"/></name><argument_list pos:line="78" pos:column="39">(<argument><expr><name><name pos:line="78" pos:column="40">lock<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">lock_fd<pos:position pos:line="78" pos:column="53"/></name></name></expr></argument>,
				<argument><expr><call><name pos:line="79" pos:column="33">sha1_to_hex<pos:position pos:line="79" pos:column="44"/></name><argument_list pos:line="79" pos:column="44">(<argument><expr><name><name pos:line="79" pos:column="45">cb<pos:position pos:line="79" pos:column="47"/></name><operator pos:line="79" pos:column="47">.<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="48">last_kept_sha1<pos:position pos:line="79" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="65">40<pos:position pos:line="79" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="68"/></argument_list></call> <operator pos:line="79" pos:column="69">!=<pos:position pos:line="79" pos:column="71"/></operator> <literal type="number" pos:line="79" pos:column="72">40<pos:position pos:line="79" pos:column="74"/></literal> <operator pos:line="79" pos:column="75">||<pos:position pos:line="79" pos:column="77"/></operator>
			 <call><name pos:line="80" pos:column="26">write_str_in_full<pos:position pos:line="80" pos:column="43"/></name><argument_list pos:line="80" pos:column="43">(<argument><expr><name><name pos:line="80" pos:column="44">lock<pos:position pos:line="80" pos:column="48"/></name><operator pos:line="80" pos:column="48">-&gt;<pos:position pos:line="80" pos:column="53"/></operator><name pos:line="80" pos:column="50">lock_fd<pos:position pos:line="80" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="59">"\n"<pos:position pos:line="80" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></call> <operator pos:line="80" pos:column="65">!=<pos:position pos:line="80" pos:column="67"/></operator> <literal type="number" pos:line="80" pos:column="68">1<pos:position pos:line="80" pos:column="69"/></literal> <operator pos:line="80" pos:column="70">||<pos:position pos:line="80" pos:column="72"/></operator>
			 <call><name pos:line="81" pos:column="26">close_ref<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name pos:line="81" pos:column="36">lock<pos:position pos:line="81" pos:column="40"/></name></expr></argument>)<pos:position pos:line="81" pos:column="41"/></argument_list></call> <operator pos:line="81" pos:column="42">&lt;<pos:position pos:line="81" pos:column="46"/></operator> <literal type="number" pos:line="81" pos:column="44">0<pos:position pos:line="81" pos:column="45"/></literal><operator pos:line="81" pos:column="45">)<pos:position pos:line="81" pos:column="46"/></operator></expr>)<pos:position pos:line="81" pos:column="47"/></condition><then pos:line="81" pos:column="47"> <block pos:line="81" pos:column="48">{
			<expr_stmt><expr><name pos:line="82" pos:column="25">status<pos:position pos:line="82" pos:column="31"/></name> <operator pos:line="82" pos:column="32">|=<pos:position pos:line="82" pos:column="34"/></operator> <call><name pos:line="82" pos:column="35">error<pos:position pos:line="82" pos:column="40"/></name><argument_list pos:line="82" pos:column="40">(<argument><expr><literal type="string" pos:line="82" pos:column="41">"Couldn't write %s"<pos:position pos:line="82" pos:column="60"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="83" pos:column="41">lock<pos:position pos:line="83" pos:column="45"/></name><operator pos:line="83" pos:column="45">-&gt;<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="47">lk<pos:position pos:line="83" pos:column="49"/></name><operator pos:line="83" pos:column="49">-&gt;<pos:position pos:line="83" pos:column="54"/></operator><name pos:line="83" pos:column="51">filename<pos:position pos:line="83" pos:column="59"/></name><operator pos:line="83" pos:column="59">.<pos:position pos:line="83" pos:column="60"/></operator><name pos:line="83" pos:column="60">buf<pos:position pos:line="83" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">unlink<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">(<argument><expr><name pos:line="84" pos:column="32">newlog_path<pos:position pos:line="84" pos:column="43"/></name></expr></argument>)<pos:position pos:line="84" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="85" pos:column="18"/></block></then></if></elseif> <elseif pos:line="85" pos:column="19">else <if pos:line="85" pos:column="24">if <condition pos:line="85" pos:column="27">(<expr><call><name pos:line="85" pos:column="28">rename<pos:position pos:line="85" pos:column="34"/></name><argument_list pos:line="85" pos:column="34">(<argument><expr><name pos:line="85" pos:column="35">newlog_path<pos:position pos:line="85" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="48">log_file<pos:position pos:line="85" pos:column="56"/></name></expr></argument>)<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="58"/></condition><then pos:line="85" pos:column="58"> <block pos:line="85" pos:column="59">{
			<expr_stmt><expr><name pos:line="86" pos:column="25">status<pos:position pos:line="86" pos:column="31"/></name> <operator pos:line="86" pos:column="32">|=<pos:position pos:line="86" pos:column="34"/></operator> <call><name pos:line="86" pos:column="35">error<pos:position pos:line="86" pos:column="40"/></name><argument_list pos:line="86" pos:column="40">(<argument><expr><literal type="string" pos:line="86" pos:column="41">"cannot rename %s to %s"<pos:position pos:line="86" pos:column="65"/></literal></expr></argument>,
					<argument><expr><name pos:line="87" pos:column="41">newlog_path<pos:position pos:line="87" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="54">log_file<pos:position pos:line="87" pos:column="62"/></name></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">unlink<pos:position pos:line="88" pos:column="31"/></name><argument_list pos:line="88" pos:column="31">(<argument><expr><name pos:line="88" pos:column="32">newlog_path<pos:position pos:line="88" pos:column="43"/></name></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="89" pos:column="18"/></block></then></if></elseif> <elseif pos:line="89" pos:column="19">else <if pos:line="89" pos:column="24">if <condition pos:line="89" pos:column="27">(<expr><name><name pos:line="89" pos:column="28">cmd<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">-&gt;<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="33">updateref<pos:position pos:line="89" pos:column="42"/></name></name> <operator pos:line="89" pos:column="43">&amp;&amp;<pos:position pos:line="89" pos:column="53"/></operator> <call><name pos:line="89" pos:column="46">commit_ref<pos:position pos:line="89" pos:column="56"/></name><argument_list pos:line="89" pos:column="56">(<argument><expr><name pos:line="89" pos:column="57">lock<pos:position pos:line="89" pos:column="61"/></name></expr></argument>)<pos:position pos:line="89" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="63"/></condition><then pos:line="89" pos:column="63"> <block pos:line="89" pos:column="64">{
			<expr_stmt><expr><name pos:line="90" pos:column="25">status<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">|=<pos:position pos:line="90" pos:column="34"/></operator> <call><name pos:line="90" pos:column="35">error<pos:position pos:line="90" pos:column="40"/></name><argument_list pos:line="90" pos:column="40">(<argument><expr><literal type="string" pos:line="90" pos:column="41">"Couldn't set %s"<pos:position pos:line="90" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="60">lock<pos:position pos:line="90" pos:column="64"/></name><operator pos:line="90" pos:column="64">-&gt;<pos:position pos:line="90" pos:column="69"/></operator><name pos:line="90" pos:column="66">ref_name<pos:position pos:line="90" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="91" pos:column="18"/></block></then></if></elseif> <else pos:line="91" pos:column="19">else <block pos:line="91" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">adjust_shared_perm<pos:position pos:line="92" pos:column="43"/></name><argument_list pos:line="92" pos:column="43">(<argument><expr><name pos:line="92" pos:column="44">log_file<pos:position pos:line="92" pos:column="52"/></name></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="93" pos:column="18"/></block></else></if>
	}<pos:position pos:line="94" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="95" pos:column="9">free<pos:position pos:line="95" pos:column="13"/></name><argument_list pos:line="95" pos:column="13">(<argument><expr><name pos:line="95" pos:column="14">newlog_path<pos:position pos:line="95" pos:column="25"/></name></expr></argument>)<pos:position pos:line="95" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">free<pos:position pos:line="96" pos:column="13"/></name><argument_list pos:line="96" pos:column="13">(<argument><expr><name pos:line="96" pos:column="14">log_file<pos:position pos:line="96" pos:column="22"/></name></expr></argument>)<pos:position pos:line="96" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">unlock_ref<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><name pos:line="97" pos:column="20">lock<pos:position pos:line="97" pos:column="24"/></name></expr></argument>)<pos:position pos:line="97" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="26"/></expr_stmt>
	<return pos:line="98" pos:column="9">return <expr><name pos:line="98" pos:column="16">status<pos:position pos:line="98" pos:column="22"/></name></expr>;<pos:position pos:line="98" pos:column="23"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

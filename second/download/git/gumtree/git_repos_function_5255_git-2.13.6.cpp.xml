<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5255_git-2.13.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_init_db<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">argv<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">prefix<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">git_dir<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">real_git_dir<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">NULL<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">work_tree<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">template_dir<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">flags<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name><name pos:line="8" pos:column="15">struct<pos:position pos:line="8" pos:column="21"/></name> <name pos:line="8" pos:column="22">option<pos:position pos:line="8" pos:column="28"/></name></name></type> <name><name pos:line="8" pos:column="29">init_db_options<pos:position pos:line="8" pos:column="44"/></name><index pos:line="8" pos:column="44">[]<pos:position pos:line="8" pos:column="46"/></index></name> <init pos:line="8" pos:column="47">= <expr><block pos:line="8" pos:column="49">{
		<expr><call><name pos:line="9" pos:column="17">OPT_STRING<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"template"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">template_dir<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="58">N_<pos:position pos:line="9" pos:column="60"/></name><argument_list pos:line="9" pos:column="60">(<argument><expr><literal type="string" pos:line="9" pos:column="61">"template-directory"<pos:position pos:line="9" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="10" pos:column="33">N_<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><literal type="string" pos:line="10" pos:column="36">"directory from which templates will be used"<pos:position pos:line="10" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="83"/></argument_list></call></expr>,
		<expr><call><name pos:line="11" pos:column="17">OPT_SET_INT<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"bare"<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">is_bare_repository_cfg<pos:position pos:line="11" pos:column="63"/></name></expr></argument>,
				<argument><expr><call><name pos:line="12" pos:column="33">N_<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><literal type="string" pos:line="12" pos:column="36">"create a bare repository"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="65">1<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>,
		<expr><block pos:line="13" pos:column="17">{ <expr><name pos:line="13" pos:column="19">OPTION_CALLBACK<pos:position pos:line="13" pos:column="34"/></name></expr>, <expr><literal type="number" pos:line="13" pos:column="36">0<pos:position pos:line="13" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="13" pos:column="39">"shared"<pos:position pos:line="13" pos:column="47"/></literal></expr>, <expr><operator pos:line="13" pos:column="49">&amp;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="50">init_shared_repository<pos:position pos:line="13" pos:column="72"/></name></expr>,
			<expr><call><name pos:line="14" pos:column="25">N_<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="string" pos:line="14" pos:column="28">"permissions"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>,
			<expr><call><name pos:line="15" pos:column="25">N_<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="string" pos:line="15" pos:column="28">"specify that the git repository is to be shared amongst several users"<pos:position pos:line="15" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="100"/></argument_list></call></expr>,
			<expr><name pos:line="16" pos:column="25">PARSE_OPT_OPTARG<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">|<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">PARSE_OPT_NONEG<pos:position pos:line="16" pos:column="59"/></name></expr>, <expr><name pos:line="16" pos:column="61">shared_callback<pos:position pos:line="16" pos:column="76"/></name></expr>, <expr><literal type="number" pos:line="16" pos:column="78">0<pos:position pos:line="16" pos:column="79"/></literal></expr>}<pos:position pos:line="16" pos:column="80"/></block></expr>,
		<expr><call><name pos:line="17" pos:column="17">OPT_BIT<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><literal type="char" pos:line="17" pos:column="25">'q'<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"quiet"<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="39">&amp;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="40">flags<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="47">N_<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><literal type="string" pos:line="17" pos:column="50">"be quiet"<pos:position pos:line="17" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">INIT_DB_QUIET<pos:position pos:line="17" pos:column="76"/></name></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>,
		<expr><call><name pos:line="18" pos:column="17">OPT_STRING<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><literal type="number" pos:line="18" pos:column="28">0<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"separate-git-dir"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="51">&amp;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="52">real_git_dir<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="66">N_<pos:position pos:line="18" pos:column="68"/></name><argument_list pos:line="18" pos:column="68">(<argument><expr><literal type="string" pos:line="18" pos:column="69">"gitdir"<pos:position pos:line="18" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr></argument>,
			   <argument><expr><call><name pos:line="19" pos:column="28">N_<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"separate git dir from working tree"<pos:position pos:line="19" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>,
		<macro><name pos:line="20" pos:column="17">OPT_END<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">()<pos:position pos:line="20" pos:column="26"/></argument_list></macro>
	}<pos:position pos:line="21" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="21" pos:column="11"/></decl_stmt>

	<expr_stmt><expr><name pos:line="23" pos:column="9">argc<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">parse_options<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">argc<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">argv<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">prefix<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">init_db_options<pos:position pos:line="23" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="67">init_db_usage<pos:position pos:line="23" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="82">0<pos:position pos:line="23" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="85"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">real_git_dir<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">&amp;&amp;<pos:position pos:line="25" pos:column="36"/></operator> <operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">is_absolute_path<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name pos:line="25" pos:column="47">real_git_dir<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="61"/></condition><then pos:line="25" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">real_git_dir<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">real_pathdup<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">real_git_dir<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="59">1<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">argc<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <literal type="number" pos:line="28" pos:column="21">1<pos:position pos:line="28" pos:column="22"/></literal></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block pos:line="28" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">int<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">mkdir_tried<pos:position pos:line="29" pos:column="32"/></name> <init pos:line="29" pos:column="33">= <expr><literal type="number" pos:line="29" pos:column="35">0<pos:position pos:line="29" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="37"/></decl_stmt>
	<label><name pos:line="30" pos:column="9">retry<pos:position pos:line="30" pos:column="14"/></name>:<pos:position pos:line="30" pos:column="15"/></label>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">chdir<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">argv<pos:position pos:line="31" pos:column="31"/></name><index pos:line="31" pos:column="31">[<expr><literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal></expr>]<pos:position pos:line="31" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call> <operator pos:line="31" pos:column="36">&lt;<pos:position pos:line="31" pos:column="40"/></operator> <literal type="number" pos:line="31" pos:column="38">0<pos:position pos:line="31" pos:column="39"/></literal></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40"> <block pos:line="31" pos:column="41">{
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><operator pos:line="32" pos:column="29">!<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">mkdir_tried<pos:position pos:line="32" pos:column="41"/></name></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42"> <block pos:line="32" pos:column="43">{
				<decl_stmt><decl><type><name pos:line="33" pos:column="33">int<pos:position pos:line="33" pos:column="36"/></name></type> <name pos:line="33" pos:column="37">saved<pos:position pos:line="33" pos:column="42"/></name></decl>;<pos:position pos:line="33" pos:column="43"/></decl_stmt>
				<comment type="block" pos:line="34" pos:column="33">/*
				 * At this point we haven't read any configuration,
				 * and we know shared_repository should always be 0;
				 * but just in case we play safe.
				 */</comment>
				<expr_stmt><expr><name pos:line="39" pos:column="33">saved<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">=<pos:position pos:line="39" pos:column="40"/></operator> <call><name pos:line="39" pos:column="41">get_shared_repository<pos:position pos:line="39" pos:column="62"/></name><argument_list pos:line="39" pos:column="62">()<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="40" pos:column="33">set_shared_repository<pos:position pos:line="40" pos:column="54"/></name><argument_list pos:line="40" pos:column="54">(<argument><expr><literal type="number" pos:line="40" pos:column="55">0<pos:position pos:line="40" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
				<switch pos:line="41" pos:column="33">switch <condition pos:line="41" pos:column="40">(<expr><call><name pos:line="41" pos:column="41">safe_create_leading_directories_const<pos:position pos:line="41" pos:column="78"/></name><argument_list pos:line="41" pos:column="78">(<argument><expr><name><name pos:line="41" pos:column="79">argv<pos:position pos:line="41" pos:column="83"/></name><index pos:line="41" pos:column="83">[<expr><literal type="number" pos:line="41" pos:column="84">0<pos:position pos:line="41" pos:column="85"/></literal></expr>]<pos:position pos:line="41" pos:column="86"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="88"/></condition> <block pos:line="41" pos:column="89">{
				<case pos:line="42" pos:column="33">case <expr><name pos:line="42" pos:column="38">SCLD_OK<pos:position pos:line="42" pos:column="45"/></name></expr>:<pos:position pos:line="42" pos:column="46"/></case>
				<case pos:line="43" pos:column="33">case <expr><name pos:line="43" pos:column="38">SCLD_PERMS<pos:position pos:line="43" pos:column="48"/></name></expr>:<pos:position pos:line="43" pos:column="49"/></case>
					<break pos:line="44" pos:column="41">break;<pos:position pos:line="44" pos:column="47"/></break>
				<case pos:line="45" pos:column="33">case <expr><name pos:line="45" pos:column="38">SCLD_EXISTS<pos:position pos:line="45" pos:column="49"/></name></expr>:<pos:position pos:line="45" pos:column="50"/></case>
					<expr_stmt><expr><name pos:line="46" pos:column="41">errno<pos:position pos:line="46" pos:column="46"/></name> <operator pos:line="46" pos:column="47">=<pos:position pos:line="46" pos:column="48"/></operator> <name pos:line="46" pos:column="49">EEXIST<pos:position pos:line="46" pos:column="55"/></name></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
					<comment type="block" pos:line="47" pos:column="41">/* fallthru */</comment>
				<default pos:line="48" pos:column="33">default:<pos:position pos:line="48" pos:column="41"/></default>
					<expr_stmt><expr><call><name pos:line="49" pos:column="41">die_errno<pos:position pos:line="49" pos:column="50"/></name><argument_list pos:line="49" pos:column="50">(<argument><expr><call><name pos:line="49" pos:column="51">_<pos:position pos:line="49" pos:column="52"/></name><argument_list pos:line="49" pos:column="52">(<argument><expr><literal type="string" pos:line="49" pos:column="53">"cannot mkdir %s"<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="73">argv<pos:position pos:line="49" pos:column="77"/></name><index pos:line="49" pos:column="77">[<expr><literal type="number" pos:line="49" pos:column="78">0<pos:position pos:line="49" pos:column="79"/></literal></expr>]<pos:position pos:line="49" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="82"/></expr_stmt>
					<break pos:line="50" pos:column="41">break;<pos:position pos:line="50" pos:column="47"/></break>
				}<pos:position pos:line="51" pos:column="34"/></block></switch>
				<expr_stmt><expr><call><name pos:line="52" pos:column="33">set_shared_repository<pos:position pos:line="52" pos:column="54"/></name><argument_list pos:line="52" pos:column="54">(<argument><expr><name pos:line="52" pos:column="55">saved<pos:position pos:line="52" pos:column="60"/></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt>
				<if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><call><name pos:line="53" pos:column="37">mkdir<pos:position pos:line="53" pos:column="42"/></name><argument_list pos:line="53" pos:column="42">(<argument><expr><name><name pos:line="53" pos:column="43">argv<pos:position pos:line="53" pos:column="47"/></name><index pos:line="53" pos:column="47">[<expr><literal type="number" pos:line="53" pos:column="48">0<pos:position pos:line="53" pos:column="49"/></literal></expr>]<pos:position pos:line="53" pos:column="50"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="52">0777<pos:position pos:line="53" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call> <operator pos:line="53" pos:column="58">&lt;<pos:position pos:line="53" pos:column="62"/></operator> <literal type="number" pos:line="53" pos:column="60">0<pos:position pos:line="53" pos:column="61"/></literal></expr>)<pos:position pos:line="53" pos:column="62"/></condition><then pos:line="53" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="41">die_errno<pos:position pos:line="54" pos:column="50"/></name><argument_list pos:line="54" pos:column="50">(<argument><expr><call><name pos:line="54" pos:column="51">_<pos:position pos:line="54" pos:column="52"/></name><argument_list pos:line="54" pos:column="52">(<argument><expr><literal type="string" pos:line="54" pos:column="53">"cannot mkdir %s"<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="73">argv<pos:position pos:line="54" pos:column="77"/></name><index pos:line="54" pos:column="77">[<expr><literal type="number" pos:line="54" pos:column="78">0<pos:position pos:line="54" pos:column="79"/></literal></expr>]<pos:position pos:line="54" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="54" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="82"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="55" pos:column="33">mkdir_tried<pos:position pos:line="55" pos:column="44"/></name> <operator pos:line="55" pos:column="45">=<pos:position pos:line="55" pos:column="46"/></operator> <literal type="number" pos:line="55" pos:column="47">1<pos:position pos:line="55" pos:column="48"/></literal></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
				<goto pos:line="56" pos:column="33">goto <name pos:line="56" pos:column="38">retry<pos:position pos:line="56" pos:column="43"/></name>;<pos:position pos:line="56" pos:column="44"/></goto>
			}<pos:position pos:line="57" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">die_errno<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><call><name pos:line="58" pos:column="35">_<pos:position pos:line="58" pos:column="36"/></name><argument_list pos:line="58" pos:column="36">(<argument><expr><literal type="string" pos:line="58" pos:column="37">"cannot chdir to %s"<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="60">argv<pos:position pos:line="58" pos:column="64"/></name><index pos:line="58" pos:column="64">[<expr><literal type="number" pos:line="58" pos:column="65">0<pos:position pos:line="58" pos:column="66"/></literal></expr>]<pos:position pos:line="58" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>
	}<pos:position pos:line="60" pos:column="10"/></block></then> <elseif pos:line="60" pos:column="11">else <if pos:line="60" pos:column="16">if <condition pos:line="60" pos:column="19">(<expr><literal type="number" pos:line="60" pos:column="20">0<pos:position pos:line="60" pos:column="21"/></literal> <operator pos:line="60" pos:column="22">&lt;<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="24">argc<pos:position pos:line="60" pos:column="28"/></name></expr>)<pos:position pos:line="60" pos:column="29"/></condition><then pos:line="60" pos:column="29"> <block pos:line="60" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">usage<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><name><name pos:line="61" pos:column="23">init_db_usage<pos:position pos:line="61" pos:column="36"/></name><index pos:line="61" pos:column="36">[<expr><literal type="number" pos:line="61" pos:column="37">0<pos:position pos:line="61" pos:column="38"/></literal></expr>]<pos:position pos:line="61" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if></elseif></if>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">is_bare_repository_cfg<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">==<pos:position pos:line="63" pos:column="38"/></operator> <literal type="number" pos:line="63" pos:column="39">1<pos:position pos:line="63" pos:column="40"/></literal></expr>)<pos:position pos:line="63" pos:column="41"/></condition><then pos:line="63" pos:column="41"> <block pos:line="63" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="64" pos:column="17">char<pos:position pos:line="64" pos:column="21"/></name> <modifier pos:line="64" pos:column="22">*<pos:position pos:line="64" pos:column="23"/></modifier></type><name pos:line="64" pos:column="23">cwd<pos:position pos:line="64" pos:column="26"/></name> <init pos:line="64" pos:column="27">= <expr><call><name pos:line="64" pos:column="29">xgetcwd<pos:position pos:line="64" pos:column="36"/></name><argument_list pos:line="64" pos:column="36">()<pos:position pos:line="64" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="39"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">setenv<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">GIT_DIR_ENVIRONMENT<pos:position pos:line="65" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="45">cwd<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">argc<pos:position pos:line="65" pos:column="54"/></name> <operator pos:line="65" pos:column="55">&gt;<pos:position pos:line="65" pos:column="59"/></operator> <literal type="number" pos:line="65" pos:column="57">0<pos:position pos:line="65" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">free<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">cwd<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">init_shared_repository<pos:position pos:line="69" pos:column="35"/></name> <operator pos:line="69" pos:column="36">!=<pos:position pos:line="69" pos:column="38"/></operator> <operator pos:line="69" pos:column="39">-<pos:position pos:line="69" pos:column="40"/></operator><literal type="number" pos:line="69" pos:column="40">1<pos:position pos:line="69" pos:column="41"/></literal></expr>)<pos:position pos:line="69" pos:column="42"/></condition><then pos:line="69" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="17">set_shared_repository<pos:position pos:line="70" pos:column="38"/></name><argument_list pos:line="70" pos:column="38">(<argument><expr><name pos:line="70" pos:column="39">init_shared_repository<pos:position pos:line="70" pos:column="61"/></name></expr></argument>)<pos:position pos:line="70" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="63"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="72" pos:column="9">/*
	 * GIT_WORK_TREE makes sense only in conjunction with GIT_DIR
	 * without --bare.  Catch the error early.
	 */</comment>
	<expr_stmt><expr><name pos:line="76" pos:column="9">git_dir<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator> <call><name pos:line="76" pos:column="19">getenv<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">GIT_DIR_ENVIRONMENT<pos:position pos:line="76" pos:column="45"/></name></expr></argument>)<pos:position pos:line="76" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="77" pos:column="9">work_tree<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">=<pos:position pos:line="77" pos:column="20"/></operator> <call><name pos:line="77" pos:column="21">getenv<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">GIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="77" pos:column="53"/></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="55"/></expr_stmt>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">(<pos:position pos:line="78" pos:column="14"/></operator><operator pos:line="78" pos:column="14">!<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">git_dir<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">||<pos:position pos:line="78" pos:column="25"/></operator> <name pos:line="78" pos:column="26">is_bare_repository_cfg<pos:position pos:line="78" pos:column="48"/></name> <operator pos:line="78" pos:column="49">==<pos:position pos:line="78" pos:column="51"/></operator> <literal type="number" pos:line="78" pos:column="52">1<pos:position pos:line="78" pos:column="53"/></literal><operator pos:line="78" pos:column="53">)<pos:position pos:line="78" pos:column="54"/></operator> <operator pos:line="78" pos:column="55">&amp;&amp;<pos:position pos:line="78" pos:column="65"/></operator> <name pos:line="78" pos:column="58">work_tree<pos:position pos:line="78" pos:column="67"/></name></expr>)<pos:position pos:line="78" pos:column="68"/></condition><then pos:line="78" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">die<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><call><name pos:line="79" pos:column="21">_<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><literal type="string" pos:line="79" pos:column="23">"%s (or --work-tree=&lt;directory&gt;) not allowed without "<pos:position pos:line="79" pos:column="83"/></literal>
			  <literal type="string" pos:line="80" pos:column="27">"specifying %s (or --git-dir=&lt;directory&gt;)"<pos:position pos:line="80" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="70"/></argument_list></call></expr></argument>,
		    <argument><expr><name pos:line="81" pos:column="21">GIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="81" pos:column="46"/></name></expr></argument>,
		    <argument><expr><name pos:line="82" pos:column="21">GIT_DIR_ENVIRONMENT<pos:position pos:line="82" pos:column="40"/></name></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="84" pos:column="9">/*
	 * Set up the default .git directory contents
	 */</comment>
	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><operator pos:line="87" pos:column="13">!<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">git_dir<pos:position pos:line="87" pos:column="21"/></name></expr>)<pos:position pos:line="87" pos:column="22"/></condition><then pos:line="87" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="17">git_dir<pos:position pos:line="88" pos:column="24"/></name> <operator pos:line="88" pos:column="25">=<pos:position pos:line="88" pos:column="26"/></operator> <name pos:line="88" pos:column="27">DEFAULT_GIT_DIR_ENVIRONMENT<pos:position pos:line="88" pos:column="54"/></name></expr>;<pos:position pos:line="88" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name pos:line="90" pos:column="13">is_bare_repository_cfg<pos:position pos:line="90" pos:column="35"/></name> <operator pos:line="90" pos:column="36">&lt;<pos:position pos:line="90" pos:column="40"/></operator> <literal type="number" pos:line="90" pos:column="38">0<pos:position pos:line="90" pos:column="39"/></literal></expr>)<pos:position pos:line="90" pos:column="40"/></condition><then pos:line="90" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="17">is_bare_repository_cfg<pos:position pos:line="91" pos:column="39"/></name> <operator pos:line="91" pos:column="40">=<pos:position pos:line="91" pos:column="41"/></operator> <call><name pos:line="91" pos:column="42">guess_repository_type<pos:position pos:line="91" pos:column="63"/></name><argument_list pos:line="91" pos:column="63">(<argument><expr><name pos:line="91" pos:column="64">git_dir<pos:position pos:line="91" pos:column="71"/></name></expr></argument>)<pos:position pos:line="91" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="73"/></expr_stmt></block></then></if>

	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="14">is_bare_repository_cfg<pos:position pos:line="93" pos:column="36"/></name></expr>)<pos:position pos:line="93" pos:column="37"/></condition><then pos:line="93" pos:column="37"> <block pos:line="93" pos:column="38">{
		<decl_stmt><decl><type><specifier pos:line="94" pos:column="17">const<pos:position pos:line="94" pos:column="22"/></specifier> <name pos:line="94" pos:column="23">char<pos:position pos:line="94" pos:column="27"/></name> <modifier pos:line="94" pos:column="28">*<pos:position pos:line="94" pos:column="29"/></modifier></type><name pos:line="94" pos:column="29">git_dir_parent<pos:position pos:line="94" pos:column="43"/></name> <init pos:line="94" pos:column="44">= <expr><call><name pos:line="94" pos:column="46">strrchr<pos:position pos:line="94" pos:column="53"/></name><argument_list pos:line="94" pos:column="53">(<argument><expr><name pos:line="94" pos:column="54">git_dir<pos:position pos:line="94" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="94" pos:column="63">'/'<pos:position pos:line="94" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="94" pos:column="68"/></decl_stmt>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">git_dir_parent<pos:position pos:line="95" pos:column="35"/></name></expr>)<pos:position pos:line="95" pos:column="36"/></condition><then pos:line="95" pos:column="36"> <block pos:line="95" pos:column="37">{
			<decl_stmt><decl><type><name pos:line="96" pos:column="25">char<pos:position pos:line="96" pos:column="29"/></name> <modifier pos:line="96" pos:column="30">*<pos:position pos:line="96" pos:column="31"/></modifier></type><name pos:line="96" pos:column="31">rel<pos:position pos:line="96" pos:column="34"/></name> <init pos:line="96" pos:column="35">= <expr><call><name pos:line="96" pos:column="37">xstrndup<pos:position pos:line="96" pos:column="45"/></name><argument_list pos:line="96" pos:column="45">(<argument><expr><name pos:line="96" pos:column="46">git_dir<pos:position pos:line="96" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="55">git_dir_parent<pos:position pos:line="96" pos:column="69"/></name> <operator pos:line="96" pos:column="70">-<pos:position pos:line="96" pos:column="71"/></operator> <name pos:line="96" pos:column="72">git_dir<pos:position pos:line="96" pos:column="79"/></name></expr></argument>)<pos:position pos:line="96" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="81"/></decl_stmt>
			<expr_stmt><expr><name pos:line="97" pos:column="25">git_work_tree_cfg<pos:position pos:line="97" pos:column="42"/></name> <operator pos:line="97" pos:column="43">=<pos:position pos:line="97" pos:column="44"/></operator> <call><name pos:line="97" pos:column="45">real_pathdup<pos:position pos:line="97" pos:column="57"/></name><argument_list pos:line="97" pos:column="57">(<argument><expr><name pos:line="97" pos:column="58">rel<pos:position pos:line="97" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="63">1<pos:position pos:line="97" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="98" pos:column="25">free<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">(<argument><expr><name pos:line="98" pos:column="30">rel<pos:position pos:line="98" pos:column="33"/></name></expr></argument>)<pos:position pos:line="98" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if>
		<if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><operator pos:line="100" pos:column="21">!<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">git_work_tree_cfg<pos:position pos:line="100" pos:column="39"/></name></expr>)<pos:position pos:line="100" pos:column="40"/></condition><then pos:line="100" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="25">git_work_tree_cfg<pos:position pos:line="101" pos:column="42"/></name> <operator pos:line="101" pos:column="43">=<pos:position pos:line="101" pos:column="44"/></operator> <call><name pos:line="101" pos:column="45">xgetcwd<pos:position pos:line="101" pos:column="52"/></name><argument_list pos:line="101" pos:column="52">()<pos:position pos:line="101" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="55"/></expr_stmt></block></then></if>
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">work_tree<pos:position pos:line="102" pos:column="30"/></name></expr>)<pos:position pos:line="102" pos:column="31"/></condition><then pos:line="102" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="25">set_git_work_tree<pos:position pos:line="103" pos:column="42"/></name><argument_list pos:line="103" pos:column="42">(<argument><expr><name pos:line="103" pos:column="43">work_tree<pos:position pos:line="103" pos:column="52"/></name></expr></argument>)<pos:position pos:line="103" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="54"/></expr_stmt></block></then>
		<else pos:line="104" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="25">set_git_work_tree<pos:position pos:line="105" pos:column="42"/></name><argument_list pos:line="105" pos:column="42">(<argument><expr><name pos:line="105" pos:column="43">git_work_tree_cfg<pos:position pos:line="105" pos:column="60"/></name></expr></argument>)<pos:position pos:line="105" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="62"/></expr_stmt></block></else></if>
		<if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><call><name pos:line="106" pos:column="21">access<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><call><name pos:line="106" pos:column="28">get_git_work_tree<pos:position pos:line="106" pos:column="45"/></name><argument_list pos:line="106" pos:column="45">()<pos:position pos:line="106" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="106" pos:column="49">X_OK<pos:position pos:line="106" pos:column="53"/></name></expr></argument>)<pos:position pos:line="106" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="55"/></condition><then pos:line="106" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="25">die_errno<pos:position pos:line="107" pos:column="34"/></name> <argument_list pos:line="107" pos:column="35">(<argument><expr><call><name pos:line="107" pos:column="36">_<pos:position pos:line="107" pos:column="37"/></name><argument_list pos:line="107" pos:column="37">(<argument><expr><literal type="string" pos:line="107" pos:column="38">"Cannot access work tree '%s'"<pos:position pos:line="107" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="69"/></argument_list></call></expr></argument>,
				   <argument><expr><call><name pos:line="108" pos:column="36">get_git_work_tree<pos:position pos:line="108" pos:column="53"/></name><argument_list pos:line="108" pos:column="53">()<pos:position pos:line="108" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="109" pos:column="10"/></block></then>
	<else pos:line="110" pos:column="9">else <block pos:line="110" pos:column="14">{
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name pos:line="111" pos:column="21">work_tree<pos:position pos:line="111" pos:column="30"/></name></expr>)<pos:position pos:line="111" pos:column="31"/></condition><then pos:line="111" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="25">set_git_work_tree<pos:position pos:line="112" pos:column="42"/></name><argument_list pos:line="112" pos:column="42">(<argument><expr><name pos:line="112" pos:column="43">work_tree<pos:position pos:line="112" pos:column="52"/></name></expr></argument>)<pos:position pos:line="112" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="54"/></expr_stmt></block></then></if>
	}<pos:position pos:line="113" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="115" pos:column="9">flags<pos:position pos:line="115" pos:column="14"/></name> <operator pos:line="115" pos:column="15">|=<pos:position pos:line="115" pos:column="17"/></operator> <name pos:line="115" pos:column="18">INIT_DB_EXIST_OK<pos:position pos:line="115" pos:column="34"/></name></expr>;<pos:position pos:line="115" pos:column="35"/></expr_stmt>
	<return pos:line="116" pos:column="9">return <expr><call><name pos:line="116" pos:column="16">init_db<pos:position pos:line="116" pos:column="23"/></name><argument_list pos:line="116" pos:column="23">(<argument><expr><name pos:line="116" pos:column="24">git_dir<pos:position pos:line="116" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="33">real_git_dir<pos:position pos:line="116" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="47">template_dir<pos:position pos:line="116" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="61">flags<pos:position pos:line="116" pos:column="66"/></name></expr></argument>)<pos:position pos:line="116" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="68"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

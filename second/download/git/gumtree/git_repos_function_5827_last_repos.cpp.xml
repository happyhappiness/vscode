<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5827_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_worktree<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">path<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">refname<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">add_opts<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">opts<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">strbuf<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sb_git<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">STRBUF_INIT<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="45">sb_repo<pos:position pos:line="4" pos:column="52"/></name> <init pos:line="4" pos:column="53">= <expr><name pos:line="4" pos:column="55">STRBUF_INIT<pos:position pos:line="4" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">sb<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">STRBUF_INIT<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">name<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">stat<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">child_process<pos:position pos:line="8" pos:column="29"/></name></name></type> <name pos:line="8" pos:column="30">cp<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">CHILD_PROCESS_INIT<pos:position pos:line="8" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">argv_array<pos:position pos:line="9" pos:column="26"/></name></name></type> <name pos:line="9" pos:column="27">child_env<pos:position pos:line="9" pos:column="36"/></name> <init pos:line="9" pos:column="37">= <expr><name pos:line="9" pos:column="39">ARGV_ARRAY_INIT<pos:position pos:line="9" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">counter<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="26">len<pos:position pos:line="10" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="31">ret<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">strbuf<pos:position pos:line="11" pos:column="22"/></name></name></type> <name pos:line="11" pos:column="23">symref<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><name pos:line="11" pos:column="32">STRBUF_INIT<pos:position pos:line="11" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">commit<pos:position pos:line="12" pos:column="22"/></name></name> <modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">commit<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><name pos:line="12" pos:column="33">NULL<pos:position pos:line="12" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">file_exists<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">path<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call> <operator pos:line="14" pos:column="31">&amp;&amp;<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="34">!<pos:position pos:line="14" pos:column="35"/></operator><call><name pos:line="14" pos:column="35">is_empty_dir<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><name pos:line="14" pos:column="48">path<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">die<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><call><name pos:line="15" pos:column="21">_<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="string" pos:line="15" pos:column="23">"'%s' already exists"<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">path<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* is 'refname' a branch or commit? */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name><name pos:line="18" pos:column="14">opts<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">detach<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">&amp;&amp;<pos:position pos:line="18" pos:column="37"/></operator> <operator pos:line="18" pos:column="30">!<pos:position pos:line="18" pos:column="31"/></operator><call><name pos:line="18" pos:column="31">strbuf_check_branch_ref<pos:position pos:line="18" pos:column="54"/></name><argument_list pos:line="18" pos:column="54">(<argument><expr><operator pos:line="18" pos:column="55">&amp;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="56">symref<pos:position pos:line="18" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="64">refname<pos:position pos:line="18" pos:column="71"/></name></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call> <operator pos:line="18" pos:column="73">&amp;&amp;<pos:position pos:line="18" pos:column="83"/></operator>
		 <call><name pos:line="19" pos:column="18">ref_exists<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">symref<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">.<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">buf<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41"> <block pos:line="19" pos:column="42">{ <comment type="block" pos:line="19" pos:column="44">/* it's a branch */</comment>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="22">opts<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">force<pos:position pos:line="20" pos:column="33"/></name></name></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">die_if_checked_out<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name><name pos:line="21" pos:column="44">symref<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">buf<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="56">0<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{ <comment type="block" pos:line="22" pos:column="18">/* must be a commit */</comment>
		<expr_stmt><expr><name pos:line="23" pos:column="17">commit<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">lookup_commit_reference_by_name<pos:position pos:line="23" pos:column="57"/></name><argument_list pos:line="23" pos:column="57">(<argument><expr><name pos:line="23" pos:column="58">refname<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">commit<pos:position pos:line="24" pos:column="28"/></name></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><call><name pos:line="25" pos:column="29">_<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"invalid reference: %s"<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">refname<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">name<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">worktree_basename<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">path<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="40">&amp;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="41">len<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">git_path_buf<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><operator pos:line="29" pos:column="22">&amp;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="23">sb_repo<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="32">"worktrees/%.*s"<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>, <argument><expr><call pos:line="29" pos:column="50">(<name pos:line="29" pos:column="51">int<pos:position pos:line="29" pos:column="54"/></name>)<argument_list pos:line="29" pos:column="55">(<argument><expr><name pos:line="29" pos:column="56">path<pos:position pos:line="29" pos:column="60"/></name> <operator pos:line="29" pos:column="61">+<pos:position pos:line="29" pos:column="62"/></operator> <name pos:line="29" pos:column="63">len<pos:position pos:line="29" pos:column="66"/></name> <operator pos:line="29" pos:column="67">-<pos:position pos:line="29" pos:column="68"/></operator> <name pos:line="29" pos:column="69">name<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="76">name<pos:position pos:line="29" pos:column="80"/></name></expr></argument>)<pos:position pos:line="29" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="82"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">len<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name><name pos:line="30" pos:column="15">sb_repo<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">len<pos:position pos:line="30" pos:column="26"/></name></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">safe_create_leading_directories_const<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><name><name pos:line="31" pos:column="51">sb_repo<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">.<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">buf<pos:position pos:line="31" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="64"/></condition><then pos:line="31" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">die_errno<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><call><name pos:line="32" pos:column="27">_<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><literal type="string" pos:line="32" pos:column="29">"could not create leading directories of '%s'"<pos:position pos:line="32" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr></argument>,
			  <argument><expr><name><name pos:line="33" pos:column="27">sb_repo<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">.<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">buf<pos:position pos:line="33" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt></block></then></if>
	<while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><operator pos:line="34" pos:column="16">!<pos:position pos:line="34" pos:column="17"/></operator><call><name pos:line="34" pos:column="17">stat<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name><name pos:line="34" pos:column="22">sb_repo<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">buf<pos:position pos:line="34" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="35">&amp;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="36">st<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="40"/></condition> <block pos:line="34" pos:column="41">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">counter<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">++<pos:position pos:line="35" pos:column="26"/></operator></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">strbuf_setlen<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><operator pos:line="36" pos:column="31">&amp;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="32">sb_repo<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="41">len<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strbuf_addf<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><operator pos:line="37" pos:column="29">&amp;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="30">sb_repo<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="39">"%d"<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">counter<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="39" pos:column="9">name<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">strrchr<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name><name pos:line="39" pos:column="24">sb_repo<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">buf<pos:position pos:line="39" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="39" pos:column="37">'/'<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call> <operator pos:line="39" pos:column="42">+<pos:position pos:line="39" pos:column="43"/></operator> <literal type="number" pos:line="39" pos:column="44">1<pos:position pos:line="39" pos:column="45"/></literal></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>

	<expr_stmt><expr><name pos:line="41" pos:column="9">junk_pid<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name pos:line="41" pos:column="20">getpid<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">()<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">atexit<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">remove_junk<pos:position pos:line="42" pos:column="27"/></name></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">sigchain_push_common<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">remove_junk_on_signal<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">mkdir<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name><name pos:line="45" pos:column="19">sb_repo<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">.<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">buf<pos:position pos:line="45" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="32">0777<pos:position pos:line="45" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">die_errno<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><call><name pos:line="46" pos:column="27">_<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><literal type="string" pos:line="46" pos:column="29">"could not create directory of '%s'"<pos:position pos:line="46" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="68">sb_repo<pos:position pos:line="46" pos:column="75"/></name><operator pos:line="46" pos:column="75">.<pos:position pos:line="46" pos:column="76"/></operator><name pos:line="46" pos:column="76">buf<pos:position pos:line="46" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="81"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="47" pos:column="9">junk_git_dir<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <call><name pos:line="47" pos:column="24">xstrdup<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name><name pos:line="47" pos:column="32">sb_repo<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">.<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">buf<pos:position pos:line="47" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">is_junk<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <literal type="number" pos:line="48" pos:column="19">1<pos:position pos:line="48" pos:column="20"/></literal></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>

	<comment type="block" pos:line="50" pos:column="9">/*
	 * lock the incomplete repo so prune won't delete it, unlock
	 * after the preparation is over.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">strbuf_addf<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><operator pos:line="54" pos:column="21">&amp;<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="22">sb<pos:position pos:line="54" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="26">"%s/locked"<pos:position pos:line="54" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="39">sb_repo<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">buf<pos:position pos:line="54" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><name><name pos:line="55" pos:column="14">opts<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">keep_locked<pos:position pos:line="55" pos:column="31"/></name></name></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="17">write_file<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name><name pos:line="56" pos:column="28">sb<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">.<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">buf<pos:position pos:line="56" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="36">"initializing"<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt></block></then>
	<else pos:line="57" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">write_file<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name><name pos:line="58" pos:column="28">sb<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">.<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="31">buf<pos:position pos:line="58" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="36">"added with --lock"<pos:position pos:line="58" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">strbuf_addf<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><operator pos:line="60" pos:column="21">&amp;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="22">sb_git<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="30">"%s/.git"<pos:position pos:line="60" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="41">path<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">safe_create_leading_directories_const<pos:position pos:line="61" pos:column="50"/></name><argument_list pos:line="61" pos:column="50">(<argument><expr><name><name pos:line="61" pos:column="51">sb_git<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">.<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="58">buf<pos:position pos:line="61" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="63"/></condition><then pos:line="61" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">die_errno<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><call><name pos:line="62" pos:column="27">_<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><literal type="string" pos:line="62" pos:column="29">"could not create leading directories of '%s'"<pos:position pos:line="62" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call></expr></argument>,
			  <argument><expr><name><name pos:line="63" pos:column="27">sb_git<pos:position pos:line="63" pos:column="33"/></name><operator pos:line="63" pos:column="33">.<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="34">buf<pos:position pos:line="63" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="39"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="64" pos:column="9">junk_work_tree<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">xstrdup<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">path<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="66" pos:column="9">strbuf_reset<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><operator pos:line="66" pos:column="22">&amp;<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="23">sb<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">strbuf_addf<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><operator pos:line="67" pos:column="21">&amp;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="22">sb<pos:position pos:line="67" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="26">"%s/gitdir"<pos:position pos:line="67" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="39">sb_repo<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">.<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="47">buf<pos:position pos:line="67" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">write_file<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name><name pos:line="68" pos:column="20">sb<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">.<pos:position pos:line="68" pos:column="23"/></operator><name pos:line="68" pos:column="23">buf<pos:position pos:line="68" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="28">"%s"<pos:position pos:line="68" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="34">real_path<pos:position pos:line="68" pos:column="43"/></name><argument_list pos:line="68" pos:column="43">(<argument><expr><name><name pos:line="68" pos:column="44">sb_git<pos:position pos:line="68" pos:column="50"/></name><operator pos:line="68" pos:column="50">.<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="51">buf<pos:position pos:line="68" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">write_file<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><name><name pos:line="69" pos:column="20">sb_git<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">.<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="27">buf<pos:position pos:line="69" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="32">"gitdir: %s/worktrees/%s"<pos:position pos:line="69" pos:column="57"/></literal></expr></argument>,
		   <argument><expr><call><name pos:line="70" pos:column="20">real_path<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><call><name pos:line="70" pos:column="30">get_git_common_dir<pos:position pos:line="70" pos:column="48"/></name><argument_list pos:line="70" pos:column="48">()<pos:position pos:line="70" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="70" pos:column="53">name<pos:position pos:line="70" pos:column="57"/></name></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
	<comment type="block" pos:line="71" pos:column="9">/*
	 * This is to keep resolve_ref() happy. We need a valid HEAD
	 * or is_git_directory() will reject the directory. Any value which
	 * looks like an object ID will do since it will be immediately
	 * replaced by the symbolic-ref or update-ref invocation in the new
	 * worktree.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="78" pos:column="9">strbuf_reset<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><operator pos:line="78" pos:column="22">&amp;<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="23">sb<pos:position pos:line="78" pos:column="25"/></name></expr></argument>)<pos:position pos:line="78" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">strbuf_addf<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><operator pos:line="79" pos:column="21">&amp;<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="22">sb<pos:position pos:line="79" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="26">"%s/HEAD"<pos:position pos:line="79" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="37">sb_repo<pos:position pos:line="79" pos:column="44"/></name><operator pos:line="79" pos:column="44">.<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="45">buf<pos:position pos:line="79" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">write_file<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name><name pos:line="80" pos:column="20">sb<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">.<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">buf<pos:position pos:line="80" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="28">"%s"<pos:position pos:line="80" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="34">sha1_to_hex<pos:position pos:line="80" pos:column="45"/></name><argument_list pos:line="80" pos:column="45">(<argument><expr><name pos:line="80" pos:column="46">null_sha1<pos:position pos:line="80" pos:column="55"/></name></expr></argument>)<pos:position pos:line="80" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">strbuf_reset<pos:position pos:line="81" pos:column="21"/></name><argument_list pos:line="81" pos:column="21">(<argument><expr><operator pos:line="81" pos:column="22">&amp;<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="23">sb<pos:position pos:line="81" pos:column="25"/></name></expr></argument>)<pos:position pos:line="81" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">strbuf_addf<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><operator pos:line="82" pos:column="21">&amp;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="22">sb<pos:position pos:line="82" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="26">"%s/commondir"<pos:position pos:line="82" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="42">sb_repo<pos:position pos:line="82" pos:column="49"/></name><operator pos:line="82" pos:column="49">.<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="50">buf<pos:position pos:line="82" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">write_file<pos:position pos:line="83" pos:column="19"/></name><argument_list pos:line="83" pos:column="19">(<argument><expr><name><name pos:line="83" pos:column="20">sb<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">.<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="23">buf<pos:position pos:line="83" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="28">"../.."<pos:position pos:line="83" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="85" pos:column="9">fprintf_ln<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><name pos:line="85" pos:column="20">stderr<pos:position pos:line="85" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="28">_<pos:position pos:line="85" pos:column="29"/></name><argument_list pos:line="85" pos:column="29">(<argument><expr><literal type="string" pos:line="85" pos:column="30">"Preparing %s (identifier %s)"<pos:position pos:line="85" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="85" pos:column="63">path<pos:position pos:line="85" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="69">name<pos:position pos:line="85" pos:column="73"/></name></expr></argument>)<pos:position pos:line="85" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="75"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="87" pos:column="9">argv_array_pushf<pos:position pos:line="87" pos:column="25"/></name><argument_list pos:line="87" pos:column="25">(<argument><expr><operator pos:line="87" pos:column="26">&amp;<pos:position pos:line="87" pos:column="31"/></operator><name pos:line="87" pos:column="27">child_env<pos:position pos:line="87" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="38">"%s=%s"<pos:position pos:line="87" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="47">GIT_DIR_ENVIRONMENT<pos:position pos:line="87" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="68">sb_git<pos:position pos:line="87" pos:column="74"/></name><operator pos:line="87" pos:column="74">.<pos:position pos:line="87" pos:column="75"/></operator><name pos:line="87" pos:column="75">buf<pos:position pos:line="87" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">argv_array_pushf<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><operator pos:line="88" pos:column="26">&amp;<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="27">child_env<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="38">"%s=%s"<pos:position pos:line="88" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="47">GIT_WORK_TREE_ENVIRONMENT<pos:position pos:line="88" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="74">path<pos:position pos:line="88" pos:column="78"/></name></expr></argument>)<pos:position pos:line="88" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="89" pos:column="9">cp<pos:position pos:line="89" pos:column="11"/></name><operator pos:line="89" pos:column="11">.<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="12">git_cmd<pos:position pos:line="89" pos:column="19"/></name></name> <operator pos:line="89" pos:column="20">=<pos:position pos:line="89" pos:column="21"/></operator> <literal type="number" pos:line="89" pos:column="22">1<pos:position pos:line="89" pos:column="23"/></literal></expr>;<pos:position pos:line="89" pos:column="24"/></expr_stmt>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">commit<pos:position pos:line="91" pos:column="19"/></name></expr>)<pos:position pos:line="91" pos:column="20"/></condition><then pos:line="91" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="17">argv_array_pushl<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">(<argument><expr><operator pos:line="92" pos:column="34">&amp;<pos:position pos:line="92" pos:column="39"/></operator><name><name pos:line="92" pos:column="35">cp<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">.<pos:position pos:line="92" pos:column="38"/></operator><name pos:line="92" pos:column="38">args<pos:position pos:line="92" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="44">"update-ref"<pos:position pos:line="92" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="58">"HEAD"<pos:position pos:line="92" pos:column="64"/></literal></expr></argument>,
				 <argument><expr><call><name pos:line="93" pos:column="34">oid_to_hex<pos:position pos:line="93" pos:column="44"/></name><argument_list pos:line="93" pos:column="44">(<argument><expr><operator pos:line="93" pos:column="45">&amp;<pos:position pos:line="93" pos:column="50"/></operator><name><name pos:line="93" pos:column="46">commit<pos:position pos:line="93" pos:column="52"/></name><operator pos:line="93" pos:column="52">-&gt;<pos:position pos:line="93" pos:column="57"/></operator><name pos:line="93" pos:column="54">object<pos:position pos:line="93" pos:column="60"/></name><operator pos:line="93" pos:column="60">.<pos:position pos:line="93" pos:column="61"/></operator><name pos:line="93" pos:column="61">oid<pos:position pos:line="93" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="67">NULL<pos:position pos:line="93" pos:column="71"/></name></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="73"/></expr_stmt></block></then>
	<else pos:line="94" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="17">argv_array_pushl<pos:position pos:line="95" pos:column="33"/></name><argument_list pos:line="95" pos:column="33">(<argument><expr><operator pos:line="95" pos:column="34">&amp;<pos:position pos:line="95" pos:column="39"/></operator><name><name pos:line="95" pos:column="35">cp<pos:position pos:line="95" pos:column="37"/></name><operator pos:line="95" pos:column="37">.<pos:position pos:line="95" pos:column="38"/></operator><name pos:line="95" pos:column="38">args<pos:position pos:line="95" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="44">"symbolic-ref"<pos:position pos:line="95" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="60">"HEAD"<pos:position pos:line="95" pos:column="66"/></literal></expr></argument>,
				 <argument><expr><name><name pos:line="96" pos:column="34">symref<pos:position pos:line="96" pos:column="40"/></name><operator pos:line="96" pos:column="40">.<pos:position pos:line="96" pos:column="41"/></operator><name pos:line="96" pos:column="41">buf<pos:position pos:line="96" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="46">NULL<pos:position pos:line="96" pos:column="50"/></name></expr></argument>)<pos:position pos:line="96" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="52"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="97" pos:column="9">cp<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">.<pos:position pos:line="97" pos:column="12"/></operator><name pos:line="97" pos:column="12">env<pos:position pos:line="97" pos:column="15"/></name></name> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <name><name pos:line="97" pos:column="18">child_env<pos:position pos:line="97" pos:column="27"/></name><operator pos:line="97" pos:column="27">.<pos:position pos:line="97" pos:column="28"/></operator><name pos:line="97" pos:column="28">argv<pos:position pos:line="97" pos:column="32"/></name></name></expr>;<pos:position pos:line="97" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="98" pos:column="9">ret<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">=<pos:position pos:line="98" pos:column="14"/></operator> <call><name pos:line="98" pos:column="15">run_command<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><operator pos:line="98" pos:column="27">&amp;<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="28">cp<pos:position pos:line="98" pos:column="30"/></name></expr></argument>)<pos:position pos:line="98" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
	<if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name pos:line="99" pos:column="13">ret<pos:position pos:line="99" pos:column="16"/></name></expr>)<pos:position pos:line="99" pos:column="17"/></condition><then pos:line="99" pos:column="17">
		<block type="pseudo"><goto pos:line="100" pos:column="17">goto <name pos:line="100" pos:column="22">done<pos:position pos:line="100" pos:column="26"/></name>;<pos:position pos:line="100" pos:column="27"/></goto></block></then></if>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name><name pos:line="102" pos:column="13">opts<pos:position pos:line="102" pos:column="17"/></name><operator pos:line="102" pos:column="17">-&gt;<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="19">checkout<pos:position pos:line="102" pos:column="27"/></name></name></expr>)<pos:position pos:line="102" pos:column="28"/></condition><then pos:line="102" pos:column="28"> <block pos:line="102" pos:column="29">{
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">cp<pos:position pos:line="103" pos:column="19"/></name><operator pos:line="103" pos:column="19">.<pos:position pos:line="103" pos:column="20"/></operator><name pos:line="103" pos:column="20">argv<pos:position pos:line="103" pos:column="24"/></name></name> <operator pos:line="103" pos:column="25">=<pos:position pos:line="103" pos:column="26"/></operator> <name pos:line="103" pos:column="27">NULL<pos:position pos:line="103" pos:column="31"/></name></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">argv_array_clear<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><operator pos:line="104" pos:column="34">&amp;<pos:position pos:line="104" pos:column="39"/></operator><name><name pos:line="104" pos:column="35">cp<pos:position pos:line="104" pos:column="37"/></name><operator pos:line="104" pos:column="37">.<pos:position pos:line="104" pos:column="38"/></operator><name pos:line="104" pos:column="38">args<pos:position pos:line="104" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">argv_array_pushl<pos:position pos:line="105" pos:column="33"/></name><argument_list pos:line="105" pos:column="33">(<argument><expr><operator pos:line="105" pos:column="34">&amp;<pos:position pos:line="105" pos:column="39"/></operator><name><name pos:line="105" pos:column="35">cp<pos:position pos:line="105" pos:column="37"/></name><operator pos:line="105" pos:column="37">.<pos:position pos:line="105" pos:column="38"/></operator><name pos:line="105" pos:column="38">args<pos:position pos:line="105" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="44">"reset"<pos:position pos:line="105" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="53">"--hard"<pos:position pos:line="105" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="63">NULL<pos:position pos:line="105" pos:column="67"/></name></expr></argument>)<pos:position pos:line="105" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="106" pos:column="17">cp<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">.<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="20">env<pos:position pos:line="106" pos:column="23"/></name></name> <operator pos:line="106" pos:column="24">=<pos:position pos:line="106" pos:column="25"/></operator> <name><name pos:line="106" pos:column="26">child_env<pos:position pos:line="106" pos:column="35"/></name><operator pos:line="106" pos:column="35">.<pos:position pos:line="106" pos:column="36"/></operator><name pos:line="106" pos:column="36">argv<pos:position pos:line="106" pos:column="40"/></name></name></expr>;<pos:position pos:line="106" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="107" pos:column="17">ret<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <call><name pos:line="107" pos:column="23">run_command<pos:position pos:line="107" pos:column="34"/></name><argument_list pos:line="107" pos:column="34">(<argument><expr><operator pos:line="107" pos:column="35">&amp;<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="36">cp<pos:position pos:line="107" pos:column="38"/></name></expr></argument>)<pos:position pos:line="107" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="40"/></expr_stmt>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">ret<pos:position pos:line="108" pos:column="24"/></name></expr>)<pos:position pos:line="108" pos:column="25"/></condition><then pos:line="108" pos:column="25">
			<block type="pseudo"><goto pos:line="109" pos:column="25">goto <name pos:line="109" pos:column="30">done<pos:position pos:line="109" pos:column="34"/></name>;<pos:position pos:line="109" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="110" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="112" pos:column="9">is_junk<pos:position pos:line="112" pos:column="16"/></name> <operator pos:line="112" pos:column="17">=<pos:position pos:line="112" pos:column="18"/></operator> <literal type="number" pos:line="112" pos:column="19">0<pos:position pos:line="112" pos:column="20"/></literal></expr>;<pos:position pos:line="112" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="113" pos:column="9">FREE_AND_NULL<pos:position pos:line="113" pos:column="22"/></name><argument_list pos:line="113" pos:column="22">(<argument><expr><name pos:line="113" pos:column="23">junk_work_tree<pos:position pos:line="113" pos:column="37"/></name></expr></argument>)<pos:position pos:line="113" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="114" pos:column="9">FREE_AND_NULL<pos:position pos:line="114" pos:column="22"/></name><argument_list pos:line="114" pos:column="22">(<argument><expr><name pos:line="114" pos:column="23">junk_git_dir<pos:position pos:line="114" pos:column="35"/></name></expr></argument>)<pos:position pos:line="114" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>

<label><name pos:line="116" pos:column="1">done<pos:position pos:line="116" pos:column="5"/></name>:<pos:position pos:line="116" pos:column="6"/></label>
	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">ret<pos:position pos:line="117" pos:column="16"/></name> <operator pos:line="117" pos:column="17">||<pos:position pos:line="117" pos:column="19"/></operator> <operator pos:line="117" pos:column="20">!<pos:position pos:line="117" pos:column="21"/></operator><name><name pos:line="117" pos:column="21">opts<pos:position pos:line="117" pos:column="25"/></name><operator pos:line="117" pos:column="25">-&gt;<pos:position pos:line="117" pos:column="30"/></operator><name pos:line="117" pos:column="27">keep_locked<pos:position pos:line="117" pos:column="38"/></name></name></expr>)<pos:position pos:line="117" pos:column="39"/></condition><then pos:line="117" pos:column="39"> <block pos:line="117" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="118" pos:column="17">strbuf_reset<pos:position pos:line="118" pos:column="29"/></name><argument_list pos:line="118" pos:column="29">(<argument><expr><operator pos:line="118" pos:column="30">&amp;<pos:position pos:line="118" pos:column="35"/></operator><name pos:line="118" pos:column="31">sb<pos:position pos:line="118" pos:column="33"/></name></expr></argument>)<pos:position pos:line="118" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="119" pos:column="17">strbuf_addf<pos:position pos:line="119" pos:column="28"/></name><argument_list pos:line="119" pos:column="28">(<argument><expr><operator pos:line="119" pos:column="29">&amp;<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="30">sb<pos:position pos:line="119" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="34">"%s/locked"<pos:position pos:line="119" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="47">sb_repo<pos:position pos:line="119" pos:column="54"/></name><operator pos:line="119" pos:column="54">.<pos:position pos:line="119" pos:column="55"/></operator><name pos:line="119" pos:column="55">buf<pos:position pos:line="119" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="120" pos:column="17">unlink_or_warn<pos:position pos:line="120" pos:column="31"/></name><argument_list pos:line="120" pos:column="31">(<argument><expr><name><name pos:line="120" pos:column="32">sb<pos:position pos:line="120" pos:column="34"/></name><operator pos:line="120" pos:column="34">.<pos:position pos:line="120" pos:column="35"/></operator><name pos:line="120" pos:column="35">buf<pos:position pos:line="120" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="121" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="122" pos:column="9">argv_array_clear<pos:position pos:line="122" pos:column="25"/></name><argument_list pos:line="122" pos:column="25">(<argument><expr><operator pos:line="122" pos:column="26">&amp;<pos:position pos:line="122" pos:column="31"/></operator><name pos:line="122" pos:column="27">child_env<pos:position pos:line="122" pos:column="36"/></name></expr></argument>)<pos:position pos:line="122" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="123" pos:column="9">strbuf_release<pos:position pos:line="123" pos:column="23"/></name><argument_list pos:line="123" pos:column="23">(<argument><expr><operator pos:line="123" pos:column="24">&amp;<pos:position pos:line="123" pos:column="29"/></operator><name pos:line="123" pos:column="25">sb<pos:position pos:line="123" pos:column="27"/></name></expr></argument>)<pos:position pos:line="123" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="124" pos:column="9">strbuf_release<pos:position pos:line="124" pos:column="23"/></name><argument_list pos:line="124" pos:column="23">(<argument><expr><operator pos:line="124" pos:column="24">&amp;<pos:position pos:line="124" pos:column="29"/></operator><name pos:line="124" pos:column="25">symref<pos:position pos:line="124" pos:column="31"/></name></expr></argument>)<pos:position pos:line="124" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">strbuf_release<pos:position pos:line="125" pos:column="23"/></name><argument_list pos:line="125" pos:column="23">(<argument><expr><operator pos:line="125" pos:column="24">&amp;<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="25">sb_repo<pos:position pos:line="125" pos:column="32"/></name></expr></argument>)<pos:position pos:line="125" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">strbuf_release<pos:position pos:line="126" pos:column="23"/></name><argument_list pos:line="126" pos:column="23">(<argument><expr><operator pos:line="126" pos:column="24">&amp;<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="25">sb_git<pos:position pos:line="126" pos:column="31"/></name></expr></argument>)<pos:position pos:line="126" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="33"/></expr_stmt>
	<return pos:line="127" pos:column="9">return <expr><name pos:line="127" pos:column="16">ret<pos:position pos:line="127" pos:column="19"/></name></expr>;<pos:position pos:line="127" pos:column="20"/></return>
}<pos:position pos:line="128" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_2795_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sq_quote_argv<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">strbuf<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">dst<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">argv<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">size_t<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">maxlen<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Copy into destination buffer. */</comment>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strbuf_grow<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">dst<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="26">255<pos:position pos:line="6" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name><name pos:line="7" pos:column="21">argv<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><name pos:line="7" pos:column="26">i<pos:position pos:line="7" pos:column="27"/></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></expr>;<pos:position pos:line="7" pos:column="29"/></condition> <incr><expr><operator pos:line="7" pos:column="30">++<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">i<pos:position pos:line="7" pos:column="33"/></name></expr></incr>)<pos:position pos:line="7" pos:column="34"/></control> <block pos:line="7" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">strbuf_addch<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">dst<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="35">' '<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">sq_quote_buf<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">dst<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="35">argv<pos:position pos:line="9" pos:column="39"/></name><index pos:line="9" pos:column="39">[<expr><name pos:line="9" pos:column="40">i<pos:position pos:line="9" pos:column="41"/></name></expr>]<pos:position pos:line="9" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">maxlen<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&amp;&amp;<pos:position pos:line="10" pos:column="38"/></operator> <name><name pos:line="10" pos:column="31">dst<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">len<pos:position pos:line="10" pos:column="39"/></name></name> <operator pos:line="10" pos:column="40">&gt;<pos:position pos:line="10" pos:column="44"/></operator> <name pos:line="10" pos:column="42">maxlen<pos:position pos:line="10" pos:column="48"/></name></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="25">die<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><literal type="string" pos:line="11" pos:column="29">"Too many or long arguments"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></for>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

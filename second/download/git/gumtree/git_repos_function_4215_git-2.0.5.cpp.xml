<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4215_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">generate_id_list<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name></type> <name><name pos:line="3" pos:column="23">sha1<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">20<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="33">n<pos:position pos:line="3" pos:column="34"/></name><index pos:line="3" pos:column="34">[<expr><literal type="number" pos:line="3" pos:column="35">20<pos:position pos:line="3" pos:column="37"/></literal></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">git_SHA_CTX<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">ctx<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">patchlen<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">strbuf<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">line_buf<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">STRBUF_INIT<pos:position pos:line="6" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">git_SHA1_Init<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="24">ctx<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">hashclr<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">sha1<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">!<pos:position pos:line="10" pos:column="17"/></operator><call><name pos:line="10" pos:column="17">feof<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">stdin<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="29"/></condition> <block pos:line="10" pos:column="30">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">patchlen<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <call><name pos:line="11" pos:column="28">get_one_patchid<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">n<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="47">&amp;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="48">ctx<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="53">&amp;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="54">line_buf<pos:position pos:line="11" pos:column="62"/></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">flush_current_id<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">patchlen<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">sha1<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="50">&amp;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="51">ctx<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">hashcpy<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">sha1<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">n<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">strbuf_release<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">line_buf<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

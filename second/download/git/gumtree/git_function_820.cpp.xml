<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_820.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_pathspec_item<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">pathspec_item<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">item<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">unsigned<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">flags<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">prefix<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">prefixlen<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="3" pos:column="32">const<pos:position pos:line="3" pos:column="37"/></specifier> <name pos:line="3" pos:column="38">char<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier></type><name pos:line="3" pos:column="44">elt<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">magic<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="29">element_magic<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><literal type="number" pos:line="5" pos:column="45">0<pos:position pos:line="5" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">copyfrom<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name pos:line="6" pos:column="32">elt<pos:position pos:line="6" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">match<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">pathspec_prefix<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><operator pos:line="8" pos:column="31">-<pos:position pos:line="8" pos:column="32"/></operator><literal type="number" pos:line="8" pos:column="32">1<pos:position pos:line="8" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* PATHSPEC_LITERAL_PATH ignores magic */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">flags<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&amp;<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="21">PATHSPEC_LITERAL_PATH<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block pos:line="11" pos:column="44">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">magic<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">PATHSPEC_LITERAL<pos:position pos:line="12" pos:column="41"/></name></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <else pos:line="13" pos:column="11">else <block pos:line="13" pos:column="16">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">copyfrom<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">parse_element_magic<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><operator pos:line="14" pos:column="48">&amp;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="49">element_magic<pos:position pos:line="14" pos:column="62"/></name></expr></argument>,
					       <argument><expr><operator pos:line="15" pos:column="48">&amp;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="49">pathspec_prefix<pos:position pos:line="15" pos:column="64"/></name></expr></argument>,
					       <argument><expr><name pos:line="16" pos:column="48">elt<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">magic<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">|=<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">element_magic<pos:position pos:line="17" pos:column="39"/></name></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">magic<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">|=<pos:position pos:line="18" pos:column="25"/></operator> <call><name pos:line="18" pos:column="26">get_global_magic<pos:position pos:line="18" pos:column="42"/></name><argument_list pos:line="18" pos:column="42">(<argument><expr><name pos:line="18" pos:column="43">element_magic<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="21" pos:column="9">item<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">magic<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">magic<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">pathspec_prefix<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">&gt;=<pos:position pos:line="23" pos:column="34"/></operator> <literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal> <operator pos:line="23" pos:column="34">&amp;&amp;<pos:position pos:line="23" pos:column="44"/></operator>
	    <operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">prefixlen<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">||<pos:position pos:line="24" pos:column="26"/></operator> <operator pos:line="24" pos:column="27">(<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">prefix<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">&amp;&amp;<pos:position pos:line="24" pos:column="45"/></operator> <operator pos:line="24" pos:column="38">*<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">prefix<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">)<pos:position pos:line="24" pos:column="46"/></operator><operator pos:line="24" pos:column="46">)<pos:position pos:line="24" pos:column="47"/></operator></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">die<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><literal type="string" pos:line="25" pos:column="21">"BUG: 'prefix' magic is supposed to be used at worktree's root"<pos:position pos:line="25" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="86"/></expr_stmt></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">magic<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">&amp;<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="22">PATHSPEC_LITERAL<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">)<pos:position pos:line="27" pos:column="39"/></operator> <operator pos:line="27" pos:column="40">&amp;&amp;<pos:position pos:line="27" pos:column="50"/></operator> <operator pos:line="27" pos:column="43">(<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">magic<pos:position pos:line="27" pos:column="49"/></name> <operator pos:line="27" pos:column="50">&amp;<pos:position pos:line="27" pos:column="55"/></operator> <name pos:line="27" pos:column="52">PATHSPEC_GLOB<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">)<pos:position pos:line="27" pos:column="66"/></operator></expr>)<pos:position pos:line="27" pos:column="67"/></condition><then pos:line="27" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">die<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><call><name pos:line="28" pos:column="21">_<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><literal type="string" pos:line="28" pos:column="23">"%s: 'literal' and 'glob' are incompatible"<pos:position pos:line="28" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="69">elt<pos:position pos:line="28" pos:column="72"/></name></expr></argument>)<pos:position pos:line="28" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="74"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="30" pos:column="9">/* Create match string which will be used for pathspec matching */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">pathspec_prefix<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&gt;=<pos:position pos:line="31" pos:column="34"/></operator> <literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal></expr>)<pos:position pos:line="31" pos:column="34"/></condition><then pos:line="31" pos:column="34"> <block pos:line="31" pos:column="35">{
		<expr_stmt><expr><name pos:line="32" pos:column="17">match<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">xstrdup<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">copyfrom<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">prefixlen<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="29">pathspec_prefix<pos:position pos:line="33" pos:column="44"/></name></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then> <elseif pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><name pos:line="34" pos:column="20">magic<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">&amp;<pos:position pos:line="34" pos:column="31"/></operator> <name pos:line="34" pos:column="28">PATHSPEC_FROMTOP<pos:position pos:line="34" pos:column="44"/></name></expr>)<pos:position pos:line="34" pos:column="45"/></condition><then pos:line="34" pos:column="45"> <block pos:line="34" pos:column="46">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">match<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <call><name pos:line="35" pos:column="25">xstrdup<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">copyfrom<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">prefixlen<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif> <else pos:line="37" pos:column="11">else <block pos:line="37" pos:column="16">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">match<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <call><name pos:line="38" pos:column="25">prefix_path_gently<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">prefix<pos:position pos:line="38" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">prefixlen<pos:position pos:line="38" pos:column="61"/></name></expr></argument>,
					   <argument><expr><operator pos:line="39" pos:column="44">&amp;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="45">prefixlen<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">copyfrom<pos:position pos:line="39" pos:column="64"/></name></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="66"/></expr_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">match<pos:position pos:line="40" pos:column="27"/></name></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">die<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><call><name pos:line="41" pos:column="29">_<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><literal type="string" pos:line="41" pos:column="31">"%s: '%s' is outside repository"<pos:position pos:line="41" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="66">elt<pos:position pos:line="41" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="71">copyfrom<pos:position pos:line="41" pos:column="79"/></name></expr></argument>)<pos:position pos:line="41" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="81"/></expr_stmt></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="44" pos:column="9">item<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">match<pos:position pos:line="44" pos:column="20"/></name></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">match<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">item<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">len<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <call><name pos:line="45" pos:column="21">strlen<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name><name pos:line="45" pos:column="28">item<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">match<pos:position pos:line="45" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">item<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">prefix<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">prefixlen<pos:position pos:line="46" pos:column="33"/></name></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="48" pos:column="9">/*
	 * Prefix the pathspec (keep all magic) and assign to
	 * original. Useful for passing to another command.
	 */</comment>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">(<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">flags<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">&amp;<pos:position pos:line="52" pos:column="25"/></operator> <name pos:line="52" pos:column="22">PATHSPEC_PREFIX_ORIGIN<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">)<pos:position pos:line="52" pos:column="45"/></operator> <operator pos:line="52" pos:column="46">&amp;&amp;<pos:position pos:line="52" pos:column="56"/></operator>
	    <name pos:line="53" pos:column="13">prefixlen<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">&amp;&amp;<pos:position pos:line="53" pos:column="33"/></operator> <operator pos:line="53" pos:column="26">!<pos:position pos:line="53" pos:column="27"/></operator><call><name pos:line="53" pos:column="27">get_literal_global<pos:position pos:line="53" pos:column="45"/></name><argument_list pos:line="53" pos:column="45">()<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="48"/></condition><then pos:line="53" pos:column="48"> <block pos:line="53" pos:column="49">{
		<decl_stmt><decl><type><name><name pos:line="54" pos:column="17">struct<pos:position pos:line="54" pos:column="23"/></name> <name pos:line="54" pos:column="24">strbuf<pos:position pos:line="54" pos:column="30"/></name></name></type> <name pos:line="54" pos:column="31">sb<pos:position pos:line="54" pos:column="33"/></name> <init pos:line="54" pos:column="34">= <expr><name pos:line="54" pos:column="36">STRBUF_INIT<pos:position pos:line="54" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="54" pos:column="48"/></decl_stmt>

		<comment type="block" pos:line="56" pos:column="17">/* Preserve the actual prefix length of each pattern */</comment>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">prefix_magic<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><operator pos:line="57" pos:column="30">&amp;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="31">sb<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="35">prefixlen<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">element_magic<pos:position pos:line="57" pos:column="59"/></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="59" pos:column="17">strbuf_addstr<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><operator pos:line="59" pos:column="31">&amp;<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="32">sb<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">match<pos:position pos:line="59" pos:column="41"/></name></expr></argument>)<pos:position pos:line="59" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">item<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">original<pos:position pos:line="60" pos:column="31"/></name></name> <operator pos:line="60" pos:column="32">=<pos:position pos:line="60" pos:column="33"/></operator> <call><name pos:line="60" pos:column="34">strbuf_detach<pos:position pos:line="60" pos:column="47"/></name><argument_list pos:line="60" pos:column="47">(<argument><expr><operator pos:line="60" pos:column="48">&amp;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="49">sb<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">NULL<pos:position pos:line="60" pos:column="57"/></name></expr></argument>)<pos:position pos:line="60" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then> <else pos:line="61" pos:column="11">else <block pos:line="61" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="62" pos:column="17">item<pos:position pos:line="62" pos:column="21"/></name><operator pos:line="62" pos:column="21">-&gt;<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="23">original<pos:position pos:line="62" pos:column="31"/></name></name> <operator pos:line="62" pos:column="32">=<pos:position pos:line="62" pos:column="33"/></operator> <call><name pos:line="62" pos:column="34">xstrdup<pos:position pos:line="62" pos:column="41"/></name><argument_list pos:line="62" pos:column="41">(<argument><expr><name pos:line="62" pos:column="42">elt<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></else></if>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">flags<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">&amp;<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="21">PATHSPEC_STRIP_SUBMODULE_SLASH_CHEAP<pos:position pos:line="65" pos:column="57"/></name></expr>)<pos:position pos:line="65" pos:column="58"/></condition><then pos:line="65" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="17">strip_submodule_slash_cheap<pos:position pos:line="66" pos:column="44"/></name><argument_list pos:line="66" pos:column="44">(<argument><expr><name pos:line="66" pos:column="45">item<pos:position pos:line="66" pos:column="49"/></name></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="51"/></expr_stmt></block></then></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">flags<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">&amp;<pos:position pos:line="68" pos:column="24"/></operator> <name pos:line="68" pos:column="21">PATHSPEC_STRIP_SUBMODULE_SLASH_EXPENSIVE<pos:position pos:line="68" pos:column="61"/></name></expr>)<pos:position pos:line="68" pos:column="62"/></condition><then pos:line="68" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">strip_submodule_slash_expensive<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">item<pos:position pos:line="69" pos:column="53"/></name></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="55"/></expr_stmt></block></then></if>

	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">magic<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">&amp;<pos:position pos:line="71" pos:column="24"/></operator> <name pos:line="71" pos:column="21">PATHSPEC_LITERAL<pos:position pos:line="71" pos:column="37"/></name></expr>)<pos:position pos:line="71" pos:column="38"/></condition><then pos:line="71" pos:column="38"> <block pos:line="71" pos:column="39">{
		<expr_stmt><expr><name><name pos:line="72" pos:column="17">item<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">-&gt;<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="23">nowildcard_len<pos:position pos:line="72" pos:column="37"/></name></name> <operator pos:line="72" pos:column="38">=<pos:position pos:line="72" pos:column="39"/></operator> <name><name pos:line="72" pos:column="40">item<pos:position pos:line="72" pos:column="44"/></name><operator pos:line="72" pos:column="44">-&gt;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="46">len<pos:position pos:line="72" pos:column="49"/></name></name></expr>;<pos:position pos:line="72" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></then> <else pos:line="73" pos:column="11">else <block pos:line="73" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="74" pos:column="17">item<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">-&gt;<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="23">nowildcard_len<pos:position pos:line="74" pos:column="37"/></name></name> <operator pos:line="74" pos:column="38">=<pos:position pos:line="74" pos:column="39"/></operator> <call><name pos:line="74" pos:column="40">simple_length<pos:position pos:line="74" pos:column="53"/></name><argument_list pos:line="74" pos:column="53">(<argument><expr><name><name pos:line="74" pos:column="54">item<pos:position pos:line="74" pos:column="58"/></name><operator pos:line="74" pos:column="58">-&gt;<pos:position pos:line="74" pos:column="63"/></operator><name pos:line="74" pos:column="60">match<pos:position pos:line="74" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></expr_stmt>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name><name pos:line="75" pos:column="21">item<pos:position pos:line="75" pos:column="25"/></name><operator pos:line="75" pos:column="25">-&gt;<pos:position pos:line="75" pos:column="30"/></operator><name pos:line="75" pos:column="27">nowildcard_len<pos:position pos:line="75" pos:column="41"/></name></name> <operator pos:line="75" pos:column="42">&lt;<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="44">prefixlen<pos:position pos:line="75" pos:column="53"/></name></expr>)<pos:position pos:line="75" pos:column="54"/></condition><then pos:line="75" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="76" pos:column="25">item<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">-&gt;<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="31">nowildcard_len<pos:position pos:line="76" pos:column="45"/></name></name> <operator pos:line="76" pos:column="46">=<pos:position pos:line="76" pos:column="47"/></operator> <name pos:line="76" pos:column="48">prefixlen<pos:position pos:line="76" pos:column="57"/></name></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="77" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="79" pos:column="9">item<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">-&gt;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="15">flags<pos:position pos:line="79" pos:column="20"/></name></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <literal type="number" pos:line="79" pos:column="23">0<pos:position pos:line="79" pos:column="24"/></literal></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">magic<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">&amp;<pos:position pos:line="80" pos:column="24"/></operator> <name pos:line="80" pos:column="21">PATHSPEC_GLOB<pos:position pos:line="80" pos:column="34"/></name></expr>)<pos:position pos:line="80" pos:column="35"/></condition><then pos:line="80" pos:column="35"> <block pos:line="80" pos:column="36">{
		<comment type="block" pos:line="81" pos:column="17">/*
		 * FIXME: should we enable ONESTAR in _GLOB for
		 * pattern "* * / * . c"?
		 */</comment>
	}<pos:position pos:line="85" pos:column="10"/></block></then> <else pos:line="85" pos:column="11">else <block pos:line="85" pos:column="16">{
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name><name pos:line="86" pos:column="21">item<pos:position pos:line="86" pos:column="25"/></name><operator pos:line="86" pos:column="25">-&gt;<pos:position pos:line="86" pos:column="30"/></operator><name pos:line="86" pos:column="27">nowildcard_len<pos:position pos:line="86" pos:column="41"/></name></name> <operator pos:line="86" pos:column="42">&lt;<pos:position pos:line="86" pos:column="46"/></operator> <name><name pos:line="86" pos:column="44">item<pos:position pos:line="86" pos:column="48"/></name><operator pos:line="86" pos:column="48">-&gt;<pos:position pos:line="86" pos:column="53"/></operator><name pos:line="86" pos:column="50">len<pos:position pos:line="86" pos:column="53"/></name></name> <operator pos:line="86" pos:column="54">&amp;&amp;<pos:position pos:line="86" pos:column="64"/></operator>
		    <name><name pos:line="87" pos:column="21">item<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">-&gt;<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="27">match<pos:position pos:line="87" pos:column="32"/></name><index pos:line="87" pos:column="32">[<expr><name><name pos:line="87" pos:column="33">item<pos:position pos:line="87" pos:column="37"/></name><operator pos:line="87" pos:column="37">-&gt;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="39">nowildcard_len<pos:position pos:line="87" pos:column="53"/></name></name></expr>]<pos:position pos:line="87" pos:column="54"/></index></name> <operator pos:line="87" pos:column="55">==<pos:position pos:line="87" pos:column="57"/></operator> <literal type="char" pos:line="87" pos:column="58">'*'<pos:position pos:line="87" pos:column="61"/></literal> <operator pos:line="87" pos:column="62">&amp;&amp;<pos:position pos:line="87" pos:column="72"/></operator>
		    <call><name pos:line="88" pos:column="21">no_wildcard<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><name><name pos:line="88" pos:column="33">item<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">match<pos:position pos:line="88" pos:column="44"/></name></name> <operator pos:line="88" pos:column="45">+<pos:position pos:line="88" pos:column="46"/></operator> <name><name pos:line="88" pos:column="47">item<pos:position pos:line="88" pos:column="51"/></name><operator pos:line="88" pos:column="51">-&gt;<pos:position pos:line="88" pos:column="56"/></operator><name pos:line="88" pos:column="53">nowildcard_len<pos:position pos:line="88" pos:column="67"/></name></name> <operator pos:line="88" pos:column="68">+<pos:position pos:line="88" pos:column="69"/></operator> <literal type="number" pos:line="88" pos:column="70">1<pos:position pos:line="88" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="73"/></condition><then pos:line="88" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="89" pos:column="25">item<pos:position pos:line="89" pos:column="29"/></name><operator pos:line="89" pos:column="29">-&gt;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="31">flags<pos:position pos:line="89" pos:column="36"/></name></name> <operator pos:line="89" pos:column="37">|=<pos:position pos:line="89" pos:column="39"/></operator> <name pos:line="89" pos:column="40">PATHSPEC_ONESTAR<pos:position pos:line="89" pos:column="56"/></name></expr>;<pos:position pos:line="89" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="90" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="92" pos:column="9">/* sanity checks, pathspec matchers assume these are sane */</comment>
	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name><name pos:line="93" pos:column="13">item<pos:position pos:line="93" pos:column="17"/></name><operator pos:line="93" pos:column="17">-&gt;<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="19">nowildcard_len<pos:position pos:line="93" pos:column="33"/></name></name> <operator pos:line="93" pos:column="34">&gt;<pos:position pos:line="93" pos:column="38"/></operator> <name><name pos:line="93" pos:column="36">item<pos:position pos:line="93" pos:column="40"/></name><operator pos:line="93" pos:column="40">-&gt;<pos:position pos:line="93" pos:column="45"/></operator><name pos:line="93" pos:column="42">len<pos:position pos:line="93" pos:column="45"/></name></name> <operator pos:line="93" pos:column="46">||<pos:position pos:line="93" pos:column="48"/></operator>
	    <name><name pos:line="94" pos:column="13">item<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">-&gt;<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="19">prefix<pos:position pos:line="94" pos:column="25"/></name></name>         <operator pos:line="94" pos:column="34">&gt;<pos:position pos:line="94" pos:column="38"/></operator> <name><name pos:line="94" pos:column="36">item<pos:position pos:line="94" pos:column="40"/></name><operator pos:line="94" pos:column="40">-&gt;<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="42">len<pos:position pos:line="94" pos:column="45"/></name></name></expr>)<pos:position pos:line="94" pos:column="46"/></condition><then pos:line="94" pos:column="46"> <block pos:line="94" pos:column="47">{
		<comment type="block" pos:line="95" pos:column="17">/*
		 * This case can be triggered by the user pointing us to a
		 * pathspec inside a submodule, which is an input error.
		 * Detect that here and complain, but fallback in the
		 * non-submodule case to a BUG, as we have no idea what
		 * would trigger that.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="102" pos:column="17">die_inside_submodule_path<pos:position pos:line="102" pos:column="42"/></name><argument_list pos:line="102" pos:column="42">(<argument><expr><name pos:line="102" pos:column="43">item<pos:position pos:line="102" pos:column="47"/></name></expr></argument>)<pos:position pos:line="102" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">die<pos:position pos:line="103" pos:column="20"/></name> <argument_list pos:line="103" pos:column="21">(<argument><expr><literal type="string" pos:line="103" pos:column="22">"BUG: item-&gt;nowildcard_len &gt; item-&gt;len || item-&gt;prefix &gt; item-&gt;len)"<pos:position pos:line="103" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="92"/></expr_stmt>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

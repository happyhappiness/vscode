<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3944_git-2.7.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_sha1_hex_segment<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">hex<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">unsigned<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">hex_len<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">unsigned<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">sha1<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">unsigned<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">sha1_len<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">len<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">hex_len<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">&gt;&gt;<pos:position pos:line="4" pos:column="44"/></operator> <literal type="number" pos:line="4" pos:column="42">1<pos:position pos:line="4" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">hex_len<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">%<pos:position pos:line="5" pos:column="22"/></operator> <literal type="number" pos:line="5" pos:column="23">2<pos:position pos:line="5" pos:column="24"/></literal> <operator pos:line="5" pos:column="25">!=<pos:position pos:line="5" pos:column="27"/></operator> <literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal> <operator pos:line="5" pos:column="30">||<pos:position pos:line="5" pos:column="32"/></operator> <name pos:line="5" pos:column="33">len<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">&gt;<pos:position pos:line="5" pos:column="41"/></operator> <name pos:line="5" pos:column="39">sha1_len<pos:position pos:line="5" pos:column="47"/></name></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="25">len<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></condition> <incr><expr><name pos:line="7" pos:column="30">i<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">++<pos:position pos:line="7" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="34"/></control> <block pos:line="7" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">unsigned<pos:position pos:line="8" pos:column="25"/></name> <name pos:line="8" pos:column="26">int<pos:position pos:line="8" pos:column="29"/></name></type> <name pos:line="8" pos:column="30">val<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><operator pos:line="8" pos:column="36">(<pos:position pos:line="8" pos:column="37"/></operator><call><name pos:line="8" pos:column="37">hexval<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><name><name pos:line="8" pos:column="44">hex<pos:position pos:line="8" pos:column="47"/></name><index pos:line="8" pos:column="47">[<expr><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr>]<pos:position pos:line="8" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call> <operator pos:line="8" pos:column="52">&lt;&lt;<pos:position pos:line="8" pos:column="60"/></operator> <literal type="number" pos:line="8" pos:column="55">4<pos:position pos:line="8" pos:column="56"/></literal><operator pos:line="8" pos:column="56">)<pos:position pos:line="8" pos:column="57"/></operator> <operator pos:line="8" pos:column="58">|<pos:position pos:line="8" pos:column="59"/></operator> <call><name pos:line="8" pos:column="60">hexval<pos:position pos:line="8" pos:column="66"/></name><argument_list pos:line="8" pos:column="66">(<argument><expr><name><name pos:line="8" pos:column="67">hex<pos:position pos:line="8" pos:column="70"/></name><index pos:line="8" pos:column="70">[<expr><literal type="number" pos:line="8" pos:column="71">1<pos:position pos:line="8" pos:column="72"/></literal></expr>]<pos:position pos:line="8" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="75"/></decl_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">val<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="27">~<pos:position pos:line="9" pos:column="28"/></operator><literal type="number" pos:line="9" pos:column="28">0xff<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator><literal type="number" pos:line="10" pos:column="33">1<pos:position pos:line="10" pos:column="34"/></literal></expr>;<pos:position pos:line="10" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">sha1<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">++<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">val<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">hex<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">+=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="24">2<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></for>
	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init pos:line="14" pos:column="14">;<pos:position pos:line="14" pos:column="15"/></init> <condition><expr><name pos:line="14" pos:column="16">i<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&lt;<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="20">sha1_len<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></condition> <incr><expr><name pos:line="14" pos:column="30">i<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">++<pos:position pos:line="14" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="34"/></control>
		<block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">sha1<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">++<pos:position pos:line="15" pos:column="24"/></operator> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">0<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt></block></for>
	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">len<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

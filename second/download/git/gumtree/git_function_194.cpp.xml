<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_function_194.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wt_status_print_other<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">wt_status<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">s<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
				  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">string_list<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">l<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">what<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
				  <parameter><decl><type><specifier pos:line="4" pos:column="35">const<pos:position pos:line="4" pos:column="40"/></specifier> <name pos:line="4" pos:column="41">char<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">how<pos:position pos:line="4" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="51"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">strbuf<pos:position pos:line="7" pos:column="22"/></name></name></type> <name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">STRBUF_INIT<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name><name pos:line="8" pos:column="16">struct<pos:position pos:line="8" pos:column="22"/></name> <name pos:line="8" pos:column="23">string_list<pos:position pos:line="8" pos:column="34"/></name></name></type> <name pos:line="8" pos:column="35">output<pos:position pos:line="8" pos:column="41"/></name> <init pos:line="8" pos:column="42">= <expr><name pos:line="8" pos:column="44">STRING_LIST_INIT_DUP<pos:position pos:line="8" pos:column="64"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="65"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">column_options<pos:position pos:line="9" pos:column="30"/></name></name></type> <name pos:line="9" pos:column="31">copts<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">l<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">nr<pos:position pos:line="11" pos:column="19"/></name></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">wt_status_print_other_header<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">s<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">what<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">how<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="25">l<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">nr<pos:position pos:line="16" pos:column="30"/></name></name></expr>;<pos:position pos:line="16" pos:column="31"/></condition> <incr><expr><name pos:line="16" pos:column="32">i<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">++<pos:position pos:line="16" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="36"/></control> <block pos:line="16" pos:column="37">{
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">string_list_item<pos:position pos:line="17" pos:column="40"/></name></name> <modifier pos:line="17" pos:column="41">*<pos:position pos:line="17" pos:column="42"/></modifier></type><name pos:line="17" pos:column="42">it<pos:position pos:line="17" pos:column="44"/></name></decl>;<pos:position pos:line="17" pos:column="45"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="18" pos:column="17">const<pos:position pos:line="18" pos:column="22"/></specifier> <name pos:line="18" pos:column="23">char<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">path<pos:position pos:line="18" pos:column="33"/></name></decl>;<pos:position pos:line="18" pos:column="34"/></decl_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">it<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">&amp;<pos:position pos:line="19" pos:column="27"/></operator><operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name><name pos:line="19" pos:column="24">l<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">items<pos:position pos:line="19" pos:column="32"/></name><index pos:line="19" pos:column="32">[<expr><name pos:line="19" pos:column="33">i<pos:position pos:line="19" pos:column="34"/></name></expr>]<pos:position pos:line="19" pos:column="35"/></index></name><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">path<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <call><name pos:line="20" pos:column="24">quote_path<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name><name pos:line="20" pos:column="35">it<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">string<pos:position pos:line="20" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="47">s<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">prefix<pos:position pos:line="20" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="58">&amp;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="59">buf<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">column_active<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name><name pos:line="21" pos:column="35">s<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">colopts<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47"> <block pos:line="21" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">string_list_append<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">(<argument><expr><operator pos:line="22" pos:column="44">&amp;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="45">output<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">path<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
			<continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">status_printf<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">s<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="34">color<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">WT_STATUS_HEADER<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">s<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="62">"\t"<pos:position pos:line="25" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">status_printf_more<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name pos:line="26" pos:column="36">s<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="39">color<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">WT_STATUS_UNTRACKED<pos:position pos:line="26" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="66">s<pos:position pos:line="26" pos:column="67"/></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr></argument>,
				   <argument><expr><literal type="string" pos:line="27" pos:column="36">"%s\n"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">path<pos:position pos:line="27" pos:column="48"/></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">strbuf_release<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">buf<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">column_active<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name><name pos:line="31" pos:column="28">s<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">colopts<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40">
		<block type="pseudo"><goto pos:line="32" pos:column="17">goto <name pos:line="32" pos:column="22">conclude<pos:position pos:line="32" pos:column="30"/></name>;<pos:position pos:line="32" pos:column="31"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">strbuf_addf<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><operator pos:line="34" pos:column="21">&amp;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="22">buf<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="27">"%s%s\t%s"<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="35" pos:column="21">color<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><name pos:line="35" pos:column="27">WT_STATUS_HEADER<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">s<pos:position pos:line="35" pos:column="46"/></name></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr></argument>,
		    <argument><expr><ternary><condition><expr><name><name pos:line="36" pos:column="21">s<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">display_comment_prefix<pos:position pos:line="36" pos:column="46"/></name></name></expr> ?<pos:position pos:line="36" pos:column="48"/></condition><then pos:line="36" pos:column="48"> <expr><literal type="string" pos:line="36" pos:column="49">"#"<pos:position pos:line="36" pos:column="52"/></literal></expr> <pos:position pos:line="36" pos:column="53"/></then><else pos:line="36" pos:column="53">: <expr><literal type="string" pos:line="36" pos:column="55">""<pos:position pos:line="36" pos:column="57"/></literal></expr></else></ternary></expr></argument>,
		    <argument><expr><call><name pos:line="37" pos:column="21">color<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">WT_STATUS_UNTRACKED<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">s<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">memset<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><operator pos:line="38" pos:column="16">&amp;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="17">copts<pos:position pos:line="38" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="27">sizeof<argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">copts<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">copts<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">padding<pos:position pos:line="39" pos:column="22"/></name></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">copts<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">indent<pos:position pos:line="40" pos:column="21"/></name></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <name><name pos:line="40" pos:column="24">buf<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">buf<pos:position pos:line="40" pos:column="31"/></name></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">want_color<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name><name pos:line="41" pos:column="24">s<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">use_color<pos:position pos:line="41" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="17">copts<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">.<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">nl<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="28">GIT_COLOR_RESET<pos:position pos:line="42" pos:column="43"/></name> <literal type="string" pos:line="42" pos:column="44">"\n"<pos:position pos:line="42" pos:column="48"/></literal></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">print_columns<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><operator pos:line="43" pos:column="23">&amp;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="24">output<pos:position pos:line="43" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="32">s<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">colopts<pos:position pos:line="43" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="44">&amp;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="45">copts<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">string_list_clear<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="28">output<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="36">0<pos:position pos:line="44" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">strbuf_release<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">&amp;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="25">buf<pos:position pos:line="45" pos:column="28"/></name></expr></argument>)<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
<label><name pos:line="46" pos:column="1">conclude<pos:position pos:line="46" pos:column="9"/></name>:<pos:position pos:line="46" pos:column="10"/></label>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">status_printf_ln<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">s<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="29">GIT_COLOR_NORMAL<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="47">""<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

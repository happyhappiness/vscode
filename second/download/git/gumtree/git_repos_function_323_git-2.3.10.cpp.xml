<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_323_git-2.3.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ce_write_entry<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">git_SHA_CTX<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">c<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">fd<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">cache_entry<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">ce<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">strbuf<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">previous_name<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">size<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">ondisk_cache_entry<pos:position pos:line="5" pos:column="34"/></name></name> <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier></type><name pos:line="5" pos:column="36">ondisk<pos:position pos:line="5" pos:column="42"/></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">saved_namelen<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">saved_namelen<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt> <comment type="block" pos:line="6" pos:column="44">/* compiler workaround */</comment>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">name<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">result<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">ce<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">ce_flags<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="28">CE_STRIP_NAME<pos:position pos:line="10" pos:column="41"/></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">saved_namelen<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <call><name pos:line="11" pos:column="33">ce_namelen<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">ce<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">ce<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">ce_namelen<pos:position pos:line="12" pos:column="31"/></name></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">previous_name<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28"> <block pos:line="15" pos:column="29">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">size<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">ondisk_ce_size<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">ce<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">ondisk<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <call><name pos:line="17" pos:column="26">xcalloc<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">size<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">name<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">copy_cache_entry_to_ondisk<pos:position pos:line="18" pos:column="50"/></name><argument_list pos:line="18" pos:column="50">(<argument><expr><name pos:line="18" pos:column="51">ondisk<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">ce<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">memcpy<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">name<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="30">ce<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">name<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="40">ce_namelen<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">ce<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">int<pos:position pos:line="21" pos:column="20"/></name></type> <name pos:line="21" pos:column="21">common<pos:position pos:line="21" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="21" pos:column="29">to_remove<pos:position pos:line="21" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="21" pos:column="40">prefix_size<pos:position pos:line="21" pos:column="51"/></name></decl>;<pos:position pos:line="21" pos:column="52"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">unsigned<pos:position pos:line="22" pos:column="25"/></name> <name pos:line="22" pos:column="26">char<pos:position pos:line="22" pos:column="30"/></name></type> <name><name pos:line="22" pos:column="31">to_remove_vi<pos:position pos:line="22" pos:column="43"/></name><index pos:line="22" pos:column="43">[<expr><literal type="number" pos:line="22" pos:column="44">16<pos:position pos:line="22" pos:column="46"/></literal></expr>]<pos:position pos:line="22" pos:column="47"/></index></name></decl>;<pos:position pos:line="22" pos:column="48"/></decl_stmt>
		<for pos:line="23" pos:column="17">for <control pos:line="23" pos:column="21">(<init><expr><name pos:line="23" pos:column="22">common<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <literal type="number" pos:line="23" pos:column="31">0<pos:position pos:line="23" pos:column="32"/></literal></expr>;<pos:position pos:line="23" pos:column="33"/></init>
		     <condition><expr><operator pos:line="24" pos:column="22">(<pos:position pos:line="24" pos:column="23"/></operator><name><name pos:line="24" pos:column="23">ce<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">name<pos:position pos:line="24" pos:column="31"/></name><index pos:line="24" pos:column="31">[<expr><name pos:line="24" pos:column="32">common<pos:position pos:line="24" pos:column="38"/></name></expr>]<pos:position pos:line="24" pos:column="39"/></index></name> <operator pos:line="24" pos:column="40">&amp;&amp;<pos:position pos:line="24" pos:column="50"/></operator>
		      <name pos:line="25" pos:column="23">common<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">&lt;<pos:position pos:line="25" pos:column="34"/></operator> <name><name pos:line="25" pos:column="32">previous_name<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">len<pos:position pos:line="25" pos:column="50"/></name></name> <operator pos:line="25" pos:column="51">&amp;&amp;<pos:position pos:line="25" pos:column="61"/></operator>
		      <name><name pos:line="26" pos:column="23">ce<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">name<pos:position pos:line="26" pos:column="31"/></name><index pos:line="26" pos:column="31">[<expr><name pos:line="26" pos:column="32">common<pos:position pos:line="26" pos:column="38"/></name></expr>]<pos:position pos:line="26" pos:column="39"/></index></name> <operator pos:line="26" pos:column="40">==<pos:position pos:line="26" pos:column="42"/></operator> <name><name pos:line="26" pos:column="43">previous_name<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">-&gt;<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="58">buf<pos:position pos:line="26" pos:column="61"/></name><index pos:line="26" pos:column="61">[<expr><name pos:line="26" pos:column="62">common<pos:position pos:line="26" pos:column="68"/></name></expr>]<pos:position pos:line="26" pos:column="69"/></index></name><operator pos:line="26" pos:column="69">)<pos:position pos:line="26" pos:column="70"/></operator></expr>;<pos:position pos:line="26" pos:column="71"/></condition>
		     <incr><expr><name pos:line="27" pos:column="22">common<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">++<pos:position pos:line="27" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="31"/></control>
			<block type="pseudo"><empty_stmt pos:line="28" pos:column="25">;<pos:position pos:line="28" pos:column="26"/></empty_stmt></block></for> <comment type="block" pos:line="28" pos:column="27">/* still matching */</comment>
		<expr_stmt><expr><name pos:line="29" pos:column="17">to_remove<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name><name pos:line="29" pos:column="29">previous_name<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">len<pos:position pos:line="29" pos:column="47"/></name></name> <operator pos:line="29" pos:column="48">-<pos:position pos:line="29" pos:column="49"/></operator> <name pos:line="29" pos:column="50">common<pos:position pos:line="29" pos:column="56"/></name></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">prefix_size<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">encode_varint<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">to_remove<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">to_remove_vi<pos:position pos:line="30" pos:column="68"/></name></expr></argument>)<pos:position pos:line="30" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="70"/></expr_stmt>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">ce<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">ce_flags<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">&amp;<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="36">CE_EXTENDED<pos:position pos:line="32" pos:column="47"/></name></expr>)<pos:position pos:line="32" pos:column="48"/></condition><then pos:line="32" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">size<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <call><name pos:line="33" pos:column="32">offsetof<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr pos:line="33" pos:column="41">struct <name pos:line="33" pos:column="48">ondisk_cache_entry_extended<pos:position pos:line="33" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="77">name<pos:position pos:line="33" pos:column="81"/></name></expr></argument>)<pos:position pos:line="33" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="83"/></expr_stmt></block></then>
		<else pos:line="34" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">size<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <call><name pos:line="35" pos:column="32">offsetof<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr pos:line="35" pos:column="41">struct <name pos:line="35" pos:column="48">ondisk_cache_entry<pos:position pos:line="35" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="68">name<pos:position pos:line="35" pos:column="72"/></name></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="36" pos:column="17">size<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">+=<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">prefix_size<pos:position pos:line="36" pos:column="36"/></name> <operator pos:line="36" pos:column="37">+<pos:position pos:line="36" pos:column="38"/></operator> <operator pos:line="36" pos:column="39">(<pos:position pos:line="36" pos:column="40"/></operator><call><name pos:line="36" pos:column="40">ce_namelen<pos:position pos:line="36" pos:column="50"/></name><argument_list pos:line="36" pos:column="50">(<argument><expr><name pos:line="36" pos:column="51">ce<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call> <operator pos:line="36" pos:column="55">-<pos:position pos:line="36" pos:column="56"/></operator> <name pos:line="36" pos:column="57">common<pos:position pos:line="36" pos:column="63"/></name> <operator pos:line="36" pos:column="64">+<pos:position pos:line="36" pos:column="65"/></operator> <literal type="number" pos:line="36" pos:column="66">1<pos:position pos:line="36" pos:column="67"/></literal><operator pos:line="36" pos:column="67">)<pos:position pos:line="36" pos:column="68"/></operator></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>

		<expr_stmt><expr><name pos:line="38" pos:column="17">ondisk<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">xcalloc<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><literal type="number" pos:line="38" pos:column="34">1<pos:position pos:line="38" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">size<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">name<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <call><name pos:line="39" pos:column="24">copy_cache_entry_to_ondisk<pos:position pos:line="39" pos:column="50"/></name><argument_list pos:line="39" pos:column="50">(<argument><expr><name pos:line="39" pos:column="51">ondisk<pos:position pos:line="39" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="59">ce<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">memcpy<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">name<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">to_remove_vi<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">prefix_size<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">memcpy<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name pos:line="41" pos:column="24">name<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">+<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">prefix_size<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="44">ce<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">name<pos:position pos:line="41" pos:column="52"/></name></name> <operator pos:line="41" pos:column="53">+<pos:position pos:line="41" pos:column="54"/></operator> <name pos:line="41" pos:column="55">common<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="63">ce_namelen<pos:position pos:line="41" pos:column="73"/></name><argument_list pos:line="41" pos:column="73">(<argument><expr><name pos:line="41" pos:column="74">ce<pos:position pos:line="41" pos:column="76"/></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call> <operator pos:line="41" pos:column="78">-<pos:position pos:line="41" pos:column="79"/></operator> <name pos:line="41" pos:column="80">common<pos:position pos:line="41" pos:column="86"/></name></expr></argument>)<pos:position pos:line="41" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="88"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="43" pos:column="17">strbuf_splice<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">previous_name<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">common<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">to_remove<pos:position pos:line="43" pos:column="63"/></name></expr></argument>,
			      <argument><expr><name><name pos:line="44" pos:column="31">ce<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">name<pos:position pos:line="44" pos:column="39"/></name></name> <operator pos:line="44" pos:column="40">+<pos:position pos:line="44" pos:column="41"/></operator> <name pos:line="44" pos:column="42">common<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="50">ce_namelen<pos:position pos:line="44" pos:column="60"/></name><argument_list pos:line="44" pos:column="60">(<argument><expr><name pos:line="44" pos:column="61">ce<pos:position pos:line="44" pos:column="63"/></name></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call> <operator pos:line="44" pos:column="65">-<pos:position pos:line="44" pos:column="66"/></operator> <name pos:line="44" pos:column="67">common<pos:position pos:line="44" pos:column="73"/></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name><name pos:line="46" pos:column="13">ce<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">ce_flags<pos:position pos:line="46" pos:column="25"/></name></name> <operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator> <name pos:line="46" pos:column="28">CE_STRIP_NAME<pos:position pos:line="46" pos:column="41"/></name></expr>)<pos:position pos:line="46" pos:column="42"/></condition><then pos:line="46" pos:column="42"> <block pos:line="46" pos:column="43">{
		<expr_stmt><expr><name><name pos:line="47" pos:column="17">ce<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">ce_namelen<pos:position pos:line="47" pos:column="31"/></name></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <name pos:line="47" pos:column="34">saved_namelen<pos:position pos:line="47" pos:column="47"/></name></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">ce<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">-&gt;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="21">ce_flags<pos:position pos:line="48" pos:column="29"/></name></name> <operator pos:line="48" pos:column="30">&amp;=<pos:position pos:line="48" pos:column="36"/></operator> <operator pos:line="48" pos:column="33">~<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="34">CE_STRIP_NAME<pos:position pos:line="48" pos:column="47"/></name></expr>;<pos:position pos:line="48" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="51" pos:column="9">result<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">ce_write<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">c<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">fd<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="34">ondisk<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">size<pos:position pos:line="51" pos:column="46"/></name></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">free<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">ondisk<pos:position pos:line="52" pos:column="20"/></name></expr></argument>)<pos:position pos:line="52" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt>
	<return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">result<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

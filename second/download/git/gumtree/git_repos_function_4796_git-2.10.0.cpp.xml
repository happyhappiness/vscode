<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_4796_git-2.10.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_index_file<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">apply_state<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">state<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">path<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="3" pos:column="28">unsigned<pos:position pos:line="3" pos:column="36"/></name></type> <name pos:line="3" pos:column="37">mode<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="4" pos:column="28">void<pos:position pos:line="4" pos:column="32"/></name> <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier></type><name pos:line="4" pos:column="34">buf<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="5" pos:column="28">unsigned<pos:position pos:line="5" pos:column="36"/></name> <name pos:line="5" pos:column="37">long<pos:position pos:line="5" pos:column="41"/></name></type> <name pos:line="5" pos:column="42">size<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="47"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">stat<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">cache_entry<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">ce<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">namelen<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><call><name pos:line="9" pos:column="23">strlen<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">path<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">ce_size<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><call><name pos:line="10" pos:column="28">cache_entry_size<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">namelen<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="54"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">state<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">update_index<pos:position pos:line="12" pos:column="33"/></name></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
		<block type="pseudo"><return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">ce<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">xcalloc<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="25">ce_size<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">memcpy<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">ce<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">name<pos:position pos:line="16" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="26">path<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">namelen<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ce<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">ce_mode<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">create_ce_mode<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">mode<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">ce<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">ce_flags<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">create_ce_flags<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><literal type="number" pos:line="18" pos:column="40">0<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">ce<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">ce_namelen<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">namelen<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">S_ISGITLINK<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">mode<pos:position pos:line="20" pos:column="29"/></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">const<pos:position pos:line="21" pos:column="22"/></specifier> <name pos:line="21" pos:column="23">char<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">s<pos:position pos:line="21" pos:column="30"/></name></decl>;<pos:position pos:line="21" pos:column="31"/></decl_stmt>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">skip_prefix<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">buf<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="39">"Subproject commit "<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="61">&amp;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="62">s<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call> <operator pos:line="23" pos:column="65">||<pos:position pos:line="23" pos:column="67"/></operator>
		    <call><name pos:line="24" pos:column="21">get_sha1_hex<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">s<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="37">ce<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">sha1<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><call><name pos:line="25" pos:column="29">_<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"corrupt patch for submodule %s"<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="66">path<pos:position pos:line="25" pos:column="70"/></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></then> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name><name pos:line="27" pos:column="22">state<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">cached<pos:position pos:line="27" pos:column="35"/></name></name></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36"> <block pos:line="27" pos:column="37">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><call><name pos:line="28" pos:column="29">lstat<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">path<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="41">&amp;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="42">st<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <operator pos:line="28" pos:column="46">&lt;<pos:position pos:line="28" pos:column="50"/></operator> <literal type="number" pos:line="28" pos:column="48">0<pos:position pos:line="28" pos:column="49"/></literal></expr>)<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="33">die_errno<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><call><name pos:line="29" pos:column="43">_<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><literal type="string" pos:line="29" pos:column="45">"unable to stat newly created file '%s'"<pos:position pos:line="29" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="86"/></argument_list></call></expr></argument>,
					  <argument><expr><name pos:line="30" pos:column="43">path<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">fill_stat_cache_info<pos:position pos:line="31" pos:column="45"/></name><argument_list pos:line="31" pos:column="45">(<argument><expr><name pos:line="31" pos:column="46">ce<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="50">&amp;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="51">st<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">write_sha1_file<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">buf<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">size<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">blob_type<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="59">ce<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">-&gt;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="63">sha1<pos:position pos:line="33" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call> <operator pos:line="33" pos:column="69">&lt;<pos:position pos:line="33" pos:column="73"/></operator> <literal type="number" pos:line="33" pos:column="71">0<pos:position pos:line="33" pos:column="72"/></literal></expr>)<pos:position pos:line="33" pos:column="73"/></condition><then pos:line="33" pos:column="73">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">die<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><call><name pos:line="34" pos:column="29">_<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><literal type="string" pos:line="34" pos:column="31">"unable to create backing store for newly created file %s"<pos:position pos:line="34" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="92">path<pos:position pos:line="34" pos:column="96"/></name></expr></argument>)<pos:position pos:line="34" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="98"/></expr_stmt></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">add_cache_entry<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">ce<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="33">ADD_CACHE_OK_TO_ADD<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call> <operator pos:line="36" pos:column="54">&lt;<pos:position pos:line="36" pos:column="58"/></operator> <literal type="number" pos:line="36" pos:column="56">0<pos:position pos:line="36" pos:column="57"/></literal></expr>)<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="17">die<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><call><name pos:line="37" pos:column="21">_<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"unable to add cache entry for %s"<pos:position pos:line="37" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="60">path<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt></block></then></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

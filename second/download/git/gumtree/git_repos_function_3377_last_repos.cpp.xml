<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_3377_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cmd_main<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">int<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">argc<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">argv<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">method<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><call><name pos:line="3" pos:column="24">getenv<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><literal type="string" pos:line="3" pos:column="31">"REQUEST_METHOD"<pos:position pos:line="3" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dir<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">service_cmd<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">cmd<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">NULL<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">cmd_arg<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">strbuf<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">hdr<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">STRBUF_INIT<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">set_die_routine<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">die_webcgi<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">set_die_is_recursing_routine<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">die_webcgi_recursing<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">method<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">die<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"No REQUEST_METHOD from server"<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="54"/></expr_stmt></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">strcmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">method<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="29">"HEAD"<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">method<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <literal type="string" pos:line="16" pos:column="26">"GET"<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="17" pos:column="9">dir<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">getdir<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">()<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="25">ARRAY_SIZE<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">services<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></condition> <incr><expr><name pos:line="19" pos:column="47">i<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">++<pos:position pos:line="19" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="51"/></control> <block pos:line="19" pos:column="52">{
		<decl_stmt><decl><type><name><name pos:line="20" pos:column="17">struct<pos:position pos:line="20" pos:column="23"/></name> <name pos:line="20" pos:column="24">service_cmd<pos:position pos:line="20" pos:column="35"/></name></name> <modifier pos:line="20" pos:column="36">*<pos:position pos:line="20" pos:column="37"/></modifier></type><name pos:line="20" pos:column="37">c<pos:position pos:line="20" pos:column="38"/></name> <init pos:line="20" pos:column="39">= <expr><operator pos:line="20" pos:column="41">&amp;<pos:position pos:line="20" pos:column="46"/></operator><name><name pos:line="20" pos:column="42">services<pos:position pos:line="20" pos:column="50"/></name><index pos:line="20" pos:column="50">[<expr><name pos:line="20" pos:column="51">i<pos:position pos:line="20" pos:column="52"/></name></expr>]<pos:position pos:line="20" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">regex_t<pos:position pos:line="21" pos:column="24"/></name></type> <name pos:line="21" pos:column="25">re<pos:position pos:line="21" pos:column="27"/></name></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">regmatch_t<pos:position pos:line="22" pos:column="27"/></name></type> <name><name pos:line="22" pos:column="28">out<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal></expr>]<pos:position pos:line="22" pos:column="34"/></index></name></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">regcomp<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="30">re<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="34">c<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">pattern<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">REG_EXTENDED<pos:position pos:line="24" pos:column="58"/></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="60"/></condition><then pos:line="24" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">die<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="string" pos:line="25" pos:column="29">"Bogus regex in service table: %s"<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="65">c<pos:position pos:line="25" pos:column="66"/></name><operator pos:line="25" pos:column="66">-&gt;<pos:position pos:line="25" pos:column="71"/></operator><name pos:line="25" pos:column="68">pattern<pos:position pos:line="25" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">regexec<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><operator pos:line="26" pos:column="30">&amp;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="31">re<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">dir<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="40">1<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">out<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="48">0<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51"> <block pos:line="26" pos:column="52">{
			<decl_stmt><decl><type><name pos:line="27" pos:column="25">size_t<pos:position pos:line="27" pos:column="31"/></name></type> <name pos:line="27" pos:column="32">n<pos:position pos:line="27" pos:column="33"/></name></decl>;<pos:position pos:line="27" pos:column="34"/></decl_stmt>

			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><call><name pos:line="29" pos:column="29">strcmp<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">method<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="44">c<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">method<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="55"/></condition><then pos:line="29" pos:column="55">
				<block type="pseudo"><return pos:line="30" pos:column="33">return <expr><call><name pos:line="30" pos:column="40">bad_request<pos:position pos:line="30" pos:column="51"/></name><argument_list pos:line="30" pos:column="51">(<argument><expr><operator pos:line="30" pos:column="52">&amp;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="53">hdr<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">c<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></return></block></then></if>

			<expr_stmt><expr><name pos:line="32" pos:column="25">cmd<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">c<pos:position pos:line="32" pos:column="32"/></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="33" pos:column="25">n<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <name><name pos:line="33" pos:column="29">out<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><literal type="number" pos:line="33" pos:column="33">0<pos:position pos:line="33" pos:column="34"/></literal></expr>]<pos:position pos:line="33" pos:column="35"/></index></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">rm_eo<pos:position pos:line="33" pos:column="41"/></name> <operator pos:line="33" pos:column="42">-<pos:position pos:line="33" pos:column="43"/></operator> <name><name pos:line="33" pos:column="44">out<pos:position pos:line="33" pos:column="47"/></name><index pos:line="33" pos:column="47">[<expr><literal type="number" pos:line="33" pos:column="48">0<pos:position pos:line="33" pos:column="49"/></literal></expr>]<pos:position pos:line="33" pos:column="50"/></index></name><operator pos:line="33" pos:column="50">.<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="51">rm_so<pos:position pos:line="33" pos:column="56"/></name></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">cmd_arg<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">=<pos:position pos:line="34" pos:column="34"/></operator> <call><name pos:line="34" pos:column="35">xmemdupz<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">dir<pos:position pos:line="34" pos:column="47"/></name> <operator pos:line="34" pos:column="48">+<pos:position pos:line="34" pos:column="49"/></operator> <name><name pos:line="34" pos:column="50">out<pos:position pos:line="34" pos:column="53"/></name><index pos:line="34" pos:column="53">[<expr><literal type="number" pos:line="34" pos:column="54">0<pos:position pos:line="34" pos:column="55"/></literal></expr>]<pos:position pos:line="34" pos:column="56"/></index></name><operator pos:line="34" pos:column="56">.<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">rm_so<pos:position pos:line="34" pos:column="62"/></name> <operator pos:line="34" pos:column="63">+<pos:position pos:line="34" pos:column="64"/></operator> <literal type="number" pos:line="34" pos:column="65">1<pos:position pos:line="34" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="68">n<pos:position pos:line="34" pos:column="69"/></name> <operator pos:line="34" pos:column="70">-<pos:position pos:line="34" pos:column="71"/></operator> <literal type="number" pos:line="34" pos:column="72">1<pos:position pos:line="34" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="35" pos:column="25">dir<pos:position pos:line="35" pos:column="28"/></name><index pos:line="35" pos:column="28">[<expr><name><name pos:line="35" pos:column="29">out<pos:position pos:line="35" pos:column="32"/></name><index pos:line="35" pos:column="32">[<expr><literal type="number" pos:line="35" pos:column="33">0<pos:position pos:line="35" pos:column="34"/></literal></expr>]<pos:position pos:line="35" pos:column="35"/></index></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">rm_so<pos:position pos:line="35" pos:column="41"/></name></expr>]<pos:position pos:line="35" pos:column="42"/></index></name> <operator pos:line="35" pos:column="43">=<pos:position pos:line="35" pos:column="44"/></operator> <literal type="number" pos:line="35" pos:column="45">0<pos:position pos:line="35" pos:column="46"/></literal></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>
			<break pos:line="36" pos:column="25">break;<pos:position pos:line="36" pos:column="31"/></break>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">regfree<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><operator pos:line="38" pos:column="25">&amp;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="26">re<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></for>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">cmd<pos:position pos:line="41" pos:column="17"/></name></expr>)<pos:position pos:line="41" pos:column="18"/></condition><then pos:line="41" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">not_found<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><operator pos:line="42" pos:column="27">&amp;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="28">hdr<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="33">"Request not supported: '%s'"<pos:position pos:line="42" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">dir<pos:position pos:line="42" pos:column="67"/></name></expr></argument>)<pos:position pos:line="42" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="69"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">setup_path<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">()<pos:position pos:line="44" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><call><name pos:line="45" pos:column="14">enter_repo<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">dir<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="30">0<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="17">not_found<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><operator pos:line="46" pos:column="27">&amp;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="28">hdr<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="33">"Not a git repository: '%s'"<pos:position pos:line="46" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="63">dir<pos:position pos:line="46" pos:column="66"/></name></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><call><name pos:line="47" pos:column="14">getenv<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><literal type="string" pos:line="47" pos:column="21">"GIT_HTTP_EXPORT_ALL"<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="43"/></argument_list></call> <operator pos:line="47" pos:column="44">&amp;&amp;<pos:position pos:line="47" pos:column="54"/></operator>
	    <call><name pos:line="48" pos:column="13">access<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="string" pos:line="48" pos:column="20">"git-daemon-export-ok"<pos:position pos:line="48" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">F_OK<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr> )<pos:position pos:line="48" pos:column="51"/></condition><then pos:line="48" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">not_found<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><operator pos:line="49" pos:column="27">&amp;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="28">hdr<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="33">"Repository not exported: '%s'"<pos:position pos:line="49" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="66">dir<pos:position pos:line="49" pos:column="69"/></name></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="71"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">http_config<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">()<pos:position pos:line="51" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="52" pos:column="9">max_request_buffer<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <call><name pos:line="52" pos:column="30">git_env_ulong<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><literal type="string" pos:line="52" pos:column="44">"GIT_HTTP_MAX_REQUEST_BUFFER"<pos:position pos:line="52" pos:column="73"/></literal></expr></argument>,
					   <argument><expr><name pos:line="53" pos:column="44">max_request_buffer<pos:position pos:line="53" pos:column="62"/></name></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="64"/></expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="55" pos:column="9">cmd<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">imp<pos:position pos:line="55" pos:column="17"/></name></name><argument_list pos:line="55" pos:column="17">(<argument><expr><operator pos:line="55" pos:column="18">&amp;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="19">hdr<pos:position pos:line="55" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="24">cmd_arg<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><literal type="number" pos:line="56" pos:column="16">0<pos:position pos:line="56" pos:column="17"/></literal></expr>;<pos:position pos:line="56" pos:column="18"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

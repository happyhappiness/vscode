<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1417_git-2.12.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">pprint_rename<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">a<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">b<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">old<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">a<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<expr_stmt><expr><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><operator pos:line="4" pos:column="21">new<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="25">=<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">b<pos:position pos:line="4" pos:column="28"/></name></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">strbuf<pos:position pos:line="5" pos:column="22"/></name></name></type> <name pos:line="5" pos:column="23">name<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">STRBUF_INIT<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">pfx_length<pos:position pos:line="6" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="25">sfx_length<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">pfx_adjust_for_slash<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">len_a<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><call><name pos:line="8" pos:column="21">strlen<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">a<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">len_b<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><call><name pos:line="9" pos:column="21">strlen<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">b<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">a_midlen<pos:position pos:line="10" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="23">b_midlen<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">qlen_a<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><call><name pos:line="11" pos:column="22">quote_c_style<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">a<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">NULL<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">NULL<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="51">0<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">qlen_b<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><call><name pos:line="12" pos:column="22">quote_c_style<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">b<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">NULL<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">NULL<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="54"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">qlen_a<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">||<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">qlen_b<pos:position pos:line="14" pos:column="29"/></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">quote_c_style<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">a<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="35">name<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">NULL<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="47">0<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strbuf_addstr<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">name<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="38">" =&gt; "<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">quote_c_style<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">b<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">&amp;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="35">name<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">NULL<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><call><name pos:line="18" pos:column="24">strbuf_detach<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><operator pos:line="18" pos:column="38">&amp;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="39">name<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">NULL<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* Find common prefix */</comment>
	<expr_stmt><expr><name pos:line="22" pos:column="9">pfx_length<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
	<while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><operator pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">old<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></operator><operator pos:line="23" pos:column="25">new<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="29">&amp;&amp;<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="32">*<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">old<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">==<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="40">*<pos:position pos:line="23" pos:column="41"/></operator><operator pos:line="23" pos:column="41">new<pos:position pos:line="23" pos:column="44"/></operator></expr>)<pos:position pos:line="23" pos:column="45"/></condition> <block pos:line="23" pos:column="46">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">old<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <literal type="char" pos:line="24" pos:column="29">'/'<pos:position pos:line="24" pos:column="32"/></literal></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">pfx_length<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">=<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="38">old<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">-<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">a<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">+<pos:position pos:line="25" pos:column="47"/></operator> <literal type="number" pos:line="25" pos:column="48">1<pos:position pos:line="25" pos:column="49"/></literal></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="26" pos:column="17">old<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">++<pos:position pos:line="26" pos:column="22"/></operator></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="27" pos:column="17">new<pos:position pos:line="27" pos:column="20"/></operator><operator pos:line="27" pos:column="20">++<pos:position pos:line="27" pos:column="22"/></operator></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></while>

	<comment type="block" pos:line="30" pos:column="9">/* Find common suffix */</comment>
	<expr_stmt><expr><name pos:line="31" pos:column="9">old<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">a<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">+<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">len_a<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="32" pos:column="9">new<pos:position pos:line="32" pos:column="12"/></operator> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">b<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">+<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">len_b<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="33" pos:column="9">sfx_length<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <literal type="number" pos:line="33" pos:column="22">0<pos:position pos:line="33" pos:column="23"/></literal></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
	<comment type="block" pos:line="34" pos:column="9">/*
	 * If there is a common prefix, it must end in a slash.  In
	 * that case we let this loop run 1 into the prefix to see the
	 * same slash.
	 *
	 * If there is no common prefix, we cannot do this as it would
	 * underrun the input strings.
	 */</comment>
	<expr_stmt><expr><name pos:line="42" pos:column="9">pfx_adjust_for_slash<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <operator pos:line="42" pos:column="32">(<pos:position pos:line="42" pos:column="33"/></operator><ternary><condition><expr><name pos:line="42" pos:column="33">pfx_length<pos:position pos:line="42" pos:column="43"/></name></expr> ?<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <expr><literal type="number" pos:line="42" pos:column="46">1<pos:position pos:line="42" pos:column="47"/></literal></expr> <pos:position pos:line="42" pos:column="48"/></then><else pos:line="42" pos:column="48">: <expr><literal type="number" pos:line="42" pos:column="50">0<pos:position pos:line="42" pos:column="51"/></literal></expr></else></ternary><operator pos:line="42" pos:column="51">)<pos:position pos:line="42" pos:column="52"/></operator></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
	<while pos:line="43" pos:column="9">while <condition pos:line="43" pos:column="15">(<expr><name pos:line="43" pos:column="16">a<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">+<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">pfx_length<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">-<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">pfx_adjust_for_slash<pos:position pos:line="43" pos:column="53"/></name> <operator pos:line="43" pos:column="54">&lt;=<pos:position pos:line="43" pos:column="59"/></operator> <name pos:line="43" pos:column="57">old<pos:position pos:line="43" pos:column="60"/></name> <operator pos:line="43" pos:column="61">&amp;&amp;<pos:position pos:line="43" pos:column="71"/></operator>
	       <name pos:line="44" pos:column="16">b<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">+<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">pfx_length<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">-<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">pfx_adjust_for_slash<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">&lt;=<pos:position pos:line="44" pos:column="59"/></operator> <operator pos:line="44" pos:column="57">new<pos:position pos:line="44" pos:column="60"/></operator> <operator pos:line="44" pos:column="61">&amp;&amp;<pos:position pos:line="44" pos:column="71"/></operator>
	       <operator pos:line="45" pos:column="16">*<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">old<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">==<pos:position pos:line="45" pos:column="23"/></operator> <operator pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></operator><operator pos:line="45" pos:column="25">new<pos:position pos:line="45" pos:column="28"/></operator></expr>)<pos:position pos:line="45" pos:column="29"/></condition> <block pos:line="45" pos:column="30">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">old<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">==<pos:position pos:line="46" pos:column="28"/></operator> <literal type="char" pos:line="46" pos:column="29">'/'<pos:position pos:line="46" pos:column="32"/></literal></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="25">sfx_length<pos:position pos:line="47" pos:column="35"/></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="38">len_a<pos:position pos:line="47" pos:column="43"/></name> <operator pos:line="47" pos:column="44">-<pos:position pos:line="47" pos:column="45"/></operator> <operator pos:line="47" pos:column="46">(<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="47">old<pos:position pos:line="47" pos:column="50"/></name> <operator pos:line="47" pos:column="51">-<pos:position pos:line="47" pos:column="52"/></operator> <name pos:line="47" pos:column="53">a<pos:position pos:line="47" pos:column="54"/></name><operator pos:line="47" pos:column="54">)<pos:position pos:line="47" pos:column="55"/></operator></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="48" pos:column="17">old<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">--<pos:position pos:line="48" pos:column="22"/></operator></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="49" pos:column="17">new<pos:position pos:line="49" pos:column="20"/></operator><operator pos:line="49" pos:column="20">--<pos:position pos:line="49" pos:column="22"/></operator></expr>;<pos:position pos:line="49" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></while>

	<comment type="block" pos:line="52" pos:column="9">/*
	 * pfx{mid-a =&gt; mid-b}sfx
	 * {pfx-a =&gt; pfx-b}sfx
	 * pfx{sfx-a =&gt; sfx-b}
	 * name-a =&gt; name-b
	 */</comment>
	<expr_stmt><expr><name pos:line="58" pos:column="9">a_midlen<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">len_a<pos:position pos:line="58" pos:column="25"/></name> <operator pos:line="58" pos:column="26">-<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="28">pfx_length<pos:position pos:line="58" pos:column="38"/></name> <operator pos:line="58" pos:column="39">-<pos:position pos:line="58" pos:column="40"/></operator> <name pos:line="58" pos:column="41">sfx_length<pos:position pos:line="58" pos:column="51"/></name></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="59" pos:column="9">b_midlen<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator> <name pos:line="59" pos:column="20">len_b<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">-<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">pfx_length<pos:position pos:line="59" pos:column="38"/></name> <operator pos:line="59" pos:column="39">-<pos:position pos:line="59" pos:column="40"/></operator> <name pos:line="59" pos:column="41">sfx_length<pos:position pos:line="59" pos:column="51"/></name></expr>;<pos:position pos:line="59" pos:column="52"/></expr_stmt>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">a_midlen<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">&lt;<pos:position pos:line="60" pos:column="26"/></operator> <literal type="number" pos:line="60" pos:column="24">0<pos:position pos:line="60" pos:column="25"/></literal></expr>)<pos:position pos:line="60" pos:column="26"/></condition><then pos:line="60" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="17">a_midlen<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">=<pos:position pos:line="61" pos:column="27"/></operator> <literal type="number" pos:line="61" pos:column="28">0<pos:position pos:line="61" pos:column="29"/></literal></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt></block></then></if>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">b_midlen<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">&lt;<pos:position pos:line="62" pos:column="26"/></operator> <literal type="number" pos:line="62" pos:column="24">0<pos:position pos:line="62" pos:column="25"/></literal></expr>)<pos:position pos:line="62" pos:column="26"/></condition><then pos:line="62" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="17">b_midlen<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <literal type="number" pos:line="63" pos:column="28">0<pos:position pos:line="63" pos:column="29"/></literal></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="65" pos:column="9">strbuf_grow<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><operator pos:line="65" pos:column="21">&amp;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="22">name<pos:position pos:line="65" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="28">pfx_length<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">+<pos:position pos:line="65" pos:column="40"/></operator> <name pos:line="65" pos:column="41">a_midlen<pos:position pos:line="65" pos:column="49"/></name> <operator pos:line="65" pos:column="50">+<pos:position pos:line="65" pos:column="51"/></operator> <name pos:line="65" pos:column="52">b_midlen<pos:position pos:line="65" pos:column="60"/></name> <operator pos:line="65" pos:column="61">+<pos:position pos:line="65" pos:column="62"/></operator> <name pos:line="65" pos:column="63">sfx_length<pos:position pos:line="65" pos:column="73"/></name> <operator pos:line="65" pos:column="74">+<pos:position pos:line="65" pos:column="75"/></operator> <literal type="number" pos:line="65" pos:column="76">7<pos:position pos:line="65" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="79"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">pfx_length<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">+<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">sfx_length<pos:position pos:line="66" pos:column="36"/></name></expr>)<pos:position pos:line="66" pos:column="37"/></condition><then pos:line="66" pos:column="37"> <block pos:line="66" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">strbuf_add<pos:position pos:line="67" pos:column="27"/></name><argument_list pos:line="67" pos:column="27">(<argument><expr><operator pos:line="67" pos:column="28">&amp;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="29">name<pos:position pos:line="67" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="35">a<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">pfx_length<pos:position pos:line="67" pos:column="48"/></name></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">strbuf_addch<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><operator pos:line="68" pos:column="30">&amp;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="31">name<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="68" pos:column="37">'{'<pos:position pos:line="68" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">strbuf_add<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">(<argument><expr><operator pos:line="70" pos:column="20">&amp;<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="21">name<pos:position pos:line="70" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="27">a<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">+<pos:position pos:line="70" pos:column="30"/></operator> <name pos:line="70" pos:column="31">pfx_length<pos:position pos:line="70" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="43">a_midlen<pos:position pos:line="70" pos:column="51"/></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">strbuf_addstr<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><operator pos:line="71" pos:column="23">&amp;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="24">name<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="30">" =&gt; "<pos:position pos:line="71" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">strbuf_add<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><operator pos:line="72" pos:column="20">&amp;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="21">name<pos:position pos:line="72" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="27">b<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">+<pos:position pos:line="72" pos:column="30"/></operator> <name pos:line="72" pos:column="31">pfx_length<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">b_midlen<pos:position pos:line="72" pos:column="51"/></name></expr></argument>)<pos:position pos:line="72" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">pfx_length<pos:position pos:line="73" pos:column="23"/></name> <operator pos:line="73" pos:column="24">+<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="26">sfx_length<pos:position pos:line="73" pos:column="36"/></name></expr>)<pos:position pos:line="73" pos:column="37"/></condition><then pos:line="73" pos:column="37"> <block pos:line="73" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">strbuf_addch<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><operator pos:line="74" pos:column="30">&amp;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="31">name<pos:position pos:line="74" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="37">'}'<pos:position pos:line="74" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">strbuf_add<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><operator pos:line="75" pos:column="28">&amp;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="29">name<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="35">a<pos:position pos:line="75" pos:column="36"/></name> <operator pos:line="75" pos:column="37">+<pos:position pos:line="75" pos:column="38"/></operator> <name pos:line="75" pos:column="39">len_a<pos:position pos:line="75" pos:column="44"/></name> <operator pos:line="75" pos:column="45">-<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="47">sfx_length<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">sfx_length<pos:position pos:line="75" pos:column="69"/></name></expr></argument>)<pos:position pos:line="75" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="71"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>
	<return pos:line="77" pos:column="9">return <expr><call><name pos:line="77" pos:column="16">strbuf_detach<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><operator pos:line="77" pos:column="30">&amp;<pos:position pos:line="77" pos:column="35"/></operator><name pos:line="77" pos:column="31">name<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="37">NULL<pos:position pos:line="77" pos:column="41"/></name></expr></argument>)<pos:position pos:line="77" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="43"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

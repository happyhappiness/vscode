<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_6855_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pthread_init_lock<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">MLOCK_T<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">sl<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">pthread_mutexattr_t<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">attr<pos:position pos:line="2" pos:column="27"/></name></decl>;<pos:position pos:line="2" pos:column="28"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">pthread_mutexattr_init<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><operator pos:line="3" pos:column="30">&amp;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="31">attr<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <block type="pseudo"><return pos:line="3" pos:column="38">return <expr><literal type="number" pos:line="3" pos:column="45">1<pos:position pos:line="3" pos:column="46"/></literal></expr>;<pos:position pos:line="3" pos:column="47"/></return></block></then></if>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">pthread_mutexattr_settype<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><operator pos:line="4" pos:column="33">&amp;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="34">attr<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">PTHREAD_MUTEX_RECURSIVE<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="65"/></condition><then pos:line="4" pos:column="65"> <block type="pseudo"><return pos:line="4" pos:column="66">return <expr><literal type="number" pos:line="4" pos:column="73">1<pos:position pos:line="4" pos:column="74"/></literal></expr>;<pos:position pos:line="4" pos:column="75"/></return></block></then></if>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">pthread_mutex_init<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">sl<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="30">&amp;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="31">attr<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <block type="pseudo"><return pos:line="5" pos:column="38">return <expr><literal type="number" pos:line="5" pos:column="45">1<pos:position pos:line="5" pos:column="46"/></literal></expr>;<pos:position pos:line="5" pos:column="47"/></return></block></then></if>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">pthread_mutexattr_destroy<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><operator pos:line="6" pos:column="33">&amp;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="34">attr<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40"> <block type="pseudo"><return pos:line="6" pos:column="41">return <expr><literal type="number" pos:line="6" pos:column="48">1<pos:position pos:line="6" pos:column="49"/></literal></expr>;<pos:position pos:line="6" pos:column="50"/></return></block></then></if>
  <return pos:line="7" pos:column="3">return <expr><literal type="number" pos:line="7" pos:column="10">0<pos:position pos:line="7" pos:column="11"/></literal></expr>;<pos:position pos:line="7" pos:column="12"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

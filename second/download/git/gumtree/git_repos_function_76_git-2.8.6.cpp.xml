<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_76_git-2.8.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">git_pretty_formats_config<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">var<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">value<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">void<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">cb<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">cmt_fmt_map<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">commit_format<pos:position pos:line="3" pos:column="42"/></name> <init pos:line="3" pos:column="43">= <expr><name pos:line="3" pos:column="45">NULL<pos:position pos:line="3" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">name<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">fmt<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">skip_prefix<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">var<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"pretty."<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="42">&amp;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="43">name<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="25">builtin_formats_len<pos:position pos:line="11" pos:column="44"/></name></expr>;<pos:position pos:line="11" pos:column="45"/></condition> <incr><expr><name pos:line="11" pos:column="46">i<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">++<pos:position pos:line="11" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="50"/></control> <block pos:line="11" pos:column="51">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">strcmp<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">commit_formats<pos:position pos:line="12" pos:column="43"/></name><index pos:line="12" pos:column="43">[<expr><name pos:line="12" pos:column="44">i<pos:position pos:line="12" pos:column="45"/></name></expr>]<pos:position pos:line="12" pos:column="46"/></index></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">name<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">name<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></for>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">builtin_formats_len<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></init> <condition><expr><name pos:line="16" pos:column="39">i<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">&lt;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="43">commit_formats_len<pos:position pos:line="16" pos:column="61"/></name></expr>;<pos:position pos:line="16" pos:column="62"/></condition> <incr><expr><name pos:line="16" pos:column="63">i<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">++<pos:position pos:line="16" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="67"/></control> <block pos:line="16" pos:column="68">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">strcmp<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name><name pos:line="17" pos:column="29">commit_formats<pos:position pos:line="17" pos:column="43"/></name><index pos:line="17" pos:column="43">[<expr><name pos:line="17" pos:column="44">i<pos:position pos:line="17" pos:column="45"/></name></expr>]<pos:position pos:line="17" pos:column="46"/></index></name><operator pos:line="17" pos:column="46">.<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">name<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">name<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59"> <block pos:line="17" pos:column="60">{
			<expr_stmt><expr><name pos:line="18" pos:column="25">commit_format<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">=<pos:position pos:line="18" pos:column="40"/></operator> <operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name><name pos:line="18" pos:column="42">commit_formats<pos:position pos:line="18" pos:column="56"/></name><index pos:line="18" pos:column="56">[<expr><name pos:line="18" pos:column="57">i<pos:position pos:line="18" pos:column="58"/></name></expr>]<pos:position pos:line="18" pos:column="59"/></index></name></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
			<break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">commit_format<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <block pos:line="23" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">ALLOC_GROW<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">commit_formats<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">commit_formats_len<pos:position pos:line="24" pos:column="62"/></name><operator pos:line="24" pos:column="62">+<pos:position pos:line="24" pos:column="63"/></operator><literal type="number" pos:line="24" pos:column="63">1<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>,
			   <argument><expr><name pos:line="25" pos:column="28">commit_formats_alloc<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">commit_format<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <operator pos:line="26" pos:column="33">&amp;<pos:position pos:line="26" pos:column="38"/></operator><name><name pos:line="26" pos:column="34">commit_formats<pos:position pos:line="26" pos:column="48"/></name><index pos:line="26" pos:column="48">[<expr><name pos:line="26" pos:column="49">commit_formats_len<pos:position pos:line="26" pos:column="67"/></name></expr>]<pos:position pos:line="26" pos:column="68"/></index></name></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">memset<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">commit_format<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="42">sizeof<argument_list pos:line="27" pos:column="48">(<argument><expr><operator pos:line="27" pos:column="49">*<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">commit_format<pos:position pos:line="27" pos:column="63"/></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">commit_formats_len<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">++<pos:position pos:line="28" pos:column="37"/></operator></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="31" pos:column="9">commit_format<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">name<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">xstrdup<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">name<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="32" pos:column="9">commit_format<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">format<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">CMIT_FMT_USERFORMAT<pos:position pos:line="32" pos:column="52"/></name></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">git_config_string<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><operator pos:line="33" pos:column="31">&amp;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="32">fmt<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">var<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">value<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">-<pos:position pos:line="34" pos:column="25"/></operator><literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></return></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">skip_prefix<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">fmt<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="30">"format:"<pos:position pos:line="36" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="41">&amp;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="42">fmt<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="47"/></condition><then pos:line="36" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">commit_format<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">is_tformat<pos:position pos:line="37" pos:column="42"/></name></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <literal type="number" pos:line="37" pos:column="45">0<pos:position pos:line="37" pos:column="46"/></literal></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt></block></then>
	<elseif pos:line="38" pos:column="9">else <if pos:line="38" pos:column="14">if <condition pos:line="38" pos:column="17">(<expr><call><name pos:line="38" pos:column="18">skip_prefix<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">fmt<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="35">"tformat:"<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="47">&amp;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="48">fmt<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call> <operator pos:line="38" pos:column="53">||<pos:position pos:line="38" pos:column="55"/></operator> <call><name pos:line="38" pos:column="56">strchr<pos:position pos:line="38" pos:column="62"/></name><argument_list pos:line="38" pos:column="62">(<argument><expr><name pos:line="38" pos:column="63">fmt<pos:position pos:line="38" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="68">'%'<pos:position pos:line="38" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="73"/></condition><then pos:line="38" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="17">commit_format<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">is_tformat<pos:position pos:line="39" pos:column="42"/></name></name> <operator pos:line="39" pos:column="43">=<pos:position pos:line="39" pos:column="44"/></operator> <literal type="number" pos:line="39" pos:column="45">1<pos:position pos:line="39" pos:column="46"/></literal></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt></block></then></if></elseif>
	<else pos:line="40" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="17">commit_format<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">is_alias<pos:position pos:line="41" pos:column="40"/></name></name> <operator pos:line="41" pos:column="41">=<pos:position pos:line="41" pos:column="42"/></operator> <literal type="number" pos:line="41" pos:column="43">1<pos:position pos:line="41" pos:column="44"/></literal></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">commit_format<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">user_format<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">fmt<pos:position pos:line="42" pos:column="41"/></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>

	<return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_5215_git-2.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">winansi_vfprintf<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">FILE<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">stream<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">format<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">va_list<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">list<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">small_buf<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">256<pos:position pos:line="4" pos:column="27"/></literal></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">small_buf<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">va_list<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">cp<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">isatty<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><call><name pos:line="8" pos:column="21">fileno<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">stream<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37">
		<block type="pseudo"><goto pos:line="9" pos:column="17">goto <name pos:line="9" pos:column="22">abort<pos:position pos:line="9" pos:column="27"/></name>;<pos:position pos:line="9" pos:column="28"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">init<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">()<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">console<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
		<block type="pseudo"><goto pos:line="14" pos:column="17">goto <name pos:line="14" pos:column="22">abort<pos:position pos:line="14" pos:column="27"/></name>;<pos:position pos:line="14" pos:column="28"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">va_copy<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">cp<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="21">list<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="17" pos:column="9">len<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">vsnprintf<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">small_buf<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="36">sizeof<argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">small_buf<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">format<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">cp<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">va_end<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">cp<pos:position pos:line="18" pos:column="18"/></name></expr></argument>)<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">len<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&gt;<pos:position pos:line="20" pos:column="21"/></operator> <sizeof pos:line="20" pos:column="19">sizeof<argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">small_buf<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></sizeof> <operator pos:line="20" pos:column="37">-<pos:position pos:line="20" pos:column="38"/></operator> <literal type="number" pos:line="20" pos:column="39">1<pos:position pos:line="20" pos:column="40"/></literal></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">buf<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">malloc<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">len<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">+<pos:position pos:line="21" pos:column="35"/></operator> <literal type="number" pos:line="21" pos:column="36">1<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">buf<pos:position pos:line="22" pos:column="25"/></name></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26">
			<block type="pseudo"><goto pos:line="23" pos:column="25">goto <name pos:line="23" pos:column="30">abort<pos:position pos:line="23" pos:column="35"/></name>;<pos:position pos:line="23" pos:column="36"/></goto></block></then></if>

		<expr_stmt><expr><name pos:line="25" pos:column="17">len<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">vsnprintf<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">buf<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">len<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">+<pos:position pos:line="25" pos:column="43"/></operator> <literal type="number" pos:line="25" pos:column="44">1<pos:position pos:line="25" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">format<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">list<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">rv<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">ansi_emulate<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">buf<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">stream<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">buf<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">!=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">small_buf<pos:position pos:line="30" pos:column="29"/></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">free<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">buf<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt></block></then></if>
	<return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">rv<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return>

<label><name pos:line="34" pos:column="1">abort<pos:position pos:line="34" pos:column="6"/></name>:<pos:position pos:line="34" pos:column="7"/></label>
	<expr_stmt><expr><name pos:line="35" pos:column="9">rv<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">vfprintf<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">stream<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="31">format<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">list<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">rv<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

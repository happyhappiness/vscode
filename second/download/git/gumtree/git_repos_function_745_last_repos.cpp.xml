<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_745_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">git_config_rename_section_in_file<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">config_filename<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">old_name<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <name pos:line="2" pos:column="67">char<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">new_name<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">remove<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">filename_buf<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">lock_file<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">lock<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">out_fd<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">buf<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><literal type="number" pos:line="8" pos:column="18">1024<pos:position pos:line="8" pos:column="22"/></literal></expr>]<pos:position pos:line="8" pos:column="23"/></index></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">FILE<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">config_file<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">stat<pos:position pos:line="10" pos:column="20"/></name></name></type> <name pos:line="10" pos:column="21">st<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">new_name<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&amp;&amp;<pos:position pos:line="12" pos:column="32"/></operator> <operator pos:line="12" pos:column="25">!<pos:position pos:line="12" pos:column="26"/></operator><call><name pos:line="12" pos:column="26">section_name_is_ok<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">new_name<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55"> <block pos:line="12" pos:column="56">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">ret<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">error<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"invalid section name: %s"<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">new_name<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt>
		<goto pos:line="14" pos:column="17">goto <name pos:line="14" pos:column="22">out_no_rollback<pos:position pos:line="14" pos:column="37"/></name>;<pos:position pos:line="14" pos:column="38"/></goto>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">config_filename<pos:position pos:line="17" pos:column="29"/></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">config_filename<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">=<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">filename_buf<pos:position pos:line="18" pos:column="47"/></name> <operator pos:line="18" pos:column="48">=<pos:position pos:line="18" pos:column="49"/></operator> <call><name pos:line="18" pos:column="50">git_pathdup<pos:position pos:line="18" pos:column="61"/></name><argument_list pos:line="18" pos:column="61">(<argument><expr><literal type="string" pos:line="18" pos:column="62">"config"<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">lock<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">xcalloc<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><literal type="number" pos:line="20" pos:column="24">1<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="27">sizeof<argument_list pos:line="20" pos:column="33">(<argument><expr pos:line="20" pos:column="34">struct <name pos:line="20" pos:column="41">lock_file<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">out_fd<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">hold_lock_file_for_update<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">lock<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">config_filename<pos:position pos:line="21" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="67">0<pos:position pos:line="21" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">out_fd<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&lt;<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <block pos:line="22" pos:column="25">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">ret<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">error<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"could not lock config file %s"<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="62">config_filename<pos:position pos:line="23" pos:column="77"/></name></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>
		<goto pos:line="24" pos:column="17">goto <name pos:line="24" pos:column="22">out<pos:position pos:line="24" pos:column="25"/></name>;<pos:position pos:line="24" pos:column="26"/></goto>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">config_file<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <call><name pos:line="27" pos:column="29">fopen<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">config_filename<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="52">"rb"<pos:position pos:line="27" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call><operator pos:line="27" pos:column="57">)<pos:position pos:line="27" pos:column="58"/></operator></expr>)<pos:position pos:line="27" pos:column="59"/></condition><then pos:line="27" pos:column="59"> <block pos:line="27" pos:column="60">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">ret<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">warn_on_fopen_errors<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">(<argument><expr><name pos:line="28" pos:column="44">config_filename<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">ret<pos:position pos:line="29" pos:column="24"/></name></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25">
			<block type="pseudo"><goto pos:line="30" pos:column="25">goto <name pos:line="30" pos:column="30">out<pos:position pos:line="30" pos:column="33"/></name>;<pos:position pos:line="30" pos:column="34"/></goto></block></then></if>
		<comment type="block" pos:line="31" pos:column="17">/* no config file means nothing to rename, no error */</comment>
		<goto pos:line="32" pos:column="17">goto <name pos:line="32" pos:column="22">commit_and_out<pos:position pos:line="32" pos:column="36"/></name>;<pos:position pos:line="32" pos:column="37"/></goto>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">fstat<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><call><name pos:line="35" pos:column="19">fileno<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">config_file<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="41">st<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call> <operator pos:line="35" pos:column="45">==<pos:position pos:line="35" pos:column="47"/></operator> <operator pos:line="35" pos:column="48">-<pos:position pos:line="35" pos:column="49"/></operator><literal type="number" pos:line="35" pos:column="49">1<pos:position pos:line="35" pos:column="50"/></literal></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51"> <block pos:line="35" pos:column="52">{
		<expr_stmt><expr><name pos:line="36" pos:column="17">ret<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <call><name pos:line="36" pos:column="23">error_errno<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><call><name pos:line="36" pos:column="35">_<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><literal type="string" pos:line="36" pos:column="37">"fstat on %s failed"<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">config_filename<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
		<goto pos:line="37" pos:column="17">goto <name pos:line="37" pos:column="22">out<pos:position pos:line="37" pos:column="25"/></name>;<pos:position pos:line="37" pos:column="26"/></goto>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">chmod<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><call><name pos:line="40" pos:column="19">get_lock_file_path<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">lock<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="45">st<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">.<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="48">st_mode<pos:position pos:line="40" pos:column="55"/></name></name> <operator pos:line="40" pos:column="56">&amp;<pos:position pos:line="40" pos:column="61"/></operator> <literal type="number" pos:line="40" pos:column="58">07777<pos:position pos:line="40" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call> <operator pos:line="40" pos:column="65">&lt;<pos:position pos:line="40" pos:column="69"/></operator> <literal type="number" pos:line="40" pos:column="67">0<pos:position pos:line="40" pos:column="68"/></literal></expr>)<pos:position pos:line="40" pos:column="69"/></condition><then pos:line="40" pos:column="69"> <block pos:line="40" pos:column="70">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">ret<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">error_errno<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><literal type="string" pos:line="41" pos:column="35">"chmod on %s failed"<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>,
				  <argument><expr><call><name pos:line="42" pos:column="35">get_lock_file_path<pos:position pos:line="42" pos:column="53"/></name><argument_list pos:line="42" pos:column="53">(<argument><expr><name pos:line="42" pos:column="54">lock<pos:position pos:line="42" pos:column="58"/></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
		<goto pos:line="43" pos:column="17">goto <name pos:line="43" pos:column="22">out<pos:position pos:line="43" pos:column="25"/></name>;<pos:position pos:line="43" pos:column="26"/></goto>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<while pos:line="46" pos:column="9">while <condition pos:line="46" pos:column="15">(<expr><call><name pos:line="46" pos:column="16">fgets<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">buf<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="27">sizeof<argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">buf<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="46" pos:column="40">config_file<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="53"/></condition> <block pos:line="46" pos:column="54">{
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">int<pos:position pos:line="47" pos:column="20"/></name></type> <name pos:line="47" pos:column="21">i<pos:position pos:line="47" pos:column="22"/></name></decl>;<pos:position pos:line="47" pos:column="23"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">int<pos:position pos:line="48" pos:column="20"/></name></type> <name pos:line="48" pos:column="21">length<pos:position pos:line="48" pos:column="27"/></name></decl>;<pos:position pos:line="48" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">char<pos:position pos:line="49" pos:column="21"/></name> <modifier pos:line="49" pos:column="22">*<pos:position pos:line="49" pos:column="23"/></modifier></type><name pos:line="49" pos:column="23">output<pos:position pos:line="49" pos:column="29"/></name> <init pos:line="49" pos:column="30">= <expr><name pos:line="49" pos:column="32">buf<pos:position pos:line="49" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="36"/></decl_stmt>
		<for pos:line="50" pos:column="17">for <control pos:line="50" pos:column="21">(<init><expr><name pos:line="50" pos:column="22">i<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <literal type="number" pos:line="50" pos:column="26">0<pos:position pos:line="50" pos:column="27"/></literal></expr>;<pos:position pos:line="50" pos:column="28"/></init> <condition><expr><name><name pos:line="50" pos:column="29">buf<pos:position pos:line="50" pos:column="32"/></name><index pos:line="50" pos:column="32">[<expr><name pos:line="50" pos:column="33">i<pos:position pos:line="50" pos:column="34"/></name></expr>]<pos:position pos:line="50" pos:column="35"/></index></name> <operator pos:line="50" pos:column="36">&amp;&amp;<pos:position pos:line="50" pos:column="46"/></operator> <call><name pos:line="50" pos:column="39">isspace<pos:position pos:line="50" pos:column="46"/></name><argument_list pos:line="50" pos:column="46">(<argument><expr><name><name pos:line="50" pos:column="47">buf<pos:position pos:line="50" pos:column="50"/></name><index pos:line="50" pos:column="50">[<expr><name pos:line="50" pos:column="51">i<pos:position pos:line="50" pos:column="52"/></name></expr>]<pos:position pos:line="50" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></condition> <incr><expr><name pos:line="50" pos:column="56">i<pos:position pos:line="50" pos:column="57"/></name><operator pos:line="50" pos:column="57">++<pos:position pos:line="50" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="60"/></control>
			<block type="pseudo"><empty_stmt pos:line="51" pos:column="25">;<pos:position pos:line="51" pos:column="26"/></empty_stmt></block></for> <comment type="block" pos:line="51" pos:column="27">/* do nothing */</comment>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name><name pos:line="52" pos:column="21">buf<pos:position pos:line="52" pos:column="24"/></name><index pos:line="52" pos:column="24">[<expr><name pos:line="52" pos:column="25">i<pos:position pos:line="52" pos:column="26"/></name></expr>]<pos:position pos:line="52" pos:column="27"/></index></name> <operator pos:line="52" pos:column="28">==<pos:position pos:line="52" pos:column="30"/></operator> <literal type="char" pos:line="52" pos:column="31">'['<pos:position pos:line="52" pos:column="34"/></literal></expr>)<pos:position pos:line="52" pos:column="35"/></condition><then pos:line="52" pos:column="35"> <block pos:line="52" pos:column="36">{
			<comment type="block" pos:line="53" pos:column="25">/* it's a section */</comment>
			<decl_stmt><decl><type><name pos:line="54" pos:column="25">int<pos:position pos:line="54" pos:column="28"/></name></type> <name pos:line="54" pos:column="29">offset<pos:position pos:line="54" pos:column="35"/></name> <init pos:line="54" pos:column="36">= <expr><call><name pos:line="54" pos:column="38">section_name_match<pos:position pos:line="54" pos:column="56"/></name><argument_list pos:line="54" pos:column="56">(<argument><expr><operator pos:line="54" pos:column="57">&amp;<pos:position pos:line="54" pos:column="62"/></operator><name><name pos:line="54" pos:column="58">buf<pos:position pos:line="54" pos:column="61"/></name><index pos:line="54" pos:column="61">[<expr><name pos:line="54" pos:column="62">i<pos:position pos:line="54" pos:column="63"/></name></expr>]<pos:position pos:line="54" pos:column="64"/></index></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="66">old_name<pos:position pos:line="54" pos:column="74"/></name></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="76"/></decl_stmt>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">offset<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">&gt;<pos:position pos:line="55" pos:column="40"/></operator> <literal type="number" pos:line="55" pos:column="38">0<pos:position pos:line="55" pos:column="39"/></literal></expr>)<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40"> <block pos:line="55" pos:column="41">{
				<expr_stmt><expr><name pos:line="56" pos:column="33">ret<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">++<pos:position pos:line="56" pos:column="38"/></operator></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>
				<if pos:line="57" pos:column="33">if <condition pos:line="57" pos:column="36">(<expr><name pos:line="57" pos:column="37">new_name<pos:position pos:line="57" pos:column="45"/></name> <operator pos:line="57" pos:column="46">==<pos:position pos:line="57" pos:column="48"/></operator> <name pos:line="57" pos:column="49">NULL<pos:position pos:line="57" pos:column="53"/></name></expr>)<pos:position pos:line="57" pos:column="54"/></condition><then pos:line="57" pos:column="54"> <block pos:line="57" pos:column="55">{
					<expr_stmt><expr><name pos:line="58" pos:column="41">remove<pos:position pos:line="58" pos:column="47"/></name> <operator pos:line="58" pos:column="48">=<pos:position pos:line="58" pos:column="49"/></operator> <literal type="number" pos:line="58" pos:column="50">1<pos:position pos:line="58" pos:column="51"/></literal></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>
					<continue pos:line="59" pos:column="41">continue;<pos:position pos:line="59" pos:column="50"/></continue>
				}<pos:position pos:line="60" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="61" pos:column="33">store<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">.<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="39">baselen<pos:position pos:line="61" pos:column="46"/></name></name> <operator pos:line="61" pos:column="47">=<pos:position pos:line="61" pos:column="48"/></operator> <call><name pos:line="61" pos:column="49">strlen<pos:position pos:line="61" pos:column="55"/></name><argument_list pos:line="61" pos:column="55">(<argument><expr><name pos:line="61" pos:column="56">new_name<pos:position pos:line="61" pos:column="64"/></name></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="66"/></expr_stmt>
				<if pos:line="62" pos:column="33">if <condition pos:line="62" pos:column="36">(<expr><operator pos:line="62" pos:column="37">!<pos:position pos:line="62" pos:column="38"/></operator><call><name pos:line="62" pos:column="38">store_write_section<pos:position pos:line="62" pos:column="57"/></name><argument_list pos:line="62" pos:column="57">(<argument><expr><name pos:line="62" pos:column="58">out_fd<pos:position pos:line="62" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="66">new_name<pos:position pos:line="62" pos:column="74"/></name></expr></argument>)<pos:position pos:line="62" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="76"/></condition><then pos:line="62" pos:column="76"> <block pos:line="62" pos:column="77">{
					<expr_stmt><expr><name pos:line="63" pos:column="41">ret<pos:position pos:line="63" pos:column="44"/></name> <operator pos:line="63" pos:column="45">=<pos:position pos:line="63" pos:column="46"/></operator> <call><name pos:line="63" pos:column="47">write_error<pos:position pos:line="63" pos:column="58"/></name><argument_list pos:line="63" pos:column="58">(<argument><expr><call><name pos:line="63" pos:column="59">get_lock_file_path<pos:position pos:line="63" pos:column="77"/></name><argument_list pos:line="63" pos:column="77">(<argument><expr><name pos:line="63" pos:column="78">lock<pos:position pos:line="63" pos:column="82"/></name></expr></argument>)<pos:position pos:line="63" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="85"/></expr_stmt>
					<goto pos:line="64" pos:column="41">goto <name pos:line="64" pos:column="46">out<pos:position pos:line="64" pos:column="49"/></name>;<pos:position pos:line="64" pos:column="50"/></goto>
				}<pos:position pos:line="65" pos:column="34"/></block></then></if>
				<comment type="block" pos:line="66" pos:column="33">/*
				 * We wrote out the new section, with
				 * a newline, now skip the old
				 * section's length
				 */</comment>
				<expr_stmt><expr><name pos:line="71" pos:column="33">output<pos:position pos:line="71" pos:column="39"/></name> <operator pos:line="71" pos:column="40">+=<pos:position pos:line="71" pos:column="42"/></operator> <name pos:line="71" pos:column="43">offset<pos:position pos:line="71" pos:column="49"/></name> <operator pos:line="71" pos:column="50">+<pos:position pos:line="71" pos:column="51"/></operator> <name pos:line="71" pos:column="52">i<pos:position pos:line="71" pos:column="53"/></name></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt>
				<if pos:line="72" pos:column="33">if <condition pos:line="72" pos:column="36">(<expr><call><name pos:line="72" pos:column="37">strlen<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><name pos:line="72" pos:column="44">output<pos:position pos:line="72" pos:column="50"/></name></expr></argument>)<pos:position pos:line="72" pos:column="51"/></argument_list></call> <operator pos:line="72" pos:column="52">&gt;<pos:position pos:line="72" pos:column="56"/></operator> <literal type="number" pos:line="72" pos:column="54">0<pos:position pos:line="72" pos:column="55"/></literal></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56"> <block pos:line="72" pos:column="57">{
					<comment type="block" pos:line="73" pos:column="41">/*
					 * More content means there's
					 * a declaration to put on the
					 * next line; indent with a
					 * tab
					 */</comment>
					<expr_stmt><expr><name pos:line="79" pos:column="41">output<pos:position pos:line="79" pos:column="47"/></name> <operator pos:line="79" pos:column="48">-=<pos:position pos:line="79" pos:column="50"/></operator> <literal type="number" pos:line="79" pos:column="51">1<pos:position pos:line="79" pos:column="52"/></literal></expr>;<pos:position pos:line="79" pos:column="53"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="80" pos:column="41">output<pos:position pos:line="80" pos:column="47"/></name><index pos:line="80" pos:column="47">[<expr><literal type="number" pos:line="80" pos:column="48">0<pos:position pos:line="80" pos:column="49"/></literal></expr>]<pos:position pos:line="80" pos:column="50"/></index></name> <operator pos:line="80" pos:column="51">=<pos:position pos:line="80" pos:column="52"/></operator> <literal type="char" pos:line="80" pos:column="53">'\t'<pos:position pos:line="80" pos:column="57"/></literal></expr>;<pos:position pos:line="80" pos:column="58"/></expr_stmt>
				}<pos:position pos:line="81" pos:column="34"/></block></then></if>
			}<pos:position pos:line="82" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="83" pos:column="25">remove<pos:position pos:line="83" pos:column="31"/></name> <operator pos:line="83" pos:column="32">=<pos:position pos:line="83" pos:column="33"/></operator> <literal type="number" pos:line="83" pos:column="34">0<pos:position pos:line="83" pos:column="35"/></literal></expr>;<pos:position pos:line="83" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then></if>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name pos:line="85" pos:column="21">remove<pos:position pos:line="85" pos:column="27"/></name></expr>)<pos:position pos:line="85" pos:column="28"/></condition><then pos:line="85" pos:column="28">
			<block type="pseudo"><continue pos:line="86" pos:column="25">continue;<pos:position pos:line="86" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="87" pos:column="17">length<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <call><name pos:line="87" pos:column="26">strlen<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">output<pos:position pos:line="87" pos:column="39"/></name></expr></argument>)<pos:position pos:line="87" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="41"/></expr_stmt>
		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><call><name pos:line="88" pos:column="21">write_in_full<pos:position pos:line="88" pos:column="34"/></name><argument_list pos:line="88" pos:column="34">(<argument><expr><name pos:line="88" pos:column="35">out_fd<pos:position pos:line="88" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="43">output<pos:position pos:line="88" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="51">length<pos:position pos:line="88" pos:column="57"/></name></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call> <operator pos:line="88" pos:column="59">!=<pos:position pos:line="88" pos:column="61"/></operator> <name pos:line="88" pos:column="62">length<pos:position pos:line="88" pos:column="68"/></name></expr>)<pos:position pos:line="88" pos:column="69"/></condition><then pos:line="88" pos:column="69"> <block pos:line="88" pos:column="70">{
			<expr_stmt><expr><name pos:line="89" pos:column="25">ret<pos:position pos:line="89" pos:column="28"/></name> <operator pos:line="89" pos:column="29">=<pos:position pos:line="89" pos:column="30"/></operator> <call><name pos:line="89" pos:column="31">write_error<pos:position pos:line="89" pos:column="42"/></name><argument_list pos:line="89" pos:column="42">(<argument><expr><call><name pos:line="89" pos:column="43">get_lock_file_path<pos:position pos:line="89" pos:column="61"/></name><argument_list pos:line="89" pos:column="61">(<argument><expr><name pos:line="89" pos:column="62">lock<pos:position pos:line="89" pos:column="66"/></name></expr></argument>)<pos:position pos:line="89" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="69"/></expr_stmt>
			<goto pos:line="90" pos:column="25">goto <name pos:line="90" pos:column="30">out<pos:position pos:line="90" pos:column="33"/></name>;<pos:position pos:line="90" pos:column="34"/></goto>
		}<pos:position pos:line="91" pos:column="18"/></block></then></if>
	}<pos:position pos:line="92" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">fclose<pos:position pos:line="93" pos:column="15"/></name><argument_list pos:line="93" pos:column="15">(<argument><expr><name pos:line="93" pos:column="16">config_file<pos:position pos:line="93" pos:column="27"/></name></expr></argument>)<pos:position pos:line="93" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="94" pos:column="9">config_file<pos:position pos:line="94" pos:column="20"/></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <name pos:line="94" pos:column="23">NULL<pos:position pos:line="94" pos:column="27"/></name></expr>;<pos:position pos:line="94" pos:column="28"/></expr_stmt>
<label><name pos:line="95" pos:column="1">commit_and_out<pos:position pos:line="95" pos:column="15"/></name>:<pos:position pos:line="95" pos:column="16"/></label>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><call><name pos:line="96" pos:column="13">commit_lock_file<pos:position pos:line="96" pos:column="29"/></name><argument_list pos:line="96" pos:column="29">(<argument><expr><name pos:line="96" pos:column="30">lock<pos:position pos:line="96" pos:column="34"/></name></expr></argument>)<pos:position pos:line="96" pos:column="35"/></argument_list></call> <operator pos:line="96" pos:column="36">&lt;<pos:position pos:line="96" pos:column="40"/></operator> <literal type="number" pos:line="96" pos:column="38">0<pos:position pos:line="96" pos:column="39"/></literal></expr>)<pos:position pos:line="96" pos:column="40"/></condition><then pos:line="96" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="17">ret<pos:position pos:line="97" pos:column="20"/></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <call><name pos:line="97" pos:column="23">error_errno<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><literal type="string" pos:line="97" pos:column="35">"could not write config file %s"<pos:position pos:line="97" pos:column="67"/></literal></expr></argument>,
				  <argument><expr><name pos:line="98" pos:column="35">config_filename<pos:position pos:line="98" pos:column="50"/></name></expr></argument>)<pos:position pos:line="98" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="52"/></expr_stmt></block></then></if>
<label><name pos:line="99" pos:column="1">out<pos:position pos:line="99" pos:column="4"/></name>:<pos:position pos:line="99" pos:column="5"/></label>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">config_file<pos:position pos:line="100" pos:column="24"/></name></expr>)<pos:position pos:line="100" pos:column="25"/></condition><then pos:line="100" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="17">fclose<pos:position pos:line="101" pos:column="23"/></name><argument_list pos:line="101" pos:column="23">(<argument><expr><name pos:line="101" pos:column="24">config_file<pos:position pos:line="101" pos:column="35"/></name></expr></argument>)<pos:position pos:line="101" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">rollback_lock_file<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">lock<pos:position pos:line="102" pos:column="32"/></name></expr></argument>)<pos:position pos:line="102" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="34"/></expr_stmt>
<label><name pos:line="103" pos:column="1">out_no_rollback<pos:position pos:line="103" pos:column="16"/></name>:<pos:position pos:line="103" pos:column="17"/></label>
	<expr_stmt><expr><call><name pos:line="104" pos:column="9">free<pos:position pos:line="104" pos:column="13"/></name><argument_list pos:line="104" pos:column="13">(<argument><expr><name pos:line="104" pos:column="14">filename_buf<pos:position pos:line="104" pos:column="26"/></name></expr></argument>)<pos:position pos:line="104" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="28"/></expr_stmt>
	<return pos:line="105" pos:column="9">return <expr><name pos:line="105" pos:column="16">ret<pos:position pos:line="105" pos:column="19"/></name></expr>;<pos:position pos:line="105" pos:column="20"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/gumtree/git_repos_function_1565_git-2.4.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">string_list_split<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">string_list<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">list<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">string<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">delim<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">maxsplit<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">count<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">p<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">string<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="34">end<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">list<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">strdup_strings<pos:position pos:line="7" pos:column="34"/></name></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">die<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><literal type="string" pos:line="8" pos:column="21">"internal error in string_list_split(): "<pos:position pos:line="8" pos:column="62"/></literal>
		    <literal type="string" pos:line="9" pos:column="21">"list-&gt;strdup_strings must be set"<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt></block></then></if>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init pos:line="10" pos:column="14">;<pos:position pos:line="10" pos:column="15"/></init><condition pos:line="10" pos:column="15">;<pos:position pos:line="10" pos:column="16"/></condition><incr/>)<pos:position pos:line="10" pos:column="17"/></control> <block pos:line="10" pos:column="18">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">count<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">++<pos:position pos:line="11" pos:column="24"/></operator></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">maxsplit<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&gt;=<pos:position pos:line="12" pos:column="35"/></operator> <literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal> <operator pos:line="12" pos:column="35">&amp;&amp;<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="38">count<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">&gt;<pos:position pos:line="12" pos:column="48"/></operator> <name pos:line="12" pos:column="46">maxsplit<pos:position pos:line="12" pos:column="54"/></name></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55"> <block pos:line="12" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">string_list_append<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name pos:line="13" pos:column="44">list<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">p<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
			<return pos:line="14" pos:column="25">return <expr><name pos:line="14" pos:column="32">count<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></return>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">end<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">strchr<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">p<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">delim<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">end<pos:position pos:line="17" pos:column="24"/></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25"> <block pos:line="17" pos:column="26">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">string_list_append_nodup<pos:position pos:line="18" pos:column="49"/></name><argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">list<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="56">xmemdupz<pos:position pos:line="18" pos:column="64"/></name><argument_list pos:line="18" pos:column="64">(<argument><expr><name pos:line="18" pos:column="65">p<pos:position pos:line="18" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="68">end<pos:position pos:line="18" pos:column="71"/></name> <operator pos:line="18" pos:column="72">-<pos:position pos:line="18" pos:column="73"/></operator> <name pos:line="18" pos:column="74">p<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">p<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">end<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">+<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">1<pos:position pos:line="19" pos:column="36"/></literal></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then> <else pos:line="20" pos:column="19">else <block pos:line="20" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">string_list_append<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">list<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">p<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
			<return pos:line="22" pos:column="25">return <expr><name pos:line="22" pos:column="32">count<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></return>
		}<pos:position pos:line="23" pos:column="18"/></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>
